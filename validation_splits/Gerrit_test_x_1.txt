Text
As you noticed in your former review, my patch originally allowed this by the presence of a MSG_IS_ERROR flag that was passed to the callback. John suggested we leave llapi_printf() alone. Next patchset implements your suggestion with two distinct callbacks, which I find clean & flexible.
as you suggested (in person) that probably should go into a template
At least put // @todo something. Helps us keep track of what still needs to be looked at in the codebase.
Be consequent with naming of method an var? isAVisible() { return aVisible; } or isVisibleA() { return visibleA; }
Be consistent about inner class references. Here you use Metadata but above you use SecureStoreLoadUtil.Metadata. In this case I am OK with either form in the class but want them to be consistent within the ~60 lines of code you have.
Because it is used below in g_list_foreach, where gpointer is mandated.
Because of presence of data-parsoid, this is not a new block level image. Title or test needs editing.
Because SQL migrations requires it for work on the ec2 credential table.
Because they need some more tweaking to supports booth modes: standalone and in tree?
Because total bytes of addrs should be greater than size.
Because we don't need anything that it provides (checking that the value is not None and encoding it) so there's not much point pulling it out of the loop below. Actually, we would have to leave it in the loop below as well since it uses the `env' outer variable.
Before the goto, you must update errcode. What happens now is that we fall to alloc_error label and then return a success status when actually an error happened and *dst was not populated.
Better to rephrase: If inode table limit has been reached, then better to increase the limit of ....
Better would be to have if (nGlobalError) { PushError( nGlobalError); return; } if (aInputString.isEmpty()) { if (GetGlobalConfig().mbEmptyStringAsZero) PushDouble(0); else PushNoValue(); return; }
bodies of "if"s must be inside brackets, even if it is only one line.
Brian - We're not storing the user_token in the cache, we store the data after decrypting and JSON-decoding. If clients were passing in token hashes only we wouldn't know that it was originally PKI.
But then there's no need to re-define the gwt-maven-plugin's dependencies. So either we use ${gwtVersion} as the gwt-maven-plugin version and we remove the plugin dependencies, or we keep it that way, with identical but "unrelated" versions for GWT and the gwt-maven-plugin. I'd happily go with the former (which would simplify the POM and aligns with what people should write unless they really need different versions of GWT and the plugin â€“ e.g. they use a patched GWT, or a patched plugin, or the plugin hasn't yet been released for the version of GWT they want to use, or the plugin has had a bugfix release), but it makes it a bit harder to test the WebAppCreator with a GWT RC (not yet pushed to Central), where the plugin hasn't yet been released (because it cannot update its GWT dependencies yet). WDYT?
But what we are using is oslo version. I think this should be fixed in oslo. I submitted a patch to oslo https://review.openstack.org/56211
But you are already the NAT gateway (in 1) so no one else should be using gateway address? Anyway I'm fine with -3 : please just add a comment to explain why it's -3 :)
By definition, nothing is required when we have macros telling whether it is present or not. To avoid having to update this file every time something in one of the implementation files changes, I would move that documentation there. This file is simply about SIMD and defining SIMD properties, not about what SIMD instructions are used in different kernels. Specific comments about verlet kernels belong in the verlet kernel code, not here.
By the way, why are you adding patches for specific platform w/o $(if $(filter blah?
c.patchSetId isn't automatically populated. You need to ensure its filled in yourself, unless you use the one that is already parsed and computed during validateChangeList() and stored inside of the commits map.
C++ style comments and I guess includ pcap.h *should* be garded with #ifdef HAVE_LIBPCAP
call the function, pass the device also into the function
Can do, will have to swap the mechanisms of how it works (from false to true), and set the default to true (ie device detection enabled)
Can I call GetMatrix w/out having called SetDataFrameObject? Add a bried usage description here.
Can the selection of the common part be moved one level higher until a Fintek chip comes along which is different? No idea if that is possible in Kconfig.
Can this actually happen? Wouldn't revision have to have _number 0, so the previous comparison would be false?
Can we get this from CPUID instead of hard coding it?
Can we not use CONFIG_MMCONF_BASE_ADDRESS for these constants?
Can we write a test for this? It seems to be an important semantic aspect of the interface, worth recording.
can you add a bit of documentation in the docstring?
Can you clarify what is meant by "ListBox => PreNotify() ..."? That doesn't make things any clearer...
can you combine the declaration of ctstr above with this assignment ?
can you move on top of the file (like other dissector file)
Can you please update the same in cli-cmd-snapshot.c
Can you wrap arguments like this (containing search pattern) in double quotes please? Fish shell (and probably zsh and alike) fails to execute it without it.
Can't we club these two cases something like : case GF_SNAP_OPTION_TYPE_ACTIVATE: GF_SNAP_OPTION_TYPE_DEACTIVATE:
cbk->mask will only contain bricks where the request has been sent. A read will never have a bit corresponding to a brick being healed on cbk->mask set, so the & is not needed. However, for writes (that also send the requests to bricks being healed), doing the & will cause that bricks that were unhealthy at the start of the operation will be marked again as bad after completing the operation, even if the operation succeeded. I think this is not correct.
Change looks fine, but please fix up this bad rebase.
change the error message to reflect that key size is big.
change this to /srv/deployment/mathoid/mathoid the duplicate mathoid is so if you have any other repos (eventually) or a temp dir, or an output dir, it can all be in the same place
Change this to throw CompileException instead. Elsewhere on failure you throw IOException or CompileException.
Change to: $string['pendingsince'] = 'pending since %s';
Changed from heap to stack based allocation, will now only allocate enough to hold idmap header.
Changed to check ahead and simply log the fact that we will not overwrite files.
changed to prefix operator++ (and further down in the code, too) I had it mostly coded with date serial numbers, but had to make functions that are available for class Date. I could only find appropiate date serial number functions in the sc/addin/analysis module, a module that I would rather move entirely to the 'normal' calc function module once the Excel-analysis-addin can be considered obsolete. IMHO that would reduce the complexity of the calc-function code. I will peg Date to date serial number conversion as a toDo item on my lo-task stack.
Check if the number of neighbors integer type can be obtained as a trait from the KdTree class. Move body to .hxx use this->m_NumberOfNeighbors
Combine both the if statements into one single if statement.
Comment is inaccurate (the code assumes stripe offset is set). /* Make sure stripe offset is in OST list. */
Comment should have a space and uppercase the first letter like in the other comments.
comment why -1, confusing otherwise to first time readers.
commit.hashCode() should be sufficient. A commit can only have one author.
compareTo on strings! Need to use version comparator, I just added comment so it will get fixed
Concatenate the calls to append: StringBuilder msg = new StringBuilder() .append("\n") .append("Can not find the %s at this location: %s\n") .append("Please provide alternative URL");
Consider merging these uncommon write barrier forms in to one function that takes flags. I think there's a bug in the later atomic function fixes that this would help address.
consider using 0.0 instead of another variable called zero.
Consider using expert_add_info and use the proto_item* returned from proto_tree_add_item(ath_tree, hf_ath_hlen, ...) so that the hlen field that is bad is highlighted)
CONTROLLARE. forse Ã¨ download, forse Ã¨ scaricamenti
Conversion was done for binary files to be stored in earlier formats. Encountering such versions isn't the case anymore with copy&paste and conversion would never be executed, so that code could be removed along with the check. If you want you can remove that code in a follow-up patch, getting rid of unused code is always good :-) Probably the reason why you had to add the check if a version is set at all is related to that, actually the stream should have the version SOFFICE_FILEFORMAT_CURRENT set so all parts involved elsewhere that do check the version get that correct. Would be nice if you could spot the place where that should be done. Anyhow, I'll push the current patch as is.
Copied from sys_openbsd_386s.s and missed - fixed :)
Copy the password hash from $oldCentral to $newCentral? You should probably run that idea past Chris first.
Correct, I mentioned in the commit message that it's undocumented.
Cosmetic: According to last changes related to tvb_captured_length and tvb_reported_length it is good point to start thinking about "reported" case (btsnoop format provide both frame length). In "reported" case we can have only part of frame: for example first 2 bytes. This dissector will fail at this line, so nothing will be dissected, but if you move lines 131-140,(169)171-181 directly before place when it will be use then we can dissect some fields. "context" can be filled somewhere about line current 202, "rf_channel" can be put between lines 144-145, "aa_offenses" can be fetch after 170 or where "context" is filled, the problem is "flags", but after moved it after line 147 you are able to decode "btle_rf_channel" field etc.
Could be if (!isset($colPos) || $cRow['colPos'] !== $colPos) { since colPos is set using $cRow['colPos'], thus the type must be the same. Just have to remove $colPos = '' a few lines before.
could this moved to config.h instead of having it on the command line?
Could we have a single definition of such constants? :-) Perhaps some org.ovirt.engine.ui.uicommonweb.StringConstants class?
Could you add a quick comment, something like "Return any uncommitted resources"? It took me 2 minutes to figure this out even though I know most of this code already.
Could you add another test which uses line breaks after "${" and before "}"?
Could you also update RELEASE_NOTES.markdown in the project root. You are adding interfaces, it would be great to document them there.
could you explain why we need wrap this code in GuiActionRunner?
Could you factor the whole function out into reboot_service_impl so we don't need to gotos?
Couldn't this be simplified inline to rebalance_completed () ? Please note rebalance_completed has a bug, you should only check for 'completed' status instead of inversing for 'in progress'.
cpu_allocation_ratio is a global config option fro the core filter - not a per hypervisor setting ?
Create static BugzillaRestCreateTaskSchema.getFieldNameFromAttributeName() and add an ImmutableMap
cscope is again not showing me external callers in this series of patches. :( Who is using this?
ctr is not something that we would want to call out in UI as users may not understand what it is about. Please use the expanded form in all cases.
Currently the array is always allocated with new if own_arrays_ is true. Also delete nullptr is defined to be a NOP.
Currently, bucket name cannot contain symbols from html. That is why I remove escaping.
Damn it, that wasn't supposed to be there. I'll remove it.
Dan (and me) like "Vdsm" - we already discussed this few month ago.
debug print but not errant, and commented out. i got tired of putting back every time i came to this routine.
declaration of "tv" can put in this block, but it's not kernel code so it's not a big deal.
#NAME?
dev_find_slot() explicitly returns a 0 (yeah, it's the same as a NULL). Maybe that should be changed to return a NULL, but at this point, I think checking for 0 is reasonable. yes, if it's 0, we still reach the code. I've changed it to not dereference it before checking it though.
DHT_MSG_INODE_LK_ERROR sounds similar. Can that be used instead? If you add a new msgid, GLFS_DHT_NUM_MESSAGES needs to be updated.
dict_ref (src->ctx) would ensure that ctx is not destroyed with the destruction of the @src event.
did you checked that this change is not breaks other tests?
did you want to save the three characters "urn"? not worth it IMO ;)
divider/spacer not needed any more - spaces should be created by t3skin itself
Do not remove the entire statement, SeekGroup() has side effects.
Do people really type all that junk? ;-) Anyway I added it together with how to avoid typing all that junk. :-)
Do we any chance to detect whether the call was made from outside the TYPO3 Namespace? Otherwise we'll get lots of deprecations if we call a public method from another class in Core, which is public but not part of the API.
Do we have a working solution if one still need the Gerrit-Module?
Do we need to enforce the same type for all elements in the array, or do we not care as long it's one of the string/numeric/numeric string primitives?
Do we really need a separate header for two trivial definitions?
Do you mean "will be removed from the group"? If so, I'd add the "From the group" to avoid confusion. Some might think that the user is going to be removed from the system, i.e. deleted. There are a couple of minor white spaces here (shown in red).
Do you need to check $result['edit']['result'] === 'Success'?
Do you plan to address the runtime problem with N calls to cinder, where N is the number of hosts?
Doc string needs to be changed. This does not return anything. it can be something like- This function verify detail of referenced datastore.
docstrings please and thank you :D
does that make sense? why not just leave the reservation?
Does this change apply to all uses of this rule? I suggest making this plural form optional so people can transition to using it over time rather than flooding them with warnings.
Does time_sec_to_str "format" the field better than an FT_UINT16? Or does it just add an "s" to the value (which you may want to keep for consistency).
Doesn't much matter, either way. Let's omit __vectorcall from the list of tested attributes with all clang except on Windows.
Doesn't seem like we need a loop here. We can use local->pending[rb_index][idx] = hton32(1);
Doing a blind re.replace on an XML is a bug waiting to happen. The XML has structure and it is safer to use it. Please parse the XML and replace only the element you expect. Unless, of course, you have a particular intention here.
Done (gerrit tells me off if the commit subject is too long: (W) 873ed2c: commit subject >65 characters; use shorter first paragraph but does the go project really care?)
Done (hopefully the text is also otherwise a bit clearer).
Done in https://gerrit-review.googlesource.com/38303
Done it looks like Gerrit missing a feature: remove comments, that don't make any sense, like these below ;-) Thanks for the hint with java_library and resource.
Done P.S: I was confused between EBADF and EBADFD. Then I tried to be consistent as I see libgfapi returning EBADFD in several other glfs_* methods when glfs_resolve_fd() fails.
Done, added QT_DEPRECATED_SINCE check, and changed to QT_DEPRECATED
Done, although this filter is specialized for 3D only.
Done. While writing the function I've also unpacked it from the current one-line version into a lengthier but more easily read equivalent using if-else.
Done. Wonder why checkstyle did not complain here this time.
don't confuse algorithm with implementation. env is not supposed to be used this way as it's touched from different places. it was said many times that using env to pass data between different codepaths is a bad idea.
Don't encode the value right away. Instead we should lazily encode the value only when the serialization stream needs it. Thus the constructor is just: this.object = object; this.codec = codec; this.hash = object.hashCode();
Don't introduce new types unless you truly need them; they are supposed to be equivalence classes, and the more you define, the larger the policy will grow (GS4 policy has significant bloat due to unnecessary types that get _exactly_ the same allow rules as existing types).
don't remove this comment here! the require once is obsolete only
Don't set the `idx_type` for now, as it may also contain internal errors (I would leave the code path in couchdb for dealing with it though, so that I can add it later.
Don't think this is really needed. See comments in PartialStateSystem. Also, protected fields, no no!
Don't use exceptions for control flow. Use Ints.tryParse instead.
don't use hard coded type names: link.isOfType(CoreRelationTypes.Default_Hierarchical__Child)
Don't you need to unlink all the socket files as well?
ec_combine_statfs is updates the avail size to max, with this we are not getting the correct value. In the below output, avail size should be 99.7G. root@rh1:~/workspace/git/glusterfs # df -h /mnt Filesystem Size Used Avail Use% Mounted on rh1:/vol1 100G 290M 100G 1% /mnt
Either we have MetaDataUpdate that is batch-oriented or we don't. It doesn't make any sense to change the batch behavior for the same instance after it was created. Ever. So, drop that setter and add second assisted inject constructor that accepts BatchRefUpdate parameter instead (and make the batch field final as pointed out above).
Either you don't need these brackets, or you need brackets above where you do: if(icmp->type != ICMP_ECHO && icmp->type != ICMP_ECHOREPLY) { Can you make the two consistent?
Element. This one stuck out. I think the only ones to try to capitalize are "Allocation, Type, Element", since that trio is the dominant set of APIs for interacting with any sort of data from Java.
Empty space should be removed per previous comment.
Enable the deprecation log here is not finally discussed. I'm 60/40 for not logging, because the deprecation log will get extremely flooded. When enabling, only the first setting (and not all three) should be logged to minimize the flood. The logging could be enabled in the next version, and till then it should be documented very well.
Entering an invalid object size limit results in displaying an 'Internal Server Error'. If possible it should display a proper error message, saying that the limit is invalid.
ERROR: TRUE, FALSE and NULL must be uppercase; expected "FALSE" but found "false"
every bucket needs to have its own gen to avoid sharing updates/deletes with other buckets.
ewwww. Longer term, why are we not just using monotonic timers on x86? Still, this is known good, we can take it as an action item, as there might be a reason.
except doesn't this failure mean "i couldn't read the command file"? for which "no command" doesn't seem like a bad error.
Fair enough. But still deleting registry entries is wrong - you won't be able to run that program again without them. You can disable service from inside your program too http://godoc.org/code.google.com/p/winsvc/mgr.
False is the default, so I suggest we remove it. I've never seen it used before and it just made me scratch my head as to what it was for.
features.quota-deem-statfs should be allowed to reset When resetting features.quota-deem-statfs, it should be cleared when quota is disabled. It should be set to on when quota is enabled
Feedback from Michael (Pergament) (Author of this code) : It should be && according to https://tools.ietf.org/html/rfc7432 (7, 7.4). If it is smaller than neither IPv4 not IPv6 address is provided.
Field length expected here is 2, but field below is FT_INT32. Is this an unsigned short (FT_UINT16) ?
Find a way to create the logger elsewhere, because we cannot specify in this configuration file a path where the user is allowed to write. By default, the file will be in the current eclipse install folder, but as Max pointed out, many users ahve eclipse installed in a folder where they're not allowed to write...
FindBugs is complaining about these parameters being null.
First, we'd need to fix grompp, since it wrote this file ;-)
FIXME! As mentioned elsewhere, the polling wait is likely unnecessary in the OpenCL implementation.
flan I don't think we used such rules for comments though. Maybe NOTE(flan) or XXX(flan) ?
Flow control keywords must be followed by a single space
Flow control keywords must be followed by a single space
follow up? hate all this stuff getting bikeshed for weeks for that sort of thing. can you also check out 6465, 6463.
For a collection to be searchable, there has to be explicit Backend support (it's not generic, you don't get it 'for free'). So unless *you* implemented search for Gluster Volumes in the Backend, the user will not be able to search. So, unless you did indeed implement this in Backend - please remove this url parameter
For consistency, this could be named "storeInHttpSession".
For coreboot, maybe you could insert: assert(OpFlag == AccessWidth8); before the "if" to ensure that coreboot users aren't tripped up. I'm the first guy to discourage unnecessary changes to vendorcode, but this code is broken and we should somehow warn users about it. It would be even better if we could make the code fail by static analysis instead of a runtime assert.
For readability I prefer an inverted condition as guard clause.
For some reason I thought that the overflow behavior was unnecessary, now I see that it is used in case of multiple dexes. I reverted the change.
For the current situation: core plugins are developed by core team, experimental - developed by PI and Mos-Engineering teams. In the future: core plugins - certified by Mirantis, experimental - verified by Mirantis, and thirdparty - other plugins.
For the final commit remove "[part 2of 2]" and join the "ODFF function FDIST" to the first summary line.
For those tracking trunk, we cannot delete this migration. Just need to make a new migration that migrates the data and then drops this table.
fragmentDescriptors probably the most appropriate name here.
frame := getcallersp(unsafe.Pointer(&siz)) Delete next three lines. Also, given that now it's just the callersp, s/frame/sp/ everywhere, including in the defer struct field name.
From what I can gather, AsciiDoc should be camel-case http://en.wikipedia.org/wiki/AsciiDoc
Function call for single line that removes from dict?
