Text
Minor and optional cleanup: I think we can drop support for mw:WikiLink/* at this point both here and in magLinkRe.
Minor code style thing: please remove the extraneous parentheses around (empty($USER->accountprefs) && empty($i->theme)).
missing a comma here, can you help adding it back? ;)
mmm there are two __init__ functions here. Please check and re-upload the patch for review..
More complete would be: ÐžÐ¶Ð¸Ð´Ð°Ð½Ð¸Ðµ Ð·Ð°Ð³Ñ€ÑƒÐ·ÐºÐ¸ Ñ�Ð¿Ð¸Ñ�ÐºÐ° Ð³Ð¾Ñ€Ð¾Ð´Ð¾Ð², Ñ�Ð¾ÐµÐ´Ð¸Ð½ÐµÐ½Ð¸Ðµ Ð¼ÐµÐ´Ð»ÐµÐ½Ð¾
More or less the same steps as described in the comment Sep 13 11:50 AM change: https://gerrit-review.googlesource.com/#/c/46171/16/gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitModule.java Can you try it with non existing H2 Database: <Resource name="jdbc/ReviewDb" type="javax.sql.DataSource" username="" driverClassName="org.h2.Driver" password="" url="jdbc:h2:file:/home/davido/projects/test_site_auto/db/ReviewDB" maxActive="100" maxIdle="20"/>
Move up with other "just set reserved = 7" case statements?
Moving this logic to ProcjectControl will also require additional modifications in ReceiveCommits. My approach fixes both issues in one place. Also this approach protect us from making same error in future. Personally I wouldn't move this logic to upper level. Signature of this method can be changed to canCreate(Map<Stirng, Ref>, RevWalk, RevObject) instead of using Repository. But IMO will keep this logic here to prevent from this issue in future.
My bad, I did add one but then removed it again and forgot to change that line back
My change provides two options for clobber. So, the client can pass its own new rev id to couchdb or ask couchdb to generate a new rev id. This code path corresponds to the second case. So, the flag and expiration values here will be overwritten by couchdb, and you won't get them through your changes in mc_tap.
My idea was just to drop the parent class and move the methods down to the only inheriting class. But I can modify the __str__ in one shot.
My Nit Pref: eliminate if, just return the boolean evaluation.
My only worry here is that future c or assembly versions of memcmp16 might use x14, x15. I have used a more conservative approach in my tree: 1852 .Ldo_memcmp16: 1853 /* save lr, and return value if comparison equal */ 1854 stp x0, x30, [sp, #-16]! 1855 1856 /* set-up args for __memcmp16 */ 1857 mov x0, x2 1858 uxtw x2, w3 1859 1860 bl __memcmp16 1861 1862 /* restore lr, and return value if comparison equal */ 1863 ldp x1, x30, [sp], #16 1864 1865 /* if the strings are equal (i.e. x0 == 0) then return length comparison */ 1866 cmp x0, #0 1867 csel x0, x1, x0, eq 1868 1869 ret 1870 END art_quick_string_compareto
My point is that div_fsys1 is probably a fixed size as defined by the data sheet, and an unsigned int is not. So if it's a 32 bit value, as suggested by the fact that you're reading it with readl below, you should use uint32_t to ensure it's the right size. That struct might need to be fixed up too.
My point is that let's maintain our own configs even fi they are the same as the default ones, and change them soon by considering various factors including perf results.
My theory of this test: count goes to zero because the delegates go far enough out of bounds to be destroyed. But because of the easing formula, you have to flick harder to make them go that far out of bounds now.
need to check for values <0 and use 1 (second) in that case.
need to guard this with a static bool so it's only executed once, assuming the above "her_dissector_delete()" is removed.
need to unify the translation of â€œDetails", to me "è¯¦ç»†è®¯æ�¯â€œ sounds better.
Need to use: with self.assertRaises(ex.NotSingleNameNodeException): validator.validate(cluster)
need to assumeTrue(cygProfile.exists()); when the trace is not present
needs to be space around the => eg $postid => $post
never mind. found it in "notification_internal_activity" :) will see what I can do
New messages don't have description in MessagesQqq.php or maintenance/language/messages.inc
Next few paragraphs look more like they should be code comments than change description. If there isn't a good place to put them in the code, maybe we should start an engine-internals.qdoc file (which is one big /*! \internal */ block)
next time, describe to which repository they're going.
nit: this import is not needed anymore and can be removed
nit: this sentence has six commas and two separate alternations ('or's). Maybe it could be split up?
Nit: While assimulating is a word that seem to exist, my only association was that it was a misspelling of assimilate. This leads me to believe that it's a word that non-native English readers might have trouble interpreting the right nuance of. This is the commit message however, so in this case it isn't the end of the world, not many will read it compared to the actual guide. :)
nitpick: "$reset = $cfglang = $CFG->lang = null;" would have been even clearer here
nitpick: add a space between "if" and its opening pare
nitpick: if you move this line below, then you don't have to comment out the line below...
Nitpick: The pointer is only set in the ctor, so it should be const. Similarly in KEY2StyleContext.
no chance vds is null? lets say vds moved to error, then user remove it from system, will this timer still trigger?
No globals please if at all possible. But more generally, this is a base class - please stick specific functionality into derived classes. You already did that in SlideFragmentHandler for parts of it - for PPT_TOKEN( text ), when it comes in the SlideFragmentHandler context, just generate a new child context - e.g. like new SlideTimingContext( *this, mpSlidePersistPtr->getTimeNodeList() ) in that file. With that, you will get rid of that global state anyway.
no hsc in exceptions please. the exception handler does take care of proper encoding
No it doesn't. We just have to parse repo-hooks childNodes after the project childNodes. Which you already do above. :-)
No need for indentation on the last line, or even the preceding newline for that matter.
No need for indirection here. Merge benchmarkTCPConcurrentReadWrite into this function, and use the addr "127.0.0.1:0" directly.
No need for Provider here, inject FlushCashe directly. Both PostCaches & FlushCache are singletons. So the Provider hurts more than it helps here. E. g. on line 105 it get called in a loop and returns allways the same singleton instance.
No need for the above... The commit log & diff & etc provides info about the change.
no need for this change this, you are not using the "e"
no need to be redundant "described in the report". but this is bogus anyway - commit message are expected to be self-contained, and the bug links are merely "for more info, see ..." style.
No need to check for NULL because g_strdup will do this. And if value == NULL then tv->value will be uninitialised.
No!! More sleeps!! I think we're up to 22 seconds now!
No, /index.php/Foo is an Apache-mod_php-ism, not a guaranteed feature. Standard PHP anywhere else does not include that handling. You're going to have to explain how you expect 'redirected from' from a HTTP redirect would be handled. Because so far everyone who's attempted to turn redirect pages into HTTP redirects while preserving 'redirected from' properly has failed.
No, because this file and this macro is also used from plain C code, which only accepts this form of casting. Adding #ifdefs just for this purpose does not seem useful.
No, but its impact is pretty minimal so I wouldn't worry about it.
no, I'd like to keep the API of this class close to ObjectId
No, this is here by purpose to document that this is a static method, as that is not otherwise evident without looking at the header.
No, this is not sufficient. You also need to call checkXvgFile() using this second data instance. And please create a separate scope for this, so that the previous TestReferenceData object is destructed before this one is created; otherwise, it's difficult to reason that things work as expected , since there is (a bit unfortunately) a lot of logic in the destructor.
No. Note that what I write is not real and reciprocal space. Below the cut-off we have both the real space and reciprocal space contribution.
No. The exception is needed so it is rethrown if the user decides to cancel. User can only see exception stack trace in the log.
Non-standard ports (And other more exotic configs) now have their own section that I've added in this commit
Nope, forgot to cherry-pick that one. Thanks for noticing, fixed.
not a big thing but sequence number should have been bumped
Not a fan of createpopupmenu, it's huge and hard to read. reset columns I will do. I can be convinced of using cpm too.
Not all build tools use -j. Thus the simpler approach of directly setting build_cmd="make -j2"/"jom -j4" might be better.
Not currently. It's somewhat different from what the current reference data approach uses, as I guess that you would want to generate that state using some code that is not part of the test (since if you can generate the state with code that runs anywhere, you do not really benefit from serialization). Generic serialization is also a significant amount of code, even if straightforward (and with C++, it requires some careful thinking on what kind of constraints it enforces on the serializable types, unless you make the object itself responsible for the serialization).
Not having doxygen documentation for the defines will generate warnings when merged to master.
not if you want to compare from a raw byte array used to serialize object IDs
Not needed (in this case) since a 'set' is being done immediately following
Not really a fan of making it an error, as it is perfectly legitimate policy. Maybe a warning.
Not related, but may be better to move to constructPorperty(String suffix) or something like that.
Not sure about this method. It seems to make sense to me the way Dan explained it but I'm not comfortable giving this change a +2 since I didn't write any of the original code and may not be aware of all of the issues.
not sure how important this is, but other lines seem to have a tab at the beginning of the line and the added lines uses spaces. :D
Not sure what our own script has to do with the annotation. The export pragma could all be moved into the imp file if you prefer that. This would leave us with only the keep for where we misusing the preprocessor as template language (pme.c). I think we should replace this anynow. Right now if one runs it on any of the c++ files, IWYU makes changes we don't want. See the issues in the commit message. But I don't see how that could be fixed by using a script to read the output. It seems it would be easier to patch IWYU than replicating the header-analysis in a post-processing script.
Not sure where these param are from args or kwargs? Suggest to doc them clearly: :param args: ... :param kwargs: A dict of keyword arguments to be passed to the method, which should contain: â€˜usernameâ€™, â€˜passwordâ€™, â€˜auth_urlâ€™, â€˜api_versionâ€™ parameters.
Not sure why all these if statements are necessary... see the definition for optional_str() on line 579
Not sure why this one is confusing. It returns the list of files, so it has to be immediate, and it returns the files in that directory, not ones in sub directories.
not sure why we need this since it's a read.
not worth including the regular version number too?
Note that the rtl:: prefix removal is planned to be done by a scripted change somewhen in the near future, so while this change is ok, it should be less work for both you and the review if you do not specifically aim for these changes.
Note that these can be usually written simpler as just "" instead of OUString().
Note that this means envp is empty, while you fill in LD_LIBRARY_PATH, PATH, and TMPDIR in the gomobile code. I'm not sure how to get the environment or if it's even necessary. (All the Go environment functions in runtime assume that Go has already been somewhat initialized.)
Now that I'm really looking at the code, would not the right fix be to change toknext to be signed instead of unsigned (so that the for loop stops immediately), or to check that it is > 0? if tokens = NULL, then parser->toknext will always be set to 0. That said, your change is somehow equivalent so we could keep it as-is.
now the test doesn't install SG at all. it will fall on the first run if SG is already installed on vm.
Now we have a copy of fiemap and a pointer fiemap. Which one is the "right" one?
Oh I'm all for small tests ;) But here we need data in the queue to flush it, and data to be present to take() it. So they kind of need to be done in sequence.
Oh right the $ to global is a nicer idea. I have just removed jquery statement and did not add the global. That is just a few errors and they do need fixing.
oh, good catch! funny this slipped in ... btw: ArrayUtility from extbase should be reviewed and at first glance it seems most of it could be merged to core ArrayUtility.
OH, I forgot your that CL :-) However STLPORT_WHITELIST isn't defined yet at this point. In config.mk it loads envsetup.mk (which eventually loads the product makefiles) before it defines STLPORT_WHITELIST. On the other hand, we can remove libstlport from this file, and add it to specific device's makefile, such as device/asus/flo/device-common.mk. I'd really like to keep the device names out of the build project.
Oh, thanx! I actually did not know that it was possible ... like Code Review for team learning :-) Will fix in the next patch-set.
Oh, you want it really obvious what type the variable is :)
Ohhh. I have a white background, so I didn't catch the yellow highlight. Thanks!
OK will work on the object containing tolerances for both precisions, with the helper functions intended to be the main way to construct them.
ok, but then i suggest you turn that thing into a macro which you can document centrally (QT_SEGMENTED_STRING_LITERAL or so). also, a warning in the QStringLiteral doc would be in order if it's not there yet.
Ok, I found an abandoned change in Gerrit from KyÃ¶sti [2], where Stefan commented this. Â»On ich7 / i945 pmbase is already set in romstage... Please drop #if 0 code...Â« Guess that justifies a comment so it is clear when comparing `lpc.c` from different PCHs. [2] http://review.coreboot.org/#/c/302/8/src/southbridge/intel/i82801gx/lpc.c
Ok, I've changed the method name to 'validate'. Not sure though if it's worth the effort to change the already existing listeners.
OK, thanks. The approach here and in my patch work fine if the user controls everything they way they want. When auto-detecting everything, this patch is better on non-AVX hardware that happens to have RDTSCP. Otherwise, they effectively work the same. When compiling on a new build host for old compute nodes, this patch will sometimes require the user to make two active settings to make a functional mdrun. That might mean they go hunting for docs twice, unless they find the new install guide section. At least we don't fail mysteriously any more! When compiling on an old build host for new compute nodes, both patches will sometimes make an mdrun that could be better in up to two ways. We could add a nag message for the double negation of the new code in gmx_detect_hardware.c "You, too, could be using RDTSCP!". AFAIK the proposition that using RDTSCP is good in user space is just educated guesswork, though. I was slightly concerned about one of the latter cases (build host is old, user knows they have AVX on the compute nodes, so they know to set SIMD and don't know RDTSCP exists / is relevant), but if we add the new nag then this case is solved well enough. So I'm happy to adopt this solution. Thanks! Shall I abandon my patch, send reviewers here, and one of us work on Erik's feedback and/or the new nag? If we add the nag, commit message needs updating.
OK, will change it - there was a debate about whether we should also check for 'false', 'False' etc., which is why it was a list. I left it like that in case we changed our minds! Provided we don't, I'll just make it a simple equality check!
OK. I'll check if [1] still works with asiidoctor before pursuing it any further then. [1] https://gerrit-review.googlesource.com/#/c/49451/
OK. I agree there's a sense that the state of the machine is not const.
Okay, I understand what you're trying to do here. My concern is that we change the state from BACKFILL to IN_MEMORY even if there are backfill items in the queue or unAcked items in the ACK queue that we will implement soon. This will cause some confusions in debugging, showing stats in UI, etc. Let's add this to the to-do list and address it as a separate commit.
Omit the err at the end. Its the result of the last possible test making it probably meaningless and possibly misleading.
On 2008/11/11 10:23:37, David Turner wrote: > hmm, this is a bit hard to understand. May I suggest you to replace it with the > following: > """ > XXX: the !/bin/bash invocation on the first line has been > commented out because it doesn't work on FreeBSD > (which uses /usr/local/bin/bash, instead of /bin/bash) > > note that, with this comment, this script is invoked > with the right bash shell from build/core/main.mk > """ > Well, your version is more easy to understand. I'll replace comment in ammended commit.
On HTTP /abandon and /restore accept no body. This results in null being passed to the apply() method, which handles it gracefully by creating an empty input. I think its common to call /abandon and /restore with no input. Your tests are certainly showing that. Perhaps we should overload abandon() and restore() methods to also have a no-arg form that passes null to apply the same way the HTTP interface does when the client doesn't supply a body.
On second sought: actually you don't need this file (endpoint) at all. We have already POST /changes that creates a change and what are you doing here is to delegate to its apply() method, after translating your own Input to ChangeInfo. The only reason to have this class is to get the UiAction for granted (Guice DynamicItem binding and discovery). But you could solve this in different way: just construct UiAction on you own in ProjectJson and add it to actions map manually. See an example how it's done in InlineEdit series: [1]. Now, on the client side, from your custom UiAction you can invoke the original REST endpoint: POST /changes. The only difference to current solution: you would need to pass project name too, obviously. This also raises the question do we want to have this button on project info screen at all? We could add it to main page (or may be just add a keyboard shortcut), in wich case we are not in project context any more and the dialog must be extended to provide project name (with suggestion oracle for project, like it already does for branches). I don't have strong preference for one of these solutions. So, you can let it as is for now and wait for opinion of other reveiwers. [1] https://gerrit-review.googlesource.com/#/c/58991/14/ gerrit-server/src/main/java/com/google/gerrit/server/edit/ChangeEditJson.java
Only the find_package call actually needs to be in the itk-module-init.cmake file to make the imported targets visible globally. Everything else should be able to go inside the module CMakeLists.txt file.
Only the PatchSet.Id is required here. So cd.change(db).currentPatchSetId() is a better approach.
Oops, I guess I forgot to type 'make' after fixing that. Anyway, I finished my commits review in the meantime too.
Optional nit: this could go on the same line as excludes
or ask the maintainer to commit the change on the author's behalf.
Or, if the check is needed, do you mind adding a comment about when this can be false?
Other parts rely on non-null values, perhaps this should be critical. Anyway, let's not expand preconditions beyond JRE for now and submit the patchset that I already +2'd.
Our convention here is to have URL like this: /node/controller/reloadCertificate
OUString::replaceAll does not modify the OUString but returns a new OUString instead. this means that when converting an existing String *Replace* call you need to assign the returned value to the original string. you should get a warning about an "unused result" here but strangely i'm not seeing a warning with gcc 4.7, no idea why... at least the Clang tinderbox caught the problem. fixed in commit 03a381eaa58d77cf26dfa8d916d1ecda865c1937
P.S. - now that this is an attribute of the campaign, not an action, we need to change the i18n string to "Archived"
packet-s7comm.c:2550:23: error: unused parameter 'data' [-Werror,-Wunused-parameter] void *data) (use _U_ to set unused parameter)
pass errno as the third param and remove the "errno=%d" component.
Passing a whole volfile path this way seems a bit fragile. Would it be possible to pass the flag and a *relative* path, so that the receiver constructs the final path instead of the sender?
Patch Set 1: Fails (1 inline comment) I just tried this change on tot gavd on my waluigi and it didn't detect headphone insertion. I went back to just tot, the change renaming udev_listen -> udev_sound, and it does work. I know the commands for alsa were not flushed out yet in the max98095 codec, is that the problem right now?
Patch Set 1: Fails @Aske, really nice UI changes and the image GUI has improved a lot. One thins thou when trying to hide and element on a page which not has been published. An exception is thrown, maybe something that should be handled inside the PHP code instead.
Patch Set 1: Fails this CL is breaking the CQ. please try running it against a 32bit x86 board (like x86-alex or x86-generic) before re-submitting. make -j32 BUILD=/build/butterfly/tmp/portage/chromeos-base/vboot_reference-1.0-r811/work/vboot_reference-1.0/build-main ARCH=x86 MINIMAL=minimal runtests Using qemu for testing. Copying qemu binary. cp: cannot stat '/usr/bin/qemu-x86': No such file or directory make: *** [qemu_install] Error 1 * ERROR: chromeos-base/vboot_reference-1.0-r811 failed (test phase):
Patch Set 1: I would prefer that you didn't submit this (1 inline comment) LGTM after a small bug fix.
Patch Set 1: I would prefer that you didn't submit this Hi ananth, I agree with Markus that I'm in favor of not merging this. What xml parser ate you using that is not capable of empty, closing tags? Esp. if you set the HTML tendering mode to XHTML, the output is a subset of XML. If you need to have empty closing tags replaced by q dedicated closing tag for a special use case, you could ask on http://forum.typo3.org to figure out a solution for you. I'm confident that it's possible, however I would not change TYPO3's default behavior. Thanks for your understanding. Yours Steffen
Patch Set 1: I would prefer that you didn't submit this I agree with the first reviewer, turning the condition around will make it better readable. Besides that, great idea and solution!
Patch Set 1: I would prefer that you didn't submit this Seems like you commited some too much ;)
Patch Set 1: Looks good to me, approved LGTM; and yes please do upstream.
Patch Set 1: Looks good to me, but someone else must approve (2 inline comments) LGTM with a couple of small optional suggestions. I agree that using more realistic sites to consume memory would be nice, but I think getting something up and running soon would be valuable as well.
Patch Set 1: Looks good to me, but someone else must approve Looks fine though agree with Chris's comment that exported strings should be defined in a header file that can be shared.
Patch Set 1: Looks good to me, but someone else must approve Would wonder about chattr during runtime, but yeah you're likely right (assuming this has been image tested too).
Patch Set 1: Alon, Regardless of discussion we have in the bug #996021 calling .disconnect() when sdk instance is no longer needed is a good change, i think it can confidently go in.
Patch Set 1: Sorry, the news be module is completely broken for me ... sql error, then namespace errors ... but the news be module with 4-7 suffers from the exact error my patch has fixed which would be reintroduced with this "fix". On top of that, there is no point to check for the object we just created, thus we either remove the check, then we are back to the state before my patch which creates a warning. Please tell me the exact error that happens, otherwise I can not reproduce the regression.
Patch Set 1: Thanks for your reviews. To be honest, it would be nice, if you could be a bit more friendly to - not first time in case of Thomas, but occasional - contributors. IMHO one or two -1 are enough for the beginning. Bjrn and Philipp, you're really helpful contributors, thanks for that. We were discussing the "patch for a patch rule" over the last days, which we enjoined on ourselves as core team members some time ago (and it works in at least most of the cases I think). Please don't treat this as harsh words, I just want to make you aware of the fact that motivating every new contributor is very important for us, and hopefully also for you as an essential part of the TYPO3 community. Thanks for your support! Steffen P.S: The reason, why Jenkins fails is probably, because of the parent commit is very old and the patch has to be rebased. Will try to get this done now (if network connection allows)
Patch Set 12: Code-Review+2 currently our enums reflect the super-set of the devices which are supported. yeah - we are not allow flexibility at this stage.
Patch Set 13: Fails well, looks much better, you fixed the alerts, but in iscsi, block master domain, i get attribute error on missing (dom): MainThread::WARNING::2011-12-08 18:32:40,319::hsm::2578::Storage.HSM::(prepareForShutdown) Failed to stop RepoStats thread Traceback (most recent call last): File "/usr/share/vdsm/storage/hsm.py", line 2576, in prepareForShutdown self.pools[spUUID].stopRepoStats(dom) AttributeError: 'setMaxHostID' object has no attribute 'stopRepoStats'
Patch Set 2: (2 inline comments) the split string constants make me sad, but i'm not sure upstream u-boot has signed onto that sanity yet like the linux kernel.
Patch Set 2: I would prefer that you didn't submit this This bug is a duplicate 841534 of and will be handled in http://gerrit.ovirt.org/#/c/6593. After discussing, the correct behavior is to allow diskless templates, so this patch is no longer relevant. Please abandon it. Sorry for the hassle.
Patch Set 2: Looks good to me, approved I concur with jrbarnette@. It sounds like we can do a separate issue/CL for removing the pragma. To that end, I think a TODO() referring to that issue could be useful if added to this CL.
Patch Set 2: Looks good to me, but someone else must approve (3 inline comments) reading the code it looks okay to me. just minor things (can be done upon commit imho)
Patch Set 2: Verified by team member; Looks good to me, approved I could not reproduce the errors - however the changes look straight-forward.
Patch Set 2: Greg, Thanks for the info. I agree with your assessment on caching as well.
Patch Set 2: Liron, so lets think: Reconstruct flow: Go throught all vds refresh and on case of some exception connect. Recovery flow: Go through all vds connect and after that refresh, no need for exception handling on case of exception at refresh. especially additional refresh. No need for additional method that u introduced. Where it is 99% percent common. You already introduced a method that at some flow should return only true and complicated a very simple code. "right now there is no need to copy the method in my opinion - 99%" - your change at connectAndRefreshAllUpHosts in order to solve bug at reconstruct flow caused to regression in recovery flow. I don't think that these means 99% common.
Patch Set 3: Code-Review-1 @Sebastian: Yeah we already discussed that, but since we don't have time to implement promises or similar for 1.0 it's still better than before. So for now we make sure to fetch the stuff early, but I agree we should add a TODO in there
Patch Set 3: I would prefer that you didn't submit this (2 inline comments) I don't see the need for this change. If you built with the ebuild unmodified, you'd get an image.bin which would be what you want. As far as I could tell looking at the new function, it's identical to the old one except that you're leaving out the original image.bin. The difference between image.bin and image.rw.bin is that cros_bundle_firmware is being passed the --force-rw option in one case and not in the other. What that does is it changes the way parts of the image are put together so that vboot doesn't allow the RO only optimization even if the RO firmware claims it supports it. The RO only optimization is where you run the whole firmware out of RO instead of jumping into an RW copy partway through. If you really don't want to enable that optimization, you can not pass that flag to vboot when running VbInit. Even if you do want to split things out like this, it would be better to take the existing depthcharge function and to selectively build the RO image based on a use flag. Independent of whether splitting things up is a good idea, if Mike (who knows bash much better than I do, I think) likes the style of the new function you've made, it would be nice to incorporate the style changes back into the original function.
Patch Set 4: Code-Review+2 Now it looks good, yeah it worked in the first patch set but the rebase missed the comma
Patch Set 4: I would prefer that you didn't submit this Please fix the indent pep8 errors in gluster_cli_tests.py at least.
Patch Set 4: The indexer usage was not changed, it just fixes the bug and it works. :) Adapting to the new indexer is yet another task, of course.
Patch Set 5: Looks good to me, but someone else must approve Rebased with current master Took comments into account. Using 4.3 in deprecation log as it is like that in config_default but using @deprecated with 4.6 and remove in 4.8 to stick to our rules.
Patch Set 5: > David - it used to be that you needed to land both the > stable and the 9999 cros workon ebuild at the same time. > Has that been fixed and you can just land the 9999? That's right, you only need to land the 9999 now. (Actually it's been supported since at least Oct 2010, but yeah there used to be a bug)
Patch Set 6: Except for my spaces nitpicking, yes ;-)
Per our discussion, make this a class that's just the combobox? Maybe like AndroidApiCombo?
perform this check before fetching the translations above? in the else-branch you then set $allOptions to array(); Maybe initialise it to an empty array as the first line of this function (as in functions before) and only fetch translations when needed here
performTransaltion has different purpose. If scale is less than equal to 1 we will not perform transaltion. If the device doesn't support multi touch we need not go into this block and skip the execution of the next six lines, hence it was added here.
Perhaps I misunderstood Martins comment. But yes. I create a new change-id in ChangeUtil, so this is expected (and by design), but it has nothing to do with the footers. I do not change the change-id in the commit message - since that is not expected (git would never do it). I personally do not want the new change to have the same change-id (internally) as the old change. Is that something you really want?
perhaps replace the whole thing with platform.linux_distribution() ?
personally, i prefer to have only with space after comma
planning to do that in a separate changelist for MB-14866: 1. merge lock with seqno_list into the same structure 2. maintain a vbMap instead of vbList in this service, so as to make vbno lookup/validation faster 3. do vbno validation in all relevant places in the service you mentioned that we could use list of list instead of map of list to avoid issues with map. Feel that it makes the code harder to read. we may have to understandard the behavior with maps anyway. Plan to make the changes above and see if the issue in MB-14866 re-cur.
Please add 2015 here: Copyright (c) 2007, 2015 IBM Corporation and others.
please add a comment explaining why leaving a try statement in the AST (with no catch blocks and no finally block) would leave the AST in an unsafe state
Please add more functional/features tests on this conf file when you add the rest of the code.
please add tests for fopen, we should test the different modes
Please add the comment to say that new_filename will be ignored in the auto compaction mode.
please also mention that it builds the overriding/overridden method lists inside the JMethod instances
Please change it to ws_info_t *ws_info = NULL;
Please document these. is_precise is we know the exact type? Would 'exact' be clearer?
Please don't declare symbols weak. Provide weak definitions.
please don't do that keep the if (condition) stmt structure
Please explain on why it is been taken out from the switch case below.
