Text
This bootmode is allover the place in ACPI too. I was considering doing enum with follow-up later.
This can probably be removed if the suggestions for performOk and performApply are implemented.
This causes a warning about missing UID in Eclipse. Fixed with: https://gerrit-review.googlesource.com/#/c/59929/
This changes the semantics... you actually want to die if there's no Title given, but we have a pageid.
This check is improved in https://review.typo3.org/#/c/32645/1
This check was removed along with the corresponding GenFramebuffers and GenRenderbuffers calls because they are redundant(see CheckFBOResources bellow) and the allocated buffers are leaked. This is one of the bugs that my patch fixes. In my patch the buffers are allocated only once(with error checking) in the AllocateFBOResources method.
This chipset needs to override the generic __smbus_read_byte().
This class should be for launch specific utilities, but I agree with you, it makes sense to consolidate until it becomes unwieldy.
this code now returns a reference to a temporary object
This code, RefreshLabelImageJob and PermissionAuthoritySessionManagerListener could be encapsulated in a single class whose responsability is to manage lock decorations update. And this class could be named LockDecorationUpdater, like that this class could be reused for potential others views.
This condition is always true. I assume the condition you meant was n != ptrSize. Though I see you removed this condition altogether in CL 9704 (rebase failure?).
This could be done with a static const char* [] data array, using the enum value as an index. It would generate much less code in the end.
This could impact the development context when doing a partial compilation, is it noticable? We should re-use the filename (micro-op).
this could probably be determined dynamically at build time. but not in this patch.
This depends on how we define the ABI. For function prototype like "void foo(float a, double b, float c);". Now the argument registers would be "a(s0), b(s2/s3=d1), c(s1)". We could remove this unless we define ABI to use argument registers like "a(s0), b(s2/s3=d1), c(s4)"
This displays the opening curly brace, but not the closing one. Is that intentional?
This entire code above this comment can be deleted as long as the "dp = node.data.parsoid" is fixed to set it to {} when node.data or node.data.parsoid is missing.
This example contains both actual examples ("refs/*") and metalanguage ("permission"). Maybe pick one representation and stick to it? [access "<ref>"] <permission> = group Administrators or [access "refs/*"] read = group Administrators (Open re what formatting to apply to metalanguage.)
This file now has Windows line endings. @Jan: Could you verify that you have core.autocrlf=input configured in your Tycho repository clone?
This follows the common toXXX naming convention and implementation style used in Guava. I need fix the documentation.
This functionality is insanely useful for out of the box development against a random sysroot. This would also be a fairly insane place to remove this if block, even if I was feeling particularly murderous.
This hides preference and makes it unavailable. I think that fetching it (if exists) and appending to a new preference is better.
This is a Maven project, and Maven's default build directory is "target" (see also the .classpath file generated by M2Eclipse)
This is a mis-rendering in Gerrit. The actual code is properly indented.
This is a refactoring from my side that sneaked in when I split the commit. I'll revert this asap since it adds nothing to this change.
This is a special and important message. May be use something like P_MSG_STALE_HANDLE_REMOVE_FAILED here?
This is an attempt to clear the following dashboard error: https://open.cdash.org/viewBuildError.php?buildid=3611001
This is better, but the registered variable is unnecessary: while True: ... if register_models(): return # or break
This is done now. The regex will now not be applied on some invalid versions where it was before. Some types of invalid versions will still match the regex, though that is outside of the concerns of this function. It is not a version number validator after all.
this is escapable, p['title'] could be something like '"><script>dodgycode</script><a href="'
This is more obvious in this file than the other. You should be escaping the periods in your regular expressions. I know that it will match the period in the URL anyway, but we want it to *only* match the period. Also, you should use specific matches for scid, height and width, rather than the period (match anything). Assuming that you're just matching numbers, '[0-9]+', or tentatively '\d+' would be better here. One more thing, if these sites provide copy-and-paste embed tags, these matches will need to be able to deal with those too - currently they look like they will just modify the URL in-place, and this is definitely not what we want.
This is nearly true. glusterd's connection management and NLM (gluster-nfs) uses @name different than THIS->name. I am removing @ctx from the argument list.
This is not following the style for the other source files
This is not necessary. The same array can be used as multiple "things" without any problems. Just make sure that code handles it correctly. Don't forget to update the documentation in the header.
this is per loc_handle which is CHANGELOG_CATALOG handle. This should remain here and set per each MDT catalog but not per whole context.
This is problematic, because you know you have Go code passing a Go pointer into C. Maybe you had that before and I didn't notice. I don't think we should put code like that in our examples.
This is quite sneaky. This doesn't cover QWebView::setPage(0) for example, you'll still be attached to the old window. But given that this code shouldn't change too much in the future, calling updateWindow in all different setView/setPage isn't going to break less, so +2 anyway.
This is the line which triggers the crash. createQmlObject() requires the calling context to be valid. If this callback is invoked from C++ via the event loop, it has a chance to crash. Note that using Damian's repro also uncovered a crash in QNetworkAccessFtpBackend::closeDownstreamChannel() which could hide the crash issue in QML, but that's a separate issue which needs to be tracked separately (the fix is trivial, just a null ptr check on the ftp ptr).
This is the same as in the underlying OS calls, and this same construct is also used in the nbsearch pair loop, as it minimizes the amount of code the caller needs to write for correct looping (and is quite easy to implement, as there's only one function that returns something).
This is the simplest way to make it build. The complicated way would be to change doBeforeTest so it throws a Throwable instead of an Exception.
This is unnecessary, only MWExtensionInspector uses nodeModel
This is what I figured even if we define a column type as integer it is still allowed by sqlalchemy to have strings! This allowed user_id to be stored as string regardless of its definition.Things would fail when we have LDAP and a regular DB like postgres. However this is present in other models like tokens where user_id is defined as Integer.So this all together should be a separate issue.
This isn't a very good function name.. (I assume that it doesn't initialize everything in memcached).. init_allocation_hooks() would probably be a better name..
This isn't C. Stop comparing it with C. What you are doing here with the brightness is just redefining the same thing. Both boards you touched have the same definitions for the brightness, \DSPC.BRTU and \DSPC.BRTD, so it makes limited sense to redefine them as something interim.
This isn't going to pass pep8 anyway because this line is too long and the parameters to getattr don't have proper spacing. And why are we still looking at exc.message here?
This just feels wrong. The test setup code should not be writing to the notedb separately; there should be a method in PatchLineCommentsUtil that writes to the appropriate storage(s) based on the config.
This line ought to use the variable to say: 'token' => "A token previously acquired with $action",
This makes sure we don't have a bug where we silently drop object files
This may result in broken implementations since they could already have a longer URL. Highly unlikely, but possible.
This means the folder structure is not as expected? I guess we had always as follows: /pywikibot /pywikibot/comms /pywikibot/... <others> /scripts /scripts/i18n /scripts/maintenance /tests /tests/data /tests/i18n
This method looks really strange, it seems to allow to get or create a view model context at the same time. The parameter set is confusing. It is not part of this review, but please add a BR to discuss this separatly
This method now only sends email; I would change the name to reflect this fact.
this must be count > CFS_PAGE_SIZE - 1, otherwise the kbuf[count] = 0; would overflow into the next page is the write is eaxctly page-sized.
This needs to have been initialized to the correct size here. JacobianType jacobian( dim, transform->NumberParameters())
this parameter doesnt currently exist in compat; I dont know why it is being introduced here.
This patch evelvate context to fix tempest exeption unauthorized
this rather looks like an IllegalArgumentException looks like we should check this earlier when setURI is called and already fail there if a URI is already set
This repeats the name of the test, better use convert() as the other tests. If you think it is more clear, change all the tests, probably in another patch.
This says 6 parameters, of which 3 have to be given and 3 are optional. If the function expects 4-6 it should be 6; 0; 0; 0; 0; 1; 1; You can check in the Function Wizard what/how it is displayed.
This second key is not needed, this array contains a list of regex group names pointing to a (pre-)master key.
This seemed to be triggered too hurly. So I'm not sure that actually work.
This seems a bit error prone and hacky to me. What if $contentContext->getInaccessibleContentShown() was TRUE before. It would be FALSE afterwards (probably not relevant here, but maybe elsewhere). What about a second argument in "getNode()" that allows to even fetch hidden/protected nodes?
This seems confusing to me. It reads like "If -ENOSYS is returned on the 1st iteration, then FMR is not supported", which gave me the impression that "-ENOSYS can be returned in later iterations too, in which case it does not indicate FMR is not supported". Rather, please consider: if (rc == -ENOSYS) { /* device does not support FMR */ LASSERT(i == 0); break; }
This should also be converted GF_VALIDATE_OR_GOTO, take this as global comment
This should also be updated to match the actual latest kernel version as above.
this should be 0. I believe the empty username is a valid name.
This should be a programlisting with language 'ini'
This should be alright to change as if it wasn't updated in the last install this one will run. Both work as upgrade paths as it tests with no salt set if nessecary
this should be called with client list lock held, instead of osc lock.
this should be done (if any) when first connection is established. and I do think that it is a mistake to do so. please move all the engine variables into engine side, do not modify options, there is no technical need to do so. this includes the destination address and destination port. let's makes lives easier for us. if you call the variable the same, you can even have same file symlinked at /etc/ovirt-engine/engine.conf.d and /etc/ovirt-engine/fence....conf.d/ to provide the same options. So you can even consider putting it at engine local config. But please avoid complexity result from database updates, and move the variables to the component that actually use them.
this should be done without open/close of the editor. Just by checking the mapping
This should be just 'Authentication required' to make the message consistent with other REST endpoints.
This should be rather initialized with an empty collection.
This should be references with an 's' â€“ see Cite.git, i18n/core/en.json line 38.
This should be safe because this string isn't really used in the GUI - it's used as one of the arguments in a later format string, so it's copied. In fact I could (and probably should) just use NULL instead of packet_scope().
This should be: 'fields' => array('socialprofile'), since everything (the old messaging system info and the new social profile websites) is now 'socialprofile'. We differentiate among these with 'note' field.
this should better be moved to a signal in IWizardFactory then, I suppose. but different patch.
This should now depend on a python_library() that contains tools/gerrit/api.py.
This should only be added if the RGBZ view plugin is going to be built. Maybe the proper place to add this test is in that plugin.
This should probably be dlfcn, but I'm not sure. It might be better to split this into another file, and call it something like pthread_dlfcn_test.cpp to indicate this is really a test that is also testing dl related functionality.
This should probably be ignore. It is not part of the explicit ITK style specification.
This should probably be moved above the goos=="openbsd" check so that unknown options on OpenBSD also force cgo lookups.
This should really check self.client.can_send_version() and send the primitive of the object with the old version if you can't send the new one. You can find examples of this in compute/rpcapi.
This switches on distinct locales only, not on a primary language value where the secondary value may be different. This should instead be switch (ctl & LANGUAGE_MASK_PRIMARY) and ...
This TODO will have to wait for a later bug fix, because it's used when users belong to multiple institutions (the progress bar gives them a menu to determine which institution to show, and that relies on the param). It's not a *huge* security issue having this. It just allows users to see what the completion goals are for other institutions they're not members of.
This was directly copied by Special:Random, but you are right.
This was not possible updated to use the proper state variable...
This whole last block from line 187 to 191 could be simplified to return skipIfLastMatched != null && skipIfLastMatched && cache.lastMatched;
This will add an new <input name="ajax"> everytime I change the switch. Please add the code to make sure only one is appended.
This will always be nil, right? As above, I think you can remove this argument.
This will cause a double free. The previous GF_REF_PUT() will already call auth_cache_entry_free() (where entry is free'd) if auth_cache_add() has failed.
this will cause the MKFSOPT to skip --mkfsoptions string if MKFSOPT is empty and MDSJOURNAL_SIZE=xxx
this will never be true if it's of type unsigned int.
This works. :) Still, I think it might be nicer to do the check and call the error page from showBannerEditor(), since that's the method that mostly deals with output. This method just returns an array for form generation, and may be called more than once in a single request.
This xdata is the response dict, I think you need to use xdata which is received in marker_rename
this-> typedef "char" named concept. hard coded "0"
Those variables are used by everyone deriving from GerritCommand. It should be pushed up as well and the getter/setters
ThreadIdType numberOfThreads = this->GetNumberOfThreadsUsed();
title.getPrefixedDb() gives the target article title, but in the apply() function it's looked up by href, which may be a redirect title.
To address the previous concerns about constructing a massive QByteArray in the case of no terminating character: I set pos2 to pos so that the QByteArray is empty in that case.
to forget too.. Specific code for containers 1 and 2 edit parts
Trying to swap the layout when obj1 == obj2 should just "return 0" (i.e. be no-op). There should also be a check that the two objects have the same uid and gid, and that the UID doing the swap is either owner or has mdd_capable(uc, CAP_FOWNER) since this would ensure the process isn't trying to steal data (i.e. the process doing this could read and overwrite the data if it wanted).
TTo be more complete, check for funcService != null first (or use an optional?)
u mentioned that is "good to have". i will try to convert tests for distribute volume.
Understood. To me it would have been safer to keep the chain as is, but introduce the validation check explicitly, but if you think this is okay too, then I'll shut up.
Unfortunately, I don't think so, since it probably contains the version of the metamodel which varies over time...
Unnecessary field if sshdAddress is used consistently.
Unnecessary now with no inheritance.
unrelated, but 'children and whose children' ain't english ;)
unused parameter 'p_info' [-Werror=unused-parameter] (p_info ? -> pinfo ?)
unused parameter 'p_info' [-Werror=unused-parameter] (p_info ? -> pinfo ?)
unused parameter 'pinfo' [-Werror=unused-parameter]
unused parameter 'pinfo' [-Werror=unused-parameter]
Update: Tried to make the unary member operators, but apparently even gtest requires binary comparison operators to work on objects, so I'll have to abandon that.
Use a proper sentence, and this routine does more than that, returning encoded version.
Use existing $GLOBALS['LANG']->sL('LLL:EXT:lang/locallang_core.xml:show_item.php.uid') with "Uid:" ?
use functionDecl->getLocation() instead of functionDecl->getSourceRange().getBegin(), so the caret is nicely positioned under the start of the function name
use macro VKEY_FEATURES_INODE_QUOTA and VKEY_FEATURES_QUOTA
use mock.patch.object, also should be able to use the decorator like on the other method.
Use spaces, rather than tabs, here, for consistency.
Use tvb_ip_to_str. That should eliminate the need for arpa/inet.h
Using a direct english string here means it can't be translated :-( You can do a grep for e.g. RID_SVXSTR_LOAD_ERROR for a sample trivial translatable string example you can follow to get a translatable string here
using ANY_DIFF has a huge impact on performance, typically there are many thousands of unchanged objects and only a few changed, with ANY_DIFF filter you will only traverse the changed objects otherwise all of them
Using itkAssertInDebugAndIgnoreInReleaseMacro for efficiency.
Using the . seems to be the preferred way of doing this and orca screenreader does not read out the fullstop so that is good
valign is still spread a lot across the core - this will be a seperate task to clean this up. this makes it only more easy to find.
Value stored to 'offset' is never read (Clang Analyzer)
Various tests won't link if I leave the macros out. F.e. tst_qpropertyanimation, tst_qitemmodel, tst_qsettings, ...
warn: ll_setattr_raw():we tested 'rc' before and it was 'false'
warn: lnet_ping():check that 'tmpid' doesn't leak information (struct has a hole after 'pid')
warn: lov_unpackmd():variable dereferenced before check 'lmm' (see line 392)
Warned about same in doc string. It'd be more safe to remove this method altogether.
WARNING: Code after RETURN statement cannot be executed
Wasn't the trailing slash already removed when the GitHub URL was read from the config?
We also need to check the return value from wal_commit as well.
We backed away from that. It is simply impractical. Too many tools and users use refs/for/ to remove support for it.
we can actually allocate a 4K buffer which would be bigger enough to store the message.
we can add at the end the following args "--" "-j8" but that won't work for windows. Moreover we need to provide the generator. I was lucky enough that the system was picking the last one that I used. So we might need to stick with a CMake call that configure the pom for you. So maybe for external build tree, that tree should probably became the place where maven should be run instead of the Maven source dir.
We can address it in a separate commit, but I rather use only one approach for the compaction instead of having a sorted compaction as an option. Sorting will be expensive especially when we have a large number of items. If we don't have not much performance gain, I rather use an unsorted option.
We can go back and change this to the char* version if it gets too difficult to figure out what's going on.
We certainly can use the errno here as we are invoking'fork'
We do realize that the given glfd pointer, could now have been reallocated and hence pass all these checks still and crash, right? just checking :) Ideally if we want to validate that this is a good pointer, which we sort of cannot unless we have a table of valid pointers and check against that etc. or hand out numbers and map that into a table.
We don't need this line any more. Or we could keep this here and use it instead of calling parseInt in the five instances below.
We don't need to drop the function as it will be dropped in the function db_create_trigger()
we have audio_data_file and so this can be changed to that.
We have that around many classes this way now. If I recall correctly we have not guideline for this. Would you be fine with keeping it this way? If so, please merge.
We ironed out the issues on bug 49965, a few patches are linked from it.
We kept this in r46 to keep some minor behaviour consistent. By omitting this in r50, we are actually keeping the behaviour of rc and final consistent, modulo the bug fix - see this function in git diff 53fc9d0 -- src/gromacs/mdlib/coupling.c. Since the r50 tests are already generated with the new RNG, we should expect those tests to continue to pass.
We kind of discussed this last time - and thought that we didn't want to fail any calls if the operators were not recognised..
we might want to support Z here, since that's coming in a day or two
We would prefer to keep this. It is possible for the RILD and radio code to pass the sequence number through into radio state as the request is being acted on - the RILD may notice the socket error and re-establish the connection and then the response comes back from the radio with the old sequence number and get's passed back through the newly-connected RILD. Just because your implementation may not do this, we can imagine other OEMs passing back obsolete responses that would match a newly-zero'd RIL sequence number and confuse things. Couldn't you just remember the first sequence number your RILD connection received? Then you know the number of requests you've received.
what about Jigal's comment "Copying an array for the sake of a variable name is a waste of resources IMO." ?
What happens if this fails? How do we ensure ssh is killed? Maybe a trap would be more supportable?
what is the reason for having them private? I mean I usually like private stuff, but it's uncommon in TYPO3 CMS ;-)
what means "error_expected" = "create". It's means there are nor error? then it's better to use None by default for self.input.param("error-expected", None) and you set string in error_expected by default value is boolean. python allows it but it's not good to change the type of variable
What status is the best here? I cannot use status from the current response here, also I don't know status of the other responses here.
what's the purpose of this change? do we really need this in the patch?
where do these section come from - the linker feeling clever?
Which tarball do you mean here? I don't see why installing the file would matter for the source tarball, which is the only thing we are currently interested in. I tested, and the INSTALL file ends up in the source tarball just fine even without this block (but with the other changes here).
