{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "id": 286311738, "number": 274, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "id": 108354736, "number": 153, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch"}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "4f6b34f1f803a103f321330bc5f9e4a01f788925", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "message": "avformat: small AVFormatContext doxy cosmetics\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "9ffd1b023ae6f16565cf006ae29a8174c12bac38", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9ffd1b023ae6f16565cf006ae29a8174c12bac38"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374"}]}, {"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "commit": {"author": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T10:17:03Z"}, "committer": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T15:26:14Z"}, "message": "avfilter/af_afade: acrossfade: switch to activate\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>", "tree": {"sha": "1909d2207b5f7f8452bf7995cf4aefe77a64f68e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/1909d2207b5f7f8452bf7995cf4aefe77a64f68e"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374/comments", "author": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b"}]}, {"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:24Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:33Z"}, "message": "avformat: small cosmetics after 6512ff72f9\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "6fb8ae44ffa4396ccca96cb953cb131e7557a763", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6fb8ae44ffa4396ccca96cb953cb131e7557a763"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa"}]}, {"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2017-12-23T10:44:25Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "avfilter/vidstab: check bytesPerPixel only for packed formats.\n\nlibvidstab introduced this variable only for packed formats but in\nvf_vidstab*.c, it's checked for all inputs. So the filter errors out for YUV422/444P streams.\n\nFixes #6736.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "48f26a5b645e2d960ae1317f0a572981a3fa4207", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/48f26a5b645e2d960ae1317f0a572981a3fa4207"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a"}]}, {"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-16T14:44:02Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "lavfi/deinterlace_vaapi: fix can't show full option information.\n\nuse ffmpeg -h filter=deinterlace_vaapi can't get full help information,\nthe root cause is not setting the flags fileld in options.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "cb3c137b3d1ea4158732bf6c1462820ddcf8249f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cb3c137b3d1ea4158732bf6c1462820ddcf8249f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/383804edd812410219a097e2bf3efac8a8b4562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607"}]}, {"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "message": "Merge commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8'\n\n* commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8':\n  qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2fa8b4d23c1b284b36190ff8debc100608e1ed99", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2fa8b4d23c1b284b36190ff8debc100608e1ed99"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e"}, {"sha": "cbe28bc069dde1d53d937ee10700bb123279c7c8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbe28bc069dde1d53d937ee10700bb123279c7c8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbe28bc069dde1d53d937ee10700bb123279c7c8"}]}, {"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "message": "Merge commit '34c113335b53d83ed343de49741f0823aa1f8cc6'\n\n* commit '34c113335b53d83ed343de49741f0823aa1f8cc6':\n  Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nMost of this was already present from 9ea6607d294526688ab1b1342cb36ee159683e88,\nthis just applies some minor fixups and adds the general documentation.\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3987bb94bae98ce8b08d31237568d85d27f0993b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3987bb94bae98ce8b08d31237568d85d27f0993b"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68de778ccc35bea885a989e47358089da006a8b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6"}, {"sha": "34c113335b53d83ed343de49741f0823aa1f8cc6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34c113335b53d83ed343de49741f0823aa1f8cc6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/34c113335b53d83ed343de49741f0823aa1f8cc6"}]}, {"sha": "68de778ccc35bea885a989e47358089da006a8b6", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "message": "Merge commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336'\n\n* commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336':\n  cmdutils: update copyright year to 2018\n\nThis commit is a noop, see bddf31ba7570325dd2c8d033eae3d0dd74127f96\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/68de778ccc35bea885a989e47358089da006a8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494"}, {"sha": "7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/7b0b5bc810cdb9ef100492c9a9f2d30602c04336"}]}, {"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "message": "Merge commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74'\n\n* commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74':\n  examples/qsvdec: do not set the deprecated field refcounted_frames\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf"}, {"sha": "1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1efbbfedcaf4a3cecab980273ad809ba3ade2f74"}]}, {"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "message": "Merge commit 'e23190269fb6e8217d080918893641ba3e0e3556'\n\n* commit 'e23190269fb6e8217d080918893641ba3e0e3556':\n  lavu/qsv: add log message for libmfx version\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2d897473d776b34f3cc2777a745e02259bdaf847", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d897473d776b34f3cc2777a745e02259bdaf847"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a919ab853efcecf89516e703df8018d0649e1143", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143"}, {"sha": "e23190269fb6e8217d080918893641ba3e0e3556", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e23190269fb6e8217d080918893641ba3e0e3556", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e23190269fb6e8217d080918893641ba3e0e3556"}]}, {"sha": "a919ab853efcecf89516e703df8018d0649e1143", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-15T10:57:33Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-16T21:02:34Z"}, "message": "lavc/snow_dwt: add struct MpegEncContext to fix headers check.\n\nadd missing struct MpegEncContext, use make checkheaders\nfound this warning.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "516d6e20d87511916dd1740ac8c422f1c1596b71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/516d6e20d87511916dd1740ac8c422f1c1596b71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a919ab853efcecf89516e703df8018d0649e1143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec"}]}, {"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T12:23:55Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T16:40:24Z"}, "message": "hwcontext_d3d11va: implement av_hwdevice_get_hwframe_constraints()\n\nD3D11 has rather fine grained per format capabilities for different uses\nthat can be queried at runtime. Since we don't know what the user wants\nto do with the formats when av_hwdevice_get_hwframe_constraints() is\ncalled, we simply return all formats that have the most basic support.", "tree": {"sha": "e6004497e7d55923fc2c69503c2f735db57b55fc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/e6004497e7d55923fc2c69503c2f735db57b55fc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385"}]}, {"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "message": "avformat: make avformat_network_init() explicitly optional\n\nIt was sort of optional before - if you didn't call it, networking was\ninitialized on demand, and an ugly warning was logged. Also, the doxygen\ncomments threatened that it would be made strictly required one day.\n\nMake it explicitly optional. I would prefer to deprecate it fully, but\nthere might still be legitimate reasons to use this. But the average\nuser won't need it.\n\nThis is needed only for two reasons: to initialize TLS libraries like\nOpenSSL and GnuTLS, and winsock.\n\nOpenSSL and GnuTLS were already silently initialized on demand if the\nglobal network init function was not called. They also have various\nthread-safety acrobatics, which make concurrent initialization within\nlibavformat safe. In addition, the libraries are moving towards making\ntheir global init functions safe, which removes all need for central\nglobal init. In particular, GnuTLS 3.5.16 and OpenSSL 1.1.0g have been\nfound to have safe init functions. In all cases, they use internal\nreference counters to avoid that the global uninit functions interfere\nwith concurrent uses of the library by other API users who called global\ninit.\n\nwinsock should be thread-safe as well, and maintains an internal\nreference counter as well.\n\nSince we still support ancient TLS libraries, which do not have this\nfixed, and since it's unknown whether winsock and GnuTLS\nreinitialization is costly in any way, don't deprecate the libavformat\nfunctions yet.", "tree": {"sha": "12294edd1f95322624f5bc3a4cda392353da2e46", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/12294edd1f95322624f5bc3a4cda392353da2e46"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e"}]}, {"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T12:09:31Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:54:53Z"}, "message": "avformat: deprecate another ffserver API leftover", "tree": {"sha": "f9c0e23ec334b9d74da60738e39160c8f0eefb13", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f9c0e23ec334b9d74da60738e39160c8f0eefb13"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a"}]}, {"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:41Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/wavpack: Fix integer overflows in wv_unpack_stereo / mono\n\nFixes: runtime error: signed integer overflow: 2146276249 + 1487583 cannot be represented in type 'int'\nFixes: 4823/clusterfuzz-testcase-minimized-4551896611160064\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "66b2678a5e7772b00e171dcd2c17cfde7010dce5", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/66b2678a5e7772b00e171dcd2c17cfde7010dce5"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a/comments", "author": null, "committer": null, "parents": [{"sha": "6887e412434776eb260ad3904f565be491dd5726", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726"}]}, {"sha": "6887e412434776eb260ad3904f565be491dd5726", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:40Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/jpeg2000: Check sum of sizes of band->prec before allocating\n\nFixes: OOM\nFixes: 4810/clusterfuzz-testcase-minimized-6034253235093504\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "ffce940d0eba8f5ad334ffa232d268ceae7885ab", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/ffce940d0eba8f5ad334ffa232d268ceae7885ab"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6887e412434776eb260ad3904f565be491dd5726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726/comments", "author": null, "committer": null, "parents": [{"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950"}]}, {"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:39Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/ac3dec_fixed: Fix integer overflow in scale_coefs()\n\nFixes: runtime error: signed integer overflow: 2147483520 + 128 cannot be represented in type 'int'\nFixes: 4800/clusterfuzz-testcase-minimized-6110372403609600\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f233099e01190d2a7de8d5644b791d5953e6372c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f233099e01190d2a7de8d5644b791d5953e6372c"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950/comments", "author": null, "committer": null, "parents": [{"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490"}]}, {"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-13T06:05:09Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "hwcontext_vdpau: implement av_hwdevice_get_hwframe_constraints()\n\nIn addition, this does not allow creating frames contexts with sw_format\nfor which no known transfer formats exist. In theory, we should check\nwhether the chroma format (i.e. the sw_format) is supported at all by\nthe vdpau driver, but checking for transfer formats has the same effect.\n\nNote that the pre-existing code adds 1 to priv->nb_pix_fmts[i] for\nunknown reason, and some checks need to account for that to check for\nempty lists. They are not off-by-one errors.", "tree": {"sha": "295515241c45e81941e93092070d15e8e6d8d0f6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/295515241c45e81941e93092070d15e8e6d8d0f6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446"}]}, {"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-11T01:27:20Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "http: cosmetics: reformat reconnect check for better readability\n\nThe condition was a bit too long, and most editors will break the line\nand turn it into an unreadable mess. Move out some of the conditions.\n\nThis should not change the behavior.", "tree": {"sha": "cc30b3a22eecea157acf932627a716ce6096c26f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cc30b3a22eecea157acf932627a716ce6096c26f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c"}]}, {"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "commit": {"author": {"name": "Robert Nagy", "email": "ronag89@gmail.com", "date": "2018-01-13T15:51:43Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-14T22:19:01Z"}, "message": "avfilter/vf_idet: added more YUVA formats to idet query_formats\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f7660f5cb0981da1e54d8648964541d6715b8caf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f7660f5cb0981da1e54d8648964541d6715b8caf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c/comments", "author": {"login": "ronag", "id": 3065230, "avatar_url": "https://avatars3.githubusercontent.com/u/3065230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronag", "html_url": "https://github.com/ronag", "followers_url": "https://api.github.com/users/ronag/followers", "following_url": "https://api.github.com/users/ronag/following{/other_user}", "gists_url": "https://api.github.com/users/ronag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronag/subscriptions", "organizations_url": "https://api.github.com/users/ronag/orgs", "repos_url": "https://api.github.com/users/ronag/repos", "events_url": "https://api.github.com/users/ronag/events{/privacy}", "received_events_url": "https://api.github.com/users/ronag/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827"}]}, {"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:02:26Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:02:26Z"}, "message": "dashdec: Support SegmentTemplate inside Period\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "9a66e4e4b3f8045913a615b1ff26ac4150800d54", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9a66e4e4b3f8045913a615b1ff26ac4150800d54"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8"}]}, {"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:01:45Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:01:45Z"}, "message": "dashdec: Avoid trying to read any segments beyond the last\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a31c765426346eac96fff4abcaa2025a34a87a9d", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a31c765426346eac96fff4abcaa2025a34a87a9d"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c"}]}, {"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:36:02Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:36:02Z"}, "message": "dashdec: Correct seeking behaviour\n\ndash_read_seek() is called only once to issue a seek\nof *all* streams to the specified timestamp. But to\navoid reopening each stream, do a \"dry run\" for streams\nthat are in a discarded state.\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "63be000b6b3f4b520b7391c0eefecf85b06a6921", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/63be000b6b3f4b520b7391c0eefecf85b06a6921"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759"}]}, {"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:35:31Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:35:31Z"}, "message": "dashdec: Search for segment timeline inside AdaptionSets too", "tree": {"sha": "6306262aa59ffe8510a186f7437a833304bf7c71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6306262aa59ffe8510a186f7437a833304bf7c71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917"}]}, {"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:34:43Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:34:43Z"}, "message": "dashdec: Support for multiple video/audio streams\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241"}]}, {"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:33:57Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:33:57Z"}, "message": "dashdec: Expose bandwidth and representation ID as metadata\n\nThe primary goal was making it viable to play YouTube/Vimeo/... videos\nusing the native demuxer, since mpv currently uses a workaround in form\nof Edit Decision Lists (EDL).\n\nImplemented features:\n\n1 Exposing id / bitrate as stream metadata (similar to the HLS demuxer)\n2 Support for multiple video and audio streams\n3 A few minor parts of the specification that are in use at YouTube\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "271cf37bcb0bde5de801de146368e69dbbad5dbf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/271cf37bcb0bde5de801de146368e69dbbad5dbf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f"}]}, {"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2018-01-14T12:00:23Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:51Z"}, "message": "avformat/adtsenc: allow only AAC streams\n\nThe ADTS muxer will silently (attempt to) mux any audio stream passed to it.\nPatch adds a codec check.\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "4601a7f7986371cc036261c77e7ce46f1168bfed", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/4601a7f7986371cc036261c77e7ce46f1168bfed"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c"}]}, {"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2017-05-29T21:12:51Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:42Z"}, "message": "avformat/adtsenc: add adts_init()\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "f19139ffc4cf491127f94e46c19d927ec28c1e03", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f19139ffc4cf491127f94e46c19d927ec28c1e03"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1"}]}, {"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "commit": {"author": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:27:36Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:37:54Z"}, "message": "dcaenc: move all tables inside context and fix incorrect coding style\n\nFunctionally identical to the old code, with less lines wasted.\nPartially fixes the complete disregard for the 80 col/line guide.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>", "tree": {"sha": "24741d32eb2f40999abd8c0ceceb2a921b09a434", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/24741d32eb2f40999abd8c0ceceb2a921b09a434"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1/comments", "author": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77"}]}, {"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "commit": {"author": {"name": "Daniil Cherednik", "email": "dan.cherednik@gmail.com", "date": "2018-01-07T22:39:22Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:13:58Z"}, "message": "avcodec/dcaenc: Use ffmpeg mdct instead of own implementation\n\nSigned-off-by: Daniil Cherednik <dan.cherednik@gmail.com>", "tree": {"sha": "2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77/comments", "author": {"login": "dcherednik", "id": 1076097, "avatar_url": "https://avatars1.githubusercontent.com/u/1076097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcherednik", "html_url": "https://github.com/dcherednik", "followers_url": "https://api.github.com/users/dcherednik/followers", "following_url": "https://api.github.com/users/dcherednik/following{/other_user}", "gists_url": "https://api.github.com/users/dcherednik/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcherednik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcherednik/subscriptions", "organizations_url": "https://api.github.com/users/dcherednik/orgs", "repos_url": "https://api.github.com/users/dcherednik/repos", "events_url": "https://api.github.com/users/dcherednik/events{/privacy}", "received_events_url": "https://api.github.com/users/dcherednik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e11ebf55a5e51a8a7131d382c2020e35d34f42", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/56e11ebf55a5e51a8a7131d382c2020e35d34f42", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/56e11ebf55a5e51a8a7131d382c2020e35d34f42"}]}], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "id": 161357702, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "number": 274, "state": "open", "locked": false, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9db65dbdd24304e34c5bca95df61e28a16c91969", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e", "head": {"label": "kierank:patch-1", "ref": "patch-1", "sha": "95df93815a05f658397096dec8c8c44cd0a8e22e", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "repo": {"id": 29426797, "name": "FFmpeg", "full_name": "kierank/FFmpeg", "owner": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/kierank/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": true, "url": "https://api.github.com/repos/kierank/FFmpeg", "forks_url": "https://api.github.com/repos/kierank/FFmpeg/forks", "keys_url": "https://api.github.com/repos/kierank/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/kierank/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/kierank/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/kierank/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/kierank/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/kierank/FFmpeg/events", "assignees_url": "https://api.github.com/repos/kierank/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/kierank/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/kierank/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/kierank/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/kierank/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/kierank/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/kierank/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/kierank/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/kierank/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/kierank/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/kierank/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/kierank/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/kierank/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/kierank/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/kierank/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/kierank/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/kierank/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/kierank/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/kierank/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/kierank/FFmpeg/merges", "archive_url": "https://api.github.com/repos/kierank/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/kierank/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/kierank/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/kierank/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/kierank/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/kierank/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/kierank/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/kierank/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/kierank/FFmpeg/deployments", "created_at": "2015-01-18T13:30:18Z", "updated_at": "2018-01-09T19:55:27Z", "pushed_at": "2018-01-05T14:59:28Z", "git_url": "git://github.com/kierank/FFmpeg.git", "ssh_url": "git@github.com:kierank/FFmpeg.git", "clone_url": "https://github.com/kierank/FFmpeg.git", "svn_url": "https://github.com/kierank/FFmpeg", "homepage": "http://ffmpeg.org", "size": 193174, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": null, "url": null}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "b2be76c0a472b729756ed7a91225c209d0dd1d2e", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/274"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "id": 46028982, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "number": 153, "state": "open", "locked": true, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6dc6c91d7d05da2aed92fafebabad67c026c1562", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8", "head": {"label": "wm4:dummy_branch", "ref": "dummy_branch", "sha": "032b7b5d982edea9ed20bd76e8b669af578be2b8", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "ce0a117ed4f99c5eac2fd365cbdebba568a0ead8", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/153"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/3#issuecomment-4623706", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/3", "id": 4623706, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-03-21T18:19:23Z", "updated_at": "2012-03-21T18:19:23Z", "author_association": "OWNER", "body": "The commits have been merged Sun Jan 22, sorry ive missed that there also was a pull request open here on github.\nNote to everyone, mail pull requests to me (michaelni@gmx.at) or the ffmpeg-devel ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/4#issuecomment-4865124", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/4", "id": 4865124, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-04-01T09:02:39Z", "updated_at": "2012-04-01T09:02:39Z", "author_association": "OWNER", "body": "Patch applied locally, will be in github in a moment\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/5#issuecomment-5590894", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/5", "id": 5590894, "user": {"login": "chinshou", "id": 841761, "avatar_url": "https://avatars2.githubusercontent.com/u/841761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinshou", "html_url": "https://github.com/chinshou", "followers_url": "https://api.github.com/users/chinshou/followers", "following_url": "https://api.github.com/users/chinshou/following{/other_user}", "gists_url": "https://api.github.com/users/chinshou/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinshou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinshou/subscriptions", "organizations_url": "https://api.github.com/users/chinshou/orgs", "repos_url": "https://api.github.com/users/chinshou/repos", "events_url": "https://api.github.com/users/chinshou/events{/privacy}", "received_events_url": "https://api.github.com/users/chinshou/received_events", "type": "User", "site_admin": false}, "created_at": "2012-05-09T01:27:14Z", "updated_at": "2012-05-09T01:27:14Z", "author_association": "CONTRIBUTOR", "body": "test\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10322327", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10322327, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T10:50:03Z", "updated_at": "2012-11-13T10:50:03Z", "author_association": "OWNER", "body": "Hmm, 5 merge commits, 1 rebased commit from master, 1 duplicate commit from you and 5 actual commits. Could you rebase this so there are no random merges and random duplicate commits ? The actual changes that merging all this would introduce probably are ok but i cant merge this branch as is\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10340870", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10340870, "user": {"login": "lippit", "id": 1927231, "avatar_url": "https://avatars1.githubusercontent.com/u/1927231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lippit", "html_url": "https://github.com/lippit", "followers_url": "https://api.github.com/users/lippit/followers", "following_url": "https://api.github.com/users/lippit/following{/other_user}", "gists_url": "https://api.github.com/users/lippit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lippit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lippit/subscriptions", "organizations_url": "https://api.github.com/users/lippit/orgs", "repos_url": "https://api.github.com/users/lippit/repos", "events_url": "https://api.github.com/users/lippit/events{/privacy}", "received_events_url": "https://api.github.com/users/lippit/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T19:54:40Z", "updated_at": "2012-11-13T19:54:40Z", "author_association": "CONTRIBUTOR", "body": "I've rebased my changes into a single commit, since they do not really deserve to have separate commits. Hope this is ok now.\n\nThanks,\nGeorg\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/11#issuecomment-15077820", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/11", "id": 15077820, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-18T19:57:31Z", "updated_at": "2013-03-18T19:57:31Z", "author_association": "OWNER", "body": "commits integrated\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15115173", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15115173, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-19T13:54:02Z", "updated_at": "2013-03-19T13:54:02Z", "author_association": "CONTRIBUTOR", "body": "I will have an updated patch in a day or two. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-15152554", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 15152554, "user": {"login": "heldchen", "id": 299636, "avatar_url": "https://avatars2.githubusercontent.com/u/299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heldchen", "html_url": "https://github.com/heldchen", "followers_url": "https://api.github.com/users/heldchen/followers", "following_url": "https://api.github.com/users/heldchen/following{/other_user}", "gists_url": "https://api.github.com/users/heldchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/heldchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heldchen/subscriptions", "organizations_url": "https://api.github.com/users/heldchen/orgs", "repos_url": "https://api.github.com/users/heldchen/repos", "events_url": "https://api.github.com/users/heldchen/events{/privacy}", "received_events_url": "https://api.github.com/users/heldchen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-20T00:38:29Z", "updated_at": "2013-03-20T00:38:29Z", "author_association": "NONE", "body": "+1\n\nwould love to have xyz2rgb and rgb2xyz this in ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15869902", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15869902, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:37:55Z", "updated_at": "2013-04-03T22:37:55Z", "author_association": "OWNER", "body": "Any updates on this? you said you will have an updated patch in a day or 2, did i miss it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-15870824", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 15870824, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:59:22Z", "updated_at": "2013-04-03T22:59:22Z", "author_association": "OWNER", "body": "where can we find a sample with which to reproduce the bug & fix ?\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-16387140", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 16387140, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-15T14:14:12Z", "updated_at": "2013-04-15T14:14:12Z", "author_association": "OWNER", "body": "The problem has been fixed in 1f2ce32825f7ca14c3bd90ef2781d75e8b704d41\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/15#issuecomment-17781625", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/15", "id": 17781625, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-12T17:29:34Z", "updated_at": "2013-05-12T17:29:34Z", "author_association": "MEMBER", "body": "Please send patch to ffmpeg-devel because it will receive more attention there.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18243491", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18243491, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:45:00Z", "updated_at": "2013-05-21T21:54:27Z", "author_association": "CONTRIBUTOR", "body": "Note that you can do something like:\n\n```\nffplay -f lavfi color=black -vf \"drawtext=text='%{e\\:n+123}':fontcolor=white\"\n```\n\nMay I ask what is the purpose behind such feature? Is it just to solve the problem of `n` starting at 0 or 1?\n\nEdit1:\nOh mmh, I should have read your initial post, my bad.\n\nBut another note; now that the counter is stored in a common place (link->frame_count), I wonder if we couldn't have a more global starting number instead. That would make more sense when using for instance in combination with showinfo filter (which prints the n), or actually any kind of filters where the counter is used (anything with timeline for instance, or various expressions).\n\nEdit2:\nTo be more specific, maybe have a look to filters_common_options in avfilter.c, and try to add it here. Unfortunately, if you do that, it will be limited to each filter scope. Maybe we need some global libavfilter options, so when a `-start_n` is specified by a tool, it is populated everywhere. Such thing should be discussed on ffmpeg-devel mailing list or IRC.\n\nI know I'm being pedantic for such a trivial feature, but I believe it can be done way better and have a few benefits in the long term. Adding such option like this now will mean a depreciation burden next time it's implemented generically.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-18244469", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 18244469, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:56:58Z", "updated_at": "2013-05-21T21:56:58Z", "author_association": "CONTRIBUTOR", "body": "Note: XYZ is supported for decoding since 0c47c9028be2cf4b1a557e653606fced5b959445\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18358847", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18358847, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T17:30:31Z", "updated_at": "2013-05-23T17:30:31Z", "author_association": "CONTRIBUTOR", "body": "@michaelni Sorry for the extreme delay.  I didn't get a chance to get back to this until now.  New commits are attached.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18362780", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18362780, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:33:54Z", "updated_at": "2013-05-23T18:33:54Z", "author_association": "OWNER", "body": "Patch applied by Paul\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/19#issuecomment-18363671", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/19", "id": 18363671, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:46:24Z", "updated_at": "2013-05-23T18:46:24Z", "author_association": "OWNER", "body": "patches should be against master\npatches against release/1.2 should always have been in master first\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/20#issuecomment-18365499", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/20", "id": 18365499, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T19:15:44Z", "updated_at": "2013-05-23T19:15:44Z", "author_association": "OWNER", "body": "Is there any reason why you dont check if getnamenifo() failed ?\nIt seems more correct to me to check it and handle this error condition instead of silently continuing with a empty buffer\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18408496", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18408496, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-24T14:35:12Z", "updated_at": "2013-05-24T14:35:12Z", "author_association": "CONTRIBUTOR", "body": "Good idea (filters_common_options), I hadn't realized n was used outside of the drawtext filter. I'll update this patch when I have a chance and post a link to it on the mailing list.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/21#issuecomment-18453722", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/21", "id": 18453722, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-25T20:52:06Z", "updated_at": "2013-05-25T20:52:06Z", "author_association": "OWNER", "body": "The checks are all wrong, an error is a non zero return not a zero. Please test code before submitting.\nAlso my question still stands, why do you not handle the errors but instead manipulate the name.\nHandling an error means printing an error message and returning failure not continuing.\nPlease explain what you are trying to achive with setting the name to 0 and continuing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18464736", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18464736, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:30:38Z", "updated_at": "2013-05-26T15:30:38Z", "author_association": "OWNER", "body": "Comment from ronald:that change to ff_rtp_set_remote_url() ignores the port parameter, that's not right\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18465012", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18465012, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:51:27Z", "updated_at": "2013-05-26T15:51:27Z", "author_association": "OWNER", "body": "Comment from wbs:\nwbs: michaelni: yes, as BBB says, that commit is very much wrong. if that actually helps in some case, the caller is doing something very much wrong, because it would break every single rtsp case at least. that function is used for setting the peer hostname/port, but the change makes it ignore the port you set. so if the change helps, the caller shouldn't be calling the function at all. or alternatively, add logic to parse out ...\nwbs: ... rtcp_port within that function just as it is done in rtp_open\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-19474426", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 19474426, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T18:40:20Z", "updated_at": "2013-06-14T18:40:20Z", "author_association": "CONTRIBUTOR", "body": "Do to some n00bness on my part, this pull request was empty. I've resubmitted it here: https://github.com/FFmpeg/FFmpeg/issues/24\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19488127", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19488127, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-15T00:19:44Z", "updated_at": "2013-06-15T00:19:44Z", "author_association": "OWNER", "body": "var_values[VAR_N] is left at the old value, isnt that confusing for users of expressions\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19644265", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19644265, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-18T21:39:43Z", "updated_at": "2013-06-18T21:39:43Z", "author_association": "CONTRIBUTOR", "body": "Fixed, start_number is now added directly to var_values[VAR_N] instead of inside the frame_num function.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19693370", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19693370, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T15:54:44Z", "updated_at": "2013-06-19T16:09:13Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the feedback, changes made as requested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19696181", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19696181, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T16:37:25Z", "updated_at": "2013-06-19T16:37:25Z", "author_association": "CONTRIBUTOR", "body": "Thank you for your work.\nI think these commits will be squashed, either by you or by michaelni.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698317", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698317, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:08:46Z", "updated_at": "2013-06-19T17:08:46Z", "author_association": "CONTRIBUTOR", "body": "Sure, no problem. Also, in case it's required: I hereby relinquish all copyright control over the above commits to the FFmpeg project.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698922", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698922, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:17:46Z", "updated_at": "2013-06-19T17:17:46Z", "author_association": "CONTRIBUTOR", "body": "I have never heard of such feature in FFmpeg project. This is not \"GPL\" Asterisk which forces you to relinquish your patch authorship for it to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19700106", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19700106, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:36:06Z", "updated_at": "2013-06-19T17:36:06Z", "author_association": "CONTRIBUTOR", "body": "Good to know. Should I squash my commits, or does a maintainer usually do that?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/658d166da02ff1b1e0a060c1e25d85e8bffc38b9#commitcomment-736812", "id": 736812, "user": {"login": "jnorthrup", "id": 73514, "avatar_url": "https://avatars2.githubusercontent.com/u/73514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnorthrup", "html_url": "https://github.com/jnorthrup", "followers_url": "https://api.github.com/users/jnorthrup/followers", "following_url": "https://api.github.com/users/jnorthrup/following{/other_user}", "gists_url": "https://api.github.com/users/jnorthrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnorthrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnorthrup/subscriptions", "organizations_url": "https://api.github.com/users/jnorthrup/orgs", "repos_url": "https://api.github.com/users/jnorthrup/repos", "events_url": "https://api.github.com/users/jnorthrup/events{/privacy}", "received_events_url": "https://api.github.com/users/jnorthrup/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "658d166da02ff1b1e0a060c1e25d85e8bffc38b9", "created_at": "2011-11-22T04:38:08Z", "updated_at": "2011-11-22T04:38:08Z", "author_association": "NONE", "body": "too cool\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1255779", "id": 1255779, "user": {"login": "frostwire", "id": 1341376, "avatar_url": "https://avatars3.githubusercontent.com/u/1341376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostwire", "html_url": "https://github.com/frostwire", "followers_url": "https://api.github.com/users/frostwire/followers", "following_url": "https://api.github.com/users/frostwire/following{/other_user}", "gists_url": "https://api.github.com/users/frostwire/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostwire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostwire/subscriptions", "organizations_url": "https://api.github.com/users/frostwire/orgs", "repos_url": "https://api.github.com/users/frostwire/repos", "events_url": "https://api.github.com/users/frostwire/events{/privacy}", "received_events_url": "https://api.github.com/users/frostwire/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T13:40:36Z", "updated_at": "2012-04-25T13:40:36Z", "author_association": "NONE", "body": "out of curiosity, why do you multiply by the double negation of f->ec ?\n(I'm just a noob looking around)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1256299", "id": 1256299, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T15:20:09Z", "updated_at": "2012-04-25T15:20:09Z", "author_association": "OWNER", "body": "On Wed, Apr 25, 2012 at 06:40:36AM -0700, FrostWire wrote:\n\n> out of curiosity, why do you multiply by the double negation of f->ec ?\n> (I'm just a noob looking around)\n\nbecause i want the value added when f->ec is not 0\n\ncould have been written as (f->ec ? X : 0) too\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nThe greatest way to live with honor in this world is to be what we pretend\nto be. -- Socrates\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d#commitcomment-2248051", "id": 2248051, "user": {"login": "bygreencn", "id": 22853, "avatar_url": "https://avatars1.githubusercontent.com/u/22853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bygreencn", "html_url": "https://github.com/bygreencn", "followers_url": "https://api.github.com/users/bygreencn/followers", "following_url": "https://api.github.com/users/bygreencn/following{/other_user}", "gists_url": "https://api.github.com/users/bygreencn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bygreencn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bygreencn/subscriptions", "organizations_url": "https://api.github.com/users/bygreencn/orgs", "repos_url": "https://api.github.com/users/bygreencn/repos", "events_url": "https://api.github.com/users/bygreencn/events{/privacy}", "received_events_url": "https://api.github.com/users/bygreencn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d", "created_at": "2012-12-04T09:11:48Z", "updated_at": "2012-12-04T09:11:48Z", "author_association": "NONE", "body": "WinXP(32bit) with MinGW 4.6.1 and VS2010 may cause ffmpeg.exe crash at CommandLineToArgvW.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17#commitcomment-2255576", "id": 2255576, "user": {"login": "fritsch", "id": 1089309, "avatar_url": "https://avatars0.githubusercontent.com/u/1089309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritsch", "html_url": "https://github.com/fritsch", "followers_url": "https://api.github.com/users/fritsch/followers", "following_url": "https://api.github.com/users/fritsch/following{/other_user}", "gists_url": "https://api.github.com/users/fritsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritsch/subscriptions", "organizations_url": "https://api.github.com/users/fritsch/orgs", "repos_url": "https://api.github.com/users/fritsch/repos", "events_url": "https://api.github.com/users/fritsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fritsch/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17", "created_at": "2012-12-05T09:09:24Z", "updated_at": "2012-12-05T09:09:24Z", "author_association": "NONE", "body": "This commit produces an issue within our OpenELEC version 3.0b3 that was based on 0.10.6 Cause we are a bit late in the release cycle, we downgraded to 0.10.5.\n\nFor reference and test sample: https://github.com/OpenELEC/OpenELEC.tv/issues/1557\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307462", "id": 2307462, "user": {"login": "wanzhang", "id": 3039093, "avatar_url": "https://avatars0.githubusercontent.com/u/3039093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanzhang", "html_url": "https://github.com/wanzhang", "followers_url": "https://api.github.com/users/wanzhang/followers", "following_url": "https://api.github.com/users/wanzhang/following{/other_user}", "gists_url": "https://api.github.com/users/wanzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanzhang/subscriptions", "organizations_url": "https://api.github.com/users/wanzhang/orgs", "repos_url": "https://api.github.com/users/wanzhang/repos", "events_url": "https://api.github.com/users/wanzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/wanzhang/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T03:22:53Z", "updated_at": "2012-12-14T03:22:53Z", "author_association": "CONTRIBUTOR", "body": "Is it more simple and readable when changed to \ndiff = ((~(long)ptr )&(ALIGN-1)) + 1;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307764", "id": 2307764, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T05:02:13Z", "updated_at": "2012-12-14T05:02:13Z", "author_association": "OWNER", "body": "On Thu, Dec 13, 2012 at 07:22:57PM -0800, wanzhang wrote:\n\n> Is it more simple and readable when changed to \n> diff = ((~(long)ptr )&(ALIGN-1)) + 1;\n\nyes its a small bit simpler\nchanged\n\n[...]\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nOpposition brings concord. Out of discord comes the fairest harmony.\n-- Heraclitus\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3476900", "id": 3476900, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-06-21T13:43:43Z", "updated_at": "2013-06-21T13:45:12Z", "author_association": "CONTRIBUTOR", "body": "@richardpl While I suppose this it is technically correct to handle these cases, were you finding that it was possible to get, for example,  a value of 22 set on bits_per_raw_sample?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3751836", "id": 3751836, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:02:16Z", "updated_at": "2013-07-30T21:02:16Z", "author_association": "CONTRIBUTOR", "body": "It is possible, its just I did not yet found such files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3752004", "id": 3752004, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:21:22Z", "updated_at": "2013-07-30T21:22:14Z", "author_association": "CONTRIBUTOR", "body": "I would argue it's not possible files that way.  The SMPTE 302M standard does not spec any other sizes than 16, 20, and 24 bits per sample.  I was asking if it were possible to set, via command-line, to have that value set to 21,22, or 23 bits per coded sample?  Just curious.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3755958", "id": 3755958, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-31T10:16:48Z", "updated_at": "2013-07-31T10:16:48Z", "author_association": "CONTRIBUTOR", "body": "I was not talking about SMPTE 302M files. It's irrelevant if bits per sample can be set via command line, it just number that is reported by decoder/containers.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2599a62fbb31a340d106774b8b3dd84169f92895#commitcomment-4181845", "id": 4181845, "user": {"login": "thoughtpalette", "id": 690624, "avatar_url": "https://avatars2.githubusercontent.com/u/690624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoughtpalette", "html_url": "https://github.com/thoughtpalette", "followers_url": "https://api.github.com/users/thoughtpalette/followers", "following_url": "https://api.github.com/users/thoughtpalette/following{/other_user}", "gists_url": "https://api.github.com/users/thoughtpalette/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoughtpalette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoughtpalette/subscriptions", "organizations_url": "https://api.github.com/users/thoughtpalette/orgs", "repos_url": "https://api.github.com/users/thoughtpalette/repos", "events_url": "https://api.github.com/users/thoughtpalette/events{/privacy}", "received_events_url": "https://api.github.com/users/thoughtpalette/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "2599a62fbb31a340d106774b8b3dd84169f92895", "created_at": "2013-09-25T22:10:29Z", "updated_at": "2013-09-25T22:10:29Z", "author_association": "NONE", "body": "Dis guy\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/33da1f29218dab5e2189eb3b6d787bba11e4fccd#commitcomment-6479164", "id": 6479164, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "33da1f29218dab5e2189eb3b6d787bba11e4fccd", "created_at": "2014-05-28T19:12:22Z", "updated_at": "2014-05-28T19:12:22Z", "author_association": "MEMBER", "body": "These may look better as an ordered list rather than an unordered list with numerals. Refer to the [markdown syntax](http://daringfireball.net/projects/markdown/syntax#list). (Also, please disregard my previous comments on the older commits; I commented before viewing your newer commits.)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479737", "id": 6479737, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:55:25Z", "updated_at": "2014-05-28T19:56:19Z", "author_association": "MEMBER", "body": "We are almost there. Thanks for the updates so far. The look of the raw text is more important than the markdown rendered look, so it should be given priority, but I think both can be made to look good.  This line can be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479756", "id": 6479756, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:31Z", "updated_at": "2014-05-28T19:56:31Z", "author_association": "MEMBER", "body": "Please add four spaces to the beginning of this line.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479759", "id": 6479759, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 8, "line": 9, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:45Z", "updated_at": "2014-05-28T19:56:45Z", "author_association": "MEMBER", "body": "This line can also be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479769", "id": 6479769, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 11, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:57:03Z", "updated_at": "2014-05-28T19:57:03Z", "author_association": "MEMBER", "body": "Same with this line. The only other blocking nit is the extra backticks for the code spans. Unless I'm wrong I think one backtick on each side of the word should suffice instead of three.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6450c05ba56d652901c362f27a6226d29dbf9381#commitcomment-6532581", "id": 6532581, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": 64, "line": 64, "path": "libswresample/swresample.c", "commit_id": "6450c05ba56d652901c362f27a6226d29dbf9381", "created_at": "2014-06-03T04:37:12Z", "updated_at": "2014-06-03T04:37:12Z", "author_association": "NONE", "body": "@michaelni I notice `clev` and `slev` defaults have been set at -3dB since first\nintroduced in b5875b9\n\nWhy did you choose this value? It seems to make for poor downmixing\n\n[`ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851`](http://ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6839935", "id": 6839935, "user": {"login": "saste", "id": 878876, "avatar_url": "https://avatars0.githubusercontent.com/u/878876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saste", "html_url": "https://github.com/saste", "followers_url": "https://api.github.com/users/saste/followers", "following_url": "https://api.github.com/users/saste/following{/other_user}", "gists_url": "https://api.github.com/users/saste/gists{/gist_id}", "starred_url": "https://api.github.com/users/saste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saste/subscriptions", "organizations_url": "https://api.github.com/users/saste/orgs", "repos_url": "https://api.github.com/users/saste/repos", "events_url": "https://api.github.com/users/saste/events{/privacy}", "received_events_url": "https://api.github.com/users/saste/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T12:24:56Z", "updated_at": "2014-06-30T12:25:10Z", "author_association": "CONTRIBUTOR", "body": "Hi, please can you comment about why do you think this is useful (I'm not contrary to the idea but this is a bit inconsistent with how the other tools work)?\n\nAlso posting patches to the ffmpeg-devel mailing-list is preferred since most developers are used to comment there, thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6842184", "id": 6842184, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T15:12:53Z", "updated_at": "2014-06-30T15:12:53Z", "author_association": "NONE", "body": "It is useful because they are shorter, same reason you would use `-af` over `-filter:a`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931737", "id": 7931737, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:39:23Z", "updated_at": "2014-09-25T22:39:23Z", "author_association": "NONE", "body": "Consider an mp4 files with just pps in the h264 stream (no sps in the NAL units, but available from avcc).\nIn this case 'ctx->idr_sps_pps_seen' prevents inserting sps in the extracted h264, which is then unusable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931921", "id": 7931921, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:56:39Z", "updated_at": "2014-09-25T22:56:39Z", "author_association": "MEMBER", "body": "@thomag I have forwarded your comment to https://ffmpeg.org/pipermail/ffmpeg-devel/2014-September/163453.html, where discussion is more active. Please subscribe to ffmpeg-devel if you have any further comments, and please do not break the thread if you do.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531", "id": 7933531, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T02:15:24Z", "updated_at": "2014-09-26T02:15:24Z", "author_association": "OWNER", "body": "@thomag Do you have a sample h264 file / testcase to reproduce this ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7942638", "id": 7942638, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T16:32:10Z", "updated_at": "2014-09-26T16:32:10Z", "author_association": "NONE", "body": "Michael,\nHere is a short clip @ https://s3.amazonaws.com/quickfire-public/dwclip2.mp4\nwhich has just PPS in the h264 stream.\nPlease let me know if you need anything else.\nRegards,\nThomas.\n\nOn Fri, Sep 26, 2014 at 9:17 AM, Thomas George <\nthomasg@quickfirenetworks.com> wrote:\n\n> Sure. This is short mp4 vid. with just PPS in the h264 stream.\n> Please let me know if you want anything else.\n> Regards,\n> Thomas.\n> \n> On Thu, Sep 25, 2014 at 7:15 PM, Michael Niedermayer <\n> notifications@github.com> wrote:\n> \n> > @thomag https://github.com/thomag Do you have a sample h264 file /\n> > testcase to reproduce this ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531\n> > .\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8831371", "id": 8831371, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T10:15:15Z", "updated_at": "2014-12-04T10:15:15Z", "author_association": "NONE", "body": "I'm getting a seg fault on cygwin (windows xp). Probably inside open_output_file function (line 87)\n![untitled](https://cloud.githubusercontent.com/assets/9247809/5296651/0d0b8524-7baf-11e4-8d7f-c43a35d7cd53.JPG)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8838788", "id": 8838788, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T18:09:15Z", "updated_at": "2014-12-04T18:09:15Z", "author_association": "OWNER", "body": "Issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea#commitcomment-8871529", "id": 8871529, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea", "created_at": "2014-12-08T09:19:22Z", "updated_at": "2014-12-08T09:19:22Z", "author_association": "NONE", "body": "Thanks for the update!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333236", "id": 9333236, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:07:31Z", "updated_at": "2015-01-19T02:08:27Z", "author_association": "CONTRIBUTOR", "body": "That commit completely broke the muxing into mkv container for many video files \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333513", "id": 9333513, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:56:16Z", "updated_at": "2015-01-19T02:56:16Z", "author_association": "OWNER", "body": "How can this issue be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9337330", "id": 9337330, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T10:57:18Z", "updated_at": "2015-01-19T10:57:18Z", "author_association": "CONTRIBUTOR", "body": "I had many MPEG-TS Videos and FFmpeg failed to mux them into mkv. Try with some MPEGT-TS video you may find.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682", "pull_request_review_id": null, "id": 3419682, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "codecs should not depend on sizof(AVFrame) due to ABI, AVFrame is part of libavutil and not libavcodec\n", "created_at": "2013-03-18T20:12:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838", "pull_request_review_id": null, "id": 3419838, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "Thats not how AVPackets are initilaized, please see how other encoders do it, one way is with ff_alloc_packet2()\n", "created_at": "2013-03-18T20:18:45Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893", "pull_request_review_id": null, "id": 3419893, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "the code should be converted to the new API not a wraper added over the old and otherwise unused code\n", "created_at": "2013-03-18T20:21:15Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947", "pull_request_review_id": null, "id": 3419947, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "This can be calculated with integers which avoid platform specific rounding dependancies (aka bitexact output and behavior between platforms)\n", "created_at": "2013-03-18T20:23:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132", "pull_request_review_id": null, "id": 3425132, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright.  The original implementation had it this way.  No one at libav mentioned it, hence, it was left this way.  \n", "created_at": "2013-03-19T03:00:44Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200", "pull_request_review_id": null, "id": 3425200, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "While I had considered doing this, I wanted to avoid a monolithic function and thought this would be sufficient.  The old code isn't \"unused\" so much as it's just using the original avcodec_encode_audio interface.\n\nWhat about simply, modfiying the function signature of s302m_encode_frame to something like:\ns302_encode_audio(AVCodecContext *, AVPacket *, AVFrame *);\n", "created_at": "2013-03-19T03:08:57Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207", "pull_request_review_id": null, "id": 3425207, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll clean this up.  I was testing something out and wanted doubles for some reason.  It shouldn't be doubles...\n", "created_at": "2013-03-19T03:09:35Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215", "pull_request_review_id": null, "id": 3425215, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll checkout some other encoders and ff_alloc_packet2.  Thanks.\n", "created_at": "2013-03-19T03:10:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233", "pull_request_review_id": null, "id": 3425233, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "The original author referenced s->frame for the current coded frame.  How should this be handled if the S302MContext should not contain an AVFrame?\n", "created_at": "2013-03-19T03:12:56Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558", "pull_request_review_id": null, "id": 3428558, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "There should be no wraper, also the code in the wraper looks odd, i dont think these checks are needed\n", "created_at": "2013-03-19T10:32:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564", "pull_request_review_id": null, "id": 3428564, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "simply not setting coded_frame should be fine\n", "created_at": "2013-03-19T10:32:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327", "pull_request_review_id": null, "id": 3431327, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Ok.\n", "created_at": "2013-03-19T13:53:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334", "pull_request_review_id": null, "id": 3431334, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright, I'll clean it up.\n", "created_at": "2013-03-19T13:53:37Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509", "pull_request_review_id": null, "id": 4762509, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "The expression stuff outside and inside the loop could be merged. (and the errors ignored before the last iteration)\n", "created_at": "2013-06-18T23:25:01Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702", "pull_request_review_id": null, "id": 4764702, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "indentation got a bit broken, also at drawgrid_options. Please realign AV_OPT_... values\n", "created_at": "2013-06-19T02:46:49Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734", "pull_request_review_id": null, "id": 4764734, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "Please update also drawgrid doc in same way\n", "created_at": "2013-06-19T02:52:36Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841", "pull_request_review_id": null, "id": 4764841, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red", "path": "doc/filters.texi", "position": null, "original_position": 68, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "I'd write x=-t, also reference t in all other places where it is meant.\nIn sake of example correctness: if input image size ration exceeds 2.40:1, e.g. 3:1, i think it will draw just two horizontal lines (didn't test though).\n", "created_at": "2013-06-19T03:12:35Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907", "pull_request_review_id": null, "id": 4764907, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "(Feel free to ignore the below.)\nIt may be better to move eval-stuff to separate procedure called from config_input(), so it would be easier to add possibility to reference changing variables, (e.g. timestamp or frame number), just calling eval function from filter_frame() instead of config_input().\n", "created_at": "2013-06-19T03:21:40Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664", "pull_request_review_id": null, "id": 4775664, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:11Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669", "pull_request_review_id": null, "id": 4775669, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:18Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673", "pull_request_review_id": null, "id": 4775673, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:31Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764", "pull_request_review_id": null, "id": 4775764, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "I thought of that, too, but in the end I figured it would be easy enough to refactor the eval stuff into a separate function if variables are ever added that vary over time. I surveyed a few other filters, and the \"don't do it until you need it\" approach seems to be consistent.\n", "created_at": "2013-06-19T15:53:04Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369", "pull_request_review_id": null, "id": 8574369, "diff_hunk": "@@ -786,11 +802,12 @@ static int hls_read_seek(AVFormatContext *s, int stream_index,\n                                        s->streams[stream_index]->time_base.den,\n                                        flags & AVSEEK_FLAG_BACKWARD ?\n                                        AV_ROUND_DOWN : AV_ROUND_UP);\n-    timestamp = av_rescale_rnd(timestamp, AV_TIME_BASE, stream_index >= 0 ?\n-                               s->streams[stream_index]->time_base.den :\n-                               AV_TIME_BASE, flags & AVSEEK_FLAG_BACKWARD ?\n-                               AV_ROUND_DOWN : AV_ROUND_UP);\n-    if (s->duration < c->seek_timestamp) {\n+    first_timestamp = c->first_timestamp == AV_NOPTS_VALUE ?\n+                      0 : c->first_timestamp;\n+    seek_timestamp = c->seek_timestamp;\n+\n+    if (seek_timestamp < first_timestamp ||\n+        (s->duration && s->duration < seek_timestamp - first_timestamp)) {", "path": "libavformat/hls.c", "position": null, "original_position": 74, "commit_id": "ac3e65020be94f2831f738f3b73c2b90300cc358", "original_commit_id": "86235c7d8ea94d7425b358b76c6bf11e0a931c6c", "user": {"login": "vkosh", "id": 28398, "avatar_url": "https://avatars1.githubusercontent.com/u/28398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkosh", "html_url": "https://github.com/vkosh", "followers_url": "https://api.github.com/users/vkosh/followers", "following_url": "https://api.github.com/users/vkosh/following{/other_user}", "gists_url": "https://api.github.com/users/vkosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkosh/subscriptions", "organizations_url": "https://api.github.com/users/vkosh/orgs", "repos_url": "https://api.github.com/users/vkosh/repos", "events_url": "https://api.github.com/users/vkosh/events{/privacy}", "received_events_url": "https://api.github.com/users/vkosh/received_events", "type": "User", "site_admin": false}, "body": "Added a \"seek_timestamp - first_timestamp\" in check condition to cover a case when first VOD segment starts from non-zero timestamp.\n", "created_at": "2013-12-27T23:49:05Z", "updated_at": "2014-01-04T22:47:06Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248", "pull_request_review_id": null, "id": 16581248, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please merge this line with\n\n```\nOBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n```\n", "created_at": "2014-08-22T03:37:56Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249", "pull_request_review_id": null, "id": 16581249, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Also, alphabetical order.\n", "created_at": "2014-08-22T03:38:09Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271", "pull_request_review_id": null, "id": 16581271, "diff_hunk": "@@ -0,0 +1,50 @@\n+#ifndef AVFFRAMERECEIVER_H", "path": "libavdevice/avfframereceiver.h", "position": null, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Missing copyright. Also use `AVDEVICE_AVFFRAMERECEIVER_H` as multi-inclusion guard.\n", "created_at": "2014-08-22T03:39:32Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279", "pull_request_review_id": null, "id": 16581279, "diff_hunk": "@@ -0,0 +1,42 @@\n+#import \"avfframereceiver.h\"", "path": "libavdevice/avfframereceiver.m", "position": 21, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please add copyright.\n", "created_at": "2014-08-22T03:39:52Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728", "pull_request_review_id": null, "id": 16603728, "diff_hunk": "@@ -13,7 +13,9 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n                                             alsa-audio-dec.o timefilter.o\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n-OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o \\\n+\t\t\t\t\t\t\t\t\t\t\tavfframereceiver.o", "path": "libavdevice/Makefile", "position": null, "original_position": 7, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "No tabs are allowed in FFmpeg.\n", "created_at": "2014-08-22T15:29:07Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841", "pull_request_review_id": null, "id": 16603841, "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * AVCapture input device\n+ * Copyright (c) 2014 Joseph Benden <joe@thrallingpenguin.com>", "path": "libavdevice/avfframereceiver.m", "position": null, "original_position": 3, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "This needs\n\n```\nCopyright (c) 2014 Thilo Borgmann <thilo.borgmann@mail.de>\n```\n\ntoo as you copied the contents from avfoundation.m.\n", "created_at": "2014-08-22T15:31:14Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773", "pull_request_review_id": null, "id": 20589773, "diff_hunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2010-2011 FFmpeg for WinRT ARM project\n+ *\n+ * Authors: Jesse Jiang <qyljcy@163.com>\n+ *          PPLive Inc. <http://www.pptv.com/>", "path": "compat/winrtapiconvert.h", "position": 5, "original_position": 5, "commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "original_commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Use\n\n```\nCopyright (c) 2014 Jesse Jiang <qyljcy@163.com>\nCopyright (c) 2014 PPLive Inc. <http://www.pptv.com>\n```\n", "created_at": "2014-11-19T17:03:43Z", "updated_at": "2014-11-19T17:03:43Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "2": {"issues": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "id": 286311738, "number": 274, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "id": 108354736, "number": 153, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch"}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "4f6b34f1f803a103f321330bc5f9e4a01f788925", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "message": "avformat: small AVFormatContext doxy cosmetics\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "9ffd1b023ae6f16565cf006ae29a8174c12bac38", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9ffd1b023ae6f16565cf006ae29a8174c12bac38"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374"}]}, {"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "commit": {"author": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T10:17:03Z"}, "committer": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T15:26:14Z"}, "message": "avfilter/af_afade: acrossfade: switch to activate\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>", "tree": {"sha": "1909d2207b5f7f8452bf7995cf4aefe77a64f68e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/1909d2207b5f7f8452bf7995cf4aefe77a64f68e"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374/comments", "author": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b"}]}, {"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:24Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:33Z"}, "message": "avformat: small cosmetics after 6512ff72f9\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "6fb8ae44ffa4396ccca96cb953cb131e7557a763", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6fb8ae44ffa4396ccca96cb953cb131e7557a763"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa"}]}, {"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2017-12-23T10:44:25Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "avfilter/vidstab: check bytesPerPixel only for packed formats.\n\nlibvidstab introduced this variable only for packed formats but in\nvf_vidstab*.c, it's checked for all inputs. So the filter errors out for YUV422/444P streams.\n\nFixes #6736.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "48f26a5b645e2d960ae1317f0a572981a3fa4207", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/48f26a5b645e2d960ae1317f0a572981a3fa4207"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a"}]}, {"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-16T14:44:02Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "lavfi/deinterlace_vaapi: fix can't show full option information.\n\nuse ffmpeg -h filter=deinterlace_vaapi can't get full help information,\nthe root cause is not setting the flags fileld in options.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "cb3c137b3d1ea4158732bf6c1462820ddcf8249f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cb3c137b3d1ea4158732bf6c1462820ddcf8249f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/383804edd812410219a097e2bf3efac8a8b4562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607"}]}, {"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "message": "Merge commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8'\n\n* commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8':\n  qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2fa8b4d23c1b284b36190ff8debc100608e1ed99", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2fa8b4d23c1b284b36190ff8debc100608e1ed99"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e"}, {"sha": "cbe28bc069dde1d53d937ee10700bb123279c7c8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbe28bc069dde1d53d937ee10700bb123279c7c8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbe28bc069dde1d53d937ee10700bb123279c7c8"}]}, {"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "message": "Merge commit '34c113335b53d83ed343de49741f0823aa1f8cc6'\n\n* commit '34c113335b53d83ed343de49741f0823aa1f8cc6':\n  Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nMost of this was already present from 9ea6607d294526688ab1b1342cb36ee159683e88,\nthis just applies some minor fixups and adds the general documentation.\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3987bb94bae98ce8b08d31237568d85d27f0993b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3987bb94bae98ce8b08d31237568d85d27f0993b"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68de778ccc35bea885a989e47358089da006a8b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6"}, {"sha": "34c113335b53d83ed343de49741f0823aa1f8cc6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34c113335b53d83ed343de49741f0823aa1f8cc6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/34c113335b53d83ed343de49741f0823aa1f8cc6"}]}, {"sha": "68de778ccc35bea885a989e47358089da006a8b6", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "message": "Merge commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336'\n\n* commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336':\n  cmdutils: update copyright year to 2018\n\nThis commit is a noop, see bddf31ba7570325dd2c8d033eae3d0dd74127f96\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/68de778ccc35bea885a989e47358089da006a8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494"}, {"sha": "7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/7b0b5bc810cdb9ef100492c9a9f2d30602c04336"}]}, {"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "message": "Merge commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74'\n\n* commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74':\n  examples/qsvdec: do not set the deprecated field refcounted_frames\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf"}, {"sha": "1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1efbbfedcaf4a3cecab980273ad809ba3ade2f74"}]}, {"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "message": "Merge commit 'e23190269fb6e8217d080918893641ba3e0e3556'\n\n* commit 'e23190269fb6e8217d080918893641ba3e0e3556':\n  lavu/qsv: add log message for libmfx version\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2d897473d776b34f3cc2777a745e02259bdaf847", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d897473d776b34f3cc2777a745e02259bdaf847"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a919ab853efcecf89516e703df8018d0649e1143", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143"}, {"sha": "e23190269fb6e8217d080918893641ba3e0e3556", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e23190269fb6e8217d080918893641ba3e0e3556", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e23190269fb6e8217d080918893641ba3e0e3556"}]}, {"sha": "a919ab853efcecf89516e703df8018d0649e1143", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-15T10:57:33Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-16T21:02:34Z"}, "message": "lavc/snow_dwt: add struct MpegEncContext to fix headers check.\n\nadd missing struct MpegEncContext, use make checkheaders\nfound this warning.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "516d6e20d87511916dd1740ac8c422f1c1596b71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/516d6e20d87511916dd1740ac8c422f1c1596b71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a919ab853efcecf89516e703df8018d0649e1143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec"}]}, {"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T12:23:55Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T16:40:24Z"}, "message": "hwcontext_d3d11va: implement av_hwdevice_get_hwframe_constraints()\n\nD3D11 has rather fine grained per format capabilities for different uses\nthat can be queried at runtime. Since we don't know what the user wants\nto do with the formats when av_hwdevice_get_hwframe_constraints() is\ncalled, we simply return all formats that have the most basic support.", "tree": {"sha": "e6004497e7d55923fc2c69503c2f735db57b55fc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/e6004497e7d55923fc2c69503c2f735db57b55fc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385"}]}, {"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "message": "avformat: make avformat_network_init() explicitly optional\n\nIt was sort of optional before - if you didn't call it, networking was\ninitialized on demand, and an ugly warning was logged. Also, the doxygen\ncomments threatened that it would be made strictly required one day.\n\nMake it explicitly optional. I would prefer to deprecate it fully, but\nthere might still be legitimate reasons to use this. But the average\nuser won't need it.\n\nThis is needed only for two reasons: to initialize TLS libraries like\nOpenSSL and GnuTLS, and winsock.\n\nOpenSSL and GnuTLS were already silently initialized on demand if the\nglobal network init function was not called. They also have various\nthread-safety acrobatics, which make concurrent initialization within\nlibavformat safe. In addition, the libraries are moving towards making\ntheir global init functions safe, which removes all need for central\nglobal init. In particular, GnuTLS 3.5.16 and OpenSSL 1.1.0g have been\nfound to have safe init functions. In all cases, they use internal\nreference counters to avoid that the global uninit functions interfere\nwith concurrent uses of the library by other API users who called global\ninit.\n\nwinsock should be thread-safe as well, and maintains an internal\nreference counter as well.\n\nSince we still support ancient TLS libraries, which do not have this\nfixed, and since it's unknown whether winsock and GnuTLS\nreinitialization is costly in any way, don't deprecate the libavformat\nfunctions yet.", "tree": {"sha": "12294edd1f95322624f5bc3a4cda392353da2e46", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/12294edd1f95322624f5bc3a4cda392353da2e46"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e"}]}, {"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T12:09:31Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:54:53Z"}, "message": "avformat: deprecate another ffserver API leftover", "tree": {"sha": "f9c0e23ec334b9d74da60738e39160c8f0eefb13", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f9c0e23ec334b9d74da60738e39160c8f0eefb13"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a"}]}, {"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:41Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/wavpack: Fix integer overflows in wv_unpack_stereo / mono\n\nFixes: runtime error: signed integer overflow: 2146276249 + 1487583 cannot be represented in type 'int'\nFixes: 4823/clusterfuzz-testcase-minimized-4551896611160064\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "66b2678a5e7772b00e171dcd2c17cfde7010dce5", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/66b2678a5e7772b00e171dcd2c17cfde7010dce5"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a/comments", "author": null, "committer": null, "parents": [{"sha": "6887e412434776eb260ad3904f565be491dd5726", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726"}]}, {"sha": "6887e412434776eb260ad3904f565be491dd5726", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:40Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/jpeg2000: Check sum of sizes of band->prec before allocating\n\nFixes: OOM\nFixes: 4810/clusterfuzz-testcase-minimized-6034253235093504\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "ffce940d0eba8f5ad334ffa232d268ceae7885ab", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/ffce940d0eba8f5ad334ffa232d268ceae7885ab"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6887e412434776eb260ad3904f565be491dd5726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726/comments", "author": null, "committer": null, "parents": [{"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950"}]}, {"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:39Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/ac3dec_fixed: Fix integer overflow in scale_coefs()\n\nFixes: runtime error: signed integer overflow: 2147483520 + 128 cannot be represented in type 'int'\nFixes: 4800/clusterfuzz-testcase-minimized-6110372403609600\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f233099e01190d2a7de8d5644b791d5953e6372c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f233099e01190d2a7de8d5644b791d5953e6372c"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950/comments", "author": null, "committer": null, "parents": [{"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490"}]}, {"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-13T06:05:09Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "hwcontext_vdpau: implement av_hwdevice_get_hwframe_constraints()\n\nIn addition, this does not allow creating frames contexts with sw_format\nfor which no known transfer formats exist. In theory, we should check\nwhether the chroma format (i.e. the sw_format) is supported at all by\nthe vdpau driver, but checking for transfer formats has the same effect.\n\nNote that the pre-existing code adds 1 to priv->nb_pix_fmts[i] for\nunknown reason, and some checks need to account for that to check for\nempty lists. They are not off-by-one errors.", "tree": {"sha": "295515241c45e81941e93092070d15e8e6d8d0f6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/295515241c45e81941e93092070d15e8e6d8d0f6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446"}]}, {"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-11T01:27:20Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "http: cosmetics: reformat reconnect check for better readability\n\nThe condition was a bit too long, and most editors will break the line\nand turn it into an unreadable mess. Move out some of the conditions.\n\nThis should not change the behavior.", "tree": {"sha": "cc30b3a22eecea157acf932627a716ce6096c26f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cc30b3a22eecea157acf932627a716ce6096c26f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c"}]}, {"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "commit": {"author": {"name": "Robert Nagy", "email": "ronag89@gmail.com", "date": "2018-01-13T15:51:43Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-14T22:19:01Z"}, "message": "avfilter/vf_idet: added more YUVA formats to idet query_formats\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f7660f5cb0981da1e54d8648964541d6715b8caf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f7660f5cb0981da1e54d8648964541d6715b8caf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c/comments", "author": {"login": "ronag", "id": 3065230, "avatar_url": "https://avatars3.githubusercontent.com/u/3065230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronag", "html_url": "https://github.com/ronag", "followers_url": "https://api.github.com/users/ronag/followers", "following_url": "https://api.github.com/users/ronag/following{/other_user}", "gists_url": "https://api.github.com/users/ronag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronag/subscriptions", "organizations_url": "https://api.github.com/users/ronag/orgs", "repos_url": "https://api.github.com/users/ronag/repos", "events_url": "https://api.github.com/users/ronag/events{/privacy}", "received_events_url": "https://api.github.com/users/ronag/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827"}]}, {"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:02:26Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:02:26Z"}, "message": "dashdec: Support SegmentTemplate inside Period\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "9a66e4e4b3f8045913a615b1ff26ac4150800d54", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9a66e4e4b3f8045913a615b1ff26ac4150800d54"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8"}]}, {"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:01:45Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:01:45Z"}, "message": "dashdec: Avoid trying to read any segments beyond the last\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a31c765426346eac96fff4abcaa2025a34a87a9d", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a31c765426346eac96fff4abcaa2025a34a87a9d"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c"}]}, {"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:36:02Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:36:02Z"}, "message": "dashdec: Correct seeking behaviour\n\ndash_read_seek() is called only once to issue a seek\nof *all* streams to the specified timestamp. But to\navoid reopening each stream, do a \"dry run\" for streams\nthat are in a discarded state.\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "63be000b6b3f4b520b7391c0eefecf85b06a6921", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/63be000b6b3f4b520b7391c0eefecf85b06a6921"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759"}]}, {"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:35:31Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:35:31Z"}, "message": "dashdec: Search for segment timeline inside AdaptionSets too", "tree": {"sha": "6306262aa59ffe8510a186f7437a833304bf7c71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6306262aa59ffe8510a186f7437a833304bf7c71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917"}]}, {"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:34:43Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:34:43Z"}, "message": "dashdec: Support for multiple video/audio streams\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241"}]}, {"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:33:57Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:33:57Z"}, "message": "dashdec: Expose bandwidth and representation ID as metadata\n\nThe primary goal was making it viable to play YouTube/Vimeo/... videos\nusing the native demuxer, since mpv currently uses a workaround in form\nof Edit Decision Lists (EDL).\n\nImplemented features:\n\n1 Exposing id / bitrate as stream metadata (similar to the HLS demuxer)\n2 Support for multiple video and audio streams\n3 A few minor parts of the specification that are in use at YouTube\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "271cf37bcb0bde5de801de146368e69dbbad5dbf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/271cf37bcb0bde5de801de146368e69dbbad5dbf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f"}]}, {"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2018-01-14T12:00:23Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:51Z"}, "message": "avformat/adtsenc: allow only AAC streams\n\nThe ADTS muxer will silently (attempt to) mux any audio stream passed to it.\nPatch adds a codec check.\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "4601a7f7986371cc036261c77e7ce46f1168bfed", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/4601a7f7986371cc036261c77e7ce46f1168bfed"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c"}]}, {"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2017-05-29T21:12:51Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:42Z"}, "message": "avformat/adtsenc: add adts_init()\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "f19139ffc4cf491127f94e46c19d927ec28c1e03", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f19139ffc4cf491127f94e46c19d927ec28c1e03"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1"}]}, {"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "commit": {"author": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:27:36Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:37:54Z"}, "message": "dcaenc: move all tables inside context and fix incorrect coding style\n\nFunctionally identical to the old code, with less lines wasted.\nPartially fixes the complete disregard for the 80 col/line guide.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>", "tree": {"sha": "24741d32eb2f40999abd8c0ceceb2a921b09a434", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/24741d32eb2f40999abd8c0ceceb2a921b09a434"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1/comments", "author": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77"}]}, {"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "commit": {"author": {"name": "Daniil Cherednik", "email": "dan.cherednik@gmail.com", "date": "2018-01-07T22:39:22Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:13:58Z"}, "message": "avcodec/dcaenc: Use ffmpeg mdct instead of own implementation\n\nSigned-off-by: Daniil Cherednik <dan.cherednik@gmail.com>", "tree": {"sha": "2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77/comments", "author": {"login": "dcherednik", "id": 1076097, "avatar_url": "https://avatars1.githubusercontent.com/u/1076097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcherednik", "html_url": "https://github.com/dcherednik", "followers_url": "https://api.github.com/users/dcherednik/followers", "following_url": "https://api.github.com/users/dcherednik/following{/other_user}", "gists_url": "https://api.github.com/users/dcherednik/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcherednik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcherednik/subscriptions", "organizations_url": "https://api.github.com/users/dcherednik/orgs", "repos_url": "https://api.github.com/users/dcherednik/repos", "events_url": "https://api.github.com/users/dcherednik/events{/privacy}", "received_events_url": "https://api.github.com/users/dcherednik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e11ebf55a5e51a8a7131d382c2020e35d34f42", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/56e11ebf55a5e51a8a7131d382c2020e35d34f42", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/56e11ebf55a5e51a8a7131d382c2020e35d34f42"}]}], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "id": 161357702, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "number": 274, "state": "open", "locked": false, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9db65dbdd24304e34c5bca95df61e28a16c91969", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e", "head": {"label": "kierank:patch-1", "ref": "patch-1", "sha": "95df93815a05f658397096dec8c8c44cd0a8e22e", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "repo": {"id": 29426797, "name": "FFmpeg", "full_name": "kierank/FFmpeg", "owner": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/kierank/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": true, "url": "https://api.github.com/repos/kierank/FFmpeg", "forks_url": "https://api.github.com/repos/kierank/FFmpeg/forks", "keys_url": "https://api.github.com/repos/kierank/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/kierank/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/kierank/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/kierank/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/kierank/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/kierank/FFmpeg/events", "assignees_url": "https://api.github.com/repos/kierank/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/kierank/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/kierank/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/kierank/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/kierank/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/kierank/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/kierank/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/kierank/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/kierank/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/kierank/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/kierank/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/kierank/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/kierank/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/kierank/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/kierank/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/kierank/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/kierank/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/kierank/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/kierank/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/kierank/FFmpeg/merges", "archive_url": "https://api.github.com/repos/kierank/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/kierank/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/kierank/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/kierank/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/kierank/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/kierank/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/kierank/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/kierank/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/kierank/FFmpeg/deployments", "created_at": "2015-01-18T13:30:18Z", "updated_at": "2018-01-09T19:55:27Z", "pushed_at": "2018-01-05T14:59:28Z", "git_url": "git://github.com/kierank/FFmpeg.git", "ssh_url": "git@github.com:kierank/FFmpeg.git", "clone_url": "https://github.com/kierank/FFmpeg.git", "svn_url": "https://github.com/kierank/FFmpeg", "homepage": "http://ffmpeg.org", "size": 193174, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": null, "url": null}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "b2be76c0a472b729756ed7a91225c209d0dd1d2e", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/274"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "id": 46028982, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "number": 153, "state": "open", "locked": true, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6dc6c91d7d05da2aed92fafebabad67c026c1562", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8", "head": {"label": "wm4:dummy_branch", "ref": "dummy_branch", "sha": "032b7b5d982edea9ed20bd76e8b669af578be2b8", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "ce0a117ed4f99c5eac2fd365cbdebba568a0ead8", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/153"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/3#issuecomment-4623706", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/3", "id": 4623706, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-03-21T18:19:23Z", "updated_at": "2012-03-21T18:19:23Z", "author_association": "OWNER", "body": "The commits have been merged Sun Jan 22, sorry ive missed that there also was a pull request open here on github.\nNote to everyone, mail pull requests to me (michaelni@gmx.at) or the ffmpeg-devel ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/4#issuecomment-4865124", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/4", "id": 4865124, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-04-01T09:02:39Z", "updated_at": "2012-04-01T09:02:39Z", "author_association": "OWNER", "body": "Patch applied locally, will be in github in a moment\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/5#issuecomment-5590894", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/5", "id": 5590894, "user": {"login": "chinshou", "id": 841761, "avatar_url": "https://avatars2.githubusercontent.com/u/841761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinshou", "html_url": "https://github.com/chinshou", "followers_url": "https://api.github.com/users/chinshou/followers", "following_url": "https://api.github.com/users/chinshou/following{/other_user}", "gists_url": "https://api.github.com/users/chinshou/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinshou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinshou/subscriptions", "organizations_url": "https://api.github.com/users/chinshou/orgs", "repos_url": "https://api.github.com/users/chinshou/repos", "events_url": "https://api.github.com/users/chinshou/events{/privacy}", "received_events_url": "https://api.github.com/users/chinshou/received_events", "type": "User", "site_admin": false}, "created_at": "2012-05-09T01:27:14Z", "updated_at": "2012-05-09T01:27:14Z", "author_association": "CONTRIBUTOR", "body": "test\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10322327", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10322327, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T10:50:03Z", "updated_at": "2012-11-13T10:50:03Z", "author_association": "OWNER", "body": "Hmm, 5 merge commits, 1 rebased commit from master, 1 duplicate commit from you and 5 actual commits. Could you rebase this so there are no random merges and random duplicate commits ? The actual changes that merging all this would introduce probably are ok but i cant merge this branch as is\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10340870", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10340870, "user": {"login": "lippit", "id": 1927231, "avatar_url": "https://avatars1.githubusercontent.com/u/1927231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lippit", "html_url": "https://github.com/lippit", "followers_url": "https://api.github.com/users/lippit/followers", "following_url": "https://api.github.com/users/lippit/following{/other_user}", "gists_url": "https://api.github.com/users/lippit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lippit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lippit/subscriptions", "organizations_url": "https://api.github.com/users/lippit/orgs", "repos_url": "https://api.github.com/users/lippit/repos", "events_url": "https://api.github.com/users/lippit/events{/privacy}", "received_events_url": "https://api.github.com/users/lippit/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T19:54:40Z", "updated_at": "2012-11-13T19:54:40Z", "author_association": "CONTRIBUTOR", "body": "I've rebased my changes into a single commit, since they do not really deserve to have separate commits. Hope this is ok now.\n\nThanks,\nGeorg\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/11#issuecomment-15077820", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/11", "id": 15077820, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-18T19:57:31Z", "updated_at": "2013-03-18T19:57:31Z", "author_association": "OWNER", "body": "commits integrated\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15115173", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15115173, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-19T13:54:02Z", "updated_at": "2013-03-19T13:54:02Z", "author_association": "CONTRIBUTOR", "body": "I will have an updated patch in a day or two. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-15152554", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 15152554, "user": {"login": "heldchen", "id": 299636, "avatar_url": "https://avatars2.githubusercontent.com/u/299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heldchen", "html_url": "https://github.com/heldchen", "followers_url": "https://api.github.com/users/heldchen/followers", "following_url": "https://api.github.com/users/heldchen/following{/other_user}", "gists_url": "https://api.github.com/users/heldchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/heldchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heldchen/subscriptions", "organizations_url": "https://api.github.com/users/heldchen/orgs", "repos_url": "https://api.github.com/users/heldchen/repos", "events_url": "https://api.github.com/users/heldchen/events{/privacy}", "received_events_url": "https://api.github.com/users/heldchen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-20T00:38:29Z", "updated_at": "2013-03-20T00:38:29Z", "author_association": "NONE", "body": "+1\n\nwould love to have xyz2rgb and rgb2xyz this in ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15869902", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15869902, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:37:55Z", "updated_at": "2013-04-03T22:37:55Z", "author_association": "OWNER", "body": "Any updates on this? you said you will have an updated patch in a day or 2, did i miss it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-15870824", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 15870824, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:59:22Z", "updated_at": "2013-04-03T22:59:22Z", "author_association": "OWNER", "body": "where can we find a sample with which to reproduce the bug & fix ?\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-16387140", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 16387140, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-15T14:14:12Z", "updated_at": "2013-04-15T14:14:12Z", "author_association": "OWNER", "body": "The problem has been fixed in 1f2ce32825f7ca14c3bd90ef2781d75e8b704d41\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/15#issuecomment-17781625", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/15", "id": 17781625, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-12T17:29:34Z", "updated_at": "2013-05-12T17:29:34Z", "author_association": "MEMBER", "body": "Please send patch to ffmpeg-devel because it will receive more attention there.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18243491", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18243491, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:45:00Z", "updated_at": "2013-05-21T21:54:27Z", "author_association": "CONTRIBUTOR", "body": "Note that you can do something like:\n\n```\nffplay -f lavfi color=black -vf \"drawtext=text='%{e\\:n+123}':fontcolor=white\"\n```\n\nMay I ask what is the purpose behind such feature? Is it just to solve the problem of `n` starting at 0 or 1?\n\nEdit1:\nOh mmh, I should have read your initial post, my bad.\n\nBut another note; now that the counter is stored in a common place (link->frame_count), I wonder if we couldn't have a more global starting number instead. That would make more sense when using for instance in combination with showinfo filter (which prints the n), or actually any kind of filters where the counter is used (anything with timeline for instance, or various expressions).\n\nEdit2:\nTo be more specific, maybe have a look to filters_common_options in avfilter.c, and try to add it here. Unfortunately, if you do that, it will be limited to each filter scope. Maybe we need some global libavfilter options, so when a `-start_n` is specified by a tool, it is populated everywhere. Such thing should be discussed on ffmpeg-devel mailing list or IRC.\n\nI know I'm being pedantic for such a trivial feature, but I believe it can be done way better and have a few benefits in the long term. Adding such option like this now will mean a depreciation burden next time it's implemented generically.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-18244469", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 18244469, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:56:58Z", "updated_at": "2013-05-21T21:56:58Z", "author_association": "CONTRIBUTOR", "body": "Note: XYZ is supported for decoding since 0c47c9028be2cf4b1a557e653606fced5b959445\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18358847", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18358847, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T17:30:31Z", "updated_at": "2013-05-23T17:30:31Z", "author_association": "CONTRIBUTOR", "body": "@michaelni Sorry for the extreme delay.  I didn't get a chance to get back to this until now.  New commits are attached.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18362780", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18362780, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:33:54Z", "updated_at": "2013-05-23T18:33:54Z", "author_association": "OWNER", "body": "Patch applied by Paul\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/19#issuecomment-18363671", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/19", "id": 18363671, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:46:24Z", "updated_at": "2013-05-23T18:46:24Z", "author_association": "OWNER", "body": "patches should be against master\npatches against release/1.2 should always have been in master first\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/20#issuecomment-18365499", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/20", "id": 18365499, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T19:15:44Z", "updated_at": "2013-05-23T19:15:44Z", "author_association": "OWNER", "body": "Is there any reason why you dont check if getnamenifo() failed ?\nIt seems more correct to me to check it and handle this error condition instead of silently continuing with a empty buffer\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18408496", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18408496, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-24T14:35:12Z", "updated_at": "2013-05-24T14:35:12Z", "author_association": "CONTRIBUTOR", "body": "Good idea (filters_common_options), I hadn't realized n was used outside of the drawtext filter. I'll update this patch when I have a chance and post a link to it on the mailing list.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/21#issuecomment-18453722", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/21", "id": 18453722, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-25T20:52:06Z", "updated_at": "2013-05-25T20:52:06Z", "author_association": "OWNER", "body": "The checks are all wrong, an error is a non zero return not a zero. Please test code before submitting.\nAlso my question still stands, why do you not handle the errors but instead manipulate the name.\nHandling an error means printing an error message and returning failure not continuing.\nPlease explain what you are trying to achive with setting the name to 0 and continuing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18464736", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18464736, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:30:38Z", "updated_at": "2013-05-26T15:30:38Z", "author_association": "OWNER", "body": "Comment from ronald:that change to ff_rtp_set_remote_url() ignores the port parameter, that's not right\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18465012", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18465012, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:51:27Z", "updated_at": "2013-05-26T15:51:27Z", "author_association": "OWNER", "body": "Comment from wbs:\nwbs: michaelni: yes, as BBB says, that commit is very much wrong. if that actually helps in some case, the caller is doing something very much wrong, because it would break every single rtsp case at least. that function is used for setting the peer hostname/port, but the change makes it ignore the port you set. so if the change helps, the caller shouldn't be calling the function at all. or alternatively, add logic to parse out ...\nwbs: ... rtcp_port within that function just as it is done in rtp_open\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-19474426", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 19474426, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T18:40:20Z", "updated_at": "2013-06-14T18:40:20Z", "author_association": "CONTRIBUTOR", "body": "Do to some n00bness on my part, this pull request was empty. I've resubmitted it here: https://github.com/FFmpeg/FFmpeg/issues/24\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19488127", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19488127, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-15T00:19:44Z", "updated_at": "2013-06-15T00:19:44Z", "author_association": "OWNER", "body": "var_values[VAR_N] is left at the old value, isnt that confusing for users of expressions\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19644265", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19644265, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-18T21:39:43Z", "updated_at": "2013-06-18T21:39:43Z", "author_association": "CONTRIBUTOR", "body": "Fixed, start_number is now added directly to var_values[VAR_N] instead of inside the frame_num function.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19693370", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19693370, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T15:54:44Z", "updated_at": "2013-06-19T16:09:13Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the feedback, changes made as requested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19696181", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19696181, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T16:37:25Z", "updated_at": "2013-06-19T16:37:25Z", "author_association": "CONTRIBUTOR", "body": "Thank you for your work.\nI think these commits will be squashed, either by you or by michaelni.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698317", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698317, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:08:46Z", "updated_at": "2013-06-19T17:08:46Z", "author_association": "CONTRIBUTOR", "body": "Sure, no problem. Also, in case it's required: I hereby relinquish all copyright control over the above commits to the FFmpeg project.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698922", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698922, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:17:46Z", "updated_at": "2013-06-19T17:17:46Z", "author_association": "CONTRIBUTOR", "body": "I have never heard of such feature in FFmpeg project. This is not \"GPL\" Asterisk which forces you to relinquish your patch authorship for it to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19700106", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19700106, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:36:06Z", "updated_at": "2013-06-19T17:36:06Z", "author_association": "CONTRIBUTOR", "body": "Good to know. Should I squash my commits, or does a maintainer usually do that?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/658d166da02ff1b1e0a060c1e25d85e8bffc38b9#commitcomment-736812", "id": 736812, "user": {"login": "jnorthrup", "id": 73514, "avatar_url": "https://avatars2.githubusercontent.com/u/73514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnorthrup", "html_url": "https://github.com/jnorthrup", "followers_url": "https://api.github.com/users/jnorthrup/followers", "following_url": "https://api.github.com/users/jnorthrup/following{/other_user}", "gists_url": "https://api.github.com/users/jnorthrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnorthrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnorthrup/subscriptions", "organizations_url": "https://api.github.com/users/jnorthrup/orgs", "repos_url": "https://api.github.com/users/jnorthrup/repos", "events_url": "https://api.github.com/users/jnorthrup/events{/privacy}", "received_events_url": "https://api.github.com/users/jnorthrup/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "658d166da02ff1b1e0a060c1e25d85e8bffc38b9", "created_at": "2011-11-22T04:38:08Z", "updated_at": "2011-11-22T04:38:08Z", "author_association": "NONE", "body": "too cool\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1255779", "id": 1255779, "user": {"login": "frostwire", "id": 1341376, "avatar_url": "https://avatars3.githubusercontent.com/u/1341376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostwire", "html_url": "https://github.com/frostwire", "followers_url": "https://api.github.com/users/frostwire/followers", "following_url": "https://api.github.com/users/frostwire/following{/other_user}", "gists_url": "https://api.github.com/users/frostwire/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostwire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostwire/subscriptions", "organizations_url": "https://api.github.com/users/frostwire/orgs", "repos_url": "https://api.github.com/users/frostwire/repos", "events_url": "https://api.github.com/users/frostwire/events{/privacy}", "received_events_url": "https://api.github.com/users/frostwire/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T13:40:36Z", "updated_at": "2012-04-25T13:40:36Z", "author_association": "NONE", "body": "out of curiosity, why do you multiply by the double negation of f->ec ?\n(I'm just a noob looking around)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1256299", "id": 1256299, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T15:20:09Z", "updated_at": "2012-04-25T15:20:09Z", "author_association": "OWNER", "body": "On Wed, Apr 25, 2012 at 06:40:36AM -0700, FrostWire wrote:\n\n> out of curiosity, why do you multiply by the double negation of f->ec ?\n> (I'm just a noob looking around)\n\nbecause i want the value added when f->ec is not 0\n\ncould have been written as (f->ec ? X : 0) too\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nThe greatest way to live with honor in this world is to be what we pretend\nto be. -- Socrates\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d#commitcomment-2248051", "id": 2248051, "user": {"login": "bygreencn", "id": 22853, "avatar_url": "https://avatars1.githubusercontent.com/u/22853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bygreencn", "html_url": "https://github.com/bygreencn", "followers_url": "https://api.github.com/users/bygreencn/followers", "following_url": "https://api.github.com/users/bygreencn/following{/other_user}", "gists_url": "https://api.github.com/users/bygreencn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bygreencn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bygreencn/subscriptions", "organizations_url": "https://api.github.com/users/bygreencn/orgs", "repos_url": "https://api.github.com/users/bygreencn/repos", "events_url": "https://api.github.com/users/bygreencn/events{/privacy}", "received_events_url": "https://api.github.com/users/bygreencn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d", "created_at": "2012-12-04T09:11:48Z", "updated_at": "2012-12-04T09:11:48Z", "author_association": "NONE", "body": "WinXP(32bit) with MinGW 4.6.1 and VS2010 may cause ffmpeg.exe crash at CommandLineToArgvW.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17#commitcomment-2255576", "id": 2255576, "user": {"login": "fritsch", "id": 1089309, "avatar_url": "https://avatars0.githubusercontent.com/u/1089309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritsch", "html_url": "https://github.com/fritsch", "followers_url": "https://api.github.com/users/fritsch/followers", "following_url": "https://api.github.com/users/fritsch/following{/other_user}", "gists_url": "https://api.github.com/users/fritsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritsch/subscriptions", "organizations_url": "https://api.github.com/users/fritsch/orgs", "repos_url": "https://api.github.com/users/fritsch/repos", "events_url": "https://api.github.com/users/fritsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fritsch/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17", "created_at": "2012-12-05T09:09:24Z", "updated_at": "2012-12-05T09:09:24Z", "author_association": "NONE", "body": "This commit produces an issue within our OpenELEC version 3.0b3 that was based on 0.10.6 Cause we are a bit late in the release cycle, we downgraded to 0.10.5.\n\nFor reference and test sample: https://github.com/OpenELEC/OpenELEC.tv/issues/1557\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307462", "id": 2307462, "user": {"login": "wanzhang", "id": 3039093, "avatar_url": "https://avatars0.githubusercontent.com/u/3039093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanzhang", "html_url": "https://github.com/wanzhang", "followers_url": "https://api.github.com/users/wanzhang/followers", "following_url": "https://api.github.com/users/wanzhang/following{/other_user}", "gists_url": "https://api.github.com/users/wanzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanzhang/subscriptions", "organizations_url": "https://api.github.com/users/wanzhang/orgs", "repos_url": "https://api.github.com/users/wanzhang/repos", "events_url": "https://api.github.com/users/wanzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/wanzhang/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T03:22:53Z", "updated_at": "2012-12-14T03:22:53Z", "author_association": "CONTRIBUTOR", "body": "Is it more simple and readable when changed to \ndiff = ((~(long)ptr )&(ALIGN-1)) + 1;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307764", "id": 2307764, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T05:02:13Z", "updated_at": "2012-12-14T05:02:13Z", "author_association": "OWNER", "body": "On Thu, Dec 13, 2012 at 07:22:57PM -0800, wanzhang wrote:\n\n> Is it more simple and readable when changed to \n> diff = ((~(long)ptr )&(ALIGN-1)) + 1;\n\nyes its a small bit simpler\nchanged\n\n[...]\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nOpposition brings concord. Out of discord comes the fairest harmony.\n-- Heraclitus\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3476900", "id": 3476900, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-06-21T13:43:43Z", "updated_at": "2013-06-21T13:45:12Z", "author_association": "CONTRIBUTOR", "body": "@richardpl While I suppose this it is technically correct to handle these cases, were you finding that it was possible to get, for example,  a value of 22 set on bits_per_raw_sample?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3751836", "id": 3751836, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:02:16Z", "updated_at": "2013-07-30T21:02:16Z", "author_association": "CONTRIBUTOR", "body": "It is possible, its just I did not yet found such files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3752004", "id": 3752004, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:21:22Z", "updated_at": "2013-07-30T21:22:14Z", "author_association": "CONTRIBUTOR", "body": "I would argue it's not possible files that way.  The SMPTE 302M standard does not spec any other sizes than 16, 20, and 24 bits per sample.  I was asking if it were possible to set, via command-line, to have that value set to 21,22, or 23 bits per coded sample?  Just curious.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3755958", "id": 3755958, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-31T10:16:48Z", "updated_at": "2013-07-31T10:16:48Z", "author_association": "CONTRIBUTOR", "body": "I was not talking about SMPTE 302M files. It's irrelevant if bits per sample can be set via command line, it just number that is reported by decoder/containers.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2599a62fbb31a340d106774b8b3dd84169f92895#commitcomment-4181845", "id": 4181845, "user": {"login": "thoughtpalette", "id": 690624, "avatar_url": "https://avatars2.githubusercontent.com/u/690624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoughtpalette", "html_url": "https://github.com/thoughtpalette", "followers_url": "https://api.github.com/users/thoughtpalette/followers", "following_url": "https://api.github.com/users/thoughtpalette/following{/other_user}", "gists_url": "https://api.github.com/users/thoughtpalette/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoughtpalette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoughtpalette/subscriptions", "organizations_url": "https://api.github.com/users/thoughtpalette/orgs", "repos_url": "https://api.github.com/users/thoughtpalette/repos", "events_url": "https://api.github.com/users/thoughtpalette/events{/privacy}", "received_events_url": "https://api.github.com/users/thoughtpalette/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "2599a62fbb31a340d106774b8b3dd84169f92895", "created_at": "2013-09-25T22:10:29Z", "updated_at": "2013-09-25T22:10:29Z", "author_association": "NONE", "body": "Dis guy\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/33da1f29218dab5e2189eb3b6d787bba11e4fccd#commitcomment-6479164", "id": 6479164, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "33da1f29218dab5e2189eb3b6d787bba11e4fccd", "created_at": "2014-05-28T19:12:22Z", "updated_at": "2014-05-28T19:12:22Z", "author_association": "MEMBER", "body": "These may look better as an ordered list rather than an unordered list with numerals. Refer to the [markdown syntax](http://daringfireball.net/projects/markdown/syntax#list). (Also, please disregard my previous comments on the older commits; I commented before viewing your newer commits.)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479737", "id": 6479737, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:55:25Z", "updated_at": "2014-05-28T19:56:19Z", "author_association": "MEMBER", "body": "We are almost there. Thanks for the updates so far. The look of the raw text is more important than the markdown rendered look, so it should be given priority, but I think both can be made to look good.  This line can be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479756", "id": 6479756, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:31Z", "updated_at": "2014-05-28T19:56:31Z", "author_association": "MEMBER", "body": "Please add four spaces to the beginning of this line.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479759", "id": 6479759, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 8, "line": 9, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:45Z", "updated_at": "2014-05-28T19:56:45Z", "author_association": "MEMBER", "body": "This line can also be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479769", "id": 6479769, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 11, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:57:03Z", "updated_at": "2014-05-28T19:57:03Z", "author_association": "MEMBER", "body": "Same with this line. The only other blocking nit is the extra backticks for the code spans. Unless I'm wrong I think one backtick on each side of the word should suffice instead of three.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6450c05ba56d652901c362f27a6226d29dbf9381#commitcomment-6532581", "id": 6532581, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": 64, "line": 64, "path": "libswresample/swresample.c", "commit_id": "6450c05ba56d652901c362f27a6226d29dbf9381", "created_at": "2014-06-03T04:37:12Z", "updated_at": "2014-06-03T04:37:12Z", "author_association": "NONE", "body": "@michaelni I notice `clev` and `slev` defaults have been set at -3dB since first\nintroduced in b5875b9\n\nWhy did you choose this value? It seems to make for poor downmixing\n\n[`ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851`](http://ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6839935", "id": 6839935, "user": {"login": "saste", "id": 878876, "avatar_url": "https://avatars0.githubusercontent.com/u/878876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saste", "html_url": "https://github.com/saste", "followers_url": "https://api.github.com/users/saste/followers", "following_url": "https://api.github.com/users/saste/following{/other_user}", "gists_url": "https://api.github.com/users/saste/gists{/gist_id}", "starred_url": "https://api.github.com/users/saste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saste/subscriptions", "organizations_url": "https://api.github.com/users/saste/orgs", "repos_url": "https://api.github.com/users/saste/repos", "events_url": "https://api.github.com/users/saste/events{/privacy}", "received_events_url": "https://api.github.com/users/saste/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T12:24:56Z", "updated_at": "2014-06-30T12:25:10Z", "author_association": "CONTRIBUTOR", "body": "Hi, please can you comment about why do you think this is useful (I'm not contrary to the idea but this is a bit inconsistent with how the other tools work)?\n\nAlso posting patches to the ffmpeg-devel mailing-list is preferred since most developers are used to comment there, thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6842184", "id": 6842184, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T15:12:53Z", "updated_at": "2014-06-30T15:12:53Z", "author_association": "NONE", "body": "It is useful because they are shorter, same reason you would use `-af` over `-filter:a`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931737", "id": 7931737, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:39:23Z", "updated_at": "2014-09-25T22:39:23Z", "author_association": "NONE", "body": "Consider an mp4 files with just pps in the h264 stream (no sps in the NAL units, but available from avcc).\nIn this case 'ctx->idr_sps_pps_seen' prevents inserting sps in the extracted h264, which is then unusable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931921", "id": 7931921, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:56:39Z", "updated_at": "2014-09-25T22:56:39Z", "author_association": "MEMBER", "body": "@thomag I have forwarded your comment to https://ffmpeg.org/pipermail/ffmpeg-devel/2014-September/163453.html, where discussion is more active. Please subscribe to ffmpeg-devel if you have any further comments, and please do not break the thread if you do.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531", "id": 7933531, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T02:15:24Z", "updated_at": "2014-09-26T02:15:24Z", "author_association": "OWNER", "body": "@thomag Do you have a sample h264 file / testcase to reproduce this ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7942638", "id": 7942638, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T16:32:10Z", "updated_at": "2014-09-26T16:32:10Z", "author_association": "NONE", "body": "Michael,\nHere is a short clip @ https://s3.amazonaws.com/quickfire-public/dwclip2.mp4\nwhich has just PPS in the h264 stream.\nPlease let me know if you need anything else.\nRegards,\nThomas.\n\nOn Fri, Sep 26, 2014 at 9:17 AM, Thomas George <\nthomasg@quickfirenetworks.com> wrote:\n\n> Sure. This is short mp4 vid. with just PPS in the h264 stream.\n> Please let me know if you want anything else.\n> Regards,\n> Thomas.\n> \n> On Thu, Sep 25, 2014 at 7:15 PM, Michael Niedermayer <\n> notifications@github.com> wrote:\n> \n> > @thomag https://github.com/thomag Do you have a sample h264 file /\n> > testcase to reproduce this ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531\n> > .\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8831371", "id": 8831371, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T10:15:15Z", "updated_at": "2014-12-04T10:15:15Z", "author_association": "NONE", "body": "I'm getting a seg fault on cygwin (windows xp). Probably inside open_output_file function (line 87)\n![untitled](https://cloud.githubusercontent.com/assets/9247809/5296651/0d0b8524-7baf-11e4-8d7f-c43a35d7cd53.JPG)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8838788", "id": 8838788, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T18:09:15Z", "updated_at": "2014-12-04T18:09:15Z", "author_association": "OWNER", "body": "Issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea#commitcomment-8871529", "id": 8871529, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea", "created_at": "2014-12-08T09:19:22Z", "updated_at": "2014-12-08T09:19:22Z", "author_association": "NONE", "body": "Thanks for the update!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333236", "id": 9333236, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:07:31Z", "updated_at": "2015-01-19T02:08:27Z", "author_association": "CONTRIBUTOR", "body": "That commit completely broke the muxing into mkv container for many video files \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333513", "id": 9333513, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:56:16Z", "updated_at": "2015-01-19T02:56:16Z", "author_association": "OWNER", "body": "How can this issue be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9337330", "id": 9337330, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T10:57:18Z", "updated_at": "2015-01-19T10:57:18Z", "author_association": "CONTRIBUTOR", "body": "I had many MPEG-TS Videos and FFmpeg failed to mux them into mkv. Try with some MPEGT-TS video you may find.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682", "pull_request_review_id": null, "id": 3419682, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "codecs should not depend on sizof(AVFrame) due to ABI, AVFrame is part of libavutil and not libavcodec\n", "created_at": "2013-03-18T20:12:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838", "pull_request_review_id": null, "id": 3419838, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "Thats not how AVPackets are initilaized, please see how other encoders do it, one way is with ff_alloc_packet2()\n", "created_at": "2013-03-18T20:18:45Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893", "pull_request_review_id": null, "id": 3419893, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "the code should be converted to the new API not a wraper added over the old and otherwise unused code\n", "created_at": "2013-03-18T20:21:15Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947", "pull_request_review_id": null, "id": 3419947, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "This can be calculated with integers which avoid platform specific rounding dependancies (aka bitexact output and behavior between platforms)\n", "created_at": "2013-03-18T20:23:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132", "pull_request_review_id": null, "id": 3425132, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright.  The original implementation had it this way.  No one at libav mentioned it, hence, it was left this way.  \n", "created_at": "2013-03-19T03:00:44Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200", "pull_request_review_id": null, "id": 3425200, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "While I had considered doing this, I wanted to avoid a monolithic function and thought this would be sufficient.  The old code isn't \"unused\" so much as it's just using the original avcodec_encode_audio interface.\n\nWhat about simply, modfiying the function signature of s302m_encode_frame to something like:\ns302_encode_audio(AVCodecContext *, AVPacket *, AVFrame *);\n", "created_at": "2013-03-19T03:08:57Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207", "pull_request_review_id": null, "id": 3425207, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll clean this up.  I was testing something out and wanted doubles for some reason.  It shouldn't be doubles...\n", "created_at": "2013-03-19T03:09:35Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215", "pull_request_review_id": null, "id": 3425215, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll checkout some other encoders and ff_alloc_packet2.  Thanks.\n", "created_at": "2013-03-19T03:10:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233", "pull_request_review_id": null, "id": 3425233, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "The original author referenced s->frame for the current coded frame.  How should this be handled if the S302MContext should not contain an AVFrame?\n", "created_at": "2013-03-19T03:12:56Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558", "pull_request_review_id": null, "id": 3428558, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "There should be no wraper, also the code in the wraper looks odd, i dont think these checks are needed\n", "created_at": "2013-03-19T10:32:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564", "pull_request_review_id": null, "id": 3428564, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "simply not setting coded_frame should be fine\n", "created_at": "2013-03-19T10:32:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327", "pull_request_review_id": null, "id": 3431327, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Ok.\n", "created_at": "2013-03-19T13:53:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334", "pull_request_review_id": null, "id": 3431334, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright, I'll clean it up.\n", "created_at": "2013-03-19T13:53:37Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509", "pull_request_review_id": null, "id": 4762509, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "The expression stuff outside and inside the loop could be merged. (and the errors ignored before the last iteration)\n", "created_at": "2013-06-18T23:25:01Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702", "pull_request_review_id": null, "id": 4764702, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "indentation got a bit broken, also at drawgrid_options. Please realign AV_OPT_... values\n", "created_at": "2013-06-19T02:46:49Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734", "pull_request_review_id": null, "id": 4764734, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "Please update also drawgrid doc in same way\n", "created_at": "2013-06-19T02:52:36Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841", "pull_request_review_id": null, "id": 4764841, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red", "path": "doc/filters.texi", "position": null, "original_position": 68, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "I'd write x=-t, also reference t in all other places where it is meant.\nIn sake of example correctness: if input image size ration exceeds 2.40:1, e.g. 3:1, i think it will draw just two horizontal lines (didn't test though).\n", "created_at": "2013-06-19T03:12:35Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907", "pull_request_review_id": null, "id": 4764907, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "(Feel free to ignore the below.)\nIt may be better to move eval-stuff to separate procedure called from config_input(), so it would be easier to add possibility to reference changing variables, (e.g. timestamp or frame number), just calling eval function from filter_frame() instead of config_input().\n", "created_at": "2013-06-19T03:21:40Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664", "pull_request_review_id": null, "id": 4775664, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:11Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669", "pull_request_review_id": null, "id": 4775669, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:18Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673", "pull_request_review_id": null, "id": 4775673, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:31Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764", "pull_request_review_id": null, "id": 4775764, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "I thought of that, too, but in the end I figured it would be easy enough to refactor the eval stuff into a separate function if variables are ever added that vary over time. I surveyed a few other filters, and the \"don't do it until you need it\" approach seems to be consistent.\n", "created_at": "2013-06-19T15:53:04Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369", "pull_request_review_id": null, "id": 8574369, "diff_hunk": "@@ -786,11 +802,12 @@ static int hls_read_seek(AVFormatContext *s, int stream_index,\n                                        s->streams[stream_index]->time_base.den,\n                                        flags & AVSEEK_FLAG_BACKWARD ?\n                                        AV_ROUND_DOWN : AV_ROUND_UP);\n-    timestamp = av_rescale_rnd(timestamp, AV_TIME_BASE, stream_index >= 0 ?\n-                               s->streams[stream_index]->time_base.den :\n-                               AV_TIME_BASE, flags & AVSEEK_FLAG_BACKWARD ?\n-                               AV_ROUND_DOWN : AV_ROUND_UP);\n-    if (s->duration < c->seek_timestamp) {\n+    first_timestamp = c->first_timestamp == AV_NOPTS_VALUE ?\n+                      0 : c->first_timestamp;\n+    seek_timestamp = c->seek_timestamp;\n+\n+    if (seek_timestamp < first_timestamp ||\n+        (s->duration && s->duration < seek_timestamp - first_timestamp)) {", "path": "libavformat/hls.c", "position": null, "original_position": 74, "commit_id": "ac3e65020be94f2831f738f3b73c2b90300cc358", "original_commit_id": "86235c7d8ea94d7425b358b76c6bf11e0a931c6c", "user": {"login": "vkosh", "id": 28398, "avatar_url": "https://avatars1.githubusercontent.com/u/28398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkosh", "html_url": "https://github.com/vkosh", "followers_url": "https://api.github.com/users/vkosh/followers", "following_url": "https://api.github.com/users/vkosh/following{/other_user}", "gists_url": "https://api.github.com/users/vkosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkosh/subscriptions", "organizations_url": "https://api.github.com/users/vkosh/orgs", "repos_url": "https://api.github.com/users/vkosh/repos", "events_url": "https://api.github.com/users/vkosh/events{/privacy}", "received_events_url": "https://api.github.com/users/vkosh/received_events", "type": "User", "site_admin": false}, "body": "Added a \"seek_timestamp - first_timestamp\" in check condition to cover a case when first VOD segment starts from non-zero timestamp.\n", "created_at": "2013-12-27T23:49:05Z", "updated_at": "2014-01-04T22:47:06Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248", "pull_request_review_id": null, "id": 16581248, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please merge this line with\n\n```\nOBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n```\n", "created_at": "2014-08-22T03:37:56Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249", "pull_request_review_id": null, "id": 16581249, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Also, alphabetical order.\n", "created_at": "2014-08-22T03:38:09Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271", "pull_request_review_id": null, "id": 16581271, "diff_hunk": "@@ -0,0 +1,50 @@\n+#ifndef AVFFRAMERECEIVER_H", "path": "libavdevice/avfframereceiver.h", "position": null, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Missing copyright. Also use `AVDEVICE_AVFFRAMERECEIVER_H` as multi-inclusion guard.\n", "created_at": "2014-08-22T03:39:32Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279", "pull_request_review_id": null, "id": 16581279, "diff_hunk": "@@ -0,0 +1,42 @@\n+#import \"avfframereceiver.h\"", "path": "libavdevice/avfframereceiver.m", "position": 21, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please add copyright.\n", "created_at": "2014-08-22T03:39:52Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728", "pull_request_review_id": null, "id": 16603728, "diff_hunk": "@@ -13,7 +13,9 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n                                             alsa-audio-dec.o timefilter.o\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n-OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o \\\n+\t\t\t\t\t\t\t\t\t\t\tavfframereceiver.o", "path": "libavdevice/Makefile", "position": null, "original_position": 7, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "No tabs are allowed in FFmpeg.\n", "created_at": "2014-08-22T15:29:07Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841", "pull_request_review_id": null, "id": 16603841, "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * AVCapture input device\n+ * Copyright (c) 2014 Joseph Benden <joe@thrallingpenguin.com>", "path": "libavdevice/avfframereceiver.m", "position": null, "original_position": 3, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "This needs\n\n```\nCopyright (c) 2014 Thilo Borgmann <thilo.borgmann@mail.de>\n```\n\ntoo as you copied the contents from avfoundation.m.\n", "created_at": "2014-08-22T15:31:14Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773", "pull_request_review_id": null, "id": 20589773, "diff_hunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2010-2011 FFmpeg for WinRT ARM project\n+ *\n+ * Authors: Jesse Jiang <qyljcy@163.com>\n+ *          PPLive Inc. <http://www.pptv.com/>", "path": "compat/winrtapiconvert.h", "position": 5, "original_position": 5, "commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "original_commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Use\n\n```\nCopyright (c) 2014 Jesse Jiang <qyljcy@163.com>\nCopyright (c) 2014 PPLive Inc. <http://www.pptv.com>\n```\n", "created_at": "2014-11-19T17:03:43Z", "updated_at": "2014-11-19T17:03:43Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "3": {"issues": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "id": 286311738, "number": 274, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "id": 108354736, "number": 153, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch"}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "4f6b34f1f803a103f321330bc5f9e4a01f788925", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "message": "avformat: small AVFormatContext doxy cosmetics\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "9ffd1b023ae6f16565cf006ae29a8174c12bac38", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9ffd1b023ae6f16565cf006ae29a8174c12bac38"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374"}]}, {"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "commit": {"author": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T10:17:03Z"}, "committer": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T15:26:14Z"}, "message": "avfilter/af_afade: acrossfade: switch to activate\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>", "tree": {"sha": "1909d2207b5f7f8452bf7995cf4aefe77a64f68e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/1909d2207b5f7f8452bf7995cf4aefe77a64f68e"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374/comments", "author": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b"}]}, {"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:24Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:33Z"}, "message": "avformat: small cosmetics after 6512ff72f9\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "6fb8ae44ffa4396ccca96cb953cb131e7557a763", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6fb8ae44ffa4396ccca96cb953cb131e7557a763"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa"}]}, {"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2017-12-23T10:44:25Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "avfilter/vidstab: check bytesPerPixel only for packed formats.\n\nlibvidstab introduced this variable only for packed formats but in\nvf_vidstab*.c, it's checked for all inputs. So the filter errors out for YUV422/444P streams.\n\nFixes #6736.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "48f26a5b645e2d960ae1317f0a572981a3fa4207", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/48f26a5b645e2d960ae1317f0a572981a3fa4207"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a"}]}, {"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-16T14:44:02Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "lavfi/deinterlace_vaapi: fix can't show full option information.\n\nuse ffmpeg -h filter=deinterlace_vaapi can't get full help information,\nthe root cause is not setting the flags fileld in options.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "cb3c137b3d1ea4158732bf6c1462820ddcf8249f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cb3c137b3d1ea4158732bf6c1462820ddcf8249f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/383804edd812410219a097e2bf3efac8a8b4562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607"}]}, {"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "message": "Merge commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8'\n\n* commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8':\n  qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2fa8b4d23c1b284b36190ff8debc100608e1ed99", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2fa8b4d23c1b284b36190ff8debc100608e1ed99"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e"}, {"sha": "cbe28bc069dde1d53d937ee10700bb123279c7c8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbe28bc069dde1d53d937ee10700bb123279c7c8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbe28bc069dde1d53d937ee10700bb123279c7c8"}]}, {"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "message": "Merge commit '34c113335b53d83ed343de49741f0823aa1f8cc6'\n\n* commit '34c113335b53d83ed343de49741f0823aa1f8cc6':\n  Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nMost of this was already present from 9ea6607d294526688ab1b1342cb36ee159683e88,\nthis just applies some minor fixups and adds the general documentation.\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3987bb94bae98ce8b08d31237568d85d27f0993b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3987bb94bae98ce8b08d31237568d85d27f0993b"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68de778ccc35bea885a989e47358089da006a8b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6"}, {"sha": "34c113335b53d83ed343de49741f0823aa1f8cc6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34c113335b53d83ed343de49741f0823aa1f8cc6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/34c113335b53d83ed343de49741f0823aa1f8cc6"}]}, {"sha": "68de778ccc35bea885a989e47358089da006a8b6", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "message": "Merge commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336'\n\n* commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336':\n  cmdutils: update copyright year to 2018\n\nThis commit is a noop, see bddf31ba7570325dd2c8d033eae3d0dd74127f96\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/68de778ccc35bea885a989e47358089da006a8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494"}, {"sha": "7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/7b0b5bc810cdb9ef100492c9a9f2d30602c04336"}]}, {"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "message": "Merge commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74'\n\n* commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74':\n  examples/qsvdec: do not set the deprecated field refcounted_frames\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf"}, {"sha": "1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1efbbfedcaf4a3cecab980273ad809ba3ade2f74"}]}, {"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "message": "Merge commit 'e23190269fb6e8217d080918893641ba3e0e3556'\n\n* commit 'e23190269fb6e8217d080918893641ba3e0e3556':\n  lavu/qsv: add log message for libmfx version\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2d897473d776b34f3cc2777a745e02259bdaf847", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d897473d776b34f3cc2777a745e02259bdaf847"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a919ab853efcecf89516e703df8018d0649e1143", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143"}, {"sha": "e23190269fb6e8217d080918893641ba3e0e3556", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e23190269fb6e8217d080918893641ba3e0e3556", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e23190269fb6e8217d080918893641ba3e0e3556"}]}, {"sha": "a919ab853efcecf89516e703df8018d0649e1143", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-15T10:57:33Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-16T21:02:34Z"}, "message": "lavc/snow_dwt: add struct MpegEncContext to fix headers check.\n\nadd missing struct MpegEncContext, use make checkheaders\nfound this warning.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "516d6e20d87511916dd1740ac8c422f1c1596b71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/516d6e20d87511916dd1740ac8c422f1c1596b71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a919ab853efcecf89516e703df8018d0649e1143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec"}]}, {"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T12:23:55Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T16:40:24Z"}, "message": "hwcontext_d3d11va: implement av_hwdevice_get_hwframe_constraints()\n\nD3D11 has rather fine grained per format capabilities for different uses\nthat can be queried at runtime. Since we don't know what the user wants\nto do with the formats when av_hwdevice_get_hwframe_constraints() is\ncalled, we simply return all formats that have the most basic support.", "tree": {"sha": "e6004497e7d55923fc2c69503c2f735db57b55fc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/e6004497e7d55923fc2c69503c2f735db57b55fc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385"}]}, {"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "message": "avformat: make avformat_network_init() explicitly optional\n\nIt was sort of optional before - if you didn't call it, networking was\ninitialized on demand, and an ugly warning was logged. Also, the doxygen\ncomments threatened that it would be made strictly required one day.\n\nMake it explicitly optional. I would prefer to deprecate it fully, but\nthere might still be legitimate reasons to use this. But the average\nuser won't need it.\n\nThis is needed only for two reasons: to initialize TLS libraries like\nOpenSSL and GnuTLS, and winsock.\n\nOpenSSL and GnuTLS were already silently initialized on demand if the\nglobal network init function was not called. They also have various\nthread-safety acrobatics, which make concurrent initialization within\nlibavformat safe. In addition, the libraries are moving towards making\ntheir global init functions safe, which removes all need for central\nglobal init. In particular, GnuTLS 3.5.16 and OpenSSL 1.1.0g have been\nfound to have safe init functions. In all cases, they use internal\nreference counters to avoid that the global uninit functions interfere\nwith concurrent uses of the library by other API users who called global\ninit.\n\nwinsock should be thread-safe as well, and maintains an internal\nreference counter as well.\n\nSince we still support ancient TLS libraries, which do not have this\nfixed, and since it's unknown whether winsock and GnuTLS\nreinitialization is costly in any way, don't deprecate the libavformat\nfunctions yet.", "tree": {"sha": "12294edd1f95322624f5bc3a4cda392353da2e46", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/12294edd1f95322624f5bc3a4cda392353da2e46"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e"}]}, {"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T12:09:31Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:54:53Z"}, "message": "avformat: deprecate another ffserver API leftover", "tree": {"sha": "f9c0e23ec334b9d74da60738e39160c8f0eefb13", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f9c0e23ec334b9d74da60738e39160c8f0eefb13"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a"}]}, {"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:41Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/wavpack: Fix integer overflows in wv_unpack_stereo / mono\n\nFixes: runtime error: signed integer overflow: 2146276249 + 1487583 cannot be represented in type 'int'\nFixes: 4823/clusterfuzz-testcase-minimized-4551896611160064\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "66b2678a5e7772b00e171dcd2c17cfde7010dce5", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/66b2678a5e7772b00e171dcd2c17cfde7010dce5"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a/comments", "author": null, "committer": null, "parents": [{"sha": "6887e412434776eb260ad3904f565be491dd5726", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726"}]}, {"sha": "6887e412434776eb260ad3904f565be491dd5726", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:40Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/jpeg2000: Check sum of sizes of band->prec before allocating\n\nFixes: OOM\nFixes: 4810/clusterfuzz-testcase-minimized-6034253235093504\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "ffce940d0eba8f5ad334ffa232d268ceae7885ab", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/ffce940d0eba8f5ad334ffa232d268ceae7885ab"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6887e412434776eb260ad3904f565be491dd5726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726/comments", "author": null, "committer": null, "parents": [{"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950"}]}, {"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:39Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/ac3dec_fixed: Fix integer overflow in scale_coefs()\n\nFixes: runtime error: signed integer overflow: 2147483520 + 128 cannot be represented in type 'int'\nFixes: 4800/clusterfuzz-testcase-minimized-6110372403609600\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f233099e01190d2a7de8d5644b791d5953e6372c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f233099e01190d2a7de8d5644b791d5953e6372c"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950/comments", "author": null, "committer": null, "parents": [{"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490"}]}, {"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-13T06:05:09Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "hwcontext_vdpau: implement av_hwdevice_get_hwframe_constraints()\n\nIn addition, this does not allow creating frames contexts with sw_format\nfor which no known transfer formats exist. In theory, we should check\nwhether the chroma format (i.e. the sw_format) is supported at all by\nthe vdpau driver, but checking for transfer formats has the same effect.\n\nNote that the pre-existing code adds 1 to priv->nb_pix_fmts[i] for\nunknown reason, and some checks need to account for that to check for\nempty lists. They are not off-by-one errors.", "tree": {"sha": "295515241c45e81941e93092070d15e8e6d8d0f6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/295515241c45e81941e93092070d15e8e6d8d0f6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446"}]}, {"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-11T01:27:20Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "http: cosmetics: reformat reconnect check for better readability\n\nThe condition was a bit too long, and most editors will break the line\nand turn it into an unreadable mess. Move out some of the conditions.\n\nThis should not change the behavior.", "tree": {"sha": "cc30b3a22eecea157acf932627a716ce6096c26f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cc30b3a22eecea157acf932627a716ce6096c26f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c"}]}, {"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "commit": {"author": {"name": "Robert Nagy", "email": "ronag89@gmail.com", "date": "2018-01-13T15:51:43Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-14T22:19:01Z"}, "message": "avfilter/vf_idet: added more YUVA formats to idet query_formats\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f7660f5cb0981da1e54d8648964541d6715b8caf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f7660f5cb0981da1e54d8648964541d6715b8caf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c/comments", "author": {"login": "ronag", "id": 3065230, "avatar_url": "https://avatars3.githubusercontent.com/u/3065230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronag", "html_url": "https://github.com/ronag", "followers_url": "https://api.github.com/users/ronag/followers", "following_url": "https://api.github.com/users/ronag/following{/other_user}", "gists_url": "https://api.github.com/users/ronag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronag/subscriptions", "organizations_url": "https://api.github.com/users/ronag/orgs", "repos_url": "https://api.github.com/users/ronag/repos", "events_url": "https://api.github.com/users/ronag/events{/privacy}", "received_events_url": "https://api.github.com/users/ronag/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827"}]}, {"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:02:26Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:02:26Z"}, "message": "dashdec: Support SegmentTemplate inside Period\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "9a66e4e4b3f8045913a615b1ff26ac4150800d54", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9a66e4e4b3f8045913a615b1ff26ac4150800d54"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8"}]}, {"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:01:45Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:01:45Z"}, "message": "dashdec: Avoid trying to read any segments beyond the last\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a31c765426346eac96fff4abcaa2025a34a87a9d", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a31c765426346eac96fff4abcaa2025a34a87a9d"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c"}]}, {"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:36:02Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:36:02Z"}, "message": "dashdec: Correct seeking behaviour\n\ndash_read_seek() is called only once to issue a seek\nof *all* streams to the specified timestamp. But to\navoid reopening each stream, do a \"dry run\" for streams\nthat are in a discarded state.\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "63be000b6b3f4b520b7391c0eefecf85b06a6921", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/63be000b6b3f4b520b7391c0eefecf85b06a6921"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759"}]}, {"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:35:31Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:35:31Z"}, "message": "dashdec: Search for segment timeline inside AdaptionSets too", "tree": {"sha": "6306262aa59ffe8510a186f7437a833304bf7c71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6306262aa59ffe8510a186f7437a833304bf7c71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917"}]}, {"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:34:43Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:34:43Z"}, "message": "dashdec: Support for multiple video/audio streams\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241"}]}, {"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:33:57Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:33:57Z"}, "message": "dashdec: Expose bandwidth and representation ID as metadata\n\nThe primary goal was making it viable to play YouTube/Vimeo/... videos\nusing the native demuxer, since mpv currently uses a workaround in form\nof Edit Decision Lists (EDL).\n\nImplemented features:\n\n1 Exposing id / bitrate as stream metadata (similar to the HLS demuxer)\n2 Support for multiple video and audio streams\n3 A few minor parts of the specification that are in use at YouTube\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "271cf37bcb0bde5de801de146368e69dbbad5dbf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/271cf37bcb0bde5de801de146368e69dbbad5dbf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f"}]}, {"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2018-01-14T12:00:23Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:51Z"}, "message": "avformat/adtsenc: allow only AAC streams\n\nThe ADTS muxer will silently (attempt to) mux any audio stream passed to it.\nPatch adds a codec check.\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "4601a7f7986371cc036261c77e7ce46f1168bfed", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/4601a7f7986371cc036261c77e7ce46f1168bfed"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c"}]}, {"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2017-05-29T21:12:51Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:42Z"}, "message": "avformat/adtsenc: add adts_init()\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "f19139ffc4cf491127f94e46c19d927ec28c1e03", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f19139ffc4cf491127f94e46c19d927ec28c1e03"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1"}]}, {"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "commit": {"author": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:27:36Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:37:54Z"}, "message": "dcaenc: move all tables inside context and fix incorrect coding style\n\nFunctionally identical to the old code, with less lines wasted.\nPartially fixes the complete disregard for the 80 col/line guide.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>", "tree": {"sha": "24741d32eb2f40999abd8c0ceceb2a921b09a434", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/24741d32eb2f40999abd8c0ceceb2a921b09a434"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1/comments", "author": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77"}]}, {"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "commit": {"author": {"name": "Daniil Cherednik", "email": "dan.cherednik@gmail.com", "date": "2018-01-07T22:39:22Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:13:58Z"}, "message": "avcodec/dcaenc: Use ffmpeg mdct instead of own implementation\n\nSigned-off-by: Daniil Cherednik <dan.cherednik@gmail.com>", "tree": {"sha": "2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77/comments", "author": {"login": "dcherednik", "id": 1076097, "avatar_url": "https://avatars1.githubusercontent.com/u/1076097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcherednik", "html_url": "https://github.com/dcherednik", "followers_url": "https://api.github.com/users/dcherednik/followers", "following_url": "https://api.github.com/users/dcherednik/following{/other_user}", "gists_url": "https://api.github.com/users/dcherednik/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcherednik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcherednik/subscriptions", "organizations_url": "https://api.github.com/users/dcherednik/orgs", "repos_url": "https://api.github.com/users/dcherednik/repos", "events_url": "https://api.github.com/users/dcherednik/events{/privacy}", "received_events_url": "https://api.github.com/users/dcherednik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e11ebf55a5e51a8a7131d382c2020e35d34f42", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/56e11ebf55a5e51a8a7131d382c2020e35d34f42", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/56e11ebf55a5e51a8a7131d382c2020e35d34f42"}]}], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "id": 161357702, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "number": 274, "state": "open", "locked": false, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9db65dbdd24304e34c5bca95df61e28a16c91969", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e", "head": {"label": "kierank:patch-1", "ref": "patch-1", "sha": "95df93815a05f658397096dec8c8c44cd0a8e22e", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "repo": {"id": 29426797, "name": "FFmpeg", "full_name": "kierank/FFmpeg", "owner": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/kierank/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": true, "url": "https://api.github.com/repos/kierank/FFmpeg", "forks_url": "https://api.github.com/repos/kierank/FFmpeg/forks", "keys_url": "https://api.github.com/repos/kierank/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/kierank/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/kierank/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/kierank/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/kierank/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/kierank/FFmpeg/events", "assignees_url": "https://api.github.com/repos/kierank/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/kierank/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/kierank/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/kierank/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/kierank/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/kierank/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/kierank/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/kierank/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/kierank/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/kierank/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/kierank/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/kierank/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/kierank/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/kierank/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/kierank/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/kierank/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/kierank/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/kierank/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/kierank/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/kierank/FFmpeg/merges", "archive_url": "https://api.github.com/repos/kierank/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/kierank/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/kierank/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/kierank/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/kierank/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/kierank/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/kierank/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/kierank/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/kierank/FFmpeg/deployments", "created_at": "2015-01-18T13:30:18Z", "updated_at": "2018-01-09T19:55:27Z", "pushed_at": "2018-01-05T14:59:28Z", "git_url": "git://github.com/kierank/FFmpeg.git", "ssh_url": "git@github.com:kierank/FFmpeg.git", "clone_url": "https://github.com/kierank/FFmpeg.git", "svn_url": "https://github.com/kierank/FFmpeg", "homepage": "http://ffmpeg.org", "size": 193174, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": null, "url": null}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "b2be76c0a472b729756ed7a91225c209d0dd1d2e", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/274"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "id": 46028982, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "number": 153, "state": "open", "locked": true, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6dc6c91d7d05da2aed92fafebabad67c026c1562", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8", "head": {"label": "wm4:dummy_branch", "ref": "dummy_branch", "sha": "032b7b5d982edea9ed20bd76e8b669af578be2b8", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "ce0a117ed4f99c5eac2fd365cbdebba568a0ead8", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/153"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/3#issuecomment-4623706", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/3", "id": 4623706, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-03-21T18:19:23Z", "updated_at": "2012-03-21T18:19:23Z", "author_association": "OWNER", "body": "The commits have been merged Sun Jan 22, sorry ive missed that there also was a pull request open here on github.\nNote to everyone, mail pull requests to me (michaelni@gmx.at) or the ffmpeg-devel ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/4#issuecomment-4865124", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/4", "id": 4865124, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-04-01T09:02:39Z", "updated_at": "2012-04-01T09:02:39Z", "author_association": "OWNER", "body": "Patch applied locally, will be in github in a moment\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/5#issuecomment-5590894", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/5", "id": 5590894, "user": {"login": "chinshou", "id": 841761, "avatar_url": "https://avatars2.githubusercontent.com/u/841761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinshou", "html_url": "https://github.com/chinshou", "followers_url": "https://api.github.com/users/chinshou/followers", "following_url": "https://api.github.com/users/chinshou/following{/other_user}", "gists_url": "https://api.github.com/users/chinshou/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinshou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinshou/subscriptions", "organizations_url": "https://api.github.com/users/chinshou/orgs", "repos_url": "https://api.github.com/users/chinshou/repos", "events_url": "https://api.github.com/users/chinshou/events{/privacy}", "received_events_url": "https://api.github.com/users/chinshou/received_events", "type": "User", "site_admin": false}, "created_at": "2012-05-09T01:27:14Z", "updated_at": "2012-05-09T01:27:14Z", "author_association": "CONTRIBUTOR", "body": "test\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10322327", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10322327, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T10:50:03Z", "updated_at": "2012-11-13T10:50:03Z", "author_association": "OWNER", "body": "Hmm, 5 merge commits, 1 rebased commit from master, 1 duplicate commit from you and 5 actual commits. Could you rebase this so there are no random merges and random duplicate commits ? The actual changes that merging all this would introduce probably are ok but i cant merge this branch as is\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10340870", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10340870, "user": {"login": "lippit", "id": 1927231, "avatar_url": "https://avatars1.githubusercontent.com/u/1927231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lippit", "html_url": "https://github.com/lippit", "followers_url": "https://api.github.com/users/lippit/followers", "following_url": "https://api.github.com/users/lippit/following{/other_user}", "gists_url": "https://api.github.com/users/lippit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lippit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lippit/subscriptions", "organizations_url": "https://api.github.com/users/lippit/orgs", "repos_url": "https://api.github.com/users/lippit/repos", "events_url": "https://api.github.com/users/lippit/events{/privacy}", "received_events_url": "https://api.github.com/users/lippit/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T19:54:40Z", "updated_at": "2012-11-13T19:54:40Z", "author_association": "CONTRIBUTOR", "body": "I've rebased my changes into a single commit, since they do not really deserve to have separate commits. Hope this is ok now.\n\nThanks,\nGeorg\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/11#issuecomment-15077820", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/11", "id": 15077820, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-18T19:57:31Z", "updated_at": "2013-03-18T19:57:31Z", "author_association": "OWNER", "body": "commits integrated\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15115173", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15115173, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-19T13:54:02Z", "updated_at": "2013-03-19T13:54:02Z", "author_association": "CONTRIBUTOR", "body": "I will have an updated patch in a day or two. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-15152554", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 15152554, "user": {"login": "heldchen", "id": 299636, "avatar_url": "https://avatars2.githubusercontent.com/u/299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heldchen", "html_url": "https://github.com/heldchen", "followers_url": "https://api.github.com/users/heldchen/followers", "following_url": "https://api.github.com/users/heldchen/following{/other_user}", "gists_url": "https://api.github.com/users/heldchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/heldchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heldchen/subscriptions", "organizations_url": "https://api.github.com/users/heldchen/orgs", "repos_url": "https://api.github.com/users/heldchen/repos", "events_url": "https://api.github.com/users/heldchen/events{/privacy}", "received_events_url": "https://api.github.com/users/heldchen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-20T00:38:29Z", "updated_at": "2013-03-20T00:38:29Z", "author_association": "NONE", "body": "+1\n\nwould love to have xyz2rgb and rgb2xyz this in ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15869902", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15869902, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:37:55Z", "updated_at": "2013-04-03T22:37:55Z", "author_association": "OWNER", "body": "Any updates on this? you said you will have an updated patch in a day or 2, did i miss it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-15870824", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 15870824, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:59:22Z", "updated_at": "2013-04-03T22:59:22Z", "author_association": "OWNER", "body": "where can we find a sample with which to reproduce the bug & fix ?\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-16387140", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 16387140, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-15T14:14:12Z", "updated_at": "2013-04-15T14:14:12Z", "author_association": "OWNER", "body": "The problem has been fixed in 1f2ce32825f7ca14c3bd90ef2781d75e8b704d41\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/15#issuecomment-17781625", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/15", "id": 17781625, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-12T17:29:34Z", "updated_at": "2013-05-12T17:29:34Z", "author_association": "MEMBER", "body": "Please send patch to ffmpeg-devel because it will receive more attention there.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18243491", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18243491, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:45:00Z", "updated_at": "2013-05-21T21:54:27Z", "author_association": "CONTRIBUTOR", "body": "Note that you can do something like:\n\n```\nffplay -f lavfi color=black -vf \"drawtext=text='%{e\\:n+123}':fontcolor=white\"\n```\n\nMay I ask what is the purpose behind such feature? Is it just to solve the problem of `n` starting at 0 or 1?\n\nEdit1:\nOh mmh, I should have read your initial post, my bad.\n\nBut another note; now that the counter is stored in a common place (link->frame_count), I wonder if we couldn't have a more global starting number instead. That would make more sense when using for instance in combination with showinfo filter (which prints the n), or actually any kind of filters where the counter is used (anything with timeline for instance, or various expressions).\n\nEdit2:\nTo be more specific, maybe have a look to filters_common_options in avfilter.c, and try to add it here. Unfortunately, if you do that, it will be limited to each filter scope. Maybe we need some global libavfilter options, so when a `-start_n` is specified by a tool, it is populated everywhere. Such thing should be discussed on ffmpeg-devel mailing list or IRC.\n\nI know I'm being pedantic for such a trivial feature, but I believe it can be done way better and have a few benefits in the long term. Adding such option like this now will mean a depreciation burden next time it's implemented generically.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-18244469", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 18244469, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:56:58Z", "updated_at": "2013-05-21T21:56:58Z", "author_association": "CONTRIBUTOR", "body": "Note: XYZ is supported for decoding since 0c47c9028be2cf4b1a557e653606fced5b959445\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18358847", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18358847, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T17:30:31Z", "updated_at": "2013-05-23T17:30:31Z", "author_association": "CONTRIBUTOR", "body": "@michaelni Sorry for the extreme delay.  I didn't get a chance to get back to this until now.  New commits are attached.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18362780", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18362780, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:33:54Z", "updated_at": "2013-05-23T18:33:54Z", "author_association": "OWNER", "body": "Patch applied by Paul\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/19#issuecomment-18363671", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/19", "id": 18363671, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:46:24Z", "updated_at": "2013-05-23T18:46:24Z", "author_association": "OWNER", "body": "patches should be against master\npatches against release/1.2 should always have been in master first\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/20#issuecomment-18365499", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/20", "id": 18365499, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T19:15:44Z", "updated_at": "2013-05-23T19:15:44Z", "author_association": "OWNER", "body": "Is there any reason why you dont check if getnamenifo() failed ?\nIt seems more correct to me to check it and handle this error condition instead of silently continuing with a empty buffer\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18408496", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18408496, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-24T14:35:12Z", "updated_at": "2013-05-24T14:35:12Z", "author_association": "CONTRIBUTOR", "body": "Good idea (filters_common_options), I hadn't realized n was used outside of the drawtext filter. I'll update this patch when I have a chance and post a link to it on the mailing list.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/21#issuecomment-18453722", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/21", "id": 18453722, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-25T20:52:06Z", "updated_at": "2013-05-25T20:52:06Z", "author_association": "OWNER", "body": "The checks are all wrong, an error is a non zero return not a zero. Please test code before submitting.\nAlso my question still stands, why do you not handle the errors but instead manipulate the name.\nHandling an error means printing an error message and returning failure not continuing.\nPlease explain what you are trying to achive with setting the name to 0 and continuing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18464736", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18464736, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:30:38Z", "updated_at": "2013-05-26T15:30:38Z", "author_association": "OWNER", "body": "Comment from ronald:that change to ff_rtp_set_remote_url() ignores the port parameter, that's not right\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18465012", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18465012, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:51:27Z", "updated_at": "2013-05-26T15:51:27Z", "author_association": "OWNER", "body": "Comment from wbs:\nwbs: michaelni: yes, as BBB says, that commit is very much wrong. if that actually helps in some case, the caller is doing something very much wrong, because it would break every single rtsp case at least. that function is used for setting the peer hostname/port, but the change makes it ignore the port you set. so if the change helps, the caller shouldn't be calling the function at all. or alternatively, add logic to parse out ...\nwbs: ... rtcp_port within that function just as it is done in rtp_open\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-19474426", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 19474426, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T18:40:20Z", "updated_at": "2013-06-14T18:40:20Z", "author_association": "CONTRIBUTOR", "body": "Do to some n00bness on my part, this pull request was empty. I've resubmitted it here: https://github.com/FFmpeg/FFmpeg/issues/24\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19488127", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19488127, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-15T00:19:44Z", "updated_at": "2013-06-15T00:19:44Z", "author_association": "OWNER", "body": "var_values[VAR_N] is left at the old value, isnt that confusing for users of expressions\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19644265", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19644265, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-18T21:39:43Z", "updated_at": "2013-06-18T21:39:43Z", "author_association": "CONTRIBUTOR", "body": "Fixed, start_number is now added directly to var_values[VAR_N] instead of inside the frame_num function.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19693370", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19693370, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T15:54:44Z", "updated_at": "2013-06-19T16:09:13Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the feedback, changes made as requested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19696181", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19696181, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T16:37:25Z", "updated_at": "2013-06-19T16:37:25Z", "author_association": "CONTRIBUTOR", "body": "Thank you for your work.\nI think these commits will be squashed, either by you or by michaelni.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698317", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698317, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:08:46Z", "updated_at": "2013-06-19T17:08:46Z", "author_association": "CONTRIBUTOR", "body": "Sure, no problem. Also, in case it's required: I hereby relinquish all copyright control over the above commits to the FFmpeg project.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698922", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698922, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:17:46Z", "updated_at": "2013-06-19T17:17:46Z", "author_association": "CONTRIBUTOR", "body": "I have never heard of such feature in FFmpeg project. This is not \"GPL\" Asterisk which forces you to relinquish your patch authorship for it to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19700106", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19700106, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:36:06Z", "updated_at": "2013-06-19T17:36:06Z", "author_association": "CONTRIBUTOR", "body": "Good to know. Should I squash my commits, or does a maintainer usually do that?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/658d166da02ff1b1e0a060c1e25d85e8bffc38b9#commitcomment-736812", "id": 736812, "user": {"login": "jnorthrup", "id": 73514, "avatar_url": "https://avatars2.githubusercontent.com/u/73514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnorthrup", "html_url": "https://github.com/jnorthrup", "followers_url": "https://api.github.com/users/jnorthrup/followers", "following_url": "https://api.github.com/users/jnorthrup/following{/other_user}", "gists_url": "https://api.github.com/users/jnorthrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnorthrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnorthrup/subscriptions", "organizations_url": "https://api.github.com/users/jnorthrup/orgs", "repos_url": "https://api.github.com/users/jnorthrup/repos", "events_url": "https://api.github.com/users/jnorthrup/events{/privacy}", "received_events_url": "https://api.github.com/users/jnorthrup/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "658d166da02ff1b1e0a060c1e25d85e8bffc38b9", "created_at": "2011-11-22T04:38:08Z", "updated_at": "2011-11-22T04:38:08Z", "author_association": "NONE", "body": "too cool\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1255779", "id": 1255779, "user": {"login": "frostwire", "id": 1341376, "avatar_url": "https://avatars3.githubusercontent.com/u/1341376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostwire", "html_url": "https://github.com/frostwire", "followers_url": "https://api.github.com/users/frostwire/followers", "following_url": "https://api.github.com/users/frostwire/following{/other_user}", "gists_url": "https://api.github.com/users/frostwire/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostwire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostwire/subscriptions", "organizations_url": "https://api.github.com/users/frostwire/orgs", "repos_url": "https://api.github.com/users/frostwire/repos", "events_url": "https://api.github.com/users/frostwire/events{/privacy}", "received_events_url": "https://api.github.com/users/frostwire/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T13:40:36Z", "updated_at": "2012-04-25T13:40:36Z", "author_association": "NONE", "body": "out of curiosity, why do you multiply by the double negation of f->ec ?\n(I'm just a noob looking around)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1256299", "id": 1256299, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T15:20:09Z", "updated_at": "2012-04-25T15:20:09Z", "author_association": "OWNER", "body": "On Wed, Apr 25, 2012 at 06:40:36AM -0700, FrostWire wrote:\n\n> out of curiosity, why do you multiply by the double negation of f->ec ?\n> (I'm just a noob looking around)\n\nbecause i want the value added when f->ec is not 0\n\ncould have been written as (f->ec ? X : 0) too\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nThe greatest way to live with honor in this world is to be what we pretend\nto be. -- Socrates\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d#commitcomment-2248051", "id": 2248051, "user": {"login": "bygreencn", "id": 22853, "avatar_url": "https://avatars1.githubusercontent.com/u/22853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bygreencn", "html_url": "https://github.com/bygreencn", "followers_url": "https://api.github.com/users/bygreencn/followers", "following_url": "https://api.github.com/users/bygreencn/following{/other_user}", "gists_url": "https://api.github.com/users/bygreencn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bygreencn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bygreencn/subscriptions", "organizations_url": "https://api.github.com/users/bygreencn/orgs", "repos_url": "https://api.github.com/users/bygreencn/repos", "events_url": "https://api.github.com/users/bygreencn/events{/privacy}", "received_events_url": "https://api.github.com/users/bygreencn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d", "created_at": "2012-12-04T09:11:48Z", "updated_at": "2012-12-04T09:11:48Z", "author_association": "NONE", "body": "WinXP(32bit) with MinGW 4.6.1 and VS2010 may cause ffmpeg.exe crash at CommandLineToArgvW.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17#commitcomment-2255576", "id": 2255576, "user": {"login": "fritsch", "id": 1089309, "avatar_url": "https://avatars0.githubusercontent.com/u/1089309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritsch", "html_url": "https://github.com/fritsch", "followers_url": "https://api.github.com/users/fritsch/followers", "following_url": "https://api.github.com/users/fritsch/following{/other_user}", "gists_url": "https://api.github.com/users/fritsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritsch/subscriptions", "organizations_url": "https://api.github.com/users/fritsch/orgs", "repos_url": "https://api.github.com/users/fritsch/repos", "events_url": "https://api.github.com/users/fritsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fritsch/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17", "created_at": "2012-12-05T09:09:24Z", "updated_at": "2012-12-05T09:09:24Z", "author_association": "NONE", "body": "This commit produces an issue within our OpenELEC version 3.0b3 that was based on 0.10.6 Cause we are a bit late in the release cycle, we downgraded to 0.10.5.\n\nFor reference and test sample: https://github.com/OpenELEC/OpenELEC.tv/issues/1557\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307462", "id": 2307462, "user": {"login": "wanzhang", "id": 3039093, "avatar_url": "https://avatars0.githubusercontent.com/u/3039093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanzhang", "html_url": "https://github.com/wanzhang", "followers_url": "https://api.github.com/users/wanzhang/followers", "following_url": "https://api.github.com/users/wanzhang/following{/other_user}", "gists_url": "https://api.github.com/users/wanzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanzhang/subscriptions", "organizations_url": "https://api.github.com/users/wanzhang/orgs", "repos_url": "https://api.github.com/users/wanzhang/repos", "events_url": "https://api.github.com/users/wanzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/wanzhang/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T03:22:53Z", "updated_at": "2012-12-14T03:22:53Z", "author_association": "CONTRIBUTOR", "body": "Is it more simple and readable when changed to \ndiff = ((~(long)ptr )&(ALIGN-1)) + 1;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307764", "id": 2307764, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T05:02:13Z", "updated_at": "2012-12-14T05:02:13Z", "author_association": "OWNER", "body": "On Thu, Dec 13, 2012 at 07:22:57PM -0800, wanzhang wrote:\n\n> Is it more simple and readable when changed to \n> diff = ((~(long)ptr )&(ALIGN-1)) + 1;\n\nyes its a small bit simpler\nchanged\n\n[...]\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nOpposition brings concord. Out of discord comes the fairest harmony.\n-- Heraclitus\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3476900", "id": 3476900, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-06-21T13:43:43Z", "updated_at": "2013-06-21T13:45:12Z", "author_association": "CONTRIBUTOR", "body": "@richardpl While I suppose this it is technically correct to handle these cases, were you finding that it was possible to get, for example,  a value of 22 set on bits_per_raw_sample?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3751836", "id": 3751836, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:02:16Z", "updated_at": "2013-07-30T21:02:16Z", "author_association": "CONTRIBUTOR", "body": "It is possible, its just I did not yet found such files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3752004", "id": 3752004, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:21:22Z", "updated_at": "2013-07-30T21:22:14Z", "author_association": "CONTRIBUTOR", "body": "I would argue it's not possible files that way.  The SMPTE 302M standard does not spec any other sizes than 16, 20, and 24 bits per sample.  I was asking if it were possible to set, via command-line, to have that value set to 21,22, or 23 bits per coded sample?  Just curious.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3755958", "id": 3755958, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-31T10:16:48Z", "updated_at": "2013-07-31T10:16:48Z", "author_association": "CONTRIBUTOR", "body": "I was not talking about SMPTE 302M files. It's irrelevant if bits per sample can be set via command line, it just number that is reported by decoder/containers.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2599a62fbb31a340d106774b8b3dd84169f92895#commitcomment-4181845", "id": 4181845, "user": {"login": "thoughtpalette", "id": 690624, "avatar_url": "https://avatars2.githubusercontent.com/u/690624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoughtpalette", "html_url": "https://github.com/thoughtpalette", "followers_url": "https://api.github.com/users/thoughtpalette/followers", "following_url": "https://api.github.com/users/thoughtpalette/following{/other_user}", "gists_url": "https://api.github.com/users/thoughtpalette/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoughtpalette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoughtpalette/subscriptions", "organizations_url": "https://api.github.com/users/thoughtpalette/orgs", "repos_url": "https://api.github.com/users/thoughtpalette/repos", "events_url": "https://api.github.com/users/thoughtpalette/events{/privacy}", "received_events_url": "https://api.github.com/users/thoughtpalette/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "2599a62fbb31a340d106774b8b3dd84169f92895", "created_at": "2013-09-25T22:10:29Z", "updated_at": "2013-09-25T22:10:29Z", "author_association": "NONE", "body": "Dis guy\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/33da1f29218dab5e2189eb3b6d787bba11e4fccd#commitcomment-6479164", "id": 6479164, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "33da1f29218dab5e2189eb3b6d787bba11e4fccd", "created_at": "2014-05-28T19:12:22Z", "updated_at": "2014-05-28T19:12:22Z", "author_association": "MEMBER", "body": "These may look better as an ordered list rather than an unordered list with numerals. Refer to the [markdown syntax](http://daringfireball.net/projects/markdown/syntax#list). (Also, please disregard my previous comments on the older commits; I commented before viewing your newer commits.)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479737", "id": 6479737, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:55:25Z", "updated_at": "2014-05-28T19:56:19Z", "author_association": "MEMBER", "body": "We are almost there. Thanks for the updates so far. The look of the raw text is more important than the markdown rendered look, so it should be given priority, but I think both can be made to look good.  This line can be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479756", "id": 6479756, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:31Z", "updated_at": "2014-05-28T19:56:31Z", "author_association": "MEMBER", "body": "Please add four spaces to the beginning of this line.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479759", "id": 6479759, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 8, "line": 9, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:45Z", "updated_at": "2014-05-28T19:56:45Z", "author_association": "MEMBER", "body": "This line can also be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479769", "id": 6479769, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 11, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:57:03Z", "updated_at": "2014-05-28T19:57:03Z", "author_association": "MEMBER", "body": "Same with this line. The only other blocking nit is the extra backticks for the code spans. Unless I'm wrong I think one backtick on each side of the word should suffice instead of three.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6450c05ba56d652901c362f27a6226d29dbf9381#commitcomment-6532581", "id": 6532581, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": 64, "line": 64, "path": "libswresample/swresample.c", "commit_id": "6450c05ba56d652901c362f27a6226d29dbf9381", "created_at": "2014-06-03T04:37:12Z", "updated_at": "2014-06-03T04:37:12Z", "author_association": "NONE", "body": "@michaelni I notice `clev` and `slev` defaults have been set at -3dB since first\nintroduced in b5875b9\n\nWhy did you choose this value? It seems to make for poor downmixing\n\n[`ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851`](http://ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6839935", "id": 6839935, "user": {"login": "saste", "id": 878876, "avatar_url": "https://avatars0.githubusercontent.com/u/878876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saste", "html_url": "https://github.com/saste", "followers_url": "https://api.github.com/users/saste/followers", "following_url": "https://api.github.com/users/saste/following{/other_user}", "gists_url": "https://api.github.com/users/saste/gists{/gist_id}", "starred_url": "https://api.github.com/users/saste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saste/subscriptions", "organizations_url": "https://api.github.com/users/saste/orgs", "repos_url": "https://api.github.com/users/saste/repos", "events_url": "https://api.github.com/users/saste/events{/privacy}", "received_events_url": "https://api.github.com/users/saste/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T12:24:56Z", "updated_at": "2014-06-30T12:25:10Z", "author_association": "CONTRIBUTOR", "body": "Hi, please can you comment about why do you think this is useful (I'm not contrary to the idea but this is a bit inconsistent with how the other tools work)?\n\nAlso posting patches to the ffmpeg-devel mailing-list is preferred since most developers are used to comment there, thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6842184", "id": 6842184, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T15:12:53Z", "updated_at": "2014-06-30T15:12:53Z", "author_association": "NONE", "body": "It is useful because they are shorter, same reason you would use `-af` over `-filter:a`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931737", "id": 7931737, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:39:23Z", "updated_at": "2014-09-25T22:39:23Z", "author_association": "NONE", "body": "Consider an mp4 files with just pps in the h264 stream (no sps in the NAL units, but available from avcc).\nIn this case 'ctx->idr_sps_pps_seen' prevents inserting sps in the extracted h264, which is then unusable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931921", "id": 7931921, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:56:39Z", "updated_at": "2014-09-25T22:56:39Z", "author_association": "MEMBER", "body": "@thomag I have forwarded your comment to https://ffmpeg.org/pipermail/ffmpeg-devel/2014-September/163453.html, where discussion is more active. Please subscribe to ffmpeg-devel if you have any further comments, and please do not break the thread if you do.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531", "id": 7933531, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T02:15:24Z", "updated_at": "2014-09-26T02:15:24Z", "author_association": "OWNER", "body": "@thomag Do you have a sample h264 file / testcase to reproduce this ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7942638", "id": 7942638, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T16:32:10Z", "updated_at": "2014-09-26T16:32:10Z", "author_association": "NONE", "body": "Michael,\nHere is a short clip @ https://s3.amazonaws.com/quickfire-public/dwclip2.mp4\nwhich has just PPS in the h264 stream.\nPlease let me know if you need anything else.\nRegards,\nThomas.\n\nOn Fri, Sep 26, 2014 at 9:17 AM, Thomas George <\nthomasg@quickfirenetworks.com> wrote:\n\n> Sure. This is short mp4 vid. with just PPS in the h264 stream.\n> Please let me know if you want anything else.\n> Regards,\n> Thomas.\n> \n> On Thu, Sep 25, 2014 at 7:15 PM, Michael Niedermayer <\n> notifications@github.com> wrote:\n> \n> > @thomag https://github.com/thomag Do you have a sample h264 file /\n> > testcase to reproduce this ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531\n> > .\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8831371", "id": 8831371, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T10:15:15Z", "updated_at": "2014-12-04T10:15:15Z", "author_association": "NONE", "body": "I'm getting a seg fault on cygwin (windows xp). Probably inside open_output_file function (line 87)\n![untitled](https://cloud.githubusercontent.com/assets/9247809/5296651/0d0b8524-7baf-11e4-8d7f-c43a35d7cd53.JPG)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8838788", "id": 8838788, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T18:09:15Z", "updated_at": "2014-12-04T18:09:15Z", "author_association": "OWNER", "body": "Issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea#commitcomment-8871529", "id": 8871529, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea", "created_at": "2014-12-08T09:19:22Z", "updated_at": "2014-12-08T09:19:22Z", "author_association": "NONE", "body": "Thanks for the update!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333236", "id": 9333236, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:07:31Z", "updated_at": "2015-01-19T02:08:27Z", "author_association": "CONTRIBUTOR", "body": "That commit completely broke the muxing into mkv container for many video files \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333513", "id": 9333513, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:56:16Z", "updated_at": "2015-01-19T02:56:16Z", "author_association": "OWNER", "body": "How can this issue be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9337330", "id": 9337330, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T10:57:18Z", "updated_at": "2015-01-19T10:57:18Z", "author_association": "CONTRIBUTOR", "body": "I had many MPEG-TS Videos and FFmpeg failed to mux them into mkv. Try with some MPEGT-TS video you may find.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682", "pull_request_review_id": null, "id": 3419682, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "codecs should not depend on sizof(AVFrame) due to ABI, AVFrame is part of libavutil and not libavcodec\n", "created_at": "2013-03-18T20:12:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838", "pull_request_review_id": null, "id": 3419838, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "Thats not how AVPackets are initilaized, please see how other encoders do it, one way is with ff_alloc_packet2()\n", "created_at": "2013-03-18T20:18:45Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893", "pull_request_review_id": null, "id": 3419893, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "the code should be converted to the new API not a wraper added over the old and otherwise unused code\n", "created_at": "2013-03-18T20:21:15Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947", "pull_request_review_id": null, "id": 3419947, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "This can be calculated with integers which avoid platform specific rounding dependancies (aka bitexact output and behavior between platforms)\n", "created_at": "2013-03-18T20:23:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132", "pull_request_review_id": null, "id": 3425132, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright.  The original implementation had it this way.  No one at libav mentioned it, hence, it was left this way.  \n", "created_at": "2013-03-19T03:00:44Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200", "pull_request_review_id": null, "id": 3425200, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "While I had considered doing this, I wanted to avoid a monolithic function and thought this would be sufficient.  The old code isn't \"unused\" so much as it's just using the original avcodec_encode_audio interface.\n\nWhat about simply, modfiying the function signature of s302m_encode_frame to something like:\ns302_encode_audio(AVCodecContext *, AVPacket *, AVFrame *);\n", "created_at": "2013-03-19T03:08:57Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207", "pull_request_review_id": null, "id": 3425207, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll clean this up.  I was testing something out and wanted doubles for some reason.  It shouldn't be doubles...\n", "created_at": "2013-03-19T03:09:35Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215", "pull_request_review_id": null, "id": 3425215, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll checkout some other encoders and ff_alloc_packet2.  Thanks.\n", "created_at": "2013-03-19T03:10:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233", "pull_request_review_id": null, "id": 3425233, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "The original author referenced s->frame for the current coded frame.  How should this be handled if the S302MContext should not contain an AVFrame?\n", "created_at": "2013-03-19T03:12:56Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558", "pull_request_review_id": null, "id": 3428558, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "There should be no wraper, also the code in the wraper looks odd, i dont think these checks are needed\n", "created_at": "2013-03-19T10:32:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564", "pull_request_review_id": null, "id": 3428564, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "simply not setting coded_frame should be fine\n", "created_at": "2013-03-19T10:32:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327", "pull_request_review_id": null, "id": 3431327, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Ok.\n", "created_at": "2013-03-19T13:53:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334", "pull_request_review_id": null, "id": 3431334, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright, I'll clean it up.\n", "created_at": "2013-03-19T13:53:37Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509", "pull_request_review_id": null, "id": 4762509, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "The expression stuff outside and inside the loop could be merged. (and the errors ignored before the last iteration)\n", "created_at": "2013-06-18T23:25:01Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702", "pull_request_review_id": null, "id": 4764702, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "indentation got a bit broken, also at drawgrid_options. Please realign AV_OPT_... values\n", "created_at": "2013-06-19T02:46:49Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734", "pull_request_review_id": null, "id": 4764734, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "Please update also drawgrid doc in same way\n", "created_at": "2013-06-19T02:52:36Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841", "pull_request_review_id": null, "id": 4764841, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red", "path": "doc/filters.texi", "position": null, "original_position": 68, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "I'd write x=-t, also reference t in all other places where it is meant.\nIn sake of example correctness: if input image size ration exceeds 2.40:1, e.g. 3:1, i think it will draw just two horizontal lines (didn't test though).\n", "created_at": "2013-06-19T03:12:35Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907", "pull_request_review_id": null, "id": 4764907, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "(Feel free to ignore the below.)\nIt may be better to move eval-stuff to separate procedure called from config_input(), so it would be easier to add possibility to reference changing variables, (e.g. timestamp or frame number), just calling eval function from filter_frame() instead of config_input().\n", "created_at": "2013-06-19T03:21:40Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664", "pull_request_review_id": null, "id": 4775664, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:11Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669", "pull_request_review_id": null, "id": 4775669, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:18Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673", "pull_request_review_id": null, "id": 4775673, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:31Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764", "pull_request_review_id": null, "id": 4775764, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "I thought of that, too, but in the end I figured it would be easy enough to refactor the eval stuff into a separate function if variables are ever added that vary over time. I surveyed a few other filters, and the \"don't do it until you need it\" approach seems to be consistent.\n", "created_at": "2013-06-19T15:53:04Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369", "pull_request_review_id": null, "id": 8574369, "diff_hunk": "@@ -786,11 +802,12 @@ static int hls_read_seek(AVFormatContext *s, int stream_index,\n                                        s->streams[stream_index]->time_base.den,\n                                        flags & AVSEEK_FLAG_BACKWARD ?\n                                        AV_ROUND_DOWN : AV_ROUND_UP);\n-    timestamp = av_rescale_rnd(timestamp, AV_TIME_BASE, stream_index >= 0 ?\n-                               s->streams[stream_index]->time_base.den :\n-                               AV_TIME_BASE, flags & AVSEEK_FLAG_BACKWARD ?\n-                               AV_ROUND_DOWN : AV_ROUND_UP);\n-    if (s->duration < c->seek_timestamp) {\n+    first_timestamp = c->first_timestamp == AV_NOPTS_VALUE ?\n+                      0 : c->first_timestamp;\n+    seek_timestamp = c->seek_timestamp;\n+\n+    if (seek_timestamp < first_timestamp ||\n+        (s->duration && s->duration < seek_timestamp - first_timestamp)) {", "path": "libavformat/hls.c", "position": null, "original_position": 74, "commit_id": "ac3e65020be94f2831f738f3b73c2b90300cc358", "original_commit_id": "86235c7d8ea94d7425b358b76c6bf11e0a931c6c", "user": {"login": "vkosh", "id": 28398, "avatar_url": "https://avatars1.githubusercontent.com/u/28398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkosh", "html_url": "https://github.com/vkosh", "followers_url": "https://api.github.com/users/vkosh/followers", "following_url": "https://api.github.com/users/vkosh/following{/other_user}", "gists_url": "https://api.github.com/users/vkosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkosh/subscriptions", "organizations_url": "https://api.github.com/users/vkosh/orgs", "repos_url": "https://api.github.com/users/vkosh/repos", "events_url": "https://api.github.com/users/vkosh/events{/privacy}", "received_events_url": "https://api.github.com/users/vkosh/received_events", "type": "User", "site_admin": false}, "body": "Added a \"seek_timestamp - first_timestamp\" in check condition to cover a case when first VOD segment starts from non-zero timestamp.\n", "created_at": "2013-12-27T23:49:05Z", "updated_at": "2014-01-04T22:47:06Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248", "pull_request_review_id": null, "id": 16581248, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please merge this line with\n\n```\nOBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n```\n", "created_at": "2014-08-22T03:37:56Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249", "pull_request_review_id": null, "id": 16581249, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Also, alphabetical order.\n", "created_at": "2014-08-22T03:38:09Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271", "pull_request_review_id": null, "id": 16581271, "diff_hunk": "@@ -0,0 +1,50 @@\n+#ifndef AVFFRAMERECEIVER_H", "path": "libavdevice/avfframereceiver.h", "position": null, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Missing copyright. Also use `AVDEVICE_AVFFRAMERECEIVER_H` as multi-inclusion guard.\n", "created_at": "2014-08-22T03:39:32Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279", "pull_request_review_id": null, "id": 16581279, "diff_hunk": "@@ -0,0 +1,42 @@\n+#import \"avfframereceiver.h\"", "path": "libavdevice/avfframereceiver.m", "position": 21, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please add copyright.\n", "created_at": "2014-08-22T03:39:52Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728", "pull_request_review_id": null, "id": 16603728, "diff_hunk": "@@ -13,7 +13,9 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n                                             alsa-audio-dec.o timefilter.o\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n-OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o \\\n+\t\t\t\t\t\t\t\t\t\t\tavfframereceiver.o", "path": "libavdevice/Makefile", "position": null, "original_position": 7, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "No tabs are allowed in FFmpeg.\n", "created_at": "2014-08-22T15:29:07Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841", "pull_request_review_id": null, "id": 16603841, "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * AVCapture input device\n+ * Copyright (c) 2014 Joseph Benden <joe@thrallingpenguin.com>", "path": "libavdevice/avfframereceiver.m", "position": null, "original_position": 3, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "This needs\n\n```\nCopyright (c) 2014 Thilo Borgmann <thilo.borgmann@mail.de>\n```\n\ntoo as you copied the contents from avfoundation.m.\n", "created_at": "2014-08-22T15:31:14Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773", "pull_request_review_id": null, "id": 20589773, "diff_hunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2010-2011 FFmpeg for WinRT ARM project\n+ *\n+ * Authors: Jesse Jiang <qyljcy@163.com>\n+ *          PPLive Inc. <http://www.pptv.com/>", "path": "compat/winrtapiconvert.h", "position": 5, "original_position": 5, "commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "original_commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Use\n\n```\nCopyright (c) 2014 Jesse Jiang <qyljcy@163.com>\nCopyright (c) 2014 PPLive Inc. <http://www.pptv.com>\n```\n", "created_at": "2014-11-19T17:03:43Z", "updated_at": "2014-11-19T17:03:43Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "4": {"issues": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "id": 286311738, "number": 274, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "repository_url": "https://api.github.com/repos/FFmpeg/FFmpeg", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/events", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "id": 108354736, "number": 153, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch"}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "4f6b34f1f803a103f321330bc5f9e4a01f788925", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-18T16:00:25Z"}, "message": "avformat: small AVFormatContext doxy cosmetics\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "9ffd1b023ae6f16565cf006ae29a8174c12bac38", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9ffd1b023ae6f16565cf006ae29a8174c12bac38"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/4f6b34f1f803a103f321330bc5f9e4a01f788925", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374"}]}, {"sha": "8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "commit": {"author": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T10:17:03Z"}, "committer": {"name": "Paul B Mahol", "email": "onemda@gmail.com", "date": "2018-01-18T15:26:14Z"}, "message": "avfilter/af_afade: acrossfade: switch to activate\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>", "tree": {"sha": "1909d2207b5f7f8452bf7995cf4aefe77a64f68e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/1909d2207b5f7f8452bf7995cf4aefe77a64f68e"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374/comments", "author": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b"}]}, {"sha": "1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:24Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-17T22:39:33Z"}, "message": "avformat: small cosmetics after 6512ff72f9\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "6fb8ae44ffa4396ccca96cb953cb131e7557a763", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6fb8ae44ffa4396ccca96cb953cb131e7557a763"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa"}]}, {"sha": "e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2017-12-23T10:44:25Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "avfilter/vidstab: check bytesPerPixel only for packed formats.\n\nlibvidstab introduced this variable only for packed formats but in\nvf_vidstab*.c, it's checked for all inputs. So the filter errors out for YUV422/444P streams.\n\nFixes #6736.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "48f26a5b645e2d960ae1317f0a572981a3fa4207", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/48f26a5b645e2d960ae1317f0a572981a3fa4207"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a"}]}, {"sha": "383804edd812410219a097e2bf3efac8a8b4562a", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-16T14:44:02Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-17T19:02:14Z"}, "message": "lavfi/deinterlace_vaapi: fix can't show full option information.\n\nuse ffmpeg -h filter=deinterlace_vaapi can't get full help information,\nthe root cause is not setting the flags fileld in options.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "cb3c137b3d1ea4158732bf6c1462820ddcf8249f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cb3c137b3d1ea4158732bf6c1462820ddcf8249f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/383804edd812410219a097e2bf3efac8a8b4562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/383804edd812410219a097e2bf3efac8a8b4562a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607"}]}, {"sha": "96cf0d8a9cf35f3c49860bf1c000c382dd661607", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:29:36Z"}, "message": "Merge commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8'\n\n* commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8':\n  qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2fa8b4d23c1b284b36190ff8debc100608e1ed99", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2fa8b4d23c1b284b36190ff8debc100608e1ed99"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e"}, {"sha": "cbe28bc069dde1d53d937ee10700bb123279c7c8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbe28bc069dde1d53d937ee10700bb123279c7c8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbe28bc069dde1d53d937ee10700bb123279c7c8"}]}, {"sha": "3895fce26ec7f6d2b1642f96ecaddede6521228e", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:25:27Z"}, "message": "Merge commit '34c113335b53d83ed343de49741f0823aa1f8cc6'\n\n* commit '34c113335b53d83ed343de49741f0823aa1f8cc6':\n  Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nMost of this was already present from 9ea6607d294526688ab1b1342cb36ee159683e88,\nthis just applies some minor fixups and adds the general documentation.\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3987bb94bae98ce8b08d31237568d85d27f0993b", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3987bb94bae98ce8b08d31237568d85d27f0993b"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/3895fce26ec7f6d2b1642f96ecaddede6521228e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68de778ccc35bea885a989e47358089da006a8b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6"}, {"sha": "34c113335b53d83ed343de49741f0823aa1f8cc6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34c113335b53d83ed343de49741f0823aa1f8cc6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/34c113335b53d83ed343de49741f0823aa1f8cc6"}]}, {"sha": "68de778ccc35bea885a989e47358089da006a8b6", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T23:01:20Z"}, "message": "Merge commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336'\n\n* commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336':\n  cmdutils: update copyright year to 2018\n\nThis commit is a noop, see bddf31ba7570325dd2c8d033eae3d0dd74127f96\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/68de778ccc35bea885a989e47358089da006a8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/68de778ccc35bea885a989e47358089da006a8b6", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494"}, {"sha": "7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/7b0b5bc810cdb9ef100492c9a9f2d30602c04336"}]}, {"sha": "725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:09Z"}, "message": "Merge commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74'\n\n* commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74':\n  examples/qsvdec: do not set the deprecated field refcounted_frames\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "3b431d591c55ae3d9fff0cc554833f6c3444899a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/3b431d591c55ae3d9fff0cc554833f6c3444899a"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf"}, {"sha": "1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/1efbbfedcaf4a3cecab980273ad809ba3ade2f74"}]}, {"sha": "d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "commit": {"author": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "committer": {"name": "Mark Thompson", "email": "sw@jkqxz.net", "date": "2018-01-16T22:57:02Z"}, "message": "Merge commit 'e23190269fb6e8217d080918893641ba3e0e3556'\n\n* commit 'e23190269fb6e8217d080918893641ba3e0e3556':\n  lavu/qsv: add log message for libmfx version\n\nMerged-by: Mark Thompson <sw@jkqxz.net>", "tree": {"sha": "2d897473d776b34f3cc2777a745e02259bdaf847", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d897473d776b34f3cc2777a745e02259bdaf847"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf/comments", "author": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhvwy", "id": 18668774, "avatar_url": "https://avatars0.githubusercontent.com/u/18668774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhvwy", "html_url": "https://github.com/fhvwy", "followers_url": "https://api.github.com/users/fhvwy/followers", "following_url": "https://api.github.com/users/fhvwy/following{/other_user}", "gists_url": "https://api.github.com/users/fhvwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhvwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhvwy/subscriptions", "organizations_url": "https://api.github.com/users/fhvwy/orgs", "repos_url": "https://api.github.com/users/fhvwy/repos", "events_url": "https://api.github.com/users/fhvwy/events{/privacy}", "received_events_url": "https://api.github.com/users/fhvwy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a919ab853efcecf89516e703df8018d0649e1143", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143"}, {"sha": "e23190269fb6e8217d080918893641ba3e0e3556", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e23190269fb6e8217d080918893641ba3e0e3556", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e23190269fb6e8217d080918893641ba3e0e3556"}]}, {"sha": "a919ab853efcecf89516e703df8018d0649e1143", "commit": {"author": {"name": "Jun Zhao", "email": "jun.zhao@intel.com", "date": "2018-01-15T10:57:33Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-16T21:02:34Z"}, "message": "lavc/snow_dwt: add struct MpegEncContext to fix headers check.\n\nadd missing struct MpegEncContext, use make checkheaders\nfound this warning.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "516d6e20d87511916dd1740ac8c422f1c1596b71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/516d6e20d87511916dd1740ac8c422f1c1596b71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a919ab853efcecf89516e703df8018d0649e1143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a919ab853efcecf89516e703df8018d0649e1143", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143/comments", "author": {"login": "mypopydev", "id": 8201808, "avatar_url": "https://avatars3.githubusercontent.com/u/8201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mypopydev", "html_url": "https://github.com/mypopydev", "followers_url": "https://api.github.com/users/mypopydev/followers", "following_url": "https://api.github.com/users/mypopydev/following{/other_user}", "gists_url": "https://api.github.com/users/mypopydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mypopydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mypopydev/subscriptions", "organizations_url": "https://api.github.com/users/mypopydev/orgs", "repos_url": "https://api.github.com/users/mypopydev/repos", "events_url": "https://api.github.com/users/mypopydev/events{/privacy}", "received_events_url": "https://api.github.com/users/mypopydev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec"}]}, {"sha": "27b9f82e2c5dca3ad642ed13c2360032a17687ec", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T12:23:55Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T16:40:24Z"}, "message": "hwcontext_d3d11va: implement av_hwdevice_get_hwframe_constraints()\n\nD3D11 has rather fine grained per format capabilities for different uses\nthat can be queried at runtime. Since we don't know what the user wants\nto do with the formats when av_hwdevice_get_hwframe_constraints() is\ncalled, we simply return all formats that have the most basic support.", "tree": {"sha": "e6004497e7d55923fc2c69503c2f735db57b55fc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/e6004497e7d55923fc2c69503c2f735db57b55fc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385"}]}, {"sha": "631c56a8e46dea41585f3e7b3ef9c52b49faa385", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:57:04Z"}, "message": "avformat: make avformat_network_init() explicitly optional\n\nIt was sort of optional before - if you didn't call it, networking was\ninitialized on demand, and an ugly warning was logged. Also, the doxygen\ncomments threatened that it would be made strictly required one day.\n\nMake it explicitly optional. I would prefer to deprecate it fully, but\nthere might still be legitimate reasons to use this. But the average\nuser won't need it.\n\nThis is needed only for two reasons: to initialize TLS libraries like\nOpenSSL and GnuTLS, and winsock.\n\nOpenSSL and GnuTLS were already silently initialized on demand if the\nglobal network init function was not called. They also have various\nthread-safety acrobatics, which make concurrent initialization within\nlibavformat safe. In addition, the libraries are moving towards making\ntheir global init functions safe, which removes all need for central\nglobal init. In particular, GnuTLS 3.5.16 and OpenSSL 1.1.0g have been\nfound to have safe init functions. In all cases, they use internal\nreference counters to avoid that the global uninit functions interfere\nwith concurrent uses of the library by other API users who called global\ninit.\n\nwinsock should be thread-safe as well, and maintains an internal\nreference counter as well.\n\nSince we still support ancient TLS libraries, which do not have this\nfixed, and since it's unknown whether winsock and GnuTLS\nreinitialization is costly in any way, don't deprecate the libavformat\nfunctions yet.", "tree": {"sha": "12294edd1f95322624f5bc3a4cda392353da2e46", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/12294edd1f95322624f5bc3a4cda392353da2e46"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e"}]}, {"sha": "6512ff72f9cc058e27646604caeacc4ef0dbd93e", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T12:09:31Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-16T11:54:53Z"}, "message": "avformat: deprecate another ffserver API leftover", "tree": {"sha": "f9c0e23ec334b9d74da60738e39160c8f0eefb13", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f9c0e23ec334b9d74da60738e39160c8f0eefb13"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a"}]}, {"sha": "83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:41Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/wavpack: Fix integer overflows in wv_unpack_stereo / mono\n\nFixes: runtime error: signed integer overflow: 2146276249 + 1487583 cannot be represented in type 'int'\nFixes: 4823/clusterfuzz-testcase-minimized-4551896611160064\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "66b2678a5e7772b00e171dcd2c17cfde7010dce5", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/66b2678a5e7772b00e171dcd2c17cfde7010dce5"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/83e34ae3c2b36e7b20169a8866e3f49294db1f5a", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/83e34ae3c2b36e7b20169a8866e3f49294db1f5a/comments", "author": null, "committer": null, "parents": [{"sha": "6887e412434776eb260ad3904f565be491dd5726", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726"}]}, {"sha": "6887e412434776eb260ad3904f565be491dd5726", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:40Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/jpeg2000: Check sum of sizes of band->prec before allocating\n\nFixes: OOM\nFixes: 4810/clusterfuzz-testcase-minimized-6034253235093504\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "ffce940d0eba8f5ad334ffa232d268ceae7885ab", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/ffce940d0eba8f5ad334ffa232d268ceae7885ab"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/6887e412434776eb260ad3904f565be491dd5726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6887e412434776eb260ad3904f565be491dd5726", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6887e412434776eb260ad3904f565be491dd5726/comments", "author": null, "committer": null, "parents": [{"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950"}]}, {"sha": "a1f38c75893c852cf19dcf3e4553549ba1e70950", "commit": {"author": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-13T23:39:39Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-15T18:55:22Z"}, "message": "avcodec/ac3dec_fixed: Fix integer overflow in scale_coefs()\n\nFixes: runtime error: signed integer overflow: 2147483520 + 128 cannot be represented in type 'int'\nFixes: 4800/clusterfuzz-testcase-minimized-6110372403609600\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f233099e01190d2a7de8d5644b791d5953e6372c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f233099e01190d2a7de8d5644b791d5953e6372c"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/a1f38c75893c852cf19dcf3e4553549ba1e70950", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a1f38c75893c852cf19dcf3e4553549ba1e70950/comments", "author": null, "committer": null, "parents": [{"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490"}]}, {"sha": "cbbb2067341d7c2d98f560f81c6fb103af33a490", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-13T06:05:09Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "hwcontext_vdpau: implement av_hwdevice_get_hwframe_constraints()\n\nIn addition, this does not allow creating frames contexts with sw_format\nfor which no known transfer formats exist. In theory, we should check\nwhether the chroma format (i.e. the sw_format) is supported at all by\nthe vdpau driver, but checking for transfer formats has the same effect.\n\nNote that the pre-existing code adds 1 to priv->nb_pix_fmts[i] for\nunknown reason, and some checks need to account for that to check for\nempty lists. They are not off-by-one errors.", "tree": {"sha": "295515241c45e81941e93092070d15e8e6d8d0f6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/295515241c45e81941e93092070d15e8e6d8d0f6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/cbbb2067341d7c2d98f560f81c6fb103af33a490", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446"}]}, {"sha": "43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "commit": {"author": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-11T01:27:20Z"}, "committer": {"name": "wm4", "email": "nfxjfg@googlemail.com", "date": "2018-01-15T11:37:30Z"}, "message": "http: cosmetics: reformat reconnect check for better readability\n\nThe condition was a bit too long, and most editors will break the line\nand turn it into an unreadable mess. Move out some of the conditions.\n\nThis should not change the behavior.", "tree": {"sha": "cc30b3a22eecea157acf932627a716ce6096c26f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/cc30b3a22eecea157acf932627a716ce6096c26f"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446/comments", "author": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c"}]}, {"sha": "856b7cae9f40c094be6a1dfa73eb57295838496c", "commit": {"author": {"name": "Robert Nagy", "email": "ronag89@gmail.com", "date": "2018-01-13T15:51:43Z"}, "committer": {"name": "Michael Niedermayer", "email": "michael@niedermayer.cc", "date": "2018-01-14T22:19:01Z"}, "message": "avfilter/vf_idet: added more YUVA formats to idet query_formats\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>", "tree": {"sha": "f7660f5cb0981da1e54d8648964541d6715b8caf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f7660f5cb0981da1e54d8648964541d6715b8caf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/856b7cae9f40c094be6a1dfa73eb57295838496c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c/comments", "author": {"login": "ronag", "id": 3065230, "avatar_url": "https://avatars3.githubusercontent.com/u/3065230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronag", "html_url": "https://github.com/ronag", "followers_url": "https://api.github.com/users/ronag/followers", "following_url": "https://api.github.com/users/ronag/following{/other_user}", "gists_url": "https://api.github.com/users/ronag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronag/subscriptions", "organizations_url": "https://api.github.com/users/ronag/orgs", "repos_url": "https://api.github.com/users/ronag/repos", "events_url": "https://api.github.com/users/ronag/events{/privacy}", "received_events_url": "https://api.github.com/users/ronag/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827"}]}, {"sha": "57dbabd9c13b9770d2447a2168a1acccd7296827", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:02:26Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:02:26Z"}, "message": "dashdec: Support SegmentTemplate inside Period\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "9a66e4e4b3f8045913a615b1ff26ac4150800d54", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/9a66e4e4b3f8045913a615b1ff26ac4150800d54"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/57dbabd9c13b9770d2447a2168a1acccd7296827", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8"}]}, {"sha": "01d74c405564bb4846bf894bb928ae542273cfe8", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T15:01:45Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T15:01:45Z"}, "message": "dashdec: Avoid trying to read any segments beyond the last\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a31c765426346eac96fff4abcaa2025a34a87a9d", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a31c765426346eac96fff4abcaa2025a34a87a9d"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/01d74c405564bb4846bf894bb928ae542273cfe8", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c"}]}, {"sha": "74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:36:02Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:36:02Z"}, "message": "dashdec: Correct seeking behaviour\n\ndash_read_seek() is called only once to issue a seek\nof *all* streams to the specified timestamp. But to\navoid reopening each stream, do a \"dry run\" for streams\nthat are in a discarded state.\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "63be000b6b3f4b520b7391c0eefecf85b06a6921", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/63be000b6b3f4b520b7391c0eefecf85b06a6921"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759"}]}, {"sha": "bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:35:31Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:35:31Z"}, "message": "dashdec: Search for segment timeline inside AdaptionSets too", "tree": {"sha": "6306262aa59ffe8510a186f7437a833304bf7c71", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/6306262aa59ffe8510a186f7437a833304bf7c71"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917"}]}, {"sha": "94cc16499ff1309386ca1d77aac0627e16ffa917", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:34:43Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:34:43Z"}, "message": "dashdec: Support for multiple video/audio streams\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/a442ab44f0cd5853129f33e2e7bbd054d8ab1bbc"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/94cc16499ff1309386ca1d77aac0627e16ffa917", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241"}]}, {"sha": "66e551eafb8d202f37ba5a2bbe03741966a9e241", "commit": {"author": {"name": "sfan5", "email": "sfan5@live.de", "date": "2018-01-14T14:33:57Z"}, "committer": {"name": "Steven Liu", "email": "lq@chinaffmpeg.org", "date": "2018-01-14T14:33:57Z"}, "message": "dashdec: Expose bandwidth and representation ID as metadata\n\nThe primary goal was making it viable to play YouTube/Vimeo/... videos\nusing the native demuxer, since mpv currently uses a workaround in form\nof Edit Decision Lists (EDL).\n\nImplemented features:\n\n1 Exposing id / bitrate as stream metadata (similar to the HLS demuxer)\n2 Support for multiple video and audio streams\n3 A few minor parts of the specification that are in use at YouTube\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>", "tree": {"sha": "271cf37bcb0bde5de801de146368e69dbbad5dbf", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/271cf37bcb0bde5de801de146368e69dbbad5dbf"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/66e551eafb8d202f37ba5a2bbe03741966a9e241", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241/comments", "author": {"login": "sfan5", "id": 1042418, "avatar_url": "https://avatars1.githubusercontent.com/u/1042418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfan5", "html_url": "https://github.com/sfan5", "followers_url": "https://api.github.com/users/sfan5/followers", "following_url": "https://api.github.com/users/sfan5/following{/other_user}", "gists_url": "https://api.github.com/users/sfan5/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfan5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfan5/subscriptions", "organizations_url": "https://api.github.com/users/sfan5/orgs", "repos_url": "https://api.github.com/users/sfan5/repos", "events_url": "https://api.github.com/users/sfan5/events{/privacy}", "received_events_url": "https://api.github.com/users/sfan5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-bagwell", "id": 3014247, "avatar_url": "https://avatars0.githubusercontent.com/u/3014247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-bagwell", "html_url": "https://github.com/T-bagwell", "followers_url": "https://api.github.com/users/T-bagwell/followers", "following_url": "https://api.github.com/users/T-bagwell/following{/other_user}", "gists_url": "https://api.github.com/users/T-bagwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-bagwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-bagwell/subscriptions", "organizations_url": "https://api.github.com/users/T-bagwell/orgs", "repos_url": "https://api.github.com/users/T-bagwell/repos", "events_url": "https://api.github.com/users/T-bagwell/events{/privacy}", "received_events_url": "https://api.github.com/users/T-bagwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f"}]}, {"sha": "96f94624e0a1a91134bd8e1e3127080b81716f6f", "commit": {"author": {"name": "Gyan Doshi", "email": "gyandoshi@gmail.com", "date": "2018-01-14T12:00:23Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:51Z"}, "message": "avformat/adtsenc: allow only AAC streams\n\nThe ADTS muxer will silently (attempt to) mux any audio stream passed to it.\nPatch adds a codec check.\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "4601a7f7986371cc036261c77e7ce46f1168bfed", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/4601a7f7986371cc036261c77e7ce46f1168bfed"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/96f94624e0a1a91134bd8e1e3127080b81716f6f", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f/comments", "author": {"login": "GyanD", "id": 621057, "avatar_url": "https://avatars3.githubusercontent.com/u/621057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanD", "html_url": "https://github.com/GyanD", "followers_url": "https://api.github.com/users/GyanD/followers", "following_url": "https://api.github.com/users/GyanD/following{/other_user}", "gists_url": "https://api.github.com/users/GyanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanD/subscriptions", "organizations_url": "https://api.github.com/users/GyanD/orgs", "repos_url": "https://api.github.com/users/GyanD/repos", "events_url": "https://api.github.com/users/GyanD/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c"}]}, {"sha": "02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "commit": {"author": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2017-05-29T21:12:51Z"}, "committer": {"name": "James Almer", "email": "jamrial@gmail.com", "date": "2018-01-14T12:57:42Z"}, "message": "avformat/adtsenc: add adts_init()\n\nSigned-off-by: James Almer <jamrial@gmail.com>", "tree": {"sha": "f19139ffc4cf491127f94e46c19d927ec28c1e03", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/f19139ffc4cf491127f94e46c19d927ec28c1e03"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c/comments", "author": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamrial", "id": 2442845, "avatar_url": "https://avatars0.githubusercontent.com/u/2442845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamrial", "html_url": "https://github.com/jamrial", "followers_url": "https://api.github.com/users/jamrial/followers", "following_url": "https://api.github.com/users/jamrial/following{/other_user}", "gists_url": "https://api.github.com/users/jamrial/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamrial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamrial/subscriptions", "organizations_url": "https://api.github.com/users/jamrial/orgs", "repos_url": "https://api.github.com/users/jamrial/repos", "events_url": "https://api.github.com/users/jamrial/events{/privacy}", "received_events_url": "https://api.github.com/users/jamrial/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1"}]}, {"sha": "c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "commit": {"author": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:27:36Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:37:54Z"}, "message": "dcaenc: move all tables inside context and fix incorrect coding style\n\nFunctionally identical to the old code, with less lines wasted.\nPartially fixes the complete disregard for the 80 col/line guide.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>", "tree": {"sha": "24741d32eb2f40999abd8c0ceceb2a921b09a434", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/24741d32eb2f40999abd8c0ceceb2a921b09a434"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1/comments", "author": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77"}]}, {"sha": "ec6e389c753ba7de0303e8094a494a981b927b77", "commit": {"author": {"name": "Daniil Cherednik", "email": "dan.cherednik@gmail.com", "date": "2018-01-07T22:39:22Z"}, "committer": {"name": "Rostislav Pehlivanov", "email": "atomnuker@gmail.com", "date": "2018-01-13T18:13:58Z"}, "message": "avcodec/dcaenc: Use ffmpeg mdct instead of own implementation\n\nSigned-off-by: Daniil Cherednik <dan.cherednik@gmail.com>", "tree": {"sha": "2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees/2d92c7239fd4ec40ec4fe9f24c407b48c0ddf9b6"}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ec6e389c753ba7de0303e8094a494a981b927b77", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77/comments", "author": {"login": "dcherednik", "id": 1076097, "avatar_url": "https://avatars1.githubusercontent.com/u/1076097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcherednik", "html_url": "https://github.com/dcherednik", "followers_url": "https://api.github.com/users/dcherednik/followers", "following_url": "https://api.github.com/users/dcherednik/following{/other_user}", "gists_url": "https://api.github.com/users/dcherednik/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcherednik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcherednik/subscriptions", "organizations_url": "https://api.github.com/users/dcherednik/orgs", "repos_url": "https://api.github.com/users/dcherednik/repos", "events_url": "https://api.github.com/users/dcherednik/events{/privacy}", "received_events_url": "https://api.github.com/users/dcherednik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atomnuker", "id": 4661811, "avatar_url": "https://avatars0.githubusercontent.com/u/4661811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomnuker", "html_url": "https://github.com/atomnuker", "followers_url": "https://api.github.com/users/atomnuker/followers", "following_url": "https://api.github.com/users/atomnuker/following{/other_user}", "gists_url": "https://api.github.com/users/atomnuker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomnuker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomnuker/subscriptions", "organizations_url": "https://api.github.com/users/atomnuker/orgs", "repos_url": "https://api.github.com/users/atomnuker/repos", "events_url": "https://api.github.com/users/atomnuker/events{/privacy}", "received_events_url": "https://api.github.com/users/atomnuker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e11ebf55a5e51a8a7131d382c2020e35d34f42", "url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/56e11ebf55a5e51a8a7131d382c2020e35d34f42", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/56e11ebf55a5e51a8a7131d382c2020e35d34f42"}]}], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "id": 161357702, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/274", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/274.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/274.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274", "number": 274, "state": "open", "locked": false, "title": "Create CODE_OF_CONDUCT.md", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2018-01-05T14:59:35Z", "updated_at": "2018-01-07T16:42:58Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9db65dbdd24304e34c5bca95df61e28a16c91969", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e", "head": {"label": "kierank:patch-1", "ref": "patch-1", "sha": "95df93815a05f658397096dec8c8c44cd0a8e22e", "user": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "repo": {"id": 29426797, "name": "FFmpeg", "full_name": "kierank/FFmpeg", "owner": {"login": "kierank", "id": 143888, "avatar_url": "https://avatars1.githubusercontent.com/u/143888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierank", "html_url": "https://github.com/kierank", "followers_url": "https://api.github.com/users/kierank/followers", "following_url": "https://api.github.com/users/kierank/following{/other_user}", "gists_url": "https://api.github.com/users/kierank/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierank/subscriptions", "organizations_url": "https://api.github.com/users/kierank/orgs", "repos_url": "https://api.github.com/users/kierank/repos", "events_url": "https://api.github.com/users/kierank/events{/privacy}", "received_events_url": "https://api.github.com/users/kierank/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/kierank/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": true, "url": "https://api.github.com/repos/kierank/FFmpeg", "forks_url": "https://api.github.com/repos/kierank/FFmpeg/forks", "keys_url": "https://api.github.com/repos/kierank/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/kierank/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/kierank/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/kierank/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/kierank/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/kierank/FFmpeg/events", "assignees_url": "https://api.github.com/repos/kierank/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/kierank/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/kierank/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/kierank/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/kierank/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/kierank/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/kierank/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/kierank/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/kierank/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/kierank/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/kierank/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/kierank/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/kierank/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/kierank/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/kierank/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/kierank/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/kierank/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/kierank/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/kierank/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/kierank/FFmpeg/merges", "archive_url": "https://api.github.com/repos/kierank/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/kierank/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/kierank/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/kierank/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/kierank/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/kierank/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/kierank/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/kierank/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/kierank/FFmpeg/deployments", "created_at": "2015-01-18T13:30:18Z", "updated_at": "2018-01-09T19:55:27Z", "pushed_at": "2018-01-05T14:59:28Z", "git_url": "git://github.com/kierank/FFmpeg.git", "ssh_url": "git@github.com:kierank/FFmpeg.git", "clone_url": "https://github.com/kierank/FFmpeg.git", "svn_url": "https://github.com/kierank/FFmpeg", "homepage": "http://ffmpeg.org", "size": 193174, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": null, "url": null}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "b2be76c0a472b729756ed7a91225c209d0dd1d2e", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/274"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/274/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/95df93815a05f658397096dec8c8c44cd0a8e22e"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "id": 46028982, "html_url": "https://github.com/FFmpeg/FFmpeg/pull/153", "diff_url": "https://github.com/FFmpeg/FFmpeg/pull/153.diff", "patch_url": "https://github.com/FFmpeg/FFmpeg/pull/153.patch", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153", "number": 153, "state": "open", "locked": true, "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "created_at": "2015-09-25T16:06:39Z", "updated_at": "2017-06-23T11:59:16Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6dc6c91d7d05da2aed92fafebabad67c026c1562", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits", "review_comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments", "review_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8", "head": {"label": "wm4:dummy_branch", "ref": "dummy_branch", "sha": "032b7b5d982edea9ed20bd76e8b669af578be2b8", "user": {"login": "wm4", "id": 1387750, "avatar_url": "https://avatars0.githubusercontent.com/u/1387750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wm4", "html_url": "https://github.com/wm4", "followers_url": "https://api.github.com/users/wm4/followers", "following_url": "https://api.github.com/users/wm4/following{/other_user}", "gists_url": "https://api.github.com/users/wm4/gists{/gist_id}", "starred_url": "https://api.github.com/users/wm4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wm4/subscriptions", "organizations_url": "https://api.github.com/users/wm4/orgs", "repos_url": "https://api.github.com/users/wm4/repos", "events_url": "https://api.github.com/users/wm4/events{/privacy}", "received_events_url": "https://api.github.com/users/wm4/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "FFmpeg:master", "ref": "master", "sha": "ce0a117ed4f99c5eac2fd365cbdebba568a0ead8", "user": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1614410, "name": "FFmpeg", "full_name": "FFmpeg/FFmpeg", "owner": {"login": "FFmpeg", "id": 729418, "avatar_url": "https://avatars0.githubusercontent.com/u/729418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFmpeg", "html_url": "https://github.com/FFmpeg", "followers_url": "https://api.github.com/users/FFmpeg/followers", "following_url": "https://api.github.com/users/FFmpeg/following{/other_user}", "gists_url": "https://api.github.com/users/FFmpeg/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFmpeg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFmpeg/subscriptions", "organizations_url": "https://api.github.com/users/FFmpeg/orgs", "repos_url": "https://api.github.com/users/FFmpeg/repos", "events_url": "https://api.github.com/users/FFmpeg/events{/privacy}", "received_events_url": "https://api.github.com/users/FFmpeg/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/FFmpeg/FFmpeg", "description": "mirror of git://source.ffmpeg.org/ffmpeg.git", "fork": false, "url": "https://api.github.com/repos/FFmpeg/FFmpeg", "forks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/forks", "keys_url": "https://api.github.com/repos/FFmpeg/FFmpeg/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FFmpeg/FFmpeg/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FFmpeg/FFmpeg/teams", "hooks_url": "https://api.github.com/repos/FFmpeg/FFmpeg/hooks", "issue_events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/events{/number}", "events_url": "https://api.github.com/repos/FFmpeg/FFmpeg/events", "assignees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/assignees{/user}", "branches_url": "https://api.github.com/repos/FFmpeg/FFmpeg/branches{/branch}", "tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/tags", "blobs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/{sha}", "languages_url": "https://api.github.com/repos/FFmpeg/FFmpeg/languages", "stargazers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/stargazers", "contributors_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contributors", "subscribers_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscribers", "subscription_url": "https://api.github.com/repos/FFmpeg/FFmpeg/subscription", "commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FFmpeg/FFmpeg/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FFmpeg/FFmpeg/contents/{+path}", "compare_url": "https://api.github.com/repos/FFmpeg/FFmpeg/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FFmpeg/FFmpeg/merges", "archive_url": "https://api.github.com/repos/FFmpeg/FFmpeg/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FFmpeg/FFmpeg/downloads", "issues_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues{/number}", "pulls_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls{/number}", "milestones_url": "https://api.github.com/repos/FFmpeg/FFmpeg/milestones{/number}", "notifications_url": "https://api.github.com/repos/FFmpeg/FFmpeg/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FFmpeg/FFmpeg/labels{/name}", "releases_url": "https://api.github.com/repos/FFmpeg/FFmpeg/releases{/id}", "deployments_url": "https://api.github.com/repos/FFmpeg/FFmpeg/deployments", "created_at": "2011-04-14T14:12:38Z", "updated_at": "2018-01-18T15:49:06Z", "pushed_at": "2018-01-18T16:15:15Z", "git_url": "git://github.com/FFmpeg/FFmpeg.git", "ssh_url": "git@github.com:FFmpeg/FFmpeg.git", "clone_url": "https://github.com/FFmpeg/FFmpeg.git", "svn_url": "https://github.com/FFmpeg/FFmpeg", "homepage": "http://ffmpeg.org", "size": 205309, "stargazers_count": 9472, "watchers_count": 9472, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 4137, "mirror_url": null, "archived": false, "open_issues_count": 3, "license": null, "forks": 4137, "open_issues": 3, "watchers": 9472, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/153"}, "issue": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153"}, "comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/153/comments"}, "review_comments": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/comments"}, "review_comment": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153/commits"}, "statuses": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/statuses/032b7b5d982edea9ed20bd76e8b669af578be2b8"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/3#issuecomment-4623706", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/3", "id": 4623706, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-03-21T18:19:23Z", "updated_at": "2012-03-21T18:19:23Z", "author_association": "OWNER", "body": "The commits have been merged Sun Jan 22, sorry ive missed that there also was a pull request open here on github.\nNote to everyone, mail pull requests to me (michaelni@gmx.at) or the ffmpeg-devel ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/4#issuecomment-4865124", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/4", "id": 4865124, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-04-01T09:02:39Z", "updated_at": "2012-04-01T09:02:39Z", "author_association": "OWNER", "body": "Patch applied locally, will be in github in a moment\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/5#issuecomment-5590894", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/5", "id": 5590894, "user": {"login": "chinshou", "id": 841761, "avatar_url": "https://avatars2.githubusercontent.com/u/841761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinshou", "html_url": "https://github.com/chinshou", "followers_url": "https://api.github.com/users/chinshou/followers", "following_url": "https://api.github.com/users/chinshou/following{/other_user}", "gists_url": "https://api.github.com/users/chinshou/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinshou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinshou/subscriptions", "organizations_url": "https://api.github.com/users/chinshou/orgs", "repos_url": "https://api.github.com/users/chinshou/repos", "events_url": "https://api.github.com/users/chinshou/events{/privacy}", "received_events_url": "https://api.github.com/users/chinshou/received_events", "type": "User", "site_admin": false}, "created_at": "2012-05-09T01:27:14Z", "updated_at": "2012-05-09T01:27:14Z", "author_association": "CONTRIBUTOR", "body": "test\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10322327", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10322327, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T10:50:03Z", "updated_at": "2012-11-13T10:50:03Z", "author_association": "OWNER", "body": "Hmm, 5 merge commits, 1 rebased commit from master, 1 duplicate commit from you and 5 actual commits. Could you rebase this so there are no random merges and random duplicate commits ? The actual changes that merging all this would introduce probably are ok but i cant merge this branch as is\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/7#issuecomment-10340870", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/7", "id": 10340870, "user": {"login": "lippit", "id": 1927231, "avatar_url": "https://avatars1.githubusercontent.com/u/1927231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lippit", "html_url": "https://github.com/lippit", "followers_url": "https://api.github.com/users/lippit/followers", "following_url": "https://api.github.com/users/lippit/following{/other_user}", "gists_url": "https://api.github.com/users/lippit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lippit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lippit/subscriptions", "organizations_url": "https://api.github.com/users/lippit/orgs", "repos_url": "https://api.github.com/users/lippit/repos", "events_url": "https://api.github.com/users/lippit/events{/privacy}", "received_events_url": "https://api.github.com/users/lippit/received_events", "type": "User", "site_admin": false}, "created_at": "2012-11-13T19:54:40Z", "updated_at": "2012-11-13T19:54:40Z", "author_association": "CONTRIBUTOR", "body": "I've rebased my changes into a single commit, since they do not really deserve to have separate commits. Hope this is ok now.\n\nThanks,\nGeorg\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/11#issuecomment-15077820", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/11", "id": 15077820, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-18T19:57:31Z", "updated_at": "2013-03-18T19:57:31Z", "author_association": "OWNER", "body": "commits integrated\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15115173", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15115173, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-19T13:54:02Z", "updated_at": "2013-03-19T13:54:02Z", "author_association": "CONTRIBUTOR", "body": "I will have an updated patch in a day or two. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-15152554", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 15152554, "user": {"login": "heldchen", "id": 299636, "avatar_url": "https://avatars2.githubusercontent.com/u/299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heldchen", "html_url": "https://github.com/heldchen", "followers_url": "https://api.github.com/users/heldchen/followers", "following_url": "https://api.github.com/users/heldchen/following{/other_user}", "gists_url": "https://api.github.com/users/heldchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/heldchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heldchen/subscriptions", "organizations_url": "https://api.github.com/users/heldchen/orgs", "repos_url": "https://api.github.com/users/heldchen/repos", "events_url": "https://api.github.com/users/heldchen/events{/privacy}", "received_events_url": "https://api.github.com/users/heldchen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-20T00:38:29Z", "updated_at": "2013-03-20T00:38:29Z", "author_association": "NONE", "body": "+1\n\nwould love to have xyz2rgb and rgb2xyz this in ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-15869902", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 15869902, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:37:55Z", "updated_at": "2013-04-03T22:37:55Z", "author_association": "OWNER", "body": "Any updates on this? you said you will have an updated patch in a day or 2, did i miss it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-15870824", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 15870824, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-03T22:59:22Z", "updated_at": "2013-04-03T22:59:22Z", "author_association": "OWNER", "body": "where can we find a sample with which to reproduce the bug & fix ?\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/13#issuecomment-16387140", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/13", "id": 16387140, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-15T14:14:12Z", "updated_at": "2013-04-15T14:14:12Z", "author_association": "OWNER", "body": "The problem has been fixed in 1f2ce32825f7ca14c3bd90ef2781d75e8b704d41\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/15#issuecomment-17781625", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/15", "id": 17781625, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-12T17:29:34Z", "updated_at": "2013-05-12T17:29:34Z", "author_association": "MEMBER", "body": "Please send patch to ffmpeg-devel because it will receive more attention there.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18243491", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18243491, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:45:00Z", "updated_at": "2013-05-21T21:54:27Z", "author_association": "CONTRIBUTOR", "body": "Note that you can do something like:\n\n```\nffplay -f lavfi color=black -vf \"drawtext=text='%{e\\:n+123}':fontcolor=white\"\n```\n\nMay I ask what is the purpose behind such feature? Is it just to solve the problem of `n` starting at 0 or 1?\n\nEdit1:\nOh mmh, I should have read your initial post, my bad.\n\nBut another note; now that the counter is stored in a common place (link->frame_count), I wonder if we couldn't have a more global starting number instead. That would make more sense when using for instance in combination with showinfo filter (which prints the n), or actually any kind of filters where the counter is used (anything with timeline for instance, or various expressions).\n\nEdit2:\nTo be more specific, maybe have a look to filters_common_options in avfilter.c, and try to add it here. Unfortunately, if you do that, it will be limited to each filter scope. Maybe we need some global libavfilter options, so when a `-start_n` is specified by a tool, it is populated everywhere. Such thing should be discussed on ffmpeg-devel mailing list or IRC.\n\nI know I'm being pedantic for such a trivial feature, but I believe it can be done way better and have a few benefits in the long term. Adding such option like this now will mean a depreciation burden next time it's implemented generically.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/8#issuecomment-18244469", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/8", "id": 18244469, "user": {"login": "ubitux", "id": 34467, "avatar_url": "https://avatars3.githubusercontent.com/u/34467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubitux", "html_url": "https://github.com/ubitux", "followers_url": "https://api.github.com/users/ubitux/followers", "following_url": "https://api.github.com/users/ubitux/following{/other_user}", "gists_url": "https://api.github.com/users/ubitux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubitux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubitux/subscriptions", "organizations_url": "https://api.github.com/users/ubitux/orgs", "repos_url": "https://api.github.com/users/ubitux/repos", "events_url": "https://api.github.com/users/ubitux/events{/privacy}", "received_events_url": "https://api.github.com/users/ubitux/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-21T21:56:58Z", "updated_at": "2013-05-21T21:56:58Z", "author_association": "CONTRIBUTOR", "body": "Note: XYZ is supported for decoding since 0c47c9028be2cf4b1a557e653606fced5b959445\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18358847", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18358847, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T17:30:31Z", "updated_at": "2013-05-23T17:30:31Z", "author_association": "CONTRIBUTOR", "body": "@michaelni Sorry for the extreme delay.  I didn't get a chance to get back to this until now.  New commits are attached.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#issuecomment-18362780", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/12", "id": 18362780, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:33:54Z", "updated_at": "2013-05-23T18:33:54Z", "author_association": "OWNER", "body": "Patch applied by Paul\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/19#issuecomment-18363671", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/19", "id": 18363671, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T18:46:24Z", "updated_at": "2013-05-23T18:46:24Z", "author_association": "OWNER", "body": "patches should be against master\npatches against release/1.2 should always have been in master first\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/20#issuecomment-18365499", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/20", "id": 18365499, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-23T19:15:44Z", "updated_at": "2013-05-23T19:15:44Z", "author_association": "OWNER", "body": "Is there any reason why you dont check if getnamenifo() failed ?\nIt seems more correct to me to check it and handle this error condition instead of silently continuing with a empty buffer\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-18408496", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 18408496, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-24T14:35:12Z", "updated_at": "2013-05-24T14:35:12Z", "author_association": "CONTRIBUTOR", "body": "Good idea (filters_common_options), I hadn't realized n was used outside of the drawtext filter. I'll update this patch when I have a chance and post a link to it on the mailing list.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/21#issuecomment-18453722", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/21", "id": 18453722, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-25T20:52:06Z", "updated_at": "2013-05-25T20:52:06Z", "author_association": "OWNER", "body": "The checks are all wrong, an error is a non zero return not a zero. Please test code before submitting.\nAlso my question still stands, why do you not handle the errors but instead manipulate the name.\nHandling an error means printing an error message and returning failure not continuing.\nPlease explain what you are trying to achive with setting the name to 0 and continuing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18464736", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18464736, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:30:38Z", "updated_at": "2013-05-26T15:30:38Z", "author_association": "OWNER", "body": "Comment from ronald:that change to ff_rtp_set_remote_url() ignores the port parameter, that's not right\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/22#issuecomment-18465012", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/22", "id": 18465012, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-26T15:51:27Z", "updated_at": "2013-05-26T15:51:27Z", "author_association": "OWNER", "body": "Comment from wbs:\nwbs: michaelni: yes, as BBB says, that commit is very much wrong. if that actually helps in some case, the caller is doing something very much wrong, because it would break every single rtsp case at least. that function is used for setting the peer hostname/port, but the change makes it ignore the port you set. so if the change helps, the caller shouldn't be calling the function at all. or alternatively, add logic to parse out ...\nwbs: ... rtcp_port within that function just as it is done in rtp_open\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/18#issuecomment-19474426", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/18", "id": 19474426, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T18:40:20Z", "updated_at": "2013-06-14T18:40:20Z", "author_association": "CONTRIBUTOR", "body": "Do to some n00bness on my part, this pull request was empty. I've resubmitted it here: https://github.com/FFmpeg/FFmpeg/issues/24\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19488127", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19488127, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-15T00:19:44Z", "updated_at": "2013-06-15T00:19:44Z", "author_association": "OWNER", "body": "var_values[VAR_N] is left at the old value, isnt that confusing for users of expressions\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/24#issuecomment-19644265", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/24", "id": 19644265, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-18T21:39:43Z", "updated_at": "2013-06-18T21:39:43Z", "author_association": "CONTRIBUTOR", "body": "Fixed, start_number is now added directly to var_values[VAR_N] instead of inside the frame_num function.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19693370", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19693370, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T15:54:44Z", "updated_at": "2013-06-19T16:09:13Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the feedback, changes made as requested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19696181", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19696181, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T16:37:25Z", "updated_at": "2013-06-19T16:37:25Z", "author_association": "CONTRIBUTOR", "body": "Thank you for your work.\nI think these commits will be squashed, either by you or by michaelni.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698317", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698317, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:08:46Z", "updated_at": "2013-06-19T17:08:46Z", "author_association": "CONTRIBUTOR", "body": "Sure, no problem. Also, in case it's required: I hereby relinquish all copyright control over the above commits to the FFmpeg project.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19698922", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19698922, "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:17:46Z", "updated_at": "2013-06-19T17:17:46Z", "author_association": "CONTRIBUTOR", "body": "I have never heard of such feature in FFmpeg project. This is not \"GPL\" Asterisk which forces you to relinquish your patch authorship for it to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#issuecomment-19700106", "issue_url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/25", "id": 19700106, "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-19T17:36:06Z", "updated_at": "2013-06-19T17:36:06Z", "author_association": "CONTRIBUTOR", "body": "Good to know. Should I squash my commits, or does a maintainer usually do that?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/658d166da02ff1b1e0a060c1e25d85e8bffc38b9#commitcomment-736812", "id": 736812, "user": {"login": "jnorthrup", "id": 73514, "avatar_url": "https://avatars2.githubusercontent.com/u/73514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnorthrup", "html_url": "https://github.com/jnorthrup", "followers_url": "https://api.github.com/users/jnorthrup/followers", "following_url": "https://api.github.com/users/jnorthrup/following{/other_user}", "gists_url": "https://api.github.com/users/jnorthrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnorthrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnorthrup/subscriptions", "organizations_url": "https://api.github.com/users/jnorthrup/orgs", "repos_url": "https://api.github.com/users/jnorthrup/repos", "events_url": "https://api.github.com/users/jnorthrup/events{/privacy}", "received_events_url": "https://api.github.com/users/jnorthrup/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "658d166da02ff1b1e0a060c1e25d85e8bffc38b9", "created_at": "2011-11-22T04:38:08Z", "updated_at": "2011-11-22T04:38:08Z", "author_association": "NONE", "body": "too cool\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1255779", "id": 1255779, "user": {"login": "frostwire", "id": 1341376, "avatar_url": "https://avatars3.githubusercontent.com/u/1341376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostwire", "html_url": "https://github.com/frostwire", "followers_url": "https://api.github.com/users/frostwire/followers", "following_url": "https://api.github.com/users/frostwire/following{/other_user}", "gists_url": "https://api.github.com/users/frostwire/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostwire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostwire/subscriptions", "organizations_url": "https://api.github.com/users/frostwire/orgs", "repos_url": "https://api.github.com/users/frostwire/repos", "events_url": "https://api.github.com/users/frostwire/events{/privacy}", "received_events_url": "https://api.github.com/users/frostwire/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T13:40:36Z", "updated_at": "2012-04-25T13:40:36Z", "author_association": "NONE", "body": "out of curiosity, why do you multiply by the double negation of f->ec ?\n(I'm just a noob looking around)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/60217b5b9cf713b1eeb7626473eac357cde25673#commitcomment-1256299", "id": 1256299, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 31, "line": 1868, "path": "libavcodec/ffv1.c", "commit_id": "60217b5b9cf713b1eeb7626473eac357cde25673", "created_at": "2012-04-25T15:20:09Z", "updated_at": "2012-04-25T15:20:09Z", "author_association": "OWNER", "body": "On Wed, Apr 25, 2012 at 06:40:36AM -0700, FrostWire wrote:\n\n> out of curiosity, why do you multiply by the double negation of f->ec ?\n> (I'm just a noob looking around)\n\nbecause i want the value added when f->ec is not 0\n\ncould have been written as (f->ec ? X : 0) too\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nThe greatest way to live with honor in this world is to be what we pretend\nto be. -- Socrates\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d#commitcomment-2248051", "id": 2248051, "user": {"login": "bygreencn", "id": 22853, "avatar_url": "https://avatars1.githubusercontent.com/u/22853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bygreencn", "html_url": "https://github.com/bygreencn", "followers_url": "https://api.github.com/users/bygreencn/followers", "following_url": "https://api.github.com/users/bygreencn/following{/other_user}", "gists_url": "https://api.github.com/users/bygreencn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bygreencn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bygreencn/subscriptions", "organizations_url": "https://api.github.com/users/bygreencn/orgs", "repos_url": "https://api.github.com/users/bygreencn/repos", "events_url": "https://api.github.com/users/bygreencn/events{/privacy}", "received_events_url": "https://api.github.com/users/bygreencn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "15caccb9be2a50ffe0dabd3202bcc272d1d7ff1d", "created_at": "2012-12-04T09:11:48Z", "updated_at": "2012-12-04T09:11:48Z", "author_association": "NONE", "body": "WinXP(32bit) with MinGW 4.6.1 and VS2010 may cause ffmpeg.exe crash at CommandLineToArgvW.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17#commitcomment-2255576", "id": 2255576, "user": {"login": "fritsch", "id": 1089309, "avatar_url": "https://avatars0.githubusercontent.com/u/1089309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritsch", "html_url": "https://github.com/fritsch", "followers_url": "https://api.github.com/users/fritsch/followers", "following_url": "https://api.github.com/users/fritsch/following{/other_user}", "gists_url": "https://api.github.com/users/fritsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritsch/subscriptions", "organizations_url": "https://api.github.com/users/fritsch/orgs", "repos_url": "https://api.github.com/users/fritsch/repos", "events_url": "https://api.github.com/users/fritsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fritsch/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "79fb7bc667dd4b9c899b3223d3e4fb5baa6c2e17", "created_at": "2012-12-05T09:09:24Z", "updated_at": "2012-12-05T09:09:24Z", "author_association": "NONE", "body": "This commit produces an issue within our OpenELEC version 3.0b3 that was based on 0.10.6 Cause we are a bit late in the release cycle, we downgraded to 0.10.5.\n\nFor reference and test sample: https://github.com/OpenELEC/OpenELEC.tv/issues/1557\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307462", "id": 2307462, "user": {"login": "wanzhang", "id": 3039093, "avatar_url": "https://avatars0.githubusercontent.com/u/3039093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanzhang", "html_url": "https://github.com/wanzhang", "followers_url": "https://api.github.com/users/wanzhang/followers", "following_url": "https://api.github.com/users/wanzhang/following{/other_user}", "gists_url": "https://api.github.com/users/wanzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanzhang/subscriptions", "organizations_url": "https://api.github.com/users/wanzhang/orgs", "repos_url": "https://api.github.com/users/wanzhang/repos", "events_url": "https://api.github.com/users/wanzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/wanzhang/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T03:22:53Z", "updated_at": "2012-12-14T03:22:53Z", "author_association": "CONTRIBUTOR", "body": "Is it more simple and readable when changed to \ndiff = ((~(long)ptr )&(ALIGN-1)) + 1;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6912e7a008acd1464a63b0a00779a3de81b9a8ab#commitcomment-2307764", "id": 2307764, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": 14, "line": 90, "path": "libavutil/mem.c", "commit_id": "6912e7a008acd1464a63b0a00779a3de81b9a8ab", "created_at": "2012-12-14T05:02:13Z", "updated_at": "2012-12-14T05:02:13Z", "author_association": "OWNER", "body": "On Thu, Dec 13, 2012 at 07:22:57PM -0800, wanzhang wrote:\n\n> Is it more simple and readable when changed to \n> diff = ((~(long)ptr )&(ALIGN-1)) + 1;\n\nyes its a small bit simpler\nchanged\n\n[...]\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nOpposition brings concord. Out of discord comes the fairest harmony.\n-- Heraclitus\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3476900", "id": 3476900, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-06-21T13:43:43Z", "updated_at": "2013-06-21T13:45:12Z", "author_association": "CONTRIBUTOR", "body": "@richardpl While I suppose this it is technically correct to handle these cases, were you finding that it was possible to get, for example,  a value of 22 set on bits_per_raw_sample?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3751836", "id": 3751836, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:02:16Z", "updated_at": "2013-07-30T21:02:16Z", "author_association": "CONTRIBUTOR", "body": "It is possible, its just I did not yet found such files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3752004", "id": 3752004, "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-30T21:21:22Z", "updated_at": "2013-07-30T21:22:14Z", "author_association": "CONTRIBUTOR", "body": "I would argue it's not possible files that way.  The SMPTE 302M standard does not spec any other sizes than 16, 20, and 24 bits per sample.  I was asking if it were possible to set, via command-line, to have that value set to 21,22, or 23 bits per coded sample?  Just curious.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b#commitcomment-3755958", "id": 3755958, "user": {"login": "richardpl", "id": 469155, "avatar_url": "https://avatars3.githubusercontent.com/u/469155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardpl", "html_url": "https://github.com/richardpl", "followers_url": "https://api.github.com/users/richardpl/followers", "following_url": "https://api.github.com/users/richardpl/following{/other_user}", "gists_url": "https://api.github.com/users/richardpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardpl/subscriptions", "organizations_url": "https://api.github.com/users/richardpl/orgs", "repos_url": "https://api.github.com/users/richardpl/repos", "events_url": "https://api.github.com/users/richardpl/events{/privacy}", "received_events_url": "https://api.github.com/users/richardpl/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e75ddb7df5d2e11db5fc3e63c0e1d7e16321679b", "created_at": "2013-07-31T10:16:48Z", "updated_at": "2013-07-31T10:16:48Z", "author_association": "CONTRIBUTOR", "body": "I was not talking about SMPTE 302M files. It's irrelevant if bits per sample can be set via command line, it just number that is reported by decoder/containers.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2599a62fbb31a340d106774b8b3dd84169f92895#commitcomment-4181845", "id": 4181845, "user": {"login": "thoughtpalette", "id": 690624, "avatar_url": "https://avatars2.githubusercontent.com/u/690624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoughtpalette", "html_url": "https://github.com/thoughtpalette", "followers_url": "https://api.github.com/users/thoughtpalette/followers", "following_url": "https://api.github.com/users/thoughtpalette/following{/other_user}", "gists_url": "https://api.github.com/users/thoughtpalette/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoughtpalette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoughtpalette/subscriptions", "organizations_url": "https://api.github.com/users/thoughtpalette/orgs", "repos_url": "https://api.github.com/users/thoughtpalette/repos", "events_url": "https://api.github.com/users/thoughtpalette/events{/privacy}", "received_events_url": "https://api.github.com/users/thoughtpalette/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "2599a62fbb31a340d106774b8b3dd84169f92895", "created_at": "2013-09-25T22:10:29Z", "updated_at": "2013-09-25T22:10:29Z", "author_association": "NONE", "body": "Dis guy\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/33da1f29218dab5e2189eb3b6d787bba11e4fccd#commitcomment-6479164", "id": 6479164, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "33da1f29218dab5e2189eb3b6d787bba11e4fccd", "created_at": "2014-05-28T19:12:22Z", "updated_at": "2014-05-28T19:12:22Z", "author_association": "MEMBER", "body": "These may look better as an ordered list rather than an unordered list with numerals. Refer to the [markdown syntax](http://daringfireball.net/projects/markdown/syntax#list). (Also, please disregard my previous comments on the older commits; I commented before viewing your newer commits.)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479737", "id": 6479737, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:55:25Z", "updated_at": "2014-05-28T19:56:19Z", "author_association": "MEMBER", "body": "We are almost there. Thanks for the updates so far. The look of the raw text is more important than the markdown rendered look, so it should be given priority, but I think both can be made to look good.  This line can be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479756", "id": 6479756, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 5, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:31Z", "updated_at": "2014-05-28T19:56:31Z", "author_association": "MEMBER", "body": "Please add four spaces to the beginning of this line.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479759", "id": 6479759, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 8, "line": 9, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:56:45Z", "updated_at": "2014-05-28T19:56:45Z", "author_association": "MEMBER", "body": "This line can also be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/2fb3ef0eb11058e67abd39b05092d3b8116c4cce#commitcomment-6479769", "id": 6479769, "user": {"login": "llogan", "id": 848094, "avatar_url": "https://avatars2.githubusercontent.com/u/848094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogan", "html_url": "https://github.com/llogan", "followers_url": "https://api.github.com/users/llogan/followers", "following_url": "https://api.github.com/users/llogan/following{/other_user}", "gists_url": "https://api.github.com/users/llogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogan/subscriptions", "organizations_url": "https://api.github.com/users/llogan/orgs", "repos_url": "https://api.github.com/users/llogan/repos", "events_url": "https://api.github.com/users/llogan/events{/privacy}", "received_events_url": "https://api.github.com/users/llogan/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 11, "path": "INSTALL.md", "commit_id": "2fb3ef0eb11058e67abd39b05092d3b8116c4cce", "created_at": "2014-05-28T19:57:03Z", "updated_at": "2014-05-28T19:57:03Z", "author_association": "MEMBER", "body": "Same with this line. The only other blocking nit is the extra backticks for the code spans. Unless I'm wrong I think one backtick on each side of the word should suffice instead of three.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/6450c05ba56d652901c362f27a6226d29dbf9381#commitcomment-6532581", "id": 6532581, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": 64, "line": 64, "path": "libswresample/swresample.c", "commit_id": "6450c05ba56d652901c362f27a6226d29dbf9381", "created_at": "2014-06-03T04:37:12Z", "updated_at": "2014-06-03T04:37:12Z", "author_association": "NONE", "body": "@michaelni I notice `clev` and `slev` defaults have been set at -3dB since first\nintroduced in b5875b9\n\nWhy did you choose this value? It seems to make for poor downmixing\n\n[`ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851`](http://ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6839935", "id": 6839935, "user": {"login": "saste", "id": 878876, "avatar_url": "https://avatars0.githubusercontent.com/u/878876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saste", "html_url": "https://github.com/saste", "followers_url": "https://api.github.com/users/saste/followers", "following_url": "https://api.github.com/users/saste/following{/other_user}", "gists_url": "https://api.github.com/users/saste/gists{/gist_id}", "starred_url": "https://api.github.com/users/saste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saste/subscriptions", "organizations_url": "https://api.github.com/users/saste/orgs", "repos_url": "https://api.github.com/users/saste/repos", "events_url": "https://api.github.com/users/saste/events{/privacy}", "received_events_url": "https://api.github.com/users/saste/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T12:24:56Z", "updated_at": "2014-06-30T12:25:10Z", "author_association": "CONTRIBUTOR", "body": "Hi, please can you comment about why do you think this is useful (I'm not contrary to the idea but this is a bit inconsistent with how the other tools work)?\n\nAlso posting patches to the ffmpeg-devel mailing-list is preferred since most developers are used to comment there, thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bd36cef17c039593fe80f04cc02ea985dceb970d#commitcomment-6842184", "id": 6842184, "user": {"login": "svnpenn", "id": 926619, "avatar_url": "https://avatars2.githubusercontent.com/u/926619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnpenn", "html_url": "https://github.com/svnpenn", "followers_url": "https://api.github.com/users/svnpenn/followers", "following_url": "https://api.github.com/users/svnpenn/following{/other_user}", "gists_url": "https://api.github.com/users/svnpenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnpenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnpenn/subscriptions", "organizations_url": "https://api.github.com/users/svnpenn/orgs", "repos_url": "https://api.github.com/users/svnpenn/repos", "events_url": "https://api.github.com/users/svnpenn/events{/privacy}", "received_events_url": "https://api.github.com/users/svnpenn/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bd36cef17c039593fe80f04cc02ea985dceb970d", "created_at": "2014-06-30T15:12:53Z", "updated_at": "2014-06-30T15:12:53Z", "author_association": "NONE", "body": "It is useful because they are shorter, same reason you would use `-af` over `-filter:a`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931737", "id": 7931737, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:39:23Z", "updated_at": "2014-09-25T22:39:23Z", "author_association": "NONE", "body": "Consider an mp4 files with just pps in the h264 stream (no sps in the NAL units, but available from avcc).\nIn this case 'ctx->idr_sps_pps_seen' prevents inserting sps in the extracted h264, which is then unusable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7931921", "id": 7931921, "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-25T22:56:39Z", "updated_at": "2014-09-25T22:56:39Z", "author_association": "MEMBER", "body": "@thomag I have forwarded your comment to https://ffmpeg.org/pipermail/ffmpeg-devel/2014-September/163453.html, where discussion is more active. Please subscribe to ffmpeg-devel if you have any further comments, and please do not break the thread if you do.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531", "id": 7933531, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T02:15:24Z", "updated_at": "2014-09-26T02:15:24Z", "author_association": "OWNER", "body": "@thomag Do you have a sample h264 file / testcase to reproduce this ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7942638", "id": 7942638, "user": {"login": "thomag", "id": 8353959, "avatar_url": "https://avatars0.githubusercontent.com/u/8353959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomag", "html_url": "https://github.com/thomag", "followers_url": "https://api.github.com/users/thomag/followers", "following_url": "https://api.github.com/users/thomag/following{/other_user}", "gists_url": "https://api.github.com/users/thomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomag/subscriptions", "organizations_url": "https://api.github.com/users/thomag/orgs", "repos_url": "https://api.github.com/users/thomag/repos", "events_url": "https://api.github.com/users/thomag/events{/privacy}", "received_events_url": "https://api.github.com/users/thomag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "ad91bf854b559f1afc42fc06f8a7dfbb75def5c8", "created_at": "2014-09-26T16:32:10Z", "updated_at": "2014-09-26T16:32:10Z", "author_association": "NONE", "body": "Michael,\nHere is a short clip @ https://s3.amazonaws.com/quickfire-public/dwclip2.mp4\nwhich has just PPS in the h264 stream.\nPlease let me know if you need anything else.\nRegards,\nThomas.\n\nOn Fri, Sep 26, 2014 at 9:17 AM, Thomas George <\nthomasg@quickfirenetworks.com> wrote:\n\n> Sure. This is short mp4 vid. with just PPS in the h264 stream.\n> Please let me know if you want anything else.\n> Regards,\n> Thomas.\n> \n> On Thu, Sep 25, 2014 at 7:15 PM, Michael Niedermayer <\n> notifications@github.com> wrote:\n> \n> > @thomag https://github.com/thomag Do you have a sample h264 file /\n> > testcase to reproduce this ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531\n> > .\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8831371", "id": 8831371, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T10:15:15Z", "updated_at": "2014-12-04T10:15:15Z", "author_association": "NONE", "body": "I'm getting a seg fault on cygwin (windows xp). Probably inside open_output_file function (line 87)\n![untitled](https://cloud.githubusercontent.com/assets/9247809/5296651/0d0b8524-7baf-11e4-8d7f-c43a35d7cd53.JPG)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/e10ab43614c1cccdeb656bf9d5431285a2f2d52f#commitcomment-8838788", "id": 8838788, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e10ab43614c1cccdeb656bf9d5431285a2f2d52f", "created_at": "2014-12-04T18:09:15Z", "updated_at": "2014-12-04T18:09:15Z", "author_association": "OWNER", "body": "Issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea#commitcomment-8871529", "id": 8871529, "user": {"login": "stoupeace", "id": 9247809, "avatar_url": "https://avatars0.githubusercontent.com/u/9247809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoupeace", "html_url": "https://github.com/stoupeace", "followers_url": "https://api.github.com/users/stoupeace/followers", "following_url": "https://api.github.com/users/stoupeace/following{/other_user}", "gists_url": "https://api.github.com/users/stoupeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoupeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoupeace/subscriptions", "organizations_url": "https://api.github.com/users/stoupeace/orgs", "repos_url": "https://api.github.com/users/stoupeace/repos", "events_url": "https://api.github.com/users/stoupeace/events{/privacy}", "received_events_url": "https://api.github.com/users/stoupeace/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "bde27e1e617dfeb3c026f530f48a77f5ed8aa2ea", "created_at": "2014-12-08T09:19:22Z", "updated_at": "2014-12-08T09:19:22Z", "author_association": "NONE", "body": "Thanks for the update!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333236", "id": 9333236, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:07:31Z", "updated_at": "2015-01-19T02:08:27Z", "author_association": "CONTRIBUTOR", "body": "That commit completely broke the muxing into mkv container for many video files \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9333513", "id": 9333513, "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T02:56:16Z", "updated_at": "2015-01-19T02:56:16Z", "author_association": "OWNER", "body": "How can this issue be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330", "html_url": "https://github.com/FFmpeg/FFmpeg/commit/f95cd5a235bae89510cfe4320f2189c9cfbcc457#commitcomment-9337330", "id": 9337330, "user": {"login": "raxon1s", "id": 10097538, "avatar_url": "https://avatars1.githubusercontent.com/u/10097538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxon1s", "html_url": "https://github.com/raxon1s", "followers_url": "https://api.github.com/users/raxon1s/followers", "following_url": "https://api.github.com/users/raxon1s/following{/other_user}", "gists_url": "https://api.github.com/users/raxon1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxon1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxon1s/subscriptions", "organizations_url": "https://api.github.com/users/raxon1s/orgs", "repos_url": "https://api.github.com/users/raxon1s/repos", "events_url": "https://api.github.com/users/raxon1s/events{/privacy}", "received_events_url": "https://api.github.com/users/raxon1s/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f95cd5a235bae89510cfe4320f2189c9cfbcc457", "created_at": "2015-01-19T10:57:18Z", "updated_at": "2015-01-19T10:57:18Z", "author_association": "CONTRIBUTOR", "body": "I had many MPEG-TS Videos and FFmpeg failed to mux them into mkv. Try with some MPEGT-TS video you may find.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682", "pull_request_review_id": null, "id": 3419682, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "codecs should not depend on sizof(AVFrame) due to ABI, AVFrame is part of libavutil and not libavcodec\n", "created_at": "2013-03-18T20:12:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419682"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838", "pull_request_review_id": null, "id": 3419838, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "Thats not how AVPackets are initilaized, please see how other encoders do it, one way is with ff_alloc_packet2()\n", "created_at": "2013-03-18T20:18:45Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419838"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893", "pull_request_review_id": null, "id": 3419893, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "the code should be converted to the new API not a wraper added over the old and otherwise unused code\n", "created_at": "2013-03-18T20:21:15Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419893"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947", "pull_request_review_id": null, "id": 3419947, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "This can be calculated with integers which avoid platform specific rounding dependancies (aka bitexact output and behavior between platforms)\n", "created_at": "2013-03-18T20:23:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3419947"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132", "pull_request_review_id": null, "id": 3425132, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 30, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright.  The original implementation had it this way.  No one at libav mentioned it, hence, it was left this way.  \n", "created_at": "2013-03-19T03:00:44Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425132"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200", "pull_request_review_id": null, "id": 3425200, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "While I had considered doing this, I wanted to avoid a monolithic function and thought this would be sufficient.  The old code isn't \"unused\" so much as it's just using the original avcodec_encode_audio interface.\n\nWhat about simply, modfiying the function signature of s302m_encode_frame to something like:\ns302_encode_audio(AVCodecContext *, AVPacket *, AVFrame *);\n", "created_at": "2013-03-19T03:08:57Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425200"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207", "pull_request_review_id": null, "id": 3425207, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));", "path": "libavcodec/s302menc.c", "position": null, "original_position": 109, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll clean this up.  I was testing something out and wanted doubles for some reason.  It shouldn't be doubles...\n", "created_at": "2013-03-19T03:09:35Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425207"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215", "pull_request_review_id": null, "id": 3425215, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 249, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "I'll checkout some other encoders and ff_alloc_packet2.  Thanks.\n", "created_at": "2013-03-19T03:10:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425215"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233", "pull_request_review_id": null, "id": 3425233, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "The original author referenced s->frame for the current coded frame.  How should this be handled if the S302MContext should not contain an AVFrame?\n", "created_at": "2013-03-19T03:12:56Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3425233"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558", "pull_request_review_id": null, "id": 3428558, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "There should be no wraper, also the code in the wraper looks odd, i dont think these checks are needed\n", "created_at": "2013-03-19T10:32:06Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428558"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564", "pull_request_review_id": null, "id": 3428564, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "simply not setting coded_frame should be fine\n", "created_at": "2013-03-19T10:32:58Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3428564"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327", "pull_request_review_id": null, "id": 3431327, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;", "path": "libavcodec/s302menc.c", "position": null, "original_position": 86, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Ok.\n", "created_at": "2013-03-19T13:53:22Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431327"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334", "pull_request_review_id": null, "id": 3431334, "diff_hunk": "@@ -0,0 +1,274 @@\n+/*\n+ * SMPTE 302M encoder\n+ * Copyright (c) 2010, Google, Inc.\n+ * Copyright (c) 2013, Darryl Wallace <wallacdj@gmail.com>\n+ *\n+ * This file is part of Libav.\n+ *\n+ * Libav is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2.1 of the License, or (at your option) any later version.\n+ *\n+ * Libav is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with Libav; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n+ */\n+\n+#include \"libavutil/intreadwrite.h\"\n+#include \"avcodec.h\"\n+#include \"put_bits.h\"\n+\n+#define AES3_HEADER_LEN 4\n+\n+typedef struct S302MContext {\n+    AVFrame frame;\n+    /* Set for even channels on multiple of 192 samples */\n+    uint8_t framing_index;\n+} S302MContext;\n+\n+static int compute_buffer_size(AVCodecContext *avctx, int num_samples)\n+{\n+    return AES3_HEADER_LEN + (num_samples * avctx->channels * (avctx->bits_per_coded_sample + 4)) / 8;\n+}\n+\n+static av_cold int s302m_encode_init(AVCodecContext *avctx)\n+{\n+    S302MContext *s = avctx->priv_data;\n+\n+    if (avctx->channels != 2 && avctx->channels != 4 &&\n+        avctx->channels != 6 && avctx->channels != 8) {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Encoding %d channel(s) is not allowed. Only 2, 4, 6 and 8 channels are supported.\\n\",\n+               avctx->channels);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    if (avctx->bits_per_coded_sample == 0)\n+    {\n+        if (avctx->sample_fmt == AV_SAMPLE_FMT_S32)\n+        {\n+            avctx->bits_per_coded_sample = 24;\n+        }\n+        else if (avctx->sample_fmt == AV_SAMPLE_FMT_S16)\n+        {\n+            avctx->bits_per_coded_sample  = 16;\n+        }\n+        else\n+        {\n+            av_log(avctx, AV_LOG_ERROR,\n+                   \"Unsupported sample fmt.\\n\");\n+            return AVERROR(EINVAL);\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 24 || avctx->bits_per_coded_sample == 20)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S32;\n+    }\n+    else if(avctx->bits_per_coded_sample == 16)\n+    {\n+        avctx->sample_fmt = AV_SAMPLE_FMT_S16;\n+    }\n+    else\n+    {\n+        av_log(avctx, AV_LOG_ERROR,\n+               \"Unsupported bits per coded sample of %d.\\n\",\n+               avctx->bits_per_coded_sample);\n+        return AVERROR(EINVAL);\n+    }\n+\n+    avctx->frame_size             = 0;\n+    avctx->coded_frame            = &s->frame;\n+    avctx->coded_frame->key_frame = 1;\n+    avctx->bit_rate               = 48000 * avctx->channels *\n+                                    (avctx->bits_per_coded_sample + 4);\n+    s->framing_index              = 0;\n+\n+    return 0;\n+}\n+\n+static int s302m_encode_frame(AVCodecContext *avctx, uint8_t *frame,\n+                              int buf_size, void *data)\n+{\n+    S302MContext *s = avctx->priv_data;\n+    uint8_t *o = frame;\n+    int num_samples,c, channels;\n+    uint8_t vucf;\n+    PutBitContext pb;\n+    // compute the frame size based on the buffer size\n+    // N+4 bits per sample (N bit data word + VUCF) * num_samples *\n+    // buf-size should have an extra 4 bytes for the AES3_HEADER_LEN;\n+    const int frame_size = buf_size - AES3_HEADER_LEN;\n+    double num_samples_test;\n+    num_samples_test = ((double)frame_size * 8.0) /\n+            ((double)avctx->channels * ((double)avctx->bits_per_coded_sample + 4.0));\n+    if (num_samples_test != floor(num_samples_test))\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Buffer size %d does not result in integer number of samples for %d channels and num_bits_per_sample %d + AES3_HEADER_LEN of 4 bytes.\\n\",\n+               buf_size, avctx->channels, avctx->bits_per_coded_sample);\n+        return AVERROR_INVALIDDATA;\n+    }\n+    num_samples = (frame_size * 8) /\n+            (avctx->channels * (avctx->bits_per_coded_sample + 4));\n+    init_put_bits(&pb, o, buf_size * 8);\n+    put_bits(&pb, 16, frame_size);\n+    put_bits(&pb, 2, (avctx->channels - 2) >> 1);   // number of channels\n+    put_bits(&pb, 8, 0);                            // channel ID\n+    // bits per samples (0 = 16bit, 1 = 20bit, 2 = 24bit)\n+    put_bits(&pb, 2, (avctx->bits_per_coded_sample - 16) / 4);\n+    put_bits(&pb, 4, 0);                            // alignments\n+    flush_put_bits(&pb);\n+    o+=AES3_HEADER_LEN;\n+\n+    if(avctx->bits_per_coded_sample == 24)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+\n+        for (c = 0; c< num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x10: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x0000FF00) >> 8];\n+                o[1] = ff_reverse[(samples[0] & 0x00FF0000) >> 16];\n+                o[2] = ff_reverse[(samples[0] & 0xFF000000) >> 24];\n+                o[3] = ff_reverse[(samples[1] & 0x00000F00) >> 4] | vucf;\n+                o[4] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[5] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[6] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 7;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 20)\n+    {\n+        uint32_t *samples;\n+        samples = (uint32_t *)data;\n+        for (c = 0; c < num_samples; c++)\n+        {\n+            vucf = (s->framing_index == 0)  ? 0x80: 0;\n+            for (channels = 0; channels < avctx->channels; channels+=2)\n+            {\n+                o[0] = ff_reverse[(samples[0] & 0x000FF000) >> 12];\n+                o[1] = ff_reverse[(samples[0] & 0x0FF00000) >> 20];\n+                o[2] = ff_reverse[((samples[0] & 0xF0000000) >> 28) | vucf];\n+                o[3] = ff_reverse[(samples[1] & 0x000FF000) >> 12];\n+                o[4] = ff_reverse[(samples[1] & 0x0FF00000) >> 20];\n+                o[5] = ff_reverse[(samples[1] & 0xF0000000) >> 28];\n+                o += 6;\n+                samples += 2;\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    else if (avctx->bits_per_coded_sample == 16)\n+    {\n+        const uint16_t *samples = data;\n+        for (c=0; c < num_samples; c++) {\n+            vucf = (s->framing_index == 0) ? 0x10 : 0;\n+            for (channels = 0; channels < avctx->channels; channels += 2) {\n+                o[0] = ff_reverse[ samples[0] & 0xFF];\n+                o[1] = ff_reverse[(samples[0] & 0xFF00) >>  8];\n+                o[2] = ff_reverse[(samples[1] & 0x0F)   <<  4] | vucf;\n+                o[3] = ff_reverse[(samples[1] & 0x0FF0) >>  4];\n+                o[4] = ff_reverse[(samples[1] & 0xF000) >> 12];\n+                o += 5;\n+                samples += 2;\n+\n+            }\n+            s->framing_index++;\n+            if (s->framing_index >= 192)\n+            {\n+                s->framing_index = 0;\n+            }\n+        }\n+    }\n+    return buf_size;\n+}\n+\n+static int s302m_encode2_frame(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,\n+                                int *got_packet_ptr)\n+{\n+    int required_buffer_size;\n+    int return_val;\n+    return_val = AVERROR_EXIT;\n+    // Sanity checks.\n+    if (frame->nb_samples == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with zero samples\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+    else if (frame->linesize[0] == 0)\n+    {\n+        av_log(avctx, AV_LOG_ERROR, \"Attempting to encode frame with no data\");\n+        if (got_packet_ptr)\n+        {\n+            *got_packet_ptr = 0;\n+        }\n+        return AVERROR_INVALIDDATA;\n+    }\n+\n+    required_buffer_size = compute_buffer_size(avctx, frame->nb_samples);\n+    if (avpkt->size > 0)\n+    {\n+        // Ensure user provided packet size is appropriate\n+        if (avpkt->size != required_buffer_size)\n+        {\n+            av_log(avctx, AV_LOG_ERROR, \"Buffer provided to packet incorrect size.  \"\n+                   \"For %d samples and %d channels, buffer_size should be %d\",\n+                   frame->nb_samples, avctx->channels, required_buffer_size);\n+            if (got_packet_ptr)\n+            {\n+                *got_packet_ptr = 0;\n+            }\n+            return AVERROR_INVALIDDATA;\n+        }\n+    }\n+    else\n+    {\n+        avpkt->data = (uint8_t *) av_malloc(required_buffer_size);\n+        avpkt->size = required_buffer_size;\n+    }\n+\n+    return_val = s302m_encode_frame(avctx, avpkt->data, avpkt->size, frame->data[0]);", "path": "libavcodec/s302menc.c", "position": null, "original_position": 253, "commit_id": "f1eefd1c8d57b3fe1af344c806217c276ee630a6", "original_commit_id": "4cd5d3afcec50b7d76181b91fc7b65bf44007f63", "user": {"login": "darrylwally", "id": 819128, "avatar_url": "https://avatars1.githubusercontent.com/u/819128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwally", "html_url": "https://github.com/darrylwally", "followers_url": "https://api.github.com/users/darrylwally/followers", "following_url": "https://api.github.com/users/darrylwally/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwally/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwally/subscriptions", "organizations_url": "https://api.github.com/users/darrylwally/orgs", "repos_url": "https://api.github.com/users/darrylwally/repos", "events_url": "https://api.github.com/users/darrylwally/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwally/received_events", "type": "User", "site_admin": false}, "body": "Alright, I'll clean it up.\n", "created_at": "2013-03-19T13:53:37Z", "updated_at": "2013-05-23T17:28:15Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/12#discussion_r3431334"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/12"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509", "pull_request_review_id": null, "id": 4762509, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "michaelni", "id": 729390, "avatar_url": "https://avatars2.githubusercontent.com/u/729390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelni", "html_url": "https://github.com/michaelni", "followers_url": "https://api.github.com/users/michaelni/followers", "following_url": "https://api.github.com/users/michaelni/following{/other_user}", "gists_url": "https://api.github.com/users/michaelni/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelni/subscriptions", "organizations_url": "https://api.github.com/users/michaelni/orgs", "repos_url": "https://api.github.com/users/michaelni/repos", "events_url": "https://api.github.com/users/michaelni/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelni/received_events", "type": "User", "site_admin": false}, "body": "The expression stuff outside and inside the loop could be merged. (and the errors ignored before the last iteration)\n", "created_at": "2013-06-18T23:25:01Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4762509"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702", "pull_request_review_id": null, "id": 4764702, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "indentation got a bit broken, also at drawgrid_options. Please realign AV_OPT_... values\n", "created_at": "2013-06-19T02:46:49Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764702"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734", "pull_request_review_id": null, "id": 4764734, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "Please update also drawgrid doc in same way\n", "created_at": "2013-06-19T02:52:36Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764734"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841", "pull_request_review_id": null, "id": 4764841, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red", "path": "doc/filters.texi", "position": null, "original_position": 68, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "I'd write x=-t, also reference t in all other places where it is meant.\nIn sake of example correctness: if input image size ration exceeds 2.40:1, e.g. 3:1, i think it will draw just two horizontal lines (didn't test though).\n", "created_at": "2013-06-19T03:12:35Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907", "pull_request_review_id": null, "id": 4764907, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "krieger-od", "id": 803351, "avatar_url": "https://avatars2.githubusercontent.com/u/803351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krieger-od", "html_url": "https://github.com/krieger-od", "followers_url": "https://api.github.com/users/krieger-od/followers", "following_url": "https://api.github.com/users/krieger-od/following{/other_user}", "gists_url": "https://api.github.com/users/krieger-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/krieger-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krieger-od/subscriptions", "organizations_url": "https://api.github.com/users/krieger-od/orgs", "repos_url": "https://api.github.com/users/krieger-od/repos", "events_url": "https://api.github.com/users/krieger-od/events{/privacy}", "received_events_url": "https://api.github.com/users/krieger-od/received_events", "type": "User", "site_admin": false}, "body": "(Feel free to ignore the below.)\nIt may be better to move eval-stuff to separate procedure called from config_input(), so it would be easier to add possibility to reference changing variables, (e.g. timestamp or frame number), just calling eval function from filter_frame() instead of config_input().\n", "created_at": "2013-06-19T03:21:40Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4764907"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664", "pull_request_review_id": null, "id": 4775664, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)\n {\n-    DrawBoxContext *s = inlink->dst->priv;\n+    AVFilterContext *ctx = inlink->dst;\n+    DrawBoxContext *s = ctx->priv;\n     const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n+    double var_values[VARS_NB], res;\n+    char *expr;\n+    int ret;\n \n     s->hsub = desc->log2_chroma_w;\n     s->vsub = desc->log2_chroma_h;\n \n-    s->w = (s->w_opt > 0) ? s->w_opt : inlink->w;\n-    s->h = (s->h_opt > 0) ? s->h_opt : inlink->h;\n+    var_values[VAR_IN_H] = var_values[VAR_IH] = inlink->h;\n+    var_values[VAR_IN_W] = var_values[VAR_IW] = inlink->w;\n+    var_values[VAR_SAR]  = inlink->sample_aspect_ratio.num ? av_q2d(inlink->sample_aspect_ratio) : 1;\n+    var_values[VAR_DAR]  = (double)inlink->w / inlink->h * var_values[VAR_SAR];\n+    var_values[VAR_HSUB] = s->hsub;\n+    var_values[VAR_VSUB] = s->vsub;\n+    var_values[VAR_X] = NAN;\n+    var_values[VAR_Y] = NAN;\n+    var_values[VAR_H] = NAN;\n+    var_values[VAR_W] = NAN;\n+    var_values[VAR_T] = NAN;\n+\n+    for (int i = 0; i < 5; i++) {\n+        /* evaluate width and height */\n+        av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->w = var_values[VAR_W] = res;\n+        s->h = var_values[VAR_H] = res;\n+\n+        /* evaluate x and y */\n+        av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->x = var_values[VAR_X] = res;\n+        s->y = var_values[VAR_Y] = res;\n+\n+        /* evaluate thickness */\n+        av_expr_parse_and_eval(&res, (expr = s->t_expr),\n+                               var_names, var_values,\n+                               NULL, NULL, NULL, NULL, NULL, 0, ctx);\n+        s->thickness = var_values[VAR_T] = res;\n+    }\n \n-    av_log(inlink->dst, AV_LOG_VERBOSE, \"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\\n\",\n+    /* evaluate all the expressions again, this time fail on error */\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->x_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->x = var_values[VAR_X] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->y_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->y = var_values[VAR_Y] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->w_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->w = var_values[VAR_W] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->h_expr),\n+                                      var_names, var_values,\n+                                      NULL, NULL, NULL, NULL, NULL, 0, ctx)) < 0)\n+        goto fail;\n+    s->h = var_values[VAR_H] = res;\n+\n+    if ((ret = av_expr_parse_and_eval(&res, (expr = s->t_expr),", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 141, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:11Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775664"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669", "pull_request_review_id": null, "id": 4775669, "diff_hunk": "@@ -140,16 +261,16 @@ static int filter_frame(AVFilterLink *inlink, AVFrame *frame)\n #if CONFIG_DRAWBOX_FILTER\n \n static const AVOption drawbox_options[] = {\n-    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y),         AV_OPT_TYPE_INT, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS },\n-    { \"width\",     \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"w\",         \"set width of the box\",                         OFFSET(w_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"height\",    \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n-    { \"h\",         \"set height of the box\",                        OFFSET(h_opt),     AV_OPT_TYPE_INT, { .i64 = 0 }, 0,       INT_MAX, FLAGS },\n+    { \"x\",         \"set horizontal position of the left box edge\", OFFSET(x_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"y\",         \"set vertical position of the top box edge\",    OFFSET(y_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"width\",     \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"w\",         \"set width of the box\",                         OFFSET(w_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"height\",    \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },\n+    { \"h\",         \"set height of the box\",                        OFFSET(h_expr), AV_OPT_TYPE_STRING, { .str=\"0\" }, CHAR_MIN, CHAR_MAX, FLAGS },", "path": "libavfilter/vf_drawbox.c", "position": null, "original_position": 186, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:18Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775669"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673", "pull_request_review_id": null, "id": 4775673, "diff_hunk": "@@ -2928,6 +2965,12 @@ Fill the box with pink color:\n @example\n drawbox=x=10:y=10:w=100:h=100:color=pink@@0.5:t=max\n @end example\n+\n+@item\n+Draw a 2-pixel red 2.40:1 mask:\n+@example\n+drawbox=x=-2:y=0.5*(ih-iw/2.4)-2:w=iw+4:h=iw/2.4+4:t=2:c=red\n+@end example\n @end itemize\n \n @section drawgrid", "path": "doc/filters.texi", "position": null, "original_position": 72, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2013-06-19T15:49:31Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775673"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764", "pull_request_review_id": null, "id": 4775764, "diff_hunk": "@@ -83,20 +115,109 @@ static int query_formats(AVFilterContext *ctx)\n \n static int config_input(AVFilterLink *inlink)", "path": "libavfilter/vf_drawbox.c", "position": 63, "original_position": 59, "commit_id": "84f571e37f074724393b152843cd94e4f9a10100", "original_commit_id": "944a9148eb1c5316a862968c57548d71bf5bab20", "user": {"login": "mjmvisser", "id": 351739, "avatar_url": "https://avatars0.githubusercontent.com/u/351739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmvisser", "html_url": "https://github.com/mjmvisser", "followers_url": "https://api.github.com/users/mjmvisser/followers", "following_url": "https://api.github.com/users/mjmvisser/following{/other_user}", "gists_url": "https://api.github.com/users/mjmvisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmvisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmvisser/subscriptions", "organizations_url": "https://api.github.com/users/mjmvisser/orgs", "repos_url": "https://api.github.com/users/mjmvisser/repos", "events_url": "https://api.github.com/users/mjmvisser/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmvisser/received_events", "type": "User", "site_admin": false}, "body": "I thought of that, too, but in the end I figured it would be easy enough to refactor the eval stuff into a separate function if variables are ever added that vary over time. I surveyed a few other filters, and the \"don't do it until you need it\" approach seems to be consistent.\n", "created_at": "2013-06-19T15:53:04Z", "updated_at": "2013-06-25T15:40:56Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/25#discussion_r4775764"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/25"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369", "pull_request_review_id": null, "id": 8574369, "diff_hunk": "@@ -786,11 +802,12 @@ static int hls_read_seek(AVFormatContext *s, int stream_index,\n                                        s->streams[stream_index]->time_base.den,\n                                        flags & AVSEEK_FLAG_BACKWARD ?\n                                        AV_ROUND_DOWN : AV_ROUND_UP);\n-    timestamp = av_rescale_rnd(timestamp, AV_TIME_BASE, stream_index >= 0 ?\n-                               s->streams[stream_index]->time_base.den :\n-                               AV_TIME_BASE, flags & AVSEEK_FLAG_BACKWARD ?\n-                               AV_ROUND_DOWN : AV_ROUND_UP);\n-    if (s->duration < c->seek_timestamp) {\n+    first_timestamp = c->first_timestamp == AV_NOPTS_VALUE ?\n+                      0 : c->first_timestamp;\n+    seek_timestamp = c->seek_timestamp;\n+\n+    if (seek_timestamp < first_timestamp ||\n+        (s->duration && s->duration < seek_timestamp - first_timestamp)) {", "path": "libavformat/hls.c", "position": null, "original_position": 74, "commit_id": "ac3e65020be94f2831f738f3b73c2b90300cc358", "original_commit_id": "86235c7d8ea94d7425b358b76c6bf11e0a931c6c", "user": {"login": "vkosh", "id": 28398, "avatar_url": "https://avatars1.githubusercontent.com/u/28398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkosh", "html_url": "https://github.com/vkosh", "followers_url": "https://api.github.com/users/vkosh/followers", "following_url": "https://api.github.com/users/vkosh/following{/other_user}", "gists_url": "https://api.github.com/users/vkosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkosh/subscriptions", "organizations_url": "https://api.github.com/users/vkosh/orgs", "repos_url": "https://api.github.com/users/vkosh/repos", "events_url": "https://api.github.com/users/vkosh/events{/privacy}", "received_events_url": "https://api.github.com/users/vkosh/received_events", "type": "User", "site_admin": false}, "body": "Added a \"seek_timestamp - first_timestamp\" in check condition to cover a case when first VOD segment starts from non-zero timestamp.\n", "created_at": "2013-12-27T23:49:05Z", "updated_at": "2014-01-04T22:47:06Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/50#discussion_r8574369"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248", "pull_request_review_id": null, "id": 16581248, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please merge this line with\n\n```\nOBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n```\n", "created_at": "2014-08-22T03:37:56Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581248"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249", "pull_request_review_id": null, "id": 16581249, "diff_hunk": "@@ -14,6 +14,8 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfframereceiver.o", "path": "libavdevice/Makefile", "position": 5, "original_position": 5, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Also, alphabetical order.\n", "created_at": "2014-08-22T03:38:09Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581249"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271", "pull_request_review_id": null, "id": 16581271, "diff_hunk": "@@ -0,0 +1,50 @@\n+#ifndef AVFFRAMERECEIVER_H", "path": "libavdevice/avfframereceiver.h", "position": null, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Missing copyright. Also use `AVDEVICE_AVFFRAMERECEIVER_H` as multi-inclusion guard.\n", "created_at": "2014-08-22T03:39:32Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581271"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279", "pull_request_review_id": null, "id": 16581279, "diff_hunk": "@@ -0,0 +1,42 @@\n+#import \"avfframereceiver.h\"", "path": "libavdevice/avfframereceiver.m", "position": 21, "original_position": 1, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "41b8642471f12eec8e290843053f5d2555a1ce72", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Please add copyright.\n", "created_at": "2014-08-22T03:39:52Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16581279"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728", "pull_request_review_id": null, "id": 16603728, "diff_hunk": "@@ -13,7 +13,9 @@ OBJS-$(CONFIG_ALSA_INDEV)                += alsa-audio-common.o \\\n                                             alsa-audio-dec.o timefilter.o\n OBJS-$(CONFIG_ALSA_OUTDEV)               += alsa-audio-common.o \\\n                                             alsa-audio-enc.o\n-OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n+OBJS-$(CONFIG_AVCAPTURE_INDEV)           += avcapture.o\n+OBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o \\\n+\t\t\t\t\t\t\t\t\t\t\tavfframereceiver.o", "path": "libavdevice/Makefile", "position": null, "original_position": 7, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "No tabs are allowed in FFmpeg.\n", "created_at": "2014-08-22T15:29:07Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603728"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841", "pull_request_review_id": null, "id": 16603841, "diff_hunk": "@@ -0,0 +1,62 @@\n+/*\n+ * AVCapture input device\n+ * Copyright (c) 2014 Joseph Benden <joe@thrallingpenguin.com>", "path": "libavdevice/avfframereceiver.m", "position": null, "original_position": 3, "commit_id": "2639131f2963db15e75fd7f95a5b11962248b65a", "original_commit_id": "d82bb683551002fed382a089c93443fc31730924", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "This needs\n\n```\nCopyright (c) 2014 Thilo Borgmann <thilo.borgmann@mail.de>\n```\n\ntoo as you copied the contents from avfoundation.m.\n", "created_at": "2014-08-22T15:31:14Z", "updated_at": "2014-10-20T19:58:27Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/75#discussion_r16603841"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/75"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773", "pull_request_review_id": null, "id": 20589773, "diff_hunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (C) 2010-2011 FFmpeg for WinRT ARM project\n+ *\n+ * Authors: Jesse Jiang <qyljcy@163.com>\n+ *          PPLive Inc. <http://www.pptv.com/>", "path": "compat/winrtapiconvert.h", "position": 5, "original_position": 5, "commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "original_commit_id": "2557bc0a79d56ed129886cec6e0582d4be5f1c65", "user": {"login": "TimothyGu", "id": 1538624, "avatar_url": "https://avatars2.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "site_admin": false}, "body": "Use\n\n```\nCopyright (c) 2014 Jesse Jiang <qyljcy@163.com>\nCopyright (c) 2014 PPLive Inc. <http://www.pptv.com>\n```\n", "created_at": "2014-11-19T17:03:43Z", "updated_at": "2014-11-19T17:03:43Z", "html_url": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773", "pull_request_url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773"}, "html": {"href": "https://github.com/FFmpeg/FFmpeg/pull/97#discussion_r20589773"}, "pull_request": {"href": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/97"}}, "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}