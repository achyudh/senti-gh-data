{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/google/openrtb/issues/121", "repository_url": "https://api.github.com/repos/google/openrtb", "labels_url": "https://api.github.com/repos/google/openrtb/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/121/comments", "events_url": "https://api.github.com/repos/google/openrtb/issues/121/events", "html_url": "https://github.com/google/openrtb/pull/121", "id": 287839925, "number": 121, "title": "Adding support for enum extension values within range 500-999", "user": {"login": "sdorazio", "id": 4570951, "avatar_url": "https://avatars0.githubusercontent.com/u/4570951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdorazio", "html_url": "https://github.com/sdorazio", "followers_url": "https://api.github.com/users/sdorazio/followers", "following_url": "https://api.github.com/users/sdorazio/following{/other_user}", "gists_url": "https://api.github.com/users/sdorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdorazio/subscriptions", "organizations_url": "https://api.github.com/users/sdorazio/orgs", "repos_url": "https://api.github.com/users/sdorazio/repos", "events_url": "https://api.github.com/users/sdorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/sdorazio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-11T16:20:48Z", "updated_at": "2018-01-11T16:24:07Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/google/openrtb/pulls/121", "html_url": "https://github.com/google/openrtb/pull/121", "diff_url": "https://github.com/google/openrtb/pull/121.diff", "patch_url": "https://github.com/google/openrtb/pull/121.patch"}, "body": "This pull request adds support for exchange-specific enum values (typically 500+), which should address issue #120. The meaning of each of these values will be dependent on the exchange.", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/120", "repository_url": "https://api.github.com/repos/google/openrtb", "labels_url": "https://api.github.com/repos/google/openrtb/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/120/comments", "events_url": "https://api.github.com/repos/google/openrtb/issues/120/events", "html_url": "https://github.com/google/openrtb/issues/120", "id": 286921553, "number": 120, "title": "Handling 500+ DataAssetType Values", "user": {"login": "firefisher", "id": 25391173, "avatar_url": "https://avatars3.githubusercontent.com/u/25391173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/firefisher", "html_url": "https://github.com/firefisher", "followers_url": "https://api.github.com/users/firefisher/followers", "following_url": "https://api.github.com/users/firefisher/following{/other_user}", "gists_url": "https://api.github.com/users/firefisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/firefisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/firefisher/subscriptions", "organizations_url": "https://api.github.com/users/firefisher/orgs", "repos_url": "https://api.github.com/users/firefisher/repos", "events_url": "https://api.github.com/users/firefisher/events{/privacy}", "received_events_url": "https://api.github.com/users/firefisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-08T23:23:14Z", "updated_at": "2018-01-15T17:23:31Z", "closed_at": null, "author_association": "NONE", "body": "We are receiving messages from a 3rd party which contain DataAssetTypes of 501, 502, etc. The 500+ range is defined in the openrtb spec for \"exchange specific usage\".\r\n\r\nreadBidRequests() fails to process messages containing these data types (stacktrace below). \r\n\r\nI believe enum's cannot be extended in protobuf. What would be the best way to allow processing of these messages?\r\n\r\n```\r\ncom.google.protobuf.UninitializedMessageException: Message missing required fields: type\r\n\tat com.google.protobuf.AbstractMessage$Builder.newUninitializedMessageException(AbstractMessage.java:501)\r\n\tat com.google.openrtb.OpenRtb$NativeRequest$Asset$Data$Builder.build(OpenRtb.java)\r\n\tat com.google.openrtb.OpenRtb$NativeRequest$Asset$Builder.setData(OpenRtb.java)\r\n\tat com.google.openrtb.json.OpenRtbNativeJsonReader.readReqAssetField(OpenRtbNativeJsonReader.java:224)\r\n\tat com.google.openrtb.json.OpenRtbNativeJsonReader.readReqAsset(OpenRtbNativeJsonReader.java:199)\r\n\tat com.google.openrtb.json.OpenRtbNativeJsonReader.readNativeRequestField(OpenRtbNativeJsonReader.java:151)\r\n\tat com.google.openrtb.json.OpenRtbNativeJsonReader.readNativeRequest(OpenRtbNativeJsonReader.java:113)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readNativeField(OpenRtbJsonReader.java:410)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readNative(OpenRtbJsonReader.java:396)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readImpField(OpenRtbJsonReader.java:316)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readImp(OpenRtbJsonReader.java:294)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readBidRequestField(OpenRtbJsonReader.java:159)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readBidRequest(OpenRtbJsonReader.java:145)\r\n\tat com.google.openrtb.json.OpenRtbJsonReader.readBidRequest(OpenRtbJsonReader.java:126)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/119", "repository_url": "https://api.github.com/repos/google/openrtb", "labels_url": "https://api.github.com/repos/google/openrtb/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/119/comments", "events_url": "https://api.github.com/repos/google/openrtb/issues/119/events", "html_url": "https://github.com/google/openrtb/issues/119", "id": 279392844, "number": 119, "title": "Wrong default value for deal auction type.", "user": {"login": "Fredrik-L", "id": 2528173, "avatar_url": "https://avatars1.githubusercontent.com/u/2528173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fredrik-L", "html_url": "https://github.com/Fredrik-L", "followers_url": "https://api.github.com/users/Fredrik-L/followers", "following_url": "https://api.github.com/users/Fredrik-L/following{/other_user}", "gists_url": "https://api.github.com/users/Fredrik-L/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fredrik-L/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fredrik-L/subscriptions", "organizations_url": "https://api.github.com/users/Fredrik-L/orgs", "repos_url": "https://api.github.com/users/Fredrik-L/repos", "events_url": "https://api.github.com/users/Fredrik-L/events{/privacy}", "received_events_url": "https://api.github.com/users/Fredrik-L/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-05T14:23:39Z", "updated_at": "2017-12-12T02:44:30Z", "closed_at": null, "author_association": "NONE", "body": "When invoking the getAt() method on a OpenRtb.BidRequest.Imp.Pmp.Deal object, that doesn't have that 'at' value set - the method defaults to OpenRtb.AuctionType.FIRST_PRICE.\r\n\r\nAccording to the OpenRTB specs, if should default to the BidRequest's auction type: \"Optional override of the overall auction type of the bid request\".\r\n\r\n(Which in turn defaults correctly to OpenRtb.AuctionType.SECOND_PRICE)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/113", "repository_url": "https://api.github.com/repos/google/openrtb", "labels_url": "https://api.github.com/repos/google/openrtb/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/113/comments", "events_url": "https://api.github.com/repos/google/openrtb/issues/113/events", "html_url": "https://github.com/google/openrtb/issues/113", "id": 245948888, "number": 113, "title": "build DSP", "user": {"login": "haitui", "id": 30464414, "avatar_url": "https://avatars0.githubusercontent.com/u/30464414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haitui", "html_url": "https://github.com/haitui", "followers_url": "https://api.github.com/users/haitui/followers", "following_url": "https://api.github.com/users/haitui/following{/other_user}", "gists_url": "https://api.github.com/users/haitui/gists{/gist_id}", "starred_url": "https://api.github.com/users/haitui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haitui/subscriptions", "organizations_url": "https://api.github.com/users/haitui/orgs", "repos_url": "https://api.github.com/users/haitui/repos", "events_url": "https://api.github.com/users/haitui/events{/privacy}", "received_events_url": "https://api.github.com/users/haitui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-27T07:25:31Z", "updated_at": "2017-07-27T07:26:06Z", "closed_at": null, "author_association": "NONE", "body": "where can I learn how to build a DSP?", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/109", "repository_url": "https://api.github.com/repos/google/openrtb", "labels_url": "https://api.github.com/repos/google/openrtb/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/109/comments", "events_url": "https://api.github.com/repos/google/openrtb/issues/109/events", "html_url": "https://github.com/google/openrtb/issues/109", "id": 222306032, "number": 109, "title": "Version Specific BidRequest Writers ", "user": {"login": "mzgupta", "id": 1213910, "avatar_url": "https://avatars0.githubusercontent.com/u/1213910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzgupta", "html_url": "https://github.com/mzgupta", "followers_url": "https://api.github.com/users/mzgupta/followers", "following_url": "https://api.github.com/users/mzgupta/following{/other_user}", "gists_url": "https://api.github.com/users/mzgupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzgupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzgupta/subscriptions", "organizations_url": "https://api.github.com/users/mzgupta/orgs", "repos_url": "https://api.github.com/users/mzgupta/repos", "events_url": "https://api.github.com/users/mzgupta/events{/privacy}", "received_events_url": "https://api.github.com/users/mzgupta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-18T05:28:32Z", "updated_at": "2017-04-20T16:56:26Z", "closed_at": null, "author_association": "NONE", "body": "@opinali \r\nThis library does not provide version specific writer. I mean if I want to send RTB 2.3 BidRequest to DSP1 and RTB 2.4 BidRequest to DSP2, the what is the best way to do it ? ", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "28cc0f5857de10e3b3a4bbc9e47be520eb731568", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:37:47Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:37:47Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "f83016196e4cbbb1cfd8edfdfab9e1ea4d18744a", "url": "https://api.github.com/repos/google/openrtb/git/trees/f83016196e4cbbb1cfd8edfdfab9e1ea4d18744a"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/28cc0f5857de10e3b3a4bbc9e47be520eb731568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/28cc0f5857de10e3b3a4bbc9e47be520eb731568", "html_url": "https://github.com/google/openrtb/commit/28cc0f5857de10e3b3a4bbc9e47be520eb731568", "comments_url": "https://api.github.com/repos/google/openrtb/commits/28cc0f5857de10e3b3a4bbc9e47be520eb731568/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "url": "https://api.github.com/repos/google/openrtb/commits/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "html_url": "https://github.com/google/openrtb/commit/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c"}]}, {"sha": "af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:37:47Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:37:47Z"}, "message": "[maven-release-plugin] prepare release 1.5.1", "tree": {"sha": "ec7991f1b96fc5d0e837d9de2d56da152eee56ba", "url": "https://api.github.com/repos/google/openrtb/git/trees/ec7991f1b96fc5d0e837d9de2d56da152eee56ba"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "html_url": "https://github.com/google/openrtb/commit/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c", "comments_url": "https://api.github.com/repos/google/openrtb/commits/af4cd1dec7b4e143b95b911ec6a28fb2f70d4b2c/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "url": "https://api.github.com/repos/google/openrtb/commits/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "html_url": "https://github.com/google/openrtb/commit/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d"}]}, {"sha": "3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:32:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-22T01:32:58Z"}, "message": "Merge pull request #118 from opinali/master\n\nProtobuf 3.5.0", "tree": {"sha": "853febc1e664e86633e86dfc06a48d5e7c726c57", "url": "https://api.github.com/repos/google/openrtb/git/trees/853febc1e664e86633e86dfc06a48d5e7c726c57"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaFNPKCRBK7hj4Ov3rIwAAdHIIAKSFK/BIyClWrYCd5zb4I95b\nZ3vAOgTV2160GFhKvrOQvR0Q05/02Y3q26Sw3WnY8N4EG2F//zLI7hECGABD2IgE\nhmzudY/0SfR55zgQGdty7ubovO4D7ttpOR2JgayrT8zq09onlfO1668CV/juz/yV\ntfnJQJ1Au2gelASmkP4EudBas6QBRfIg3v7PQyr75rerFEVfvvuz5o+/ICoMo3it\nFKUzLmucxIO69WWQ2zQbFI9kgIGcL1LuFt0KyDxzwld+nURWVq4B/oOxTPD72m3Z\niYUvRd672bmu4nMt4YsXcqn3OVBOW3DsSMk3uVBEZAZqLWvRm83alUwBNPNRjUs=\n=cLiT\n-----END PGP SIGNATURE-----\n", "payload": "tree 853febc1e664e86633e86dfc06a48d5e7c726c57\nparent 986773a60e76831d955719f4a63246df2efade91\nparent cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2\nauthor Osvaldo Pinali Doederlein <opinali@google.com> 1511314378 -0500\ncommitter GitHub <noreply@github.com> 1511314378 -0500\n\nMerge pull request #118 from opinali/master\n\nProtobuf 3.5.0"}}, "url": "https://api.github.com/repos/google/openrtb/commits/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "html_url": "https://github.com/google/openrtb/commit/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d", "comments_url": "https://api.github.com/repos/google/openrtb/commits/3eb7919c2a8e1257f4a7e7df04e04b97c3ed768d/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "986773a60e76831d955719f4a63246df2efade91", "url": "https://api.github.com/repos/google/openrtb/commits/986773a60e76831d955719f4a63246df2efade91", "html_url": "https://github.com/google/openrtb/commit/986773a60e76831d955719f4a63246df2efade91"}, {"sha": "cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "url": "https://api.github.com/repos/google/openrtb/commits/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "html_url": "https://github.com/google/openrtb/commit/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2"}]}, {"sha": "cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:32:22Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-22T01:32:22Z"}, "message": "Update changelog", "tree": {"sha": "853febc1e664e86633e86dfc06a48d5e7c726c57", "url": "https://api.github.com/repos/google/openrtb/git/trees/853febc1e664e86633e86dfc06a48d5e7c726c57"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "html_url": "https://github.com/google/openrtb/commit/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2", "comments_url": "https://api.github.com/repos/google/openrtb/commits/cbe75b740a5c09ecf52ba0d4d8e73904be72eaa2/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b57e8a09d7908e4112828796b138e8d82ef955f0", "url": "https://api.github.com/repos/google/openrtb/commits/b57e8a09d7908e4112828796b138e8d82ef955f0", "html_url": "https://github.com/google/openrtb/commit/b57e8a09d7908e4112828796b138e8d82ef955f0"}]}, {"sha": "b57e8a09d7908e4112828796b138e8d82ef955f0", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-18T00:39:01Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-18T00:39:01Z"}, "message": "Protobuf 3.5.0", "tree": {"sha": "cb345ebea775b0ccc547d90d910b937706790678", "url": "https://api.github.com/repos/google/openrtb/git/trees/cb345ebea775b0ccc547d90d910b937706790678"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/b57e8a09d7908e4112828796b138e8d82ef955f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/b57e8a09d7908e4112828796b138e8d82ef955f0", "html_url": "https://github.com/google/openrtb/commit/b57e8a09d7908e4112828796b138e8d82ef955f0", "comments_url": "https://api.github.com/repos/google/openrtb/commits/b57e8a09d7908e4112828796b138e8d82ef955f0/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "986773a60e76831d955719f4a63246df2efade91", "url": "https://api.github.com/repos/google/openrtb/commits/986773a60e76831d955719f4a63246df2efade91", "html_url": "https://github.com/google/openrtb/commit/986773a60e76831d955719f4a63246df2efade91"}]}, {"sha": "986773a60e76831d955719f4a63246df2efade91", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:11:25Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:11:25Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "d5e0fb3f481ee42a7669388d3d3cc7c9ee520d8d", "url": "https://api.github.com/repos/google/openrtb/git/trees/d5e0fb3f481ee42a7669388d3d3cc7c9ee520d8d"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/986773a60e76831d955719f4a63246df2efade91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/986773a60e76831d955719f4a63246df2efade91", "html_url": "https://github.com/google/openrtb/commit/986773a60e76831d955719f4a63246df2efade91", "comments_url": "https://api.github.com/repos/google/openrtb/commits/986773a60e76831d955719f4a63246df2efade91/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a45920d43aa58832d3a5ff35d0a790768b37099", "url": "https://api.github.com/repos/google/openrtb/commits/3a45920d43aa58832d3a5ff35d0a790768b37099", "html_url": "https://github.com/google/openrtb/commit/3a45920d43aa58832d3a5ff35d0a790768b37099"}]}, {"sha": "3a45920d43aa58832d3a5ff35d0a790768b37099", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:11:25Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:11:25Z"}, "message": "[maven-release-plugin] prepare release 1.5.0", "tree": {"sha": "4953051c96d27e34ab9555eeda67415a411e57a5", "url": "https://api.github.com/repos/google/openrtb/git/trees/4953051c96d27e34ab9555eeda67415a411e57a5"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/3a45920d43aa58832d3a5ff35d0a790768b37099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/3a45920d43aa58832d3a5ff35d0a790768b37099", "html_url": "https://github.com/google/openrtb/commit/3a45920d43aa58832d3a5ff35d0a790768b37099", "comments_url": "https://api.github.com/repos/google/openrtb/commits/3a45920d43aa58832d3a5ff35d0a790768b37099/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "url": "https://api.github.com/repos/google/openrtb/commits/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "html_url": "https://github.com/google/openrtb/commit/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed"}]}, {"sha": "e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:09:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-02T01:09:16Z"}, "message": "Merge pull request #117 from opinali/master\n\nOpenRTB Native 1.2", "tree": {"sha": "b5f0907644cd74dd66f301a3e99ea1c94f7bfa3c", "url": "https://api.github.com/repos/google/openrtb/git/trees/b5f0907644cd74dd66f301a3e99ea1c94f7bfa3c"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ+nA8CRBK7hj4Ov3rIwAAdHIIALCJz7KjX37w931rcIOBnDG7\nCfFR2S00Us84KrqLxMXyrBqq63xnf3W6YFSOfGIFyEH5rDJWefg4hyxRstxOfNgK\nkA1KeqD8T/LKF73wqFSqDYyPvpDGIGfa9CjN2199W9TX7tCnuR1NPS6wokDlZdW/\nOuZzoMqamXM/dTQrQOok16xkK5OFAH4CAfqIX/NgqjtW7XwNBb64uUGL4e0zCgNJ\nkMW7IntHXZ7w2qNhEfIs6QulQOX1zZZ7SCT2nl/SpcvjVaYze1i1n8Io/s63YIWG\nlqDGE8Y+AGMnhgC+/k9u4sKkK7drBfbSZdeJ/afpQ8jC4eVY7CI0j0TGxPWlxOg=\n=Fraa\n-----END PGP SIGNATURE-----\n", "payload": "tree b5f0907644cd74dd66f301a3e99ea1c94f7bfa3c\nparent 1bf1e4efd5dd914f4036210a0601afea7f271eec\nparent 2f81d0b78db23a5151af23951c251e8a638eb0b0\nauthor Osvaldo Pinali Doederlein <opinali@google.com> 1509584956 -0400\ncommitter GitHub <noreply@github.com> 1509584956 -0400\n\nMerge pull request #117 from opinali/master\n\nOpenRTB Native 1.2"}}, "url": "https://api.github.com/repos/google/openrtb/commits/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "html_url": "https://github.com/google/openrtb/commit/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed", "comments_url": "https://api.github.com/repos/google/openrtb/commits/e5f5bfc0e6b2c238c946743646a6d8bc74df06ed/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bf1e4efd5dd914f4036210a0601afea7f271eec", "url": "https://api.github.com/repos/google/openrtb/commits/1bf1e4efd5dd914f4036210a0601afea7f271eec", "html_url": "https://github.com/google/openrtb/commit/1bf1e4efd5dd914f4036210a0601afea7f271eec"}, {"sha": "2f81d0b78db23a5151af23951c251e8a638eb0b0", "url": "https://api.github.com/repos/google/openrtb/commits/2f81d0b78db23a5151af23951c251e8a638eb0b0", "html_url": "https://github.com/google/openrtb/commit/2f81d0b78db23a5151af23951c251e8a638eb0b0"}]}, {"sha": "2f81d0b78db23a5151af23951c251e8a638eb0b0", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:08:24Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-02T01:08:24Z"}, "message": "v1.5.0", "tree": {"sha": "b5f0907644cd74dd66f301a3e99ea1c94f7bfa3c", "url": "https://api.github.com/repos/google/openrtb/git/trees/b5f0907644cd74dd66f301a3e99ea1c94f7bfa3c"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/2f81d0b78db23a5151af23951c251e8a638eb0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/2f81d0b78db23a5151af23951c251e8a638eb0b0", "html_url": "https://github.com/google/openrtb/commit/2f81d0b78db23a5151af23951c251e8a638eb0b0", "comments_url": "https://api.github.com/repos/google/openrtb/commits/2f81d0b78db23a5151af23951c251e8a638eb0b0/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f553a9a8ed9f416263b412edf6787a74a576289", "url": "https://api.github.com/repos/google/openrtb/commits/8f553a9a8ed9f416263b412edf6787a74a576289", "html_url": "https://github.com/google/openrtb/commit/8f553a9a8ed9f416263b412edf6787a74a576289"}]}, {"sha": "8f553a9a8ed9f416263b412edf6787a74a576289", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-01T18:50:26Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-11-01T18:50:26Z"}, "message": "OpenRTB Native 1.2 reviews", "tree": {"sha": "e3a4d1a7942a68a66cf554b982385147e97e0f8b", "url": "https://api.github.com/repos/google/openrtb/git/trees/e3a4d1a7942a68a66cf554b982385147e97e0f8b"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/8f553a9a8ed9f416263b412edf6787a74a576289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/8f553a9a8ed9f416263b412edf6787a74a576289", "html_url": "https://github.com/google/openrtb/commit/8f553a9a8ed9f416263b412edf6787a74a576289", "comments_url": "https://api.github.com/repos/google/openrtb/commits/8f553a9a8ed9f416263b412edf6787a74a576289/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739bba25df9b5f36a8990b49961fab2f9163a38a", "url": "https://api.github.com/repos/google/openrtb/commits/739bba25df9b5f36a8990b49961fab2f9163a38a", "html_url": "https://github.com/google/openrtb/commit/739bba25df9b5f36a8990b49961fab2f9163a38a"}]}, {"sha": "739bba25df9b5f36a8990b49961fab2f9163a38a", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-10-29T14:24:33Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-10-30T17:42:29Z"}, "message": "OpenRTB Native 1.2, other proto updates", "tree": {"sha": "870863930a95ab0e00e0b2f550951273fa67eacd", "url": "https://api.github.com/repos/google/openrtb/git/trees/870863930a95ab0e00e0b2f550951273fa67eacd"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/739bba25df9b5f36a8990b49961fab2f9163a38a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/739bba25df9b5f36a8990b49961fab2f9163a38a", "html_url": "https://github.com/google/openrtb/commit/739bba25df9b5f36a8990b49961fab2f9163a38a", "comments_url": "https://api.github.com/repos/google/openrtb/commits/739bba25df9b5f36a8990b49961fab2f9163a38a/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bf1e4efd5dd914f4036210a0601afea7f271eec", "url": "https://api.github.com/repos/google/openrtb/commits/1bf1e4efd5dd914f4036210a0601afea7f271eec", "html_url": "https://github.com/google/openrtb/commit/1bf1e4efd5dd914f4036210a0601afea7f271eec"}]}, {"sha": "1bf1e4efd5dd914f4036210a0601afea7f271eec", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T22:23:16Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T22:23:16Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "cb9d8aeeb0170d7533d5549553f255fcdecf570a", "url": "https://api.github.com/repos/google/openrtb/git/trees/cb9d8aeeb0170d7533d5549553f255fcdecf570a"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/1bf1e4efd5dd914f4036210a0601afea7f271eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/1bf1e4efd5dd914f4036210a0601afea7f271eec", "html_url": "https://github.com/google/openrtb/commit/1bf1e4efd5dd914f4036210a0601afea7f271eec", "comments_url": "https://api.github.com/repos/google/openrtb/commits/1bf1e4efd5dd914f4036210a0601afea7f271eec/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e86f38f28f230a773c2aaf1a14c7789b5664e2", "url": "https://api.github.com/repos/google/openrtb/commits/88e86f38f28f230a773c2aaf1a14c7789b5664e2", "html_url": "https://github.com/google/openrtb/commit/88e86f38f28f230a773c2aaf1a14c7789b5664e2"}]}, {"sha": "88e86f38f28f230a773c2aaf1a14c7789b5664e2", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T22:23:16Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T22:23:16Z"}, "message": "[maven-release-plugin] prepare release 1.4.7", "tree": {"sha": "c1d214d25d63f17726cbe033c9b32a5b75e97df1", "url": "https://api.github.com/repos/google/openrtb/git/trees/c1d214d25d63f17726cbe033c9b32a5b75e97df1"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/88e86f38f28f230a773c2aaf1a14c7789b5664e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/88e86f38f28f230a773c2aaf1a14c7789b5664e2", "html_url": "https://github.com/google/openrtb/commit/88e86f38f28f230a773c2aaf1a14c7789b5664e2", "comments_url": "https://api.github.com/repos/google/openrtb/commits/88e86f38f28f230a773c2aaf1a14c7789b5664e2/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed35eec002ba8e2da3855a83d9997c5cc4624954", "url": "https://api.github.com/repos/google/openrtb/commits/ed35eec002ba8e2da3855a83d9997c5cc4624954", "html_url": "https://github.com/google/openrtb/commit/ed35eec002ba8e2da3855a83d9997c5cc4624954"}]}, {"sha": "ed35eec002ba8e2da3855a83d9997c5cc4624954", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-09-22T22:21:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-22T22:21:46Z"}, "message": "Merge pull request #116 from opinali/master\n\nv1.4.7 Updates", "tree": {"sha": "a27e3389386c40061a10e65e8f46ddc3d2c0ba94", "url": "https://api.github.com/repos/google/openrtb/git/trees/a27e3389386c40061a10e65e8f46ddc3d2c0ba94"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/ed35eec002ba8e2da3855a83d9997c5cc4624954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/ed35eec002ba8e2da3855a83d9997c5cc4624954", "html_url": "https://github.com/google/openrtb/commit/ed35eec002ba8e2da3855a83d9997c5cc4624954", "comments_url": "https://api.github.com/repos/google/openrtb/commits/ed35eec002ba8e2da3855a83d9997c5cc4624954/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "403018eae188d7543c75b8e58d62221e1fae5cba", "url": "https://api.github.com/repos/google/openrtb/commits/403018eae188d7543c75b8e58d62221e1fae5cba", "html_url": "https://github.com/google/openrtb/commit/403018eae188d7543c75b8e58d62221e1fae5cba"}, {"sha": "14a734f776e0cb40a17e90b256e68cad316eb7e9", "url": "https://api.github.com/repos/google/openrtb/commits/14a734f776e0cb40a17e90b256e68cad316eb7e9", "html_url": "https://github.com/google/openrtb/commit/14a734f776e0cb40a17e90b256e68cad316eb7e9"}]}, {"sha": "14a734f776e0cb40a17e90b256e68cad316eb7e9", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T18:53:07Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-09-22T18:53:07Z"}, "message": "Updates", "tree": {"sha": "a27e3389386c40061a10e65e8f46ddc3d2c0ba94", "url": "https://api.github.com/repos/google/openrtb/git/trees/a27e3389386c40061a10e65e8f46ddc3d2c0ba94"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/14a734f776e0cb40a17e90b256e68cad316eb7e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/14a734f776e0cb40a17e90b256e68cad316eb7e9", "html_url": "https://github.com/google/openrtb/commit/14a734f776e0cb40a17e90b256e68cad316eb7e9", "comments_url": "https://api.github.com/repos/google/openrtb/commits/14a734f776e0cb40a17e90b256e68cad316eb7e9/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "403018eae188d7543c75b8e58d62221e1fae5cba", "url": "https://api.github.com/repos/google/openrtb/commits/403018eae188d7543c75b8e58d62221e1fae5cba", "html_url": "https://github.com/google/openrtb/commit/403018eae188d7543c75b8e58d62221e1fae5cba"}]}, {"sha": "403018eae188d7543c75b8e58d62221e1fae5cba", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:50:09Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:50:09Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "cb173e08af0472c1febfd715f8a915dde7f86b2b", "url": "https://api.github.com/repos/google/openrtb/git/trees/cb173e08af0472c1febfd715f8a915dde7f86b2b"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/403018eae188d7543c75b8e58d62221e1fae5cba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/403018eae188d7543c75b8e58d62221e1fae5cba", "html_url": "https://github.com/google/openrtb/commit/403018eae188d7543c75b8e58d62221e1fae5cba", "comments_url": "https://api.github.com/repos/google/openrtb/commits/403018eae188d7543c75b8e58d62221e1fae5cba/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "757dd408f763f5fea6873cd100fe09631858d468", "url": "https://api.github.com/repos/google/openrtb/commits/757dd408f763f5fea6873cd100fe09631858d468", "html_url": "https://github.com/google/openrtb/commit/757dd408f763f5fea6873cd100fe09631858d468"}]}, {"sha": "757dd408f763f5fea6873cd100fe09631858d468", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:50:09Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:50:09Z"}, "message": "[maven-release-plugin] prepare release 1.4.6", "tree": {"sha": "b8cbca611cbaaf163d212f772a6582d90f318ab8", "url": "https://api.github.com/repos/google/openrtb/git/trees/b8cbca611cbaaf163d212f772a6582d90f318ab8"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/757dd408f763f5fea6873cd100fe09631858d468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/757dd408f763f5fea6873cd100fe09631858d468", "html_url": "https://github.com/google/openrtb/commit/757dd408f763f5fea6873cd100fe09631858d468", "comments_url": "https://api.github.com/repos/google/openrtb/commits/757dd408f763f5fea6873cd100fe09631858d468/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c62d9e524af7fd2ffe89971e8141b18688902ef", "url": "https://api.github.com/repos/google/openrtb/commits/6c62d9e524af7fd2ffe89971e8141b18688902ef", "html_url": "https://github.com/google/openrtb/commit/6c62d9e524af7fd2ffe89971e8141b18688902ef"}]}, {"sha": "6c62d9e524af7fd2ffe89971e8141b18688902ef", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:48:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-29T13:48:18Z"}, "message": "Merge pull request #115 from opinali/master\n\nProtobuf 3.4.0", "tree": {"sha": "2a2a1dd3b58c8b60bc8c96fd64bc53b76bae5eb4", "url": "https://api.github.com/repos/google/openrtb/git/trees/2a2a1dd3b58c8b60bc8c96fd64bc53b76bae5eb4"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/6c62d9e524af7fd2ffe89971e8141b18688902ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/6c62d9e524af7fd2ffe89971e8141b18688902ef", "html_url": "https://github.com/google/openrtb/commit/6c62d9e524af7fd2ffe89971e8141b18688902ef", "comments_url": "https://api.github.com/repos/google/openrtb/commits/6c62d9e524af7fd2ffe89971e8141b18688902ef/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "url": "https://api.github.com/repos/google/openrtb/commits/28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "html_url": "https://github.com/google/openrtb/commit/28de6b7186c74ce2065abd6bfb22912eb7a6ab81"}, {"sha": "268313b42f1829a1c0b6ae998b2de623bce50d3c", "url": "https://api.github.com/repos/google/openrtb/commits/268313b42f1829a1c0b6ae998b2de623bce50d3c", "html_url": "https://github.com/google/openrtb/commit/268313b42f1829a1c0b6ae998b2de623bce50d3c"}]}, {"sha": "268313b42f1829a1c0b6ae998b2de623bce50d3c", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:46:13Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-29T13:46:13Z"}, "message": "Protobuf 3.4.0", "tree": {"sha": "2a2a1dd3b58c8b60bc8c96fd64bc53b76bae5eb4", "url": "https://api.github.com/repos/google/openrtb/git/trees/2a2a1dd3b58c8b60bc8c96fd64bc53b76bae5eb4"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/268313b42f1829a1c0b6ae998b2de623bce50d3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/268313b42f1829a1c0b6ae998b2de623bce50d3c", "html_url": "https://github.com/google/openrtb/commit/268313b42f1829a1c0b6ae998b2de623bce50d3c", "comments_url": "https://api.github.com/repos/google/openrtb/commits/268313b42f1829a1c0b6ae998b2de623bce50d3c/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "url": "https://api.github.com/repos/google/openrtb/commits/28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "html_url": "https://github.com/google/openrtb/commit/28de6b7186c74ce2065abd6bfb22912eb7a6ab81"}]}, {"sha": "28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:13:01Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:13:01Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "2acef364b58e4c341e434c25825adeb1a2a234a3", "url": "https://api.github.com/repos/google/openrtb/git/trees/2acef364b58e4c341e434c25825adeb1a2a234a3"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "html_url": "https://github.com/google/openrtb/commit/28de6b7186c74ce2065abd6bfb22912eb7a6ab81", "comments_url": "https://api.github.com/repos/google/openrtb/commits/28de6b7186c74ce2065abd6bfb22912eb7a6ab81/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbcaae73c6368906d9448c489575f736ddbb1fd2", "url": "https://api.github.com/repos/google/openrtb/commits/fbcaae73c6368906d9448c489575f736ddbb1fd2", "html_url": "https://github.com/google/openrtb/commit/fbcaae73c6368906d9448c489575f736ddbb1fd2"}]}, {"sha": "fbcaae73c6368906d9448c489575f736ddbb1fd2", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:13:01Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:13:01Z"}, "message": "[maven-release-plugin] prepare release 1.4.5", "tree": {"sha": "bb414ef991afbe5b4589270fb4f1c64729af521c", "url": "https://api.github.com/repos/google/openrtb/git/trees/bb414ef991afbe5b4589270fb4f1c64729af521c"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/fbcaae73c6368906d9448c489575f736ddbb1fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/fbcaae73c6368906d9448c489575f736ddbb1fd2", "html_url": "https://github.com/google/openrtb/commit/fbcaae73c6368906d9448c489575f736ddbb1fd2", "comments_url": "https://api.github.com/repos/google/openrtb/commits/fbcaae73c6368906d9448c489575f736ddbb1fd2/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "623c97a7895befe687bc5fb6ecc4135f481c70b2", "url": "https://api.github.com/repos/google/openrtb/commits/623c97a7895befe687bc5fb6ecc4135f481c70b2", "html_url": "https://github.com/google/openrtb/commit/623c97a7895befe687bc5fb6ecc4135f481c70b2"}]}, {"sha": "623c97a7895befe687bc5fb6ecc4135f481c70b2", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:11:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-07T14:11:01Z"}, "message": "Merge pull request #114 from opinali/master\n\nChanges for v1.4.5", "tree": {"sha": "8ea3d8867b72ce6d37bde1c71405d39d6ff56545", "url": "https://api.github.com/repos/google/openrtb/git/trees/8ea3d8867b72ce6d37bde1c71405d39d6ff56545"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/623c97a7895befe687bc5fb6ecc4135f481c70b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/623c97a7895befe687bc5fb6ecc4135f481c70b2", "html_url": "https://github.com/google/openrtb/commit/623c97a7895befe687bc5fb6ecc4135f481c70b2", "comments_url": "https://api.github.com/repos/google/openrtb/commits/623c97a7895befe687bc5fb6ecc4135f481c70b2/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1e78df563f5879b899f6dfe489144ef9a840d9", "url": "https://api.github.com/repos/google/openrtb/commits/2f1e78df563f5879b899f6dfe489144ef9a840d9", "html_url": "https://github.com/google/openrtb/commit/2f1e78df563f5879b899f6dfe489144ef9a840d9"}, {"sha": "aaf7d204e012b359147f15608d8aae4fb54305df", "url": "https://api.github.com/repos/google/openrtb/commits/aaf7d204e012b359147f15608d8aae4fb54305df", "html_url": "https://github.com/google/openrtb/commit/aaf7d204e012b359147f15608d8aae4fb54305df"}]}, {"sha": "aaf7d204e012b359147f15608d8aae4fb54305df", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:08:53Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T14:08:53Z"}, "message": "Fix POM", "tree": {"sha": "8ea3d8867b72ce6d37bde1c71405d39d6ff56545", "url": "https://api.github.com/repos/google/openrtb/git/trees/8ea3d8867b72ce6d37bde1c71405d39d6ff56545"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/aaf7d204e012b359147f15608d8aae4fb54305df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/aaf7d204e012b359147f15608d8aae4fb54305df", "html_url": "https://github.com/google/openrtb/commit/aaf7d204e012b359147f15608d8aae4fb54305df", "comments_url": "https://api.github.com/repos/google/openrtb/commits/aaf7d204e012b359147f15608d8aae4fb54305df/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00e94b232891b0880e5fac024f7fe537ae126912", "url": "https://api.github.com/repos/google/openrtb/commits/00e94b232891b0880e5fac024f7fe537ae126912", "html_url": "https://github.com/google/openrtb/commit/00e94b232891b0880e5fac024f7fe537ae126912"}]}, {"sha": "00e94b232891b0880e5fac024f7fe537ae126912", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T13:50:38Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-08-07T13:50:38Z"}, "message": "Dependency updates", "tree": {"sha": "41c4e1d504bb76f1cc0bf0ecd378a11bed8ab30b", "url": "https://api.github.com/repos/google/openrtb/git/trees/41c4e1d504bb76f1cc0bf0ecd378a11bed8ab30b"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/00e94b232891b0880e5fac024f7fe537ae126912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/00e94b232891b0880e5fac024f7fe537ae126912", "html_url": "https://github.com/google/openrtb/commit/00e94b232891b0880e5fac024f7fe537ae126912", "comments_url": "https://api.github.com/repos/google/openrtb/commits/00e94b232891b0880e5fac024f7fe537ae126912/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1e78df563f5879b899f6dfe489144ef9a840d9", "url": "https://api.github.com/repos/google/openrtb/commits/2f1e78df563f5879b899f6dfe489144ef9a840d9", "html_url": "https://github.com/google/openrtb/commit/2f1e78df563f5879b899f6dfe489144ef9a840d9"}]}, {"sha": "2f1e78df563f5879b899f6dfe489144ef9a840d9", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T19:16:50Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T19:16:50Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "b40d690bc8c352162b5474cfd2e14f2fe6ee4c8c", "url": "https://api.github.com/repos/google/openrtb/git/trees/b40d690bc8c352162b5474cfd2e14f2fe6ee4c8c"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/2f1e78df563f5879b899f6dfe489144ef9a840d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/2f1e78df563f5879b899f6dfe489144ef9a840d9", "html_url": "https://github.com/google/openrtb/commit/2f1e78df563f5879b899f6dfe489144ef9a840d9", "comments_url": "https://api.github.com/repos/google/openrtb/commits/2f1e78df563f5879b899f6dfe489144ef9a840d9/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d371fe69523cd85928172d120412e2c6d0ff22f6", "url": "https://api.github.com/repos/google/openrtb/commits/d371fe69523cd85928172d120412e2c6d0ff22f6", "html_url": "https://github.com/google/openrtb/commit/d371fe69523cd85928172d120412e2c6d0ff22f6"}]}, {"sha": "d371fe69523cd85928172d120412e2c6d0ff22f6", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T19:16:50Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T19:16:50Z"}, "message": "[maven-release-plugin] prepare release 1.4.3", "tree": {"sha": "eb5be372bcb7b1095d4f6487f6bfbc7fe46a734d", "url": "https://api.github.com/repos/google/openrtb/git/trees/eb5be372bcb7b1095d4f6487f6bfbc7fe46a734d"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/d371fe69523cd85928172d120412e2c6d0ff22f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/d371fe69523cd85928172d120412e2c6d0ff22f6", "html_url": "https://github.com/google/openrtb/commit/d371fe69523cd85928172d120412e2c6d0ff22f6", "comments_url": "https://api.github.com/repos/google/openrtb/commits/d371fe69523cd85928172d120412e2c6d0ff22f6/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09ef66ff68bc9ca4678bdb065af01d4777710a80", "url": "https://api.github.com/repos/google/openrtb/commits/09ef66ff68bc9ca4678bdb065af01d4777710a80", "html_url": "https://github.com/google/openrtb/commit/09ef66ff68bc9ca4678bdb065af01d4777710a80"}]}, {"sha": "09ef66ff68bc9ca4678bdb065af01d4777710a80", "commit": {"author": {"name": "Osvaldo Pinali Doederlein", "email": "opinali@google.com", "date": "2017-06-27T19:15:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-27T19:15:48Z"}, "message": "Merge pull request #112 from opinali/master\n\nFix extension reader filtering", "tree": {"sha": "a6c53032421dddc269856dc5c6f875594b3d2497", "url": "https://api.github.com/repos/google/openrtb/git/trees/a6c53032421dddc269856dc5c6f875594b3d2497"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/09ef66ff68bc9ca4678bdb065af01d4777710a80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/09ef66ff68bc9ca4678bdb065af01d4777710a80", "html_url": "https://github.com/google/openrtb/commit/09ef66ff68bc9ca4678bdb065af01d4777710a80", "comments_url": "https://api.github.com/repos/google/openrtb/commits/09ef66ff68bc9ca4678bdb065af01d4777710a80/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "url": "https://api.github.com/repos/google/openrtb/commits/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "html_url": "https://github.com/google/openrtb/commit/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496"}, {"sha": "32aa8a3418469d67cd0e73c17998748a98101494", "url": "https://api.github.com/repos/google/openrtb/commits/32aa8a3418469d67cd0e73c17998748a98101494", "html_url": "https://github.com/google/openrtb/commit/32aa8a3418469d67cd0e73c17998748a98101494"}]}, {"sha": "32aa8a3418469d67cd0e73c17998748a98101494", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T17:07:43Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T17:07:43Z"}, "message": "Fix extension reader filtering", "tree": {"sha": "a6c53032421dddc269856dc5c6f875594b3d2497", "url": "https://api.github.com/repos/google/openrtb/git/trees/a6c53032421dddc269856dc5c6f875594b3d2497"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/32aa8a3418469d67cd0e73c17998748a98101494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/32aa8a3418469d67cd0e73c17998748a98101494", "html_url": "https://github.com/google/openrtb/commit/32aa8a3418469d67cd0e73c17998748a98101494", "comments_url": "https://api.github.com/repos/google/openrtb/commits/32aa8a3418469d67cd0e73c17998748a98101494/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4298d00f4298dd8015afdd76cec97567c8d8c97a", "url": "https://api.github.com/repos/google/openrtb/commits/4298d00f4298dd8015afdd76cec97567c8d8c97a", "html_url": "https://github.com/google/openrtb/commit/4298d00f4298dd8015afdd76cec97567c8d8c97a"}]}, {"sha": "4298d00f4298dd8015afdd76cec97567c8d8c97a", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T15:39:09Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-06-27T15:39:09Z"}, "message": "Fix extension reader filtering", "tree": {"sha": "9b501e3293d548969da86feb68e82fa91bba75fa", "url": "https://api.github.com/repos/google/openrtb/git/trees/9b501e3293d548969da86feb68e82fa91bba75fa"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/4298d00f4298dd8015afdd76cec97567c8d8c97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/4298d00f4298dd8015afdd76cec97567c8d8c97a", "html_url": "https://github.com/google/openrtb/commit/4298d00f4298dd8015afdd76cec97567c8d8c97a", "comments_url": "https://api.github.com/repos/google/openrtb/commits/4298d00f4298dd8015afdd76cec97567c8d8c97a/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "url": "https://api.github.com/repos/google/openrtb/commits/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "html_url": "https://github.com/google/openrtb/commit/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496"}]}, {"sha": "17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "commit": {"author": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-05-23T20:51:04Z"}, "committer": {"name": "Osvaldo Doederlein", "email": "opinali@google.com", "date": "2017-05-23T20:51:04Z"}, "message": "[maven-release-plugin] prepare for next development iteration", "tree": {"sha": "bb56ceb105c30872a08215968afcac3230f90f0f", "url": "https://api.github.com/repos/google/openrtb/git/trees/bb56ceb105c30872a08215968afcac3230f90f0f"}, "url": "https://api.github.com/repos/google/openrtb/git/commits/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/openrtb/commits/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "html_url": "https://github.com/google/openrtb/commit/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496", "comments_url": "https://api.github.com/repos/google/openrtb/commits/17f2d28c7bd1ae5d0ebbf537b7dfabce5dc22496/comments", "author": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b17ac6878fd430d003b994ac7b1d1ff8effd6407", "url": "https://api.github.com/repos/google/openrtb/commits/b17ac6878fd430d003b994ac7b1d1ff8effd6407", "html_url": "https://github.com/google/openrtb/commit/b17ac6878fd430d003b994ac7b1d1ff8effd6407"}]}], "pull_requests": [{"url": "https://api.github.com/repos/google/openrtb/pulls/121", "id": 162423566, "html_url": "https://github.com/google/openrtb/pull/121", "diff_url": "https://github.com/google/openrtb/pull/121.diff", "patch_url": "https://github.com/google/openrtb/pull/121.patch", "issue_url": "https://api.github.com/repos/google/openrtb/issues/121", "number": 121, "state": "open", "locked": false, "title": "Adding support for enum extension values within range 500-999", "user": {"login": "sdorazio", "id": 4570951, "avatar_url": "https://avatars0.githubusercontent.com/u/4570951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdorazio", "html_url": "https://github.com/sdorazio", "followers_url": "https://api.github.com/users/sdorazio/followers", "following_url": "https://api.github.com/users/sdorazio/following{/other_user}", "gists_url": "https://api.github.com/users/sdorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdorazio/subscriptions", "organizations_url": "https://api.github.com/users/sdorazio/orgs", "repos_url": "https://api.github.com/users/sdorazio/repos", "events_url": "https://api.github.com/users/sdorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/sdorazio/received_events", "type": "User", "site_admin": false}, "body": "This pull request adds support for exchange-specific enum values (typically 500+), which should address issue #120. The meaning of each of these values will be dependent on the exchange.", "created_at": "2018-01-11T16:20:48Z", "updated_at": "2018-01-11T16:24:07Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "eaaf7e761d98d68e083f04ffd426bf035cea211d", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/google/openrtb/pulls/121/commits", "review_comments_url": "https://api.github.com/repos/google/openrtb/pulls/121/comments", "review_comment_url": "https://api.github.com/repos/google/openrtb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/openrtb/issues/121/comments", "statuses_url": "https://api.github.com/repos/google/openrtb/statuses/6fdbdc9a2beda0d59ff1eca12f7786593aeedd51", "head": {"label": "sdorazio:enum-extensions", "ref": "enum-extensions", "sha": "6fdbdc9a2beda0d59ff1eca12f7786593aeedd51", "user": {"login": "sdorazio", "id": 4570951, "avatar_url": "https://avatars0.githubusercontent.com/u/4570951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdorazio", "html_url": "https://github.com/sdorazio", "followers_url": "https://api.github.com/users/sdorazio/followers", "following_url": "https://api.github.com/users/sdorazio/following{/other_user}", "gists_url": "https://api.github.com/users/sdorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdorazio/subscriptions", "organizations_url": "https://api.github.com/users/sdorazio/orgs", "repos_url": "https://api.github.com/users/sdorazio/repos", "events_url": "https://api.github.com/users/sdorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/sdorazio/received_events", "type": "User", "site_admin": false}, "repo": {"id": 117121905, "name": "openrtb", "full_name": "sdorazio/openrtb", "owner": {"login": "sdorazio", "id": 4570951, "avatar_url": "https://avatars0.githubusercontent.com/u/4570951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdorazio", "html_url": "https://github.com/sdorazio", "followers_url": "https://api.github.com/users/sdorazio/followers", "following_url": "https://api.github.com/users/sdorazio/following{/other_user}", "gists_url": "https://api.github.com/users/sdorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdorazio/subscriptions", "organizations_url": "https://api.github.com/users/sdorazio/orgs", "repos_url": "https://api.github.com/users/sdorazio/repos", "events_url": "https://api.github.com/users/sdorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/sdorazio/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/sdorazio/openrtb", "description": "OpenRTB model for Java and other languages via protobuf; Helper OpenRTB libraries for Java including JSON serialization", "fork": true, "url": "https://api.github.com/repos/sdorazio/openrtb", "forks_url": "https://api.github.com/repos/sdorazio/openrtb/forks", "keys_url": "https://api.github.com/repos/sdorazio/openrtb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/sdorazio/openrtb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/sdorazio/openrtb/teams", "hooks_url": "https://api.github.com/repos/sdorazio/openrtb/hooks", "issue_events_url": "https://api.github.com/repos/sdorazio/openrtb/issues/events{/number}", "events_url": "https://api.github.com/repos/sdorazio/openrtb/events", "assignees_url": "https://api.github.com/repos/sdorazio/openrtb/assignees{/user}", "branches_url": "https://api.github.com/repos/sdorazio/openrtb/branches{/branch}", "tags_url": "https://api.github.com/repos/sdorazio/openrtb/tags", "blobs_url": "https://api.github.com/repos/sdorazio/openrtb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/sdorazio/openrtb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/sdorazio/openrtb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/sdorazio/openrtb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/sdorazio/openrtb/statuses/{sha}", "languages_url": "https://api.github.com/repos/sdorazio/openrtb/languages", "stargazers_url": "https://api.github.com/repos/sdorazio/openrtb/stargazers", "contributors_url": "https://api.github.com/repos/sdorazio/openrtb/contributors", "subscribers_url": "https://api.github.com/repos/sdorazio/openrtb/subscribers", "subscription_url": "https://api.github.com/repos/sdorazio/openrtb/subscription", "commits_url": "https://api.github.com/repos/sdorazio/openrtb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/sdorazio/openrtb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/sdorazio/openrtb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/sdorazio/openrtb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/sdorazio/openrtb/contents/{+path}", "compare_url": "https://api.github.com/repos/sdorazio/openrtb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/sdorazio/openrtb/merges", "archive_url": "https://api.github.com/repos/sdorazio/openrtb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/sdorazio/openrtb/downloads", "issues_url": "https://api.github.com/repos/sdorazio/openrtb/issues{/number}", "pulls_url": "https://api.github.com/repos/sdorazio/openrtb/pulls{/number}", "milestones_url": "https://api.github.com/repos/sdorazio/openrtb/milestones{/number}", "notifications_url": "https://api.github.com/repos/sdorazio/openrtb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/sdorazio/openrtb/labels{/name}", "releases_url": "https://api.github.com/repos/sdorazio/openrtb/releases{/id}", "deployments_url": "https://api.github.com/repos/sdorazio/openrtb/deployments", "created_at": "2018-01-11T16:09:23Z", "updated_at": "2018-01-11T16:09:26Z", "pushed_at": "2018-01-11T16:15:25Z", "git_url": "git://github.com/sdorazio/openrtb.git", "ssh_url": "git@github.com:sdorazio/openrtb.git", "clone_url": "https://github.com/sdorazio/openrtb.git", "svn_url": "https://github.com/sdorazio/openrtb", "homepage": "", "size": 1204, "stargazers_count": 0, "watchers_count": 0, "language": "Java", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "28cc0f5857de10e3b3a4bbc9e47be520eb731568", "user": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 21432552, "name": "openrtb", "full_name": "google/openrtb", "owner": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/google/openrtb", "description": "OpenRTB model for Java and other languages via protobuf; Helper OpenRTB libraries for Java including JSON serialization", "fork": false, "url": "https://api.github.com/repos/google/openrtb", "forks_url": "https://api.github.com/repos/google/openrtb/forks", "keys_url": "https://api.github.com/repos/google/openrtb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/openrtb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/openrtb/teams", "hooks_url": "https://api.github.com/repos/google/openrtb/hooks", "issue_events_url": "https://api.github.com/repos/google/openrtb/issues/events{/number}", "events_url": "https://api.github.com/repos/google/openrtb/events", "assignees_url": "https://api.github.com/repos/google/openrtb/assignees{/user}", "branches_url": "https://api.github.com/repos/google/openrtb/branches{/branch}", "tags_url": "https://api.github.com/repos/google/openrtb/tags", "blobs_url": "https://api.github.com/repos/google/openrtb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/openrtb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/openrtb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/openrtb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/openrtb/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/openrtb/languages", "stargazers_url": "https://api.github.com/repos/google/openrtb/stargazers", "contributors_url": "https://api.github.com/repos/google/openrtb/contributors", "subscribers_url": "https://api.github.com/repos/google/openrtb/subscribers", "subscription_url": "https://api.github.com/repos/google/openrtb/subscription", "commits_url": "https://api.github.com/repos/google/openrtb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/openrtb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/openrtb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/openrtb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/openrtb/contents/{+path}", "compare_url": "https://api.github.com/repos/google/openrtb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/openrtb/merges", "archive_url": "https://api.github.com/repos/google/openrtb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/openrtb/downloads", "issues_url": "https://api.github.com/repos/google/openrtb/issues{/number}", "pulls_url": "https://api.github.com/repos/google/openrtb/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/openrtb/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/openrtb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/openrtb/labels{/name}", "releases_url": "https://api.github.com/repos/google/openrtb/releases{/id}", "deployments_url": "https://api.github.com/repos/google/openrtb/deployments", "created_at": "2014-07-02T17:05:55Z", "updated_at": "2018-01-17T02:19:27Z", "pushed_at": "2018-01-11T16:20:49Z", "git_url": "git://github.com/google/openrtb.git", "ssh_url": "git@github.com:google/openrtb.git", "clone_url": "https://github.com/google/openrtb.git", "svn_url": "https://github.com/google/openrtb", "homepage": "", "size": 1162, "stargazers_count": 266, "watchers_count": 266, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 118, "mirror_url": null, "archived": false, "open_issues_count": 5, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0"}, "forks": 118, "open_issues": 5, "watchers": 266, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/121"}, "html": {"href": "https://github.com/google/openrtb/pull/121"}, "issue": {"href": "https://api.github.com/repos/google/openrtb/issues/121"}, "comments": {"href": "https://api.github.com/repos/google/openrtb/issues/121/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/openrtb/pulls/121/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/openrtb/pulls/121/commits"}, "statuses": {"href": "https://api.github.com/repos/google/openrtb/statuses/6fdbdc9a2beda0d59ff1eca12f7786593aeedd51"}}, "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/google/openrtb/issues/comments/62891837", "html_url": "https://github.com/google/openrtb/issues/8#issuecomment-62891837", "issue_url": "https://api.github.com/repos/google/openrtb/issues/8", "id": 62891837, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T13:45:58Z", "updated_at": "2014-11-13T13:45:58Z", "author_association": "CONTRIBUTOR", "body": "Oops, good catch-fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/62891837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65879611", "html_url": "https://github.com/google/openrtb/issues/10#issuecomment-65879611", "issue_url": "https://api.github.com/repos/google/openrtb/issues/10", "id": 65879611, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T01:28:40Z", "updated_at": "2014-12-06T01:28:40Z", "author_association": "CONTRIBUTOR", "body": "I guess you're using this non-conforming JSON because some exchange uses that? There are some OpenRTB fields that were poorly specified and later changed/clarified, but I don't remember that Site.cat or Publisher.cat were among those.\n\nAnyway, I never worried to support uncompliant JSON and I'd expect a case like this to result in some error; but an infinite loop is not an acceptable failure mode. Let me try improve this.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65879611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65907427", "html_url": "https://github.com/google/openrtb/issues/10#issuecomment-65907427", "issue_url": "https://api.github.com/repos/google/openrtb/issues/10", "id": 65907427, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T18:01:01Z", "updated_at": "2014-12-06T18:01:01Z", "author_association": "CONTRIBUTOR", "body": "I see you've got this sample JSON from a SpotXchange sample, I wonder if it's an obsolete or incorrect sample? Even if not, worst-case it's easy to modify the JSON serializer to handle the `cat` fields as scalar (I guess with CSV internally to allow multiple elements).\n\nDoing that without a fork is not very clean, e.g. you can extend `OpenRtbJsonReader` and override `readSite()`, but then you have to copy that entire method to only change the parsing code for one field. Same for the writer. I could refactor these methods in two pieces, allowing to override only a `readSiteFields()` method where you'd only handle one field and super-call for others. Will consider this as a future improvement.\n\nAlternatively, I could make the serializer \"smarter\", allowing a single value without `[]` in lieu of an array, but this is only trivial to implement for arrays of scalar values. If the array may contain objects, it's more complicated. On top of that I don't think it's a good idea to support what is effectively an uncompliant extension of OpenRTB... unless this kind of extension turns out to be common so people need to customize the serializer for multiple exchanges.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65907427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65911633", "html_url": "https://github.com/google/openrtb/issues/10#issuecomment-65911633", "issue_url": "https://api.github.com/repos/google/openrtb/issues/10", "id": 65911633, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T20:04:27Z", "updated_at": "2014-12-06T20:04:27Z", "author_association": "CONTRIBUTOR", "body": "Fixed in commit 380f29b7fec31391d725fa2aaa463372e62e5eb8\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/65911633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66139360", "html_url": "https://github.com/google/openrtb/issues/13#issuecomment-66139360", "issue_url": "https://api.github.com/repos/google/openrtb/issues/13", "id": 66139360, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T16:15:02Z", "updated_at": "2014-12-08T16:15:02Z", "author_association": "CONTRIBUTOR", "body": "Hum, that's painful... I was hoping that nobody would actually have messages with null values, even if they are valid in JSON (OpenRTB implementations are supposed to avoid redundancies like 'keywords: null' because it's good to make messages shorter)... it seems that was too optimistic.\n\nI think the only good solution here will be to change the reader so it detects `VALUE_NULL` tokens and skips them (option 2). Investigating this now.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66139360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66152037", "html_url": "https://github.com/google/openrtb/issues/13#issuecomment-66152037", "issue_url": "https://api.github.com/repos/google/openrtb/issues/13", "id": 66152037, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T17:29:17Z", "updated_at": "2014-12-08T17:29:17Z", "author_association": "CONTRIBUTOR", "body": "Ok, I have implemented support for nulls, and also used the opportunity to make another pending refactoring that will make easier for people to customize the serialization of individual fields if necessary (see Issue 10). Can you check this at the fork https://github.com/opinali/openrtb, if it works for you I'll merge that here.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66152037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66154161", "html_url": "https://github.com/google/openrtb/issues/13#issuecomment-66154161", "issue_url": "https://api.github.com/repos/google/openrtb/issues/13", "id": 66154161, "user": {"login": "matzi11a", "id": 1352565, "avatar_url": "https://avatars0.githubusercontent.com/u/1352565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matzi11a", "html_url": "https://github.com/matzi11a", "followers_url": "https://api.github.com/users/matzi11a/followers", "following_url": "https://api.github.com/users/matzi11a/following{/other_user}", "gists_url": "https://api.github.com/users/matzi11a/gists{/gist_id}", "starred_url": "https://api.github.com/users/matzi11a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matzi11a/subscriptions", "organizations_url": "https://api.github.com/users/matzi11a/orgs", "repos_url": "https://api.github.com/users/matzi11a/repos", "events_url": "https://api.github.com/users/matzi11a/events{/privacy}", "received_events_url": "https://api.github.com/users/matzi11a/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T17:42:36Z", "updated_at": "2014-12-08T17:42:36Z", "author_association": "CONTRIBUTOR", "body": "that has resolved the issue. thanks :+1: \n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66154161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66154700", "html_url": "https://github.com/google/openrtb/issues/13#issuecomment-66154700", "issue_url": "https://api.github.com/repos/google/openrtb/issues/13", "id": 66154700, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T17:45:51Z", "updated_at": "2014-12-08T17:45:51Z", "author_association": "CONTRIBUTOR", "body": "Good, merged as commit d3204c81819faebad704531b2fff97a5c2a86fb1.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/66154700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71342132", "html_url": "https://github.com/google/openrtb/pull/16#issuecomment-71342132", "issue_url": "https://api.github.com/repos/google/openrtb/issues/16", "id": 71342132, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T23:06:13Z", "updated_at": "2015-01-25T15:10:21Z", "author_association": "CONTRIBUTOR", "body": "@metaquanta thanks for the patch! I just wish we had discussed this before writing the code. The problem is that storing values as decimals is not really helpful unless values are manipulated as decimals everywhere in the application that uses the library; using decimals only for storage or in parse/format operations makes no difference if apps still have to call getters/setters that only use doubles. And of course we can't have a `BigDecimal` in the API because protobuf doesn't support any type that maps to `BigDecimal` or equivalent language-specific decimal types.\n\nI considered using a `string` field for these values, but that would result in a really inconvenient API, forcing every get/set call to perform a conversion. And this still wouldn't provide any advantage over doubles: today you can just write code like `BigDecimal bidfloor = new BigDecimal(imp.getBidfloor)`. The double field is precise enough to represent any price; it supports 15-17 significant decimal digits of mantissa, and more critically, for any numbers up to 15 digits roundtrip conversions between a string (or precise decimal type) and a double are guaranteed to always be exact. This means `double` is perfectly safe for storage and parsing/formatting of any normal value used in OpenRTB.\n\nThe above is for background; now specifically on your patch: you're changing the model's field types to `int64` (= Java's `long`), and changing their scale to micros (just like DoubleClick's native protocol). This is another way to solve the problem, but then it forces apps to always manipulate prices in micros instead of \"currency units\" (USD or whatever used by the request). Unfortunately this is even more inconvenient for users of the API; as an end-user myself, if I care about precise decimal arithmetics I'd rather make some explicit `double`/`BigDecimal` conversions than work with micros all the time.\n\nTechnically, OpenRTB defines only a wire protocol and we have some flexibility for API/language-binding design, see for example how this library uses booleans instead of 0/1 integers for flags; or how I have introduced an extended `admNative` field [native is still WIP]. But these are changes that make the API significantly more type-safe and easy to use. The `admNative` will also result in significant performance gain. Changing the price to micros is a step backward in usability. (Also an important breaking change, one I'd rather avoid at this time, this code already has significant usage...) Even the potential advantage of precision is highly questionable, because `double` is not only good enough for storage and conversions, it's good enough even for arithmetics, since the values we manipulate here leave lots of mantissa bits unused \u2013 you'd need a crapton of error propagation before you get a significant error (I doubt any SSP or other platform will consider digits below 1^-6). This is remarkably true for monetary values, which are typically only manipulated by simple operations like sums or multiplies, which have maximum precision (<= 1ulp) in any language or platform; few if any people should calculate bid prices with complex formulas full of transcendental operations that sometimes have several bits of error in some \"hard\" value ranges. And if anyone is doing that, they certainly can't use `long`: even `BigDecimal` would be a huge ordeal because in most mainstream languages \u2013 anything other than specialized stuff like Mathematica \u2013 the math libraries cannot perform any decent math with decimal types; anything as sophisticated as a square root forces you to step down to floating point anyway.\n\nHaving said all that, my only concern with the current, simple usage of `double` is in the serialization; for example it would be ugly (although not a real problem) if the library emits JSON like `price: \"1.2000000000000000000003\"` due to accumulation of errors in the last few bits. Ideally, (1) the code for deserialization should ignore anything after some specific limit like the sixth digit after the decimal point, (2) the code for serialization should make sure to only emit digits up to the same limit. I think Java's default behavior in `double`/`String` conversions will take care of (2) but I'm not sure at which digit, and it won't take care of (1) at all. We could use `BigDecimal` to solve these problems, but I think just the `DecimalFormat` API should be good enough for that and way more efficient.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71342132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71342829", "html_url": "https://github.com/google/openrtb/pull/16#issuecomment-71342829", "issue_url": "https://api.github.com/repos/google/openrtb/issues/16", "id": 71342829, "user": {"login": "metaquanta", "id": 333044, "avatar_url": "https://avatars0.githubusercontent.com/u/333044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metaquanta", "html_url": "https://github.com/metaquanta", "followers_url": "https://api.github.com/users/metaquanta/followers", "following_url": "https://api.github.com/users/metaquanta/following{/other_user}", "gists_url": "https://api.github.com/users/metaquanta/gists{/gist_id}", "starred_url": "https://api.github.com/users/metaquanta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaquanta/subscriptions", "organizations_url": "https://api.github.com/users/metaquanta/orgs", "repos_url": "https://api.github.com/users/metaquanta/repos", "events_url": "https://api.github.com/users/metaquanta/events{/privacy}", "received_events_url": "https://api.github.com/users/metaquanta/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T23:30:03Z", "updated_at": "2015-01-24T23:30:03Z", "author_association": "NONE", "body": "My limited time investment was absolutely worth getting to read such a\nthorough justification for the existing implementation. Thanks a lot for\nthe response. I'm glad to see the degree to which you've considered the\nproblem.\n\nI am a user and we handle everything as micros. I find the necessary\nconversions objectionable and now you've convinced me it is only an\naesthetic objection.\n\nI share your concern regarding (de)serialization. However, in practice I\nfeel that's also unlikely to result in any real unwanted behavior outside\nof a human eavesdropper scratching their head.\n\nThanks a lot for the response!\nMatt\nOn Jan 24, 2015 6:06 PM, \"Osvaldo Pinali Doederlein\" <\nnotifications@github.com> wrote:\n\n> @metaquanta https://github.com/metaquanta thanks for the patch! I just\n> wish we had discussed this before writing the code. The problem is that\n> storing values as decimals is not really helpful unless values are\n> manipulated as decimals everywhere in the application that uses the\n> library; using decimals only for storage or in parse/format operations\n> makes no difference if apps still have to call getters/setters that only\n> use doubles. And of course we can't have a BigDecimal in the API because\n> protobuf doesn't support any type that maps to BigDecimal or equivalent\n> language-specific decimal types.\n> \n> I considered using a string field for these values, but that would result\n> in a really inconvenient API, forcing every get/set call to perform a\n> conversion. And this still wouldn't provide any advantage over doubles:\n> today you can just write code like BigDecimal bidfloor = new\n> BigDecimal(imp.getBidfloor). The double field is precise enough to\n> represent any price; it supports 15-17 significant decimal digits of\n> mantissa, and more critically, for any numbers up to 15 digits roundtrip\n> conversions between a string (or precise decimal type) and a double are\n> guaranteed to always be exact. This means double is perfectly safe for\n> storage and parsing/formatting of any normal value used in OpenRTB.\n> \n> The above is for background; now specifically on your patch: you're\n> changing the model's field types to int64 (= Java's long), and changing\n> their scale to micros (just like DoubleClick's native protocol). This is\n> another way to solve the problem, but then it forces apps to always\n> manipulate prices in micros instead of \"currency units\" (USD or whatever\n> used by the request). Unfortunately this is even more inconvenient for\n> users of the API; as an end-user myself, if I care about precise decimal\n> arithmetics I'd rather make some explicit double/BigDecimal conversions\n> than work with micros all the time.\n> \n> Technically, OpenRTB defines only a wire protocol and we have some\n> flexibility for API/language-binding design, see for example how this\n> library uses booleans instead of 0/1 integers for flags; or how I have\n> introduced an extended admNative field [native is still WIP]. But these\n> are changes that make the API significantly more type-safe and easy to use.\n> The admNative will also result in significant performance gain. Changing\n> the price to micros is a step backward in usability. (Also an important\n> breaking change, one I'd rather avoid at this time, this code already has\n> significant usage...) Even the potential advantage of precision is highly\n> questionable, because double is not only good enough for storage and\n> conversions, it's good enough even for arithmetics, since the values we\n> manipulate here leave lots of mantissa bits unused \u2013 you'd need a crapton\n> of error propagation before you get a significant error (I doubt any SSP or\n> other platform will consider digits below 1^-6). This is remarkably true\n> for monetary values, which are typically only manipulated by simple\n> operations like sums or multiplies, which have maximum precision (<= 1ulp)\n> in any language or platform; few if any people should calculate bid prices\n> with complex formulas full of transcendental operations that sometimes have\n> several bits of error in some \"hard\" value ranges. And if anyone is doing\n> that, they certainly can't use long: even BigDecimal would be a huge\n> ordeal because in most mainstream languages \u2013 anything other than\n> specialized stuff like Mathematica \u2013 the math libraries cannot perform any\n> decent math with decimal types; anything as sophisticated as a square root\n> forces you to step down to floating point anyway.\n> \n> Having said all that, my only concern with the current, simple usage of\n> double is in the serialization; for example it would be ugly (although\n> not a real problem) if the library emits JSON like price:\n> \"1.2000000000000000000003\" due to accumulation of errors in the last few\n> bits. Ideally, (1) the code for deserialization should ignore anything\n> after some specific limit like the sixth digit after the decimal point, (2)\n> the code for serialization should make sure to only emit digits up to the\n> same limit. I think Java's default behavior in double/String conversions\n> will take care of (2) but I'm not sure at which digit, and it won't take\n> care of (1) at all. We could use BigDecimal to solve these problems, but\n> I think just the DecimalFormat API should be good enough for that and way\n> more efficient.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/openrtb/pull/16#issuecomment-71342132.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71342829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71376401", "html_url": "https://github.com/google/openrtb/pull/16#issuecomment-71376401", "issue_url": "https://api.github.com/repos/google/openrtb/issues/16", "id": 71376401, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-25T15:04:53Z", "updated_at": "2015-01-25T15:04:53Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the understanding! I'm closing the request then, but keeping this in mind. Just curious if your current habit of using micros for everything comes from working with the DoubleClick protocol?\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71376401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71564438", "html_url": "https://github.com/google/openrtb/pull/16#issuecomment-71564438", "issue_url": "https://api.github.com/repos/google/openrtb/issues/16", "id": 71564438, "user": {"login": "metaquanta", "id": 333044, "avatar_url": "https://avatars0.githubusercontent.com/u/333044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metaquanta", "html_url": "https://github.com/metaquanta", "followers_url": "https://api.github.com/users/metaquanta/followers", "following_url": "https://api.github.com/users/metaquanta/following{/other_user}", "gists_url": "https://api.github.com/users/metaquanta/gists{/gist_id}", "starred_url": "https://api.github.com/users/metaquanta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaquanta/subscriptions", "organizations_url": "https://api.github.com/users/metaquanta/orgs", "repos_url": "https://api.github.com/users/metaquanta/repos", "events_url": "https://api.github.com/users/metaquanta/events{/privacy}", "received_events_url": "https://api.github.com/users/metaquanta/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T23:58:25Z", "updated_at": "2015-01-26T23:58:25Z", "author_association": "NONE", "body": "I have not used the DoubleClick protocol, but it's probably somewhere in\nthe heritage of code I've worked on.\n\nOn Sun, Jan 25, 2015 at 10:04 AM, Osvaldo Pinali Doederlein <\nnotifications@github.com> wrote:\n\n> Thanks for the understanding! I'm closing the request then, but keeping\n> this in mind. Just curious if your current habit of using micros for\n> everything comes from working with the DoubleClick protocol?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/openrtb/pull/16#issuecomment-71376401.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/71564438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/72093952", "html_url": "https://github.com/google/openrtb/pull/17#issuecomment-72093952", "issue_url": "https://api.github.com/repos/google/openrtb/issues/17", "id": 72093952, "user": {"login": "matzi11a", "id": 1352565, "avatar_url": "https://avatars0.githubusercontent.com/u/1352565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matzi11a", "html_url": "https://github.com/matzi11a", "followers_url": "https://api.github.com/users/matzi11a/followers", "following_url": "https://api.github.com/users/matzi11a/following{/other_user}", "gists_url": "https://api.github.com/users/matzi11a/gists{/gist_id}", "starred_url": "https://api.github.com/users/matzi11a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matzi11a/subscriptions", "organizations_url": "https://api.github.com/users/matzi11a/orgs", "repos_url": "https://api.github.com/users/matzi11a/repos", "events_url": "https://api.github.com/users/matzi11a/events{/privacy}", "received_events_url": "https://api.github.com/users/matzi11a/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-29T20:03:01Z", "updated_at": "2015-01-29T20:03:01Z", "author_association": "CONTRIBUTOR", "body": "Much better thanks for the feedback\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/72093952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/73562539", "html_url": "https://github.com/google/openrtb/pull/18#issuecomment-73562539", "issue_url": "https://api.github.com/repos/google/openrtb/issues/18", "id": 73562539, "user": {"login": "ceocoder", "id": 228245, "avatar_url": "https://avatars2.githubusercontent.com/u/228245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceocoder", "html_url": "https://github.com/ceocoder", "followers_url": "https://api.github.com/users/ceocoder/followers", "following_url": "https://api.github.com/users/ceocoder/following{/other_user}", "gists_url": "https://api.github.com/users/ceocoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceocoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceocoder/subscriptions", "organizations_url": "https://api.github.com/users/ceocoder/orgs", "repos_url": "https://api.github.com/users/ceocoder/repos", "events_url": "https://api.github.com/users/ceocoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ceocoder/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T18:32:09Z", "updated_at": "2015-02-09T18:32:09Z", "author_association": "CONTRIBUTOR", "body": "@opinali fixed. named the method `readStringOrArray`\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/73562539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/73566329", "html_url": "https://github.com/google/openrtb/pull/18#issuecomment-73566329", "issue_url": "https://api.github.com/repos/google/openrtb/issues/18", "id": 73566329, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T18:52:35Z", "updated_at": "2015-02-09T18:52:35Z", "author_association": "CONTRIBUTOR", "body": "Thanks! Merged.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/73566329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/88657195", "html_url": "https://github.com/google/openrtb/issues/21#issuecomment-88657195", "issue_url": "https://api.github.com/repos/google/openrtb/issues/21", "id": 88657195, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-01T22:57:25Z", "updated_at": "2015-04-01T22:57:25Z", "author_association": "CONTRIBUTOR", "body": "Preliminary support implemented as planned in the 0.8.0 betas. Reopen this or file new bug for tracking future changes for proto3 syntax.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/88657195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/94542536", "html_url": "https://github.com/google/openrtb/issues/28#issuecomment-94542536", "issue_url": "https://api.github.com/repos/google/openrtb/issues/28", "id": 94542536, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-20T19:04:54Z", "updated_at": "2015-04-20T19:04:54Z", "author_association": "CONTRIBUTOR", "body": "This documentation is not in sync anymore with the code if you get the latest code from master; but it should be right for the last release (0.8.0-beta4). The JSON extension API is changing indeed, when the next release is out (which will be soon and hopefully the final 0.8.0) the docs will be updated to match it; but let's keep this bug open as a reminder :)\n\nP.S.: You are right that this part of the API is difficult; one of the motivations for the changes I'm making now is to make it simpler and more type-safe.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/94542536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/94586837", "html_url": "https://github.com/google/openrtb/issues/28#issuecomment-94586837", "issue_url": "https://api.github.com/repos/google/openrtb/issues/28", "id": 94586837, "user": {"login": "samklr", "id": 1344035, "avatar_url": "https://avatars0.githubusercontent.com/u/1344035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samklr", "html_url": "https://github.com/samklr", "followers_url": "https://api.github.com/users/samklr/followers", "following_url": "https://api.github.com/users/samklr/following{/other_user}", "gists_url": "https://api.github.com/users/samklr/gists{/gist_id}", "starred_url": "https://api.github.com/users/samklr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samklr/subscriptions", "organizations_url": "https://api.github.com/users/samklr/orgs", "repos_url": "https://api.github.com/users/samklr/repos", "events_url": "https://api.github.com/users/samklr/events{/privacy}", "received_events_url": "https://api.github.com/users/samklr/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-20T22:52:16Z", "updated_at": "2015-04-20T22:52:16Z", "author_association": "NONE", "body": "Yes after reverting to an old version,I figured that out indeed. I'll try with the master ... \nThanks.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/94586837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96451520", "html_url": "https://github.com/google/openrtb/issues/28#issuecomment-96451520", "issue_url": "https://api.github.com/repos/google/openrtb/issues/28", "id": 96451520, "user": {"login": "samklr", "id": 1344035, "avatar_url": "https://avatars0.githubusercontent.com/u/1344035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samklr", "html_url": "https://github.com/samklr", "followers_url": "https://api.github.com/users/samklr/followers", "following_url": "https://api.github.com/users/samklr/following{/other_user}", "gists_url": "https://api.github.com/users/samklr/gists{/gist_id}", "starred_url": "https://api.github.com/users/samklr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samklr/subscriptions", "organizations_url": "https://api.github.com/users/samklr/orgs", "repos_url": "https://api.github.com/users/samklr/repos", "events_url": "https://api.github.com/users/samklr/events{/privacy}", "received_events_url": "https://api.github.com/users/samklr/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T00:25:44Z", "updated_at": "2015-04-27T00:25:44Z", "author_association": "NONE", "body": "Hi Osvaldo.\nI have been trying to use the code  on  master, since it's the only one with clear tests for handling protobuf extensions, but I can't seem to find the 0.8.1-SNAPSHOTS on maven central. Are they published somewhere?\nAlso it would be nice for further improvement,,if you could provide an example like in the Tests,based for example on your wiki, with the \"SpaceAds\" example. \n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96451520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96506763", "html_url": "https://github.com/google/openrtb/issues/28#issuecomment-96506763", "issue_url": "https://api.github.com/repos/google/openrtb/issues/28", "id": 96506763, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T05:06:07Z", "updated_at": "2015-04-27T05:06:07Z", "author_association": "CONTRIBUTOR", "body": "Hi Sam,\n\nThe latest changes have been finally released with the final 0.8.0, please\nuse that instead of master, as of today there are no additional changes in\nmaster and hopefully this will keep true for some time (and the next 0.8.x\nversions will be backwards-compatible, focused on fixes or minor stuff,\netc.).  Can't release snapshot jars to maven-central even if I wanted :) so\nif you need snapshots you always have to pull the sources and 'mvn install'.\n\nSample code are still a weak part of the project; it does't include proper\nsamples, OTOH it does have very high unit test coverage and you should find\ntest code that can sort of double as sample code for everything. For\nextensions, look here\nhttps://github.com/google/openrtb/tree/master/openrtb-core/src/test/protobuf\nand here\nhttps://github.com/google/openrtb/tree/master/openrtb-core/src/test/java/com/google/openrtb/json.\nBut it's another good point that the wiki uses an example that doesn't\nmatch any code in the project, ideally the docs should use code from some\nsample or even test code, adding that to my todo list.\n\nOn Sun, Apr 26, 2015 at 8:25 PM, Sam Bessalah notifications@github.com\nwrote:\n\n> Hi Osvaldo.\n> I have been trying to use the code on master, since it's the only one with\n> clear tests for handling protobuf extensions, but I can't seem to find the\n> 0.8.1-SNAPSHOTS on maven central. Are they published somewhere?\n> Also it would be nice for further improvement,,if you could provide an\n> example like in the Tests,based for example on your wiki, with the\n> \"SpaceAds\" example.\n> \n> Thanks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/openrtb/issues/28#issuecomment-96451520.\n\n## \n\nOsvaldo Doederlein | Software Engineer, Doubleclick Ad Exchange |\nopinali@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96506763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96621475", "html_url": "https://github.com/google/openrtb/issues/28#issuecomment-96621475", "issue_url": "https://api.github.com/repos/google/openrtb/issues/28", "id": 96621475, "user": {"login": "samklr", "id": 1344035, "avatar_url": "https://avatars0.githubusercontent.com/u/1344035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samklr", "html_url": "https://github.com/samklr", "followers_url": "https://api.github.com/users/samklr/followers", "following_url": "https://api.github.com/users/samklr/following{/other_user}", "gists_url": "https://api.github.com/users/samklr/gists{/gist_id}", "starred_url": "https://api.github.com/users/samklr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samklr/subscriptions", "organizations_url": "https://api.github.com/users/samklr/orgs", "repos_url": "https://api.github.com/users/samklr/repos", "events_url": "https://api.github.com/users/samklr/events{/privacy}", "received_events_url": "https://api.github.com/users/samklr/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T11:58:54Z", "updated_at": "2015-04-27T11:58:54Z", "author_association": "NONE", "body": "Thanks Osvaldo.\nI'll do just that. I'll keep you updated.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/96621475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/97270271", "html_url": "https://github.com/google/openrtb/issues/30#issuecomment-97270271", "issue_url": "https://api.github.com/repos/google/openrtb/issues/30", "id": 97270271, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T00:15:27Z", "updated_at": "2015-04-29T00:15:27Z", "author_association": "CONTRIBUTOR", "body": "That's a good idea; the spec uses ints or strings everywhere for these things but we can always use a higher-level type like enum in the model and then translate in the JSON serializer. It seems the ContentCategory fields are the only ones that missed this improvement, will fix this next release.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/97270271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/97499331", "html_url": "https://github.com/google/openrtb/issues/30#issuecomment-97499331", "issue_url": "https://api.github.com/repos/google/openrtb/issues/30", "id": 97499331, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T16:45:37Z", "updated_at": "2015-04-29T16:45:37Z", "author_association": "CONTRIBUTOR", "body": "Fix will be in 0.8.1 soon.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/97499331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102216347", "html_url": "https://github.com/google/openrtb/issues/32#issuecomment-102216347", "issue_url": "https://api.github.com/repos/google/openrtb/issues/32", "id": 102216347, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-15T01:21:23Z", "updated_at": "2015-05-15T01:21:23Z", "author_association": "CONTRIBUTOR", "body": "There is no way to do that right now, but this is an improvement that was already being considered - not just ignoring unknown extensions, but ignoring any unknown field. We'll try to get this into the next update.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102216347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102275507", "html_url": "https://github.com/google/openrtb/issues/32#issuecomment-102275507", "issue_url": "https://api.github.com/repos/google/openrtb/issues/32", "id": 102275507, "user": {"login": "dhamilton-nanigans", "id": 12238811, "avatar_url": "https://avatars1.githubusercontent.com/u/12238811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhamilton-nanigans", "html_url": "https://github.com/dhamilton-nanigans", "followers_url": "https://api.github.com/users/dhamilton-nanigans/followers", "following_url": "https://api.github.com/users/dhamilton-nanigans/following{/other_user}", "gists_url": "https://api.github.com/users/dhamilton-nanigans/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhamilton-nanigans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhamilton-nanigans/subscriptions", "organizations_url": "https://api.github.com/users/dhamilton-nanigans/orgs", "repos_url": "https://api.github.com/users/dhamilton-nanigans/repos", "events_url": "https://api.github.com/users/dhamilton-nanigans/events{/privacy}", "received_events_url": "https://api.github.com/users/dhamilton-nanigans/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-15T06:10:37Z", "updated_at": "2015-05-15T06:10:37Z", "author_association": "NONE", "body": "Thanks for getting back to me, that's good to hear. I have one follow up question. I am working on using your library to support MoPub's OpenRTB protocol. Extending the protobuf objects and implementing JSON serializers for the extensions has been a pretty smooth process. However, MoPub defines a non-standard \"crtype\" field that is not in their bid response that is not mapped to the \"ext\" field. I am able to serialize and deserialize a bid response with this field without any failures (not sure if that's expected or not), however I can't find a way to register a JSON reader/writer to handle a field like this. Is there a way to do this?\n\nHere's a link to the MoPub spec for reference, note the \"crtype\" field highlighted in blue under section 3: https://dl.dropboxusercontent.com/u/10601557/RTB2.1spec.html\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102275507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102819652", "html_url": "https://github.com/google/openrtb/issues/32#issuecomment-102819652", "issue_url": "https://api.github.com/repos/google/openrtb/issues/32", "id": 102819652, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-17T16:13:45Z", "updated_at": "2015-05-17T16:13:45Z", "author_association": "CONTRIBUTOR", "body": "Adding support for non-standard fields is possible, just not very clean... you can fork the library and adding that field to the proto. Then it should also be easy to patch the JSON read/writer classes with support for this field. The problem then is continued merging to upstream, since we can't accept a change that adds uncompliant exchange-specific fields to the main library (even if it's tempting because we have the exact same problem internally at Google for interop with MoPub's protocol, and we do the same thing, adding the crtype field...). But it's not a lot of work either since the model and the JSON libs are pretty stable.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102819652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102838233", "html_url": "https://github.com/google/openrtb/issues/32#issuecomment-102838233", "issue_url": "https://api.github.com/repos/google/openrtb/issues/32", "id": 102838233, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-17T19:28:13Z", "updated_at": "2015-05-17T19:28:13Z", "author_association": "CONTRIBUTOR", "body": "Final status on this: the next release will have a small fix in the classes `OpenRtb*JsonWriter` so you can write subclasses that extend field writing for regular fields. (This was already possible for `OpenRtb*JsonReader`.) This will make a new solution possible: keep the standard proto unchanged (no `crtype` field there), but create an extension for that, and subclass the writer class so it maps regular fields in the JSON into/from proper extension fields in the protobuf-based model. You may still consider the forking option simpler, but it will be nicer to have this alternative.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/102838233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104186574", "html_url": "https://github.com/google/openrtb/issues/34#issuecomment-104186574", "issue_url": "https://api.github.com/repos/google/openrtb/issues/34", "id": 104186574, "user": {"login": "pawel-kowalski", "id": 11786016, "avatar_url": "https://avatars0.githubusercontent.com/u/11786016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawel-kowalski", "html_url": "https://github.com/pawel-kowalski", "followers_url": "https://api.github.com/users/pawel-kowalski/followers", "following_url": "https://api.github.com/users/pawel-kowalski/following{/other_user}", "gists_url": "https://api.github.com/users/pawel-kowalski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawel-kowalski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawel-kowalski/subscriptions", "organizations_url": "https://api.github.com/users/pawel-kowalski/orgs", "repos_url": "https://api.github.com/users/pawel-kowalski/repos", "events_url": "https://api.github.com/users/pawel-kowalski/events{/privacy}", "received_events_url": "https://api.github.com/users/pawel-kowalski/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-21T08:57:47Z", "updated_at": "2015-05-21T08:57:47Z", "author_association": "NONE", "body": "Additionally I noticed when I registered at least one extension Reader (even dummy - that reads nothing) it avoided loop, however in this particular case it fails with exception:\n\n``` java\ncom.google.protobuf.UninitializedMessageException: Message missing required fields: id\n    at com.google.protobuf.AbstractMessage$Builder.newUninitializedMessageException(AbstractMessage.java:372)\n    at com.google.openrtb.OpenRtb$BidRequest$Builder.build(OpenRtb.java:50992)\n    at com.google.openrtb.json.OpenRtbJsonReader.readBidRequest(OpenRtbJsonReader.java:119)\n```\n\ndue to the last \"udi\" extensions which is nested and nothig after extension part is read by parser.\nIn case when there are only scalar extensions it works fine. Try with the same case mentioned previously but without \"udi\"\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104186574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104267860", "html_url": "https://github.com/google/openrtb/issues/34#issuecomment-104267860", "issue_url": "https://api.github.com/repos/google/openrtb/issues/34", "id": 104267860, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-21T13:04:06Z", "updated_at": "2015-05-21T13:04:06Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the report, this definitely looks like a bug -- apparently the new unit tests that cover this stuff weren't good enough :( gonna fix this asap.\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104267860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104298963", "html_url": "https://github.com/google/openrtb/issues/34#issuecomment-104298963", "issue_url": "https://api.github.com/repos/google/openrtb/issues/34", "id": 104298963, "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-21T14:33:13Z", "updated_at": "2015-05-21T14:33:13Z", "author_association": "CONTRIBUTOR", "body": "All fixed in master, can you test to confirm?\n", "reactions": {"url": "https://api.github.com/repos/google/openrtb/issues/comments/104298963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/openrtb/pulls/comments/23776131", "pull_request_review_id": null, "id": 23776131, "diff_hunk": "@@ -740,7 +740,7 @@ protected void readContentField(JsonParser par, Content.Builder content, String\n         content.setVideoquality(VideoQuality.valueOf(par.getIntValue()));\n         break;\n       case \"context\":\n-        content.setContext(Context.valueOf(par.getIntValue()));\n+        content.setContext(Context.valueOf(par.getValueAsInt()));", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 5, "commit_id": "da2ad801a95aabe6834c11a34bc1787ce2ce56f0", "original_commit_id": "e1df6e3a30154ba7c6eba291f71b32a7c81bdb12", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Thanks for spotting this! I'll only ask for some improvements. :)\n\n1) Put a comment here explaining that we need this different code due to backwards compatibility with 2.2. (At some point in the future, maybe by 2.4 or whenever we don't have to care about 2.2 anymore, it would make sense to clean it up and revert to just `getIntValue()`.)\n\n2) This doesn't always work well because `getValueInt()` will silently return 0 if the field doesn't contain a parseable number. If this happens, `Context.valueOf(...)` will return null because there's no enumerated value for 0. and then, `content.setContext(...)` will throw `NullPointerException`. So we need to handle this better. I suggest just keep using `getIntValue()`, but put all code inside a try/catch for `JsonParseException` and just ignore this exception.\n", "created_at": "2015-01-29T15:42:45Z", "updated_at": "2015-01-29T20:00:14Z", "html_url": "https://github.com/google/openrtb/pull/17#discussion_r23776131", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/17", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/23776131"}, "html": {"href": "https://github.com/google/openrtb/pull/17#discussion_r23776131"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/17"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/23776131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24216173", "pull_request_review_id": null, "id": 24216173, "diff_hunk": "@@ -1103,6 +1107,22 @@ protected void readSegmentField(JsonParser par, Segment.Builder segment, String\n     }\n   }\n \n+  protected final String readKeywoards(JsonParser par) throws IOException {", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 65, "commit_id": "bcbdbd91a0e415c6d6c57ef6003323c646c2092b", "original_commit_id": "e8e57e6da212dd9406103f9c2bfa4568ed6a5bd0", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "- typo: s/readKeywoards/readKeywords\n- this method can be static and it could also move to OpenRtbJsonUtils; in that case, also get a more generic name, like getStringOrArray?\n- Please add a javadoc to this method, explaining that this is specific to OpenRTB 2.2. (In 2.3 all these keywords fields have been clarified/fixed to be only strings with comma-separated values.) 2.2 is still recetn so I agree it's a good idea to have this backwards compatibility for now, thanks!\n", "created_at": "2015-02-06T01:14:47Z", "updated_at": "2015-02-09T18:31:42Z", "html_url": "https://github.com/google/openrtb/pull/18#discussion_r24216173", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/18", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/24216173"}, "html": {"href": "https://github.com/google/openrtb/pull/18#discussion_r24216173"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24216173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24216398", "pull_request_review_id": null, "id": 24216398, "diff_hunk": "@@ -1103,6 +1107,22 @@ protected void readSegmentField(JsonParser par, Segment.Builder segment, String\n     }\n   }\n \n+  protected final String readKeywoards(JsonParser par) throws IOException {\n+    JsonToken currentToken = par.getCurrentToken();\n+    if (currentToken == JsonToken.START_ARRAY) {\n+      List<String> keywords = new ArrayList<>();\n+      for (startArray(par); endArray(par); par.nextToken()) {\n+        keywords.add(par.getText());\n+      }\n+      return CSV_JOINER.join(keywords);\n+    } else if (currentToken == JsonToken.VALUE_STRING) {\n+      return par.getText();\n+    } else {\n+      return \"\";", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 76, "commit_id": "bcbdbd91a0e415c6d6c57ef6003323c646c2092b", "original_commit_id": "e8e57e6da212dd9406103f9c2bfa4568ed6a5bd0", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "I'd rather not have this case, for consistency with all other reads: if the token is not an array, then assume it's a string\n", "created_at": "2015-02-06T01:19:18Z", "updated_at": "2015-02-09T18:31:42Z", "html_url": "https://github.com/google/openrtb/pull/18#discussion_r24216398", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/18", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/24216398"}, "html": {"href": "https://github.com/google/openrtb/pull/18#discussion_r24216398"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24216398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24350360", "pull_request_review_id": null, "id": 24350360, "diff_hunk": "@@ -1103,6 +1107,22 @@ protected void readSegmentField(JsonParser par, Segment.Builder segment, String\n     }\n   }\n \n+  protected final String readKeywoards(JsonParser par) throws IOException {", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 65, "commit_id": "bcbdbd91a0e415c6d6c57ef6003323c646c2092b", "original_commit_id": "e8e57e6da212dd9406103f9c2bfa4568ed6a5bd0", "user": {"login": "ceocoder", "id": 228245, "avatar_url": "https://avatars2.githubusercontent.com/u/228245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceocoder", "html_url": "https://github.com/ceocoder", "followers_url": "https://api.github.com/users/ceocoder/followers", "following_url": "https://api.github.com/users/ceocoder/following{/other_user}", "gists_url": "https://api.github.com/users/ceocoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceocoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceocoder/subscriptions", "organizations_url": "https://api.github.com/users/ceocoder/orgs", "repos_url": "https://api.github.com/users/ceocoder/repos", "events_url": "https://api.github.com/users/ceocoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ceocoder/received_events", "type": "User", "site_admin": false}, "body": "makes sense - I'll have update the PR later today.\n", "created_at": "2015-02-09T18:14:21Z", "updated_at": "2015-02-09T18:31:42Z", "html_url": "https://github.com/google/openrtb/pull/18#discussion_r24350360", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/18", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/24350360"}, "html": {"href": "https://github.com/google/openrtb/pull/18#discussion_r24350360"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/24350360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64451825", "pull_request_review_id": null, "id": 64451825, "diff_hunk": "@@ -307,11 +307,11 @@ protected void readImpField(JsonParser par, Imp.Builder imp, String fieldName)\n   protected void readNativeField(JsonParser par, Native.Builder nativ, String fieldName)\n       throws IOException {\n     switch (fieldName) {\n-      case \"request\": {\n-          OpenRtbNativeJsonReader nativeReader = factory().newNativeReader();\n-          nativ.setRequestNative(nativeReader.readNativeRequest(new CharArrayReader(\n-              par.getTextCharacters(), par.getTextOffset(), par.getTextLength())));\n-        }\n+      case \"request\":\n+        nativ.setRequest(par.getText());", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 10, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "I want to always parse to `Native.requestNative`, it doesn't matter if the input is an object or a string, we never want the resulting proto to contain the native request as a JSON string that needs further parsing. The string field is treated as \"write-only\", it's useful in the writer because the user can set the value as JSON text, but the reader is biased for the object representation. It would be acceptable though to parse into `Native.request`, if the input is a string, as a non-default option that could be set in the factory, e.g. `setForceReadNativeAsObject(false)`.\n", "created_at": "2016-05-24T18:47:29Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64451825", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64451825"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64451825"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64451825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64457559", "pull_request_review_id": null, "id": 64457559, "diff_hunk": "@@ -307,11 +307,11 @@ protected void readImpField(JsonParser par, Imp.Builder imp, String fieldName)\n   protected void readNativeField(JsonParser par, Native.Builder nativ, String fieldName)\n       throws IOException {\n     switch (fieldName) {\n-      case \"request\": {\n-          OpenRtbNativeJsonReader nativeReader = factory().newNativeReader();\n-          nativ.setRequestNative(nativeReader.readNativeRequest(new CharArrayReader(\n-              par.getTextCharacters(), par.getTextOffset(), par.getTextLength())));\n-        }\n+      case \"request\":\n+        nativ.setRequest(par.getText());\n+        break;\n+      case \"request_native\":\n+        readNativeAsObject(nativ, par);\n         break;", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 14, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "We don't want to support any alternate names for this; notice that the library is strictly OpenRTB-conformant at the JSON level, there are no exceptions even for AdX extensions, they need to be provided in a separate library via extension plugins or overriding. So the idea we had here before is that the JSON field is always the same name, but we detect variations in the format. The current code assumes it's a string with escaped JSON so we parse that and only detect if it has the root `native` field; what you want to do now is improving the code here like this:\n\n```\n  case \"request\": {\n    OpenRtbNativeJsonReader nativeReader = factory().newNativeReader();\n      if (par.getCurrentToken() == JsonToken.VALUE_STRING) {\n        nativ.setRequestNative(nativeReader.readNativeRequest(new CharArrayReader(\n            par.getTextCharacters(), par.getTextOffset(), par.getTextLength())));\n      } else {\n        nativ.setRequestNative(nativeReader.readNativeRequest(par));\n      }\n    }\n    break;\n```\n\nIf in addition to that you want to support an alternate JSON field name for some exchanges that do that, this need to belong in a separate library or custom code.\n", "created_at": "2016-05-24T19:23:01Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64457559", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64457559"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64457559"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64457559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64460820", "pull_request_review_id": null, "id": 64460820, "diff_hunk": "@@ -1389,6 +1394,9 @@ protected void readBidField(JsonParser par, Bid.Builder bid, String fieldName)\n       case \"adm\":\n         bid.setAdm(par.getText());\n         break;\n+      case \"adm_native\":\n+        bid.setAdmNative(factory().newNativeReader().readNativeResponse(par));\n+        break;", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 35, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Similar problem here; in this library we can support detection of multiple formats for `adm`, but we cannot have parsing of any non-standard field names. Notice that doing this in a separate library is easy: subclass this class, override only this method, have a similar `switch` that handles only the `adm_native` field, then the `default` makes a super-call. Also subclass the factory to override `newReader()`.\n\nOne thing that's different here is that I don't try to parse the JSON `adm` field to `Bid.admNative`, with automatic parsing of the embedded JSON like I did for the request. This is because the `adm` field (unfortunately) is not exclusive for native requests, it's also used for banner/video requests so it can contain HTML or VAST. That was a limitation planned to be fixed some day, so maybe this is a good opportunity to do that. I think this should work:\n- Current token is `START_OBJECT`: the easy case => can only be a child native response\n- Current token is `VALUE_STRING`: get the text like we already do now, but check if it starts with `{`, if it does then it should be a native JSON since neither HTML snippets nor VAST can start with this character, right? I don't like this kind of sniffing but I think it's reliable here.\n", "created_at": "2016-05-24T19:44:20Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64460820", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64460820"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64460820"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64460820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64462091", "pull_request_review_id": null, "id": 64462091, "diff_hunk": "@@ -337,6 +337,11 @@ protected void readNativeField(JsonParser par, Native.Builder nativ, String fiel\n     }\n   }\n \n+  private void readNativeAsObject(Native.Builder nativ, JsonParser par) throws IOException {\n+    OpenRtbNativeJsonReader nativeObjectReader = factory().newNativeReader();\n+    nativ.setRequestNative(nativeObjectReader.readNativeRequest(par));\n+  }", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonReader.java", "position": null, "original_position": 24, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Please avoid small refactored helpers like this unless it's invoked in more than one place, or potentially useful as an protected method that could be independently overridden. This class has a difficult balance between the large number of methods and the long `switch`/`case` inside each method, so I feel a \"dumber\" structure is the least evil, at least it makes easily to read and debug stuff linearly.\n", "created_at": "2016-05-24T19:52:21Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64462091", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64462091"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64462091"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64462091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64463362", "pull_request_review_id": null, "id": 64463362, "diff_hunk": "@@ -112,8 +112,8 @@ public NativeRequest readNativeRequest(InputStream is) throws IOException {\n         }\n       }\n     }\n-    if (rootNativeField) {\n-      endObject(par);\n+    if (rootNativeField && par.getCurrentToken() == JsonToken.END_OBJECT) {\n+      par.nextToken();", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbNativeJsonReader.java", "position": null, "original_position": 7, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "This seems to be a bugfix (the missing `nextToken()`), but please use `endObject()` in the condition, like:\n\n```\nif (rootNativeField && endObject(par)) {\n    par.nextToken();\n}\n```\n\nFor one thing, this can prevent a bug if there is no current token, which will happen if the JSON is broken and ends abruptly.\n", "created_at": "2016-05-24T20:00:33Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64463362", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64463362"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64463362"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64463362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64503899", "pull_request_review_id": null, "id": 64503899, "diff_hunk": "@@ -0,0 +1,102 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.Test;\n+import com.google.openrtb.TestExt;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonFactoryHelper {\n+\n+    static final Test.Test1 test1 = Test.Test1.newBuilder().setTest1(\"data1\").build();\n+    static final Test.Test2 test2 = Test.Test2.newBuilder().setTest2(\"data2\").build();\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonFactoryHelper.class);", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonFactoryHelper.java", "position": null, "original_position": 19, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "For new files, please fix indent size to 2 spaces, matching the rest.\nhttps://google.github.io/styleguide/javaguide.html#s4.2-block-indentation\n", "created_at": "2016-05-25T01:45:37Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64503899", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64503899"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64503899"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64503899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504085", "pull_request_review_id": null, "id": 64504085, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 21, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Also the + operator goes after line break... may have other style violations too, the project needs to follow the Google Java style strictly. We have formatter configurations for IDE/s editors at https://github.com/google/styleguide\n", "created_at": "2016-05-25T01:48:30Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64504085", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64504085"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64504085"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504199", "pull_request_review_id": null, "id": 64504199, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 206, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Thanks a lot for all this new test code! I see it seems to be real messages captured from exchanges; please make sure none of those messages contain any significant PII such as device IDs or non-anonymized IP addresses. Superficial check seems good :)\n", "created_at": "2016-05-25T01:50:43Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64504199", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64504199"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64504199"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504255", "pull_request_review_id": null, "id": 64504255, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonRequestHelper.class);", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 208, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "import the Logger type, instead of using qualified classname\n", "created_at": "2016-05-25T01:51:36Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64504255", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64504255"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64504255"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64504255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510351", "pull_request_review_id": null, "id": 64510351, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonRequestHelper.class);\n+\n+    public static void main(String[] args) throws IOException {\n+        logger.info(\"REQUEST__SHORT_NOROOT_STRING = \" + generateJson(false, false, false));\n+        logger.info(\"REQUEST__SHORT_NOROOT_OBJECT = \" + generateJson(false, false, true));\n+        logger.info(\"REQUEST__SHORT_ROOT___STRING = \" + generateJson(false, true, false));\n+        logger.info(\"REQUEST__SHORT_ROOT___OBJECT = \" + generateJson(false, true, true));\n+        logger.info(\"REQUEST__FULL__NOROOT_STRING = \" + generateJson(true, false, false));\n+        logger.info(\"REQUEST__FULL__NOROOT_OBJECT = \" + generateJson(true, false, true));\n+        logger.info(\"REQUEST__FULL__ROOT___STRING = \" + generateJson(true, true, false));\n+        logger.info(\"REQUEST__FULL__ROOT___OBJECT = \" + generateJson(true, true, true));\n+    }\n+\n+    /**\n+     * Json generator method, using these Parameters:\n+     * @param isFull true, if nearly all fields should be filled; just some selected fields\n+     * otherwise\n+     * @param isRootNative true, if the \"native\" field should be included as root element\n+     * @param isNativeObject true, if the native part should be generated as Json object; String\n+     * otherwise\n+     * @return not pretty printed String representation of Json\n+     */\n+    private static String generateJson(final boolean isFull, final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        return generateRequest(isFull, isRootNative, isNativeObject);\n+    }\n+\n+    private static String generateRequest(final boolean isFull, final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        return isFull ? generateFullRequest(isRootNative, isNativeObject) :\n+                generateShortRequest(isRootNative, isNativeObject);", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 238, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "indent in 3 lines, vertically aligning `?` and `:`\n", "created_at": "2016-05-25T03:26:12Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64510351", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64510351"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64510351"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510707", "pull_request_review_id": null, "id": 64510707, "diff_hunk": "@@ -984,6 +989,17 @@ protected void writeBidFields(Bid bid, JsonGenerator gen) throws IOException {\n     }\n   }\n \n+  private void writeAdmNative(final Bid bid, final JsonGenerator gen) throws IOException\n+  {\n+    gen.writeFieldName(\"adm_native\");\n+    nativeWriter().writeNativeResponse(bid.getAdmNative(), gen);\n+  }\n+\n+  private void writeAdmString(final Bid aBid, final JsonGenerator aGen) throws IOException\n+  {\n+    aGen.writeStringField(\"adm\", aBid.getAdm());\n+  }", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonWriter.java", "position": null, "original_position": 49, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "same as before / tiny single-use helper methods\n", "created_at": "2016-05-25T03:32:13Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64510707", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64510707"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64510707"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510757", "pull_request_review_id": null, "id": 64510757, "diff_hunk": "@@ -0,0 +1,102 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.Test;\n+import com.google.openrtb.TestExt;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonFactoryHelper {\n+\n+    static final Test.Test1 test1 = Test.Test1.newBuilder().setTest1(\"data1\").build();\n+    static final Test.Test2 test2 = Test.Test2.newBuilder().setTest2(\"data2\").build();\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonFactoryHelper.class);\n+\n+    static OpenRtbJsonFactory newJsonFactory(final boolean isRootNative) {", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonFactoryHelper.java", "position": null, "original_position": 21, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "no `final` for parameters or local variables unless necessary for inner classes \u2013 I used to like this myself, but not Google style... and obsolete with Java 8's effective final rule\n", "created_at": "2016-05-25T03:33:19Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64510757", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64510757"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64510757"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510831", "pull_request_review_id": null, "id": 64510831, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonRequestHelper.class);\n+\n+    public static void main(String[] args) throws IOException {\n+        logger.info(\"REQUEST__SHORT_NOROOT_STRING = \" + generateJson(false, false, false));\n+        logger.info(\"REQUEST__SHORT_NOROOT_OBJECT = \" + generateJson(false, false, true));\n+        logger.info(\"REQUEST__SHORT_ROOT___STRING = \" + generateJson(false, true, false));\n+        logger.info(\"REQUEST__SHORT_ROOT___OBJECT = \" + generateJson(false, true, true));\n+        logger.info(\"REQUEST__FULL__NOROOT_STRING = \" + generateJson(true, false, false));\n+        logger.info(\"REQUEST__FULL__NOROOT_OBJECT = \" + generateJson(true, false, true));\n+        logger.info(\"REQUEST__FULL__ROOT___STRING = \" + generateJson(true, true, false));\n+        logger.info(\"REQUEST__FULL__ROOT___OBJECT = \" + generateJson(true, true, true));\n+    }\n+\n+    /**\n+     * Json generator method, using these Parameters:\n+     * @param isFull true, if nearly all fields should be filled; just some selected fields\n+     * otherwise\n+     * @param isRootNative true, if the \"native\" field should be included as root element\n+     * @param isNativeObject true, if the native part should be generated as Json object; String\n+     * otherwise\n+     * @return not pretty printed String representation of Json\n+     */\n+    private static String generateJson(final boolean isFull, final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        return generateRequest(isFull, isRootNative, isNativeObject);\n+    }\n+\n+    private static String generateRequest(final boolean isFull, final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        return isFull ? generateFullRequest(isRootNative, isNativeObject) :\n+                generateShortRequest(isRootNative, isNativeObject);\n+    }\n+\n+    private static String generateShortRequest(final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        // Used for BidRequest\n+        final OpenRtb.BidRequest.Imp.Builder impressionBuilder = OpenRtb.BidRequest.Imp.newBuilder();\n+        final OpenRtb.BidRequest.Site.Builder siteBuilder = OpenRtb.BidRequest.Site.newBuilder();\n+        final OpenRtb.BidRequest.App.Builder appBuilder = OpenRtb.BidRequest.App.newBuilder();\n+        final OpenRtb.BidRequest.Geo.Builder geoBuilder = OpenRtb.BidRequest.Geo.newBuilder();\n+        final OpenRtb.BidRequest.Device.Builder deviceBuilder = OpenRtb.BidRequest.Device.newBuilder();\n+        final OpenRtb.BidRequest.User.Builder userBuilder = OpenRtb.BidRequest.User.newBuilder();\n+\n+        // Used for Impression\n+        final OpenRtb.BidRequest.Imp.Native.Builder nativeBuilder = OpenRtb.BidRequest.Imp.Native.newBuilder();\n+\n+        // The BidRequest builder\n+        final OpenRtb.BidRequest.Builder bidRequestBuilder = OpenRtb.BidRequest.newBuilder();\n+\n+        if (isNativeObject) {\n+            nativeBuilder.setRequestNative(generateNativeRequest());\n+        } else {\n+            nativeBuilder.setRequest(OpenRtbJsonFactoryHelper.newJsonFactory(isRootNative)\n+                    .newNativeWriter()\n+                    .writeNativeRequest(generateNativeRequest().build()));\n+        }\n+        impressionBuilder.setId(\"imp1\").setBidfloor(100.0).setBidfloorcur(\"USD\").setNative(nativeBuilder);\n+\n+        siteBuilder.setId(\"site1\")\n+                .setDomain(\"mysite.foo.com\")\n+                .setPage(\"http://mysite.foo.com/my/link\")\n+                .setMobile(false)\n+                .setKeywords(\"my,key,words\");\n+\n+        appBuilder.setId(\"app1\")\n+                .setName(\"my-app-name\")\n+                .setDomain(\"mysite.foo.com\")\n+                .setPaid(true)\n+                .setKeywords(\"my,app,key,words\");\n+\n+        geoBuilder.setCity(\"New York\");\n+\n+        deviceBuilder.setUa(\n+                \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\")\n+                .setGeo(geoBuilder)\n+                .setDnt(false)\n+                .setLmt(true)\n+                .setIp(\"192.168.1.0\")\n+                .setIpv6(\"1:2:3:4:5:6:0:0\");\n+\n+        userBuilder.setId(\"user1\")\n+                .setBuyeruid(\"buyer1\")\n+                .setGender(\"O\")\n+                .setKeywords(\"user,builder,key,words\")\n+                .setGeo(geoBuilder);\n+\n+        bidRequestBuilder.setId(\"9zj61whbdl319sjgz098lpys5cngmtro_short_\" + isRootNative + \"_\" + isNativeObject)\n+                .addImp(impressionBuilder)\n+                .setSite(siteBuilder)\n+                .setApp(appBuilder)\n+                .setDevice(deviceBuilder)\n+                .setUser(userBuilder);\n+\n+        return OpenRtbJsonFactoryHelper.newJsonFactory(isRootNative)\n+                .newWriter()\n+                .writeBidRequest(bidRequestBuilder.build());\n+    }\n+\n+    private static String generateFullRequest(final boolean isRootNative, final boolean isNativeObject)\n+            throws IOException {\n+        final OpenRtb.BidRequest.Imp.Builder firstImpressionBuilder = OpenRtb.BidRequest.Imp.newBuilder();\n+        final OpenRtb.BidRequest.Imp.Builder secondImpressionBuilder = OpenRtb.BidRequest.Imp.newBuilder();\n+        final OpenRtb.BidRequest.Imp.Builder thirdImpressionBuilder = OpenRtb.BidRequest.Imp.newBuilder();\n+        final OpenRtb.BidRequest.Imp.Native.Builder nativeBuilder = OpenRtb.BidRequest.Imp.Native.newBuilder();\n+        final OpenRtb.BidRequest.Device.Builder deviceBuilder = OpenRtb.BidRequest.Device.newBuilder();\n+        final OpenRtb.BidRequest.User.Builder userBuilder = OpenRtb.BidRequest.User.newBuilder();\n+        final OpenRtb.BidRequest.Regs.Builder regsBuilder = OpenRtb.BidRequest.Regs.newBuilder();\n+        final OpenRtb.BidRequest.Builder bidRequestBuilder = OpenRtb.BidRequest.newBuilder();\n+\n+        firstImpressionBuilder.setId(\"imp1\")\n+                .setBanner(OpenRtb.BidRequest.Imp.Banner.newBuilder()\n+                        .setWmax(300)\n+                        .setWmin(200)\n+                        .setHmax(100)\n+                        .setHmin(50)\n+                        .setId(\"banner1\")\n+                        .setPos(\n+                                OpenRtb.BidRequest.Imp.AdPosition.ABOVE_THE_FOLD)", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 325, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "please avoid these line breaks if a setter's parameter fits in the same line, even if it's a complex expression.\n", "created_at": "2016-05-25T03:34:57Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64510831", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64510831"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64510831"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64510831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64544366", "pull_request_review_id": null, "id": 64544366, "diff_hunk": "@@ -112,8 +112,8 @@ public NativeRequest readNativeRequest(InputStream is) throws IOException {\n         }\n       }\n     }\n-    if (rootNativeField) {\n-      endObject(par);\n+    if (rootNativeField && par.getCurrentToken() == JsonToken.END_OBJECT) {\n+      par.nextToken();", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbNativeJsonReader.java", "position": null, "original_position": 7, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "bschev", "id": 10374418, "avatar_url": "https://avatars0.githubusercontent.com/u/10374418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschev", "html_url": "https://github.com/bschev", "followers_url": "https://api.github.com/users/bschev/followers", "following_url": "https://api.github.com/users/bschev/following{/other_user}", "gists_url": "https://api.github.com/users/bschev/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschev/subscriptions", "organizations_url": "https://api.github.com/users/bschev/orgs", "repos_url": "https://api.github.com/users/bschev/repos", "events_url": "https://api.github.com/users/bschev/events{/privacy}", "received_events_url": "https://api.github.com/users/bschev/received_events", "type": "User", "site_admin": false}, "body": "This will not work, because `endObject(par)` negates the comparison. The following would be an option:\n\n```\nif (rootNativeField && !endObject(par)) {\n    par.nextToken();\n}\n```\n\nBut this is a bit confusing to read and it leads to a `par.nextToken()` call if the current token is null. I think this is not wanted.\nA new `OpenRtbJsonUtils` helper method would be an alternative, like :\n\n```\npublic static boolean isEndObject(JsonParser par) {   \n  return par.hasCurrentToken() && par.getCurrentToken() == JsonToken.END_OBJECT;\n}\n```\n\nThis could then be used in `readNativeRequest` and `readNativeResponse`, like:\n\n```\nif (rootNativeField && isEndObject(par)) {\n    par.nextToken();\n}\n```\n\nWhat do you think?\n", "created_at": "2016-05-25T09:45:14Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64544366", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64544366"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64544366"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64544366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64576217", "pull_request_review_id": null, "id": 64576217, "diff_hunk": "@@ -112,8 +112,8 @@ public NativeRequest readNativeRequest(InputStream is) throws IOException {\n         }\n       }\n     }\n-    if (rootNativeField) {\n-      endObject(par);\n+    if (rootNativeField && par.getCurrentToken() == JsonToken.END_OBJECT) {\n+      par.nextToken();", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbNativeJsonReader.java", "position": null, "original_position": 7, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "You are right that these utilities are confusing, I was coding from memory and forgot the negation :) but please use that anyway for now, with the negation. The rationale for this naming is that those start/endXxx methods are mostly used as loop guards, like `for (startObject(par); endObject(par); par.nextToken())` -- it's a kind of macro. In hindsight this may have not been the best idea, particularly when the same methods need to be used in other places (but that's rare). I've already considered to change this but that would need to include other methods, update all uses, keep deprecated methods for a couple releases, etc.\n", "created_at": "2016-05-25T13:54:40Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64576217", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64576217"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64576217"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64576217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64579811", "pull_request_review_id": null, "id": 64579811, "diff_hunk": "@@ -354,8 +354,7 @@ public final void writeNative(Native nativ, JsonGenerator gen) throws IOExceptio\n   protected void writeNativeFields(Native nativ, JsonGenerator gen) throws IOException {\n     switch (nativ.getRequestOneofCase()) {\n       case REQUEST_NATIVE:\n-        gen.writeStringField(\n-            \"request\", nativeWriter().writeNativeRequest(nativ.getRequestNative()));\n+        writeNativeObject(nativ, gen);", "path": "openrtb-core/src/main/java/com/google/openrtb/json/OpenRtbJsonWriter.java", "position": null, "original_position": 6, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Similarly to the reader side, in the writer we want to transparently support either representation in the memory/Protobuf model (user can put the native part either in the string field `requestNative` or the object field `request`) but the output will be always the same, and that should be the most standards-compliant representation which is (even after OpenRTB 2.4) the ugly JSON-escaped string field. However we want to support a child object representation too, but the right way to do that is not by binding the output format to the user's choice of `requestNative` vs. `request`; this choice must be independent, it's a convenience and performance feature: when you create the native request programmatically you want to always use `requestNative`, but when you already have the complete native request as JSON (e.g. you may read it from a database of campaign data), then you want to just copy that to `request`.\n\nIn the reader we could handle the external-format choice via detection, sniffing the first token or character; in the writer we can't do that, so the only solution in this case is adding another boolean option to the factory. Above I had suggested an option named `forceReadNativeAsObject`, but we could have a single option that does the job for both reader and writer, maybe just `nativeAsObject`. Usually you will have the same choice for the request and response, it would be strange to use the standard escaped-JSON form in the request but send the child-object form in the response for example (if someone really needs that, then just create two factories - so we optimize the API for the common case).\n", "created_at": "2016-05-25T14:14:25Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64579811", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64579811"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64579811"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64579811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64583006", "pull_request_review_id": null, "id": 64583006, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 206, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Thinking more about this... actually, having all this static JSON data as inline constants is awful. Can you move them to resource files? For example _request-full-noroot.json_, etc. then just read them with `getResourceAsStream()`. Then you can get rid of all the escaping, and also run the JSON through a tool like http://jsbeautifier.org/ so it's nicely  indented and readable.\n", "created_at": "2016-05-25T14:30:46Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64583006", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64583006"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64583006"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64583006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64584376", "pull_request_review_id": null, "id": 64584376, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(OpenRtbJsonRequestHelper.class);\n+\n+    public static void main(String[] args) throws IOException {\n+        logger.info(\"REQUEST__SHORT_NOROOT_STRING = \" + generateJson(false, false, false));\n+        logger.info(\"REQUEST__SHORT_NOROOT_OBJECT = \" + generateJson(false, false, true));\n+        logger.info(\"REQUEST__SHORT_ROOT___STRING = \" + generateJson(false, true, false));\n+        logger.info(\"REQUEST__SHORT_ROOT___OBJECT = \" + generateJson(false, true, true));\n+        logger.info(\"REQUEST__FULL__NOROOT_STRING = \" + generateJson(true, false, false));\n+        logger.info(\"REQUEST__FULL__NOROOT_OBJECT = \" + generateJson(true, false, true));\n+        logger.info(\"REQUEST__FULL__ROOT___STRING = \" + generateJson(true, true, false));\n+        logger.info(\"REQUEST__FULL__ROOT___OBJECT = \" + generateJson(true, true, true));", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 218, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "I see the code here and below is only used to generate the big JSON test data but you can't call it from tests since it uses the same JSON utilities being tested, so it's smart to generate only once, validate the output, then dump it into static golden data. But we could have one improvement here: make this helper class a unit test too, with one `@Test` method that validates the golden data by comparing it to the output of the generator functions, i.e. similar to this `main` method except that you would do an `assertThat(REQUEST_...).isEqualTo(generate...)` for each constant. This is important to detect bugs that may inadvertently change the output of the generator functions, but might not be captured by the existing tests which only read the golden data.\n", "created_at": "2016-05-25T14:37:52Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64584376", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64584376"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64584376"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64584376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64589573", "pull_request_review_id": null, "id": 64589573, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 206, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "bundeskanzler4711", "id": 7062722, "avatar_url": "https://avatars2.githubusercontent.com/u/7062722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bundeskanzler4711", "html_url": "https://github.com/bundeskanzler4711", "followers_url": "https://api.github.com/users/bundeskanzler4711/followers", "following_url": "https://api.github.com/users/bundeskanzler4711/following{/other_user}", "gists_url": "https://api.github.com/users/bundeskanzler4711/gists{/gist_id}", "starred_url": "https://api.github.com/users/bundeskanzler4711/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bundeskanzler4711/subscriptions", "organizations_url": "https://api.github.com/users/bundeskanzler4711/orgs", "repos_url": "https://api.github.com/users/bundeskanzler4711/repos", "events_url": "https://api.github.com/users/bundeskanzler4711/events{/privacy}", "received_events_url": "https://api.github.com/users/bundeskanzler4711/received_events", "type": "User", "site_admin": false}, "body": "If the JSON data should be pretty-written in resource files I think that we should use a pretty-print library for that, because in the test methods I am currently doing (non-pretty-printed) string comparison:\n\n``` java\n  static void testRequestWithNative(final String requestString, final boolean rootNative) throws IOException {\n    OpenRtbJsonFactory jsonFactory = newJsonFactory();\n    OpenRtb.BidRequest bidRequest = jsonFactory.newReader().readBidRequest(requestString);\n    String jsonRequNativeStr = jsonFactory.setRootNativeField(rootNative).newWriter().writeBidRequest(bidRequest);\n    assertThat(jsonRequNativeStr).isEqualTo(requestString);\n  }\n```\n\nWould [GSON](https://github.com/google/gson) be a good choice?\n", "created_at": "2016-05-25T15:02:48Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64589573", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64589573"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64589573"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64589573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64609237", "pull_request_review_id": null, "id": 64609237, "diff_hunk": "@@ -0,0 +1,527 @@\n+package com.google.openrtb.json;\n+\n+import com.google.openrtb.OpenRtb;\n+import com.google.openrtb.TestExt;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+\n+import static java.util.Arrays.asList;\n+\n+/**\n+ * Test helper class, to be used for generating and comparing Json test data <p> Created by\n+ * sschlegel on 12/05/16.\n+ */\n+class OpenRtbJsonRequestHelper {\n+    /**\n+     * Request Json string containing <p> - native part as adm string field\n+     */\n+    static final String REQUEST__SHORT_NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\"},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object\n+     */\n+    static final String REQUEST__SHORT_NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\" +\n+                    \"\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) \" +\n+                    \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\" +\n+                    \"\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\" +\n+                    \"\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\" +\n+                    \"\\\\\\\"seq\\\\\\\":1}}\\\"},\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\" +\n+                    \"\\\"name\\\":\\\"my-app-name\\\",\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\" +\n+                    \"\\\"device\\\":{\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 \" +\n+                    \"Safari/537.36\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\" +\n+                    \"\\\"keywords\\\":\\\"user,builder,key,words\\\",\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled\n+     */\n+    static final String REQUEST__SHORT_ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_short_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"native\\\":{\" +\n+                    \"\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}}},\" +\n+                    \"\\\"bidfloor\\\":100.0,\\\"bidfloorcur\\\":\\\"USD\\\"}],\\\"app\\\":{\\\"id\\\":\\\"app1\\\",\\\"name\\\":\\\"my-app-name\\\",\" +\n+                    \"\\\"domain\\\":\\\"mysite.foo.com\\\",\\\"paid\\\":1,\\\"keywords\\\":\\\"my,app,key,words\\\"},\\\"device\\\":{\" +\n+                    \"\\\"ua\\\":\\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"},\\\"dnt\\\":0,\\\"lmt\\\":1,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\"},\" +\n+                    \"\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"buyer1\\\",\\\"gender\\\":\\\"O\\\",\\\"keywords\\\":\\\"user,builder,key,words\\\",\" +\n+                    \"\\\"geo\\\":{\\\"city\\\":\\\"New York\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm string field <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"layout\\\\\\\":2,\" +\n+                    \"\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - nearly all\n+     * possible fields filled\n+     */\n+    static final String REQUEST__FULL__NOROOT_OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_false_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\" +\n+                    \"\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"ver\\\":\\\"1\\\",\\\"layout\\\":2,\" +\n+                    \"\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\" +\n+                    \"\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\" +\n+                    \"\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\" +\n+                    \"\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\" +\n+                    \"\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\" +\n+                    \"\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\" +\n+                    \"\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\" +\n+                    \"\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\" +\n+                    \"\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\" +\n+                    \"\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\" +\n+                    \"\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\" +\n+                    \"\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string <p> - containing native part as adm string field <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___STRING =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_false\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\" +\n+                    \"\\\"wmax\\\":300,\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\" +\n+                    \"\\\"mimes\\\":[\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\\\"deals\\\":[{\" +\n+                    \"\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\\\"wadomain\\\":[\\\"goodadv1\\\"],\" +\n+                    \"\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\" +\n+                    \"\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\\\"maxduration\\\":60,\\\"protocol\\\":3,\" +\n+                    \"\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\\\"sequence\\\":1,\\\"battr\\\":[12],\" +\n+                    \"\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\\\"playbackmethod\\\":[3],\" +\n+                    \"\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\\\"companionad\\\":{\" +\n+                    \"\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request\\\":\\\"{\\\\\\\"native\\\\\\\":{\\\\\\\"ver\\\\\\\":\\\\\\\"1\\\\\\\",\" +\n+                    \"\\\\\\\"layout\\\\\\\":2,\\\\\\\"adunit\\\\\\\":4,\\\\\\\"plcmtcnt\\\\\\\":1,\\\\\\\"seq\\\\\\\":1}}\\\",\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\" +\n+                    \"\\\"battr\\\":[12],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\" +\n+                    \"\\\"geo\\\":{\\\"lat\\\":90.0,\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\" +\n+                    \"\\\"regionfips104\\\":\\\"US36\\\",\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\" +\n+                    \"\\\"utcoffset\\\":3600,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\" +\n+                    \"\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\" +\n+                    \"\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\" +\n+                    \"\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\" +\n+                    \"\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\" +\n+                    \"\\\"keywords\\\":\\\"boldly,going\\\",\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\" +\n+                    \"\\\"name\\\":\\\"dataname1\\\",\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\" +\n+                    \"\\\"tmax\\\":100,\\\"wseat\\\":[\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\" +\n+                    \"\\\"badguy\\\"],\\\"regs\\\":{\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\" +\n+                    \"\\\"test2\\\":\\\"data2\\\"}}}\";\n+\n+    /**\n+     * Request Json string containing <p> - native part as adm_native object <p> - root native\n+     * enabled <p> - nearly all possible fields filled\n+     */\n+    static final String REQUEST__FULL__ROOT___OBJECT =\n+            \"{\\\"id\\\":\\\"9zj61whbdl319sjgz098lpys5cngmtro_full_true_true\\\",\\\"imp\\\":[{\\\"id\\\":\\\"imp1\\\",\\\"banner\\\":{\\\"wmax\\\":300,\" +\n+                    \"\\\"hmax\\\":100,\\\"wmin\\\":200,\\\"hmin\\\":50,\\\"id\\\":\\\"banner1\\\",\\\"btype\\\":[3],\\\"battr\\\":[12],\\\"pos\\\":1,\\\"mimes\\\":[\" +\n+                    \"\\\"image/gif\\\"],\\\"topframe\\\":1,\\\"expdir\\\":[2],\\\"api\\\":[3],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"displaymanager\\\":\\\"dm1\\\",\\\"displaymanagerver\\\":\\\"1.0\\\",\\\"instl\\\":0,\\\"tagid\\\":\\\"tag1\\\",\\\"bidfloor\\\":100.0,\" +\n+                    \"\\\"bidfloorcur\\\":\\\"USD\\\",\\\"secure\\\":0,\\\"iframebuster\\\":[\\\"buster1\\\"],\\\"pmp\\\":{\\\"private_auction\\\":0,\" +\n+                    \"\\\"deals\\\":[{\\\"id\\\":\\\"deal1\\\",\\\"bidfloor\\\":200.0,\\\"bidfloorcur\\\":\\\"USD\\\",\\\"wseat\\\":[\\\"seat2\\\"],\" +\n+                    \"\\\"wadomain\\\":[\\\"goodadv1\\\"],\\\"at\\\":2,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},{\\\"id\\\":\\\"imp2\\\",\\\"video\\\":{\\\"mimes\\\":[\\\"video/vp9\\\"],\\\"minduration\\\":15,\" +\n+                    \"\\\"maxduration\\\":60,\\\"protocol\\\":3,\\\"protocols\\\":[2],\\\"w\\\":200,\\\"h\\\":50,\\\"startdelay\\\":0,\\\"linearity\\\":1,\" +\n+                    \"\\\"sequence\\\":1,\\\"battr\\\":[12],\\\"maxextended\\\":120,\\\"minbitrate\\\":1000,\\\"maxbitrate\\\":2000,\\\"boxingallowed\\\":0,\" +\n+                    \"\\\"playbackmethod\\\":[3],\\\"delivery\\\":[1],\\\"pos\\\":1,\\\"companionad\\\":[{\\\"w\\\":100,\\\"h\\\":50,\\\"id\\\":\\\"compad1\\\"}],\" +\n+                    \"\\\"companionad\\\":{\\\"banner\\\":[{\\\"w\\\":110,\\\"h\\\":60,\\\"id\\\":\\\"compad2\\\"}]},\\\"api\\\":[2],\\\"companiontype\\\":[2],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}},{\\\"id\\\":\\\"imp3\\\",\\\"native\\\":{\\\"request_native\\\":{\\\"native\\\":{\\\"ver\\\":\\\"1\\\",\" +\n+                    \"\\\"layout\\\":2,\\\"adunit\\\":4,\\\"plcmtcnt\\\":1,\\\"seq\\\":1}},\\\"ver\\\":\\\"1.0\\\",\\\"api\\\":[3],\\\"battr\\\":[12],\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"device\\\":{\\\"ua\\\":\\\"Chrome\\\",\\\"geo\\\":{\\\"lat\\\":90.0,\" +\n+                    \"\\\"lon\\\":45.0,\\\"type\\\":1,\\\"country\\\":\\\"USA\\\",\\\"region\\\":\\\"New York\\\",\\\"regionfips104\\\":\\\"US36\\\",\" +\n+                    \"\\\"metro\\\":\\\"New York\\\",\\\"city\\\":\\\"New York City\\\",\\\"zip\\\":\\\"10000\\\",\\\"utcoffset\\\":3600,\\\"ext\\\":{\" +\n+                    \"\\\"test1\\\":\\\"data1\\\"}},\\\"dnt\\\":0,\\\"lmt\\\":0,\\\"ip\\\":\\\"192.168.1.0\\\",\\\"ipv6\\\":\\\"1:2:3:4:5:6:0:0\\\",\\\"devicetype\\\":1,\" +\n+                    \"\\\"make\\\":\\\"Motorola\\\",\\\"model\\\":\\\"MotoX\\\",\\\"os\\\":\\\"Android\\\",\\\"osv\\\":\\\"3.2.1\\\",\\\"hwv\\\":\\\"X\\\",\\\"w\\\":640,\" +\n+                    \"\\\"h\\\":1024,\\\"ppi\\\":300,\\\"pxratio\\\":1.0,\\\"js\\\":1,\\\"flashver\\\":\\\"11\\\",\\\"language\\\":\\\"en\\\",\\\"carrier\\\":\\\"77777\\\",\" +\n+                    \"\\\"connectiontype\\\":6,\\\"ifa\\\":\\\"999\\\",\\\"didsha1\\\":\\\"1234\\\",\\\"didmd5\\\":\\\"4321\\\",\\\"dpidsha1\\\":\\\"5678\\\",\" +\n+                    \"\\\"dpidmd5\\\":\\\"8765\\\",\\\"macsha1\\\":\\\"abc\\\",\\\"macmd5\\\":\\\"xyz\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"user\\\":{\" +\n+                    \"\\\"id\\\":\\\"user1\\\",\\\"buyeruid\\\":\\\"Picard\\\",\\\"yob\\\":1973,\\\"gender\\\":\\\"M\\\",\\\"keywords\\\":\\\"boldly,going\\\",\" +\n+                    \"\\\"customdata\\\":\\\"data1\\\",\\\"geo\\\":{\\\"zip\\\":\\\"12345\\\"},\\\"data\\\":[{\\\"id\\\":\\\"data1\\\",\\\"name\\\":\\\"dataname1\\\",\" +\n+                    \"\\\"segment\\\":[{\\\"id\\\":\\\"seg1\\\",\\\"name\\\":\\\"segname1\\\",\\\"value\\\":\\\"segval1\\\",\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\" +\n+                    \"\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}}],\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"test\\\":0,\\\"at\\\":2,\\\"tmax\\\":100,\\\"wseat\\\":[\" +\n+                    \"\\\"seat1\\\"],\\\"allimps\\\":0,\\\"cur\\\":[\\\"USD\\\"],\\\"bcat\\\":[\\\"IAB11\\\",\\\"IAB11-4\\\"],\\\"badv\\\":[\\\"badguy\\\"],\\\"regs\\\":{\" +\n+                    \"\\\"coppa\\\":1,\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\"}},\\\"ext\\\":{\\\"test1\\\":\\\"data1\\\",\\\"test2ext\\\":{\\\"test2\\\":\\\"data2\\\"}}}\";", "path": "openrtb-core/src/test/java/com/google/openrtb/json/OpenRtbJsonRequestHelper.java", "position": null, "original_position": 206, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "f00b379617a41ee50721ff80a262af6180518461", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Please don't add GSON or anything new, we try to limit dependency libraries to a minimum here. But you shouldn't need that, the Jackson library that we use here can do all the pretty printing we need. Because our data model is not POJO-based this requires a hack, but [not too bad](http://stackoverflow.com/a/14532435).\n", "created_at": "2016-05-25T16:48:16Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r64609237", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/64609237"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r64609237"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/64609237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/65509295", "pull_request_review_id": null, "id": 65509295, "diff_hunk": "@@ -0,0 +1,31 @@\n+{\n+  \"id\" : \"resp\",\n+  \"seatbid\" : [ {\n+    \"bid\" : [ {\n+      \"id\" : \"bid\",\n+      \"impid\" : \"imp\",\n+      \"price\" : 19.95,\n+      \"adid\" : \"adid\",\n+      \"nurl\" : \"http://iwon.com\",\n+      \"adm\" : \"{\\\"native\\\":{\\\"ver\\\":\\\"1.0\\\",\\\"link\\\":{},\\\"imptrackers\\\":[\\\"http://my.imp.tracker\\\"]}}\",\n+      \"adomain\" : [ \"http://myads.com\" ],\n+      \"bundle\" : \"com.google.testapp\",\n+      \"iurl\" : \"http://mycdn.com/ad.gif\",\n+      \"cid\" : \"cid\",\n+      \"crid\" : \"crid\",\n+      \"cat\" : [ \"IAB10-2\" ],\n+      \"attr\" : [ 12 ],\n+      \"dealid\" : \"deal\",\n+      \"w\" : 100,\n+      \"h\" : 80,\n+      \"ext\" : {\n+        \"test1\" : \"data1\"\n+      }\n+    } ],\n+    \"seat\" : \"seat\"\n+  } ],\n+  \"bidid\" : \"bid\",\n+  \"cur\" : \"USD\",\n+  \"customdata\" : \"mydata\",\n+  \"nbr\" : 1\n+}", "path": "openrtb-core/src/test/resources/RESPONSE_SHORT_ROOT___STRING.json", "position": 31, "original_position": 31, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "1e7b70bb8adea87e59a4dd0e9df4495bdab5886f", "user": {"login": "bundeskanzler4711", "id": 7062722, "avatar_url": "https://avatars2.githubusercontent.com/u/7062722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bundeskanzler4711", "html_url": "https://github.com/bundeskanzler4711", "followers_url": "https://api.github.com/users/bundeskanzler4711/followers", "following_url": "https://api.github.com/users/bundeskanzler4711/following{/other_user}", "gists_url": "https://api.github.com/users/bundeskanzler4711/gists{/gist_id}", "starred_url": "https://api.github.com/users/bundeskanzler4711/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bundeskanzler4711/subscriptions", "organizations_url": "https://api.github.com/users/bundeskanzler4711/orgs", "repos_url": "https://api.github.com/users/bundeskanzler4711/repos", "events_url": "https://api.github.com/users/bundeskanzler4711/events{/privacy}", "received_events_url": "https://api.github.com/users/bundeskanzler4711/received_events", "type": "User", "site_admin": false}, "body": "Hint: All golden data Json files under `test/resources` don't have a newline at end of file, so we don't have to do `trim()` while getting the file content for all test cases.\n", "created_at": "2016-06-02T09:27:36Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r65509295", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/65509295"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r65509295"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/65509295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/65655174", "pull_request_review_id": null, "id": 65655174, "diff_hunk": "@@ -0,0 +1,31 @@\n+{\n+  \"id\" : \"resp\",\n+  \"seatbid\" : [ {\n+    \"bid\" : [ {\n+      \"id\" : \"bid\",\n+      \"impid\" : \"imp\",\n+      \"price\" : 19.95,\n+      \"adid\" : \"adid\",\n+      \"nurl\" : \"http://iwon.com\",\n+      \"adm\" : \"{\\\"native\\\":{\\\"ver\\\":\\\"1.0\\\",\\\"link\\\":{},\\\"imptrackers\\\":[\\\"http://my.imp.tracker\\\"]}}\",\n+      \"adomain\" : [ \"http://myads.com\" ],\n+      \"bundle\" : \"com.google.testapp\",\n+      \"iurl\" : \"http://mycdn.com/ad.gif\",\n+      \"cid\" : \"cid\",\n+      \"crid\" : \"crid\",\n+      \"cat\" : [ \"IAB10-2\" ],\n+      \"attr\" : [ 12 ],\n+      \"dealid\" : \"deal\",\n+      \"w\" : 100,\n+      \"h\" : 80,\n+      \"ext\" : {\n+        \"test1\" : \"data1\"\n+      }\n+    } ],\n+    \"seat\" : \"seat\"\n+  } ],\n+  \"bidid\" : \"bid\",\n+  \"cur\" : \"USD\",\n+  \"customdata\" : \"mydata\",\n+  \"nbr\" : 1\n+}", "path": "openrtb-core/src/test/resources/RESPONSE_SHORT_ROOT___STRING.json", "position": 31, "original_position": 31, "commit_id": "0131983355713634feb6bac388ee264463444792", "original_commit_id": "1e7b70bb8adea87e59a4dd0e9df4495bdab5886f", "user": {"login": "opinali", "id": 3017776, "avatar_url": "https://avatars2.githubusercontent.com/u/3017776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opinali", "html_url": "https://github.com/opinali", "followers_url": "https://api.github.com/users/opinali/followers", "following_url": "https://api.github.com/users/opinali/following{/other_user}", "gists_url": "https://api.github.com/users/opinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/opinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opinali/subscriptions", "organizations_url": "https://api.github.com/users/opinali/orgs", "repos_url": "https://api.github.com/users/opinali/repos", "events_url": "https://api.github.com/users/opinali/events{/privacy}", "received_events_url": "https://api.github.com/users/opinali/received_events", "type": "User", "site_admin": false}, "body": "Thanks again for the work! Still a big pile of code so I'll need a few days to fully review again, but looks good. :)\n", "created_at": "2016-06-03T04:23:13Z", "updated_at": "2016-06-03T09:50:12Z", "html_url": "https://github.com/google/openrtb/pull/87#discussion_r65655174", "pull_request_url": "https://api.github.com/repos/google/openrtb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/openrtb/pulls/comments/65655174"}, "html": {"href": "https://github.com/google/openrtb/pull/87#discussion_r65655174"}, "pull_request": {"href": "https://api.github.com/repos/google/openrtb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/google/openrtb/pulls/comments/65655174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}