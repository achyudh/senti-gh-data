{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/765", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/events", "html_url": "https://github.com/libgit2/pygit2/issues/765", "id": 288615758, "number": 765, "title": "big endian: FAIL: test_no_context_lines (test.test_patch.PatchTest)", "user": {"login": "onovy", "id": 1649603, "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-15T14:39:47Z", "updated_at": "2018-01-15T14:39:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\ntest.test_patch.PatchTest.test_no_context_lines fails on archs mips, s390x, hppa, powerpc or ppc64. I think all of them are \"big endian\". This bug is new in 0.26.3, because before this version test_no_context_lines test didn't exists.\r\n\r\n```\r\nFAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/test/test_patch.py\", line 196, in test_no_context_lines\r\n    self.assertEqual(context_count, 0)\r\nAssertionError: 1 != 0\r\n```\r\n\r\nSee: https://buildd.debian.org/status/package.php?p=python-pygit2\r\n\r\nThanks for fixing.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/events", "html_url": "https://github.com/libgit2/pygit2/issues/764", "id": 288579376, "number": 764, "title": "tree.diff_to_tree results in many unnecessary sys calls", "user": {"login": "Nukesor", "id": 3322822, "avatar_url": "https://avatars2.githubusercontent.com/u/3322822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nukesor", "html_url": "https://github.com/Nukesor", "followers_url": "https://api.github.com/users/Nukesor/followers", "following_url": "https://api.github.com/users/Nukesor/following{/other_user}", "gists_url": "https://api.github.com/users/Nukesor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nukesor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nukesor/subscriptions", "organizations_url": "https://api.github.com/users/Nukesor/orgs", "repos_url": "https://api.github.com/users/Nukesor/repos", "events_url": "https://api.github.com/users/Nukesor/events{/privacy}", "received_events_url": "https://api.github.com/users/Nukesor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-15T12:32:34Z", "updated_at": "2018-01-17T22:44:46Z", "closed_at": null, "author_association": "NONE", "body": "Hi!\r\n\r\nI'm currently working on a git scanner with a very high throughput for my bachelor thesis.\r\nAs the scanner runs with 8 threads, I'm observing severe slowdowns on my server.\r\nAfter running the command with `strace` i noticed that there are a whole lot of unnecessary syscalls issued on each diff. It looks like  for each file in the diff, there is one `stat` for the actual file, two `access` for `/etc/gitattributes` and two `stat` for `/info/attributes`. \r\n\r\nThis results in a lot of syscalls and slows things down significantly as the program seems to wait for those calls most of the time. The repositories are located inside `/tmp` and cleaned after each scan. There are no signs of RAM shortage as there are about 8GB+ unused space in the `/tmp` fs.\r\n\r\nThe repositories are cloned `bare`. The actual function call is:\r\n```\r\ndiff = commit.tree.diff_to_tree(commit.parents[0].tree)\r\nself.commit_stats[commit.hex] = {\r\n    'additions': diff.stats.insertions,\r\n    'deletions': diff.stats.deletions,\r\n}\r\n```\r\n\r\nI'm not sure if this is the right place or if this is rather a libgit2 issue.\r\nAnyway I'm happy for any help as I'm not that familiar with the pythin-C binding mechanics.\r\n\r\nRelevant strace output example:\r\n```\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/events", "html_url": "https://github.com/libgit2/pygit2/issues/752", "id": 278706454, "number": 752, "title": "Performance: speed of getting `blob.data` for large files (as compared to GitPython)", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T18:37:55Z", "updated_at": "2017-12-02T18:37:55Z", "closed_at": null, "author_association": "NONE", "body": "I have compared speed of equivalent to `git show <revision>:<pathname>` in both pygit2 and GitPython (the pure-Python implementation). In all other cases that I have tested pygit2 is faster, but for very large files `git show` / `git cat-file` equivalent is slower.\r\n\r\npygit2 code:\r\n``` python\r\nblob = repo.revparse_single(commit + ':' + path)\r\nresult = blob.data\r\n```\r\n\r\nGitPython code:\r\n``` python\r\nblob = repo.rev_parse(commit + ':' + path)\r\nresult = blob.data_stream.read()\r\n```\r\n\r\nDo you have any ideas why pygit2 is slower here?\r\n\r\nP.S. would it be difficult to add streaming access?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/events", "html_url": "https://github.com/libgit2/pygit2/issues/750", "id": 278573551, "number": 750, "title": "Suggestion: better handling of `repo.set_head(pygit2.Commit)`", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T19:38:10Z", "updated_at": "2017-12-25T18:54:52Z", "closed_at": null, "author_association": "NONE", "body": "I have tried to emulate `git checkout --detach <commit>` in pygit2, to create **detached HEAD** checkout, and I did come up with the following rough equivalent (though the following does not uses transactions as git does):\r\n\r\n``` python\r\nrev = repo.revparse_single(commit_name)\r\nrepo.checkout_tree(rev)\r\nrepo.set_head(rev.id)\r\n```\r\n\r\nHowever when I tried to use simply `repo.set_head(rev)`, I got the following error:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-35-9612528ec0ac> in <module>()\r\n----> 1 repo.set_head(rev)\r\n\r\n/usr/lib/python2.7/dist-packages/pygit2/repository.pyc in set_head(self, target)\r\n    293\r\n    294         # if it's a string, then it's a reference name\r\n--> 295         err = C.git_repository_set_head(self._repo, to_bytes(target))\r\n    296         check_error(err)\r\n    297\r\n\r\nTypeError: initializer for ctype 'char *' must be a cdata pointer, not _pygit2.Commit\r\n```\r\n\r\nIt would be nice if `pygit2.Commit` object was automatically peeled, but if it is decided to be not good idea, then what it needs is more user-friendly error message than the one above.\r\n\r\n-----\r\npygit2 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/events", "html_url": "https://github.com/libgit2/pygit2/issues/747", "id": 278039485, "number": 747, "title": "Broken GIT_SORT_TIME ?", "user": {"login": "pypingou", "id": 1240038, "avatar_url": "https://avatars1.githubusercontent.com/u/1240038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pypingou", "html_url": "https://github.com/pypingou", "followers_url": "https://api.github.com/users/pypingou/followers", "following_url": "https://api.github.com/users/pypingou/following{/other_user}", "gists_url": "https://api.github.com/users/pypingou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pypingou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pypingou/subscriptions", "organizations_url": "https://api.github.com/users/pypingou/orgs", "repos_url": "https://api.github.com/users/pypingou/repos", "events_url": "https://api.github.com/users/pypingou/events{/privacy}", "received_events_url": "https://api.github.com/users/pypingou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-30T08:45:17Z", "updated_at": "2018-01-03T10:39:41Z", "closed_at": null, "author_association": "NONE", "body": "This is a script to reproduce the behavior I'm seeing:\r\n````\r\n#!/usr/bin/env python\r\n\r\nimport tempfile\r\nimport time\r\nimport os\r\n\r\nimport pygit2\r\n\r\npath = tempfile.mkdtemp(prefix='pygit2_test_')\r\nrepo = pygit2.init_repository(path)\r\n\r\nauthor = pygit2.Signature('Alice Author', 'alice@authors.tld')\r\ncommitter = pygit2.Signature('Cecil Committer', 'cecil@committers.tld')\r\n\r\n# Commit #1\r\n\r\n # Create a file in that git repo\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\nparents = []\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #1',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents,\r\n))\r\ncommit1 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n# Commit #2\r\n\r\nparents = [commit1.oid.hex]\r\n\r\nsubfolder = os.path.join('folder1', 'folder2')\r\nos.makedirs(os.path.join(path, subfolder))\r\n# Create a file in that git repo\r\nwith open(os.path.join(path, subfolder, 'file'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz')\r\nrepo.index.add(os.path.join(subfolder, 'file'))\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #2',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit2 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n\r\n# Commit #3\r\n\r\nparents = [commit2.oid.hex]\r\n\r\n# Update the sources file\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz!')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #3',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit3 = repo.revparse_single('HEAD')\r\n\r\n\r\nprint('')\r\nmain_walker = repo.walk(commit3.oid.hex, pygit2.GIT_SORT_TIME)\r\ncommits_msgs = []\r\nwhile 1:\r\n    try:\r\n        com = main_walker.next()\r\n        print(com.message)\r\n        print(com.oid.hex)\r\n    except StopIteration:\r\n        break\r\n````\r\n\r\nIt gives me the following output:\r\n````\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\n\r\nCommit #3\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\nCommit #1\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\nCommit #2\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n````\r\n\r\nThe first three lines are the commit as they are committed.\r\nThe following lines are the commit message and hash as ``repo.walk(commit3, pygit2.GIT_SORT_TIME)`` is returning them.\r\n\r\nSomething looks broken to me :)", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/events", "html_url": "https://github.com/libgit2/pygit2/issues/738", "id": 276061504, "number": 738, "title": "`repo.diff(c1, c2, flags=pygit2.GIT_DIFF_FIND_RENAMES)` reverses diff", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T13:08:42Z", "updated_at": "2017-11-22T13:08:42Z", "closed_at": null, "author_association": "NONE", "body": "First complaint is that there is no documentation and no examples of using `flags` (not `flag` as in description of parameters) with `Repository.diff`: http://www.pygit2.org/diff.html . Therefore I am not sure if I am using the API correctly.\r\n\r\nSecond, using `flags=pygit2.GIT_DIFF_FIND_RENAMES` for some reason **reverses** diff.\r\n\r\nCompare \r\n```\r\n>>> repo = pygit2.Repository('path/to/repo')\r\n>>> repo.diff('HEAD^', 'HEAD', flag=pygit2.GIT_DIFF_FIND_RENAMES).patch`\r\n```\r\nwith \r\n```\r\n>>> repo.diff('HEAD^', 'HEAD').patch\r\n```\r\n\r\n-----\r\n\r\npygit2.LIBGIT2_VERSION: '0.26.0'\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/events", "html_url": "https://github.com/libgit2/pygit2/issues/732", "id": 270986972, "number": 732, "title": "hunk.final_committer.name not work if email is empty", "user": {"login": "Bysmyyr", "id": 3306756, "avatar_url": "https://avatars3.githubusercontent.com/u/3306756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bysmyyr", "html_url": "https://github.com/Bysmyyr", "followers_url": "https://api.github.com/users/Bysmyyr/followers", "following_url": "https://api.github.com/users/Bysmyyr/following{/other_user}", "gists_url": "https://api.github.com/users/Bysmyyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bysmyyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bysmyyr/subscriptions", "organizations_url": "https://api.github.com/users/Bysmyyr/orgs", "repos_url": "https://api.github.com/users/Bysmyyr/repos", "events_url": "https://api.github.com/users/Bysmyyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Bysmyyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T13:58:13Z", "updated_at": "2017-11-03T13:58:34Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I found this error:\r\n\r\nif email is missing, it gives error \"Signarure cannot have an empty name or email\"\r\n\r\nin libgit2 Slack channel we discuss it and end up that in `wrap_signature` pygit2 creates new signature where email cannot be empty. It maybe should use `git_signature_dup` instead?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/events", "html_url": "https://github.com/libgit2/pygit2/issues/731", "id": 269346053, "number": 731, "title": "Document KeypairFromAgent", "user": {"login": "yan12125", "id": 1937689, "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-28T20:07:14Z", "updated_at": "2017-10-28T20:07:14Z", "closed_at": null, "author_association": "NONE", "body": "I didn't know that feature until I check codes from both libgit2 and pygit2. I think it would be helpful to have that documented in http://www.pygit2.org/remotes.html.\r\n\r\nGoogling reveals another confused developer like me :-) https://github.com/saltstack/salt/issues/40008#issuecomment-286434931", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/events", "html_url": "https://github.com/libgit2/pygit2/issues/729", "id": 267666642, "number": 729, "title": "pygit2 installation error. ", "user": {"login": "santublr", "id": 3136174, "avatar_url": "https://avatars2.githubusercontent.com/u/3136174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santublr", "html_url": "https://github.com/santublr", "followers_url": "https://api.github.com/users/santublr/followers", "following_url": "https://api.github.com/users/santublr/following{/other_user}", "gists_url": "https://api.github.com/users/santublr/gists{/gist_id}", "starred_url": "https://api.github.com/users/santublr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santublr/subscriptions", "organizations_url": "https://api.github.com/users/santublr/orgs", "repos_url": "https://api.github.com/users/santublr/repos", "events_url": "https://api.github.com/users/santublr/events{/privacy}", "received_events_url": "https://api.github.com/users/santublr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T13:24:55Z", "updated_at": "2017-10-24T13:34:31Z", "closed_at": null, "author_association": "NONE", "body": "This issue which I'm reporting may be repetative one, but after googling and trying all the options I'm still not able to load the right pygit2.\r\n\r\npygit2 version 0.22.0\r\nlibgit2 version 0.22.0\r\npycparse version 2.18\r\ncffi version 0.9.2\r\nPython Version 3.3.2\r\nOS CentOS release 6.8 (Fina\r\n\r\n\r\npython3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LD_LIBRARY_PATH=$LIBGIT2/lib\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LIBGIT2=/usr/local\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/events", "html_url": "https://github.com/libgit2/pygit2/issues/727", "id": 265532038, "number": 727, "title": "create_commit does not update the reflog", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:28:12Z", "updated_at": "2017-10-14T23:28:12Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI have noticed that v0.26.0 of `create_commit` does not create an entry in the reflog for the initial commit of a branch.\r\n\r\n```python\r\n/private/tmp\r\n4> mkdir d\r\n\r\n/private/tmp\r\n5> cd d\r\n/private/tmp/d\r\n\r\n/private/tmp/d\r\n6> import pygit2\r\n\r\n/private/tmp/d\r\n7> repo = pygit2.init_repository(\".\")\r\n\r\n/private/tmp/d\r\n8> repo.config[\"user.email\"] = \"foo@bar.com\"\r\n\r\n/private/tmp/d\r\n9> foo = repo.create_blob(\"foo\")\r\n\r\n/private/tmp/d\r\n10> builder = repo.TreeBuilder()\r\n\r\n/private/tmp/d\r\n11> builder.insert(\"foo\", foo, pygit2.GIT_FILEMODE_BLOB)\r\n\r\n/private/tmp/d\r\n12> tree_id = builder.write()\r\n\r\n/private/tmp/d\r\n13> repo.create_commit(\"refs/test\", repo.default_signature, repo.default_signature, \"test\", tre\r\n13: e_id, [])\r\n13> f610cdd139fab6f738dfaff52839a552a6b8bb9e\r\n\r\n/private/tmp/d\r\n14> git reflog refs/test\r\n  File \"<ipython-input-14-afa1bc8c3c03>\", line 1\r\n    git reflog refs/test\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n/private/tmp/d\r\n15> !git reflog refs/test\r\n\r\n/private/tmp/d\r\n16> !git --no-pager reflog refs/test\r\n\r\n/private/tmp/d\r\n17> repo.references[\"refs/test\"].log\r\n17> <function Reference.log>\r\n\r\n/private/tmp/d\r\n18> repo.references[\"refs/test\"].log()\r\n18> <_pygit2.RefLogIter at 0x10db93bc0>\r\n\r\n/private/tmp/d\r\n19> list(repo.references[\"refs/test\"].log())\r\n19> []\r\n```\r\n\r\nHowever it works it is not an initial commit.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/events", "html_url": "https://github.com/libgit2/pygit2/issues/726", "id": 265531696, "number": 726, "title": "revparse_single does not understand date", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:22:03Z", "updated_at": "2017-10-14T23:22:03Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\n`revparse_single` does not support date parsing:\r\n\r\n$ git rev-parse 'HEAD@{2 weeks ago}'\r\neebac5f1c21ec78e098a8f7b60facd726b30844e\r\n$ python3 -c 'import pygit2; pygit2.Repository(\".\").revparse_single(\"HEAD@{2 weeks ago}\")'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nKeyError: 'HEAD@{2 weeks ago}'\r\n\r\nI am using version 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/events", "html_url": "https://github.com/libgit2/pygit2/issues/725", "id": 263573001, "number": 725, "title": "Support for Custom Merge drivers?", "user": {"login": "white-gecko", "id": 1018168, "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-06T21:11:57Z", "updated_at": "2017-10-06T21:11:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Is there any way of using a custom merge driver in pygit2? I've see this for libgit2: https://github.com/libgit2/libgit2/pull/3564 is this also possible to be used with pygit2 as it is?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/events", "html_url": "https://github.com/libgit2/pygit2/issues/724", "id": 256558064, "number": 724, "title": "How can I get current Tag reference?", "user": {"login": "smelnikov", "id": 13030121, "avatar_url": "https://avatars0.githubusercontent.com/u/13030121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smelnikov", "html_url": "https://github.com/smelnikov", "followers_url": "https://api.github.com/users/smelnikov/followers", "following_url": "https://api.github.com/users/smelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/smelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/smelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smelnikov/subscriptions", "organizations_url": "https://api.github.com/users/smelnikov/orgs", "repos_url": "https://api.github.com/users/smelnikov/repos", "events_url": "https://api.github.com/users/smelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/smelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T01:27:14Z", "updated_at": "2017-09-11T01:27:14Z", "closed_at": null, "author_association": "NONE", "body": "First, I checkout TAG from my repo. \r\nThen I need resolve name of this TAG. But I can't get relevant reference object (HEAD is detached).\r\nPlease tell me, how this can be done?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/events", "html_url": "https://github.com/libgit2/pygit2/issues/723", "id": 252168529, "number": 723, "title": "GIT_SORT_TOPOLOGICAL is document backwards.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-23T05:59:38Z", "updated_at": "2017-08-23T06:00:26Z", "closed_at": null, "author_association": "NONE", "body": "The documentation states that parents come before children, but actually children come before parents.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/events", "html_url": "https://github.com/libgit2/pygit2/issues/722", "id": 248080008, "number": 722, "title": "Support `git bundle create`", "user": {"login": "ashmastaflash", "id": 5561645, "avatar_url": "https://avatars1.githubusercontent.com/u/5561645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashmastaflash", "html_url": "https://github.com/ashmastaflash", "followers_url": "https://api.github.com/users/ashmastaflash/followers", "following_url": "https://api.github.com/users/ashmastaflash/following{/other_user}", "gists_url": "https://api.github.com/users/ashmastaflash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashmastaflash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashmastaflash/subscriptions", "organizations_url": "https://api.github.com/users/ashmastaflash/orgs", "repos_url": "https://api.github.com/users/ashmastaflash/repos", "events_url": "https://api.github.com/users/ashmastaflash/events{/privacy}", "received_events_url": "https://api.github.com/users/ashmastaflash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-04T18:16:58Z", "updated_at": "2017-08-04T18:16:58Z", "closed_at": null, "author_association": "NONE", "body": "Ideal form would be to have a class method for Repository that accepts a single argument for the output file path.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/events", "html_url": "https://github.com/libgit2/pygit2/pull/719", "id": 246313508, "number": 719, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch"}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/events", "html_url": "https://github.com/libgit2/pygit2/issues/717", "id": 245668433, "number": 717, "title": "How to solve 'LIBSSH2 not found.'?", "user": {"login": "pklim101", "id": 4819579, "avatar_url": "https://avatars3.githubusercontent.com/u/4819579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pklim101", "html_url": "https://github.com/pklim101", "followers_url": "https://api.github.com/users/pklim101/followers", "following_url": "https://api.github.com/users/pklim101/following{/other_user}", "gists_url": "https://api.github.com/users/pklim101/gists{/gist_id}", "starred_url": "https://api.github.com/users/pklim101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pklim101/subscriptions", "organizations_url": "https://api.github.com/users/pklim101/orgs", "repos_url": "https://api.github.com/users/pklim101/repos", "events_url": "https://api.github.com/users/pklim101/events{/privacy}", "received_events_url": "https://api.github.com/users/pklim101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T09:57:14Z", "updated_at": "2017-08-11T22:05:10Z", "closed_at": null, "author_association": "NONE", "body": "when I execute the command 'cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/libgit2',\r\nI have the output bellow\uff1a\r\n\r\n> \r\n\r\n-- Checking for module 'libcurl' \r\n--   Found libcurl, version 7.15.5  \r\n-- Could NOT find HTTP_Parser (missing: HTTP_PARSER_INCLUDE_DIR HTTP_PARSER_LIBRARY)   \r\n-- http-parser version 2 was not found; using bundled 3rd-party sources.  \r\n-- Checking for module 'libssh2'  \r\n--   No package 'libssh2' found  \r\n-- LIBSSH2 not found. Set CMAKE_PREFIX_PATH if it is installed outside of the default search path.\r\n\r\nthere are two module not fund, How can I solve it? thanks!", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/events", "html_url": "https://github.com/libgit2/pygit2/issues/716", "id": 244237603, "number": 716, "title": "pygit2.GIT_DIFF_IGNORE_WHITESPACE result Inconsistent", "user": {"login": "tongtongtongtong", "id": 22701681, "avatar_url": "https://avatars2.githubusercontent.com/u/22701681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongtongtongtong", "html_url": "https://github.com/tongtongtongtong", "followers_url": "https://api.github.com/users/tongtongtongtong/followers", "following_url": "https://api.github.com/users/tongtongtongtong/following{/other_user}", "gists_url": "https://api.github.com/users/tongtongtongtong/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongtongtongtong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongtongtongtong/subscriptions", "organizations_url": "https://api.github.com/users/tongtongtongtong/orgs", "repos_url": "https://api.github.com/users/tongtongtongtong/repos", "events_url": "https://api.github.com/users/tongtongtongtong/events{/privacy}", "received_events_url": "https://api.github.com/users/tongtongtongtong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-20T03:46:20Z", "updated_at": "2017-07-20T03:46:20Z", "closed_at": null, "author_association": "NONE", "body": "git command:\r\ndiff --git a/Makefile b/Makefile\r\nindex bb20e89..c25d045 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -3,4 +3,5 @@ install:\r\n \r\n clean: \r\n        rm -rf tgit-statistics \r\n+       \r\n qed \r\n\\ No newline at end of file\r\n\r\npygit2:\r\nrepo.diff(from_id, to_id, cached=True, flags=pygit2.GIT_DIFF_IGNORE_WHITESPACE, context_lines=3, interhunk_lines=3)\r\n\r\ndiff --git a/Makefile b/Makefile\r\nindex bb2..c25 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -5,0 +6 @@ clean:\r\n+", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/events", "html_url": "https://github.com/libgit2/pygit2/issues/712", "id": 236881017, "number": 712, "title": "`Repository.diff(cached=True)` does not list diffs for indexed files", "user": {"login": "jbaiter", "id": 608610, "avatar_url": "https://avatars2.githubusercontent.com/u/608610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaiter", "html_url": "https://github.com/jbaiter", "followers_url": "https://api.github.com/users/jbaiter/followers", "following_url": "https://api.github.com/users/jbaiter/following{/other_user}", "gists_url": "https://api.github.com/users/jbaiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaiter/subscriptions", "organizations_url": "https://api.github.com/users/jbaiter/orgs", "repos_url": "https://api.github.com/users/jbaiter/repos", "events_url": "https://api.github.com/users/jbaiter/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-19T12:53:13Z", "updated_at": "2017-06-19T12:54:05Z", "closed_at": null, "author_association": "NONE", "body": "This is with pygit2 version 0.24.0.\r\n\r\n```\r\n$ git init\r\nInitialized empty Git repository in /tmp/minimal/.git/\r\n$ touch foo\r\n$ git add foo\r\n$ git commit -am \"First commit\"\r\n[master (root-commit) 3551222] First commit\r\n 1 file changed, 0 insertions(+), 0 deletions(-)\r\n create mode 100644 foo\r\n$ echo \"foobar\" >> foo                                                                                                                                                                                                                                                                                 \r\n$ git add foo\r\n$ git diff --cached\r\ndiff --git a/foo b/foo\r\nindex e69de29..323fae0 100644\r\n--- a/foo\r\n+++ b/foo\r\n@@ -0,0 +1 @@\r\n+foobar\r\n$ python\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> list(repo.diff(cached=True))\r\n[]\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/events", "html_url": "https://github.com/libgit2/pygit2/issues/709", "id": 227439477, "number": 709, "title": "Type Annotations", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T17:25:07Z", "updated_at": "2017-05-15T11:20:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I was thinking of adding type annotations to some of the APIs to assist IDEs in parsing them and providing useful completion.\r\n\r\nSince it currently does not exist in the code, I preferred asking before coding.\r\nDue to supporting both Python 2 and 3, I think the way to do it is to use syntax present [here](http://mypy.readthedocs.io/en/latest/python2.html).\r\n\r\nThere are some drawbacks:\r\n1. Adding a new dependency - the `typing` package\r\n1. Annotation comments are not the prettiest thing\r\n\r\nBut if we only the do the required minimum, we get more clarity when using the library, and can also use `mypy` as a verification step for new code.\r\n\r\n@jdavid what is your opinion?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/events", "html_url": "https://github.com/libgit2/pygit2/pull/705", "id": 226006218, "number": 705, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/events", "html_url": "https://github.com/libgit2/pygit2/issues/704", "id": 225966764, "number": 704, "title": "How to implement (un)staging and query staging status ?", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T12:18:01Z", "updated_at": "2017-05-03T14:31:39Z", "closed_at": null, "author_association": "NONE", "body": "Not a bug, but I cannot figure out how to achieve this using pygit2 / libgit. Does someone have clues about this ?\r\n\r\nI tried to get information from this page http://www.pygit2.org/working-copy.html and I found https://github.com/libgit2/libgit2sharp/blob/master/LibGit2Sharp/Commands/Stage.cs and https://github.com/libgit2/libgit2/issues/3632\r\n\r\nI want to implement staging feature to my code review tools: https://github.com/FabriceSalvaire/CodeReview\r\n\r\n**Is http://stackoverflow.com/questions/tagged/libgit2 the right place to discuss on pygit2 ???**", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/events", "html_url": "https://github.com/libgit2/pygit2/issues/702", "id": 223249497, "number": 702, "title": "Repository.update_submodules() got Request failed with status code: 401", "user": {"login": "niven823", "id": 21955739, "avatar_url": "https://avatars3.githubusercontent.com/u/21955739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niven823", "html_url": "https://github.com/niven823", "followers_url": "https://api.github.com/users/niven823/followers", "following_url": "https://api.github.com/users/niven823/following{/other_user}", "gists_url": "https://api.github.com/users/niven823/gists{/gist_id}", "starred_url": "https://api.github.com/users/niven823/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niven823/subscriptions", "organizations_url": "https://api.github.com/users/niven823/orgs", "repos_url": "https://api.github.com/users/niven823/repos", "events_url": "https://api.github.com/users/niven823/events{/privacy}", "received_events_url": "https://api.github.com/users/niven823/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-21T01:37:08Z", "updated_at": "2017-04-21T01:37:49Z", "closed_at": null, "author_association": "NONE", "body": "I thought update_submodules()'s requires adding parameter of callbacks for RemoteCallbacks.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/events", "html_url": "https://github.com/libgit2/pygit2/issues/699", "id": 219887420, "number": 699, "title": "libssh2", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T12:47:34Z", "updated_at": "2017-04-06T14:09:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I think it would be good to add libssh2 to the builds to provide SSH support.\r\nOn Windows it takes quite some work to get it working (no success yet on my side). Haven't tried other OSs yet.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/events", "html_url": "https://github.com/libgit2/pygit2/issues/693", "id": 214644960, "number": 693, "title": "[RFE] rebase routines", "user": {"login": "ignatenkobrain", "id": 2866862, "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-16T09:37:07Z", "updated_at": "2017-03-16T09:37:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "libgit2 supports rebasing, but pygit2 doesn't expose it. It would be very useful if it could.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/events", "html_url": "https://github.com/libgit2/pygit2/issues/687", "id": 201816677, "number": 687, "title": "Possible encoding problem with Repository.file_status", "user": {"login": "wme-at-contact-de", "id": 10048008, "avatar_url": "https://avatars3.githubusercontent.com/u/10048008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wme-at-contact-de", "html_url": "https://github.com/wme-at-contact-de", "followers_url": "https://api.github.com/users/wme-at-contact-de/followers", "following_url": "https://api.github.com/users/wme-at-contact-de/following{/other_user}", "gists_url": "https://api.github.com/users/wme-at-contact-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/wme-at-contact-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wme-at-contact-de/subscriptions", "organizations_url": "https://api.github.com/users/wme-at-contact-de/orgs", "repos_url": "https://api.github.com/users/wme-at-contact-de/repos", "events_url": "https://api.github.com/users/wme-at-contact-de/events{/privacy}", "received_events_url": "https://api.github.com/users/wme-at-contact-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-19T10:16:04Z", "updated_at": "2017-07-23T20:28:47Z", "closed_at": null, "author_association": "NONE", "body": "If I try to get the status of a single file using Repository.file_status, I get a \"KeyError\" when the path contains non-ASCII characters like \"\u00e4\" or \"\\u00A0\" (non breaking space\").\r\n\r\nThe problem seems to be that \"Repository_status_file\" uses \"py_path_to_c_str\" to convert the path. Which encodes the path using the Python file system encoding.\r\n\r\nIf I encode the string myself using \"utf-8\", it works fine.\r\n\r\nNot sure whether this is a libgit2, pygit2 or Windows problem...\r\n\r\nUsing pygit-0.24.2 on Python 3.5, running on Windows 7.\r\nsys.getfilesystemencoding() returns \"mbcs\".\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/events", "html_url": "https://github.com/libgit2/pygit2/issues/686", "id": 200240979, "number": 686, "title": "`git_commit_amend` not available.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-11T23:46:59Z", "updated_at": "2017-04-05T19:08:00Z", "closed_at": null, "author_association": "NONE", "body": "Additionally `Repository.create_commit` fails if the first parent is not the tip of the branch being updated, so the behaviour cannot be fudged by making a new commit with the tip's parent.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/events", "html_url": "https://github.com/libgit2/pygit2/issues/684", "id": 197914703, "number": 684, "title": "repo.status() appears to be broken?", "user": {"login": "catsclaw", "id": 1660839, "avatar_url": "https://avatars2.githubusercontent.com/u/1660839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catsclaw", "html_url": "https://github.com/catsclaw", "followers_url": "https://api.github.com/users/catsclaw/followers", "following_url": "https://api.github.com/users/catsclaw/following{/other_user}", "gists_url": "https://api.github.com/users/catsclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/catsclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catsclaw/subscriptions", "organizations_url": "https://api.github.com/users/catsclaw/orgs", "repos_url": "https://api.github.com/users/catsclaw/repos", "events_url": "https://api.github.com/users/catsclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/catsclaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-28T20:54:24Z", "updated_at": "2017-04-12T11:15:15Z", "closed_at": null, "author_association": "NONE", "body": "I'm running `repo.status().items()` in a pre-commit hook using the `-a` flag (`git commit -a -m \"Test\"`), and I get a result that looks like this:\r\n\r\n`[('config/git_hooks/pre-commit', 256), ('bin/run_flake8', 256)]`\r\n\r\nIf I run `git status` in that same process, I get:\r\n\r\n    On branch ops_1331_fix\r\n    Your branch is ahead of 'origin/ops_1331_fix' by 2 commits.\r\n      (use \"git push\" to publish your local commits)\r\n    Changes to be committed:\r\n      (use \"git reset HEAD <file>...\" to unstage)\r\n    \r\n\t    modified:   bin/run_flake8\r\n\t    modified:   config/git_hooks/pre-commit\r\n\r\nIn other words, pygit2 is reporting those files as not being staged, and git is reporting them as being staged. Why the discrepancy?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/events", "html_url": "https://github.com/libgit2/pygit2/issues/683", "id": 197692934, "number": 683, "title": "DoS on wrong password", "user": {"login": "4s1", "id": 15968622, "avatar_url": "https://avatars1.githubusercontent.com/u/15968622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4s1", "html_url": "https://github.com/4s1", "followers_url": "https://api.github.com/users/4s1/followers", "following_url": "https://api.github.com/users/4s1/following{/other_user}", "gists_url": "https://api.github.com/users/4s1/gists{/gist_id}", "starred_url": "https://api.github.com/users/4s1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4s1/subscriptions", "organizations_url": "https://api.github.com/users/4s1/orgs", "repos_url": "https://api.github.com/users/4s1/repos", "events_url": "https://api.github.com/users/4s1/events{/privacy}", "received_events_url": "https://api.github.com/users/4s1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-27T11:59:05Z", "updated_at": "2016-12-27T11:59:05Z", "closed_at": null, "author_association": "NONE", "body": "As discussed in upstream bug report saltstack/salt#38230 pygit2 tries to authenticate indefinite with wrong credentials instead of failing after two consecutive failures with same authentication token as specified by https://tools.ietf.org/html/rfc7235#section-3.1\r\nPossible a libgit2 Bug if it's reproducable with other language bindings.\r\n\r\n\r\n## Testcase:\r\n### nginx dummy server configuration\r\nThis is just a stub configuration, no real repository needed\r\n````\r\nlocation ~ /git(/.*) {\r\n        add_header \"WWW-Authenticate\" \"Basic realm=\\\"Closed Areas\\\"\" always;\r\n        return 401;\r\n    }\r\n````\r\n### test client\r\n````python\r\n#!/bin/python2.7\r\n\r\nimport pygit2\r\n\r\nusername = 'dummyUser'\r\npassword = 'dummyPassword'\r\ncredentials = pygit2.UserPass(username, password)\r\ncallbacks = pygit2.RemoteCallbacks(credentials)\r\npygit2.clone_repository(\"http://git.demo.local/git/test.git\", \"test.git\", bare=True, callbacks=callbacks)\r\n\r\n````", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/events", "html_url": "https://github.com/libgit2/pygit2/issues/680", "id": 195430797, "number": 680, "title": "`peel` arguments inconsistent.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-14T03:22:33Z", "updated_at": "2016-12-14T03:27:17Z", "closed_at": null, "author_association": "NONE", "body": "`peel` is implemented twice, once in `object.c` and once in `reference.c`.  In the first it requires an argument and in the second it provides a default argument of `None`.  This is confusing when branches can be 'default' peeled but tags cannot.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "bf74b2a99341437a755390c692ae04a21737c9d7", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "message": "Merge remote-tracking branch 'white-gecko/patch-1'", "tree": {"sha": "90372a6c64296581f6004326b82478a9900de2ce", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/90372a6c64296581f6004326b82478a9900de2ce"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "html_url": "https://github.com/libgit2/pygit2/commit/bf74b2a99341437a755390c692ae04a21737c9d7", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1494574fff619ef135119487980d751877af20c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c"}, {"sha": "39a50d9d048a0abc5fd5ded6be4339818f169144", "url": "https://api.github.com/repos/libgit2/pygit2/commits/39a50d9d048a0abc5fd5ded6be4339818f169144", "html_url": "https://github.com/libgit2/pygit2/commit/39a50d9d048a0abc5fd5ded6be4339818f169144"}]}, {"sha": "a1494574fff619ef135119487980d751877af20c", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "message": "Fixing ImportError in some cases, bug #658", "tree": {"sha": "63a4efe447cb8ff08263a3786fdbcc37ca57f0d6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/63a4efe447cb8ff08263a3786fdbcc37ca57f0d6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a1494574fff619ef135119487980d751877af20c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6"}]}, {"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "message": "Fix running the tests with tox", "tree": {"sha": "c768091b0673dbe4b4cb5cf7081be567d7d556dd", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c768091b0673dbe4b4cb5cf7081be567d7d556dd"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674"}]}, {"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "message": "Implement update_submodules using ffi.", "tree": {"sha": "a91589d9a9d0103efd043edddeadc95290963149", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a91589d9a9d0103efd043edddeadc95290963149"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab"}]}, {"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-22T06:29:21Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:17:05Z"}, "message": "Add wrongly deleted declaration.", "tree": {"sha": "52450ede7a41ae941f5cd003298f1f1140ddf828", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52450ede7a41ae941f5cd003298f1f1140ddf828"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930"}]}, {"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-12T06:01:36Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:16:45Z"}, "message": "Import submodule_update related options.", "tree": {"sha": "95c532ebf0bca85f6f58a13f4f58956461cb369a", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/95c532ebf0bca85f6f58a13f4f58956461cb369a"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f"}]}, {"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "message": "Release 0.26.3", "tree": {"sha": "881d41e22784e868ae1318f5c0dbf20d7e36876c", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/881d41e22784e868ae1318f5c0dbf20d7e36876c"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4"}]}, {"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "e220542375858a5bbbbd1bdcba7dbe3ffeacba80", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/e220542375858a5bbbbd1bdcba7dbe3ffeacba80"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d"}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f"}]}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "message": "Fix patch-after-blob-free", "tree": {"sha": "96fe0f1ff9c62962b41083ab372b727cdf24ddc6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/96fe0f1ff9c62962b41083ab372b727cdf24ddc6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "message": "Add similar blob test", "tree": {"sha": "c662230906193e47f42bcb0e925585a8c6865915", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c662230906193e47f42bcb0e925585a8c6865915"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856"}]}, {"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "86ff5a4794a875dbbf3485cf87453308b5754e8b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/86ff5a4794a875dbbf3485cf87453308b5754e8b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591"}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "message": "Make broken patch tests be less nebulous", "tree": {"sha": "11cd577932e13657d58f63426704152f51e5a233", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/11cd577932e13657d58f63426704152f51e5a233"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed"}]}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "message": "Review Patch, fixes #757", "tree": {"sha": "2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba"}]}, {"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "message": "test_patch: assertEquals -> assertEqual", "tree": {"sha": "8e8bad74ee870513431f4a44cd49d490b4c28cff", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/8e8bad74ee870513431f4a44cd49d490b4c28cff"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2"}]}, {"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "message": "New Diff.deltas iterable", "tree": {"sha": "b40359f508cbfa84d99d9c53ee4e2988bb2bc232", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b40359f508cbfa84d99d9c53ee4e2988bb2bc232"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82"}]}, {"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "message": "Add more patch and blob tests that could fail", "tree": {"sha": "bf2e724171f16d9ec8531f976547f0e629576566", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/bf2e724171f16d9ec8531f976547f0e629576566"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "message": "Add contextlines, interhunk lines to Patch.create_from", "tree": {"sha": "b5e7d69785e2d07db3e9e82256c1745bdd412043", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b5e7d69785e2d07db3e9e82256c1745bdd412043"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "a96da22cbf456fe2181e196877845b590cede606", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "message": "Dont create blobs on the fly in test_patch, make patch kwargs", "tree": {"sha": "a1a264f20ad9cf85f0a0d09921486e4fde071e0f", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a1a264f20ad9cf85f0a0d09921486e4fde071e0f"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a96da22cbf456fe2181e196877845b590cede606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b"}]}, {"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "commit": {"author": {"name": "Matthias Bartelme\u00df", "email": "mba@fourplusone.de", "date": "2017-12-02T12:37:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-02T12:37:38Z"}, "message": "Clear clone_repo in Prune Test", "tree": {"sha": "a6e37143b7bee4564aaa3f12f9933dd32ae87c46", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a6e37143b7bee4564aaa3f12f9933dd32ae87c46"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIp6SCRBK7hj4Ov3rIwAAdHIIAJIthg2oofQptPXj6W09jvbH\n/wTIXOLh3iIQSLYXyQ1c6/WZxuBAlCmkA3TP0ztEO/Ejz7Y7U6FSbgvlylQaW+w7\n3O5MuW6q0LvzxEG8hovjETub1/7Vz4LbSWVuAcSjBZngv0x78rA5qDKFyq3xN0sh\nDOahzA3RMqpmfuDeHTPe7tlkZ0eeD2HGjWeWZojywfiI0FHOLurz7/Q95UHmDwa2\niBXiEbFNd2B7+GHk0ds4dS7jjj8FSoanXwz2aQaqejYcUNTIKX3LXed88AdN7izG\nkkmY/qZLBtQ3tgrcSFMSvWYmCXLmRhpkXOrsrS4mKHUMLuGWT/5xc0QOvPLofUI=\n=ILgC\n-----END PGP SIGNATURE-----\n", "payload": "tree a6e37143b7bee4564aaa3f12f9933dd32ae87c46\nparent d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756\nauthor Matthias Bartelme\u00df <mba@fourplusone.de> 1512218258 +0100\ncommitter GitHub <noreply@github.com> 1512218258 +0100\n\nClear clone_repo in Prune Test"}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b/comments", "author": {"login": "fourplusone", "id": 25514, "avatar_url": "https://avatars2.githubusercontent.com/u/25514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fourplusone", "html_url": "https://github.com/fourplusone", "followers_url": "https://api.github.com/users/fourplusone/followers", "following_url": "https://api.github.com/users/fourplusone/following{/other_user}", "gists_url": "https://api.github.com/users/fourplusone/gists{/gist_id}", "starred_url": "https://api.github.com/users/fourplusone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fourplusone/subscriptions", "organizations_url": "https://api.github.com/users/fourplusone/orgs", "repos_url": "https://api.github.com/users/fourplusone/repos", "events_url": "https://api.github.com/users/fourplusone/events{/privacy}", "received_events_url": "https://api.github.com/users/fourplusone/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756"}]}, {"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:10:52Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:18:38Z"}, "message": "Move declarations to top of functions", "tree": {"sha": "6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d"}]}, {"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:56:42Z"}, "message": "Release 0.26.2", "tree": {"sha": "692747fc3e936f82e8800e1b997d63d6f60ba0b6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/692747fc3e936f82e8800e1b997d63d6f60ba0b6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c"}]}, {"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:23:10Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:25:51Z"}, "message": "Add my name, for the fame", "tree": {"sha": "6b16298432ab07a93bc5e40a75d88a4410159dfc", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6b16298432ab07a93bc5e40a75d88a4410159dfc"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc"}]}, {"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "message": "test: use self.assertXXX not assert\n\nBecause we use unittest, not pytest.", "tree": {"sha": "52201c58185e44703811989c1968c50576938bc4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52201c58185e44703811989c1968c50576938bc4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/4804143f5590cf989f162973ec3a99c8314607bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8944d0208a7468ec7d378247356677829b87766b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b"}]}, {"sha": "8944d0208a7468ec7d378247356677829b87766b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "message": "Merge remote-tracking branch 'cecedille1/fetch-prune'", "tree": {"sha": "34e83687d80e16b3d0e651120084d3352b2823fa", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/34e83687d80e16b3d0e651120084d3352b2823fa"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/8944d0208a7468ec7d378247356677829b87766b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6"}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6"}]}, {"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "message": "Add bad arg tests to test_patch", "tree": {"sha": "277cdea2f0dee19f64acab7d11a6474ede8d5927", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/277cdea2f0dee19f64acab7d11a6474ede8d5927"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1"}]}, {"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "message": "Add static Patch.create_from method to create patches", "tree": {"sha": "2f4641b0c3a7badc871844ae756834d2ffca39b4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2f4641b0c3a7badc871844ae756834d2ffca39b4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b"}]}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "message": "Add my name, for the fame", "tree": {"sha": "0c5ce621d568e08babbc971ac1de91d1a56441c1", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/0c5ce621d568e08babbc971ac1de91d1a56441c1"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732"}]}, {"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "message": "Implement prune option for fetch", "tree": {"sha": "b74c2169ec55bb7b04b88988c80b1bf362c94bb2", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b74c2169ec55bb7b04b88988c80b1bf362c94bb2"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0"}]}, {"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "message": "Export the constants GIT_FETCH_PRUNE_*", "tree": {"sha": "5709577f3134659270dcb67e32262232dd39067b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/5709577f3134659270dcb67e32262232dd39067b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}, {"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "message": "docs: diff, add missing members", "tree": {"sha": "4d35778d5da21941f7f9288b31d733d99fec30f0", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/4d35778d5da21941f7f9288b31d733d99fec30f0"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "id": 132943348, "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "number": 719, "state": "open", "locked": false, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "98fda364c4fdd26bb7ae1d63fd0f4c819ef31bfd", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "head": {"label": "nhynes:rebased-worktrees", "ref": "rebased-worktrees", "sha": "8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "repo": {"id": 86384396, "name": "pygit2", "full_name": "nhynes/pygit2", "owner": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/nhynes/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/nhynes/pygit2", "forks_url": "https://api.github.com/repos/nhynes/pygit2/forks", "keys_url": "https://api.github.com/repos/nhynes/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/nhynes/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/nhynes/pygit2/teams", "hooks_url": "https://api.github.com/repos/nhynes/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/nhynes/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/nhynes/pygit2/events", "assignees_url": "https://api.github.com/repos/nhynes/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/nhynes/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/nhynes/pygit2/tags", "blobs_url": "https://api.github.com/repos/nhynes/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/nhynes/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/nhynes/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/nhynes/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/nhynes/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/nhynes/pygit2/languages", "stargazers_url": "https://api.github.com/repos/nhynes/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/nhynes/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/nhynes/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/nhynes/pygit2/subscription", "commits_url": "https://api.github.com/repos/nhynes/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/nhynes/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/nhynes/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/nhynes/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/nhynes/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/nhynes/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/nhynes/pygit2/merges", "archive_url": "https://api.github.com/repos/nhynes/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/nhynes/pygit2/downloads", "issues_url": "https://api.github.com/repos/nhynes/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/nhynes/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/nhynes/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/nhynes/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/nhynes/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/nhynes/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/nhynes/pygit2/deployments", "created_at": "2017-03-27T21:11:34Z", "updated_at": "2017-03-27T21:11:36Z", "pushed_at": "2017-07-29T01:55:56Z", "git_url": "git://github.com/nhynes/pygit2.git", "ssh_url": "git@github.com:nhynes/pygit2.git", "clone_url": "https://github.com/nhynes/pygit2.git", "svn_url": "https://github.com/nhynes/pygit2", "homepage": "", "size": 2877, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "24d385a88f9a4e2540ea2c04fa86d76e7c4e17ee", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/719"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "id": 118775335, "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "number": 705, "state": "open", "locked": false, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "04ce62259b3baec23ef043cb793b0eeb62b6438b", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215", "head": {"label": "FabriceSalvaire:master", "ref": "master", "sha": "bdeb03747261ca134be24eb87606b492187cc215", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "repo": {"id": 90155264, "name": "pygit2", "full_name": "FabriceSalvaire/pygit2", "owner": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/FabriceSalvaire/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/FabriceSalvaire/pygit2", "forks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/forks", "keys_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/teams", "hooks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/events", "assignees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/tags", "blobs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/languages", "stargazers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscription", "commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/merges", "archive_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/downloads", "issues_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/deployments", "created_at": "2017-05-03T14:00:19Z", "updated_at": "2017-05-03T14:00:21Z", "pushed_at": "2017-05-03T14:28:16Z", "git_url": "git://github.com/FabriceSalvaire/pygit2.git", "ssh_url": "git@github.com:FabriceSalvaire/pygit2.git", "clone_url": "https://github.com/FabriceSalvaire/pygit2.git", "svn_url": "https://github.com/FabriceSalvaire/pygit2", "homepage": "", "size": 2858, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/705"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/538", "id": 38147484, "html_url": "https://github.com/libgit2/pygit2/pull/538", "diff_url": "https://github.com/libgit2/pygit2/pull/538.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/538.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/538", "number": 538, "state": "open", "locked": false, "title": "Add certificate callback.", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "body": "Existing unit tests pass. Adapted from `__init__.py`.\n", "created_at": "2015-06-19T21:01:21Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "44b25ca81b0424595467102f75733d627fc99b3e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "head": {"label": "alexchamberlain:certificate-check", "ref": "certificate-check", "sha": "d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "repo": {"id": 37744353, "name": "pygit2", "full_name": "alexchamberlain/pygit2", "owner": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/alexchamberlain/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/alexchamberlain/pygit2", "forks_url": "https://api.github.com/repos/alexchamberlain/pygit2/forks", "keys_url": "https://api.github.com/repos/alexchamberlain/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexchamberlain/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexchamberlain/pygit2/teams", "hooks_url": "https://api.github.com/repos/alexchamberlain/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/alexchamberlain/pygit2/events", "assignees_url": "https://api.github.com/repos/alexchamberlain/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/alexchamberlain/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/tags", "blobs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexchamberlain/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexchamberlain/pygit2/languages", "stargazers_url": "https://api.github.com/repos/alexchamberlain/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/alexchamberlain/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscription", "commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexchamberlain/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexchamberlain/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/alexchamberlain/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexchamberlain/pygit2/merges", "archive_url": "https://api.github.com/repos/alexchamberlain/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexchamberlain/pygit2/downloads", "issues_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/alexchamberlain/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexchamberlain/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexchamberlain/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexchamberlain/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/alexchamberlain/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/alexchamberlain/pygit2/deployments", "created_at": "2015-06-19T20:28:49Z", "updated_at": "2015-06-19T20:28:50Z", "pushed_at": "2015-06-19T21:08:20Z", "git_url": "git://github.com/alexchamberlain/pygit2.git", "ssh_url": "git@github.com:alexchamberlain/pygit2.git", "clone_url": "https://github.com/alexchamberlain/pygit2.git", "svn_url": "https://github.com/alexchamberlain/pygit2", "homepage": "", "size": 2775, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/538"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/405", "id": 19969342, "html_url": "https://github.com/libgit2/pygit2/pull/405", "diff_url": "https://github.com/libgit2/pygit2/pull/405.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/405.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/405", "number": 405, "state": "open", "locked": false, "title": "Walker interface reimplemented with CFFI", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "I've reimplemented the `Walker` interface with CFFI; this is a first step towards reimplementing the entire pygit2 Object model with CFFI. It's supposed to be a straightforward rewrite, I haven't made any changes to the API to avoid breaking the backwards compatibility.\n", "created_at": "2014-08-19T09:33:24Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "af575f55908703a89366821cf6ab4fe3bcce48e2", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "head": {"label": "petrhosek:walker-cffi", "ref": "walker-cffi", "sha": "e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/405"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/346", "id": 12586459, "html_url": "https://github.com/libgit2/pygit2/pull/346", "diff_url": "https://github.com/libgit2/pygit2/pull/346.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/346.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/346", "number": 346, "state": "open", "locked": false, "title": "Diff and Patch interface refactored", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "This is a complete refactoring of the diff and patch interface. The changes include:\n- Splitting `Diff` and `Patch` into separate classes and files, including respective tests. This largely follwos the recent development in `libgit2`.\n- Introducing `DiffDelta`, `DiffFile` and `DiffLine` classes and their respective iterators.\n- Moving the recently introduced `Blob` diff methods into patch again to be in line with the respective `libgit2` interface.\n\nThe biggest difference, apart from the code cleanup, is the lazy evaluation due to heavy use of iterators rather than evaluating everything ahead of time as in case of the existing code, which tends to be slow on larger projects.\n\nI have tried to make the interface as \"Pythonic\" as possible, while closely following the underlying `libgit2` C interface. However, some of you might think of a better abstraction and I'd happy to incorporate further changes into the patch.\n", "created_at": "2014-02-15T20:56:20Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "82ab609cb820007df325b82d0180be8c21bd4e7e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205", "head": {"label": "petrhosek:diff-patch-refactor", "ref": "diff-patch-refactor", "sha": "34fd314631b443eae802aba2e712ca7ef9a08205", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/346"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596", "html_url": "https://github.com/libgit2/pygit2/issues/1#issuecomment-578596", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/1", "id": 578596, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:31:25Z", "updated_at": "2010-11-30T19:31:25Z", "author_association": "OWNER", "body": "Indeed, it was using the private clone URL. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600", "html_url": "https://github.com/libgit2/pygit2/issues/2#issuecomment-578600", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/2", "id": 578600, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:32:06Z", "updated_at": "2010-11-30T19:32:06Z", "author_association": "OWNER", "body": "Replaced the build instructions with a link to our website: that way it'll always be up to date.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-597958", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 597958, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2010-12-08T20:21:51Z", "updated_at": "2010-12-08T20:21:51Z", "author_association": "MEMBER", "body": "This changed in libgit2 as of\nhttps://github.com/libgit2/libgit2/commit/44908fe763b1a2097b65c86130ac679c458df7d2\n\nFeel free to update pygit2.c if I don't get the chance to soon.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355", "html_url": "https://github.com/libgit2/pygit2/pull/4#issuecomment-694355", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/4", "id": 694355, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-01-20T22:53:16Z", "updated_at": "2011-01-20T22:53:16Z", "author_association": "OWNER", "body": "Neat, thanks for this, but it looks like I got two pull requests for the same thing. ^^\n\nI've just merged the other one, and while I was at it fixed the test that was failing -- it was an issue in libgit2, so thanks for reporting.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-726750", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 726750, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-01-31T22:56:53Z", "updated_at": "2011-01-31T22:56:53Z", "author_association": "MEMBER", "body": "This appears to have been fixed by 9e919c39662ecc0f0080. I was able to build successfully at HEAD, so I'm going to close this issue. Let me know if you still have problems.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459", "html_url": "https://github.com/libgit2/pygit2/pull/6#issuecomment-739459", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/6", "id": 739459, "user": {"login": "peti", "id": 28323, "avatar_url": "https://avatars3.githubusercontent.com/u/28323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peti", "html_url": "https://github.com/peti", "followers_url": "https://api.github.com/users/peti/followers", "following_url": "https://api.github.com/users/peti/following{/other_user}", "gists_url": "https://api.github.com/users/peti/gists{/gist_id}", "starred_url": "https://api.github.com/users/peti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peti/subscriptions", "organizations_url": "https://api.github.com/users/peti/orgs", "repos_url": "https://api.github.com/users/peti/repos", "events_url": "https://api.github.com/users/peti/events{/privacy}", "received_events_url": "https://api.github.com/users/peti/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-04T16:13:55Z", "updated_at": "2011-02-04T16:13:55Z", "author_association": "NONE", "body": "I can confirm that this patch fixes the build error.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-750527", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 750527, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-08T17:48:08Z", "updated_at": "2011-02-08T17:48:45Z", "author_association": "OWNER", "body": "Hey, this is very nice, but the new compressed text repository is making the tests fail:\n\n```\nTraceback (most recent call last):\nFile \"/Users/tanoku/src/pygit2/test/utils.py\", line 74, in setUp\nz.extractall(temp_dir)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 940, in extractall\nself.extract(zipinfo, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 928, in extract\nreturn self._extract_member(member, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 965, in _extract_member\ntarget = file(targetpath, \"wb\")\nIOError: [Errno 20] Not a directory: '/var/folders/0d/0dHASpI3E9Ca1CvFczxbjU+++TI/-Tmp-/tmpdHiwtC/testrepo/bye.txt'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-751694", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 751694, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-08T22:33:57Z", "updated_at": "2011-02-08T22:33:57Z", "author_association": "MEMBER", "body": "I see from the traceback that you are using Python 2.6.1, it contains some bugs regarding zip files, like [issue 4710](http://bugs.python.org/issue4710). Could you try with a more recent version?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753331", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753331, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T10:56:26Z", "updated_at": "2011-02-09T10:56:26Z", "author_association": "OWNER", "body": "Hm, 2.5.4 fails too, with the following error:\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 87, in <module>\n    **kwargs\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 974, in                 run_commands\n    self.run_command(cmd)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 994, in run_command\n    cmd_obj.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 121, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 101, in with_project_on_sys_path\n    func()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 130, in run_tests\n    testLoader = loader_class()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 767, in __init__\n    self.parseArgs(argv)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 794, in parseArgs\n    self.createTests()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 800, in createTests\n    self.module)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 553, in loadTestsFromName\n    test = obj()\n  File \"/Users/tanoku/src/pygit2/test/__init__.py\", line 41, in test_suite\n    return unittest.defaultTestLoader.loadTestsFromNames(modules)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 541, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'test_blob'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753416", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753416, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T11:37:12Z", "updated_at": "2011-02-09T11:37:12Z", "author_association": "MEMBER", "body": "From the traceback it looks like this has nothing to do with my patches, no regression here.\n\nSupporting Python 2.5 would take more work. I think it is not worth the effort, it is an old version and pygit2 is clearly understaffed. I think it is more interesting to spend time on supporting new versions (Python 3) than on supporting old versions.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753753", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753753, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T13:50:26Z", "updated_at": "2011-02-09T13:50:26Z", "author_association": "OWNER", "body": "Fair enough -- the tests do work with Python 2.7. Nice job!\n\n...However, I'm afraid that 2.6 is still too mainstream as to have the tests broken on it. You need to work around the Zip issue on 2.6 before I can merge this. I'd suggest using GZip instead of Zip.\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753996", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753996, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:07:47Z", "updated_at": "2011-02-09T15:07:47Z", "author_association": "MEMBER", "body": "Accidentally I have reproduced the traceback you found with Python 2.5. It has nothing to do with 2.5 actually.\n\nIt happens pygit2 has two ways to run the tests. If setuptools is installed it will run the tests in-place. But if setuptools is not installed then you need to install pygit2 before running the tests (otherwise you will get that traceback), that's what the documentation says anyway:\n\n```\n$ python setup.py install\n$ python setup.py test\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754027", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754027, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:19:37Z", "updated_at": "2011-02-09T15:19:37Z", "author_association": "MEMBER", "body": "About Python 2.6, it works fine.\n\nJust tested myself and reproduced the same error with 2.6.1:\n\n  IOError: [Errno 20] Not a directory: '/tmp/tmp_W_Hl9/testrepo/bye.txt'\n\nBut the tests pass with 2.6.2 (which was released almost two years ago). By the way I use myself Python 2.6\n\nAnyway, I am going to replace zipfile by tarfile as you suggest, since it looks more robust (the tests may even pass with 2.5)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754072", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754072, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:34:26Z", "updated_at": "2011-02-09T15:34:26Z", "author_association": "MEMBER", "body": "Replaced zipfile by tarfile and now the tests pass even with Python 2.5 (on GNU/Linux, did not check Mac or Windows)\n\nIt was a bad idea to use zipfile in the first place.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754119", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754119, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T15:45:45Z", "updated_at": "2011-02-09T15:45:45Z", "author_association": "OWNER", "body": "This is perfect, thank you very much! Merging now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754264", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754264, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T16:16:15Z", "updated_at": "2011-02-09T16:16:15Z", "author_association": "MEMBER", "body": "cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439", "html_url": "https://github.com/libgit2/pygit2/pull/9#issuecomment-820439", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/9", "id": 820439, "user": {"login": "jszakmeister", "id": 448087, "avatar_url": "https://avatars1.githubusercontent.com/u/448087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jszakmeister", "html_url": "https://github.com/jszakmeister", "followers_url": "https://api.github.com/users/jszakmeister/followers", "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}", "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions", "organizations_url": "https://api.github.com/users/jszakmeister/orgs", "repos_url": "https://api.github.com/users/jszakmeister/repos", "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}", "received_events_url": "https://api.github.com/users/jszakmeister/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-01T00:09:54Z", "updated_at": "2011-03-01T00:09:54Z", "author_association": "CONTRIBUTOR", "body": "I realized that shortly after I submitted the pull request (and I thought I closed this one... but perhaps I forgot).  Thanks anyways!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-831360", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 831360, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-03T18:58:10Z", "updated_at": "2011-03-03T18:58:10Z", "author_association": "MEMBER", "body": "Hello,\n\nI have merged the branch 'add-commit-attributes' by John Szakmeister. This adds Commit.parents, I needed that to\nimplement the equivalent to \"git log -- path\".\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-833919", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 833919, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-04T11:22:05Z", "updated_at": "2011-03-04T11:22:05Z", "author_association": "MEMBER", "body": "This branch does not work after the recent changes to libgit2. I withdraw this pull request to open a new one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-847764", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 847764, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-08T16:20:53Z", "updated_at": "2011-03-08T16:20:53Z", "author_association": "MEMBER", "body": "You can try my fork of pygit2 where this has been fixed:\n\n```\ngit://github.com/jdavid/pygit2.git\n```\n\nI asked for my changes to be merged, see https://github.com/libgit2/pygit2/pull/11\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445", "html_url": "https://github.com/libgit2/pygit2/pull/11#issuecomment-876445", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/11", "id": 876445, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-15T14:48:19Z", "updated_at": "2011-03-15T14:48:19Z", "author_association": "MEMBER", "body": "There have been some more commits since I made this pull request, most important to keep pygit2 working after the changes to libgit2. But there are a few enhancements too:\n- New module function 'init_repository'\n- Added 'IndexEntry.path'\n- Started documentation on using pygit2\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-886641", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 886641, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-17T20:06:59Z", "updated_at": "2011-03-17T20:06:59Z", "author_association": "MEMBER", "body": "The changes have been merged upstream, so this is fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889196", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889196, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T13:34:29Z", "updated_at": "2011-03-18T13:34:29Z", "author_association": "MEMBER", "body": "pygit2 works with the 'master' branch of libgit2, commit b5c5f0f8086ee4\nis the tip of the 'development' branch\n\nOn Fri, 18 Mar 2011 05:31:07 -0700\nhonza\nreply@reply.github.com\nwrote:\n\n> Installed latest [libgit2][libgitsha], zlib and openssl. Using\n> [this][pysha] pygit2 revision, I can't get it to install:\n> \n> bash-3.2$ sudo python setup.py install\n> running install\n> running bdist_egg\n> running egg_info\n> writing pygit2.egg-info/PKG-INFO\n> writing top-level names to pygit2.egg-info/top_level.txt\n> writing dependency_links to pygit2.egg-info/dependency_links.txt\n> reading manifest file 'pygit2.egg-info/SOURCES.txt'\n> writing manifest file 'pygit2.egg-info/SOURCES.txt'\n> installing library code to build/bdist.macosx-10.6-universal/egg\n> running install_lib\n> running build_ext\n> building 'pygit2' extension\n> gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv\n> -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch ppc\n> -arch x86_64 -pipe -I/usr/local/include\n> -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6\n> -c pygit2.c -o build/temp.macosx-10.6-universal-2.6/pygit2.o\n> pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356: error: void\n> value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be lipo: can't open input file: /var/tmp//ccSxjred.out (No\n> such file or directory) error: command 'gcc-4.2' failed with exit\n> status 1\n> \n> [libgitsha]:\n> https://github.com/libgit2/libgit2/commit/b5c5f0f8086ee4e9bccf0703386fd5219ac380c2\n> \n> [pysha]:\n> https://github.com/libgit2/pygit2/commit/6c7df765c1a9a186e721826121f50d0286b4040e\n\n## \n\nJ. David Ib\u00e1\u00f1ez\nItaapy http://www.itaapy.com         Tel +33 (0)1 42 23 67 45\n9 rue Darwin, 75018 Paris              Fax +33 (0)1 53 28 27 88\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889316", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889316, "user": {"login": "honza", "id": 206357, "avatar_url": "https://avatars3.githubusercontent.com/u/206357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honza", "html_url": "https://github.com/honza", "followers_url": "https://api.github.com/users/honza/followers", "following_url": "https://api.github.com/users/honza/following{/other_user}", "gists_url": "https://api.github.com/users/honza/gists{/gist_id}", "starred_url": "https://api.github.com/users/honza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honza/subscriptions", "organizations_url": "https://api.github.com/users/honza/orgs", "repos_url": "https://api.github.com/users/honza/repos", "events_url": "https://api.github.com/users/honza/events{/privacy}", "received_events_url": "https://api.github.com/users/honza/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T14:13:32Z", "updated_at": "2011-03-18T14:13:32Z", "author_association": "NONE", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490", "html_url": "https://github.com/libgit2/pygit2/issues/14#issuecomment-940490", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/14", "id": 940490, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:43:47Z", "updated_at": "2011-03-31T10:43:47Z", "author_association": "MEMBER", "body": "I hope to update pygit2 by tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940505", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940505, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:51:00Z", "updated_at": "2011-03-31T10:51:00Z", "author_association": "MEMBER", "body": "I don't like the \"GPLv2 + exception\" for pygit2 either. Personally I would prefer LGPLv3, that would be fine to you?\n\nTo change the license the agreement of everybody that contributed to pygit2 is required, starting by Dave Borowitz, who has written more than half of it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940525", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940525, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T11:00:19Z", "updated_at": "2011-03-31T18:46:19Z", "author_association": "CONTRIBUTOR", "body": "According to wikipedia, the LGPL, even though it usually refers to library linking, may also be generalized into 'using' the library.\nAs python doesn't explicitly link pygit2 when importing it, the LGPL wouldn't really help unless we just regard pygit2 as being 'used' by my library. I don't know what lawyers say about that, but I would be fine with LGPL, from what I read in the wiki at least.\n\nPersonally I think the LGPL was designed just with dynamic and static libraries in mind, but maybe it can be widened to the general use of one library by another, no matter which system of linkage is actually employed.\n\nMaybe it would already be enough to adjust the linkage exemption to state that it may be linked to _and_ imported. This should be clear enough to allow git-python to use it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942629", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942629, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:25:33Z", "updated_at": "2011-03-31T19:25:33Z", "author_association": "MEMBER", "body": "On Thu, Mar 31, 2011 at 03:27, Byron <\nreply@reply.github.com>wrote:\n\n> Hi,\n> \n> As the answer to this question might be interesting for others as well, I\n> make it public using the issue system.\n> \n> Pygit2 uses the same license as libgit2, the GPL with linkage exception.\n> The problem I see is that this exception doesn't apply to the usage of\n> pygit2 within other python programs and libraries which are not necessarily\n> licensed under GPL.\n\nI've been assured by a lawyer that the linkage exception does apply to the\nnormal Python import mechanism. So you can safely \"import pygit2\" from a BSD\nproject without making that project GPL+exception. (You still cannot safely\nincorporate pygit2 source code in the source of a BSD project.)\n\n> For instance, I would be interested in using pygit2 in one of my projects,\n> gitdb, which in turn can be used by git-python. Both are licensed under\n> NewBSD, so I am worried that using pygit2 would compromise this license and\n> force it into the GPL.\n\nAs long as \"using\" == \"importing\", this is fine.\n\n> Could you please clarify the situation ?\n> Thank you,\n> Sebastian\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/libgit2/pygit2/issues/15\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942643", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942643, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:29:09Z", "updated_at": "2011-03-31T19:29:18Z", "author_association": "CONTRIBUTOR", "body": "Great to hear, thanks !\nI am quite eager to find out how libgit2 performs within the git-python streaming framework, so I will try to implement a gitdb which allows to obtain object information and object streams. Lets see how that works out :).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942714", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942714, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-03-31T19:45:32Z", "updated_at": "2011-03-31T19:45:32Z", "author_association": "OWNER", "body": "Hey, just stepping by to remind you that the linking exception is indeed _very_ permissive: you could even link your own Python library with a static version of libgit2 without it affecting your own program's license. I'm looking forward to see what can you come up with the git-python streaming framework. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-530320", "id": 530320, "user": {"login": "encukou", "id": 302922, "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-14T03:18:43Z", "updated_at": "2011-08-14T03:18:43Z", "author_association": "CONTRIBUTOR", "body": "Does this make sense for Python 2? Maybe the str & unicode types are too interchangeable there to select functionality based on them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-532550", "id": 532550, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-15T19:59:22Z", "updated_at": "2011-08-15T19:59:22Z", "author_association": "MEMBER", "body": "I think the behaviour must be the same for both Python 2 and 3, otherwise everything will be ore complicated (implementation, documentation, ...)\n\nBesides, in this case, the remark by @pyos [1] also applies to Python 2. Later on we will add to this method the ability to get an object by a short hex-sha, by calling `git_object_lookup_prefix`. If the hex-sha passed is 20 bytes long, how to know it is an hex-sha and not a raw-sha? I think to make the difference by the type is a fine solution.\n\n[1] https://github.com/libgit2/pygit2/issues/43#issuecomment-1791199\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621226", "id": 621226, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-29T22:38:07Z", "updated_at": "2011-09-29T22:38:07Z", "author_association": "NONE", "body": "May I ask what was the reasoning behind this change? I have to update all my code and tests now. :-(\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621935", "id": 621935, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-30T07:23:58Z", "updated_at": "2011-09-30T07:23:58Z", "author_association": "MEMBER", "body": "Readability. It is not evident whether the word \"sha\" refers to the raw oid (20 bytes byte string) or to its hexadecimal form (40 chars text string). At least `.hex` has the virtue of not being ambiguous.\n\nNote that now we also have `object.oid`, the raw oid as a 20 bytes byte string. And that the old `.sha` and the new `.hex` are not exactly the same, before `.sha` was a byte string, now `.hex` is a text (unicode) string. So this was the right time to make the change.\n\nAlso, pygit2 is still, like libgit2, alpha software. So changes to the API may happen from time to time, they will be documented on every release.\n\nThis commit is part of the work to fix issue 43, https://github.com/libgit2/pygit2/issues/43\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-626333", "id": 626333, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-10-03T11:58:07Z", "updated_at": "2011-10-03T11:58:07Z", "author_association": "NONE", "body": "Alright, understood. Without any other alternatives, we basically have no choice but to rely on alpha software\u2014so no worries about that, I realize that interfaces do change. I was just curious about the reasoning.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091", "html_url": "https://github.com/libgit2/pygit2/commit/c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04#commitcomment-1421091", "id": 1421091, "user": {"login": "luztak", "id": 1357267, "avatar_url": "https://avatars2.githubusercontent.com/u/1357267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luztak", "html_url": "https://github.com/luztak", "followers_url": "https://api.github.com/users/luztak/followers", "following_url": "https://api.github.com/users/luztak/following{/other_user}", "gists_url": "https://api.github.com/users/luztak/gists{/gist_id}", "starred_url": "https://api.github.com/users/luztak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luztak/subscriptions", "organizations_url": "https://api.github.com/users/luztak/orgs", "repos_url": "https://api.github.com/users/luztak/repos", "events_url": "https://api.github.com/users/luztak/events{/privacy}", "received_events_url": "https://api.github.com/users/luztak/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04", "created_at": "2012-06-06T05:05:29Z", "updated_at": "2012-06-06T05:05:29Z", "author_association": "NONE", "body": "Is there any func or class for push,please?Or could you tell me how push works?thx.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427309", "id": 2427309, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T13:17:17Z", "updated_at": "2013-01-13T13:17:17Z", "author_association": "CONTRIBUTOR", "body": "Typo in commit message, should be pygit2.com\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427780", "id": 2427780, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T18:14:39Z", "updated_at": "2013-01-13T18:14:39Z", "author_association": "MEMBER", "body": "www.pygit2.org actually, but it's to late to fix a commit message\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464644", "id": 2464644, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T15:40:53Z", "updated_at": "2013-01-19T15:40:53Z", "author_association": "CONTRIBUTOR", "body": "Is there a list where this is tracked? I spent about an hour trying to fix the broken linker on an old machine I was getting unresolved symbol errors on due to this one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464811", "id": 2464811, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:24:41Z", "updated_at": "2013-01-19T17:24:41Z", "author_association": "MEMBER", "body": "No. What I do is to keep a libgit2 clone and from time to time check whether pygit2 still works.\n\n(In my opinion, the problem is libgit2 does not release often enough.)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464823", "id": 2464823, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:30:51Z", "updated_at": "2013-01-19T17:30:51Z", "author_association": "CONTRIBUTOR", "body": "I agree completely. Having to have \"install libgit2 from their development head\" in the install instructions for my project is pretty awkward.\n\nIn this instance it was my fault for not diagnosing properly, I'll keep this in mind going forward. Cheers.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464834", "id": 2464834, "user": {"login": "wking", "id": 209920, "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wking", "html_url": "https://github.com/wking", "followers_url": "https://api.github.com/users/wking/followers", "following_url": "https://api.github.com/users/wking/following{/other_user}", "gists_url": "https://api.github.com/users/wking/gists{/gist_id}", "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wking/subscriptions", "organizations_url": "https://api.github.com/users/wking/orgs", "repos_url": "https://api.github.com/users/wking/repos", "events_url": "https://api.github.com/users/wking/events{/privacy}", "received_events_url": "https://api.github.com/users/wking/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:39:48Z", "updated_at": "2013-01-19T17:39:48Z", "author_association": "CONTRIBUTOR", "body": "On Sat, Jan 19, 2013 at 09:30:54AM -0800, Richo Healey wrote:\n\n> Having to have \"install libgit2 from their development head\" in the\n> install instructions for my project is pretty awkward.\n\nThis should all settle down once libgit2 freezes their API (soon?\nlibgit2/libgit2#1028).  In the mean time, there are usually known-good\nlibgit2 SHAs in the pygit2 upgrade commits.  The problem with _not_\ntracking the development branch of libgit2 is that their master branch\nhasn't been bumped since 2012-05-19, so lots of features are missing\nfrom the master branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382", "html_url": "https://github.com/libgit2/pygit2/commit/4b720472601e76e4bd2d0097def7613feb17b7f7#commitcomment-2548382", "id": 2548382, "user": {"login": "Gonnzik", "id": 3456303, "avatar_url": "https://avatars1.githubusercontent.com/u/3456303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gonnzik", "html_url": "https://github.com/Gonnzik", "followers_url": "https://api.github.com/users/Gonnzik/followers", "following_url": "https://api.github.com/users/Gonnzik/following{/other_user}", "gists_url": "https://api.github.com/users/Gonnzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gonnzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gonnzik/subscriptions", "organizations_url": "https://api.github.com/users/Gonnzik/orgs", "repos_url": "https://api.github.com/users/Gonnzik/repos", "events_url": "https://api.github.com/users/Gonnzik/events{/privacy}", "received_events_url": "https://api.github.com/users/Gonnzik/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "4b720472601e76e4bd2d0097def7613feb17b7f7", "created_at": "2013-02-02T16:48:48Z", "updated_at": "2013-02-02T16:48:48Z", "author_association": "NONE", "body": "\u0421 \u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0431\u043b\u044f (\u041a\u0430\u0440\u0430\u0441\u044c)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808", "html_url": "https://github.com/libgit2/pygit2/commit/673053dc7136cc6ba87296e23d3e817796928a99#commitcomment-2952808", "id": 2952808, "user": {"login": "cboos", "id": 153279, "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboos", "html_url": "https://github.com/cboos", "followers_url": "https://api.github.com/users/cboos/followers", "following_url": "https://api.github.com/users/cboos/following{/other_user}", "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboos/subscriptions", "organizations_url": "https://api.github.com/users/cboos/orgs", "repos_url": "https://api.github.com/users/cboos/repos", "events_url": "https://api.github.com/users/cboos/events{/privacy}", "received_events_url": "https://api.github.com/users/cboos/received_events", "type": "User", "site_admin": false}, "position": 22, "line": 422, "path": "src/pygit2.c", "commit_id": "673053dc7136cc6ba87296e23d3e817796928a99", "created_at": "2013-04-05T12:24:43Z", "updated_at": "2013-04-05T12:24:43Z", "author_association": "CONTRIBUTOR", "body": "I suppose this is a typo... \"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH\"\ns/MATC/MATCH/\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232373", "id": 3232373, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T03:56:28Z", "updated_at": "2013-05-17T03:56:28Z", "author_association": "NONE", "body": "why `GIT_DIFF_LINE_CONTEXT` has been removed ?\n\nin version 0.18.0 \nI can do\n\n`from pygit2 import GIT_DIFF_LINE_CONTEXT`\n\nbut now I can't , why?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232412", "id": 3232412, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T04:06:32Z", "updated_at": "2013-05-17T04:06:32Z", "author_association": "NONE", "body": "btw, I thought this parameter is used to control how many context line I would show in diff, like `git diff -U`, is this correct, how can I \nuse it properly?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3236676", "id": 3236676, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T16:28:58Z", "updated_at": "2013-05-17T16:28:58Z", "author_association": "MEMBER", "body": "These constants are used when looking at text lines in a diff to indicate if the line is a context line (or and added line or a removed line). The set the number of context lines, you need to set the `context_lines` value in the `git_diff_options`. It appears to me that that field of the options is not current exposed through pygit2.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3247623", "id": 3247623, "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T13:08:23Z", "updated_at": "2013-05-20T13:08:23Z", "author_association": "MEMBER", "body": "In pygit2 we convert the `context_line` to unicode (for python2/3 compability reasons). So if you use these constants for comparison it will fail. I think '+','-',' ' and '\\n' are more than enough meaningful. Btw pygit2 has support for `context_lines` with `#77b5cdc` (not yet merged to master).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3249463", "id": 3249463, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T17:03:51Z", "updated_at": "2013-05-20T17:03:51Z", "author_association": "MEMBER", "body": "@cholin Just a heads up, in recent libgit2 updates to the `development` branch, I had to introduce a new constant `GIT_DIFF_LINE_CONTEXT_EOFNL` that deals with the case where both sides of a diff end without an newline and those lines appear in the context at the end of the diff. When I added this new constant, I changed the values for the `...EOFNL` constants so that we're no longer using `'\\n'` as a value (since I worried it was confusing). The new values are `'>'` is ADD_EOFNL, `'<'` is DEL_EOFNL, and `'='` is CONTEXT_EOFNL.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324", "html_url": "https://github.com/libgit2/pygit2/commit/3474dca78f2b87ed7ce8222eb0ce168e59437e23#commitcomment-3980324", "id": 3980324, "user": {"login": "luchuan", "id": 811665, "avatar_url": "https://avatars1.githubusercontent.com/u/811665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luchuan", "html_url": "https://github.com/luchuan", "followers_url": "https://api.github.com/users/luchuan/followers", "following_url": "https://api.github.com/users/luchuan/following{/other_user}", "gists_url": "https://api.github.com/users/luchuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/luchuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luchuan/subscriptions", "organizations_url": "https://api.github.com/users/luchuan/orgs", "repos_url": "https://api.github.com/users/luchuan/repos", "events_url": "https://api.github.com/users/luchuan/events{/privacy}", "received_events_url": "https://api.github.com/users/luchuan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 500, "path": "src/repository.c", "commit_id": "3474dca78f2b87ed7ce8222eb0ce168e59437e23", "created_at": "2013-08-30T05:53:47Z", "updated_at": "2013-08-30T05:53:47Z", "author_association": "NONE", "body": ":beer:\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4840766", "id": 4840766, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T04:38:52Z", "updated_at": "2013-12-12T04:38:52Z", "author_association": "NONE", "body": "hi @carlosmn is `git_diff_list` depreciated in libgit2\uff0c we here has a kind of fork of `pygi2` with some modification. The fork hasn't sync with the main repo for a while, and now there are some conflicts with `git_diff_list`, I found your commit to adjust to libgit2, is there any explanation or documentation about the `git_diff_list` thing, either in libgit2 or pygit2. Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4841360", "id": 4841360, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T06:52:05Z", "updated_at": "2013-12-12T06:52:05Z", "author_association": "NONE", "body": "seems that it's just rename https://github.com/libgit2/libgit2/commit/3ff1d123736e5686fb9ec16e65828d5b8ffa2b30\n\nso I can just rename it , cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816", "html_url": "https://github.com/libgit2/pygit2/commit/9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7#commitcomment-7623816", "id": 7623816, "user": {"login": "guysoft", "id": 325670, "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7", "created_at": "2014-09-02T13:20:31Z", "updated_at": "2014-09-02T13:20:31Z", "author_association": "NONE", "body": "Hey,\nWhy was the MergeResult object object removed? How do I get now the oid of the merged result? It does not seem to appear in the working directory for me.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684", "html_url": "https://github.com/libgit2/pygit2/commit/0ba17a5b4608706f696c2212315ea0bb301db209#commitcomment-10577684", "id": 10577684, "user": {"login": "luto", "id": 2158203, "avatar_url": "https://avatars3.githubusercontent.com/u/2158203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luto", "html_url": "https://github.com/luto", "followers_url": "https://api.github.com/users/luto/followers", "following_url": "https://api.github.com/users/luto/following{/other_user}", "gists_url": "https://api.github.com/users/luto/gists{/gist_id}", "starred_url": "https://api.github.com/users/luto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luto/subscriptions", "organizations_url": "https://api.github.com/users/luto/orgs", "repos_url": "https://api.github.com/users/luto/repos", "events_url": "https://api.github.com/users/luto/events{/privacy}", "received_events_url": "https://api.github.com/users/luto/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0ba17a5b4608706f696c2212315ea0bb301db209", "created_at": "2015-04-05T15:20:35Z", "updated_at": "2015-04-05T15:20:35Z", "author_association": "NONE", "body": "thank you :heart: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701", "html_url": "https://github.com/libgit2/pygit2/commit/5c061cbb0a11e68cc36def504d8d74c10c255df0#commitcomment-21637701", "id": 21637701, "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5c061cbb0a11e68cc36def504d8d74c10c255df0", "created_at": "2017-04-05T13:47:48Z", "updated_at": "2017-04-05T13:47:48Z", "author_association": "CONTRIBUTOR", "body": "This closes #669 ", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984", "pull_request_review_id": null, "id": 462984, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "I bet you mean:\n\n```\nif (builder) {\n```\n", "created_at": "2012-02-17T19:16:11Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992", "pull_request_review_id": null, "id": 462992, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Yes I do. `builder` used to be called `bld` and it looks like I didn't clean up properly.\n", "created_at": "2012-02-17T19:19:09Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078", "pull_request_review_id": null, "id": 463078, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "- I wonder what Py_XDECREF will do with a `git_treebuilder` struct.\n- The point of using `Py_XDECREF` instead of `Py_DECREF` is that you don't need to check for NULL.\n", "created_at": "2012-02-17T19:34:01Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739", "pull_request_review_id": null, "id": 464739, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It doesn't seem to mind a `git_treebuilder` that much (it doesn't crash in the tests). Some example code must have been wrong about `Py_XDECREF`. I saw it being used with a guard. I'll update shortly.\n", "created_at": "2012-02-18T12:24:38Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062", "pull_request_review_id": null, "id": 465062, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "This line should not be. The dealloc function is called when the refcount is zero. Decreasing it below zero is not correct.\n", "created_at": "2012-02-18T22:17:20Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804", "pull_request_review_id": null, "id": 470804, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Now that you mention it, it does look silly, will fix.\n", "created_at": "2012-02-21T11:21:41Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081", "pull_request_review_id": null, "id": 3873081, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "sorry, I do not familiar with C. \nThe old code seems like try to compatible with either unicode and bytes. So if use \"ssi\", we can accept them both or does this require specific python version?\n", "created_at": "2013-04-19T13:13:29Z", "updated_at": "2013-04-19T13:13:29Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195", "pull_request_review_id": null, "id": 3873195, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "Well unicode and python is a bit messy. But PyArg_ParseTuple with `s` as argument will convert Strings and Unicode Strings to a c string pointer. So we can use PyArg_ParseTuple and do not loose any functionalities... Check the api: [python2.7](http://docs.python.org/2.7/c-api/arg.html) and [python3](http://docs.python.org/2.7/c-api/arg.html)\n", "created_at": "2013-04-19T13:20:15Z", "updated_at": "2013-04-19T13:20:15Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248", "pull_request_review_id": null, "id": 3873248, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "Thanks. Then it's much clear now.\n", "created_at": "2013-04-19T13:23:56Z", "updated_at": "2013-04-19T13:23:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132", "pull_request_review_id": null, "id": 4185132, "diff_hunk": "@@ -88,8 +88,8 @@\n                 PyList_SetItem(py_hunk->lines, 0,\n                     to_unicode_n(header, header_len, NULL, NULL));\n                 for (j=1; j < lines_in_hunk + 1; ++j) {\n-                    err = git_diff_patch_get_line_in_hunk(NULL, &line,\n-                              &line_len, NULL, NULL, patch, i, j - 1);\n+                    err = git_diff_patch_get_line_in_hunk(&py_hunk->origin,", "path": "src/diff.c", "position": 15, "original_position": 15, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "@cholin hi, I think here exist a problem, that, for `git_diff_patch_get_line_in_hunk`, this get a line detail for every line, but only the last one of 'origin' get reserved in hunk.origin.\n", "created_at": "2013-05-12T09:06:12Z", "updated_at": "2013-05-12T09:06:12Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006", "pull_request_review_id": null, "id": 4188006, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "this will break application code. and I change my code to receive int to char now. if this can be noticed in advance pull from master.\nby the way, do you guys recommend we application developer always use the latest code of pygit2?\n", "created_at": "2013-05-13T05:19:37Z", "updated_at": "2013-05-13T05:19:37Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703", "pull_request_review_id": null, "id": 4189703, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "I do not think you should use the latest version of pygit2 in your application. Right now the api isn't stable. We try to avoid these changes but better now than after a 1.0 release (which could be in near future). If you depend on a recent change, well then you have no other choice...\n", "created_at": "2013-05-13T09:01:05Z", "updated_at": "2013-05-13T09:01:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335", "pull_request_review_id": null, "id": 7895335, "diff_hunk": "@@ -95,8 +96,164 @@\n }\n \n \n+PyObject * get_pylist_from_git_strarray(git_strarray *strarray)\n+{\n+    int index;\n+    PyObject *new_list;\n+\n+    new_list = PyList_New(strarray->count);\n+    for (index = 0; index < strarray->count; (index)++ ) {\n+        PyList_SET_ITEM(\n+                       new_list,\n+                       index,\n+                       PyString_FromString(strarray->strings[index]));", "path": "src/remote.c", "position": null, "original_position": 31, "commit_id": "6050ae021dad0bc1af053b5fd1b6a431bf160df0", "original_commit_id": "ea8901f417ec29eb39524fecf23dda9760fd2148", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "We have `to_unicode` for this which works across verisions.\n", "created_at": "2013-11-25T16:21:44Z", "updated_at": "2013-12-02T15:18:04Z", "html_url": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/290", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/290"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225", "pull_request_review_id": null, "id": 9060225, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Why not use `\"s\"` as the format directly?\n", "created_at": "2014-01-21T23:54:43Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396", "pull_request_review_id": null, "id": 9064396, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "I'll fix this.\n", "created_at": "2014-01-22T03:30:59Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021", "pull_request_review_id": null, "id": 9171021, "diff_hunk": "@@ -256,7 +258,7 @@\n PyTypeObject RefspecType = {\n     PyVarObject_HEAD_INIT(NULL, 0)\n     \"_pygit2.Refspec\",                         /* tp_name           */\n-    sizeof(Remote),                            /* tp_basicsize      */\n+    sizeof(Refspec),                            /* tp_basicsize      */", "path": "src/remote.c", "position": 19, "original_position": 19, "commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "original_commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "More than one space.\n", "created_at": "2014-01-25T11:03:56Z", "updated_at": "2014-01-25T11:03:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155", "pull_request_review_id": null, "id": 14758155, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why not `from_c` like in `Index.from_c`? Is more consistent this way\n", "created_at": "2014-07-10T10:16:38Z", "updated_at": "2014-07-10T10:16:38Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262", "pull_request_review_id": null, "id": 14761262, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Because it's a special function. I went back and forth on that one, but this is a private function that only makes sense inside pygit2. The consistency should go the other way.\n", "created_at": "2014-07-10T11:54:21Z", "updated_at": "2014-07-10T11:54:21Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831", "pull_request_review_id": null, "id": 14817831, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why do you need to iterate? You can do it with 2 if statements:\n\n``` python\nif 'strategy' in kwargs:\n  copts.checkout_strategy = kwargs['strategy']\n\nif 'directory' in kwargs:\n  target_dir = ffi.new('char[]', to_str(kwargs['directory']))\n  refs.append(target_dir)\n  copts.target_directory = target_dir\n```\n", "created_at": "2014-07-11T12:25:54Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881", "pull_request_review_id": null, "id": 14817881, "diff_hunk": "@@ -221,7 +281,7 @@ def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n     def diff(self, a=None, b=None, cached=False, flags=GIT_DIFF_NORMAL,\n              context_lines=3, interhunk_lines=0):\n         \"\"\"\n-        Show changes between the working tree and the index or a tree,\n+        Sow changes between the working tree and the index or a tree,", "path": "pygit2/repository.py", "position": null, "original_position": 105, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "I think you delete by mistake an `h` from `Show`\n", "created_at": "2014-07-11T12:27:46Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235", "pull_request_review_id": null, "id": 14818235, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It's a leftover from working with less abstract constructions; but it's a guess as to how many parameters will actually be passed versus how many we will be looking at. I'm not a fan of looking up the same key twice, but it can be reduced.\n", "created_at": "2014-07-11T12:41:16Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294", "pull_request_review_id": null, "id": 14854294, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "I remember now why I wanted to iterate over the inputs instead of checking for the known keys: if the programmer using this method makes a typo, we will ignore that option instead of complaining, which can cause subtle bugs, as there is no indication that we're ignoring an argument that was passed. I didn't end up doing it as we just have the two things, but when this gets extended, we should raise an exception if we get something we don't recognise as an option.\n", "created_at": "2014-07-12T17:23:34Z", "updated_at": "2014-07-12T17:23:34Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085", "pull_request_review_id": null, "id": 15143085, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "Just changed this static method so it is shorter and fails on unexpected arguments.\n", "created_at": "2014-07-19T10:32:13Z", "updated_at": "2014-07-19T10:32:13Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992", "pull_request_review_id": null, "id": 15392992, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "All of these values will be unitialised if they're not passed. Instead of this, you should let `PyArg_ParseTupleAndKeywords` write into the options structure directly.\n", "created_at": "2014-07-25T09:36:57Z", "updated_at": "2014-07-25T09:40:42Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170", "pull_request_review_id": null, "id": 15393170, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "ArnoVanLumig", "id": 893745, "avatar_url": "https://avatars3.githubusercontent.com/u/893745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnoVanLumig", "html_url": "https://github.com/ArnoVanLumig", "followers_url": "https://api.github.com/users/ArnoVanLumig/followers", "following_url": "https://api.github.com/users/ArnoVanLumig/following{/other_user}", "gists_url": "https://api.github.com/users/ArnoVanLumig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnoVanLumig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnoVanLumig/subscriptions", "organizations_url": "https://api.github.com/users/ArnoVanLumig/orgs", "repos_url": "https://api.github.com/users/ArnoVanLumig/repos", "events_url": "https://api.github.com/users/ArnoVanLumig/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnoVanLumig/received_events", "type": "User", "site_admin": false}, "body": "Thanks!\n\nI actually figured that out myself but forgot to commit and push it... Thanks for the heads-up!\n", "created_at": "2014-07-25T09:41:56Z", "updated_at": "2014-07-25T09:41:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723", "pull_request_review_id": null, "id": 16031723, "diff_hunk": "@@ -61,6 +61,11 @@ class Keypair(object):\n     This is an object suitable for passing to a remote's credentials\n     callback and for returning from said callback.\n \n+    :param str username: the username used in the remote URL", "path": "pygit2/credentials.py", "position": null, "original_position": 4, "commit_id": "d752e8550b50d10abe8f0252e44e801ef71b263b", "original_commit_id": "f787a52e66c67958a9127f1a900c07c4ed48c879", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Again, this has nothing to do with the username the user may have passed as a hint. _This_ username is the only one that counts, and it has to be the username as which you wish to authenticate to the ssh host.\n", "created_at": "2014-08-10T15:19:27Z", "updated_at": "2014-08-11T22:51:41Z", "html_url": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/398", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/398"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524", "pull_request_review_id": null, "id": 16348524, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "There's no need for this line. You're already setting the version above with the init function. If the version does increase, this would cause libgit2 to consider the struct to have a different layout.\n", "created_at": "2014-08-18T11:45:28Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362", "pull_request_review_id": null, "id": 16349362, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "mduggan", "id": 3765590, "avatar_url": "https://avatars2.githubusercontent.com/u/3765590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mduggan", "html_url": "https://github.com/mduggan", "followers_url": "https://api.github.com/users/mduggan/followers", "following_url": "https://api.github.com/users/mduggan/following{/other_user}", "gists_url": "https://api.github.com/users/mduggan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mduggan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mduggan/subscriptions", "organizations_url": "https://api.github.com/users/mduggan/orgs", "repos_url": "https://api.github.com/users/mduggan/repos", "events_url": "https://api.github.com/users/mduggan/events{/privacy}", "received_events_url": "https://api.github.com/users/mduggan/received_events", "type": "User", "site_admin": false}, "body": "Ah, I was doing it in a little bit of a weird order.. I wanted to create the \"default\" callbacks first so that any error could raise before the custom callbacks had been set.. but fair point about the version number being set differently on the two lines.. if it changes in one place it will need to change in both,\n", "created_at": "2014-08-18T12:11:45Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924", "pull_request_review_id": null, "id": 18427924, "diff_hunk": "@@ -321,6 +321,30 @@ def push(self, spec, signature=None, message=None):\n         :param Signature signature: signature to use when updating the tips\n         :param str message: message to use when updating the tips\n         \"\"\"\n+        # Get the default callbacks first\n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks, 1)\n+        check_error(err)\n+\n+        # Build custom callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1\n+        callbacks.sideband_progress = self._sideband_progress_cb\n+        callbacks.transfer_progress = self._transfer_progress_cb\n+        callbacks.update_tips = self._update_tips_cb\n+        callbacks.credentials = self._credentials_cb\n+        # We need to make sure that this handle stays alive\n+        self._self_handle = ffi.new_handle(self)", "path": "pygit2/remote.py", "position": 17, "original_position": 17, "commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "original_commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "`self._self_handle` needs to be set to `None` after the push operation completes, next to freeing the push object itself.\n", "created_at": "2014-10-04T06:43:23Z", "updated_at": "2014-10-04T06:43:23Z", "html_url": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/431", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/431"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737", "pull_request_review_id": null, "id": 17552737, "diff_hunk": "@@ -85,3 +85,9 @@ def credential_tuple(self):\n \n     def __call__(self, _url, _username, _allowed):\n         return self\n+\n+\n+class KeypairFromAgent(Keypair):\n+    def __init__(self, username):\n+        self._username = username\n+        super(KeypairFromAgent, self).__init__(username, None, None, None)", "path": "pygit2/credentials.py", "position": null, "original_position": 9, "commit_id": "9aa39aafbc4e9e5920086cdafdb96270ee66ebe5", "original_commit_id": "4b9fe1cc7c54735e3a0a062d0ffe013d4e4d984d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "One of these lies is redundant. If we're going to rely on the superclass' constructor, then there's no need for us to store the username explicitly.\n", "created_at": "2014-09-15T16:35:10Z", "updated_at": "2014-10-07T08:48:52Z", "html_url": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/424", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/424"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "2": {"issues": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/765", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/events", "html_url": "https://github.com/libgit2/pygit2/issues/765", "id": 288615758, "number": 765, "title": "big endian: FAIL: test_no_context_lines (test.test_patch.PatchTest)", "user": {"login": "onovy", "id": 1649603, "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-15T14:39:47Z", "updated_at": "2018-01-15T14:39:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\ntest.test_patch.PatchTest.test_no_context_lines fails on archs mips, s390x, hppa, powerpc or ppc64. I think all of them are \"big endian\". This bug is new in 0.26.3, because before this version test_no_context_lines test didn't exists.\r\n\r\n```\r\nFAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/test/test_patch.py\", line 196, in test_no_context_lines\r\n    self.assertEqual(context_count, 0)\r\nAssertionError: 1 != 0\r\n```\r\n\r\nSee: https://buildd.debian.org/status/package.php?p=python-pygit2\r\n\r\nThanks for fixing.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/events", "html_url": "https://github.com/libgit2/pygit2/issues/764", "id": 288579376, "number": 764, "title": "tree.diff_to_tree results in many unnecessary sys calls", "user": {"login": "Nukesor", "id": 3322822, "avatar_url": "https://avatars2.githubusercontent.com/u/3322822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nukesor", "html_url": "https://github.com/Nukesor", "followers_url": "https://api.github.com/users/Nukesor/followers", "following_url": "https://api.github.com/users/Nukesor/following{/other_user}", "gists_url": "https://api.github.com/users/Nukesor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nukesor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nukesor/subscriptions", "organizations_url": "https://api.github.com/users/Nukesor/orgs", "repos_url": "https://api.github.com/users/Nukesor/repos", "events_url": "https://api.github.com/users/Nukesor/events{/privacy}", "received_events_url": "https://api.github.com/users/Nukesor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-15T12:32:34Z", "updated_at": "2018-01-17T22:44:46Z", "closed_at": null, "author_association": "NONE", "body": "Hi!\r\n\r\nI'm currently working on a git scanner with a very high throughput for my bachelor thesis.\r\nAs the scanner runs with 8 threads, I'm observing severe slowdowns on my server.\r\nAfter running the command with `strace` i noticed that there are a whole lot of unnecessary syscalls issued on each diff. It looks like  for each file in the diff, there is one `stat` for the actual file, two `access` for `/etc/gitattributes` and two `stat` for `/info/attributes`. \r\n\r\nThis results in a lot of syscalls and slows things down significantly as the program seems to wait for those calls most of the time. The repositories are located inside `/tmp` and cleaned after each scan. There are no signs of RAM shortage as there are about 8GB+ unused space in the `/tmp` fs.\r\n\r\nThe repositories are cloned `bare`. The actual function call is:\r\n```\r\ndiff = commit.tree.diff_to_tree(commit.parents[0].tree)\r\nself.commit_stats[commit.hex] = {\r\n    'additions': diff.stats.insertions,\r\n    'deletions': diff.stats.deletions,\r\n}\r\n```\r\n\r\nI'm not sure if this is the right place or if this is rather a libgit2 issue.\r\nAnyway I'm happy for any help as I'm not that familiar with the pythin-C binding mechanics.\r\n\r\nRelevant strace output example:\r\n```\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/events", "html_url": "https://github.com/libgit2/pygit2/issues/752", "id": 278706454, "number": 752, "title": "Performance: speed of getting `blob.data` for large files (as compared to GitPython)", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T18:37:55Z", "updated_at": "2017-12-02T18:37:55Z", "closed_at": null, "author_association": "NONE", "body": "I have compared speed of equivalent to `git show <revision>:<pathname>` in both pygit2 and GitPython (the pure-Python implementation). In all other cases that I have tested pygit2 is faster, but for very large files `git show` / `git cat-file` equivalent is slower.\r\n\r\npygit2 code:\r\n``` python\r\nblob = repo.revparse_single(commit + ':' + path)\r\nresult = blob.data\r\n```\r\n\r\nGitPython code:\r\n``` python\r\nblob = repo.rev_parse(commit + ':' + path)\r\nresult = blob.data_stream.read()\r\n```\r\n\r\nDo you have any ideas why pygit2 is slower here?\r\n\r\nP.S. would it be difficult to add streaming access?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/events", "html_url": "https://github.com/libgit2/pygit2/issues/750", "id": 278573551, "number": 750, "title": "Suggestion: better handling of `repo.set_head(pygit2.Commit)`", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T19:38:10Z", "updated_at": "2017-12-25T18:54:52Z", "closed_at": null, "author_association": "NONE", "body": "I have tried to emulate `git checkout --detach <commit>` in pygit2, to create **detached HEAD** checkout, and I did come up with the following rough equivalent (though the following does not uses transactions as git does):\r\n\r\n``` python\r\nrev = repo.revparse_single(commit_name)\r\nrepo.checkout_tree(rev)\r\nrepo.set_head(rev.id)\r\n```\r\n\r\nHowever when I tried to use simply `repo.set_head(rev)`, I got the following error:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-35-9612528ec0ac> in <module>()\r\n----> 1 repo.set_head(rev)\r\n\r\n/usr/lib/python2.7/dist-packages/pygit2/repository.pyc in set_head(self, target)\r\n    293\r\n    294         # if it's a string, then it's a reference name\r\n--> 295         err = C.git_repository_set_head(self._repo, to_bytes(target))\r\n    296         check_error(err)\r\n    297\r\n\r\nTypeError: initializer for ctype 'char *' must be a cdata pointer, not _pygit2.Commit\r\n```\r\n\r\nIt would be nice if `pygit2.Commit` object was automatically peeled, but if it is decided to be not good idea, then what it needs is more user-friendly error message than the one above.\r\n\r\n-----\r\npygit2 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/events", "html_url": "https://github.com/libgit2/pygit2/issues/747", "id": 278039485, "number": 747, "title": "Broken GIT_SORT_TIME ?", "user": {"login": "pypingou", "id": 1240038, "avatar_url": "https://avatars1.githubusercontent.com/u/1240038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pypingou", "html_url": "https://github.com/pypingou", "followers_url": "https://api.github.com/users/pypingou/followers", "following_url": "https://api.github.com/users/pypingou/following{/other_user}", "gists_url": "https://api.github.com/users/pypingou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pypingou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pypingou/subscriptions", "organizations_url": "https://api.github.com/users/pypingou/orgs", "repos_url": "https://api.github.com/users/pypingou/repos", "events_url": "https://api.github.com/users/pypingou/events{/privacy}", "received_events_url": "https://api.github.com/users/pypingou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-30T08:45:17Z", "updated_at": "2018-01-03T10:39:41Z", "closed_at": null, "author_association": "NONE", "body": "This is a script to reproduce the behavior I'm seeing:\r\n````\r\n#!/usr/bin/env python\r\n\r\nimport tempfile\r\nimport time\r\nimport os\r\n\r\nimport pygit2\r\n\r\npath = tempfile.mkdtemp(prefix='pygit2_test_')\r\nrepo = pygit2.init_repository(path)\r\n\r\nauthor = pygit2.Signature('Alice Author', 'alice@authors.tld')\r\ncommitter = pygit2.Signature('Cecil Committer', 'cecil@committers.tld')\r\n\r\n# Commit #1\r\n\r\n # Create a file in that git repo\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\nparents = []\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #1',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents,\r\n))\r\ncommit1 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n# Commit #2\r\n\r\nparents = [commit1.oid.hex]\r\n\r\nsubfolder = os.path.join('folder1', 'folder2')\r\nos.makedirs(os.path.join(path, subfolder))\r\n# Create a file in that git repo\r\nwith open(os.path.join(path, subfolder, 'file'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz')\r\nrepo.index.add(os.path.join(subfolder, 'file'))\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #2',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit2 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n\r\n# Commit #3\r\n\r\nparents = [commit2.oid.hex]\r\n\r\n# Update the sources file\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz!')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #3',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit3 = repo.revparse_single('HEAD')\r\n\r\n\r\nprint('')\r\nmain_walker = repo.walk(commit3.oid.hex, pygit2.GIT_SORT_TIME)\r\ncommits_msgs = []\r\nwhile 1:\r\n    try:\r\n        com = main_walker.next()\r\n        print(com.message)\r\n        print(com.oid.hex)\r\n    except StopIteration:\r\n        break\r\n````\r\n\r\nIt gives me the following output:\r\n````\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\n\r\nCommit #3\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\nCommit #1\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\nCommit #2\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n````\r\n\r\nThe first three lines are the commit as they are committed.\r\nThe following lines are the commit message and hash as ``repo.walk(commit3, pygit2.GIT_SORT_TIME)`` is returning them.\r\n\r\nSomething looks broken to me :)", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/events", "html_url": "https://github.com/libgit2/pygit2/issues/738", "id": 276061504, "number": 738, "title": "`repo.diff(c1, c2, flags=pygit2.GIT_DIFF_FIND_RENAMES)` reverses diff", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T13:08:42Z", "updated_at": "2017-11-22T13:08:42Z", "closed_at": null, "author_association": "NONE", "body": "First complaint is that there is no documentation and no examples of using `flags` (not `flag` as in description of parameters) with `Repository.diff`: http://www.pygit2.org/diff.html . Therefore I am not sure if I am using the API correctly.\r\n\r\nSecond, using `flags=pygit2.GIT_DIFF_FIND_RENAMES` for some reason **reverses** diff.\r\n\r\nCompare \r\n```\r\n>>> repo = pygit2.Repository('path/to/repo')\r\n>>> repo.diff('HEAD^', 'HEAD', flag=pygit2.GIT_DIFF_FIND_RENAMES).patch`\r\n```\r\nwith \r\n```\r\n>>> repo.diff('HEAD^', 'HEAD').patch\r\n```\r\n\r\n-----\r\n\r\npygit2.LIBGIT2_VERSION: '0.26.0'\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/events", "html_url": "https://github.com/libgit2/pygit2/issues/732", "id": 270986972, "number": 732, "title": "hunk.final_committer.name not work if email is empty", "user": {"login": "Bysmyyr", "id": 3306756, "avatar_url": "https://avatars3.githubusercontent.com/u/3306756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bysmyyr", "html_url": "https://github.com/Bysmyyr", "followers_url": "https://api.github.com/users/Bysmyyr/followers", "following_url": "https://api.github.com/users/Bysmyyr/following{/other_user}", "gists_url": "https://api.github.com/users/Bysmyyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bysmyyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bysmyyr/subscriptions", "organizations_url": "https://api.github.com/users/Bysmyyr/orgs", "repos_url": "https://api.github.com/users/Bysmyyr/repos", "events_url": "https://api.github.com/users/Bysmyyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Bysmyyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T13:58:13Z", "updated_at": "2017-11-03T13:58:34Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I found this error:\r\n\r\nif email is missing, it gives error \"Signarure cannot have an empty name or email\"\r\n\r\nin libgit2 Slack channel we discuss it and end up that in `wrap_signature` pygit2 creates new signature where email cannot be empty. It maybe should use `git_signature_dup` instead?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/events", "html_url": "https://github.com/libgit2/pygit2/issues/731", "id": 269346053, "number": 731, "title": "Document KeypairFromAgent", "user": {"login": "yan12125", "id": 1937689, "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-28T20:07:14Z", "updated_at": "2017-10-28T20:07:14Z", "closed_at": null, "author_association": "NONE", "body": "I didn't know that feature until I check codes from both libgit2 and pygit2. I think it would be helpful to have that documented in http://www.pygit2.org/remotes.html.\r\n\r\nGoogling reveals another confused developer like me :-) https://github.com/saltstack/salt/issues/40008#issuecomment-286434931", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/events", "html_url": "https://github.com/libgit2/pygit2/issues/729", "id": 267666642, "number": 729, "title": "pygit2 installation error. ", "user": {"login": "santublr", "id": 3136174, "avatar_url": "https://avatars2.githubusercontent.com/u/3136174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santublr", "html_url": "https://github.com/santublr", "followers_url": "https://api.github.com/users/santublr/followers", "following_url": "https://api.github.com/users/santublr/following{/other_user}", "gists_url": "https://api.github.com/users/santublr/gists{/gist_id}", "starred_url": "https://api.github.com/users/santublr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santublr/subscriptions", "organizations_url": "https://api.github.com/users/santublr/orgs", "repos_url": "https://api.github.com/users/santublr/repos", "events_url": "https://api.github.com/users/santublr/events{/privacy}", "received_events_url": "https://api.github.com/users/santublr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T13:24:55Z", "updated_at": "2017-10-24T13:34:31Z", "closed_at": null, "author_association": "NONE", "body": "This issue which I'm reporting may be repetative one, but after googling and trying all the options I'm still not able to load the right pygit2.\r\n\r\npygit2 version 0.22.0\r\nlibgit2 version 0.22.0\r\npycparse version 2.18\r\ncffi version 0.9.2\r\nPython Version 3.3.2\r\nOS CentOS release 6.8 (Fina\r\n\r\n\r\npython3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LD_LIBRARY_PATH=$LIBGIT2/lib\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LIBGIT2=/usr/local\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/events", "html_url": "https://github.com/libgit2/pygit2/issues/727", "id": 265532038, "number": 727, "title": "create_commit does not update the reflog", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:28:12Z", "updated_at": "2017-10-14T23:28:12Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI have noticed that v0.26.0 of `create_commit` does not create an entry in the reflog for the initial commit of a branch.\r\n\r\n```python\r\n/private/tmp\r\n4> mkdir d\r\n\r\n/private/tmp\r\n5> cd d\r\n/private/tmp/d\r\n\r\n/private/tmp/d\r\n6> import pygit2\r\n\r\n/private/tmp/d\r\n7> repo = pygit2.init_repository(\".\")\r\n\r\n/private/tmp/d\r\n8> repo.config[\"user.email\"] = \"foo@bar.com\"\r\n\r\n/private/tmp/d\r\n9> foo = repo.create_blob(\"foo\")\r\n\r\n/private/tmp/d\r\n10> builder = repo.TreeBuilder()\r\n\r\n/private/tmp/d\r\n11> builder.insert(\"foo\", foo, pygit2.GIT_FILEMODE_BLOB)\r\n\r\n/private/tmp/d\r\n12> tree_id = builder.write()\r\n\r\n/private/tmp/d\r\n13> repo.create_commit(\"refs/test\", repo.default_signature, repo.default_signature, \"test\", tre\r\n13: e_id, [])\r\n13> f610cdd139fab6f738dfaff52839a552a6b8bb9e\r\n\r\n/private/tmp/d\r\n14> git reflog refs/test\r\n  File \"<ipython-input-14-afa1bc8c3c03>\", line 1\r\n    git reflog refs/test\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n/private/tmp/d\r\n15> !git reflog refs/test\r\n\r\n/private/tmp/d\r\n16> !git --no-pager reflog refs/test\r\n\r\n/private/tmp/d\r\n17> repo.references[\"refs/test\"].log\r\n17> <function Reference.log>\r\n\r\n/private/tmp/d\r\n18> repo.references[\"refs/test\"].log()\r\n18> <_pygit2.RefLogIter at 0x10db93bc0>\r\n\r\n/private/tmp/d\r\n19> list(repo.references[\"refs/test\"].log())\r\n19> []\r\n```\r\n\r\nHowever it works it is not an initial commit.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/events", "html_url": "https://github.com/libgit2/pygit2/issues/726", "id": 265531696, "number": 726, "title": "revparse_single does not understand date", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:22:03Z", "updated_at": "2017-10-14T23:22:03Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\n`revparse_single` does not support date parsing:\r\n\r\n$ git rev-parse 'HEAD@{2 weeks ago}'\r\neebac5f1c21ec78e098a8f7b60facd726b30844e\r\n$ python3 -c 'import pygit2; pygit2.Repository(\".\").revparse_single(\"HEAD@{2 weeks ago}\")'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nKeyError: 'HEAD@{2 weeks ago}'\r\n\r\nI am using version 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/events", "html_url": "https://github.com/libgit2/pygit2/issues/725", "id": 263573001, "number": 725, "title": "Support for Custom Merge drivers?", "user": {"login": "white-gecko", "id": 1018168, "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-06T21:11:57Z", "updated_at": "2017-10-06T21:11:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Is there any way of using a custom merge driver in pygit2? I've see this for libgit2: https://github.com/libgit2/libgit2/pull/3564 is this also possible to be used with pygit2 as it is?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/events", "html_url": "https://github.com/libgit2/pygit2/issues/724", "id": 256558064, "number": 724, "title": "How can I get current Tag reference?", "user": {"login": "smelnikov", "id": 13030121, "avatar_url": "https://avatars0.githubusercontent.com/u/13030121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smelnikov", "html_url": "https://github.com/smelnikov", "followers_url": "https://api.github.com/users/smelnikov/followers", "following_url": "https://api.github.com/users/smelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/smelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/smelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smelnikov/subscriptions", "organizations_url": "https://api.github.com/users/smelnikov/orgs", "repos_url": "https://api.github.com/users/smelnikov/repos", "events_url": "https://api.github.com/users/smelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/smelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T01:27:14Z", "updated_at": "2017-09-11T01:27:14Z", "closed_at": null, "author_association": "NONE", "body": "First, I checkout TAG from my repo. \r\nThen I need resolve name of this TAG. But I can't get relevant reference object (HEAD is detached).\r\nPlease tell me, how this can be done?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/events", "html_url": "https://github.com/libgit2/pygit2/issues/723", "id": 252168529, "number": 723, "title": "GIT_SORT_TOPOLOGICAL is document backwards.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-23T05:59:38Z", "updated_at": "2017-08-23T06:00:26Z", "closed_at": null, "author_association": "NONE", "body": "The documentation states that parents come before children, but actually children come before parents.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/events", "html_url": "https://github.com/libgit2/pygit2/issues/722", "id": 248080008, "number": 722, "title": "Support `git bundle create`", "user": {"login": "ashmastaflash", "id": 5561645, "avatar_url": "https://avatars1.githubusercontent.com/u/5561645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashmastaflash", "html_url": "https://github.com/ashmastaflash", "followers_url": "https://api.github.com/users/ashmastaflash/followers", "following_url": "https://api.github.com/users/ashmastaflash/following{/other_user}", "gists_url": "https://api.github.com/users/ashmastaflash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashmastaflash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashmastaflash/subscriptions", "organizations_url": "https://api.github.com/users/ashmastaflash/orgs", "repos_url": "https://api.github.com/users/ashmastaflash/repos", "events_url": "https://api.github.com/users/ashmastaflash/events{/privacy}", "received_events_url": "https://api.github.com/users/ashmastaflash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-04T18:16:58Z", "updated_at": "2017-08-04T18:16:58Z", "closed_at": null, "author_association": "NONE", "body": "Ideal form would be to have a class method for Repository that accepts a single argument for the output file path.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/events", "html_url": "https://github.com/libgit2/pygit2/pull/719", "id": 246313508, "number": 719, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch"}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/events", "html_url": "https://github.com/libgit2/pygit2/issues/717", "id": 245668433, "number": 717, "title": "How to solve 'LIBSSH2 not found.'?", "user": {"login": "pklim101", "id": 4819579, "avatar_url": "https://avatars3.githubusercontent.com/u/4819579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pklim101", "html_url": "https://github.com/pklim101", "followers_url": "https://api.github.com/users/pklim101/followers", "following_url": "https://api.github.com/users/pklim101/following{/other_user}", "gists_url": "https://api.github.com/users/pklim101/gists{/gist_id}", "starred_url": "https://api.github.com/users/pklim101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pklim101/subscriptions", "organizations_url": "https://api.github.com/users/pklim101/orgs", "repos_url": "https://api.github.com/users/pklim101/repos", "events_url": "https://api.github.com/users/pklim101/events{/privacy}", "received_events_url": "https://api.github.com/users/pklim101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T09:57:14Z", "updated_at": "2017-08-11T22:05:10Z", "closed_at": null, "author_association": "NONE", "body": "when I execute the command 'cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/libgit2',\r\nI have the output bellow\uff1a\r\n\r\n> \r\n\r\n-- Checking for module 'libcurl' \r\n--   Found libcurl, version 7.15.5  \r\n-- Could NOT find HTTP_Parser (missing: HTTP_PARSER_INCLUDE_DIR HTTP_PARSER_LIBRARY)   \r\n-- http-parser version 2 was not found; using bundled 3rd-party sources.  \r\n-- Checking for module 'libssh2'  \r\n--   No package 'libssh2' found  \r\n-- LIBSSH2 not found. Set CMAKE_PREFIX_PATH if it is installed outside of the default search path.\r\n\r\nthere are two module not fund, How can I solve it? thanks!", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/events", "html_url": "https://github.com/libgit2/pygit2/issues/716", "id": 244237603, "number": 716, "title": "pygit2.GIT_DIFF_IGNORE_WHITESPACE result Inconsistent", "user": {"login": "tongtongtongtong", "id": 22701681, "avatar_url": "https://avatars2.githubusercontent.com/u/22701681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongtongtongtong", "html_url": "https://github.com/tongtongtongtong", "followers_url": "https://api.github.com/users/tongtongtongtong/followers", "following_url": "https://api.github.com/users/tongtongtongtong/following{/other_user}", "gists_url": "https://api.github.com/users/tongtongtongtong/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongtongtongtong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongtongtongtong/subscriptions", "organizations_url": "https://api.github.com/users/tongtongtongtong/orgs", "repos_url": "https://api.github.com/users/tongtongtongtong/repos", "events_url": "https://api.github.com/users/tongtongtongtong/events{/privacy}", "received_events_url": "https://api.github.com/users/tongtongtongtong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-20T03:46:20Z", "updated_at": "2017-07-20T03:46:20Z", "closed_at": null, "author_association": "NONE", "body": "git command:\r\ndiff --git a/Makefile b/Makefile\r\nindex bb20e89..c25d045 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -3,4 +3,5 @@ install:\r\n \r\n clean: \r\n        rm -rf tgit-statistics \r\n+       \r\n qed \r\n\\ No newline at end of file\r\n\r\npygit2:\r\nrepo.diff(from_id, to_id, cached=True, flags=pygit2.GIT_DIFF_IGNORE_WHITESPACE, context_lines=3, interhunk_lines=3)\r\n\r\ndiff --git a/Makefile b/Makefile\r\nindex bb2..c25 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -5,0 +6 @@ clean:\r\n+", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/events", "html_url": "https://github.com/libgit2/pygit2/issues/712", "id": 236881017, "number": 712, "title": "`Repository.diff(cached=True)` does not list diffs for indexed files", "user": {"login": "jbaiter", "id": 608610, "avatar_url": "https://avatars2.githubusercontent.com/u/608610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaiter", "html_url": "https://github.com/jbaiter", "followers_url": "https://api.github.com/users/jbaiter/followers", "following_url": "https://api.github.com/users/jbaiter/following{/other_user}", "gists_url": "https://api.github.com/users/jbaiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaiter/subscriptions", "organizations_url": "https://api.github.com/users/jbaiter/orgs", "repos_url": "https://api.github.com/users/jbaiter/repos", "events_url": "https://api.github.com/users/jbaiter/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-19T12:53:13Z", "updated_at": "2017-06-19T12:54:05Z", "closed_at": null, "author_association": "NONE", "body": "This is with pygit2 version 0.24.0.\r\n\r\n```\r\n$ git init\r\nInitialized empty Git repository in /tmp/minimal/.git/\r\n$ touch foo\r\n$ git add foo\r\n$ git commit -am \"First commit\"\r\n[master (root-commit) 3551222] First commit\r\n 1 file changed, 0 insertions(+), 0 deletions(-)\r\n create mode 100644 foo\r\n$ echo \"foobar\" >> foo                                                                                                                                                                                                                                                                                 \r\n$ git add foo\r\n$ git diff --cached\r\ndiff --git a/foo b/foo\r\nindex e69de29..323fae0 100644\r\n--- a/foo\r\n+++ b/foo\r\n@@ -0,0 +1 @@\r\n+foobar\r\n$ python\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> list(repo.diff(cached=True))\r\n[]\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/events", "html_url": "https://github.com/libgit2/pygit2/issues/709", "id": 227439477, "number": 709, "title": "Type Annotations", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T17:25:07Z", "updated_at": "2017-05-15T11:20:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I was thinking of adding type annotations to some of the APIs to assist IDEs in parsing them and providing useful completion.\r\n\r\nSince it currently does not exist in the code, I preferred asking before coding.\r\nDue to supporting both Python 2 and 3, I think the way to do it is to use syntax present [here](http://mypy.readthedocs.io/en/latest/python2.html).\r\n\r\nThere are some drawbacks:\r\n1. Adding a new dependency - the `typing` package\r\n1. Annotation comments are not the prettiest thing\r\n\r\nBut if we only the do the required minimum, we get more clarity when using the library, and can also use `mypy` as a verification step for new code.\r\n\r\n@jdavid what is your opinion?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/events", "html_url": "https://github.com/libgit2/pygit2/pull/705", "id": 226006218, "number": 705, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/events", "html_url": "https://github.com/libgit2/pygit2/issues/704", "id": 225966764, "number": 704, "title": "How to implement (un)staging and query staging status ?", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T12:18:01Z", "updated_at": "2017-05-03T14:31:39Z", "closed_at": null, "author_association": "NONE", "body": "Not a bug, but I cannot figure out how to achieve this using pygit2 / libgit. Does someone have clues about this ?\r\n\r\nI tried to get information from this page http://www.pygit2.org/working-copy.html and I found https://github.com/libgit2/libgit2sharp/blob/master/LibGit2Sharp/Commands/Stage.cs and https://github.com/libgit2/libgit2/issues/3632\r\n\r\nI want to implement staging feature to my code review tools: https://github.com/FabriceSalvaire/CodeReview\r\n\r\n**Is http://stackoverflow.com/questions/tagged/libgit2 the right place to discuss on pygit2 ???**", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/events", "html_url": "https://github.com/libgit2/pygit2/issues/702", "id": 223249497, "number": 702, "title": "Repository.update_submodules() got Request failed with status code: 401", "user": {"login": "niven823", "id": 21955739, "avatar_url": "https://avatars3.githubusercontent.com/u/21955739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niven823", "html_url": "https://github.com/niven823", "followers_url": "https://api.github.com/users/niven823/followers", "following_url": "https://api.github.com/users/niven823/following{/other_user}", "gists_url": "https://api.github.com/users/niven823/gists{/gist_id}", "starred_url": "https://api.github.com/users/niven823/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niven823/subscriptions", "organizations_url": "https://api.github.com/users/niven823/orgs", "repos_url": "https://api.github.com/users/niven823/repos", "events_url": "https://api.github.com/users/niven823/events{/privacy}", "received_events_url": "https://api.github.com/users/niven823/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-21T01:37:08Z", "updated_at": "2017-04-21T01:37:49Z", "closed_at": null, "author_association": "NONE", "body": "I thought update_submodules()'s requires adding parameter of callbacks for RemoteCallbacks.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/events", "html_url": "https://github.com/libgit2/pygit2/issues/699", "id": 219887420, "number": 699, "title": "libssh2", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T12:47:34Z", "updated_at": "2017-04-06T14:09:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I think it would be good to add libssh2 to the builds to provide SSH support.\r\nOn Windows it takes quite some work to get it working (no success yet on my side). Haven't tried other OSs yet.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/events", "html_url": "https://github.com/libgit2/pygit2/issues/693", "id": 214644960, "number": 693, "title": "[RFE] rebase routines", "user": {"login": "ignatenkobrain", "id": 2866862, "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-16T09:37:07Z", "updated_at": "2017-03-16T09:37:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "libgit2 supports rebasing, but pygit2 doesn't expose it. It would be very useful if it could.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/events", "html_url": "https://github.com/libgit2/pygit2/issues/687", "id": 201816677, "number": 687, "title": "Possible encoding problem with Repository.file_status", "user": {"login": "wme-at-contact-de", "id": 10048008, "avatar_url": "https://avatars3.githubusercontent.com/u/10048008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wme-at-contact-de", "html_url": "https://github.com/wme-at-contact-de", "followers_url": "https://api.github.com/users/wme-at-contact-de/followers", "following_url": "https://api.github.com/users/wme-at-contact-de/following{/other_user}", "gists_url": "https://api.github.com/users/wme-at-contact-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/wme-at-contact-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wme-at-contact-de/subscriptions", "organizations_url": "https://api.github.com/users/wme-at-contact-de/orgs", "repos_url": "https://api.github.com/users/wme-at-contact-de/repos", "events_url": "https://api.github.com/users/wme-at-contact-de/events{/privacy}", "received_events_url": "https://api.github.com/users/wme-at-contact-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-19T10:16:04Z", "updated_at": "2017-07-23T20:28:47Z", "closed_at": null, "author_association": "NONE", "body": "If I try to get the status of a single file using Repository.file_status, I get a \"KeyError\" when the path contains non-ASCII characters like \"\u00e4\" or \"\\u00A0\" (non breaking space\").\r\n\r\nThe problem seems to be that \"Repository_status_file\" uses \"py_path_to_c_str\" to convert the path. Which encodes the path using the Python file system encoding.\r\n\r\nIf I encode the string myself using \"utf-8\", it works fine.\r\n\r\nNot sure whether this is a libgit2, pygit2 or Windows problem...\r\n\r\nUsing pygit-0.24.2 on Python 3.5, running on Windows 7.\r\nsys.getfilesystemencoding() returns \"mbcs\".\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/events", "html_url": "https://github.com/libgit2/pygit2/issues/686", "id": 200240979, "number": 686, "title": "`git_commit_amend` not available.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-11T23:46:59Z", "updated_at": "2017-04-05T19:08:00Z", "closed_at": null, "author_association": "NONE", "body": "Additionally `Repository.create_commit` fails if the first parent is not the tip of the branch being updated, so the behaviour cannot be fudged by making a new commit with the tip's parent.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/events", "html_url": "https://github.com/libgit2/pygit2/issues/684", "id": 197914703, "number": 684, "title": "repo.status() appears to be broken?", "user": {"login": "catsclaw", "id": 1660839, "avatar_url": "https://avatars2.githubusercontent.com/u/1660839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catsclaw", "html_url": "https://github.com/catsclaw", "followers_url": "https://api.github.com/users/catsclaw/followers", "following_url": "https://api.github.com/users/catsclaw/following{/other_user}", "gists_url": "https://api.github.com/users/catsclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/catsclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catsclaw/subscriptions", "organizations_url": "https://api.github.com/users/catsclaw/orgs", "repos_url": "https://api.github.com/users/catsclaw/repos", "events_url": "https://api.github.com/users/catsclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/catsclaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-28T20:54:24Z", "updated_at": "2017-04-12T11:15:15Z", "closed_at": null, "author_association": "NONE", "body": "I'm running `repo.status().items()` in a pre-commit hook using the `-a` flag (`git commit -a -m \"Test\"`), and I get a result that looks like this:\r\n\r\n`[('config/git_hooks/pre-commit', 256), ('bin/run_flake8', 256)]`\r\n\r\nIf I run `git status` in that same process, I get:\r\n\r\n    On branch ops_1331_fix\r\n    Your branch is ahead of 'origin/ops_1331_fix' by 2 commits.\r\n      (use \"git push\" to publish your local commits)\r\n    Changes to be committed:\r\n      (use \"git reset HEAD <file>...\" to unstage)\r\n    \r\n\t    modified:   bin/run_flake8\r\n\t    modified:   config/git_hooks/pre-commit\r\n\r\nIn other words, pygit2 is reporting those files as not being staged, and git is reporting them as being staged. Why the discrepancy?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/events", "html_url": "https://github.com/libgit2/pygit2/issues/683", "id": 197692934, "number": 683, "title": "DoS on wrong password", "user": {"login": "4s1", "id": 15968622, "avatar_url": "https://avatars1.githubusercontent.com/u/15968622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4s1", "html_url": "https://github.com/4s1", "followers_url": "https://api.github.com/users/4s1/followers", "following_url": "https://api.github.com/users/4s1/following{/other_user}", "gists_url": "https://api.github.com/users/4s1/gists{/gist_id}", "starred_url": "https://api.github.com/users/4s1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4s1/subscriptions", "organizations_url": "https://api.github.com/users/4s1/orgs", "repos_url": "https://api.github.com/users/4s1/repos", "events_url": "https://api.github.com/users/4s1/events{/privacy}", "received_events_url": "https://api.github.com/users/4s1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-27T11:59:05Z", "updated_at": "2016-12-27T11:59:05Z", "closed_at": null, "author_association": "NONE", "body": "As discussed in upstream bug report saltstack/salt#38230 pygit2 tries to authenticate indefinite with wrong credentials instead of failing after two consecutive failures with same authentication token as specified by https://tools.ietf.org/html/rfc7235#section-3.1\r\nPossible a libgit2 Bug if it's reproducable with other language bindings.\r\n\r\n\r\n## Testcase:\r\n### nginx dummy server configuration\r\nThis is just a stub configuration, no real repository needed\r\n````\r\nlocation ~ /git(/.*) {\r\n        add_header \"WWW-Authenticate\" \"Basic realm=\\\"Closed Areas\\\"\" always;\r\n        return 401;\r\n    }\r\n````\r\n### test client\r\n````python\r\n#!/bin/python2.7\r\n\r\nimport pygit2\r\n\r\nusername = 'dummyUser'\r\npassword = 'dummyPassword'\r\ncredentials = pygit2.UserPass(username, password)\r\ncallbacks = pygit2.RemoteCallbacks(credentials)\r\npygit2.clone_repository(\"http://git.demo.local/git/test.git\", \"test.git\", bare=True, callbacks=callbacks)\r\n\r\n````", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/events", "html_url": "https://github.com/libgit2/pygit2/issues/680", "id": 195430797, "number": 680, "title": "`peel` arguments inconsistent.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-14T03:22:33Z", "updated_at": "2016-12-14T03:27:17Z", "closed_at": null, "author_association": "NONE", "body": "`peel` is implemented twice, once in `object.c` and once in `reference.c`.  In the first it requires an argument and in the second it provides a default argument of `None`.  This is confusing when branches can be 'default' peeled but tags cannot.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "bf74b2a99341437a755390c692ae04a21737c9d7", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "message": "Merge remote-tracking branch 'white-gecko/patch-1'", "tree": {"sha": "90372a6c64296581f6004326b82478a9900de2ce", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/90372a6c64296581f6004326b82478a9900de2ce"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "html_url": "https://github.com/libgit2/pygit2/commit/bf74b2a99341437a755390c692ae04a21737c9d7", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1494574fff619ef135119487980d751877af20c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c"}, {"sha": "39a50d9d048a0abc5fd5ded6be4339818f169144", "url": "https://api.github.com/repos/libgit2/pygit2/commits/39a50d9d048a0abc5fd5ded6be4339818f169144", "html_url": "https://github.com/libgit2/pygit2/commit/39a50d9d048a0abc5fd5ded6be4339818f169144"}]}, {"sha": "a1494574fff619ef135119487980d751877af20c", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "message": "Fixing ImportError in some cases, bug #658", "tree": {"sha": "63a4efe447cb8ff08263a3786fdbcc37ca57f0d6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/63a4efe447cb8ff08263a3786fdbcc37ca57f0d6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a1494574fff619ef135119487980d751877af20c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6"}]}, {"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "message": "Fix running the tests with tox", "tree": {"sha": "c768091b0673dbe4b4cb5cf7081be567d7d556dd", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c768091b0673dbe4b4cb5cf7081be567d7d556dd"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674"}]}, {"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "message": "Implement update_submodules using ffi.", "tree": {"sha": "a91589d9a9d0103efd043edddeadc95290963149", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a91589d9a9d0103efd043edddeadc95290963149"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab"}]}, {"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-22T06:29:21Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:17:05Z"}, "message": "Add wrongly deleted declaration.", "tree": {"sha": "52450ede7a41ae941f5cd003298f1f1140ddf828", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52450ede7a41ae941f5cd003298f1f1140ddf828"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930"}]}, {"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-12T06:01:36Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:16:45Z"}, "message": "Import submodule_update related options.", "tree": {"sha": "95c532ebf0bca85f6f58a13f4f58956461cb369a", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/95c532ebf0bca85f6f58a13f4f58956461cb369a"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f"}]}, {"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "message": "Release 0.26.3", "tree": {"sha": "881d41e22784e868ae1318f5c0dbf20d7e36876c", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/881d41e22784e868ae1318f5c0dbf20d7e36876c"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4"}]}, {"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "e220542375858a5bbbbd1bdcba7dbe3ffeacba80", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/e220542375858a5bbbbd1bdcba7dbe3ffeacba80"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d"}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f"}]}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "message": "Fix patch-after-blob-free", "tree": {"sha": "96fe0f1ff9c62962b41083ab372b727cdf24ddc6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/96fe0f1ff9c62962b41083ab372b727cdf24ddc6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "message": "Add similar blob test", "tree": {"sha": "c662230906193e47f42bcb0e925585a8c6865915", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c662230906193e47f42bcb0e925585a8c6865915"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856"}]}, {"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "86ff5a4794a875dbbf3485cf87453308b5754e8b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/86ff5a4794a875dbbf3485cf87453308b5754e8b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591"}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "message": "Make broken patch tests be less nebulous", "tree": {"sha": "11cd577932e13657d58f63426704152f51e5a233", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/11cd577932e13657d58f63426704152f51e5a233"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed"}]}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "message": "Review Patch, fixes #757", "tree": {"sha": "2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba"}]}, {"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "message": "test_patch: assertEquals -> assertEqual", "tree": {"sha": "8e8bad74ee870513431f4a44cd49d490b4c28cff", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/8e8bad74ee870513431f4a44cd49d490b4c28cff"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2"}]}, {"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "message": "New Diff.deltas iterable", "tree": {"sha": "b40359f508cbfa84d99d9c53ee4e2988bb2bc232", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b40359f508cbfa84d99d9c53ee4e2988bb2bc232"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82"}]}, {"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "message": "Add more patch and blob tests that could fail", "tree": {"sha": "bf2e724171f16d9ec8531f976547f0e629576566", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/bf2e724171f16d9ec8531f976547f0e629576566"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "message": "Add contextlines, interhunk lines to Patch.create_from", "tree": {"sha": "b5e7d69785e2d07db3e9e82256c1745bdd412043", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b5e7d69785e2d07db3e9e82256c1745bdd412043"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "a96da22cbf456fe2181e196877845b590cede606", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "message": "Dont create blobs on the fly in test_patch, make patch kwargs", "tree": {"sha": "a1a264f20ad9cf85f0a0d09921486e4fde071e0f", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a1a264f20ad9cf85f0a0d09921486e4fde071e0f"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a96da22cbf456fe2181e196877845b590cede606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b"}]}, {"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "commit": {"author": {"name": "Matthias Bartelme\u00df", "email": "mba@fourplusone.de", "date": "2017-12-02T12:37:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-02T12:37:38Z"}, "message": "Clear clone_repo in Prune Test", "tree": {"sha": "a6e37143b7bee4564aaa3f12f9933dd32ae87c46", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a6e37143b7bee4564aaa3f12f9933dd32ae87c46"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIp6SCRBK7hj4Ov3rIwAAdHIIAJIthg2oofQptPXj6W09jvbH\n/wTIXOLh3iIQSLYXyQ1c6/WZxuBAlCmkA3TP0ztEO/Ejz7Y7U6FSbgvlylQaW+w7\n3O5MuW6q0LvzxEG8hovjETub1/7Vz4LbSWVuAcSjBZngv0x78rA5qDKFyq3xN0sh\nDOahzA3RMqpmfuDeHTPe7tlkZ0eeD2HGjWeWZojywfiI0FHOLurz7/Q95UHmDwa2\niBXiEbFNd2B7+GHk0ds4dS7jjj8FSoanXwz2aQaqejYcUNTIKX3LXed88AdN7izG\nkkmY/qZLBtQ3tgrcSFMSvWYmCXLmRhpkXOrsrS4mKHUMLuGWT/5xc0QOvPLofUI=\n=ILgC\n-----END PGP SIGNATURE-----\n", "payload": "tree a6e37143b7bee4564aaa3f12f9933dd32ae87c46\nparent d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756\nauthor Matthias Bartelme\u00df <mba@fourplusone.de> 1512218258 +0100\ncommitter GitHub <noreply@github.com> 1512218258 +0100\n\nClear clone_repo in Prune Test"}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b/comments", "author": {"login": "fourplusone", "id": 25514, "avatar_url": "https://avatars2.githubusercontent.com/u/25514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fourplusone", "html_url": "https://github.com/fourplusone", "followers_url": "https://api.github.com/users/fourplusone/followers", "following_url": "https://api.github.com/users/fourplusone/following{/other_user}", "gists_url": "https://api.github.com/users/fourplusone/gists{/gist_id}", "starred_url": "https://api.github.com/users/fourplusone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fourplusone/subscriptions", "organizations_url": "https://api.github.com/users/fourplusone/orgs", "repos_url": "https://api.github.com/users/fourplusone/repos", "events_url": "https://api.github.com/users/fourplusone/events{/privacy}", "received_events_url": "https://api.github.com/users/fourplusone/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756"}]}, {"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:10:52Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:18:38Z"}, "message": "Move declarations to top of functions", "tree": {"sha": "6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d"}]}, {"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:56:42Z"}, "message": "Release 0.26.2", "tree": {"sha": "692747fc3e936f82e8800e1b997d63d6f60ba0b6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/692747fc3e936f82e8800e1b997d63d6f60ba0b6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c"}]}, {"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:23:10Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:25:51Z"}, "message": "Add my name, for the fame", "tree": {"sha": "6b16298432ab07a93bc5e40a75d88a4410159dfc", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6b16298432ab07a93bc5e40a75d88a4410159dfc"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc"}]}, {"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "message": "test: use self.assertXXX not assert\n\nBecause we use unittest, not pytest.", "tree": {"sha": "52201c58185e44703811989c1968c50576938bc4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52201c58185e44703811989c1968c50576938bc4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/4804143f5590cf989f162973ec3a99c8314607bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8944d0208a7468ec7d378247356677829b87766b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b"}]}, {"sha": "8944d0208a7468ec7d378247356677829b87766b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "message": "Merge remote-tracking branch 'cecedille1/fetch-prune'", "tree": {"sha": "34e83687d80e16b3d0e651120084d3352b2823fa", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/34e83687d80e16b3d0e651120084d3352b2823fa"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/8944d0208a7468ec7d378247356677829b87766b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6"}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6"}]}, {"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "message": "Add bad arg tests to test_patch", "tree": {"sha": "277cdea2f0dee19f64acab7d11a6474ede8d5927", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/277cdea2f0dee19f64acab7d11a6474ede8d5927"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1"}]}, {"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "message": "Add static Patch.create_from method to create patches", "tree": {"sha": "2f4641b0c3a7badc871844ae756834d2ffca39b4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2f4641b0c3a7badc871844ae756834d2ffca39b4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b"}]}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "message": "Add my name, for the fame", "tree": {"sha": "0c5ce621d568e08babbc971ac1de91d1a56441c1", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/0c5ce621d568e08babbc971ac1de91d1a56441c1"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732"}]}, {"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "message": "Implement prune option for fetch", "tree": {"sha": "b74c2169ec55bb7b04b88988c80b1bf362c94bb2", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b74c2169ec55bb7b04b88988c80b1bf362c94bb2"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0"}]}, {"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "message": "Export the constants GIT_FETCH_PRUNE_*", "tree": {"sha": "5709577f3134659270dcb67e32262232dd39067b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/5709577f3134659270dcb67e32262232dd39067b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}, {"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "message": "docs: diff, add missing members", "tree": {"sha": "4d35778d5da21941f7f9288b31d733d99fec30f0", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/4d35778d5da21941f7f9288b31d733d99fec30f0"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "id": 132943348, "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "number": 719, "state": "open", "locked": false, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "98fda364c4fdd26bb7ae1d63fd0f4c819ef31bfd", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "head": {"label": "nhynes:rebased-worktrees", "ref": "rebased-worktrees", "sha": "8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "repo": {"id": 86384396, "name": "pygit2", "full_name": "nhynes/pygit2", "owner": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/nhynes/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/nhynes/pygit2", "forks_url": "https://api.github.com/repos/nhynes/pygit2/forks", "keys_url": "https://api.github.com/repos/nhynes/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/nhynes/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/nhynes/pygit2/teams", "hooks_url": "https://api.github.com/repos/nhynes/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/nhynes/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/nhynes/pygit2/events", "assignees_url": "https://api.github.com/repos/nhynes/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/nhynes/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/nhynes/pygit2/tags", "blobs_url": "https://api.github.com/repos/nhynes/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/nhynes/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/nhynes/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/nhynes/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/nhynes/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/nhynes/pygit2/languages", "stargazers_url": "https://api.github.com/repos/nhynes/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/nhynes/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/nhynes/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/nhynes/pygit2/subscription", "commits_url": "https://api.github.com/repos/nhynes/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/nhynes/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/nhynes/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/nhynes/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/nhynes/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/nhynes/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/nhynes/pygit2/merges", "archive_url": "https://api.github.com/repos/nhynes/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/nhynes/pygit2/downloads", "issues_url": "https://api.github.com/repos/nhynes/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/nhynes/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/nhynes/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/nhynes/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/nhynes/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/nhynes/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/nhynes/pygit2/deployments", "created_at": "2017-03-27T21:11:34Z", "updated_at": "2017-03-27T21:11:36Z", "pushed_at": "2017-07-29T01:55:56Z", "git_url": "git://github.com/nhynes/pygit2.git", "ssh_url": "git@github.com:nhynes/pygit2.git", "clone_url": "https://github.com/nhynes/pygit2.git", "svn_url": "https://github.com/nhynes/pygit2", "homepage": "", "size": 2877, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "24d385a88f9a4e2540ea2c04fa86d76e7c4e17ee", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/719"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "id": 118775335, "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "number": 705, "state": "open", "locked": false, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "04ce62259b3baec23ef043cb793b0eeb62b6438b", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215", "head": {"label": "FabriceSalvaire:master", "ref": "master", "sha": "bdeb03747261ca134be24eb87606b492187cc215", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "repo": {"id": 90155264, "name": "pygit2", "full_name": "FabriceSalvaire/pygit2", "owner": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/FabriceSalvaire/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/FabriceSalvaire/pygit2", "forks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/forks", "keys_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/teams", "hooks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/events", "assignees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/tags", "blobs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/languages", "stargazers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscription", "commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/merges", "archive_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/downloads", "issues_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/deployments", "created_at": "2017-05-03T14:00:19Z", "updated_at": "2017-05-03T14:00:21Z", "pushed_at": "2017-05-03T14:28:16Z", "git_url": "git://github.com/FabriceSalvaire/pygit2.git", "ssh_url": "git@github.com:FabriceSalvaire/pygit2.git", "clone_url": "https://github.com/FabriceSalvaire/pygit2.git", "svn_url": "https://github.com/FabriceSalvaire/pygit2", "homepage": "", "size": 2858, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/705"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/538", "id": 38147484, "html_url": "https://github.com/libgit2/pygit2/pull/538", "diff_url": "https://github.com/libgit2/pygit2/pull/538.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/538.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/538", "number": 538, "state": "open", "locked": false, "title": "Add certificate callback.", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "body": "Existing unit tests pass. Adapted from `__init__.py`.\n", "created_at": "2015-06-19T21:01:21Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "44b25ca81b0424595467102f75733d627fc99b3e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "head": {"label": "alexchamberlain:certificate-check", "ref": "certificate-check", "sha": "d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "repo": {"id": 37744353, "name": "pygit2", "full_name": "alexchamberlain/pygit2", "owner": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/alexchamberlain/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/alexchamberlain/pygit2", "forks_url": "https://api.github.com/repos/alexchamberlain/pygit2/forks", "keys_url": "https://api.github.com/repos/alexchamberlain/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexchamberlain/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexchamberlain/pygit2/teams", "hooks_url": "https://api.github.com/repos/alexchamberlain/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/alexchamberlain/pygit2/events", "assignees_url": "https://api.github.com/repos/alexchamberlain/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/alexchamberlain/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/tags", "blobs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexchamberlain/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexchamberlain/pygit2/languages", "stargazers_url": "https://api.github.com/repos/alexchamberlain/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/alexchamberlain/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscription", "commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexchamberlain/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexchamberlain/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/alexchamberlain/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexchamberlain/pygit2/merges", "archive_url": "https://api.github.com/repos/alexchamberlain/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexchamberlain/pygit2/downloads", "issues_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/alexchamberlain/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexchamberlain/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexchamberlain/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexchamberlain/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/alexchamberlain/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/alexchamberlain/pygit2/deployments", "created_at": "2015-06-19T20:28:49Z", "updated_at": "2015-06-19T20:28:50Z", "pushed_at": "2015-06-19T21:08:20Z", "git_url": "git://github.com/alexchamberlain/pygit2.git", "ssh_url": "git@github.com:alexchamberlain/pygit2.git", "clone_url": "https://github.com/alexchamberlain/pygit2.git", "svn_url": "https://github.com/alexchamberlain/pygit2", "homepage": "", "size": 2775, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/538"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/405", "id": 19969342, "html_url": "https://github.com/libgit2/pygit2/pull/405", "diff_url": "https://github.com/libgit2/pygit2/pull/405.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/405.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/405", "number": 405, "state": "open", "locked": false, "title": "Walker interface reimplemented with CFFI", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "I've reimplemented the `Walker` interface with CFFI; this is a first step towards reimplementing the entire pygit2 Object model with CFFI. It's supposed to be a straightforward rewrite, I haven't made any changes to the API to avoid breaking the backwards compatibility.\n", "created_at": "2014-08-19T09:33:24Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "af575f55908703a89366821cf6ab4fe3bcce48e2", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "head": {"label": "petrhosek:walker-cffi", "ref": "walker-cffi", "sha": "e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/405"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/346", "id": 12586459, "html_url": "https://github.com/libgit2/pygit2/pull/346", "diff_url": "https://github.com/libgit2/pygit2/pull/346.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/346.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/346", "number": 346, "state": "open", "locked": false, "title": "Diff and Patch interface refactored", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "This is a complete refactoring of the diff and patch interface. The changes include:\n- Splitting `Diff` and `Patch` into separate classes and files, including respective tests. This largely follwos the recent development in `libgit2`.\n- Introducing `DiffDelta`, `DiffFile` and `DiffLine` classes and their respective iterators.\n- Moving the recently introduced `Blob` diff methods into patch again to be in line with the respective `libgit2` interface.\n\nThe biggest difference, apart from the code cleanup, is the lazy evaluation due to heavy use of iterators rather than evaluating everything ahead of time as in case of the existing code, which tends to be slow on larger projects.\n\nI have tried to make the interface as \"Pythonic\" as possible, while closely following the underlying `libgit2` C interface. However, some of you might think of a better abstraction and I'd happy to incorporate further changes into the patch.\n", "created_at": "2014-02-15T20:56:20Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "82ab609cb820007df325b82d0180be8c21bd4e7e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205", "head": {"label": "petrhosek:diff-patch-refactor", "ref": "diff-patch-refactor", "sha": "34fd314631b443eae802aba2e712ca7ef9a08205", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/346"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596", "html_url": "https://github.com/libgit2/pygit2/issues/1#issuecomment-578596", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/1", "id": 578596, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:31:25Z", "updated_at": "2010-11-30T19:31:25Z", "author_association": "OWNER", "body": "Indeed, it was using the private clone URL. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600", "html_url": "https://github.com/libgit2/pygit2/issues/2#issuecomment-578600", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/2", "id": 578600, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:32:06Z", "updated_at": "2010-11-30T19:32:06Z", "author_association": "OWNER", "body": "Replaced the build instructions with a link to our website: that way it'll always be up to date.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-597958", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 597958, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2010-12-08T20:21:51Z", "updated_at": "2010-12-08T20:21:51Z", "author_association": "MEMBER", "body": "This changed in libgit2 as of\nhttps://github.com/libgit2/libgit2/commit/44908fe763b1a2097b65c86130ac679c458df7d2\n\nFeel free to update pygit2.c if I don't get the chance to soon.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355", "html_url": "https://github.com/libgit2/pygit2/pull/4#issuecomment-694355", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/4", "id": 694355, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-01-20T22:53:16Z", "updated_at": "2011-01-20T22:53:16Z", "author_association": "OWNER", "body": "Neat, thanks for this, but it looks like I got two pull requests for the same thing. ^^\n\nI've just merged the other one, and while I was at it fixed the test that was failing -- it was an issue in libgit2, so thanks for reporting.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-726750", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 726750, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-01-31T22:56:53Z", "updated_at": "2011-01-31T22:56:53Z", "author_association": "MEMBER", "body": "This appears to have been fixed by 9e919c39662ecc0f0080. I was able to build successfully at HEAD, so I'm going to close this issue. Let me know if you still have problems.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459", "html_url": "https://github.com/libgit2/pygit2/pull/6#issuecomment-739459", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/6", "id": 739459, "user": {"login": "peti", "id": 28323, "avatar_url": "https://avatars3.githubusercontent.com/u/28323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peti", "html_url": "https://github.com/peti", "followers_url": "https://api.github.com/users/peti/followers", "following_url": "https://api.github.com/users/peti/following{/other_user}", "gists_url": "https://api.github.com/users/peti/gists{/gist_id}", "starred_url": "https://api.github.com/users/peti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peti/subscriptions", "organizations_url": "https://api.github.com/users/peti/orgs", "repos_url": "https://api.github.com/users/peti/repos", "events_url": "https://api.github.com/users/peti/events{/privacy}", "received_events_url": "https://api.github.com/users/peti/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-04T16:13:55Z", "updated_at": "2011-02-04T16:13:55Z", "author_association": "NONE", "body": "I can confirm that this patch fixes the build error.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-750527", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 750527, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-08T17:48:08Z", "updated_at": "2011-02-08T17:48:45Z", "author_association": "OWNER", "body": "Hey, this is very nice, but the new compressed text repository is making the tests fail:\n\n```\nTraceback (most recent call last):\nFile \"/Users/tanoku/src/pygit2/test/utils.py\", line 74, in setUp\nz.extractall(temp_dir)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 940, in extractall\nself.extract(zipinfo, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 928, in extract\nreturn self._extract_member(member, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 965, in _extract_member\ntarget = file(targetpath, \"wb\")\nIOError: [Errno 20] Not a directory: '/var/folders/0d/0dHASpI3E9Ca1CvFczxbjU+++TI/-Tmp-/tmpdHiwtC/testrepo/bye.txt'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-751694", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 751694, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-08T22:33:57Z", "updated_at": "2011-02-08T22:33:57Z", "author_association": "MEMBER", "body": "I see from the traceback that you are using Python 2.6.1, it contains some bugs regarding zip files, like [issue 4710](http://bugs.python.org/issue4710). Could you try with a more recent version?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753331", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753331, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T10:56:26Z", "updated_at": "2011-02-09T10:56:26Z", "author_association": "OWNER", "body": "Hm, 2.5.4 fails too, with the following error:\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 87, in <module>\n    **kwargs\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 974, in                 run_commands\n    self.run_command(cmd)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 994, in run_command\n    cmd_obj.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 121, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 101, in with_project_on_sys_path\n    func()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 130, in run_tests\n    testLoader = loader_class()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 767, in __init__\n    self.parseArgs(argv)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 794, in parseArgs\n    self.createTests()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 800, in createTests\n    self.module)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 553, in loadTestsFromName\n    test = obj()\n  File \"/Users/tanoku/src/pygit2/test/__init__.py\", line 41, in test_suite\n    return unittest.defaultTestLoader.loadTestsFromNames(modules)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 541, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'test_blob'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753416", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753416, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T11:37:12Z", "updated_at": "2011-02-09T11:37:12Z", "author_association": "MEMBER", "body": "From the traceback it looks like this has nothing to do with my patches, no regression here.\n\nSupporting Python 2.5 would take more work. I think it is not worth the effort, it is an old version and pygit2 is clearly understaffed. I think it is more interesting to spend time on supporting new versions (Python 3) than on supporting old versions.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753753", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753753, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T13:50:26Z", "updated_at": "2011-02-09T13:50:26Z", "author_association": "OWNER", "body": "Fair enough -- the tests do work with Python 2.7. Nice job!\n\n...However, I'm afraid that 2.6 is still too mainstream as to have the tests broken on it. You need to work around the Zip issue on 2.6 before I can merge this. I'd suggest using GZip instead of Zip.\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753996", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753996, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:07:47Z", "updated_at": "2011-02-09T15:07:47Z", "author_association": "MEMBER", "body": "Accidentally I have reproduced the traceback you found with Python 2.5. It has nothing to do with 2.5 actually.\n\nIt happens pygit2 has two ways to run the tests. If setuptools is installed it will run the tests in-place. But if setuptools is not installed then you need to install pygit2 before running the tests (otherwise you will get that traceback), that's what the documentation says anyway:\n\n```\n$ python setup.py install\n$ python setup.py test\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754027", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754027, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:19:37Z", "updated_at": "2011-02-09T15:19:37Z", "author_association": "MEMBER", "body": "About Python 2.6, it works fine.\n\nJust tested myself and reproduced the same error with 2.6.1:\n\n  IOError: [Errno 20] Not a directory: '/tmp/tmp_W_Hl9/testrepo/bye.txt'\n\nBut the tests pass with 2.6.2 (which was released almost two years ago). By the way I use myself Python 2.6\n\nAnyway, I am going to replace zipfile by tarfile as you suggest, since it looks more robust (the tests may even pass with 2.5)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754072", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754072, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:34:26Z", "updated_at": "2011-02-09T15:34:26Z", "author_association": "MEMBER", "body": "Replaced zipfile by tarfile and now the tests pass even with Python 2.5 (on GNU/Linux, did not check Mac or Windows)\n\nIt was a bad idea to use zipfile in the first place.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754119", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754119, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T15:45:45Z", "updated_at": "2011-02-09T15:45:45Z", "author_association": "OWNER", "body": "This is perfect, thank you very much! Merging now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754264", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754264, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T16:16:15Z", "updated_at": "2011-02-09T16:16:15Z", "author_association": "MEMBER", "body": "cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439", "html_url": "https://github.com/libgit2/pygit2/pull/9#issuecomment-820439", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/9", "id": 820439, "user": {"login": "jszakmeister", "id": 448087, "avatar_url": "https://avatars1.githubusercontent.com/u/448087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jszakmeister", "html_url": "https://github.com/jszakmeister", "followers_url": "https://api.github.com/users/jszakmeister/followers", "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}", "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions", "organizations_url": "https://api.github.com/users/jszakmeister/orgs", "repos_url": "https://api.github.com/users/jszakmeister/repos", "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}", "received_events_url": "https://api.github.com/users/jszakmeister/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-01T00:09:54Z", "updated_at": "2011-03-01T00:09:54Z", "author_association": "CONTRIBUTOR", "body": "I realized that shortly after I submitted the pull request (and I thought I closed this one... but perhaps I forgot).  Thanks anyways!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-831360", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 831360, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-03T18:58:10Z", "updated_at": "2011-03-03T18:58:10Z", "author_association": "MEMBER", "body": "Hello,\n\nI have merged the branch 'add-commit-attributes' by John Szakmeister. This adds Commit.parents, I needed that to\nimplement the equivalent to \"git log -- path\".\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-833919", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 833919, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-04T11:22:05Z", "updated_at": "2011-03-04T11:22:05Z", "author_association": "MEMBER", "body": "This branch does not work after the recent changes to libgit2. I withdraw this pull request to open a new one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-847764", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 847764, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-08T16:20:53Z", "updated_at": "2011-03-08T16:20:53Z", "author_association": "MEMBER", "body": "You can try my fork of pygit2 where this has been fixed:\n\n```\ngit://github.com/jdavid/pygit2.git\n```\n\nI asked for my changes to be merged, see https://github.com/libgit2/pygit2/pull/11\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445", "html_url": "https://github.com/libgit2/pygit2/pull/11#issuecomment-876445", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/11", "id": 876445, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-15T14:48:19Z", "updated_at": "2011-03-15T14:48:19Z", "author_association": "MEMBER", "body": "There have been some more commits since I made this pull request, most important to keep pygit2 working after the changes to libgit2. But there are a few enhancements too:\n- New module function 'init_repository'\n- Added 'IndexEntry.path'\n- Started documentation on using pygit2\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-886641", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 886641, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-17T20:06:59Z", "updated_at": "2011-03-17T20:06:59Z", "author_association": "MEMBER", "body": "The changes have been merged upstream, so this is fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889196", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889196, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T13:34:29Z", "updated_at": "2011-03-18T13:34:29Z", "author_association": "MEMBER", "body": "pygit2 works with the 'master' branch of libgit2, commit b5c5f0f8086ee4\nis the tip of the 'development' branch\n\nOn Fri, 18 Mar 2011 05:31:07 -0700\nhonza\nreply@reply.github.com\nwrote:\n\n> Installed latest [libgit2][libgitsha], zlib and openssl. Using\n> [this][pysha] pygit2 revision, I can't get it to install:\n> \n> bash-3.2$ sudo python setup.py install\n> running install\n> running bdist_egg\n> running egg_info\n> writing pygit2.egg-info/PKG-INFO\n> writing top-level names to pygit2.egg-info/top_level.txt\n> writing dependency_links to pygit2.egg-info/dependency_links.txt\n> reading manifest file 'pygit2.egg-info/SOURCES.txt'\n> writing manifest file 'pygit2.egg-info/SOURCES.txt'\n> installing library code to build/bdist.macosx-10.6-universal/egg\n> running install_lib\n> running build_ext\n> building 'pygit2' extension\n> gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv\n> -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch ppc\n> -arch x86_64 -pipe -I/usr/local/include\n> -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6\n> -c pygit2.c -o build/temp.macosx-10.6-universal-2.6/pygit2.o\n> pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356: error: void\n> value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be lipo: can't open input file: /var/tmp//ccSxjred.out (No\n> such file or directory) error: command 'gcc-4.2' failed with exit\n> status 1\n> \n> [libgitsha]:\n> https://github.com/libgit2/libgit2/commit/b5c5f0f8086ee4e9bccf0703386fd5219ac380c2\n> \n> [pysha]:\n> https://github.com/libgit2/pygit2/commit/6c7df765c1a9a186e721826121f50d0286b4040e\n\n## \n\nJ. David Ib\u00e1\u00f1ez\nItaapy http://www.itaapy.com         Tel +33 (0)1 42 23 67 45\n9 rue Darwin, 75018 Paris              Fax +33 (0)1 53 28 27 88\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889316", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889316, "user": {"login": "honza", "id": 206357, "avatar_url": "https://avatars3.githubusercontent.com/u/206357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honza", "html_url": "https://github.com/honza", "followers_url": "https://api.github.com/users/honza/followers", "following_url": "https://api.github.com/users/honza/following{/other_user}", "gists_url": "https://api.github.com/users/honza/gists{/gist_id}", "starred_url": "https://api.github.com/users/honza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honza/subscriptions", "organizations_url": "https://api.github.com/users/honza/orgs", "repos_url": "https://api.github.com/users/honza/repos", "events_url": "https://api.github.com/users/honza/events{/privacy}", "received_events_url": "https://api.github.com/users/honza/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T14:13:32Z", "updated_at": "2011-03-18T14:13:32Z", "author_association": "NONE", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490", "html_url": "https://github.com/libgit2/pygit2/issues/14#issuecomment-940490", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/14", "id": 940490, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:43:47Z", "updated_at": "2011-03-31T10:43:47Z", "author_association": "MEMBER", "body": "I hope to update pygit2 by tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940505", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940505, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:51:00Z", "updated_at": "2011-03-31T10:51:00Z", "author_association": "MEMBER", "body": "I don't like the \"GPLv2 + exception\" for pygit2 either. Personally I would prefer LGPLv3, that would be fine to you?\n\nTo change the license the agreement of everybody that contributed to pygit2 is required, starting by Dave Borowitz, who has written more than half of it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940525", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940525, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T11:00:19Z", "updated_at": "2011-03-31T18:46:19Z", "author_association": "CONTRIBUTOR", "body": "According to wikipedia, the LGPL, even though it usually refers to library linking, may also be generalized into 'using' the library.\nAs python doesn't explicitly link pygit2 when importing it, the LGPL wouldn't really help unless we just regard pygit2 as being 'used' by my library. I don't know what lawyers say about that, but I would be fine with LGPL, from what I read in the wiki at least.\n\nPersonally I think the LGPL was designed just with dynamic and static libraries in mind, but maybe it can be widened to the general use of one library by another, no matter which system of linkage is actually employed.\n\nMaybe it would already be enough to adjust the linkage exemption to state that it may be linked to _and_ imported. This should be clear enough to allow git-python to use it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942629", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942629, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:25:33Z", "updated_at": "2011-03-31T19:25:33Z", "author_association": "MEMBER", "body": "On Thu, Mar 31, 2011 at 03:27, Byron <\nreply@reply.github.com>wrote:\n\n> Hi,\n> \n> As the answer to this question might be interesting for others as well, I\n> make it public using the issue system.\n> \n> Pygit2 uses the same license as libgit2, the GPL with linkage exception.\n> The problem I see is that this exception doesn't apply to the usage of\n> pygit2 within other python programs and libraries which are not necessarily\n> licensed under GPL.\n\nI've been assured by a lawyer that the linkage exception does apply to the\nnormal Python import mechanism. So you can safely \"import pygit2\" from a BSD\nproject without making that project GPL+exception. (You still cannot safely\nincorporate pygit2 source code in the source of a BSD project.)\n\n> For instance, I would be interested in using pygit2 in one of my projects,\n> gitdb, which in turn can be used by git-python. Both are licensed under\n> NewBSD, so I am worried that using pygit2 would compromise this license and\n> force it into the GPL.\n\nAs long as \"using\" == \"importing\", this is fine.\n\n> Could you please clarify the situation ?\n> Thank you,\n> Sebastian\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/libgit2/pygit2/issues/15\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942643", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942643, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:29:09Z", "updated_at": "2011-03-31T19:29:18Z", "author_association": "CONTRIBUTOR", "body": "Great to hear, thanks !\nI am quite eager to find out how libgit2 performs within the git-python streaming framework, so I will try to implement a gitdb which allows to obtain object information and object streams. Lets see how that works out :).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942714", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942714, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-03-31T19:45:32Z", "updated_at": "2011-03-31T19:45:32Z", "author_association": "OWNER", "body": "Hey, just stepping by to remind you that the linking exception is indeed _very_ permissive: you could even link your own Python library with a static version of libgit2 without it affecting your own program's license. I'm looking forward to see what can you come up with the git-python streaming framework. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-530320", "id": 530320, "user": {"login": "encukou", "id": 302922, "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-14T03:18:43Z", "updated_at": "2011-08-14T03:18:43Z", "author_association": "CONTRIBUTOR", "body": "Does this make sense for Python 2? Maybe the str & unicode types are too interchangeable there to select functionality based on them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-532550", "id": 532550, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-15T19:59:22Z", "updated_at": "2011-08-15T19:59:22Z", "author_association": "MEMBER", "body": "I think the behaviour must be the same for both Python 2 and 3, otherwise everything will be ore complicated (implementation, documentation, ...)\n\nBesides, in this case, the remark by @pyos [1] also applies to Python 2. Later on we will add to this method the ability to get an object by a short hex-sha, by calling `git_object_lookup_prefix`. If the hex-sha passed is 20 bytes long, how to know it is an hex-sha and not a raw-sha? I think to make the difference by the type is a fine solution.\n\n[1] https://github.com/libgit2/pygit2/issues/43#issuecomment-1791199\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621226", "id": 621226, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-29T22:38:07Z", "updated_at": "2011-09-29T22:38:07Z", "author_association": "NONE", "body": "May I ask what was the reasoning behind this change? I have to update all my code and tests now. :-(\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621935", "id": 621935, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-30T07:23:58Z", "updated_at": "2011-09-30T07:23:58Z", "author_association": "MEMBER", "body": "Readability. It is not evident whether the word \"sha\" refers to the raw oid (20 bytes byte string) or to its hexadecimal form (40 chars text string). At least `.hex` has the virtue of not being ambiguous.\n\nNote that now we also have `object.oid`, the raw oid as a 20 bytes byte string. And that the old `.sha` and the new `.hex` are not exactly the same, before `.sha` was a byte string, now `.hex` is a text (unicode) string. So this was the right time to make the change.\n\nAlso, pygit2 is still, like libgit2, alpha software. So changes to the API may happen from time to time, they will be documented on every release.\n\nThis commit is part of the work to fix issue 43, https://github.com/libgit2/pygit2/issues/43\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-626333", "id": 626333, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-10-03T11:58:07Z", "updated_at": "2011-10-03T11:58:07Z", "author_association": "NONE", "body": "Alright, understood. Without any other alternatives, we basically have no choice but to rely on alpha software\u2014so no worries about that, I realize that interfaces do change. I was just curious about the reasoning.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091", "html_url": "https://github.com/libgit2/pygit2/commit/c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04#commitcomment-1421091", "id": 1421091, "user": {"login": "luztak", "id": 1357267, "avatar_url": "https://avatars2.githubusercontent.com/u/1357267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luztak", "html_url": "https://github.com/luztak", "followers_url": "https://api.github.com/users/luztak/followers", "following_url": "https://api.github.com/users/luztak/following{/other_user}", "gists_url": "https://api.github.com/users/luztak/gists{/gist_id}", "starred_url": "https://api.github.com/users/luztak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luztak/subscriptions", "organizations_url": "https://api.github.com/users/luztak/orgs", "repos_url": "https://api.github.com/users/luztak/repos", "events_url": "https://api.github.com/users/luztak/events{/privacy}", "received_events_url": "https://api.github.com/users/luztak/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04", "created_at": "2012-06-06T05:05:29Z", "updated_at": "2012-06-06T05:05:29Z", "author_association": "NONE", "body": "Is there any func or class for push,please?Or could you tell me how push works?thx.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427309", "id": 2427309, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T13:17:17Z", "updated_at": "2013-01-13T13:17:17Z", "author_association": "CONTRIBUTOR", "body": "Typo in commit message, should be pygit2.com\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427780", "id": 2427780, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T18:14:39Z", "updated_at": "2013-01-13T18:14:39Z", "author_association": "MEMBER", "body": "www.pygit2.org actually, but it's to late to fix a commit message\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464644", "id": 2464644, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T15:40:53Z", "updated_at": "2013-01-19T15:40:53Z", "author_association": "CONTRIBUTOR", "body": "Is there a list where this is tracked? I spent about an hour trying to fix the broken linker on an old machine I was getting unresolved symbol errors on due to this one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464811", "id": 2464811, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:24:41Z", "updated_at": "2013-01-19T17:24:41Z", "author_association": "MEMBER", "body": "No. What I do is to keep a libgit2 clone and from time to time check whether pygit2 still works.\n\n(In my opinion, the problem is libgit2 does not release often enough.)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464823", "id": 2464823, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:30:51Z", "updated_at": "2013-01-19T17:30:51Z", "author_association": "CONTRIBUTOR", "body": "I agree completely. Having to have \"install libgit2 from their development head\" in the install instructions for my project is pretty awkward.\n\nIn this instance it was my fault for not diagnosing properly, I'll keep this in mind going forward. Cheers.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464834", "id": 2464834, "user": {"login": "wking", "id": 209920, "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wking", "html_url": "https://github.com/wking", "followers_url": "https://api.github.com/users/wking/followers", "following_url": "https://api.github.com/users/wking/following{/other_user}", "gists_url": "https://api.github.com/users/wking/gists{/gist_id}", "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wking/subscriptions", "organizations_url": "https://api.github.com/users/wking/orgs", "repos_url": "https://api.github.com/users/wking/repos", "events_url": "https://api.github.com/users/wking/events{/privacy}", "received_events_url": "https://api.github.com/users/wking/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:39:48Z", "updated_at": "2013-01-19T17:39:48Z", "author_association": "CONTRIBUTOR", "body": "On Sat, Jan 19, 2013 at 09:30:54AM -0800, Richo Healey wrote:\n\n> Having to have \"install libgit2 from their development head\" in the\n> install instructions for my project is pretty awkward.\n\nThis should all settle down once libgit2 freezes their API (soon?\nlibgit2/libgit2#1028).  In the mean time, there are usually known-good\nlibgit2 SHAs in the pygit2 upgrade commits.  The problem with _not_\ntracking the development branch of libgit2 is that their master branch\nhasn't been bumped since 2012-05-19, so lots of features are missing\nfrom the master branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382", "html_url": "https://github.com/libgit2/pygit2/commit/4b720472601e76e4bd2d0097def7613feb17b7f7#commitcomment-2548382", "id": 2548382, "user": {"login": "Gonnzik", "id": 3456303, "avatar_url": "https://avatars1.githubusercontent.com/u/3456303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gonnzik", "html_url": "https://github.com/Gonnzik", "followers_url": "https://api.github.com/users/Gonnzik/followers", "following_url": "https://api.github.com/users/Gonnzik/following{/other_user}", "gists_url": "https://api.github.com/users/Gonnzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gonnzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gonnzik/subscriptions", "organizations_url": "https://api.github.com/users/Gonnzik/orgs", "repos_url": "https://api.github.com/users/Gonnzik/repos", "events_url": "https://api.github.com/users/Gonnzik/events{/privacy}", "received_events_url": "https://api.github.com/users/Gonnzik/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "4b720472601e76e4bd2d0097def7613feb17b7f7", "created_at": "2013-02-02T16:48:48Z", "updated_at": "2013-02-02T16:48:48Z", "author_association": "NONE", "body": "\u0421 \u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0431\u043b\u044f (\u041a\u0430\u0440\u0430\u0441\u044c)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808", "html_url": "https://github.com/libgit2/pygit2/commit/673053dc7136cc6ba87296e23d3e817796928a99#commitcomment-2952808", "id": 2952808, "user": {"login": "cboos", "id": 153279, "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboos", "html_url": "https://github.com/cboos", "followers_url": "https://api.github.com/users/cboos/followers", "following_url": "https://api.github.com/users/cboos/following{/other_user}", "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboos/subscriptions", "organizations_url": "https://api.github.com/users/cboos/orgs", "repos_url": "https://api.github.com/users/cboos/repos", "events_url": "https://api.github.com/users/cboos/events{/privacy}", "received_events_url": "https://api.github.com/users/cboos/received_events", "type": "User", "site_admin": false}, "position": 22, "line": 422, "path": "src/pygit2.c", "commit_id": "673053dc7136cc6ba87296e23d3e817796928a99", "created_at": "2013-04-05T12:24:43Z", "updated_at": "2013-04-05T12:24:43Z", "author_association": "CONTRIBUTOR", "body": "I suppose this is a typo... \"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH\"\ns/MATC/MATCH/\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232373", "id": 3232373, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T03:56:28Z", "updated_at": "2013-05-17T03:56:28Z", "author_association": "NONE", "body": "why `GIT_DIFF_LINE_CONTEXT` has been removed ?\n\nin version 0.18.0 \nI can do\n\n`from pygit2 import GIT_DIFF_LINE_CONTEXT`\n\nbut now I can't , why?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232412", "id": 3232412, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T04:06:32Z", "updated_at": "2013-05-17T04:06:32Z", "author_association": "NONE", "body": "btw, I thought this parameter is used to control how many context line I would show in diff, like `git diff -U`, is this correct, how can I \nuse it properly?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3236676", "id": 3236676, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T16:28:58Z", "updated_at": "2013-05-17T16:28:58Z", "author_association": "MEMBER", "body": "These constants are used when looking at text lines in a diff to indicate if the line is a context line (or and added line or a removed line). The set the number of context lines, you need to set the `context_lines` value in the `git_diff_options`. It appears to me that that field of the options is not current exposed through pygit2.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3247623", "id": 3247623, "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T13:08:23Z", "updated_at": "2013-05-20T13:08:23Z", "author_association": "MEMBER", "body": "In pygit2 we convert the `context_line` to unicode (for python2/3 compability reasons). So if you use these constants for comparison it will fail. I think '+','-',' ' and '\\n' are more than enough meaningful. Btw pygit2 has support for `context_lines` with `#77b5cdc` (not yet merged to master).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3249463", "id": 3249463, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T17:03:51Z", "updated_at": "2013-05-20T17:03:51Z", "author_association": "MEMBER", "body": "@cholin Just a heads up, in recent libgit2 updates to the `development` branch, I had to introduce a new constant `GIT_DIFF_LINE_CONTEXT_EOFNL` that deals with the case where both sides of a diff end without an newline and those lines appear in the context at the end of the diff. When I added this new constant, I changed the values for the `...EOFNL` constants so that we're no longer using `'\\n'` as a value (since I worried it was confusing). The new values are `'>'` is ADD_EOFNL, `'<'` is DEL_EOFNL, and `'='` is CONTEXT_EOFNL.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324", "html_url": "https://github.com/libgit2/pygit2/commit/3474dca78f2b87ed7ce8222eb0ce168e59437e23#commitcomment-3980324", "id": 3980324, "user": {"login": "luchuan", "id": 811665, "avatar_url": "https://avatars1.githubusercontent.com/u/811665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luchuan", "html_url": "https://github.com/luchuan", "followers_url": "https://api.github.com/users/luchuan/followers", "following_url": "https://api.github.com/users/luchuan/following{/other_user}", "gists_url": "https://api.github.com/users/luchuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/luchuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luchuan/subscriptions", "organizations_url": "https://api.github.com/users/luchuan/orgs", "repos_url": "https://api.github.com/users/luchuan/repos", "events_url": "https://api.github.com/users/luchuan/events{/privacy}", "received_events_url": "https://api.github.com/users/luchuan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 500, "path": "src/repository.c", "commit_id": "3474dca78f2b87ed7ce8222eb0ce168e59437e23", "created_at": "2013-08-30T05:53:47Z", "updated_at": "2013-08-30T05:53:47Z", "author_association": "NONE", "body": ":beer:\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4840766", "id": 4840766, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T04:38:52Z", "updated_at": "2013-12-12T04:38:52Z", "author_association": "NONE", "body": "hi @carlosmn is `git_diff_list` depreciated in libgit2\uff0c we here has a kind of fork of `pygi2` with some modification. The fork hasn't sync with the main repo for a while, and now there are some conflicts with `git_diff_list`, I found your commit to adjust to libgit2, is there any explanation or documentation about the `git_diff_list` thing, either in libgit2 or pygit2. Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4841360", "id": 4841360, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T06:52:05Z", "updated_at": "2013-12-12T06:52:05Z", "author_association": "NONE", "body": "seems that it's just rename https://github.com/libgit2/libgit2/commit/3ff1d123736e5686fb9ec16e65828d5b8ffa2b30\n\nso I can just rename it , cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816", "html_url": "https://github.com/libgit2/pygit2/commit/9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7#commitcomment-7623816", "id": 7623816, "user": {"login": "guysoft", "id": 325670, "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7", "created_at": "2014-09-02T13:20:31Z", "updated_at": "2014-09-02T13:20:31Z", "author_association": "NONE", "body": "Hey,\nWhy was the MergeResult object object removed? How do I get now the oid of the merged result? It does not seem to appear in the working directory for me.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684", "html_url": "https://github.com/libgit2/pygit2/commit/0ba17a5b4608706f696c2212315ea0bb301db209#commitcomment-10577684", "id": 10577684, "user": {"login": "luto", "id": 2158203, "avatar_url": "https://avatars3.githubusercontent.com/u/2158203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luto", "html_url": "https://github.com/luto", "followers_url": "https://api.github.com/users/luto/followers", "following_url": "https://api.github.com/users/luto/following{/other_user}", "gists_url": "https://api.github.com/users/luto/gists{/gist_id}", "starred_url": "https://api.github.com/users/luto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luto/subscriptions", "organizations_url": "https://api.github.com/users/luto/orgs", "repos_url": "https://api.github.com/users/luto/repos", "events_url": "https://api.github.com/users/luto/events{/privacy}", "received_events_url": "https://api.github.com/users/luto/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0ba17a5b4608706f696c2212315ea0bb301db209", "created_at": "2015-04-05T15:20:35Z", "updated_at": "2015-04-05T15:20:35Z", "author_association": "NONE", "body": "thank you :heart: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701", "html_url": "https://github.com/libgit2/pygit2/commit/5c061cbb0a11e68cc36def504d8d74c10c255df0#commitcomment-21637701", "id": 21637701, "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5c061cbb0a11e68cc36def504d8d74c10c255df0", "created_at": "2017-04-05T13:47:48Z", "updated_at": "2017-04-05T13:47:48Z", "author_association": "CONTRIBUTOR", "body": "This closes #669 ", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984", "pull_request_review_id": null, "id": 462984, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "I bet you mean:\n\n```\nif (builder) {\n```\n", "created_at": "2012-02-17T19:16:11Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992", "pull_request_review_id": null, "id": 462992, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Yes I do. `builder` used to be called `bld` and it looks like I didn't clean up properly.\n", "created_at": "2012-02-17T19:19:09Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078", "pull_request_review_id": null, "id": 463078, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "- I wonder what Py_XDECREF will do with a `git_treebuilder` struct.\n- The point of using `Py_XDECREF` instead of `Py_DECREF` is that you don't need to check for NULL.\n", "created_at": "2012-02-17T19:34:01Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739", "pull_request_review_id": null, "id": 464739, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It doesn't seem to mind a `git_treebuilder` that much (it doesn't crash in the tests). Some example code must have been wrong about `Py_XDECREF`. I saw it being used with a guard. I'll update shortly.\n", "created_at": "2012-02-18T12:24:38Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062", "pull_request_review_id": null, "id": 465062, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "This line should not be. The dealloc function is called when the refcount is zero. Decreasing it below zero is not correct.\n", "created_at": "2012-02-18T22:17:20Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804", "pull_request_review_id": null, "id": 470804, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Now that you mention it, it does look silly, will fix.\n", "created_at": "2012-02-21T11:21:41Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081", "pull_request_review_id": null, "id": 3873081, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "sorry, I do not familiar with C. \nThe old code seems like try to compatible with either unicode and bytes. So if use \"ssi\", we can accept them both or does this require specific python version?\n", "created_at": "2013-04-19T13:13:29Z", "updated_at": "2013-04-19T13:13:29Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195", "pull_request_review_id": null, "id": 3873195, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "Well unicode and python is a bit messy. But PyArg_ParseTuple with `s` as argument will convert Strings and Unicode Strings to a c string pointer. So we can use PyArg_ParseTuple and do not loose any functionalities... Check the api: [python2.7](http://docs.python.org/2.7/c-api/arg.html) and [python3](http://docs.python.org/2.7/c-api/arg.html)\n", "created_at": "2013-04-19T13:20:15Z", "updated_at": "2013-04-19T13:20:15Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248", "pull_request_review_id": null, "id": 3873248, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "Thanks. Then it's much clear now.\n", "created_at": "2013-04-19T13:23:56Z", "updated_at": "2013-04-19T13:23:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132", "pull_request_review_id": null, "id": 4185132, "diff_hunk": "@@ -88,8 +88,8 @@\n                 PyList_SetItem(py_hunk->lines, 0,\n                     to_unicode_n(header, header_len, NULL, NULL));\n                 for (j=1; j < lines_in_hunk + 1; ++j) {\n-                    err = git_diff_patch_get_line_in_hunk(NULL, &line,\n-                              &line_len, NULL, NULL, patch, i, j - 1);\n+                    err = git_diff_patch_get_line_in_hunk(&py_hunk->origin,", "path": "src/diff.c", "position": 15, "original_position": 15, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "@cholin hi, I think here exist a problem, that, for `git_diff_patch_get_line_in_hunk`, this get a line detail for every line, but only the last one of 'origin' get reserved in hunk.origin.\n", "created_at": "2013-05-12T09:06:12Z", "updated_at": "2013-05-12T09:06:12Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006", "pull_request_review_id": null, "id": 4188006, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "this will break application code. and I change my code to receive int to char now. if this can be noticed in advance pull from master.\nby the way, do you guys recommend we application developer always use the latest code of pygit2?\n", "created_at": "2013-05-13T05:19:37Z", "updated_at": "2013-05-13T05:19:37Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703", "pull_request_review_id": null, "id": 4189703, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "I do not think you should use the latest version of pygit2 in your application. Right now the api isn't stable. We try to avoid these changes but better now than after a 1.0 release (which could be in near future). If you depend on a recent change, well then you have no other choice...\n", "created_at": "2013-05-13T09:01:05Z", "updated_at": "2013-05-13T09:01:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335", "pull_request_review_id": null, "id": 7895335, "diff_hunk": "@@ -95,8 +96,164 @@\n }\n \n \n+PyObject * get_pylist_from_git_strarray(git_strarray *strarray)\n+{\n+    int index;\n+    PyObject *new_list;\n+\n+    new_list = PyList_New(strarray->count);\n+    for (index = 0; index < strarray->count; (index)++ ) {\n+        PyList_SET_ITEM(\n+                       new_list,\n+                       index,\n+                       PyString_FromString(strarray->strings[index]));", "path": "src/remote.c", "position": null, "original_position": 31, "commit_id": "6050ae021dad0bc1af053b5fd1b6a431bf160df0", "original_commit_id": "ea8901f417ec29eb39524fecf23dda9760fd2148", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "We have `to_unicode` for this which works across verisions.\n", "created_at": "2013-11-25T16:21:44Z", "updated_at": "2013-12-02T15:18:04Z", "html_url": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/290", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/290"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225", "pull_request_review_id": null, "id": 9060225, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Why not use `\"s\"` as the format directly?\n", "created_at": "2014-01-21T23:54:43Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396", "pull_request_review_id": null, "id": 9064396, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "I'll fix this.\n", "created_at": "2014-01-22T03:30:59Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021", "pull_request_review_id": null, "id": 9171021, "diff_hunk": "@@ -256,7 +258,7 @@\n PyTypeObject RefspecType = {\n     PyVarObject_HEAD_INIT(NULL, 0)\n     \"_pygit2.Refspec\",                         /* tp_name           */\n-    sizeof(Remote),                            /* tp_basicsize      */\n+    sizeof(Refspec),                            /* tp_basicsize      */", "path": "src/remote.c", "position": 19, "original_position": 19, "commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "original_commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "More than one space.\n", "created_at": "2014-01-25T11:03:56Z", "updated_at": "2014-01-25T11:03:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155", "pull_request_review_id": null, "id": 14758155, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why not `from_c` like in `Index.from_c`? Is more consistent this way\n", "created_at": "2014-07-10T10:16:38Z", "updated_at": "2014-07-10T10:16:38Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262", "pull_request_review_id": null, "id": 14761262, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Because it's a special function. I went back and forth on that one, but this is a private function that only makes sense inside pygit2. The consistency should go the other way.\n", "created_at": "2014-07-10T11:54:21Z", "updated_at": "2014-07-10T11:54:21Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831", "pull_request_review_id": null, "id": 14817831, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why do you need to iterate? You can do it with 2 if statements:\n\n``` python\nif 'strategy' in kwargs:\n  copts.checkout_strategy = kwargs['strategy']\n\nif 'directory' in kwargs:\n  target_dir = ffi.new('char[]', to_str(kwargs['directory']))\n  refs.append(target_dir)\n  copts.target_directory = target_dir\n```\n", "created_at": "2014-07-11T12:25:54Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881", "pull_request_review_id": null, "id": 14817881, "diff_hunk": "@@ -221,7 +281,7 @@ def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n     def diff(self, a=None, b=None, cached=False, flags=GIT_DIFF_NORMAL,\n              context_lines=3, interhunk_lines=0):\n         \"\"\"\n-        Show changes between the working tree and the index or a tree,\n+        Sow changes between the working tree and the index or a tree,", "path": "pygit2/repository.py", "position": null, "original_position": 105, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "I think you delete by mistake an `h` from `Show`\n", "created_at": "2014-07-11T12:27:46Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235", "pull_request_review_id": null, "id": 14818235, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It's a leftover from working with less abstract constructions; but it's a guess as to how many parameters will actually be passed versus how many we will be looking at. I'm not a fan of looking up the same key twice, but it can be reduced.\n", "created_at": "2014-07-11T12:41:16Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294", "pull_request_review_id": null, "id": 14854294, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "I remember now why I wanted to iterate over the inputs instead of checking for the known keys: if the programmer using this method makes a typo, we will ignore that option instead of complaining, which can cause subtle bugs, as there is no indication that we're ignoring an argument that was passed. I didn't end up doing it as we just have the two things, but when this gets extended, we should raise an exception if we get something we don't recognise as an option.\n", "created_at": "2014-07-12T17:23:34Z", "updated_at": "2014-07-12T17:23:34Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085", "pull_request_review_id": null, "id": 15143085, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "Just changed this static method so it is shorter and fails on unexpected arguments.\n", "created_at": "2014-07-19T10:32:13Z", "updated_at": "2014-07-19T10:32:13Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992", "pull_request_review_id": null, "id": 15392992, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "All of these values will be unitialised if they're not passed. Instead of this, you should let `PyArg_ParseTupleAndKeywords` write into the options structure directly.\n", "created_at": "2014-07-25T09:36:57Z", "updated_at": "2014-07-25T09:40:42Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170", "pull_request_review_id": null, "id": 15393170, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "ArnoVanLumig", "id": 893745, "avatar_url": "https://avatars3.githubusercontent.com/u/893745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnoVanLumig", "html_url": "https://github.com/ArnoVanLumig", "followers_url": "https://api.github.com/users/ArnoVanLumig/followers", "following_url": "https://api.github.com/users/ArnoVanLumig/following{/other_user}", "gists_url": "https://api.github.com/users/ArnoVanLumig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnoVanLumig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnoVanLumig/subscriptions", "organizations_url": "https://api.github.com/users/ArnoVanLumig/orgs", "repos_url": "https://api.github.com/users/ArnoVanLumig/repos", "events_url": "https://api.github.com/users/ArnoVanLumig/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnoVanLumig/received_events", "type": "User", "site_admin": false}, "body": "Thanks!\n\nI actually figured that out myself but forgot to commit and push it... Thanks for the heads-up!\n", "created_at": "2014-07-25T09:41:56Z", "updated_at": "2014-07-25T09:41:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723", "pull_request_review_id": null, "id": 16031723, "diff_hunk": "@@ -61,6 +61,11 @@ class Keypair(object):\n     This is an object suitable for passing to a remote's credentials\n     callback and for returning from said callback.\n \n+    :param str username: the username used in the remote URL", "path": "pygit2/credentials.py", "position": null, "original_position": 4, "commit_id": "d752e8550b50d10abe8f0252e44e801ef71b263b", "original_commit_id": "f787a52e66c67958a9127f1a900c07c4ed48c879", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Again, this has nothing to do with the username the user may have passed as a hint. _This_ username is the only one that counts, and it has to be the username as which you wish to authenticate to the ssh host.\n", "created_at": "2014-08-10T15:19:27Z", "updated_at": "2014-08-11T22:51:41Z", "html_url": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/398", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/398"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524", "pull_request_review_id": null, "id": 16348524, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "There's no need for this line. You're already setting the version above with the init function. If the version does increase, this would cause libgit2 to consider the struct to have a different layout.\n", "created_at": "2014-08-18T11:45:28Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362", "pull_request_review_id": null, "id": 16349362, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "mduggan", "id": 3765590, "avatar_url": "https://avatars2.githubusercontent.com/u/3765590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mduggan", "html_url": "https://github.com/mduggan", "followers_url": "https://api.github.com/users/mduggan/followers", "following_url": "https://api.github.com/users/mduggan/following{/other_user}", "gists_url": "https://api.github.com/users/mduggan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mduggan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mduggan/subscriptions", "organizations_url": "https://api.github.com/users/mduggan/orgs", "repos_url": "https://api.github.com/users/mduggan/repos", "events_url": "https://api.github.com/users/mduggan/events{/privacy}", "received_events_url": "https://api.github.com/users/mduggan/received_events", "type": "User", "site_admin": false}, "body": "Ah, I was doing it in a little bit of a weird order.. I wanted to create the \"default\" callbacks first so that any error could raise before the custom callbacks had been set.. but fair point about the version number being set differently on the two lines.. if it changes in one place it will need to change in both,\n", "created_at": "2014-08-18T12:11:45Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924", "pull_request_review_id": null, "id": 18427924, "diff_hunk": "@@ -321,6 +321,30 @@ def push(self, spec, signature=None, message=None):\n         :param Signature signature: signature to use when updating the tips\n         :param str message: message to use when updating the tips\n         \"\"\"\n+        # Get the default callbacks first\n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks, 1)\n+        check_error(err)\n+\n+        # Build custom callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1\n+        callbacks.sideband_progress = self._sideband_progress_cb\n+        callbacks.transfer_progress = self._transfer_progress_cb\n+        callbacks.update_tips = self._update_tips_cb\n+        callbacks.credentials = self._credentials_cb\n+        # We need to make sure that this handle stays alive\n+        self._self_handle = ffi.new_handle(self)", "path": "pygit2/remote.py", "position": 17, "original_position": 17, "commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "original_commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "`self._self_handle` needs to be set to `None` after the push operation completes, next to freeing the push object itself.\n", "created_at": "2014-10-04T06:43:23Z", "updated_at": "2014-10-04T06:43:23Z", "html_url": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/431", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/431"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737", "pull_request_review_id": null, "id": 17552737, "diff_hunk": "@@ -85,3 +85,9 @@ def credential_tuple(self):\n \n     def __call__(self, _url, _username, _allowed):\n         return self\n+\n+\n+class KeypairFromAgent(Keypair):\n+    def __init__(self, username):\n+        self._username = username\n+        super(KeypairFromAgent, self).__init__(username, None, None, None)", "path": "pygit2/credentials.py", "position": null, "original_position": 9, "commit_id": "9aa39aafbc4e9e5920086cdafdb96270ee66ebe5", "original_commit_id": "4b9fe1cc7c54735e3a0a062d0ffe013d4e4d984d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "One of these lies is redundant. If we're going to rely on the superclass' constructor, then there's no need for us to store the username explicitly.\n", "created_at": "2014-09-15T16:35:10Z", "updated_at": "2014-10-07T08:48:52Z", "html_url": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/424", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/424"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "3": {"issues": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/765", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/events", "html_url": "https://github.com/libgit2/pygit2/issues/765", "id": 288615758, "number": 765, "title": "big endian: FAIL: test_no_context_lines (test.test_patch.PatchTest)", "user": {"login": "onovy", "id": 1649603, "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-15T14:39:47Z", "updated_at": "2018-01-15T14:39:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\ntest.test_patch.PatchTest.test_no_context_lines fails on archs mips, s390x, hppa, powerpc or ppc64. I think all of them are \"big endian\". This bug is new in 0.26.3, because before this version test_no_context_lines test didn't exists.\r\n\r\n```\r\nFAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/test/test_patch.py\", line 196, in test_no_context_lines\r\n    self.assertEqual(context_count, 0)\r\nAssertionError: 1 != 0\r\n```\r\n\r\nSee: https://buildd.debian.org/status/package.php?p=python-pygit2\r\n\r\nThanks for fixing.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/events", "html_url": "https://github.com/libgit2/pygit2/issues/764", "id": 288579376, "number": 764, "title": "tree.diff_to_tree results in many unnecessary sys calls", "user": {"login": "Nukesor", "id": 3322822, "avatar_url": "https://avatars2.githubusercontent.com/u/3322822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nukesor", "html_url": "https://github.com/Nukesor", "followers_url": "https://api.github.com/users/Nukesor/followers", "following_url": "https://api.github.com/users/Nukesor/following{/other_user}", "gists_url": "https://api.github.com/users/Nukesor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nukesor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nukesor/subscriptions", "organizations_url": "https://api.github.com/users/Nukesor/orgs", "repos_url": "https://api.github.com/users/Nukesor/repos", "events_url": "https://api.github.com/users/Nukesor/events{/privacy}", "received_events_url": "https://api.github.com/users/Nukesor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-15T12:32:34Z", "updated_at": "2018-01-17T22:44:46Z", "closed_at": null, "author_association": "NONE", "body": "Hi!\r\n\r\nI'm currently working on a git scanner with a very high throughput for my bachelor thesis.\r\nAs the scanner runs with 8 threads, I'm observing severe slowdowns on my server.\r\nAfter running the command with `strace` i noticed that there are a whole lot of unnecessary syscalls issued on each diff. It looks like  for each file in the diff, there is one `stat` for the actual file, two `access` for `/etc/gitattributes` and two `stat` for `/info/attributes`. \r\n\r\nThis results in a lot of syscalls and slows things down significantly as the program seems to wait for those calls most of the time. The repositories are located inside `/tmp` and cleaned after each scan. There are no signs of RAM shortage as there are about 8GB+ unused space in the `/tmp` fs.\r\n\r\nThe repositories are cloned `bare`. The actual function call is:\r\n```\r\ndiff = commit.tree.diff_to_tree(commit.parents[0].tree)\r\nself.commit_stats[commit.hex] = {\r\n    'additions': diff.stats.insertions,\r\n    'deletions': diff.stats.deletions,\r\n}\r\n```\r\n\r\nI'm not sure if this is the right place or if this is rather a libgit2 issue.\r\nAnyway I'm happy for any help as I'm not that familiar with the pythin-C binding mechanics.\r\n\r\nRelevant strace output example:\r\n```\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/events", "html_url": "https://github.com/libgit2/pygit2/issues/752", "id": 278706454, "number": 752, "title": "Performance: speed of getting `blob.data` for large files (as compared to GitPython)", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T18:37:55Z", "updated_at": "2017-12-02T18:37:55Z", "closed_at": null, "author_association": "NONE", "body": "I have compared speed of equivalent to `git show <revision>:<pathname>` in both pygit2 and GitPython (the pure-Python implementation). In all other cases that I have tested pygit2 is faster, but for very large files `git show` / `git cat-file` equivalent is slower.\r\n\r\npygit2 code:\r\n``` python\r\nblob = repo.revparse_single(commit + ':' + path)\r\nresult = blob.data\r\n```\r\n\r\nGitPython code:\r\n``` python\r\nblob = repo.rev_parse(commit + ':' + path)\r\nresult = blob.data_stream.read()\r\n```\r\n\r\nDo you have any ideas why pygit2 is slower here?\r\n\r\nP.S. would it be difficult to add streaming access?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/events", "html_url": "https://github.com/libgit2/pygit2/issues/750", "id": 278573551, "number": 750, "title": "Suggestion: better handling of `repo.set_head(pygit2.Commit)`", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T19:38:10Z", "updated_at": "2017-12-25T18:54:52Z", "closed_at": null, "author_association": "NONE", "body": "I have tried to emulate `git checkout --detach <commit>` in pygit2, to create **detached HEAD** checkout, and I did come up with the following rough equivalent (though the following does not uses transactions as git does):\r\n\r\n``` python\r\nrev = repo.revparse_single(commit_name)\r\nrepo.checkout_tree(rev)\r\nrepo.set_head(rev.id)\r\n```\r\n\r\nHowever when I tried to use simply `repo.set_head(rev)`, I got the following error:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-35-9612528ec0ac> in <module>()\r\n----> 1 repo.set_head(rev)\r\n\r\n/usr/lib/python2.7/dist-packages/pygit2/repository.pyc in set_head(self, target)\r\n    293\r\n    294         # if it's a string, then it's a reference name\r\n--> 295         err = C.git_repository_set_head(self._repo, to_bytes(target))\r\n    296         check_error(err)\r\n    297\r\n\r\nTypeError: initializer for ctype 'char *' must be a cdata pointer, not _pygit2.Commit\r\n```\r\n\r\nIt would be nice if `pygit2.Commit` object was automatically peeled, but if it is decided to be not good idea, then what it needs is more user-friendly error message than the one above.\r\n\r\n-----\r\npygit2 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/events", "html_url": "https://github.com/libgit2/pygit2/issues/747", "id": 278039485, "number": 747, "title": "Broken GIT_SORT_TIME ?", "user": {"login": "pypingou", "id": 1240038, "avatar_url": "https://avatars1.githubusercontent.com/u/1240038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pypingou", "html_url": "https://github.com/pypingou", "followers_url": "https://api.github.com/users/pypingou/followers", "following_url": "https://api.github.com/users/pypingou/following{/other_user}", "gists_url": "https://api.github.com/users/pypingou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pypingou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pypingou/subscriptions", "organizations_url": "https://api.github.com/users/pypingou/orgs", "repos_url": "https://api.github.com/users/pypingou/repos", "events_url": "https://api.github.com/users/pypingou/events{/privacy}", "received_events_url": "https://api.github.com/users/pypingou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-30T08:45:17Z", "updated_at": "2018-01-03T10:39:41Z", "closed_at": null, "author_association": "NONE", "body": "This is a script to reproduce the behavior I'm seeing:\r\n````\r\n#!/usr/bin/env python\r\n\r\nimport tempfile\r\nimport time\r\nimport os\r\n\r\nimport pygit2\r\n\r\npath = tempfile.mkdtemp(prefix='pygit2_test_')\r\nrepo = pygit2.init_repository(path)\r\n\r\nauthor = pygit2.Signature('Alice Author', 'alice@authors.tld')\r\ncommitter = pygit2.Signature('Cecil Committer', 'cecil@committers.tld')\r\n\r\n# Commit #1\r\n\r\n # Create a file in that git repo\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\nparents = []\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #1',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents,\r\n))\r\ncommit1 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n# Commit #2\r\n\r\nparents = [commit1.oid.hex]\r\n\r\nsubfolder = os.path.join('folder1', 'folder2')\r\nos.makedirs(os.path.join(path, subfolder))\r\n# Create a file in that git repo\r\nwith open(os.path.join(path, subfolder, 'file'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz')\r\nrepo.index.add(os.path.join(subfolder, 'file'))\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #2',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit2 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n\r\n# Commit #3\r\n\r\nparents = [commit2.oid.hex]\r\n\r\n# Update the sources file\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz!')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #3',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit3 = repo.revparse_single('HEAD')\r\n\r\n\r\nprint('')\r\nmain_walker = repo.walk(commit3.oid.hex, pygit2.GIT_SORT_TIME)\r\ncommits_msgs = []\r\nwhile 1:\r\n    try:\r\n        com = main_walker.next()\r\n        print(com.message)\r\n        print(com.oid.hex)\r\n    except StopIteration:\r\n        break\r\n````\r\n\r\nIt gives me the following output:\r\n````\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\n\r\nCommit #3\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\nCommit #1\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\nCommit #2\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n````\r\n\r\nThe first three lines are the commit as they are committed.\r\nThe following lines are the commit message and hash as ``repo.walk(commit3, pygit2.GIT_SORT_TIME)`` is returning them.\r\n\r\nSomething looks broken to me :)", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/events", "html_url": "https://github.com/libgit2/pygit2/issues/738", "id": 276061504, "number": 738, "title": "`repo.diff(c1, c2, flags=pygit2.GIT_DIFF_FIND_RENAMES)` reverses diff", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T13:08:42Z", "updated_at": "2017-11-22T13:08:42Z", "closed_at": null, "author_association": "NONE", "body": "First complaint is that there is no documentation and no examples of using `flags` (not `flag` as in description of parameters) with `Repository.diff`: http://www.pygit2.org/diff.html . Therefore I am not sure if I am using the API correctly.\r\n\r\nSecond, using `flags=pygit2.GIT_DIFF_FIND_RENAMES` for some reason **reverses** diff.\r\n\r\nCompare \r\n```\r\n>>> repo = pygit2.Repository('path/to/repo')\r\n>>> repo.diff('HEAD^', 'HEAD', flag=pygit2.GIT_DIFF_FIND_RENAMES).patch`\r\n```\r\nwith \r\n```\r\n>>> repo.diff('HEAD^', 'HEAD').patch\r\n```\r\n\r\n-----\r\n\r\npygit2.LIBGIT2_VERSION: '0.26.0'\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/events", "html_url": "https://github.com/libgit2/pygit2/issues/732", "id": 270986972, "number": 732, "title": "hunk.final_committer.name not work if email is empty", "user": {"login": "Bysmyyr", "id": 3306756, "avatar_url": "https://avatars3.githubusercontent.com/u/3306756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bysmyyr", "html_url": "https://github.com/Bysmyyr", "followers_url": "https://api.github.com/users/Bysmyyr/followers", "following_url": "https://api.github.com/users/Bysmyyr/following{/other_user}", "gists_url": "https://api.github.com/users/Bysmyyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bysmyyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bysmyyr/subscriptions", "organizations_url": "https://api.github.com/users/Bysmyyr/orgs", "repos_url": "https://api.github.com/users/Bysmyyr/repos", "events_url": "https://api.github.com/users/Bysmyyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Bysmyyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T13:58:13Z", "updated_at": "2017-11-03T13:58:34Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I found this error:\r\n\r\nif email is missing, it gives error \"Signarure cannot have an empty name or email\"\r\n\r\nin libgit2 Slack channel we discuss it and end up that in `wrap_signature` pygit2 creates new signature where email cannot be empty. It maybe should use `git_signature_dup` instead?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/events", "html_url": "https://github.com/libgit2/pygit2/issues/731", "id": 269346053, "number": 731, "title": "Document KeypairFromAgent", "user": {"login": "yan12125", "id": 1937689, "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-28T20:07:14Z", "updated_at": "2017-10-28T20:07:14Z", "closed_at": null, "author_association": "NONE", "body": "I didn't know that feature until I check codes from both libgit2 and pygit2. I think it would be helpful to have that documented in http://www.pygit2.org/remotes.html.\r\n\r\nGoogling reveals another confused developer like me :-) https://github.com/saltstack/salt/issues/40008#issuecomment-286434931", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/events", "html_url": "https://github.com/libgit2/pygit2/issues/729", "id": 267666642, "number": 729, "title": "pygit2 installation error. ", "user": {"login": "santublr", "id": 3136174, "avatar_url": "https://avatars2.githubusercontent.com/u/3136174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santublr", "html_url": "https://github.com/santublr", "followers_url": "https://api.github.com/users/santublr/followers", "following_url": "https://api.github.com/users/santublr/following{/other_user}", "gists_url": "https://api.github.com/users/santublr/gists{/gist_id}", "starred_url": "https://api.github.com/users/santublr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santublr/subscriptions", "organizations_url": "https://api.github.com/users/santublr/orgs", "repos_url": "https://api.github.com/users/santublr/repos", "events_url": "https://api.github.com/users/santublr/events{/privacy}", "received_events_url": "https://api.github.com/users/santublr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T13:24:55Z", "updated_at": "2017-10-24T13:34:31Z", "closed_at": null, "author_association": "NONE", "body": "This issue which I'm reporting may be repetative one, but after googling and trying all the options I'm still not able to load the right pygit2.\r\n\r\npygit2 version 0.22.0\r\nlibgit2 version 0.22.0\r\npycparse version 2.18\r\ncffi version 0.9.2\r\nPython Version 3.3.2\r\nOS CentOS release 6.8 (Fina\r\n\r\n\r\npython3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LD_LIBRARY_PATH=$LIBGIT2/lib\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LIBGIT2=/usr/local\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/events", "html_url": "https://github.com/libgit2/pygit2/issues/727", "id": 265532038, "number": 727, "title": "create_commit does not update the reflog", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:28:12Z", "updated_at": "2017-10-14T23:28:12Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI have noticed that v0.26.0 of `create_commit` does not create an entry in the reflog for the initial commit of a branch.\r\n\r\n```python\r\n/private/tmp\r\n4> mkdir d\r\n\r\n/private/tmp\r\n5> cd d\r\n/private/tmp/d\r\n\r\n/private/tmp/d\r\n6> import pygit2\r\n\r\n/private/tmp/d\r\n7> repo = pygit2.init_repository(\".\")\r\n\r\n/private/tmp/d\r\n8> repo.config[\"user.email\"] = \"foo@bar.com\"\r\n\r\n/private/tmp/d\r\n9> foo = repo.create_blob(\"foo\")\r\n\r\n/private/tmp/d\r\n10> builder = repo.TreeBuilder()\r\n\r\n/private/tmp/d\r\n11> builder.insert(\"foo\", foo, pygit2.GIT_FILEMODE_BLOB)\r\n\r\n/private/tmp/d\r\n12> tree_id = builder.write()\r\n\r\n/private/tmp/d\r\n13> repo.create_commit(\"refs/test\", repo.default_signature, repo.default_signature, \"test\", tre\r\n13: e_id, [])\r\n13> f610cdd139fab6f738dfaff52839a552a6b8bb9e\r\n\r\n/private/tmp/d\r\n14> git reflog refs/test\r\n  File \"<ipython-input-14-afa1bc8c3c03>\", line 1\r\n    git reflog refs/test\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n/private/tmp/d\r\n15> !git reflog refs/test\r\n\r\n/private/tmp/d\r\n16> !git --no-pager reflog refs/test\r\n\r\n/private/tmp/d\r\n17> repo.references[\"refs/test\"].log\r\n17> <function Reference.log>\r\n\r\n/private/tmp/d\r\n18> repo.references[\"refs/test\"].log()\r\n18> <_pygit2.RefLogIter at 0x10db93bc0>\r\n\r\n/private/tmp/d\r\n19> list(repo.references[\"refs/test\"].log())\r\n19> []\r\n```\r\n\r\nHowever it works it is not an initial commit.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/events", "html_url": "https://github.com/libgit2/pygit2/issues/726", "id": 265531696, "number": 726, "title": "revparse_single does not understand date", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:22:03Z", "updated_at": "2017-10-14T23:22:03Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\n`revparse_single` does not support date parsing:\r\n\r\n$ git rev-parse 'HEAD@{2 weeks ago}'\r\neebac5f1c21ec78e098a8f7b60facd726b30844e\r\n$ python3 -c 'import pygit2; pygit2.Repository(\".\").revparse_single(\"HEAD@{2 weeks ago}\")'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nKeyError: 'HEAD@{2 weeks ago}'\r\n\r\nI am using version 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/events", "html_url": "https://github.com/libgit2/pygit2/issues/725", "id": 263573001, "number": 725, "title": "Support for Custom Merge drivers?", "user": {"login": "white-gecko", "id": 1018168, "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-06T21:11:57Z", "updated_at": "2017-10-06T21:11:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Is there any way of using a custom merge driver in pygit2? I've see this for libgit2: https://github.com/libgit2/libgit2/pull/3564 is this also possible to be used with pygit2 as it is?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/events", "html_url": "https://github.com/libgit2/pygit2/issues/724", "id": 256558064, "number": 724, "title": "How can I get current Tag reference?", "user": {"login": "smelnikov", "id": 13030121, "avatar_url": "https://avatars0.githubusercontent.com/u/13030121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smelnikov", "html_url": "https://github.com/smelnikov", "followers_url": "https://api.github.com/users/smelnikov/followers", "following_url": "https://api.github.com/users/smelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/smelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/smelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smelnikov/subscriptions", "organizations_url": "https://api.github.com/users/smelnikov/orgs", "repos_url": "https://api.github.com/users/smelnikov/repos", "events_url": "https://api.github.com/users/smelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/smelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T01:27:14Z", "updated_at": "2017-09-11T01:27:14Z", "closed_at": null, "author_association": "NONE", "body": "First, I checkout TAG from my repo. \r\nThen I need resolve name of this TAG. But I can't get relevant reference object (HEAD is detached).\r\nPlease tell me, how this can be done?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/events", "html_url": "https://github.com/libgit2/pygit2/issues/723", "id": 252168529, "number": 723, "title": "GIT_SORT_TOPOLOGICAL is document backwards.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-23T05:59:38Z", "updated_at": "2017-08-23T06:00:26Z", "closed_at": null, "author_association": "NONE", "body": "The documentation states that parents come before children, but actually children come before parents.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/events", "html_url": "https://github.com/libgit2/pygit2/issues/722", "id": 248080008, "number": 722, "title": "Support `git bundle create`", "user": {"login": "ashmastaflash", "id": 5561645, "avatar_url": "https://avatars1.githubusercontent.com/u/5561645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashmastaflash", "html_url": "https://github.com/ashmastaflash", "followers_url": "https://api.github.com/users/ashmastaflash/followers", "following_url": "https://api.github.com/users/ashmastaflash/following{/other_user}", "gists_url": "https://api.github.com/users/ashmastaflash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashmastaflash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashmastaflash/subscriptions", "organizations_url": "https://api.github.com/users/ashmastaflash/orgs", "repos_url": "https://api.github.com/users/ashmastaflash/repos", "events_url": "https://api.github.com/users/ashmastaflash/events{/privacy}", "received_events_url": "https://api.github.com/users/ashmastaflash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-04T18:16:58Z", "updated_at": "2017-08-04T18:16:58Z", "closed_at": null, "author_association": "NONE", "body": "Ideal form would be to have a class method for Repository that accepts a single argument for the output file path.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/events", "html_url": "https://github.com/libgit2/pygit2/pull/719", "id": 246313508, "number": 719, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch"}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/events", "html_url": "https://github.com/libgit2/pygit2/issues/717", "id": 245668433, "number": 717, "title": "How to solve 'LIBSSH2 not found.'?", "user": {"login": "pklim101", "id": 4819579, "avatar_url": "https://avatars3.githubusercontent.com/u/4819579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pklim101", "html_url": "https://github.com/pklim101", "followers_url": "https://api.github.com/users/pklim101/followers", "following_url": "https://api.github.com/users/pklim101/following{/other_user}", "gists_url": "https://api.github.com/users/pklim101/gists{/gist_id}", "starred_url": "https://api.github.com/users/pklim101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pklim101/subscriptions", "organizations_url": "https://api.github.com/users/pklim101/orgs", "repos_url": "https://api.github.com/users/pklim101/repos", "events_url": "https://api.github.com/users/pklim101/events{/privacy}", "received_events_url": "https://api.github.com/users/pklim101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T09:57:14Z", "updated_at": "2017-08-11T22:05:10Z", "closed_at": null, "author_association": "NONE", "body": "when I execute the command 'cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/libgit2',\r\nI have the output bellow\uff1a\r\n\r\n> \r\n\r\n-- Checking for module 'libcurl' \r\n--   Found libcurl, version 7.15.5  \r\n-- Could NOT find HTTP_Parser (missing: HTTP_PARSER_INCLUDE_DIR HTTP_PARSER_LIBRARY)   \r\n-- http-parser version 2 was not found; using bundled 3rd-party sources.  \r\n-- Checking for module 'libssh2'  \r\n--   No package 'libssh2' found  \r\n-- LIBSSH2 not found. Set CMAKE_PREFIX_PATH if it is installed outside of the default search path.\r\n\r\nthere are two module not fund, How can I solve it? thanks!", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/events", "html_url": "https://github.com/libgit2/pygit2/issues/716", "id": 244237603, "number": 716, "title": "pygit2.GIT_DIFF_IGNORE_WHITESPACE result Inconsistent", "user": {"login": "tongtongtongtong", "id": 22701681, "avatar_url": "https://avatars2.githubusercontent.com/u/22701681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongtongtongtong", "html_url": "https://github.com/tongtongtongtong", "followers_url": "https://api.github.com/users/tongtongtongtong/followers", "following_url": "https://api.github.com/users/tongtongtongtong/following{/other_user}", "gists_url": "https://api.github.com/users/tongtongtongtong/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongtongtongtong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongtongtongtong/subscriptions", "organizations_url": "https://api.github.com/users/tongtongtongtong/orgs", "repos_url": "https://api.github.com/users/tongtongtongtong/repos", "events_url": "https://api.github.com/users/tongtongtongtong/events{/privacy}", "received_events_url": "https://api.github.com/users/tongtongtongtong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-20T03:46:20Z", "updated_at": "2017-07-20T03:46:20Z", "closed_at": null, "author_association": "NONE", "body": "git command:\r\ndiff --git a/Makefile b/Makefile\r\nindex bb20e89..c25d045 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -3,4 +3,5 @@ install:\r\n \r\n clean: \r\n        rm -rf tgit-statistics \r\n+       \r\n qed \r\n\\ No newline at end of file\r\n\r\npygit2:\r\nrepo.diff(from_id, to_id, cached=True, flags=pygit2.GIT_DIFF_IGNORE_WHITESPACE, context_lines=3, interhunk_lines=3)\r\n\r\ndiff --git a/Makefile b/Makefile\r\nindex bb2..c25 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -5,0 +6 @@ clean:\r\n+", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/events", "html_url": "https://github.com/libgit2/pygit2/issues/712", "id": 236881017, "number": 712, "title": "`Repository.diff(cached=True)` does not list diffs for indexed files", "user": {"login": "jbaiter", "id": 608610, "avatar_url": "https://avatars2.githubusercontent.com/u/608610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaiter", "html_url": "https://github.com/jbaiter", "followers_url": "https://api.github.com/users/jbaiter/followers", "following_url": "https://api.github.com/users/jbaiter/following{/other_user}", "gists_url": "https://api.github.com/users/jbaiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaiter/subscriptions", "organizations_url": "https://api.github.com/users/jbaiter/orgs", "repos_url": "https://api.github.com/users/jbaiter/repos", "events_url": "https://api.github.com/users/jbaiter/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-19T12:53:13Z", "updated_at": "2017-06-19T12:54:05Z", "closed_at": null, "author_association": "NONE", "body": "This is with pygit2 version 0.24.0.\r\n\r\n```\r\n$ git init\r\nInitialized empty Git repository in /tmp/minimal/.git/\r\n$ touch foo\r\n$ git add foo\r\n$ git commit -am \"First commit\"\r\n[master (root-commit) 3551222] First commit\r\n 1 file changed, 0 insertions(+), 0 deletions(-)\r\n create mode 100644 foo\r\n$ echo \"foobar\" >> foo                                                                                                                                                                                                                                                                                 \r\n$ git add foo\r\n$ git diff --cached\r\ndiff --git a/foo b/foo\r\nindex e69de29..323fae0 100644\r\n--- a/foo\r\n+++ b/foo\r\n@@ -0,0 +1 @@\r\n+foobar\r\n$ python\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> list(repo.diff(cached=True))\r\n[]\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/events", "html_url": "https://github.com/libgit2/pygit2/issues/709", "id": 227439477, "number": 709, "title": "Type Annotations", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T17:25:07Z", "updated_at": "2017-05-15T11:20:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I was thinking of adding type annotations to some of the APIs to assist IDEs in parsing them and providing useful completion.\r\n\r\nSince it currently does not exist in the code, I preferred asking before coding.\r\nDue to supporting both Python 2 and 3, I think the way to do it is to use syntax present [here](http://mypy.readthedocs.io/en/latest/python2.html).\r\n\r\nThere are some drawbacks:\r\n1. Adding a new dependency - the `typing` package\r\n1. Annotation comments are not the prettiest thing\r\n\r\nBut if we only the do the required minimum, we get more clarity when using the library, and can also use `mypy` as a verification step for new code.\r\n\r\n@jdavid what is your opinion?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/events", "html_url": "https://github.com/libgit2/pygit2/pull/705", "id": 226006218, "number": 705, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/events", "html_url": "https://github.com/libgit2/pygit2/issues/704", "id": 225966764, "number": 704, "title": "How to implement (un)staging and query staging status ?", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T12:18:01Z", "updated_at": "2017-05-03T14:31:39Z", "closed_at": null, "author_association": "NONE", "body": "Not a bug, but I cannot figure out how to achieve this using pygit2 / libgit. Does someone have clues about this ?\r\n\r\nI tried to get information from this page http://www.pygit2.org/working-copy.html and I found https://github.com/libgit2/libgit2sharp/blob/master/LibGit2Sharp/Commands/Stage.cs and https://github.com/libgit2/libgit2/issues/3632\r\n\r\nI want to implement staging feature to my code review tools: https://github.com/FabriceSalvaire/CodeReview\r\n\r\n**Is http://stackoverflow.com/questions/tagged/libgit2 the right place to discuss on pygit2 ???**", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/events", "html_url": "https://github.com/libgit2/pygit2/issues/702", "id": 223249497, "number": 702, "title": "Repository.update_submodules() got Request failed with status code: 401", "user": {"login": "niven823", "id": 21955739, "avatar_url": "https://avatars3.githubusercontent.com/u/21955739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niven823", "html_url": "https://github.com/niven823", "followers_url": "https://api.github.com/users/niven823/followers", "following_url": "https://api.github.com/users/niven823/following{/other_user}", "gists_url": "https://api.github.com/users/niven823/gists{/gist_id}", "starred_url": "https://api.github.com/users/niven823/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niven823/subscriptions", "organizations_url": "https://api.github.com/users/niven823/orgs", "repos_url": "https://api.github.com/users/niven823/repos", "events_url": "https://api.github.com/users/niven823/events{/privacy}", "received_events_url": "https://api.github.com/users/niven823/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-21T01:37:08Z", "updated_at": "2017-04-21T01:37:49Z", "closed_at": null, "author_association": "NONE", "body": "I thought update_submodules()'s requires adding parameter of callbacks for RemoteCallbacks.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/events", "html_url": "https://github.com/libgit2/pygit2/issues/699", "id": 219887420, "number": 699, "title": "libssh2", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T12:47:34Z", "updated_at": "2017-04-06T14:09:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I think it would be good to add libssh2 to the builds to provide SSH support.\r\nOn Windows it takes quite some work to get it working (no success yet on my side). Haven't tried other OSs yet.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/events", "html_url": "https://github.com/libgit2/pygit2/issues/693", "id": 214644960, "number": 693, "title": "[RFE] rebase routines", "user": {"login": "ignatenkobrain", "id": 2866862, "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-16T09:37:07Z", "updated_at": "2017-03-16T09:37:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "libgit2 supports rebasing, but pygit2 doesn't expose it. It would be very useful if it could.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/events", "html_url": "https://github.com/libgit2/pygit2/issues/687", "id": 201816677, "number": 687, "title": "Possible encoding problem with Repository.file_status", "user": {"login": "wme-at-contact-de", "id": 10048008, "avatar_url": "https://avatars3.githubusercontent.com/u/10048008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wme-at-contact-de", "html_url": "https://github.com/wme-at-contact-de", "followers_url": "https://api.github.com/users/wme-at-contact-de/followers", "following_url": "https://api.github.com/users/wme-at-contact-de/following{/other_user}", "gists_url": "https://api.github.com/users/wme-at-contact-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/wme-at-contact-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wme-at-contact-de/subscriptions", "organizations_url": "https://api.github.com/users/wme-at-contact-de/orgs", "repos_url": "https://api.github.com/users/wme-at-contact-de/repos", "events_url": "https://api.github.com/users/wme-at-contact-de/events{/privacy}", "received_events_url": "https://api.github.com/users/wme-at-contact-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-19T10:16:04Z", "updated_at": "2017-07-23T20:28:47Z", "closed_at": null, "author_association": "NONE", "body": "If I try to get the status of a single file using Repository.file_status, I get a \"KeyError\" when the path contains non-ASCII characters like \"\u00e4\" or \"\\u00A0\" (non breaking space\").\r\n\r\nThe problem seems to be that \"Repository_status_file\" uses \"py_path_to_c_str\" to convert the path. Which encodes the path using the Python file system encoding.\r\n\r\nIf I encode the string myself using \"utf-8\", it works fine.\r\n\r\nNot sure whether this is a libgit2, pygit2 or Windows problem...\r\n\r\nUsing pygit-0.24.2 on Python 3.5, running on Windows 7.\r\nsys.getfilesystemencoding() returns \"mbcs\".\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/events", "html_url": "https://github.com/libgit2/pygit2/issues/686", "id": 200240979, "number": 686, "title": "`git_commit_amend` not available.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-11T23:46:59Z", "updated_at": "2017-04-05T19:08:00Z", "closed_at": null, "author_association": "NONE", "body": "Additionally `Repository.create_commit` fails if the first parent is not the tip of the branch being updated, so the behaviour cannot be fudged by making a new commit with the tip's parent.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/events", "html_url": "https://github.com/libgit2/pygit2/issues/684", "id": 197914703, "number": 684, "title": "repo.status() appears to be broken?", "user": {"login": "catsclaw", "id": 1660839, "avatar_url": "https://avatars2.githubusercontent.com/u/1660839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catsclaw", "html_url": "https://github.com/catsclaw", "followers_url": "https://api.github.com/users/catsclaw/followers", "following_url": "https://api.github.com/users/catsclaw/following{/other_user}", "gists_url": "https://api.github.com/users/catsclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/catsclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catsclaw/subscriptions", "organizations_url": "https://api.github.com/users/catsclaw/orgs", "repos_url": "https://api.github.com/users/catsclaw/repos", "events_url": "https://api.github.com/users/catsclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/catsclaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-28T20:54:24Z", "updated_at": "2017-04-12T11:15:15Z", "closed_at": null, "author_association": "NONE", "body": "I'm running `repo.status().items()` in a pre-commit hook using the `-a` flag (`git commit -a -m \"Test\"`), and I get a result that looks like this:\r\n\r\n`[('config/git_hooks/pre-commit', 256), ('bin/run_flake8', 256)]`\r\n\r\nIf I run `git status` in that same process, I get:\r\n\r\n    On branch ops_1331_fix\r\n    Your branch is ahead of 'origin/ops_1331_fix' by 2 commits.\r\n      (use \"git push\" to publish your local commits)\r\n    Changes to be committed:\r\n      (use \"git reset HEAD <file>...\" to unstage)\r\n    \r\n\t    modified:   bin/run_flake8\r\n\t    modified:   config/git_hooks/pre-commit\r\n\r\nIn other words, pygit2 is reporting those files as not being staged, and git is reporting them as being staged. Why the discrepancy?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/events", "html_url": "https://github.com/libgit2/pygit2/issues/683", "id": 197692934, "number": 683, "title": "DoS on wrong password", "user": {"login": "4s1", "id": 15968622, "avatar_url": "https://avatars1.githubusercontent.com/u/15968622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4s1", "html_url": "https://github.com/4s1", "followers_url": "https://api.github.com/users/4s1/followers", "following_url": "https://api.github.com/users/4s1/following{/other_user}", "gists_url": "https://api.github.com/users/4s1/gists{/gist_id}", "starred_url": "https://api.github.com/users/4s1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4s1/subscriptions", "organizations_url": "https://api.github.com/users/4s1/orgs", "repos_url": "https://api.github.com/users/4s1/repos", "events_url": "https://api.github.com/users/4s1/events{/privacy}", "received_events_url": "https://api.github.com/users/4s1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-27T11:59:05Z", "updated_at": "2016-12-27T11:59:05Z", "closed_at": null, "author_association": "NONE", "body": "As discussed in upstream bug report saltstack/salt#38230 pygit2 tries to authenticate indefinite with wrong credentials instead of failing after two consecutive failures with same authentication token as specified by https://tools.ietf.org/html/rfc7235#section-3.1\r\nPossible a libgit2 Bug if it's reproducable with other language bindings.\r\n\r\n\r\n## Testcase:\r\n### nginx dummy server configuration\r\nThis is just a stub configuration, no real repository needed\r\n````\r\nlocation ~ /git(/.*) {\r\n        add_header \"WWW-Authenticate\" \"Basic realm=\\\"Closed Areas\\\"\" always;\r\n        return 401;\r\n    }\r\n````\r\n### test client\r\n````python\r\n#!/bin/python2.7\r\n\r\nimport pygit2\r\n\r\nusername = 'dummyUser'\r\npassword = 'dummyPassword'\r\ncredentials = pygit2.UserPass(username, password)\r\ncallbacks = pygit2.RemoteCallbacks(credentials)\r\npygit2.clone_repository(\"http://git.demo.local/git/test.git\", \"test.git\", bare=True, callbacks=callbacks)\r\n\r\n````", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/events", "html_url": "https://github.com/libgit2/pygit2/issues/680", "id": 195430797, "number": 680, "title": "`peel` arguments inconsistent.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-14T03:22:33Z", "updated_at": "2016-12-14T03:27:17Z", "closed_at": null, "author_association": "NONE", "body": "`peel` is implemented twice, once in `object.c` and once in `reference.c`.  In the first it requires an argument and in the second it provides a default argument of `None`.  This is confusing when branches can be 'default' peeled but tags cannot.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "bf74b2a99341437a755390c692ae04a21737c9d7", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "message": "Merge remote-tracking branch 'white-gecko/patch-1'", "tree": {"sha": "90372a6c64296581f6004326b82478a9900de2ce", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/90372a6c64296581f6004326b82478a9900de2ce"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "html_url": "https://github.com/libgit2/pygit2/commit/bf74b2a99341437a755390c692ae04a21737c9d7", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1494574fff619ef135119487980d751877af20c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c"}, {"sha": "39a50d9d048a0abc5fd5ded6be4339818f169144", "url": "https://api.github.com/repos/libgit2/pygit2/commits/39a50d9d048a0abc5fd5ded6be4339818f169144", "html_url": "https://github.com/libgit2/pygit2/commit/39a50d9d048a0abc5fd5ded6be4339818f169144"}]}, {"sha": "a1494574fff619ef135119487980d751877af20c", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "message": "Fixing ImportError in some cases, bug #658", "tree": {"sha": "63a4efe447cb8ff08263a3786fdbcc37ca57f0d6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/63a4efe447cb8ff08263a3786fdbcc37ca57f0d6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a1494574fff619ef135119487980d751877af20c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6"}]}, {"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "message": "Fix running the tests with tox", "tree": {"sha": "c768091b0673dbe4b4cb5cf7081be567d7d556dd", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c768091b0673dbe4b4cb5cf7081be567d7d556dd"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674"}]}, {"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "message": "Implement update_submodules using ffi.", "tree": {"sha": "a91589d9a9d0103efd043edddeadc95290963149", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a91589d9a9d0103efd043edddeadc95290963149"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab"}]}, {"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-22T06:29:21Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:17:05Z"}, "message": "Add wrongly deleted declaration.", "tree": {"sha": "52450ede7a41ae941f5cd003298f1f1140ddf828", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52450ede7a41ae941f5cd003298f1f1140ddf828"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930"}]}, {"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-12T06:01:36Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:16:45Z"}, "message": "Import submodule_update related options.", "tree": {"sha": "95c532ebf0bca85f6f58a13f4f58956461cb369a", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/95c532ebf0bca85f6f58a13f4f58956461cb369a"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f"}]}, {"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "message": "Release 0.26.3", "tree": {"sha": "881d41e22784e868ae1318f5c0dbf20d7e36876c", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/881d41e22784e868ae1318f5c0dbf20d7e36876c"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4"}]}, {"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "e220542375858a5bbbbd1bdcba7dbe3ffeacba80", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/e220542375858a5bbbbd1bdcba7dbe3ffeacba80"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d"}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f"}]}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "message": "Fix patch-after-blob-free", "tree": {"sha": "96fe0f1ff9c62962b41083ab372b727cdf24ddc6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/96fe0f1ff9c62962b41083ab372b727cdf24ddc6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "message": "Add similar blob test", "tree": {"sha": "c662230906193e47f42bcb0e925585a8c6865915", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c662230906193e47f42bcb0e925585a8c6865915"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856"}]}, {"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "86ff5a4794a875dbbf3485cf87453308b5754e8b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/86ff5a4794a875dbbf3485cf87453308b5754e8b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591"}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "message": "Make broken patch tests be less nebulous", "tree": {"sha": "11cd577932e13657d58f63426704152f51e5a233", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/11cd577932e13657d58f63426704152f51e5a233"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed"}]}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "message": "Review Patch, fixes #757", "tree": {"sha": "2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba"}]}, {"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "message": "test_patch: assertEquals -> assertEqual", "tree": {"sha": "8e8bad74ee870513431f4a44cd49d490b4c28cff", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/8e8bad74ee870513431f4a44cd49d490b4c28cff"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2"}]}, {"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "message": "New Diff.deltas iterable", "tree": {"sha": "b40359f508cbfa84d99d9c53ee4e2988bb2bc232", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b40359f508cbfa84d99d9c53ee4e2988bb2bc232"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82"}]}, {"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "message": "Add more patch and blob tests that could fail", "tree": {"sha": "bf2e724171f16d9ec8531f976547f0e629576566", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/bf2e724171f16d9ec8531f976547f0e629576566"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "message": "Add contextlines, interhunk lines to Patch.create_from", "tree": {"sha": "b5e7d69785e2d07db3e9e82256c1745bdd412043", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b5e7d69785e2d07db3e9e82256c1745bdd412043"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "a96da22cbf456fe2181e196877845b590cede606", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "message": "Dont create blobs on the fly in test_patch, make patch kwargs", "tree": {"sha": "a1a264f20ad9cf85f0a0d09921486e4fde071e0f", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a1a264f20ad9cf85f0a0d09921486e4fde071e0f"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a96da22cbf456fe2181e196877845b590cede606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b"}]}, {"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "commit": {"author": {"name": "Matthias Bartelme\u00df", "email": "mba@fourplusone.de", "date": "2017-12-02T12:37:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-02T12:37:38Z"}, "message": "Clear clone_repo in Prune Test", "tree": {"sha": "a6e37143b7bee4564aaa3f12f9933dd32ae87c46", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a6e37143b7bee4564aaa3f12f9933dd32ae87c46"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIp6SCRBK7hj4Ov3rIwAAdHIIAJIthg2oofQptPXj6W09jvbH\n/wTIXOLh3iIQSLYXyQ1c6/WZxuBAlCmkA3TP0ztEO/Ejz7Y7U6FSbgvlylQaW+w7\n3O5MuW6q0LvzxEG8hovjETub1/7Vz4LbSWVuAcSjBZngv0x78rA5qDKFyq3xN0sh\nDOahzA3RMqpmfuDeHTPe7tlkZ0eeD2HGjWeWZojywfiI0FHOLurz7/Q95UHmDwa2\niBXiEbFNd2B7+GHk0ds4dS7jjj8FSoanXwz2aQaqejYcUNTIKX3LXed88AdN7izG\nkkmY/qZLBtQ3tgrcSFMSvWYmCXLmRhpkXOrsrS4mKHUMLuGWT/5xc0QOvPLofUI=\n=ILgC\n-----END PGP SIGNATURE-----\n", "payload": "tree a6e37143b7bee4564aaa3f12f9933dd32ae87c46\nparent d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756\nauthor Matthias Bartelme\u00df <mba@fourplusone.de> 1512218258 +0100\ncommitter GitHub <noreply@github.com> 1512218258 +0100\n\nClear clone_repo in Prune Test"}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b/comments", "author": {"login": "fourplusone", "id": 25514, "avatar_url": "https://avatars2.githubusercontent.com/u/25514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fourplusone", "html_url": "https://github.com/fourplusone", "followers_url": "https://api.github.com/users/fourplusone/followers", "following_url": "https://api.github.com/users/fourplusone/following{/other_user}", "gists_url": "https://api.github.com/users/fourplusone/gists{/gist_id}", "starred_url": "https://api.github.com/users/fourplusone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fourplusone/subscriptions", "organizations_url": "https://api.github.com/users/fourplusone/orgs", "repos_url": "https://api.github.com/users/fourplusone/repos", "events_url": "https://api.github.com/users/fourplusone/events{/privacy}", "received_events_url": "https://api.github.com/users/fourplusone/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756"}]}, {"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:10:52Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:18:38Z"}, "message": "Move declarations to top of functions", "tree": {"sha": "6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d"}]}, {"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:56:42Z"}, "message": "Release 0.26.2", "tree": {"sha": "692747fc3e936f82e8800e1b997d63d6f60ba0b6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/692747fc3e936f82e8800e1b997d63d6f60ba0b6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c"}]}, {"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:23:10Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:25:51Z"}, "message": "Add my name, for the fame", "tree": {"sha": "6b16298432ab07a93bc5e40a75d88a4410159dfc", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6b16298432ab07a93bc5e40a75d88a4410159dfc"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc"}]}, {"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "message": "test: use self.assertXXX not assert\n\nBecause we use unittest, not pytest.", "tree": {"sha": "52201c58185e44703811989c1968c50576938bc4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52201c58185e44703811989c1968c50576938bc4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/4804143f5590cf989f162973ec3a99c8314607bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8944d0208a7468ec7d378247356677829b87766b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b"}]}, {"sha": "8944d0208a7468ec7d378247356677829b87766b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "message": "Merge remote-tracking branch 'cecedille1/fetch-prune'", "tree": {"sha": "34e83687d80e16b3d0e651120084d3352b2823fa", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/34e83687d80e16b3d0e651120084d3352b2823fa"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/8944d0208a7468ec7d378247356677829b87766b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6"}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6"}]}, {"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "message": "Add bad arg tests to test_patch", "tree": {"sha": "277cdea2f0dee19f64acab7d11a6474ede8d5927", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/277cdea2f0dee19f64acab7d11a6474ede8d5927"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1"}]}, {"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "message": "Add static Patch.create_from method to create patches", "tree": {"sha": "2f4641b0c3a7badc871844ae756834d2ffca39b4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2f4641b0c3a7badc871844ae756834d2ffca39b4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b"}]}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "message": "Add my name, for the fame", "tree": {"sha": "0c5ce621d568e08babbc971ac1de91d1a56441c1", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/0c5ce621d568e08babbc971ac1de91d1a56441c1"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732"}]}, {"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "message": "Implement prune option for fetch", "tree": {"sha": "b74c2169ec55bb7b04b88988c80b1bf362c94bb2", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b74c2169ec55bb7b04b88988c80b1bf362c94bb2"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0"}]}, {"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "message": "Export the constants GIT_FETCH_PRUNE_*", "tree": {"sha": "5709577f3134659270dcb67e32262232dd39067b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/5709577f3134659270dcb67e32262232dd39067b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}, {"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "message": "docs: diff, add missing members", "tree": {"sha": "4d35778d5da21941f7f9288b31d733d99fec30f0", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/4d35778d5da21941f7f9288b31d733d99fec30f0"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "id": 132943348, "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "number": 719, "state": "open", "locked": false, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "98fda364c4fdd26bb7ae1d63fd0f4c819ef31bfd", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "head": {"label": "nhynes:rebased-worktrees", "ref": "rebased-worktrees", "sha": "8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "repo": {"id": 86384396, "name": "pygit2", "full_name": "nhynes/pygit2", "owner": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/nhynes/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/nhynes/pygit2", "forks_url": "https://api.github.com/repos/nhynes/pygit2/forks", "keys_url": "https://api.github.com/repos/nhynes/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/nhynes/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/nhynes/pygit2/teams", "hooks_url": "https://api.github.com/repos/nhynes/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/nhynes/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/nhynes/pygit2/events", "assignees_url": "https://api.github.com/repos/nhynes/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/nhynes/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/nhynes/pygit2/tags", "blobs_url": "https://api.github.com/repos/nhynes/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/nhynes/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/nhynes/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/nhynes/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/nhynes/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/nhynes/pygit2/languages", "stargazers_url": "https://api.github.com/repos/nhynes/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/nhynes/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/nhynes/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/nhynes/pygit2/subscription", "commits_url": "https://api.github.com/repos/nhynes/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/nhynes/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/nhynes/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/nhynes/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/nhynes/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/nhynes/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/nhynes/pygit2/merges", "archive_url": "https://api.github.com/repos/nhynes/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/nhynes/pygit2/downloads", "issues_url": "https://api.github.com/repos/nhynes/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/nhynes/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/nhynes/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/nhynes/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/nhynes/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/nhynes/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/nhynes/pygit2/deployments", "created_at": "2017-03-27T21:11:34Z", "updated_at": "2017-03-27T21:11:36Z", "pushed_at": "2017-07-29T01:55:56Z", "git_url": "git://github.com/nhynes/pygit2.git", "ssh_url": "git@github.com:nhynes/pygit2.git", "clone_url": "https://github.com/nhynes/pygit2.git", "svn_url": "https://github.com/nhynes/pygit2", "homepage": "", "size": 2877, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "24d385a88f9a4e2540ea2c04fa86d76e7c4e17ee", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/719"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "id": 118775335, "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "number": 705, "state": "open", "locked": false, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "04ce62259b3baec23ef043cb793b0eeb62b6438b", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215", "head": {"label": "FabriceSalvaire:master", "ref": "master", "sha": "bdeb03747261ca134be24eb87606b492187cc215", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "repo": {"id": 90155264, "name": "pygit2", "full_name": "FabriceSalvaire/pygit2", "owner": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/FabriceSalvaire/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/FabriceSalvaire/pygit2", "forks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/forks", "keys_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/teams", "hooks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/events", "assignees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/tags", "blobs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/languages", "stargazers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscription", "commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/merges", "archive_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/downloads", "issues_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/deployments", "created_at": "2017-05-03T14:00:19Z", "updated_at": "2017-05-03T14:00:21Z", "pushed_at": "2017-05-03T14:28:16Z", "git_url": "git://github.com/FabriceSalvaire/pygit2.git", "ssh_url": "git@github.com:FabriceSalvaire/pygit2.git", "clone_url": "https://github.com/FabriceSalvaire/pygit2.git", "svn_url": "https://github.com/FabriceSalvaire/pygit2", "homepage": "", "size": 2858, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/705"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/538", "id": 38147484, "html_url": "https://github.com/libgit2/pygit2/pull/538", "diff_url": "https://github.com/libgit2/pygit2/pull/538.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/538.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/538", "number": 538, "state": "open", "locked": false, "title": "Add certificate callback.", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "body": "Existing unit tests pass. Adapted from `__init__.py`.\n", "created_at": "2015-06-19T21:01:21Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "44b25ca81b0424595467102f75733d627fc99b3e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "head": {"label": "alexchamberlain:certificate-check", "ref": "certificate-check", "sha": "d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "repo": {"id": 37744353, "name": "pygit2", "full_name": "alexchamberlain/pygit2", "owner": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/alexchamberlain/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/alexchamberlain/pygit2", "forks_url": "https://api.github.com/repos/alexchamberlain/pygit2/forks", "keys_url": "https://api.github.com/repos/alexchamberlain/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexchamberlain/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexchamberlain/pygit2/teams", "hooks_url": "https://api.github.com/repos/alexchamberlain/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/alexchamberlain/pygit2/events", "assignees_url": "https://api.github.com/repos/alexchamberlain/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/alexchamberlain/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/tags", "blobs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexchamberlain/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexchamberlain/pygit2/languages", "stargazers_url": "https://api.github.com/repos/alexchamberlain/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/alexchamberlain/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscription", "commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexchamberlain/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexchamberlain/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/alexchamberlain/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexchamberlain/pygit2/merges", "archive_url": "https://api.github.com/repos/alexchamberlain/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexchamberlain/pygit2/downloads", "issues_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/alexchamberlain/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexchamberlain/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexchamberlain/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexchamberlain/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/alexchamberlain/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/alexchamberlain/pygit2/deployments", "created_at": "2015-06-19T20:28:49Z", "updated_at": "2015-06-19T20:28:50Z", "pushed_at": "2015-06-19T21:08:20Z", "git_url": "git://github.com/alexchamberlain/pygit2.git", "ssh_url": "git@github.com:alexchamberlain/pygit2.git", "clone_url": "https://github.com/alexchamberlain/pygit2.git", "svn_url": "https://github.com/alexchamberlain/pygit2", "homepage": "", "size": 2775, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/538"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/405", "id": 19969342, "html_url": "https://github.com/libgit2/pygit2/pull/405", "diff_url": "https://github.com/libgit2/pygit2/pull/405.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/405.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/405", "number": 405, "state": "open", "locked": false, "title": "Walker interface reimplemented with CFFI", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "I've reimplemented the `Walker` interface with CFFI; this is a first step towards reimplementing the entire pygit2 Object model with CFFI. It's supposed to be a straightforward rewrite, I haven't made any changes to the API to avoid breaking the backwards compatibility.\n", "created_at": "2014-08-19T09:33:24Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "af575f55908703a89366821cf6ab4fe3bcce48e2", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "head": {"label": "petrhosek:walker-cffi", "ref": "walker-cffi", "sha": "e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/405"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/346", "id": 12586459, "html_url": "https://github.com/libgit2/pygit2/pull/346", "diff_url": "https://github.com/libgit2/pygit2/pull/346.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/346.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/346", "number": 346, "state": "open", "locked": false, "title": "Diff and Patch interface refactored", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "This is a complete refactoring of the diff and patch interface. The changes include:\n- Splitting `Diff` and `Patch` into separate classes and files, including respective tests. This largely follwos the recent development in `libgit2`.\n- Introducing `DiffDelta`, `DiffFile` and `DiffLine` classes and their respective iterators.\n- Moving the recently introduced `Blob` diff methods into patch again to be in line with the respective `libgit2` interface.\n\nThe biggest difference, apart from the code cleanup, is the lazy evaluation due to heavy use of iterators rather than evaluating everything ahead of time as in case of the existing code, which tends to be slow on larger projects.\n\nI have tried to make the interface as \"Pythonic\" as possible, while closely following the underlying `libgit2` C interface. However, some of you might think of a better abstraction and I'd happy to incorporate further changes into the patch.\n", "created_at": "2014-02-15T20:56:20Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "82ab609cb820007df325b82d0180be8c21bd4e7e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205", "head": {"label": "petrhosek:diff-patch-refactor", "ref": "diff-patch-refactor", "sha": "34fd314631b443eae802aba2e712ca7ef9a08205", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/346"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596", "html_url": "https://github.com/libgit2/pygit2/issues/1#issuecomment-578596", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/1", "id": 578596, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:31:25Z", "updated_at": "2010-11-30T19:31:25Z", "author_association": "OWNER", "body": "Indeed, it was using the private clone URL. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600", "html_url": "https://github.com/libgit2/pygit2/issues/2#issuecomment-578600", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/2", "id": 578600, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:32:06Z", "updated_at": "2010-11-30T19:32:06Z", "author_association": "OWNER", "body": "Replaced the build instructions with a link to our website: that way it'll always be up to date.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-597958", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 597958, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2010-12-08T20:21:51Z", "updated_at": "2010-12-08T20:21:51Z", "author_association": "MEMBER", "body": "This changed in libgit2 as of\nhttps://github.com/libgit2/libgit2/commit/44908fe763b1a2097b65c86130ac679c458df7d2\n\nFeel free to update pygit2.c if I don't get the chance to soon.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355", "html_url": "https://github.com/libgit2/pygit2/pull/4#issuecomment-694355", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/4", "id": 694355, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-01-20T22:53:16Z", "updated_at": "2011-01-20T22:53:16Z", "author_association": "OWNER", "body": "Neat, thanks for this, but it looks like I got two pull requests for the same thing. ^^\n\nI've just merged the other one, and while I was at it fixed the test that was failing -- it was an issue in libgit2, so thanks for reporting.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-726750", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 726750, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-01-31T22:56:53Z", "updated_at": "2011-01-31T22:56:53Z", "author_association": "MEMBER", "body": "This appears to have been fixed by 9e919c39662ecc0f0080. I was able to build successfully at HEAD, so I'm going to close this issue. Let me know if you still have problems.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459", "html_url": "https://github.com/libgit2/pygit2/pull/6#issuecomment-739459", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/6", "id": 739459, "user": {"login": "peti", "id": 28323, "avatar_url": "https://avatars3.githubusercontent.com/u/28323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peti", "html_url": "https://github.com/peti", "followers_url": "https://api.github.com/users/peti/followers", "following_url": "https://api.github.com/users/peti/following{/other_user}", "gists_url": "https://api.github.com/users/peti/gists{/gist_id}", "starred_url": "https://api.github.com/users/peti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peti/subscriptions", "organizations_url": "https://api.github.com/users/peti/orgs", "repos_url": "https://api.github.com/users/peti/repos", "events_url": "https://api.github.com/users/peti/events{/privacy}", "received_events_url": "https://api.github.com/users/peti/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-04T16:13:55Z", "updated_at": "2011-02-04T16:13:55Z", "author_association": "NONE", "body": "I can confirm that this patch fixes the build error.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-750527", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 750527, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-08T17:48:08Z", "updated_at": "2011-02-08T17:48:45Z", "author_association": "OWNER", "body": "Hey, this is very nice, but the new compressed text repository is making the tests fail:\n\n```\nTraceback (most recent call last):\nFile \"/Users/tanoku/src/pygit2/test/utils.py\", line 74, in setUp\nz.extractall(temp_dir)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 940, in extractall\nself.extract(zipinfo, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 928, in extract\nreturn self._extract_member(member, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 965, in _extract_member\ntarget = file(targetpath, \"wb\")\nIOError: [Errno 20] Not a directory: '/var/folders/0d/0dHASpI3E9Ca1CvFczxbjU+++TI/-Tmp-/tmpdHiwtC/testrepo/bye.txt'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-751694", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 751694, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-08T22:33:57Z", "updated_at": "2011-02-08T22:33:57Z", "author_association": "MEMBER", "body": "I see from the traceback that you are using Python 2.6.1, it contains some bugs regarding zip files, like [issue 4710](http://bugs.python.org/issue4710). Could you try with a more recent version?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753331", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753331, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T10:56:26Z", "updated_at": "2011-02-09T10:56:26Z", "author_association": "OWNER", "body": "Hm, 2.5.4 fails too, with the following error:\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 87, in <module>\n    **kwargs\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 974, in                 run_commands\n    self.run_command(cmd)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 994, in run_command\n    cmd_obj.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 121, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 101, in with_project_on_sys_path\n    func()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 130, in run_tests\n    testLoader = loader_class()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 767, in __init__\n    self.parseArgs(argv)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 794, in parseArgs\n    self.createTests()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 800, in createTests\n    self.module)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 553, in loadTestsFromName\n    test = obj()\n  File \"/Users/tanoku/src/pygit2/test/__init__.py\", line 41, in test_suite\n    return unittest.defaultTestLoader.loadTestsFromNames(modules)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 541, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'test_blob'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753416", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753416, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T11:37:12Z", "updated_at": "2011-02-09T11:37:12Z", "author_association": "MEMBER", "body": "From the traceback it looks like this has nothing to do with my patches, no regression here.\n\nSupporting Python 2.5 would take more work. I think it is not worth the effort, it is an old version and pygit2 is clearly understaffed. I think it is more interesting to spend time on supporting new versions (Python 3) than on supporting old versions.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753753", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753753, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T13:50:26Z", "updated_at": "2011-02-09T13:50:26Z", "author_association": "OWNER", "body": "Fair enough -- the tests do work with Python 2.7. Nice job!\n\n...However, I'm afraid that 2.6 is still too mainstream as to have the tests broken on it. You need to work around the Zip issue on 2.6 before I can merge this. I'd suggest using GZip instead of Zip.\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753996", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753996, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:07:47Z", "updated_at": "2011-02-09T15:07:47Z", "author_association": "MEMBER", "body": "Accidentally I have reproduced the traceback you found with Python 2.5. It has nothing to do with 2.5 actually.\n\nIt happens pygit2 has two ways to run the tests. If setuptools is installed it will run the tests in-place. But if setuptools is not installed then you need to install pygit2 before running the tests (otherwise you will get that traceback), that's what the documentation says anyway:\n\n```\n$ python setup.py install\n$ python setup.py test\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754027", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754027, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:19:37Z", "updated_at": "2011-02-09T15:19:37Z", "author_association": "MEMBER", "body": "About Python 2.6, it works fine.\n\nJust tested myself and reproduced the same error with 2.6.1:\n\n  IOError: [Errno 20] Not a directory: '/tmp/tmp_W_Hl9/testrepo/bye.txt'\n\nBut the tests pass with 2.6.2 (which was released almost two years ago). By the way I use myself Python 2.6\n\nAnyway, I am going to replace zipfile by tarfile as you suggest, since it looks more robust (the tests may even pass with 2.5)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754072", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754072, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:34:26Z", "updated_at": "2011-02-09T15:34:26Z", "author_association": "MEMBER", "body": "Replaced zipfile by tarfile and now the tests pass even with Python 2.5 (on GNU/Linux, did not check Mac or Windows)\n\nIt was a bad idea to use zipfile in the first place.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754119", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754119, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T15:45:45Z", "updated_at": "2011-02-09T15:45:45Z", "author_association": "OWNER", "body": "This is perfect, thank you very much! Merging now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754264", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754264, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T16:16:15Z", "updated_at": "2011-02-09T16:16:15Z", "author_association": "MEMBER", "body": "cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439", "html_url": "https://github.com/libgit2/pygit2/pull/9#issuecomment-820439", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/9", "id": 820439, "user": {"login": "jszakmeister", "id": 448087, "avatar_url": "https://avatars1.githubusercontent.com/u/448087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jszakmeister", "html_url": "https://github.com/jszakmeister", "followers_url": "https://api.github.com/users/jszakmeister/followers", "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}", "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions", "organizations_url": "https://api.github.com/users/jszakmeister/orgs", "repos_url": "https://api.github.com/users/jszakmeister/repos", "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}", "received_events_url": "https://api.github.com/users/jszakmeister/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-01T00:09:54Z", "updated_at": "2011-03-01T00:09:54Z", "author_association": "CONTRIBUTOR", "body": "I realized that shortly after I submitted the pull request (and I thought I closed this one... but perhaps I forgot).  Thanks anyways!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-831360", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 831360, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-03T18:58:10Z", "updated_at": "2011-03-03T18:58:10Z", "author_association": "MEMBER", "body": "Hello,\n\nI have merged the branch 'add-commit-attributes' by John Szakmeister. This adds Commit.parents, I needed that to\nimplement the equivalent to \"git log -- path\".\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-833919", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 833919, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-04T11:22:05Z", "updated_at": "2011-03-04T11:22:05Z", "author_association": "MEMBER", "body": "This branch does not work after the recent changes to libgit2. I withdraw this pull request to open a new one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-847764", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 847764, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-08T16:20:53Z", "updated_at": "2011-03-08T16:20:53Z", "author_association": "MEMBER", "body": "You can try my fork of pygit2 where this has been fixed:\n\n```\ngit://github.com/jdavid/pygit2.git\n```\n\nI asked for my changes to be merged, see https://github.com/libgit2/pygit2/pull/11\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445", "html_url": "https://github.com/libgit2/pygit2/pull/11#issuecomment-876445", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/11", "id": 876445, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-15T14:48:19Z", "updated_at": "2011-03-15T14:48:19Z", "author_association": "MEMBER", "body": "There have been some more commits since I made this pull request, most important to keep pygit2 working after the changes to libgit2. But there are a few enhancements too:\n- New module function 'init_repository'\n- Added 'IndexEntry.path'\n- Started documentation on using pygit2\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-886641", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 886641, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-17T20:06:59Z", "updated_at": "2011-03-17T20:06:59Z", "author_association": "MEMBER", "body": "The changes have been merged upstream, so this is fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889196", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889196, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T13:34:29Z", "updated_at": "2011-03-18T13:34:29Z", "author_association": "MEMBER", "body": "pygit2 works with the 'master' branch of libgit2, commit b5c5f0f8086ee4\nis the tip of the 'development' branch\n\nOn Fri, 18 Mar 2011 05:31:07 -0700\nhonza\nreply@reply.github.com\nwrote:\n\n> Installed latest [libgit2][libgitsha], zlib and openssl. Using\n> [this][pysha] pygit2 revision, I can't get it to install:\n> \n> bash-3.2$ sudo python setup.py install\n> running install\n> running bdist_egg\n> running egg_info\n> writing pygit2.egg-info/PKG-INFO\n> writing top-level names to pygit2.egg-info/top_level.txt\n> writing dependency_links to pygit2.egg-info/dependency_links.txt\n> reading manifest file 'pygit2.egg-info/SOURCES.txt'\n> writing manifest file 'pygit2.egg-info/SOURCES.txt'\n> installing library code to build/bdist.macosx-10.6-universal/egg\n> running install_lib\n> running build_ext\n> building 'pygit2' extension\n> gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv\n> -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch ppc\n> -arch x86_64 -pipe -I/usr/local/include\n> -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6\n> -c pygit2.c -o build/temp.macosx-10.6-universal-2.6/pygit2.o\n> pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356: error: void\n> value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be lipo: can't open input file: /var/tmp//ccSxjred.out (No\n> such file or directory) error: command 'gcc-4.2' failed with exit\n> status 1\n> \n> [libgitsha]:\n> https://github.com/libgit2/libgit2/commit/b5c5f0f8086ee4e9bccf0703386fd5219ac380c2\n> \n> [pysha]:\n> https://github.com/libgit2/pygit2/commit/6c7df765c1a9a186e721826121f50d0286b4040e\n\n## \n\nJ. David Ib\u00e1\u00f1ez\nItaapy http://www.itaapy.com         Tel +33 (0)1 42 23 67 45\n9 rue Darwin, 75018 Paris              Fax +33 (0)1 53 28 27 88\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889316", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889316, "user": {"login": "honza", "id": 206357, "avatar_url": "https://avatars3.githubusercontent.com/u/206357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honza", "html_url": "https://github.com/honza", "followers_url": "https://api.github.com/users/honza/followers", "following_url": "https://api.github.com/users/honza/following{/other_user}", "gists_url": "https://api.github.com/users/honza/gists{/gist_id}", "starred_url": "https://api.github.com/users/honza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honza/subscriptions", "organizations_url": "https://api.github.com/users/honza/orgs", "repos_url": "https://api.github.com/users/honza/repos", "events_url": "https://api.github.com/users/honza/events{/privacy}", "received_events_url": "https://api.github.com/users/honza/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T14:13:32Z", "updated_at": "2011-03-18T14:13:32Z", "author_association": "NONE", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490", "html_url": "https://github.com/libgit2/pygit2/issues/14#issuecomment-940490", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/14", "id": 940490, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:43:47Z", "updated_at": "2011-03-31T10:43:47Z", "author_association": "MEMBER", "body": "I hope to update pygit2 by tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940505", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940505, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:51:00Z", "updated_at": "2011-03-31T10:51:00Z", "author_association": "MEMBER", "body": "I don't like the \"GPLv2 + exception\" for pygit2 either. Personally I would prefer LGPLv3, that would be fine to you?\n\nTo change the license the agreement of everybody that contributed to pygit2 is required, starting by Dave Borowitz, who has written more than half of it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940525", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940525, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T11:00:19Z", "updated_at": "2011-03-31T18:46:19Z", "author_association": "CONTRIBUTOR", "body": "According to wikipedia, the LGPL, even though it usually refers to library linking, may also be generalized into 'using' the library.\nAs python doesn't explicitly link pygit2 when importing it, the LGPL wouldn't really help unless we just regard pygit2 as being 'used' by my library. I don't know what lawyers say about that, but I would be fine with LGPL, from what I read in the wiki at least.\n\nPersonally I think the LGPL was designed just with dynamic and static libraries in mind, but maybe it can be widened to the general use of one library by another, no matter which system of linkage is actually employed.\n\nMaybe it would already be enough to adjust the linkage exemption to state that it may be linked to _and_ imported. This should be clear enough to allow git-python to use it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942629", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942629, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:25:33Z", "updated_at": "2011-03-31T19:25:33Z", "author_association": "MEMBER", "body": "On Thu, Mar 31, 2011 at 03:27, Byron <\nreply@reply.github.com>wrote:\n\n> Hi,\n> \n> As the answer to this question might be interesting for others as well, I\n> make it public using the issue system.\n> \n> Pygit2 uses the same license as libgit2, the GPL with linkage exception.\n> The problem I see is that this exception doesn't apply to the usage of\n> pygit2 within other python programs and libraries which are not necessarily\n> licensed under GPL.\n\nI've been assured by a lawyer that the linkage exception does apply to the\nnormal Python import mechanism. So you can safely \"import pygit2\" from a BSD\nproject without making that project GPL+exception. (You still cannot safely\nincorporate pygit2 source code in the source of a BSD project.)\n\n> For instance, I would be interested in using pygit2 in one of my projects,\n> gitdb, which in turn can be used by git-python. Both are licensed under\n> NewBSD, so I am worried that using pygit2 would compromise this license and\n> force it into the GPL.\n\nAs long as \"using\" == \"importing\", this is fine.\n\n> Could you please clarify the situation ?\n> Thank you,\n> Sebastian\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/libgit2/pygit2/issues/15\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942643", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942643, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:29:09Z", "updated_at": "2011-03-31T19:29:18Z", "author_association": "CONTRIBUTOR", "body": "Great to hear, thanks !\nI am quite eager to find out how libgit2 performs within the git-python streaming framework, so I will try to implement a gitdb which allows to obtain object information and object streams. Lets see how that works out :).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942714", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942714, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-03-31T19:45:32Z", "updated_at": "2011-03-31T19:45:32Z", "author_association": "OWNER", "body": "Hey, just stepping by to remind you that the linking exception is indeed _very_ permissive: you could even link your own Python library with a static version of libgit2 without it affecting your own program's license. I'm looking forward to see what can you come up with the git-python streaming framework. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-530320", "id": 530320, "user": {"login": "encukou", "id": 302922, "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-14T03:18:43Z", "updated_at": "2011-08-14T03:18:43Z", "author_association": "CONTRIBUTOR", "body": "Does this make sense for Python 2? Maybe the str & unicode types are too interchangeable there to select functionality based on them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-532550", "id": 532550, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-15T19:59:22Z", "updated_at": "2011-08-15T19:59:22Z", "author_association": "MEMBER", "body": "I think the behaviour must be the same for both Python 2 and 3, otherwise everything will be ore complicated (implementation, documentation, ...)\n\nBesides, in this case, the remark by @pyos [1] also applies to Python 2. Later on we will add to this method the ability to get an object by a short hex-sha, by calling `git_object_lookup_prefix`. If the hex-sha passed is 20 bytes long, how to know it is an hex-sha and not a raw-sha? I think to make the difference by the type is a fine solution.\n\n[1] https://github.com/libgit2/pygit2/issues/43#issuecomment-1791199\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621226", "id": 621226, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-29T22:38:07Z", "updated_at": "2011-09-29T22:38:07Z", "author_association": "NONE", "body": "May I ask what was the reasoning behind this change? I have to update all my code and tests now. :-(\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621935", "id": 621935, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-30T07:23:58Z", "updated_at": "2011-09-30T07:23:58Z", "author_association": "MEMBER", "body": "Readability. It is not evident whether the word \"sha\" refers to the raw oid (20 bytes byte string) or to its hexadecimal form (40 chars text string). At least `.hex` has the virtue of not being ambiguous.\n\nNote that now we also have `object.oid`, the raw oid as a 20 bytes byte string. And that the old `.sha` and the new `.hex` are not exactly the same, before `.sha` was a byte string, now `.hex` is a text (unicode) string. So this was the right time to make the change.\n\nAlso, pygit2 is still, like libgit2, alpha software. So changes to the API may happen from time to time, they will be documented on every release.\n\nThis commit is part of the work to fix issue 43, https://github.com/libgit2/pygit2/issues/43\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-626333", "id": 626333, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-10-03T11:58:07Z", "updated_at": "2011-10-03T11:58:07Z", "author_association": "NONE", "body": "Alright, understood. Without any other alternatives, we basically have no choice but to rely on alpha software\u2014so no worries about that, I realize that interfaces do change. I was just curious about the reasoning.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091", "html_url": "https://github.com/libgit2/pygit2/commit/c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04#commitcomment-1421091", "id": 1421091, "user": {"login": "luztak", "id": 1357267, "avatar_url": "https://avatars2.githubusercontent.com/u/1357267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luztak", "html_url": "https://github.com/luztak", "followers_url": "https://api.github.com/users/luztak/followers", "following_url": "https://api.github.com/users/luztak/following{/other_user}", "gists_url": "https://api.github.com/users/luztak/gists{/gist_id}", "starred_url": "https://api.github.com/users/luztak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luztak/subscriptions", "organizations_url": "https://api.github.com/users/luztak/orgs", "repos_url": "https://api.github.com/users/luztak/repos", "events_url": "https://api.github.com/users/luztak/events{/privacy}", "received_events_url": "https://api.github.com/users/luztak/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04", "created_at": "2012-06-06T05:05:29Z", "updated_at": "2012-06-06T05:05:29Z", "author_association": "NONE", "body": "Is there any func or class for push,please?Or could you tell me how push works?thx.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427309", "id": 2427309, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T13:17:17Z", "updated_at": "2013-01-13T13:17:17Z", "author_association": "CONTRIBUTOR", "body": "Typo in commit message, should be pygit2.com\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427780", "id": 2427780, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T18:14:39Z", "updated_at": "2013-01-13T18:14:39Z", "author_association": "MEMBER", "body": "www.pygit2.org actually, but it's to late to fix a commit message\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464644", "id": 2464644, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T15:40:53Z", "updated_at": "2013-01-19T15:40:53Z", "author_association": "CONTRIBUTOR", "body": "Is there a list where this is tracked? I spent about an hour trying to fix the broken linker on an old machine I was getting unresolved symbol errors on due to this one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464811", "id": 2464811, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:24:41Z", "updated_at": "2013-01-19T17:24:41Z", "author_association": "MEMBER", "body": "No. What I do is to keep a libgit2 clone and from time to time check whether pygit2 still works.\n\n(In my opinion, the problem is libgit2 does not release often enough.)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464823", "id": 2464823, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:30:51Z", "updated_at": "2013-01-19T17:30:51Z", "author_association": "CONTRIBUTOR", "body": "I agree completely. Having to have \"install libgit2 from their development head\" in the install instructions for my project is pretty awkward.\n\nIn this instance it was my fault for not diagnosing properly, I'll keep this in mind going forward. Cheers.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464834", "id": 2464834, "user": {"login": "wking", "id": 209920, "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wking", "html_url": "https://github.com/wking", "followers_url": "https://api.github.com/users/wking/followers", "following_url": "https://api.github.com/users/wking/following{/other_user}", "gists_url": "https://api.github.com/users/wking/gists{/gist_id}", "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wking/subscriptions", "organizations_url": "https://api.github.com/users/wking/orgs", "repos_url": "https://api.github.com/users/wking/repos", "events_url": "https://api.github.com/users/wking/events{/privacy}", "received_events_url": "https://api.github.com/users/wking/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:39:48Z", "updated_at": "2013-01-19T17:39:48Z", "author_association": "CONTRIBUTOR", "body": "On Sat, Jan 19, 2013 at 09:30:54AM -0800, Richo Healey wrote:\n\n> Having to have \"install libgit2 from their development head\" in the\n> install instructions for my project is pretty awkward.\n\nThis should all settle down once libgit2 freezes their API (soon?\nlibgit2/libgit2#1028).  In the mean time, there are usually known-good\nlibgit2 SHAs in the pygit2 upgrade commits.  The problem with _not_\ntracking the development branch of libgit2 is that their master branch\nhasn't been bumped since 2012-05-19, so lots of features are missing\nfrom the master branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382", "html_url": "https://github.com/libgit2/pygit2/commit/4b720472601e76e4bd2d0097def7613feb17b7f7#commitcomment-2548382", "id": 2548382, "user": {"login": "Gonnzik", "id": 3456303, "avatar_url": "https://avatars1.githubusercontent.com/u/3456303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gonnzik", "html_url": "https://github.com/Gonnzik", "followers_url": "https://api.github.com/users/Gonnzik/followers", "following_url": "https://api.github.com/users/Gonnzik/following{/other_user}", "gists_url": "https://api.github.com/users/Gonnzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gonnzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gonnzik/subscriptions", "organizations_url": "https://api.github.com/users/Gonnzik/orgs", "repos_url": "https://api.github.com/users/Gonnzik/repos", "events_url": "https://api.github.com/users/Gonnzik/events{/privacy}", "received_events_url": "https://api.github.com/users/Gonnzik/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "4b720472601e76e4bd2d0097def7613feb17b7f7", "created_at": "2013-02-02T16:48:48Z", "updated_at": "2013-02-02T16:48:48Z", "author_association": "NONE", "body": "\u0421 \u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0431\u043b\u044f (\u041a\u0430\u0440\u0430\u0441\u044c)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808", "html_url": "https://github.com/libgit2/pygit2/commit/673053dc7136cc6ba87296e23d3e817796928a99#commitcomment-2952808", "id": 2952808, "user": {"login": "cboos", "id": 153279, "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboos", "html_url": "https://github.com/cboos", "followers_url": "https://api.github.com/users/cboos/followers", "following_url": "https://api.github.com/users/cboos/following{/other_user}", "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboos/subscriptions", "organizations_url": "https://api.github.com/users/cboos/orgs", "repos_url": "https://api.github.com/users/cboos/repos", "events_url": "https://api.github.com/users/cboos/events{/privacy}", "received_events_url": "https://api.github.com/users/cboos/received_events", "type": "User", "site_admin": false}, "position": 22, "line": 422, "path": "src/pygit2.c", "commit_id": "673053dc7136cc6ba87296e23d3e817796928a99", "created_at": "2013-04-05T12:24:43Z", "updated_at": "2013-04-05T12:24:43Z", "author_association": "CONTRIBUTOR", "body": "I suppose this is a typo... \"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH\"\ns/MATC/MATCH/\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232373", "id": 3232373, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T03:56:28Z", "updated_at": "2013-05-17T03:56:28Z", "author_association": "NONE", "body": "why `GIT_DIFF_LINE_CONTEXT` has been removed ?\n\nin version 0.18.0 \nI can do\n\n`from pygit2 import GIT_DIFF_LINE_CONTEXT`\n\nbut now I can't , why?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232412", "id": 3232412, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T04:06:32Z", "updated_at": "2013-05-17T04:06:32Z", "author_association": "NONE", "body": "btw, I thought this parameter is used to control how many context line I would show in diff, like `git diff -U`, is this correct, how can I \nuse it properly?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3236676", "id": 3236676, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T16:28:58Z", "updated_at": "2013-05-17T16:28:58Z", "author_association": "MEMBER", "body": "These constants are used when looking at text lines in a diff to indicate if the line is a context line (or and added line or a removed line). The set the number of context lines, you need to set the `context_lines` value in the `git_diff_options`. It appears to me that that field of the options is not current exposed through pygit2.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3247623", "id": 3247623, "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T13:08:23Z", "updated_at": "2013-05-20T13:08:23Z", "author_association": "MEMBER", "body": "In pygit2 we convert the `context_line` to unicode (for python2/3 compability reasons). So if you use these constants for comparison it will fail. I think '+','-',' ' and '\\n' are more than enough meaningful. Btw pygit2 has support for `context_lines` with `#77b5cdc` (not yet merged to master).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3249463", "id": 3249463, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T17:03:51Z", "updated_at": "2013-05-20T17:03:51Z", "author_association": "MEMBER", "body": "@cholin Just a heads up, in recent libgit2 updates to the `development` branch, I had to introduce a new constant `GIT_DIFF_LINE_CONTEXT_EOFNL` that deals with the case where both sides of a diff end without an newline and those lines appear in the context at the end of the diff. When I added this new constant, I changed the values for the `...EOFNL` constants so that we're no longer using `'\\n'` as a value (since I worried it was confusing). The new values are `'>'` is ADD_EOFNL, `'<'` is DEL_EOFNL, and `'='` is CONTEXT_EOFNL.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324", "html_url": "https://github.com/libgit2/pygit2/commit/3474dca78f2b87ed7ce8222eb0ce168e59437e23#commitcomment-3980324", "id": 3980324, "user": {"login": "luchuan", "id": 811665, "avatar_url": "https://avatars1.githubusercontent.com/u/811665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luchuan", "html_url": "https://github.com/luchuan", "followers_url": "https://api.github.com/users/luchuan/followers", "following_url": "https://api.github.com/users/luchuan/following{/other_user}", "gists_url": "https://api.github.com/users/luchuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/luchuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luchuan/subscriptions", "organizations_url": "https://api.github.com/users/luchuan/orgs", "repos_url": "https://api.github.com/users/luchuan/repos", "events_url": "https://api.github.com/users/luchuan/events{/privacy}", "received_events_url": "https://api.github.com/users/luchuan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 500, "path": "src/repository.c", "commit_id": "3474dca78f2b87ed7ce8222eb0ce168e59437e23", "created_at": "2013-08-30T05:53:47Z", "updated_at": "2013-08-30T05:53:47Z", "author_association": "NONE", "body": ":beer:\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4840766", "id": 4840766, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T04:38:52Z", "updated_at": "2013-12-12T04:38:52Z", "author_association": "NONE", "body": "hi @carlosmn is `git_diff_list` depreciated in libgit2\uff0c we here has a kind of fork of `pygi2` with some modification. The fork hasn't sync with the main repo for a while, and now there are some conflicts with `git_diff_list`, I found your commit to adjust to libgit2, is there any explanation or documentation about the `git_diff_list` thing, either in libgit2 or pygit2. Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4841360", "id": 4841360, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T06:52:05Z", "updated_at": "2013-12-12T06:52:05Z", "author_association": "NONE", "body": "seems that it's just rename https://github.com/libgit2/libgit2/commit/3ff1d123736e5686fb9ec16e65828d5b8ffa2b30\n\nso I can just rename it , cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816", "html_url": "https://github.com/libgit2/pygit2/commit/9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7#commitcomment-7623816", "id": 7623816, "user": {"login": "guysoft", "id": 325670, "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7", "created_at": "2014-09-02T13:20:31Z", "updated_at": "2014-09-02T13:20:31Z", "author_association": "NONE", "body": "Hey,\nWhy was the MergeResult object object removed? How do I get now the oid of the merged result? It does not seem to appear in the working directory for me.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684", "html_url": "https://github.com/libgit2/pygit2/commit/0ba17a5b4608706f696c2212315ea0bb301db209#commitcomment-10577684", "id": 10577684, "user": {"login": "luto", "id": 2158203, "avatar_url": "https://avatars3.githubusercontent.com/u/2158203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luto", "html_url": "https://github.com/luto", "followers_url": "https://api.github.com/users/luto/followers", "following_url": "https://api.github.com/users/luto/following{/other_user}", "gists_url": "https://api.github.com/users/luto/gists{/gist_id}", "starred_url": "https://api.github.com/users/luto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luto/subscriptions", "organizations_url": "https://api.github.com/users/luto/orgs", "repos_url": "https://api.github.com/users/luto/repos", "events_url": "https://api.github.com/users/luto/events{/privacy}", "received_events_url": "https://api.github.com/users/luto/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0ba17a5b4608706f696c2212315ea0bb301db209", "created_at": "2015-04-05T15:20:35Z", "updated_at": "2015-04-05T15:20:35Z", "author_association": "NONE", "body": "thank you :heart: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701", "html_url": "https://github.com/libgit2/pygit2/commit/5c061cbb0a11e68cc36def504d8d74c10c255df0#commitcomment-21637701", "id": 21637701, "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5c061cbb0a11e68cc36def504d8d74c10c255df0", "created_at": "2017-04-05T13:47:48Z", "updated_at": "2017-04-05T13:47:48Z", "author_association": "CONTRIBUTOR", "body": "This closes #669 ", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984", "pull_request_review_id": null, "id": 462984, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "I bet you mean:\n\n```\nif (builder) {\n```\n", "created_at": "2012-02-17T19:16:11Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992", "pull_request_review_id": null, "id": 462992, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Yes I do. `builder` used to be called `bld` and it looks like I didn't clean up properly.\n", "created_at": "2012-02-17T19:19:09Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078", "pull_request_review_id": null, "id": 463078, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "- I wonder what Py_XDECREF will do with a `git_treebuilder` struct.\n- The point of using `Py_XDECREF` instead of `Py_DECREF` is that you don't need to check for NULL.\n", "created_at": "2012-02-17T19:34:01Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739", "pull_request_review_id": null, "id": 464739, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It doesn't seem to mind a `git_treebuilder` that much (it doesn't crash in the tests). Some example code must have been wrong about `Py_XDECREF`. I saw it being used with a guard. I'll update shortly.\n", "created_at": "2012-02-18T12:24:38Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062", "pull_request_review_id": null, "id": 465062, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "This line should not be. The dealloc function is called when the refcount is zero. Decreasing it below zero is not correct.\n", "created_at": "2012-02-18T22:17:20Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804", "pull_request_review_id": null, "id": 470804, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Now that you mention it, it does look silly, will fix.\n", "created_at": "2012-02-21T11:21:41Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081", "pull_request_review_id": null, "id": 3873081, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "sorry, I do not familiar with C. \nThe old code seems like try to compatible with either unicode and bytes. So if use \"ssi\", we can accept them both or does this require specific python version?\n", "created_at": "2013-04-19T13:13:29Z", "updated_at": "2013-04-19T13:13:29Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195", "pull_request_review_id": null, "id": 3873195, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "Well unicode and python is a bit messy. But PyArg_ParseTuple with `s` as argument will convert Strings and Unicode Strings to a c string pointer. So we can use PyArg_ParseTuple and do not loose any functionalities... Check the api: [python2.7](http://docs.python.org/2.7/c-api/arg.html) and [python3](http://docs.python.org/2.7/c-api/arg.html)\n", "created_at": "2013-04-19T13:20:15Z", "updated_at": "2013-04-19T13:20:15Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248", "pull_request_review_id": null, "id": 3873248, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "Thanks. Then it's much clear now.\n", "created_at": "2013-04-19T13:23:56Z", "updated_at": "2013-04-19T13:23:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132", "pull_request_review_id": null, "id": 4185132, "diff_hunk": "@@ -88,8 +88,8 @@\n                 PyList_SetItem(py_hunk->lines, 0,\n                     to_unicode_n(header, header_len, NULL, NULL));\n                 for (j=1; j < lines_in_hunk + 1; ++j) {\n-                    err = git_diff_patch_get_line_in_hunk(NULL, &line,\n-                              &line_len, NULL, NULL, patch, i, j - 1);\n+                    err = git_diff_patch_get_line_in_hunk(&py_hunk->origin,", "path": "src/diff.c", "position": 15, "original_position": 15, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "@cholin hi, I think here exist a problem, that, for `git_diff_patch_get_line_in_hunk`, this get a line detail for every line, but only the last one of 'origin' get reserved in hunk.origin.\n", "created_at": "2013-05-12T09:06:12Z", "updated_at": "2013-05-12T09:06:12Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006", "pull_request_review_id": null, "id": 4188006, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "this will break application code. and I change my code to receive int to char now. if this can be noticed in advance pull from master.\nby the way, do you guys recommend we application developer always use the latest code of pygit2?\n", "created_at": "2013-05-13T05:19:37Z", "updated_at": "2013-05-13T05:19:37Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703", "pull_request_review_id": null, "id": 4189703, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "I do not think you should use the latest version of pygit2 in your application. Right now the api isn't stable. We try to avoid these changes but better now than after a 1.0 release (which could be in near future). If you depend on a recent change, well then you have no other choice...\n", "created_at": "2013-05-13T09:01:05Z", "updated_at": "2013-05-13T09:01:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335", "pull_request_review_id": null, "id": 7895335, "diff_hunk": "@@ -95,8 +96,164 @@\n }\n \n \n+PyObject * get_pylist_from_git_strarray(git_strarray *strarray)\n+{\n+    int index;\n+    PyObject *new_list;\n+\n+    new_list = PyList_New(strarray->count);\n+    for (index = 0; index < strarray->count; (index)++ ) {\n+        PyList_SET_ITEM(\n+                       new_list,\n+                       index,\n+                       PyString_FromString(strarray->strings[index]));", "path": "src/remote.c", "position": null, "original_position": 31, "commit_id": "6050ae021dad0bc1af053b5fd1b6a431bf160df0", "original_commit_id": "ea8901f417ec29eb39524fecf23dda9760fd2148", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "We have `to_unicode` for this which works across verisions.\n", "created_at": "2013-11-25T16:21:44Z", "updated_at": "2013-12-02T15:18:04Z", "html_url": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/290", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/290"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225", "pull_request_review_id": null, "id": 9060225, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Why not use `\"s\"` as the format directly?\n", "created_at": "2014-01-21T23:54:43Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396", "pull_request_review_id": null, "id": 9064396, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "I'll fix this.\n", "created_at": "2014-01-22T03:30:59Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021", "pull_request_review_id": null, "id": 9171021, "diff_hunk": "@@ -256,7 +258,7 @@\n PyTypeObject RefspecType = {\n     PyVarObject_HEAD_INIT(NULL, 0)\n     \"_pygit2.Refspec\",                         /* tp_name           */\n-    sizeof(Remote),                            /* tp_basicsize      */\n+    sizeof(Refspec),                            /* tp_basicsize      */", "path": "src/remote.c", "position": 19, "original_position": 19, "commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "original_commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "More than one space.\n", "created_at": "2014-01-25T11:03:56Z", "updated_at": "2014-01-25T11:03:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155", "pull_request_review_id": null, "id": 14758155, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why not `from_c` like in `Index.from_c`? Is more consistent this way\n", "created_at": "2014-07-10T10:16:38Z", "updated_at": "2014-07-10T10:16:38Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262", "pull_request_review_id": null, "id": 14761262, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Because it's a special function. I went back and forth on that one, but this is a private function that only makes sense inside pygit2. The consistency should go the other way.\n", "created_at": "2014-07-10T11:54:21Z", "updated_at": "2014-07-10T11:54:21Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831", "pull_request_review_id": null, "id": 14817831, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why do you need to iterate? You can do it with 2 if statements:\n\n``` python\nif 'strategy' in kwargs:\n  copts.checkout_strategy = kwargs['strategy']\n\nif 'directory' in kwargs:\n  target_dir = ffi.new('char[]', to_str(kwargs['directory']))\n  refs.append(target_dir)\n  copts.target_directory = target_dir\n```\n", "created_at": "2014-07-11T12:25:54Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881", "pull_request_review_id": null, "id": 14817881, "diff_hunk": "@@ -221,7 +281,7 @@ def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n     def diff(self, a=None, b=None, cached=False, flags=GIT_DIFF_NORMAL,\n              context_lines=3, interhunk_lines=0):\n         \"\"\"\n-        Show changes between the working tree and the index or a tree,\n+        Sow changes between the working tree and the index or a tree,", "path": "pygit2/repository.py", "position": null, "original_position": 105, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "I think you delete by mistake an `h` from `Show`\n", "created_at": "2014-07-11T12:27:46Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235", "pull_request_review_id": null, "id": 14818235, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It's a leftover from working with less abstract constructions; but it's a guess as to how many parameters will actually be passed versus how many we will be looking at. I'm not a fan of looking up the same key twice, but it can be reduced.\n", "created_at": "2014-07-11T12:41:16Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294", "pull_request_review_id": null, "id": 14854294, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "I remember now why I wanted to iterate over the inputs instead of checking for the known keys: if the programmer using this method makes a typo, we will ignore that option instead of complaining, which can cause subtle bugs, as there is no indication that we're ignoring an argument that was passed. I didn't end up doing it as we just have the two things, but when this gets extended, we should raise an exception if we get something we don't recognise as an option.\n", "created_at": "2014-07-12T17:23:34Z", "updated_at": "2014-07-12T17:23:34Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085", "pull_request_review_id": null, "id": 15143085, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "Just changed this static method so it is shorter and fails on unexpected arguments.\n", "created_at": "2014-07-19T10:32:13Z", "updated_at": "2014-07-19T10:32:13Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992", "pull_request_review_id": null, "id": 15392992, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "All of these values will be unitialised if they're not passed. Instead of this, you should let `PyArg_ParseTupleAndKeywords` write into the options structure directly.\n", "created_at": "2014-07-25T09:36:57Z", "updated_at": "2014-07-25T09:40:42Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170", "pull_request_review_id": null, "id": 15393170, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "ArnoVanLumig", "id": 893745, "avatar_url": "https://avatars3.githubusercontent.com/u/893745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnoVanLumig", "html_url": "https://github.com/ArnoVanLumig", "followers_url": "https://api.github.com/users/ArnoVanLumig/followers", "following_url": "https://api.github.com/users/ArnoVanLumig/following{/other_user}", "gists_url": "https://api.github.com/users/ArnoVanLumig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnoVanLumig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnoVanLumig/subscriptions", "organizations_url": "https://api.github.com/users/ArnoVanLumig/orgs", "repos_url": "https://api.github.com/users/ArnoVanLumig/repos", "events_url": "https://api.github.com/users/ArnoVanLumig/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnoVanLumig/received_events", "type": "User", "site_admin": false}, "body": "Thanks!\n\nI actually figured that out myself but forgot to commit and push it... Thanks for the heads-up!\n", "created_at": "2014-07-25T09:41:56Z", "updated_at": "2014-07-25T09:41:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723", "pull_request_review_id": null, "id": 16031723, "diff_hunk": "@@ -61,6 +61,11 @@ class Keypair(object):\n     This is an object suitable for passing to a remote's credentials\n     callback and for returning from said callback.\n \n+    :param str username: the username used in the remote URL", "path": "pygit2/credentials.py", "position": null, "original_position": 4, "commit_id": "d752e8550b50d10abe8f0252e44e801ef71b263b", "original_commit_id": "f787a52e66c67958a9127f1a900c07c4ed48c879", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Again, this has nothing to do with the username the user may have passed as a hint. _This_ username is the only one that counts, and it has to be the username as which you wish to authenticate to the ssh host.\n", "created_at": "2014-08-10T15:19:27Z", "updated_at": "2014-08-11T22:51:41Z", "html_url": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/398", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/398"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524", "pull_request_review_id": null, "id": 16348524, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "There's no need for this line. You're already setting the version above with the init function. If the version does increase, this would cause libgit2 to consider the struct to have a different layout.\n", "created_at": "2014-08-18T11:45:28Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362", "pull_request_review_id": null, "id": 16349362, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "mduggan", "id": 3765590, "avatar_url": "https://avatars2.githubusercontent.com/u/3765590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mduggan", "html_url": "https://github.com/mduggan", "followers_url": "https://api.github.com/users/mduggan/followers", "following_url": "https://api.github.com/users/mduggan/following{/other_user}", "gists_url": "https://api.github.com/users/mduggan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mduggan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mduggan/subscriptions", "organizations_url": "https://api.github.com/users/mduggan/orgs", "repos_url": "https://api.github.com/users/mduggan/repos", "events_url": "https://api.github.com/users/mduggan/events{/privacy}", "received_events_url": "https://api.github.com/users/mduggan/received_events", "type": "User", "site_admin": false}, "body": "Ah, I was doing it in a little bit of a weird order.. I wanted to create the \"default\" callbacks first so that any error could raise before the custom callbacks had been set.. but fair point about the version number being set differently on the two lines.. if it changes in one place it will need to change in both,\n", "created_at": "2014-08-18T12:11:45Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924", "pull_request_review_id": null, "id": 18427924, "diff_hunk": "@@ -321,6 +321,30 @@ def push(self, spec, signature=None, message=None):\n         :param Signature signature: signature to use when updating the tips\n         :param str message: message to use when updating the tips\n         \"\"\"\n+        # Get the default callbacks first\n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks, 1)\n+        check_error(err)\n+\n+        # Build custom callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1\n+        callbacks.sideband_progress = self._sideband_progress_cb\n+        callbacks.transfer_progress = self._transfer_progress_cb\n+        callbacks.update_tips = self._update_tips_cb\n+        callbacks.credentials = self._credentials_cb\n+        # We need to make sure that this handle stays alive\n+        self._self_handle = ffi.new_handle(self)", "path": "pygit2/remote.py", "position": 17, "original_position": 17, "commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "original_commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "`self._self_handle` needs to be set to `None` after the push operation completes, next to freeing the push object itself.\n", "created_at": "2014-10-04T06:43:23Z", "updated_at": "2014-10-04T06:43:23Z", "html_url": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/431", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/431"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737", "pull_request_review_id": null, "id": 17552737, "diff_hunk": "@@ -85,3 +85,9 @@ def credential_tuple(self):\n \n     def __call__(self, _url, _username, _allowed):\n         return self\n+\n+\n+class KeypairFromAgent(Keypair):\n+    def __init__(self, username):\n+        self._username = username\n+        super(KeypairFromAgent, self).__init__(username, None, None, None)", "path": "pygit2/credentials.py", "position": null, "original_position": 9, "commit_id": "9aa39aafbc4e9e5920086cdafdb96270ee66ebe5", "original_commit_id": "4b9fe1cc7c54735e3a0a062d0ffe013d4e4d984d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "One of these lies is redundant. If we're going to rely on the superclass' constructor, then there's no need for us to store the username explicitly.\n", "created_at": "2014-09-15T16:35:10Z", "updated_at": "2014-10-07T08:48:52Z", "html_url": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/424", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/424"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}, "4": {"issues": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/765", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/765/events", "html_url": "https://github.com/libgit2/pygit2/issues/765", "id": 288615758, "number": 765, "title": "big endian: FAIL: test_no_context_lines (test.test_patch.PatchTest)", "user": {"login": "onovy", "id": 1649603, "avatar_url": "https://avatars1.githubusercontent.com/u/1649603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onovy", "html_url": "https://github.com/onovy", "followers_url": "https://api.github.com/users/onovy/followers", "following_url": "https://api.github.com/users/onovy/following{/other_user}", "gists_url": "https://api.github.com/users/onovy/gists{/gist_id}", "starred_url": "https://api.github.com/users/onovy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onovy/subscriptions", "organizations_url": "https://api.github.com/users/onovy/orgs", "repos_url": "https://api.github.com/users/onovy/repos", "events_url": "https://api.github.com/users/onovy/events{/privacy}", "received_events_url": "https://api.github.com/users/onovy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-15T14:39:47Z", "updated_at": "2018-01-15T14:39:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\ntest.test_patch.PatchTest.test_no_context_lines fails on archs mips, s390x, hppa, powerpc or ppc64. I think all of them are \"big endian\". This bug is new in 0.26.3, because before this version test_no_context_lines test didn't exists.\r\n\r\n```\r\nFAIL: test_no_context_lines (test.test_patch.PatchTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/test/test_patch.py\", line 196, in test_no_context_lines\r\n    self.assertEqual(context_count, 0)\r\nAssertionError: 1 != 0\r\n```\r\n\r\nSee: https://buildd.debian.org/status/package.php?p=python-pygit2\r\n\r\nThanks for fixing.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/764/events", "html_url": "https://github.com/libgit2/pygit2/issues/764", "id": 288579376, "number": 764, "title": "tree.diff_to_tree results in many unnecessary sys calls", "user": {"login": "Nukesor", "id": 3322822, "avatar_url": "https://avatars2.githubusercontent.com/u/3322822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nukesor", "html_url": "https://github.com/Nukesor", "followers_url": "https://api.github.com/users/Nukesor/followers", "following_url": "https://api.github.com/users/Nukesor/following{/other_user}", "gists_url": "https://api.github.com/users/Nukesor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nukesor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nukesor/subscriptions", "organizations_url": "https://api.github.com/users/Nukesor/orgs", "repos_url": "https://api.github.com/users/Nukesor/repos", "events_url": "https://api.github.com/users/Nukesor/events{/privacy}", "received_events_url": "https://api.github.com/users/Nukesor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-15T12:32:34Z", "updated_at": "2018-01-17T22:44:46Z", "closed_at": null, "author_association": "NONE", "body": "Hi!\r\n\r\nI'm currently working on a git scanner with a very high throughput for my bachelor thesis.\r\nAs the scanner runs with 8 threads, I'm observing severe slowdowns on my server.\r\nAfter running the command with `strace` i noticed that there are a whole lot of unnecessary syscalls issued on each diff. It looks like  for each file in the diff, there is one `stat` for the actual file, two `access` for `/etc/gitattributes` and two `stat` for `/info/attributes`. \r\n\r\nThis results in a lot of syscalls and slows things down significantly as the program seems to wait for those calls most of the time. The repositories are located inside `/tmp` and cleaned after each scan. There are no signs of RAM shortage as there are about 8GB+ unused space in the `/tmp` fs.\r\n\r\nThe repositories are cloned `bare`. The actual function call is:\r\n```\r\ndiff = commit.tree.diff_to_tree(commit.parents[0].tree)\r\nself.commit_stats[commit.hex] = {\r\n    'additions': diff.stats.insertions,\r\n    'deletions': diff.stats.deletions,\r\n}\r\n```\r\n\r\nI'm not sure if this is the right place or if this is rather a libgit2 issue.\r\nAnyway I'm happy for any help as I'm not that familiar with the pythin-C binding mechanics.\r\n\r\nRelevant strace output example:\r\n```\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/main.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"src/states/Level.lua\", 0x7ffd6ef8c410) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] stat(\"/tmp/gitalizer/C-gotoh/atomazed/info/attributes\", 0x7ffd6ef8c250) = -1 ENOENT (No such file or directory)\r\n[pid 32220] access(\"/etc/gitattributes\", F_OK) = -1 ENOENT (No such file or directory)\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/752/events", "html_url": "https://github.com/libgit2/pygit2/issues/752", "id": 278706454, "number": 752, "title": "Performance: speed of getting `blob.data` for large files (as compared to GitPython)", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T18:37:55Z", "updated_at": "2017-12-02T18:37:55Z", "closed_at": null, "author_association": "NONE", "body": "I have compared speed of equivalent to `git show <revision>:<pathname>` in both pygit2 and GitPython (the pure-Python implementation). In all other cases that I have tested pygit2 is faster, but for very large files `git show` / `git cat-file` equivalent is slower.\r\n\r\npygit2 code:\r\n``` python\r\nblob = repo.revparse_single(commit + ':' + path)\r\nresult = blob.data\r\n```\r\n\r\nGitPython code:\r\n``` python\r\nblob = repo.rev_parse(commit + ':' + path)\r\nresult = blob.data_stream.read()\r\n```\r\n\r\nDo you have any ideas why pygit2 is slower here?\r\n\r\nP.S. would it be difficult to add streaming access?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/750/events", "html_url": "https://github.com/libgit2/pygit2/issues/750", "id": 278573551, "number": 750, "title": "Suggestion: better handling of `repo.set_head(pygit2.Commit)`", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T19:38:10Z", "updated_at": "2017-12-25T18:54:52Z", "closed_at": null, "author_association": "NONE", "body": "I have tried to emulate `git checkout --detach <commit>` in pygit2, to create **detached HEAD** checkout, and I did come up with the following rough equivalent (though the following does not uses transactions as git does):\r\n\r\n``` python\r\nrev = repo.revparse_single(commit_name)\r\nrepo.checkout_tree(rev)\r\nrepo.set_head(rev.id)\r\n```\r\n\r\nHowever when I tried to use simply `repo.set_head(rev)`, I got the following error:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-35-9612528ec0ac> in <module>()\r\n----> 1 repo.set_head(rev)\r\n\r\n/usr/lib/python2.7/dist-packages/pygit2/repository.pyc in set_head(self, target)\r\n    293\r\n    294         # if it's a string, then it's a reference name\r\n--> 295         err = C.git_repository_set_head(self._repo, to_bytes(target))\r\n    296         check_error(err)\r\n    297\r\n\r\nTypeError: initializer for ctype 'char *' must be a cdata pointer, not _pygit2.Commit\r\n```\r\n\r\nIt would be nice if `pygit2.Commit` object was automatically peeled, but if it is decided to be not good idea, then what it needs is more user-friendly error message than the one above.\r\n\r\n-----\r\npygit2 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/747/events", "html_url": "https://github.com/libgit2/pygit2/issues/747", "id": 278039485, "number": 747, "title": "Broken GIT_SORT_TIME ?", "user": {"login": "pypingou", "id": 1240038, "avatar_url": "https://avatars1.githubusercontent.com/u/1240038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pypingou", "html_url": "https://github.com/pypingou", "followers_url": "https://api.github.com/users/pypingou/followers", "following_url": "https://api.github.com/users/pypingou/following{/other_user}", "gists_url": "https://api.github.com/users/pypingou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pypingou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pypingou/subscriptions", "organizations_url": "https://api.github.com/users/pypingou/orgs", "repos_url": "https://api.github.com/users/pypingou/repos", "events_url": "https://api.github.com/users/pypingou/events{/privacy}", "received_events_url": "https://api.github.com/users/pypingou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-30T08:45:17Z", "updated_at": "2018-01-03T10:39:41Z", "closed_at": null, "author_association": "NONE", "body": "This is a script to reproduce the behavior I'm seeing:\r\n````\r\n#!/usr/bin/env python\r\n\r\nimport tempfile\r\nimport time\r\nimport os\r\n\r\nimport pygit2\r\n\r\npath = tempfile.mkdtemp(prefix='pygit2_test_')\r\nrepo = pygit2.init_repository(path)\r\n\r\nauthor = pygit2.Signature('Alice Author', 'alice@authors.tld')\r\ncommitter = pygit2.Signature('Cecil Committer', 'cecil@committers.tld')\r\n\r\n# Commit #1\r\n\r\n # Create a file in that git repo\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\nparents = []\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #1',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents,\r\n))\r\ncommit1 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n# Commit #2\r\n\r\nparents = [commit1.oid.hex]\r\n\r\nsubfolder = os.path.join('folder1', 'folder2')\r\nos.makedirs(os.path.join(path, subfolder))\r\n# Create a file in that git repo\r\nwith open(os.path.join(path, subfolder, 'file'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz')\r\nrepo.index.add(os.path.join(subfolder, 'file'))\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #2',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit2 = repo.revparse_single('HEAD')\r\ntime.sleep(0.1)\r\n\r\n\r\n# Commit #3\r\n\r\nparents = [commit2.oid.hex]\r\n\r\n# Update the sources file\r\nwith open(os.path.join(path, 'sources'), 'w') as stream:\r\n    stream.write('foo\\n bar\\nbaz!')\r\nrepo.index.add('sources')\r\nrepo.index.write()\r\n\r\n# Commits the files added\r\ntree = repo.index.write_tree()\r\nprint(repo.create_commit(\r\n    'refs/heads/master',  # the name of the reference to update\r\n    author,\r\n    committer,\r\n    'Commit #3',\r\n    # binary string representing the tree object ID\r\n    tree,\r\n    # list of binary strings representing parents of the new commit\r\n    parents\r\n))\r\ncommit3 = repo.revparse_single('HEAD')\r\n\r\n\r\nprint('')\r\nmain_walker = repo.walk(commit3.oid.hex, pygit2.GIT_SORT_TIME)\r\ncommits_msgs = []\r\nwhile 1:\r\n    try:\r\n        com = main_walker.next()\r\n        print(com.message)\r\n        print(com.oid.hex)\r\n    except StopIteration:\r\n        break\r\n````\r\n\r\nIt gives me the following output:\r\n````\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\n\r\nCommit #3\r\n47e61d2eaa8c5d3d1562475a43aa99c0e7fb9b8a\r\nCommit #1\r\n7335ffcfdb2039a9631ef5c891ec6a12feaeb342\r\nCommit #2\r\n50ea7d4691ee78b60323ac1d4174a6609190fbaf\r\n````\r\n\r\nThe first three lines are the commit as they are committed.\r\nThe following lines are the commit message and hash as ``repo.walk(commit3, pygit2.GIT_SORT_TIME)`` is returning them.\r\n\r\nSomething looks broken to me :)", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/747/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/738/events", "html_url": "https://github.com/libgit2/pygit2/issues/738", "id": 276061504, "number": 738, "title": "`repo.diff(c1, c2, flags=pygit2.GIT_DIFF_FIND_RENAMES)` reverses diff", "user": {"login": "jnareb", "id": 2706, "avatar_url": "https://avatars2.githubusercontent.com/u/2706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnareb", "html_url": "https://github.com/jnareb", "followers_url": "https://api.github.com/users/jnareb/followers", "following_url": "https://api.github.com/users/jnareb/following{/other_user}", "gists_url": "https://api.github.com/users/jnareb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnareb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnareb/subscriptions", "organizations_url": "https://api.github.com/users/jnareb/orgs", "repos_url": "https://api.github.com/users/jnareb/repos", "events_url": "https://api.github.com/users/jnareb/events{/privacy}", "received_events_url": "https://api.github.com/users/jnareb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T13:08:42Z", "updated_at": "2017-11-22T13:08:42Z", "closed_at": null, "author_association": "NONE", "body": "First complaint is that there is no documentation and no examples of using `flags` (not `flag` as in description of parameters) with `Repository.diff`: http://www.pygit2.org/diff.html . Therefore I am not sure if I am using the API correctly.\r\n\r\nSecond, using `flags=pygit2.GIT_DIFF_FIND_RENAMES` for some reason **reverses** diff.\r\n\r\nCompare \r\n```\r\n>>> repo = pygit2.Repository('path/to/repo')\r\n>>> repo.diff('HEAD^', 'HEAD', flag=pygit2.GIT_DIFF_FIND_RENAMES).patch`\r\n```\r\nwith \r\n```\r\n>>> repo.diff('HEAD^', 'HEAD').patch\r\n```\r\n\r\n-----\r\n\r\npygit2.LIBGIT2_VERSION: '0.26.0'\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/732/events", "html_url": "https://github.com/libgit2/pygit2/issues/732", "id": 270986972, "number": 732, "title": "hunk.final_committer.name not work if email is empty", "user": {"login": "Bysmyyr", "id": 3306756, "avatar_url": "https://avatars3.githubusercontent.com/u/3306756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bysmyyr", "html_url": "https://github.com/Bysmyyr", "followers_url": "https://api.github.com/users/Bysmyyr/followers", "following_url": "https://api.github.com/users/Bysmyyr/following{/other_user}", "gists_url": "https://api.github.com/users/Bysmyyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bysmyyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bysmyyr/subscriptions", "organizations_url": "https://api.github.com/users/Bysmyyr/orgs", "repos_url": "https://api.github.com/users/Bysmyyr/repos", "events_url": "https://api.github.com/users/Bysmyyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Bysmyyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T13:58:13Z", "updated_at": "2017-11-03T13:58:34Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I found this error:\r\n\r\nif email is missing, it gives error \"Signarure cannot have an empty name or email\"\r\n\r\nin libgit2 Slack channel we discuss it and end up that in `wrap_signature` pygit2 creates new signature where email cannot be empty. It maybe should use `git_signature_dup` instead?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/731/events", "html_url": "https://github.com/libgit2/pygit2/issues/731", "id": 269346053, "number": 731, "title": "Document KeypairFromAgent", "user": {"login": "yan12125", "id": 1937689, "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-28T20:07:14Z", "updated_at": "2017-10-28T20:07:14Z", "closed_at": null, "author_association": "NONE", "body": "I didn't know that feature until I check codes from both libgit2 and pygit2. I think it would be helpful to have that documented in http://www.pygit2.org/remotes.html.\r\n\r\nGoogling reveals another confused developer like me :-) https://github.com/saltstack/salt/issues/40008#issuecomment-286434931", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/729/events", "html_url": "https://github.com/libgit2/pygit2/issues/729", "id": 267666642, "number": 729, "title": "pygit2 installation error. ", "user": {"login": "santublr", "id": 3136174, "avatar_url": "https://avatars2.githubusercontent.com/u/3136174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santublr", "html_url": "https://github.com/santublr", "followers_url": "https://api.github.com/users/santublr/followers", "following_url": "https://api.github.com/users/santublr/following{/other_user}", "gists_url": "https://api.github.com/users/santublr/gists{/gist_id}", "starred_url": "https://api.github.com/users/santublr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santublr/subscriptions", "organizations_url": "https://api.github.com/users/santublr/orgs", "repos_url": "https://api.github.com/users/santublr/repos", "events_url": "https://api.github.com/users/santublr/events{/privacy}", "received_events_url": "https://api.github.com/users/santublr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T13:24:55Z", "updated_at": "2017-10-24T13:34:31Z", "closed_at": null, "author_association": "NONE", "body": "This issue which I'm reporting may be repetative one, but after googling and trying all the options I'm still not able to load the right pygit2.\r\n\r\npygit2 version 0.22.0\r\nlibgit2 version 0.22.0\r\npycparse version 2.18\r\ncffi version 0.9.2\r\nPython Version 3.3.2\r\nOS CentOS release 6.8 (Fina\r\n\r\n\r\npython3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LD_LIBRARY_PATH=$LIBGIT2/lib\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # export LIBGIT2=/usr/local\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named pygit2\r\nroot@sc-p4-gitfusion-2017:/scm/p4/bin.gitfusion/2017.1 # python3.3 -c 'import pygit2'\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 147, in _typeof\r\n    result = self._parsed_types[cdecl]\r\nKeyError: 'int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 126, in _parse\r\n    ast = _get_parser().parse(csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pycparser-2.18-py3.3.egg/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :71:7: before: git_repository_create_cb\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/pygit2-0.22.0-py3.3-linux-x86_64.egg/pygit2/__init__.py\", line 134, in <module>\r\n    @ffi.callback('int (*git_repository_create_cb)(git_repository **out,'\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 297, in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 150, in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/api.py\", line 135, in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 275, in parse_type\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 128, in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n  File \"/scm/apps/Python-3.3.2/lib/python3.3/site-packages/cffi-0.9.2-py3.3-linux-x86_64.egg/cffi/cparser.py\", line 157, in convert_pycparser_error\r\n    raise api.CDefError(msg)\r\ncffi.api.CDefError: cannot parse \"int (*git_repository_create_cb)(git_repository **out,const char *path, int bare, void *payload)\"\r\n:71:7: before: git_repository_create_cb\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/727/events", "html_url": "https://github.com/libgit2/pygit2/issues/727", "id": 265532038, "number": 727, "title": "create_commit does not update the reflog", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:28:12Z", "updated_at": "2017-10-14T23:28:12Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI have noticed that v0.26.0 of `create_commit` does not create an entry in the reflog for the initial commit of a branch.\r\n\r\n```python\r\n/private/tmp\r\n4> mkdir d\r\n\r\n/private/tmp\r\n5> cd d\r\n/private/tmp/d\r\n\r\n/private/tmp/d\r\n6> import pygit2\r\n\r\n/private/tmp/d\r\n7> repo = pygit2.init_repository(\".\")\r\n\r\n/private/tmp/d\r\n8> repo.config[\"user.email\"] = \"foo@bar.com\"\r\n\r\n/private/tmp/d\r\n9> foo = repo.create_blob(\"foo\")\r\n\r\n/private/tmp/d\r\n10> builder = repo.TreeBuilder()\r\n\r\n/private/tmp/d\r\n11> builder.insert(\"foo\", foo, pygit2.GIT_FILEMODE_BLOB)\r\n\r\n/private/tmp/d\r\n12> tree_id = builder.write()\r\n\r\n/private/tmp/d\r\n13> repo.create_commit(\"refs/test\", repo.default_signature, repo.default_signature, \"test\", tre\r\n13: e_id, [])\r\n13> f610cdd139fab6f738dfaff52839a552a6b8bb9e\r\n\r\n/private/tmp/d\r\n14> git reflog refs/test\r\n  File \"<ipython-input-14-afa1bc8c3c03>\", line 1\r\n    git reflog refs/test\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n/private/tmp/d\r\n15> !git reflog refs/test\r\n\r\n/private/tmp/d\r\n16> !git --no-pager reflog refs/test\r\n\r\n/private/tmp/d\r\n17> repo.references[\"refs/test\"].log\r\n17> <function Reference.log>\r\n\r\n/private/tmp/d\r\n18> repo.references[\"refs/test\"].log()\r\n18> <_pygit2.RefLogIter at 0x10db93bc0>\r\n\r\n/private/tmp/d\r\n19> list(repo.references[\"refs/test\"].log())\r\n19> []\r\n```\r\n\r\nHowever it works it is not an initial commit.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/726/events", "html_url": "https://github.com/libgit2/pygit2/issues/726", "id": 265531696, "number": 726, "title": "revparse_single does not understand date", "user": {"login": "nicolasdespres", "id": 614631, "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-14T23:22:03Z", "updated_at": "2017-10-14T23:22:03Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\n`revparse_single` does not support date parsing:\r\n\r\n$ git rev-parse 'HEAD@{2 weeks ago}'\r\neebac5f1c21ec78e098a8f7b60facd726b30844e\r\n$ python3 -c 'import pygit2; pygit2.Repository(\".\").revparse_single(\"HEAD@{2 weeks ago}\")'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nKeyError: 'HEAD@{2 weeks ago}'\r\n\r\nI am using version 0.26.0", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/725/events", "html_url": "https://github.com/libgit2/pygit2/issues/725", "id": 263573001, "number": 725, "title": "Support for Custom Merge drivers?", "user": {"login": "white-gecko", "id": 1018168, "avatar_url": "https://avatars1.githubusercontent.com/u/1018168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/white-gecko", "html_url": "https://github.com/white-gecko", "followers_url": "https://api.github.com/users/white-gecko/followers", "following_url": "https://api.github.com/users/white-gecko/following{/other_user}", "gists_url": "https://api.github.com/users/white-gecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/white-gecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/white-gecko/subscriptions", "organizations_url": "https://api.github.com/users/white-gecko/orgs", "repos_url": "https://api.github.com/users/white-gecko/repos", "events_url": "https://api.github.com/users/white-gecko/events{/privacy}", "received_events_url": "https://api.github.com/users/white-gecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-06T21:11:57Z", "updated_at": "2017-10-06T21:11:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Is there any way of using a custom merge driver in pygit2? I've see this for libgit2: https://github.com/libgit2/libgit2/pull/3564 is this also possible to be used with pygit2 as it is?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/724/events", "html_url": "https://github.com/libgit2/pygit2/issues/724", "id": 256558064, "number": 724, "title": "How can I get current Tag reference?", "user": {"login": "smelnikov", "id": 13030121, "avatar_url": "https://avatars0.githubusercontent.com/u/13030121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smelnikov", "html_url": "https://github.com/smelnikov", "followers_url": "https://api.github.com/users/smelnikov/followers", "following_url": "https://api.github.com/users/smelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/smelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/smelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smelnikov/subscriptions", "organizations_url": "https://api.github.com/users/smelnikov/orgs", "repos_url": "https://api.github.com/users/smelnikov/repos", "events_url": "https://api.github.com/users/smelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/smelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T01:27:14Z", "updated_at": "2017-09-11T01:27:14Z", "closed_at": null, "author_association": "NONE", "body": "First, I checkout TAG from my repo. \r\nThen I need resolve name of this TAG. But I can't get relevant reference object (HEAD is detached).\r\nPlease tell me, how this can be done?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/723/events", "html_url": "https://github.com/libgit2/pygit2/issues/723", "id": 252168529, "number": 723, "title": "GIT_SORT_TOPOLOGICAL is document backwards.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-23T05:59:38Z", "updated_at": "2017-08-23T06:00:26Z", "closed_at": null, "author_association": "NONE", "body": "The documentation states that parents come before children, but actually children come before parents.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/722/events", "html_url": "https://github.com/libgit2/pygit2/issues/722", "id": 248080008, "number": 722, "title": "Support `git bundle create`", "user": {"login": "ashmastaflash", "id": 5561645, "avatar_url": "https://avatars1.githubusercontent.com/u/5561645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashmastaflash", "html_url": "https://github.com/ashmastaflash", "followers_url": "https://api.github.com/users/ashmastaflash/followers", "following_url": "https://api.github.com/users/ashmastaflash/following{/other_user}", "gists_url": "https://api.github.com/users/ashmastaflash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashmastaflash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashmastaflash/subscriptions", "organizations_url": "https://api.github.com/users/ashmastaflash/orgs", "repos_url": "https://api.github.com/users/ashmastaflash/repos", "events_url": "https://api.github.com/users/ashmastaflash/events{/privacy}", "received_events_url": "https://api.github.com/users/ashmastaflash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-04T18:16:58Z", "updated_at": "2017-08-04T18:16:58Z", "closed_at": null, "author_association": "NONE", "body": "Ideal form would be to have a class method for Repository that accepts a single argument for the output file path.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/events", "html_url": "https://github.com/libgit2/pygit2/pull/719", "id": 246313508, "number": 719, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch"}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/717/events", "html_url": "https://github.com/libgit2/pygit2/issues/717", "id": 245668433, "number": 717, "title": "How to solve 'LIBSSH2 not found.'?", "user": {"login": "pklim101", "id": 4819579, "avatar_url": "https://avatars3.githubusercontent.com/u/4819579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pklim101", "html_url": "https://github.com/pklim101", "followers_url": "https://api.github.com/users/pklim101/followers", "following_url": "https://api.github.com/users/pklim101/following{/other_user}", "gists_url": "https://api.github.com/users/pklim101/gists{/gist_id}", "starred_url": "https://api.github.com/users/pklim101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pklim101/subscriptions", "organizations_url": "https://api.github.com/users/pklim101/orgs", "repos_url": "https://api.github.com/users/pklim101/repos", "events_url": "https://api.github.com/users/pklim101/events{/privacy}", "received_events_url": "https://api.github.com/users/pklim101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T09:57:14Z", "updated_at": "2017-08-11T22:05:10Z", "closed_at": null, "author_association": "NONE", "body": "when I execute the command 'cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/libgit2',\r\nI have the output bellow\uff1a\r\n\r\n> \r\n\r\n-- Checking for module 'libcurl' \r\n--   Found libcurl, version 7.15.5  \r\n-- Could NOT find HTTP_Parser (missing: HTTP_PARSER_INCLUDE_DIR HTTP_PARSER_LIBRARY)   \r\n-- http-parser version 2 was not found; using bundled 3rd-party sources.  \r\n-- Checking for module 'libssh2'  \r\n--   No package 'libssh2' found  \r\n-- LIBSSH2 not found. Set CMAKE_PREFIX_PATH if it is installed outside of the default search path.\r\n\r\nthere are two module not fund, How can I solve it? thanks!", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/716/events", "html_url": "https://github.com/libgit2/pygit2/issues/716", "id": 244237603, "number": 716, "title": "pygit2.GIT_DIFF_IGNORE_WHITESPACE result Inconsistent", "user": {"login": "tongtongtongtong", "id": 22701681, "avatar_url": "https://avatars2.githubusercontent.com/u/22701681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongtongtongtong", "html_url": "https://github.com/tongtongtongtong", "followers_url": "https://api.github.com/users/tongtongtongtong/followers", "following_url": "https://api.github.com/users/tongtongtongtong/following{/other_user}", "gists_url": "https://api.github.com/users/tongtongtongtong/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongtongtongtong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongtongtongtong/subscriptions", "organizations_url": "https://api.github.com/users/tongtongtongtong/orgs", "repos_url": "https://api.github.com/users/tongtongtongtong/repos", "events_url": "https://api.github.com/users/tongtongtongtong/events{/privacy}", "received_events_url": "https://api.github.com/users/tongtongtongtong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-20T03:46:20Z", "updated_at": "2017-07-20T03:46:20Z", "closed_at": null, "author_association": "NONE", "body": "git command:\r\ndiff --git a/Makefile b/Makefile\r\nindex bb20e89..c25d045 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -3,4 +3,5 @@ install:\r\n \r\n clean: \r\n        rm -rf tgit-statistics \r\n+       \r\n qed \r\n\\ No newline at end of file\r\n\r\npygit2:\r\nrepo.diff(from_id, to_id, cached=True, flags=pygit2.GIT_DIFF_IGNORE_WHITESPACE, context_lines=3, interhunk_lines=3)\r\n\r\ndiff --git a/Makefile b/Makefile\r\nindex bb2..c25 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -5,0 +6 @@ clean:\r\n+", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/712/events", "html_url": "https://github.com/libgit2/pygit2/issues/712", "id": 236881017, "number": 712, "title": "`Repository.diff(cached=True)` does not list diffs for indexed files", "user": {"login": "jbaiter", "id": 608610, "avatar_url": "https://avatars2.githubusercontent.com/u/608610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaiter", "html_url": "https://github.com/jbaiter", "followers_url": "https://api.github.com/users/jbaiter/followers", "following_url": "https://api.github.com/users/jbaiter/following{/other_user}", "gists_url": "https://api.github.com/users/jbaiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaiter/subscriptions", "organizations_url": "https://api.github.com/users/jbaiter/orgs", "repos_url": "https://api.github.com/users/jbaiter/repos", "events_url": "https://api.github.com/users/jbaiter/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-19T12:53:13Z", "updated_at": "2017-06-19T12:54:05Z", "closed_at": null, "author_association": "NONE", "body": "This is with pygit2 version 0.24.0.\r\n\r\n```\r\n$ git init\r\nInitialized empty Git repository in /tmp/minimal/.git/\r\n$ touch foo\r\n$ git add foo\r\n$ git commit -am \"First commit\"\r\n[master (root-commit) 3551222] First commit\r\n 1 file changed, 0 insertions(+), 0 deletions(-)\r\n create mode 100644 foo\r\n$ echo \"foobar\" >> foo                                                                                                                                                                                                                                                                                 \r\n$ git add foo\r\n$ git diff --cached\r\ndiff --git a/foo b/foo\r\nindex e69de29..323fae0 100644\r\n--- a/foo\r\n+++ b/foo\r\n@@ -0,0 +1 @@\r\n+foobar\r\n$ python\r\n>>> import pygit2\r\n>>> repo = pygit2.Repository('.')\r\n>>> list(repo.diff(cached=True))\r\n[]\r\n```", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/709/events", "html_url": "https://github.com/libgit2/pygit2/issues/709", "id": 227439477, "number": 709, "title": "Type Annotations", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T17:25:07Z", "updated_at": "2017-05-15T11:20:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I was thinking of adding type annotations to some of the APIs to assist IDEs in parsing them and providing useful completion.\r\n\r\nSince it currently does not exist in the code, I preferred asking before coding.\r\nDue to supporting both Python 2 and 3, I think the way to do it is to use syntax present [here](http://mypy.readthedocs.io/en/latest/python2.html).\r\n\r\nThere are some drawbacks:\r\n1. Adding a new dependency - the `typing` package\r\n1. Annotation comments are not the prettiest thing\r\n\r\nBut if we only the do the required minimum, we get more clarity when using the library, and can also use `mypy` as a verification step for new code.\r\n\r\n@jdavid what is your opinion?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/events", "html_url": "https://github.com/libgit2/pygit2/pull/705", "id": 226006218, "number": 705, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/704/events", "html_url": "https://github.com/libgit2/pygit2/issues/704", "id": 225966764, "number": 704, "title": "How to implement (un)staging and query staging status ?", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T12:18:01Z", "updated_at": "2017-05-03T14:31:39Z", "closed_at": null, "author_association": "NONE", "body": "Not a bug, but I cannot figure out how to achieve this using pygit2 / libgit. Does someone have clues about this ?\r\n\r\nI tried to get information from this page http://www.pygit2.org/working-copy.html and I found https://github.com/libgit2/libgit2sharp/blob/master/LibGit2Sharp/Commands/Stage.cs and https://github.com/libgit2/libgit2/issues/3632\r\n\r\nI want to implement staging feature to my code review tools: https://github.com/FabriceSalvaire/CodeReview\r\n\r\n**Is http://stackoverflow.com/questions/tagged/libgit2 the right place to discuss on pygit2 ???**", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/702/events", "html_url": "https://github.com/libgit2/pygit2/issues/702", "id": 223249497, "number": 702, "title": "Repository.update_submodules() got Request failed with status code: 401", "user": {"login": "niven823", "id": 21955739, "avatar_url": "https://avatars3.githubusercontent.com/u/21955739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niven823", "html_url": "https://github.com/niven823", "followers_url": "https://api.github.com/users/niven823/followers", "following_url": "https://api.github.com/users/niven823/following{/other_user}", "gists_url": "https://api.github.com/users/niven823/gists{/gist_id}", "starred_url": "https://api.github.com/users/niven823/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niven823/subscriptions", "organizations_url": "https://api.github.com/users/niven823/orgs", "repos_url": "https://api.github.com/users/niven823/repos", "events_url": "https://api.github.com/users/niven823/events{/privacy}", "received_events_url": "https://api.github.com/users/niven823/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-21T01:37:08Z", "updated_at": "2017-04-21T01:37:49Z", "closed_at": null, "author_association": "NONE", "body": "I thought update_submodules()'s requires adding parameter of callbacks for RemoteCallbacks.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/699/events", "html_url": "https://github.com/libgit2/pygit2/issues/699", "id": 219887420, "number": 699, "title": "libssh2", "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T12:47:34Z", "updated_at": "2017-04-06T14:09:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I think it would be good to add libssh2 to the builds to provide SSH support.\r\nOn Windows it takes quite some work to get it working (no success yet on my side). Haven't tried other OSs yet.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/693/events", "html_url": "https://github.com/libgit2/pygit2/issues/693", "id": 214644960, "number": 693, "title": "[RFE] rebase routines", "user": {"login": "ignatenkobrain", "id": 2866862, "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-16T09:37:07Z", "updated_at": "2017-03-16T09:37:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "libgit2 supports rebasing, but pygit2 doesn't expose it. It would be very useful if it could.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/687/events", "html_url": "https://github.com/libgit2/pygit2/issues/687", "id": 201816677, "number": 687, "title": "Possible encoding problem with Repository.file_status", "user": {"login": "wme-at-contact-de", "id": 10048008, "avatar_url": "https://avatars3.githubusercontent.com/u/10048008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wme-at-contact-de", "html_url": "https://github.com/wme-at-contact-de", "followers_url": "https://api.github.com/users/wme-at-contact-de/followers", "following_url": "https://api.github.com/users/wme-at-contact-de/following{/other_user}", "gists_url": "https://api.github.com/users/wme-at-contact-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/wme-at-contact-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wme-at-contact-de/subscriptions", "organizations_url": "https://api.github.com/users/wme-at-contact-de/orgs", "repos_url": "https://api.github.com/users/wme-at-contact-de/repos", "events_url": "https://api.github.com/users/wme-at-contact-de/events{/privacy}", "received_events_url": "https://api.github.com/users/wme-at-contact-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-19T10:16:04Z", "updated_at": "2017-07-23T20:28:47Z", "closed_at": null, "author_association": "NONE", "body": "If I try to get the status of a single file using Repository.file_status, I get a \"KeyError\" when the path contains non-ASCII characters like \"\u00e4\" or \"\\u00A0\" (non breaking space\").\r\n\r\nThe problem seems to be that \"Repository_status_file\" uses \"py_path_to_c_str\" to convert the path. Which encodes the path using the Python file system encoding.\r\n\r\nIf I encode the string myself using \"utf-8\", it works fine.\r\n\r\nNot sure whether this is a libgit2, pygit2 or Windows problem...\r\n\r\nUsing pygit-0.24.2 on Python 3.5, running on Windows 7.\r\nsys.getfilesystemencoding() returns \"mbcs\".\r\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/686/events", "html_url": "https://github.com/libgit2/pygit2/issues/686", "id": 200240979, "number": 686, "title": "`git_commit_amend` not available.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-11T23:46:59Z", "updated_at": "2017-04-05T19:08:00Z", "closed_at": null, "author_association": "NONE", "body": "Additionally `Repository.create_commit` fails if the first parent is not the tip of the branch being updated, so the behaviour cannot be fudged by making a new commit with the tip's parent.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/684/events", "html_url": "https://github.com/libgit2/pygit2/issues/684", "id": 197914703, "number": 684, "title": "repo.status() appears to be broken?", "user": {"login": "catsclaw", "id": 1660839, "avatar_url": "https://avatars2.githubusercontent.com/u/1660839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catsclaw", "html_url": "https://github.com/catsclaw", "followers_url": "https://api.github.com/users/catsclaw/followers", "following_url": "https://api.github.com/users/catsclaw/following{/other_user}", "gists_url": "https://api.github.com/users/catsclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/catsclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catsclaw/subscriptions", "organizations_url": "https://api.github.com/users/catsclaw/orgs", "repos_url": "https://api.github.com/users/catsclaw/repos", "events_url": "https://api.github.com/users/catsclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/catsclaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-28T20:54:24Z", "updated_at": "2017-04-12T11:15:15Z", "closed_at": null, "author_association": "NONE", "body": "I'm running `repo.status().items()` in a pre-commit hook using the `-a` flag (`git commit -a -m \"Test\"`), and I get a result that looks like this:\r\n\r\n`[('config/git_hooks/pre-commit', 256), ('bin/run_flake8', 256)]`\r\n\r\nIf I run `git status` in that same process, I get:\r\n\r\n    On branch ops_1331_fix\r\n    Your branch is ahead of 'origin/ops_1331_fix' by 2 commits.\r\n      (use \"git push\" to publish your local commits)\r\n    Changes to be committed:\r\n      (use \"git reset HEAD <file>...\" to unstage)\r\n    \r\n\t    modified:   bin/run_flake8\r\n\t    modified:   config/git_hooks/pre-commit\r\n\r\nIn other words, pygit2 is reporting those files as not being staged, and git is reporting them as being staged. Why the discrepancy?", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/683/events", "html_url": "https://github.com/libgit2/pygit2/issues/683", "id": 197692934, "number": 683, "title": "DoS on wrong password", "user": {"login": "4s1", "id": 15968622, "avatar_url": "https://avatars1.githubusercontent.com/u/15968622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/4s1", "html_url": "https://github.com/4s1", "followers_url": "https://api.github.com/users/4s1/followers", "following_url": "https://api.github.com/users/4s1/following{/other_user}", "gists_url": "https://api.github.com/users/4s1/gists{/gist_id}", "starred_url": "https://api.github.com/users/4s1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/4s1/subscriptions", "organizations_url": "https://api.github.com/users/4s1/orgs", "repos_url": "https://api.github.com/users/4s1/repos", "events_url": "https://api.github.com/users/4s1/events{/privacy}", "received_events_url": "https://api.github.com/users/4s1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-27T11:59:05Z", "updated_at": "2016-12-27T11:59:05Z", "closed_at": null, "author_association": "NONE", "body": "As discussed in upstream bug report saltstack/salt#38230 pygit2 tries to authenticate indefinite with wrong credentials instead of failing after two consecutive failures with same authentication token as specified by https://tools.ietf.org/html/rfc7235#section-3.1\r\nPossible a libgit2 Bug if it's reproducable with other language bindings.\r\n\r\n\r\n## Testcase:\r\n### nginx dummy server configuration\r\nThis is just a stub configuration, no real repository needed\r\n````\r\nlocation ~ /git(/.*) {\r\n        add_header \"WWW-Authenticate\" \"Basic realm=\\\"Closed Areas\\\"\" always;\r\n        return 401;\r\n    }\r\n````\r\n### test client\r\n````python\r\n#!/bin/python2.7\r\n\r\nimport pygit2\r\n\r\nusername = 'dummyUser'\r\npassword = 'dummyPassword'\r\ncredentials = pygit2.UserPass(username, password)\r\ncallbacks = pygit2.RemoteCallbacks(credentials)\r\npygit2.clone_repository(\"http://git.demo.local/git/test.git\", \"test.git\", bare=True, callbacks=callbacks)\r\n\r\n````", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680", "repository_url": "https://api.github.com/repos/libgit2/pygit2", "labels_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/comments", "events_url": "https://api.github.com/repos/libgit2/pygit2/issues/680/events", "html_url": "https://github.com/libgit2/pygit2/issues/680", "id": 195430797, "number": 680, "title": "`peel` arguments inconsistent.", "user": {"login": "Parakleta", "id": 11205202, "avatar_url": "https://avatars3.githubusercontent.com/u/11205202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakleta", "html_url": "https://github.com/Parakleta", "followers_url": "https://api.github.com/users/Parakleta/followers", "following_url": "https://api.github.com/users/Parakleta/following{/other_user}", "gists_url": "https://api.github.com/users/Parakleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakleta/subscriptions", "organizations_url": "https://api.github.com/users/Parakleta/orgs", "repos_url": "https://api.github.com/users/Parakleta/repos", "events_url": "https://api.github.com/users/Parakleta/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-14T03:22:33Z", "updated_at": "2016-12-14T03:27:17Z", "closed_at": null, "author_association": "NONE", "body": "`peel` is implemented twice, once in `object.c` and once in `reference.c`.  In the first it requires an argument and in the second it provides a default argument of `None`.  This is confusing when branches can be 'default' peeled but tags cannot.", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "bf74b2a99341437a755390c692ae04a21737c9d7", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T13:28:03Z"}, "message": "Merge remote-tracking branch 'white-gecko/patch-1'", "tree": {"sha": "90372a6c64296581f6004326b82478a9900de2ce", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/90372a6c64296581f6004326b82478a9900de2ce"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7", "html_url": "https://github.com/libgit2/pygit2/commit/bf74b2a99341437a755390c692ae04a21737c9d7", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bf74b2a99341437a755390c692ae04a21737c9d7/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1494574fff619ef135119487980d751877af20c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c"}, {"sha": "39a50d9d048a0abc5fd5ded6be4339818f169144", "url": "https://api.github.com/repos/libgit2/pygit2/commits/39a50d9d048a0abc5fd5ded6be4339818f169144", "html_url": "https://github.com/libgit2/pygit2/commit/39a50d9d048a0abc5fd5ded6be4339818f169144"}]}, {"sha": "a1494574fff619ef135119487980d751877af20c", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:41:26Z"}, "message": "Fixing ImportError in some cases, bug #658", "tree": {"sha": "63a4efe447cb8ff08263a3786fdbcc37ca57f0d6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/63a4efe447cb8ff08263a3786fdbcc37ca57f0d6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a1494574fff619ef135119487980d751877af20c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c", "html_url": "https://github.com/libgit2/pygit2/commit/a1494574fff619ef135119487980d751877af20c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a1494574fff619ef135119487980d751877af20c/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6"}]}, {"sha": "9b047fe18a4313596e567dda463554f6d9a416d6", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2018-01-14T12:30:46Z"}, "message": "Fix running the tests with tox", "tree": {"sha": "c768091b0673dbe4b4cb5cf7081be567d7d556dd", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c768091b0673dbe4b4cb5cf7081be567d7d556dd"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6", "html_url": "https://github.com/libgit2/pygit2/commit/9b047fe18a4313596e567dda463554f6d9a416d6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/9b047fe18a4313596e567dda463554f6d9a416d6/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674"}]}, {"sha": "12d83a955333ff47c2f2c747be3b3f0206f6d674", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:22:52Z"}, "message": "Implement update_submodules using ffi.", "tree": {"sha": "a91589d9a9d0103efd043edddeadc95290963149", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a91589d9a9d0103efd043edddeadc95290963149"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674", "html_url": "https://github.com/libgit2/pygit2/commit/12d83a955333ff47c2f2c747be3b3f0206f6d674", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/12d83a955333ff47c2f2c747be3b3f0206f6d674/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab"}]}, {"sha": "f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-22T06:29:21Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:17:05Z"}, "message": "Add wrongly deleted declaration.", "tree": {"sha": "52450ede7a41ae941f5cd003298f1f1140ddf828", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52450ede7a41ae941f5cd003298f1f1140ddf828"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "html_url": "https://github.com/libgit2/pygit2/commit/f512bd94d47adbcb4ceb07ae76ddfece031c9dab", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/f512bd94d47adbcb4ceb07ae76ddfece031c9dab/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930"}]}, {"sha": "bda601adc4a101b9b3131cf0a3ff84461e90e930", "commit": {"author": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2017-12-12T06:01:36Z"}, "committer": {"name": "Peter-Yi Zhang", "email": "peter-yi.zhang@autodesk.com", "date": "2018-01-05T06:16:45Z"}, "message": "Import submodule_update related options.", "tree": {"sha": "95c532ebf0bca85f6f58a13f4f58956461cb369a", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/95c532ebf0bca85f6f58a13f4f58956461cb369a"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930", "html_url": "https://github.com/libgit2/pygit2/commit/bda601adc4a101b9b3131cf0a3ff84461e90e930", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/bda601adc4a101b9b3131cf0a3ff84461e90e930/comments", "author": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zhangyiant", "id": 11951603, "avatar_url": "https://avatars2.githubusercontent.com/u/11951603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyiant", "html_url": "https://github.com/zhangyiant", "followers_url": "https://api.github.com/users/zhangyiant/followers", "following_url": "https://api.github.com/users/zhangyiant/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyiant/subscriptions", "organizations_url": "https://api.github.com/users/zhangyiant/orgs", "repos_url": "https://api.github.com/users/zhangyiant/repos", "events_url": "https://api.github.com/users/zhangyiant/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyiant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f"}]}, {"sha": "5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-24T16:12:24Z"}, "message": "Release 0.26.3", "tree": {"sha": "881d41e22784e868ae1318f5c0dbf20d7e36876c", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/881d41e22784e868ae1318f5c0dbf20d7e36876c"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "html_url": "https://github.com/libgit2/pygit2/commit/5c96a46e2bfa2fa35d10a42fb51271da50d5685f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/5c96a46e2bfa2fa35d10a42fb51271da50d5685f/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4"}]}, {"sha": "03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-13T17:43:11Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "e220542375858a5bbbbd1bdcba7dbe3ffeacba80", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/e220542375858a5bbbbd1bdcba7dbe3ffeacba80"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "html_url": "https://github.com/libgit2/pygit2/commit/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/03deadb9f886ac2ecfafe8de1ffc2fb7f5c5f1c4/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d"}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f"}]}, {"sha": "c0eaa698d648af33a72c743ba296dd1427bcb81f", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-12T19:45:27Z"}, "message": "Fix patch-after-blob-free", "tree": {"sha": "96fe0f1ff9c62962b41083ab372b727cdf24ddc6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/96fe0f1ff9c62962b41083ab372b727cdf24ddc6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f", "html_url": "https://github.com/libgit2/pygit2/commit/c0eaa698d648af33a72c743ba296dd1427bcb81f", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c0eaa698d648af33a72c743ba296dd1427bcb81f/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "83fdde770b72b836cc7ae1490803464f74bf9d3d", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:51:09Z"}, "message": "Add similar blob test", "tree": {"sha": "c662230906193e47f42bcb0e925585a8c6865915", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/c662230906193e47f42bcb0e925585a8c6865915"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d", "html_url": "https://github.com/libgit2/pygit2/commit/83fdde770b72b836cc7ae1490803464f74bf9d3d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/83fdde770b72b836cc7ae1490803464f74bf9d3d/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856"}]}, {"sha": "3070a22c064b56da8d0a131be70d2addf40f7856", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:19:28Z"}, "message": "Merge branch 'master' into patch_tests", "tree": {"sha": "86ff5a4794a875dbbf3485cf87453308b5754e8b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/86ff5a4794a875dbbf3485cf87453308b5754e8b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856", "html_url": "https://github.com/libgit2/pygit2/commit/3070a22c064b56da8d0a131be70d2addf40f7856", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3070a22c064b56da8d0a131be70d2addf40f7856/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591"}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8"}]}, {"sha": "d463fd7151b6d839afbd49628b7b923d7a958591", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-09T20:13:36Z"}, "message": "Make broken patch tests be less nebulous", "tree": {"sha": "11cd577932e13657d58f63426704152f51e5a233", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/11cd577932e13657d58f63426704152f51e5a233"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591", "html_url": "https://github.com/libgit2/pygit2/commit/d463fd7151b6d839afbd49628b7b923d7a958591", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d463fd7151b6d839afbd49628b7b923d7a958591/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed"}]}, {"sha": "91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-09T11:21:04Z"}, "message": "Review Patch, fixes #757", "tree": {"sha": "2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2d0e537a39c6a4c7a3a346d5bae4f3cbbe510f6b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "html_url": "https://github.com/libgit2/pygit2/commit/91dfaf2a07225865b7bd09a0f1a49e933462c2f8", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/91dfaf2a07225865b7bd09a0f1a49e933462c2f8/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba"}]}, {"sha": "007ac2a28dcd3b7dd13beade915fe62f936924ba", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T18:45:36Z"}, "message": "test_patch: assertEquals -> assertEqual", "tree": {"sha": "8e8bad74ee870513431f4a44cd49d490b4c28cff", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/8e8bad74ee870513431f4a44cd49d490b4c28cff"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba", "html_url": "https://github.com/libgit2/pygit2/commit/007ac2a28dcd3b7dd13beade915fe62f936924ba", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/007ac2a28dcd3b7dd13beade915fe62f936924ba/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2"}]}, {"sha": "c4e026095e7ce19793a0c811d35a1074f606b6a2", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-06T09:50:08Z"}, "message": "New Diff.deltas iterable", "tree": {"sha": "b40359f508cbfa84d99d9c53ee4e2988bb2bc232", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b40359f508cbfa84d99d9c53ee4e2988bb2bc232"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2", "html_url": "https://github.com/libgit2/pygit2/commit/c4e026095e7ce19793a0c811d35a1074f606b6a2", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/c4e026095e7ce19793a0c811d35a1074f606b6a2/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82"}]}, {"sha": "798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-06T04:13:35Z"}, "message": "Add more patch and blob tests that could fail", "tree": {"sha": "bf2e724171f16d9ec8531f976547f0e629576566", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/bf2e724171f16d9ec8531f976547f0e629576566"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "html_url": "https://github.com/libgit2/pygit2/commit/798e357ffe3d551a59a26b3f228e321cd6f2a4ed", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/798e357ffe3d551a59a26b3f228e321cd6f2a4ed/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "28c3828ef05d90e1ea6704c0bc60ad78c103af82", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-05T21:47:01Z"}, "message": "Add contextlines, interhunk lines to Patch.create_from", "tree": {"sha": "b5e7d69785e2d07db3e9e82256c1745bdd412043", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b5e7d69785e2d07db3e9e82256c1745bdd412043"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "html_url": "https://github.com/libgit2/pygit2/commit/28c3828ef05d90e1ea6704c0bc60ad78c103af82", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/28c3828ef05d90e1ea6704c0bc60ad78c103af82/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a96da22cbf456fe2181e196877845b590cede606", "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606"}]}, {"sha": "a96da22cbf456fe2181e196877845b590cede606", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-03T22:41:11Z"}, "message": "Dont create blobs on the fly in test_patch, make patch kwargs", "tree": {"sha": "a1a264f20ad9cf85f0a0d09921486e4fde071e0f", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a1a264f20ad9cf85f0a0d09921486e4fde071e0f"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/a96da22cbf456fe2181e196877845b590cede606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606", "html_url": "https://github.com/libgit2/pygit2/commit/a96da22cbf456fe2181e196877845b590cede606", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/a96da22cbf456fe2181e196877845b590cede606/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b"}]}, {"sha": "cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "commit": {"author": {"name": "Matthias Bartelme\u00df", "email": "mba@fourplusone.de", "date": "2017-12-02T12:37:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-02T12:37:38Z"}, "message": "Clear clone_repo in Prune Test", "tree": {"sha": "a6e37143b7bee4564aaa3f12f9933dd32ae87c46", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/a6e37143b7bee4564aaa3f12f9933dd32ae87c46"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIp6SCRBK7hj4Ov3rIwAAdHIIAJIthg2oofQptPXj6W09jvbH\n/wTIXOLh3iIQSLYXyQ1c6/WZxuBAlCmkA3TP0ztEO/Ejz7Y7U6FSbgvlylQaW+w7\n3O5MuW6q0LvzxEG8hovjETub1/7Vz4LbSWVuAcSjBZngv0x78rA5qDKFyq3xN0sh\nDOahzA3RMqpmfuDeHTPe7tlkZ0eeD2HGjWeWZojywfiI0FHOLurz7/Q95UHmDwa2\niBXiEbFNd2B7+GHk0ds4dS7jjj8FSoanXwz2aQaqejYcUNTIKX3LXed88AdN7izG\nkkmY/qZLBtQ3tgrcSFMSvWYmCXLmRhpkXOrsrS4mKHUMLuGWT/5xc0QOvPLofUI=\n=ILgC\n-----END PGP SIGNATURE-----\n", "payload": "tree a6e37143b7bee4564aaa3f12f9933dd32ae87c46\nparent d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756\nauthor Matthias Bartelme\u00df <mba@fourplusone.de> 1512218258 +0100\ncommitter GitHub <noreply@github.com> 1512218258 +0100\n\nClear clone_repo in Prune Test"}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "html_url": "https://github.com/libgit2/pygit2/commit/cae2c2866e610d6b6baa318281f14e8a92cf7a3b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/cae2c2866e610d6b6baa318281f14e8a92cf7a3b/comments", "author": {"login": "fourplusone", "id": 25514, "avatar_url": "https://avatars2.githubusercontent.com/u/25514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fourplusone", "html_url": "https://github.com/fourplusone", "followers_url": "https://api.github.com/users/fourplusone/followers", "following_url": "https://api.github.com/users/fourplusone/following{/other_user}", "gists_url": "https://api.github.com/users/fourplusone/gists{/gist_id}", "starred_url": "https://api.github.com/users/fourplusone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fourplusone/subscriptions", "organizations_url": "https://api.github.com/users/fourplusone/orgs", "repos_url": "https://api.github.com/users/fourplusone/repos", "events_url": "https://api.github.com/users/fourplusone/events{/privacy}", "received_events_url": "https://api.github.com/users/fourplusone/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756"}]}, {"sha": "d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:10:52Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-12-01T17:18:38Z"}, "message": "Move declarations to top of functions", "tree": {"sha": "6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6cfa776ff54c1ec7fb6f70be04b9bcaf7bc1dab3"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "html_url": "https://github.com/libgit2/pygit2/commit/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d5c8e6208c8ac33534c2bf36c7bc525d6bc5e756/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d"}]}, {"sha": "d1c954f40f96816d3695a1eeb5d22a6beb32416d", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:50:08Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-12-01T09:56:42Z"}, "message": "Release 0.26.2", "tree": {"sha": "692747fc3e936f82e8800e1b997d63d6f60ba0b6", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/692747fc3e936f82e8800e1b997d63d6f60ba0b6"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "html_url": "https://github.com/libgit2/pygit2/commit/d1c954f40f96816d3695a1eeb5d22a6beb32416d", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d1c954f40f96816d3695a1eeb5d22a6beb32416d/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c"}]}, {"sha": "575905fd2c4791cb11d2f660e1c162c56878b23c", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:23:10Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-29T17:25:51Z"}, "message": "Add my name, for the fame", "tree": {"sha": "6b16298432ab07a93bc5e40a75d88a4410159dfc", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/6b16298432ab07a93bc5e40a75d88a4410159dfc"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c", "html_url": "https://github.com/libgit2/pygit2/commit/575905fd2c4791cb11d2f660e1c162c56878b23c", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/575905fd2c4791cb11d2f660e1c162c56878b23c/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc"}]}, {"sha": "4804143f5590cf989f162973ec3a99c8314607bc", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:21:37Z"}, "message": "test: use self.assertXXX not assert\n\nBecause we use unittest, not pytest.", "tree": {"sha": "52201c58185e44703811989c1968c50576938bc4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/52201c58185e44703811989c1968c50576938bc4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/4804143f5590cf989f162973ec3a99c8314607bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc", "html_url": "https://github.com/libgit2/pygit2/commit/4804143f5590cf989f162973ec3a99c8314607bc", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/4804143f5590cf989f162973ec3a99c8314607bc/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8944d0208a7468ec7d378247356677829b87766b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b"}]}, {"sha": "8944d0208a7468ec7d378247356677829b87766b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-29T09:01:17Z"}, "message": "Merge remote-tracking branch 'cecedille1/fetch-prune'", "tree": {"sha": "34e83687d80e16b3d0e651120084d3352b2823fa", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/34e83687d80e16b3d0e651120084d3352b2823fa"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/8944d0208a7468ec7d378247356677829b87766b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b", "html_url": "https://github.com/libgit2/pygit2/commit/8944d0208a7468ec7d378247356677829b87766b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/8944d0208a7468ec7d378247356677829b87766b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6"}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6"}]}, {"sha": "e765acdb9c17103544d0f10f60fb12abd8ae91a6", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:56:31Z"}, "message": "Add bad arg tests to test_patch", "tree": {"sha": "277cdea2f0dee19f64acab7d11a6474ede8d5927", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/277cdea2f0dee19f64acab7d11a6474ede8d5927"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "html_url": "https://github.com/libgit2/pygit2/commit/e765acdb9c17103544d0f10f60fb12abd8ae91a6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/e765acdb9c17103544d0f10f60fb12abd8ae91a6/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1"}]}, {"sha": "ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "commit": {"author": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "committer": {"name": "Brandon Milton", "email": "bmilton@fb.com", "date": "2017-11-28T23:51:57Z"}, "message": "Add static Patch.create_from method to create patches", "tree": {"sha": "2f4641b0c3a7badc871844ae756834d2ffca39b4", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/2f4641b0c3a7badc871844ae756834d2ffca39b4"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "html_url": "https://github.com/libgit2/pygit2/commit/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ea1a08d25746dbb4613ea09350741fe7ae2ad5c1/comments", "author": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonio21", "id": 2231972, "avatar_url": "https://avatars3.githubusercontent.com/u/2231972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonio21", "html_url": "https://github.com/brandonio21", "followers_url": "https://api.github.com/users/brandonio21/followers", "following_url": "https://api.github.com/users/brandonio21/following{/other_user}", "gists_url": "https://api.github.com/users/brandonio21/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonio21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonio21/subscriptions", "organizations_url": "https://api.github.com/users/brandonio21/orgs", "repos_url": "https://api.github.com/users/brandonio21/repos", "events_url": "https://api.github.com/users/brandonio21/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonio21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b"}]}, {"sha": "523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:25:31Z"}, "message": "Add my name, for the fame", "tree": {"sha": "0c5ce621d568e08babbc971ac1de91d1a56441c1", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/0c5ce621d568e08babbc971ac1de91d1a56441c1"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "html_url": "https://github.com/libgit2/pygit2/commit/523f82e9094bd878d2bc1710ff40121ca8c8fbf6", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/523f82e9094bd878d2bc1710ff40121ca8c8fbf6/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732"}]}, {"sha": "d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:23:46Z"}, "message": "Implement prune option for fetch", "tree": {"sha": "b74c2169ec55bb7b04b88988c80b1bf362c94bb2", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/b74c2169ec55bb7b04b88988c80b1bf362c94bb2"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "html_url": "https://github.com/libgit2/pygit2/commit/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/d0c224a1d8ce11c60592c57e1b139cd7d1ee0732/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0"}]}, {"sha": "ceb02490a554f1dc221049e24f6952c3d883edf0", "commit": {"author": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "committer": {"name": "Gr\u00e9goire ROCHER", "email": "gregoire@emencia.com", "date": "2017-11-28T19:21:58Z"}, "message": "Export the constants GIT_FETCH_PRUNE_*", "tree": {"sha": "5709577f3134659270dcb67e32262232dd39067b", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/5709577f3134659270dcb67e32262232dd39067b"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0", "html_url": "https://github.com/libgit2/pygit2/commit/ceb02490a554f1dc221049e24f6952c3d883edf0", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/ceb02490a554f1dc221049e24f6952c3d883edf0/comments", "author": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cecedille1", "id": 1044361, "avatar_url": "https://avatars1.githubusercontent.com/u/1044361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecedille1", "html_url": "https://github.com/cecedille1", "followers_url": "https://api.github.com/users/cecedille1/followers", "following_url": "https://api.github.com/users/cecedille1/following{/other_user}", "gists_url": "https://api.github.com/users/cecedille1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecedille1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecedille1/subscriptions", "organizations_url": "https://api.github.com/users/cecedille1/orgs", "repos_url": "https://api.github.com/users/cecedille1/repos", "events_url": "https://api.github.com/users/cecedille1/events{/privacy}", "received_events_url": "https://api.github.com/users/cecedille1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}, {"sha": "3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "commit": {"author": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "committer": {"name": "J. David Ib\u00e1\u00f1ez", "email": "jdavid.ibp@gmail.com", "date": "2017-11-28T13:12:06Z"}, "message": "docs: diff, add missing members", "tree": {"sha": "4d35778d5da21941f7f9288b31d733d99fec30f0", "url": "https://api.github.com/repos/libgit2/pygit2/git/trees/4d35778d5da21941f7f9288b31d733d99fec30f0"}, "url": "https://api.github.com/repos/libgit2/pygit2/git/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "html_url": "https://github.com/libgit2/pygit2/commit/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b", "comments_url": "https://api.github.com/repos/libgit2/pygit2/commits/3adda5509e5affb6a2f6f1daa0d02ee9e2d6d91b/comments", "author": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06af3c786aa37d7da3e5266617672ba049946c3", "url": "https://api.github.com/repos/libgit2/pygit2/commits/e06af3c786aa37d7da3e5266617672ba049946c3", "html_url": "https://github.com/libgit2/pygit2/commit/e06af3c786aa37d7da3e5266617672ba049946c3"}]}], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/719", "id": 132943348, "html_url": "https://github.com/libgit2/pygit2/pull/719", "diff_url": "https://github.com/libgit2/pygit2/pull/719.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/719.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/719", "number": 719, "state": "open", "locked": false, "title": "Rebased worktrees", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "body": "This is a rebased version of #691 (with a tiny modification to use add+prune opts) if the original author doesn't get around to updating it.", "created_at": "2017-07-28T10:49:18Z", "updated_at": "2017-08-08T16:26:23Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "98fda364c4fdd26bb7ae1d63fd0f4c819ef31bfd", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "head": {"label": "nhynes:rebased-worktrees", "ref": "rebased-worktrees", "sha": "8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16", "user": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "repo": {"id": 86384396, "name": "pygit2", "full_name": "nhynes/pygit2", "owner": {"login": "nhynes", "id": 2353785, "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/nhynes/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/nhynes/pygit2", "forks_url": "https://api.github.com/repos/nhynes/pygit2/forks", "keys_url": "https://api.github.com/repos/nhynes/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/nhynes/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/nhynes/pygit2/teams", "hooks_url": "https://api.github.com/repos/nhynes/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/nhynes/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/nhynes/pygit2/events", "assignees_url": "https://api.github.com/repos/nhynes/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/nhynes/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/nhynes/pygit2/tags", "blobs_url": "https://api.github.com/repos/nhynes/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/nhynes/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/nhynes/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/nhynes/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/nhynes/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/nhynes/pygit2/languages", "stargazers_url": "https://api.github.com/repos/nhynes/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/nhynes/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/nhynes/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/nhynes/pygit2/subscription", "commits_url": "https://api.github.com/repos/nhynes/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/nhynes/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/nhynes/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/nhynes/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/nhynes/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/nhynes/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/nhynes/pygit2/merges", "archive_url": "https://api.github.com/repos/nhynes/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/nhynes/pygit2/downloads", "issues_url": "https://api.github.com/repos/nhynes/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/nhynes/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/nhynes/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/nhynes/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/nhynes/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/nhynes/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/nhynes/pygit2/deployments", "created_at": "2017-03-27T21:11:34Z", "updated_at": "2017-03-27T21:11:36Z", "pushed_at": "2017-07-29T01:55:56Z", "git_url": "git://github.com/nhynes/pygit2.git", "ssh_url": "git@github.com:nhynes/pygit2.git", "clone_url": "https://github.com/nhynes/pygit2.git", "svn_url": "https://github.com/nhynes/pygit2", "homepage": "", "size": 2877, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "24d385a88f9a4e2540ea2c04fa86d76e7c4e17ee", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/719"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/719/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/719/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/8e8cb1860a7f48ad834b69b8280f8ddbbe49ab16"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/705", "id": 118775335, "html_url": "https://github.com/libgit2/pygit2/pull/705", "diff_url": "https://github.com/libgit2/pygit2/pull/705.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/705.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/705", "number": 705, "state": "open", "locked": false, "title": "Added recipe for git-add and git-reset (staging)", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-05-03T14:31:12Z", "updated_at": "2017-05-04T18:42:01Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "04ce62259b3baec23ef043cb793b0eeb62b6438b", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215", "head": {"label": "FabriceSalvaire:master", "ref": "master", "sha": "bdeb03747261ca134be24eb87606b492187cc215", "user": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "repo": {"id": 90155264, "name": "pygit2", "full_name": "FabriceSalvaire/pygit2", "owner": {"login": "FabriceSalvaire", "id": 2358471, "avatar_url": "https://avatars0.githubusercontent.com/u/2358471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabriceSalvaire", "html_url": "https://github.com/FabriceSalvaire", "followers_url": "https://api.github.com/users/FabriceSalvaire/followers", "following_url": "https://api.github.com/users/FabriceSalvaire/following{/other_user}", "gists_url": "https://api.github.com/users/FabriceSalvaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabriceSalvaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabriceSalvaire/subscriptions", "organizations_url": "https://api.github.com/users/FabriceSalvaire/orgs", "repos_url": "https://api.github.com/users/FabriceSalvaire/repos", "events_url": "https://api.github.com/users/FabriceSalvaire/events{/privacy}", "received_events_url": "https://api.github.com/users/FabriceSalvaire/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/FabriceSalvaire/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/FabriceSalvaire/pygit2", "forks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/forks", "keys_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/teams", "hooks_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/events", "assignees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/tags", "blobs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/languages", "stargazers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/subscription", "commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/merges", "archive_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/downloads", "issues_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/FabriceSalvaire/pygit2/deployments", "created_at": "2017-05-03T14:00:19Z", "updated_at": "2017-05-03T14:00:21Z", "pushed_at": "2017-05-03T14:28:16Z", "git_url": "git://github.com/FabriceSalvaire/pygit2.git", "ssh_url": "git@github.com:FabriceSalvaire/pygit2.git", "clone_url": "https://github.com/FabriceSalvaire/pygit2.git", "svn_url": "https://github.com/FabriceSalvaire/pygit2", "homepage": "", "size": 2858, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/705"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/705/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/705/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/bdeb03747261ca134be24eb87606b492187cc215"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/538", "id": 38147484, "html_url": "https://github.com/libgit2/pygit2/pull/538", "diff_url": "https://github.com/libgit2/pygit2/pull/538.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/538.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/538", "number": 538, "state": "open", "locked": false, "title": "Add certificate callback.", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "body": "Existing unit tests pass. Adapted from `__init__.py`.\n", "created_at": "2015-06-19T21:01:21Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "44b25ca81b0424595467102f75733d627fc99b3e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "head": {"label": "alexchamberlain:certificate-check", "ref": "certificate-check", "sha": "d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7", "user": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "repo": {"id": 37744353, "name": "pygit2", "full_name": "alexchamberlain/pygit2", "owner": {"login": "alexchamberlain", "id": 1224578, "avatar_url": "https://avatars0.githubusercontent.com/u/1224578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchamberlain", "html_url": "https://github.com/alexchamberlain", "followers_url": "https://api.github.com/users/alexchamberlain/followers", "following_url": "https://api.github.com/users/alexchamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/alexchamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchamberlain/subscriptions", "organizations_url": "https://api.github.com/users/alexchamberlain/orgs", "repos_url": "https://api.github.com/users/alexchamberlain/repos", "events_url": "https://api.github.com/users/alexchamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchamberlain/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/alexchamberlain/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/alexchamberlain/pygit2", "forks_url": "https://api.github.com/repos/alexchamberlain/pygit2/forks", "keys_url": "https://api.github.com/repos/alexchamberlain/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexchamberlain/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexchamberlain/pygit2/teams", "hooks_url": "https://api.github.com/repos/alexchamberlain/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/alexchamberlain/pygit2/events", "assignees_url": "https://api.github.com/repos/alexchamberlain/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/alexchamberlain/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/tags", "blobs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexchamberlain/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexchamberlain/pygit2/languages", "stargazers_url": "https://api.github.com/repos/alexchamberlain/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/alexchamberlain/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/alexchamberlain/pygit2/subscription", "commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexchamberlain/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexchamberlain/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexchamberlain/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/alexchamberlain/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexchamberlain/pygit2/merges", "archive_url": "https://api.github.com/repos/alexchamberlain/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexchamberlain/pygit2/downloads", "issues_url": "https://api.github.com/repos/alexchamberlain/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/alexchamberlain/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexchamberlain/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexchamberlain/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexchamberlain/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/alexchamberlain/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/alexchamberlain/pygit2/deployments", "created_at": "2015-06-19T20:28:49Z", "updated_at": "2015-06-19T20:28:50Z", "pushed_at": "2015-06-19T21:08:20Z", "git_url": "git://github.com/alexchamberlain/pygit2.git", "ssh_url": "git@github.com:alexchamberlain/pygit2.git", "clone_url": "https://github.com/alexchamberlain/pygit2.git", "svn_url": "https://github.com/alexchamberlain/pygit2", "homepage": "", "size": 2775, "stargazers_count": 0, "watchers_count": 0, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/538"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/538/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/538/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/d40cd5f474a3eb8aa6d8d32658dfadb5b86a3ff7"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/405", "id": 19969342, "html_url": "https://github.com/libgit2/pygit2/pull/405", "diff_url": "https://github.com/libgit2/pygit2/pull/405.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/405.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/405", "number": 405, "state": "open", "locked": false, "title": "Walker interface reimplemented with CFFI", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "I've reimplemented the `Walker` interface with CFFI; this is a first step towards reimplementing the entire pygit2 Object model with CFFI. It's supposed to be a straightforward rewrite, I haven't made any changes to the API to avoid breaking the backwards compatibility.\n", "created_at": "2014-08-19T09:33:24Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "af575f55908703a89366821cf6ab4fe3bcce48e2", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "head": {"label": "petrhosek:walker-cffi", "ref": "walker-cffi", "sha": "e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/405"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/405/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/405/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/e8a4cd84fb3023e8f4fee0cc51d9d90b3d509a78"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/346", "id": 12586459, "html_url": "https://github.com/libgit2/pygit2/pull/346", "diff_url": "https://github.com/libgit2/pygit2/pull/346.diff", "patch_url": "https://github.com/libgit2/pygit2/pull/346.patch", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/346", "number": 346, "state": "open", "locked": false, "title": "Diff and Patch interface refactored", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "This is a complete refactoring of the diff and patch interface. The changes include:\n- Splitting `Diff` and `Patch` into separate classes and files, including respective tests. This largely follwos the recent development in `libgit2`.\n- Introducing `DiffDelta`, `DiffFile` and `DiffLine` classes and their respective iterators.\n- Moving the recently introduced `Blob` diff methods into patch again to be in line with the respective `libgit2` interface.\n\nThe biggest difference, apart from the code cleanup, is the lazy evaluation due to heavy use of iterators rather than evaluating everything ahead of time as in case of the existing code, which tends to be slow on larger projects.\n\nI have tried to make the interface as \"Pythonic\" as possible, while closely following the underlying `libgit2` C interface. However, some of you might think of a better abstraction and I'd happy to incorporate further changes into the patch.\n", "created_at": "2014-02-15T20:56:20Z", "updated_at": "2017-04-25T17:08:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "82ab609cb820007df325b82d0180be8c21bd4e7e", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits", "review_comments_url": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments", "review_comment_url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205", "head": {"label": "petrhosek:diff-patch-refactor", "ref": "diff-patch-refactor", "sha": "34fd314631b443eae802aba2e712ca7ef9a08205", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4458992, "name": "pygit2", "full_name": "petrhosek/pygit2", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/pygit2", "description": "Python bindings for libgit2", "fork": true, "url": "https://api.github.com/repos/petrhosek/pygit2", "forks_url": "https://api.github.com/repos/petrhosek/pygit2/forks", "keys_url": "https://api.github.com/repos/petrhosek/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/pygit2/teams", "hooks_url": "https://api.github.com/repos/petrhosek/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/pygit2/events", "assignees_url": "https://api.github.com/repos/petrhosek/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/pygit2/tags", "blobs_url": "https://api.github.com/repos/petrhosek/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/pygit2/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/pygit2/subscription", "commits_url": "https://api.github.com/repos/petrhosek/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/pygit2/merges", "archive_url": "https://api.github.com/repos/petrhosek/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/pygit2/downloads", "issues_url": "https://api.github.com/repos/petrhosek/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/pygit2/deployments", "created_at": "2012-05-27T01:00:02Z", "updated_at": "2014-08-17T22:00:48Z", "pushed_at": "2014-08-22T13:50:48Z", "git_url": "git://github.com/petrhosek/pygit2.git", "ssh_url": "git@github.com:petrhosek/pygit2.git", "clone_url": "https://github.com/petrhosek/pygit2.git", "svn_url": "https://github.com/petrhosek/pygit2", "homepage": "", "size": 2510, "stargazers_count": 1, "watchers_count": 1, "language": "C", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "libgit2:master", "ref": "master", "sha": "8559b2da20139e1ea158bc0dd47c6bc687a17efe", "user": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 1062237, "name": "pygit2", "full_name": "libgit2/pygit2", "owner": {"login": "libgit2", "id": 394745, "avatar_url": "https://avatars1.githubusercontent.com/u/394745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/libgit2", "html_url": "https://github.com/libgit2", "followers_url": "https://api.github.com/users/libgit2/followers", "following_url": "https://api.github.com/users/libgit2/following{/other_user}", "gists_url": "https://api.github.com/users/libgit2/gists{/gist_id}", "starred_url": "https://api.github.com/users/libgit2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/libgit2/subscriptions", "organizations_url": "https://api.github.com/users/libgit2/orgs", "repos_url": "https://api.github.com/users/libgit2/repos", "events_url": "https://api.github.com/users/libgit2/events{/privacy}", "received_events_url": "https://api.github.com/users/libgit2/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/libgit2/pygit2", "description": "Python bindings for libgit2", "fork": false, "url": "https://api.github.com/repos/libgit2/pygit2", "forks_url": "https://api.github.com/repos/libgit2/pygit2/forks", "keys_url": "https://api.github.com/repos/libgit2/pygit2/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/libgit2/pygit2/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/libgit2/pygit2/teams", "hooks_url": "https://api.github.com/repos/libgit2/pygit2/hooks", "issue_events_url": "https://api.github.com/repos/libgit2/pygit2/issues/events{/number}", "events_url": "https://api.github.com/repos/libgit2/pygit2/events", "assignees_url": "https://api.github.com/repos/libgit2/pygit2/assignees{/user}", "branches_url": "https://api.github.com/repos/libgit2/pygit2/branches{/branch}", "tags_url": "https://api.github.com/repos/libgit2/pygit2/tags", "blobs_url": "https://api.github.com/repos/libgit2/pygit2/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/libgit2/pygit2/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/libgit2/pygit2/git/refs{/sha}", "trees_url": "https://api.github.com/repos/libgit2/pygit2/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/libgit2/pygit2/statuses/{sha}", "languages_url": "https://api.github.com/repos/libgit2/pygit2/languages", "stargazers_url": "https://api.github.com/repos/libgit2/pygit2/stargazers", "contributors_url": "https://api.github.com/repos/libgit2/pygit2/contributors", "subscribers_url": "https://api.github.com/repos/libgit2/pygit2/subscribers", "subscription_url": "https://api.github.com/repos/libgit2/pygit2/subscription", "commits_url": "https://api.github.com/repos/libgit2/pygit2/commits{/sha}", "git_commits_url": "https://api.github.com/repos/libgit2/pygit2/git/commits{/sha}", "comments_url": "https://api.github.com/repos/libgit2/pygit2/comments{/number}", "issue_comment_url": "https://api.github.com/repos/libgit2/pygit2/issues/comments{/number}", "contents_url": "https://api.github.com/repos/libgit2/pygit2/contents/{+path}", "compare_url": "https://api.github.com/repos/libgit2/pygit2/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/libgit2/pygit2/merges", "archive_url": "https://api.github.com/repos/libgit2/pygit2/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/libgit2/pygit2/downloads", "issues_url": "https://api.github.com/repos/libgit2/pygit2/issues{/number}", "pulls_url": "https://api.github.com/repos/libgit2/pygit2/pulls{/number}", "milestones_url": "https://api.github.com/repos/libgit2/pygit2/milestones{/number}", "notifications_url": "https://api.github.com/repos/libgit2/pygit2/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/libgit2/pygit2/labels{/name}", "releases_url": "https://api.github.com/repos/libgit2/pygit2/releases{/id}", "deployments_url": "https://api.github.com/repos/libgit2/pygit2/deployments", "created_at": "2010-11-08T16:27:48Z", "updated_at": "2018-01-14T04:16:08Z", "pushed_at": "2018-01-14T13:28:23Z", "git_url": "git://github.com/libgit2/pygit2.git", "ssh_url": "git@github.com:libgit2/pygit2.git", "clone_url": "https://github.com/libgit2/pygit2.git", "svn_url": "https://github.com/libgit2/pygit2", "homepage": "", "size": 2974, "stargazers_count": 1014, "watchers_count": 1014, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 255, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 255, "open_issues": 101, "watchers": 1014, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/346"}, "issue": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346"}, "comments": {"href": "https://api.github.com/repos/libgit2/pygit2/issues/346/comments"}, "review_comments": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/comments"}, "review_comment": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/346/commits"}, "statuses": {"href": "https://api.github.com/repos/libgit2/pygit2/statuses/34fd314631b443eae802aba2e712ca7ef9a08205"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596", "html_url": "https://github.com/libgit2/pygit2/issues/1#issuecomment-578596", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/1", "id": 578596, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:31:25Z", "updated_at": "2010-11-30T19:31:25Z", "author_association": "OWNER", "body": "Indeed, it was using the private clone URL. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600", "html_url": "https://github.com/libgit2/pygit2/issues/2#issuecomment-578600", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/2", "id": 578600, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2010-11-30T19:32:06Z", "updated_at": "2010-11-30T19:32:06Z", "author_association": "OWNER", "body": "Replaced the build instructions with a link to our website: that way it'll always be up to date.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/578600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-597958", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 597958, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2010-12-08T20:21:51Z", "updated_at": "2010-12-08T20:21:51Z", "author_association": "MEMBER", "body": "This changed in libgit2 as of\nhttps://github.com/libgit2/libgit2/commit/44908fe763b1a2097b65c86130ac679c458df7d2\n\nFeel free to update pygit2.c if I don't get the chance to soon.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/597958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355", "html_url": "https://github.com/libgit2/pygit2/pull/4#issuecomment-694355", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/4", "id": 694355, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-01-20T22:53:16Z", "updated_at": "2011-01-20T22:53:16Z", "author_association": "OWNER", "body": "Neat, thanks for this, but it looks like I got two pull requests for the same thing. ^^\n\nI've just merged the other one, and while I was at it fixed the test that was failing -- it was an issue in libgit2, so thanks for reporting.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/694355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750", "html_url": "https://github.com/libgit2/pygit2/issues/3#issuecomment-726750", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/3", "id": 726750, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-01-31T22:56:53Z", "updated_at": "2011-01-31T22:56:53Z", "author_association": "MEMBER", "body": "This appears to have been fixed by 9e919c39662ecc0f0080. I was able to build successfully at HEAD, so I'm going to close this issue. Let me know if you still have problems.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/726750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459", "html_url": "https://github.com/libgit2/pygit2/pull/6#issuecomment-739459", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/6", "id": 739459, "user": {"login": "peti", "id": 28323, "avatar_url": "https://avatars3.githubusercontent.com/u/28323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peti", "html_url": "https://github.com/peti", "followers_url": "https://api.github.com/users/peti/followers", "following_url": "https://api.github.com/users/peti/following{/other_user}", "gists_url": "https://api.github.com/users/peti/gists{/gist_id}", "starred_url": "https://api.github.com/users/peti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peti/subscriptions", "organizations_url": "https://api.github.com/users/peti/orgs", "repos_url": "https://api.github.com/users/peti/repos", "events_url": "https://api.github.com/users/peti/events{/privacy}", "received_events_url": "https://api.github.com/users/peti/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-04T16:13:55Z", "updated_at": "2011-02-04T16:13:55Z", "author_association": "NONE", "body": "I can confirm that this patch fixes the build error.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/739459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-750527", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 750527, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-08T17:48:08Z", "updated_at": "2011-02-08T17:48:45Z", "author_association": "OWNER", "body": "Hey, this is very nice, but the new compressed text repository is making the tests fail:\n\n```\nTraceback (most recent call last):\nFile \"/Users/tanoku/src/pygit2/test/utils.py\", line 74, in setUp\nz.extractall(temp_dir)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 940, in extractall\nself.extract(zipinfo, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 928, in extract\nreturn self._extract_member(member, path, pwd)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/zipfile.py\", line 965, in _extract_member\ntarget = file(targetpath, \"wb\")\nIOError: [Errno 20] Not a directory: '/var/folders/0d/0dHASpI3E9Ca1CvFczxbjU+++TI/-Tmp-/tmpdHiwtC/testrepo/bye.txt'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/750527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-751694", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 751694, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-08T22:33:57Z", "updated_at": "2011-02-08T22:33:57Z", "author_association": "MEMBER", "body": "I see from the traceback that you are using Python 2.6.1, it contains some bugs regarding zip files, like [issue 4710](http://bugs.python.org/issue4710). Could you try with a more recent version?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/751694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753331", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753331, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T10:56:26Z", "updated_at": "2011-02-09T10:56:26Z", "author_association": "OWNER", "body": "Hm, 2.5.4 fails too, with the following error:\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 87, in <module>\n    **kwargs\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 974, in                 run_commands\n    self.run_command(cmd)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/distutils/dist.py\", line 994, in run_command\n    cmd_obj.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 121, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 101, in with_project_on_sys_path\n    func()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/Extras/lib/python/setuptools/command/test.py\", line 130, in run_tests\n    testLoader = loader_class()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 767, in __init__\n    self.parseArgs(argv)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 794, in parseArgs\n    self.createTests()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 800, in createTests\n    self.module)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 553, in loadTestsFromName\n    test = obj()\n  File \"/Users/tanoku/src/pygit2/test/__init__.py\", line 41, in test_suite\n    return unittest.defaultTestLoader.loadTestsFromNames(modules)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 565, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/unittest.py\", line 541, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'test_blob'\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753416", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753416, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T11:37:12Z", "updated_at": "2011-02-09T11:37:12Z", "author_association": "MEMBER", "body": "From the traceback it looks like this has nothing to do with my patches, no regression here.\n\nSupporting Python 2.5 would take more work. I think it is not worth the effort, it is an old version and pygit2 is clearly understaffed. I think it is more interesting to spend time on supporting new versions (Python 3) than on supporting old versions.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753753", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753753, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T13:50:26Z", "updated_at": "2011-02-09T13:50:26Z", "author_association": "OWNER", "body": "Fair enough -- the tests do work with Python 2.7. Nice job!\n\n...However, I'm afraid that 2.6 is still too mainstream as to have the tests broken on it. You need to work around the Zip issue on 2.6 before I can merge this. I'd suggest using GZip instead of Zip.\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-753996", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 753996, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:07:47Z", "updated_at": "2011-02-09T15:07:47Z", "author_association": "MEMBER", "body": "Accidentally I have reproduced the traceback you found with Python 2.5. It has nothing to do with 2.5 actually.\n\nIt happens pygit2 has two ways to run the tests. If setuptools is installed it will run the tests in-place. But if setuptools is not installed then you need to install pygit2 before running the tests (otherwise you will get that traceback), that's what the documentation says anyway:\n\n```\n$ python setup.py install\n$ python setup.py test\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/753996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754027", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754027, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:19:37Z", "updated_at": "2011-02-09T15:19:37Z", "author_association": "MEMBER", "body": "About Python 2.6, it works fine.\n\nJust tested myself and reproduced the same error with 2.6.1:\n\n  IOError: [Errno 20] Not a directory: '/tmp/tmp_W_Hl9/testrepo/bye.txt'\n\nBut the tests pass with 2.6.2 (which was released almost two years ago). By the way I use myself Python 2.6\n\nAnyway, I am going to replace zipfile by tarfile as you suggest, since it looks more robust (the tests may even pass with 2.5)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754072", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754072, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T15:34:26Z", "updated_at": "2011-02-09T15:34:26Z", "author_association": "MEMBER", "body": "Replaced zipfile by tarfile and now the tests pass even with Python 2.5 (on GNU/Linux, did not check Mac or Windows)\n\nIt was a bad idea to use zipfile in the first place.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754119", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754119, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-02-09T15:45:45Z", "updated_at": "2011-02-09T15:45:45Z", "author_association": "OWNER", "body": "This is perfect, thank you very much! Merging now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264", "html_url": "https://github.com/libgit2/pygit2/pull/7#issuecomment-754264", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/7", "id": 754264, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-02-09T16:16:15Z", "updated_at": "2011-02-09T16:16:15Z", "author_association": "MEMBER", "body": "cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/754264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439", "html_url": "https://github.com/libgit2/pygit2/pull/9#issuecomment-820439", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/9", "id": 820439, "user": {"login": "jszakmeister", "id": 448087, "avatar_url": "https://avatars1.githubusercontent.com/u/448087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jszakmeister", "html_url": "https://github.com/jszakmeister", "followers_url": "https://api.github.com/users/jszakmeister/followers", "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}", "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions", "organizations_url": "https://api.github.com/users/jszakmeister/orgs", "repos_url": "https://api.github.com/users/jszakmeister/repos", "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}", "received_events_url": "https://api.github.com/users/jszakmeister/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-01T00:09:54Z", "updated_at": "2011-03-01T00:09:54Z", "author_association": "CONTRIBUTOR", "body": "I realized that shortly after I submitted the pull request (and I thought I closed this one... but perhaps I forgot).  Thanks anyways!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/820439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-831360", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 831360, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-03T18:58:10Z", "updated_at": "2011-03-03T18:58:10Z", "author_association": "MEMBER", "body": "Hello,\n\nI have merged the branch 'add-commit-attributes' by John Szakmeister. This adds Commit.parents, I needed that to\nimplement the equivalent to \"git log -- path\".\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/831360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919", "html_url": "https://github.com/libgit2/pygit2/pull/8#issuecomment-833919", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/8", "id": 833919, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-04T11:22:05Z", "updated_at": "2011-03-04T11:22:05Z", "author_association": "MEMBER", "body": "This branch does not work after the recent changes to libgit2. I withdraw this pull request to open a new one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/833919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-847764", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 847764, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-08T16:20:53Z", "updated_at": "2011-03-08T16:20:53Z", "author_association": "MEMBER", "body": "You can try my fork of pygit2 where this has been fixed:\n\n```\ngit://github.com/jdavid/pygit2.git\n```\n\nI asked for my changes to be merged, see https://github.com/libgit2/pygit2/pull/11\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/847764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445", "html_url": "https://github.com/libgit2/pygit2/pull/11#issuecomment-876445", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/11", "id": 876445, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-15T14:48:19Z", "updated_at": "2011-03-15T14:48:19Z", "author_association": "MEMBER", "body": "There have been some more commits since I made this pull request, most important to keep pygit2 working after the changes to libgit2. But there are a few enhancements too:\n- New module function 'init_repository'\n- Added 'IndexEntry.path'\n- Started documentation on using pygit2\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/876445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641", "html_url": "https://github.com/libgit2/pygit2/issues/12#issuecomment-886641", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/12", "id": 886641, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-17T20:06:59Z", "updated_at": "2011-03-17T20:06:59Z", "author_association": "MEMBER", "body": "The changes have been merged upstream, so this is fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/886641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889196", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889196, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T13:34:29Z", "updated_at": "2011-03-18T13:34:29Z", "author_association": "MEMBER", "body": "pygit2 works with the 'master' branch of libgit2, commit b5c5f0f8086ee4\nis the tip of the 'development' branch\n\nOn Fri, 18 Mar 2011 05:31:07 -0700\nhonza\nreply@reply.github.com\nwrote:\n\n> Installed latest [libgit2][libgitsha], zlib and openssl. Using\n> [this][pysha] pygit2 revision, I can't get it to install:\n> \n> bash-3.2$ sudo python setup.py install\n> running install\n> running bdist_egg\n> running egg_info\n> writing pygit2.egg-info/PKG-INFO\n> writing top-level names to pygit2.egg-info/top_level.txt\n> writing dependency_links to pygit2.egg-info/dependency_links.txt\n> reading manifest file 'pygit2.egg-info/SOURCES.txt'\n> writing manifest file 'pygit2.egg-info/SOURCES.txt'\n> installing library code to build/bdist.macosx-10.6-universal/egg\n> running install_lib\n> running build_ext\n> building 'pygit2' extension\n> gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv\n> -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch ppc\n> -arch x86_64 -pipe -I/usr/local/include\n> -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6\n> -c pygit2.c -o build/temp.macosx-10.6-universal-2.6/pygit2.o\n> pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356: error: void\n> value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be pygit2.c: In function \u2018Repository_walk\u2019: pygit2.c:356:\n> error: void value not ignored as it ought to be pygit2.c: In function\n> \u2018Walker_sort\u2019: pygit2.c:1838: error: void value not ignored as it\n> ought to be lipo: can't open input file: /var/tmp//ccSxjred.out (No\n> such file or directory) error: command 'gcc-4.2' failed with exit\n> status 1\n> \n> [libgitsha]:\n> https://github.com/libgit2/libgit2/commit/b5c5f0f8086ee4e9bccf0703386fd5219ac380c2\n> \n> [pysha]:\n> https://github.com/libgit2/pygit2/commit/6c7df765c1a9a186e721826121f50d0286b4040e\n\n## \n\nJ. David Ib\u00e1\u00f1ez\nItaapy http://www.itaapy.com         Tel +33 (0)1 42 23 67 45\n9 rue Darwin, 75018 Paris              Fax +33 (0)1 53 28 27 88\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316", "html_url": "https://github.com/libgit2/pygit2/issues/13#issuecomment-889316", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/13", "id": 889316, "user": {"login": "honza", "id": 206357, "avatar_url": "https://avatars3.githubusercontent.com/u/206357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honza", "html_url": "https://github.com/honza", "followers_url": "https://api.github.com/users/honza/followers", "following_url": "https://api.github.com/users/honza/following{/other_user}", "gists_url": "https://api.github.com/users/honza/gists{/gist_id}", "starred_url": "https://api.github.com/users/honza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honza/subscriptions", "organizations_url": "https://api.github.com/users/honza/orgs", "repos_url": "https://api.github.com/users/honza/repos", "events_url": "https://api.github.com/users/honza/events{/privacy}", "received_events_url": "https://api.github.com/users/honza/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-18T14:13:32Z", "updated_at": "2011-03-18T14:13:32Z", "author_association": "NONE", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/889316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490", "html_url": "https://github.com/libgit2/pygit2/issues/14#issuecomment-940490", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/14", "id": 940490, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:43:47Z", "updated_at": "2011-03-31T10:43:47Z", "author_association": "MEMBER", "body": "I hope to update pygit2 by tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940505", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940505, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T10:51:00Z", "updated_at": "2011-03-31T10:51:00Z", "author_association": "MEMBER", "body": "I don't like the \"GPLv2 + exception\" for pygit2 either. Personally I would prefer LGPLv3, that would be fine to you?\n\nTo change the license the agreement of everybody that contributed to pygit2 is required, starting by Dave Borowitz, who has written more than half of it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-940525", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 940525, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T11:00:19Z", "updated_at": "2011-03-31T18:46:19Z", "author_association": "CONTRIBUTOR", "body": "According to wikipedia, the LGPL, even though it usually refers to library linking, may also be generalized into 'using' the library.\nAs python doesn't explicitly link pygit2 when importing it, the LGPL wouldn't really help unless we just regard pygit2 as being 'used' by my library. I don't know what lawyers say about that, but I would be fine with LGPL, from what I read in the wiki at least.\n\nPersonally I think the LGPL was designed just with dynamic and static libraries in mind, but maybe it can be widened to the general use of one library by another, no matter which system of linkage is actually employed.\n\nMaybe it would already be enough to adjust the linkage exemption to state that it may be linked to _and_ imported. This should be clear enough to allow git-python to use it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/940525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942629", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942629, "user": {"login": "dborowitz", "id": 194927, "avatar_url": "https://avatars0.githubusercontent.com/u/194927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dborowitz", "html_url": "https://github.com/dborowitz", "followers_url": "https://api.github.com/users/dborowitz/followers", "following_url": "https://api.github.com/users/dborowitz/following{/other_user}", "gists_url": "https://api.github.com/users/dborowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dborowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dborowitz/subscriptions", "organizations_url": "https://api.github.com/users/dborowitz/orgs", "repos_url": "https://api.github.com/users/dborowitz/repos", "events_url": "https://api.github.com/users/dborowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/dborowitz/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:25:33Z", "updated_at": "2011-03-31T19:25:33Z", "author_association": "MEMBER", "body": "On Thu, Mar 31, 2011 at 03:27, Byron <\nreply@reply.github.com>wrote:\n\n> Hi,\n> \n> As the answer to this question might be interesting for others as well, I\n> make it public using the issue system.\n> \n> Pygit2 uses the same license as libgit2, the GPL with linkage exception.\n> The problem I see is that this exception doesn't apply to the usage of\n> pygit2 within other python programs and libraries which are not necessarily\n> licensed under GPL.\n\nI've been assured by a lawyer that the linkage exception does apply to the\nnormal Python import mechanism. So you can safely \"import pygit2\" from a BSD\nproject without making that project GPL+exception. (You still cannot safely\nincorporate pygit2 source code in the source of a BSD project.)\n\n> For instance, I would be interested in using pygit2 in one of my projects,\n> gitdb, which in turn can be used by git-python. Both are licensed under\n> NewBSD, so I am worried that using pygit2 would compromise this license and\n> force it into the GPL.\n\nAs long as \"using\" == \"importing\", this is fine.\n\n> Could you please clarify the situation ?\n> Thank you,\n> Sebastian\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/libgit2/pygit2/issues/15\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942643", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942643, "user": {"login": "Byron", "id": 63622, "avatar_url": "https://avatars2.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "created_at": "2011-03-31T19:29:09Z", "updated_at": "2011-03-31T19:29:18Z", "author_association": "CONTRIBUTOR", "body": "Great to hear, thanks !\nI am quite eager to find out how libgit2 performs within the git-python streaming framework, so I will try to implement a gitdb which allows to obtain object information and object streams. Lets see how that works out :).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714", "html_url": "https://github.com/libgit2/pygit2/issues/15#issuecomment-942714", "issue_url": "https://api.github.com/repos/libgit2/pygit2/issues/15", "id": 942714, "user": {"login": "vmg", "id": 42793, "avatar_url": "https://avatars1.githubusercontent.com/u/42793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmg", "html_url": "https://github.com/vmg", "followers_url": "https://api.github.com/users/vmg/followers", "following_url": "https://api.github.com/users/vmg/following{/other_user}", "gists_url": "https://api.github.com/users/vmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmg/subscriptions", "organizations_url": "https://api.github.com/users/vmg/orgs", "repos_url": "https://api.github.com/users/vmg/repos", "events_url": "https://api.github.com/users/vmg/events{/privacy}", "received_events_url": "https://api.github.com/users/vmg/received_events", "type": "User", "site_admin": true}, "created_at": "2011-03-31T19:45:32Z", "updated_at": "2011-03-31T19:45:32Z", "author_association": "OWNER", "body": "Hey, just stepping by to remind you that the linking exception is indeed _very_ permissive: you could even link your own Python library with a static version of libgit2 without it affecting your own program's license. I'm looking forward to see what can you come up with the git-python streaming framework. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/issues/comments/942714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-530320", "id": 530320, "user": {"login": "encukou", "id": 302922, "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-14T03:18:43Z", "updated_at": "2011-08-14T03:18:43Z", "author_association": "CONTRIBUTOR", "body": "Does this make sense for Python 2? Maybe the str & unicode types are too interchangeable there to select functionality based on them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/530320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550", "html_url": "https://github.com/libgit2/pygit2/commit/81bfabea73ffcfbff7198fc4b86520c8cd20dadf#commitcomment-532550", "id": 532550, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "81bfabea73ffcfbff7198fc4b86520c8cd20dadf", "created_at": "2011-08-15T19:59:22Z", "updated_at": "2011-08-15T19:59:22Z", "author_association": "MEMBER", "body": "I think the behaviour must be the same for both Python 2 and 3, otherwise everything will be ore complicated (implementation, documentation, ...)\n\nBesides, in this case, the remark by @pyos [1] also applies to Python 2. Later on we will add to this method the ability to get an object by a short hex-sha, by calling `git_object_lookup_prefix`. If the hex-sha passed is 20 bytes long, how to know it is an hex-sha and not a raw-sha? I think to make the difference by the type is a fine solution.\n\n[1] https://github.com/libgit2/pygit2/issues/43#issuecomment-1791199\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/532550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621226", "id": 621226, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-29T22:38:07Z", "updated_at": "2011-09-29T22:38:07Z", "author_association": "NONE", "body": "May I ask what was the reasoning behind this change? I have to update all my code and tests now. :-(\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-621935", "id": 621935, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-09-30T07:23:58Z", "updated_at": "2011-09-30T07:23:58Z", "author_association": "MEMBER", "body": "Readability. It is not evident whether the word \"sha\" refers to the raw oid (20 bytes byte string) or to its hexadecimal form (40 chars text string). At least `.hex` has the virtue of not being ambiguous.\n\nNote that now we also have `object.oid`, the raw oid as a 20 bytes byte string. And that the old `.sha` and the new `.hex` are not exactly the same, before `.sha` was a byte string, now `.hex` is a text (unicode) string. So this was the right time to make the change.\n\nAlso, pygit2 is still, like libgit2, alpha software. So changes to the API may happen from time to time, they will be documented on every release.\n\nThis commit is part of the work to fix issue 43, https://github.com/libgit2/pygit2/issues/43\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/621935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333", "html_url": "https://github.com/libgit2/pygit2/commit/83642a69541a4c93ef1706805214eb7e936f5e7a#commitcomment-626333", "id": 626333, "user": {"login": "valueof", "id": 49106, "avatar_url": "https://avatars1.githubusercontent.com/u/49106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valueof", "html_url": "https://github.com/valueof", "followers_url": "https://api.github.com/users/valueof/followers", "following_url": "https://api.github.com/users/valueof/following{/other_user}", "gists_url": "https://api.github.com/users/valueof/gists{/gist_id}", "starred_url": "https://api.github.com/users/valueof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valueof/subscriptions", "organizations_url": "https://api.github.com/users/valueof/orgs", "repos_url": "https://api.github.com/users/valueof/repos", "events_url": "https://api.github.com/users/valueof/events{/privacy}", "received_events_url": "https://api.github.com/users/valueof/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "83642a69541a4c93ef1706805214eb7e936f5e7a", "created_at": "2011-10-03T11:58:07Z", "updated_at": "2011-10-03T11:58:07Z", "author_association": "NONE", "body": "Alright, understood. Without any other alternatives, we basically have no choice but to rely on alpha software\u2014so no worries about that, I realize that interfaces do change. I was just curious about the reasoning.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/626333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091", "html_url": "https://github.com/libgit2/pygit2/commit/c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04#commitcomment-1421091", "id": 1421091, "user": {"login": "luztak", "id": 1357267, "avatar_url": "https://avatars2.githubusercontent.com/u/1357267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luztak", "html_url": "https://github.com/luztak", "followers_url": "https://api.github.com/users/luztak/followers", "following_url": "https://api.github.com/users/luztak/following{/other_user}", "gists_url": "https://api.github.com/users/luztak/gists{/gist_id}", "starred_url": "https://api.github.com/users/luztak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luztak/subscriptions", "organizations_url": "https://api.github.com/users/luztak/orgs", "repos_url": "https://api.github.com/users/luztak/repos", "events_url": "https://api.github.com/users/luztak/events{/privacy}", "received_events_url": "https://api.github.com/users/luztak/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "c4a1e2ac005d2158fb56d999bf7bbcc1f08deb04", "created_at": "2012-06-06T05:05:29Z", "updated_at": "2012-06-06T05:05:29Z", "author_association": "NONE", "body": "Is there any func or class for push,please?Or could you tell me how push works?thx.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/1421091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427309", "id": 2427309, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T13:17:17Z", "updated_at": "2013-01-13T13:17:17Z", "author_association": "CONTRIBUTOR", "body": "Typo in commit message, should be pygit2.com\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780", "html_url": "https://github.com/libgit2/pygit2/commit/19425a1ca1e819f69428edd982d4a8b90d0b9d97#commitcomment-2427780", "id": 2427780, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "19425a1ca1e819f69428edd982d4a8b90d0b9d97", "created_at": "2013-01-13T18:14:39Z", "updated_at": "2013-01-13T18:14:39Z", "author_association": "MEMBER", "body": "www.pygit2.org actually, but it's to late to fix a commit message\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2427780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464644", "id": 2464644, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T15:40:53Z", "updated_at": "2013-01-19T15:40:53Z", "author_association": "CONTRIBUTOR", "body": "Is there a list where this is tracked? I spent about an hour trying to fix the broken linker on an old machine I was getting unresolved symbol errors on due to this one.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464811", "id": 2464811, "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:24:41Z", "updated_at": "2013-01-19T17:24:41Z", "author_association": "MEMBER", "body": "No. What I do is to keep a libgit2 clone and from time to time check whether pygit2 still works.\n\n(In my opinion, the problem is libgit2 does not release often enough.)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464823", "id": 2464823, "user": {"login": "richo", "id": 476418, "avatar_url": "https://avatars0.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:30:51Z", "updated_at": "2013-01-19T17:30:51Z", "author_association": "CONTRIBUTOR", "body": "I agree completely. Having to have \"install libgit2 from their development head\" in the install instructions for my project is pretty awkward.\n\nIn this instance it was my fault for not diagnosing properly, I'll keep this in mind going forward. Cheers.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834", "html_url": "https://github.com/libgit2/pygit2/commit/6bb932cd1c9865cb40eebfb0da218c6c900a1ffe#commitcomment-2464834", "id": 2464834, "user": {"login": "wking", "id": 209920, "avatar_url": "https://avatars1.githubusercontent.com/u/209920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wking", "html_url": "https://github.com/wking", "followers_url": "https://api.github.com/users/wking/followers", "following_url": "https://api.github.com/users/wking/following{/other_user}", "gists_url": "https://api.github.com/users/wking/gists{/gist_id}", "starred_url": "https://api.github.com/users/wking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wking/subscriptions", "organizations_url": "https://api.github.com/users/wking/orgs", "repos_url": "https://api.github.com/users/wking/repos", "events_url": "https://api.github.com/users/wking/events{/privacy}", "received_events_url": "https://api.github.com/users/wking/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "6bb932cd1c9865cb40eebfb0da218c6c900a1ffe", "created_at": "2013-01-19T17:39:48Z", "updated_at": "2013-01-19T17:39:48Z", "author_association": "CONTRIBUTOR", "body": "On Sat, Jan 19, 2013 at 09:30:54AM -0800, Richo Healey wrote:\n\n> Having to have \"install libgit2 from their development head\" in the\n> install instructions for my project is pretty awkward.\n\nThis should all settle down once libgit2 freezes their API (soon?\nlibgit2/libgit2#1028).  In the mean time, there are usually known-good\nlibgit2 SHAs in the pygit2 upgrade commits.  The problem with _not_\ntracking the development branch of libgit2 is that their master branch\nhasn't been bumped since 2012-05-19, so lots of features are missing\nfrom the master branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2464834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382", "html_url": "https://github.com/libgit2/pygit2/commit/4b720472601e76e4bd2d0097def7613feb17b7f7#commitcomment-2548382", "id": 2548382, "user": {"login": "Gonnzik", "id": 3456303, "avatar_url": "https://avatars1.githubusercontent.com/u/3456303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gonnzik", "html_url": "https://github.com/Gonnzik", "followers_url": "https://api.github.com/users/Gonnzik/followers", "following_url": "https://api.github.com/users/Gonnzik/following{/other_user}", "gists_url": "https://api.github.com/users/Gonnzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gonnzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gonnzik/subscriptions", "organizations_url": "https://api.github.com/users/Gonnzik/orgs", "repos_url": "https://api.github.com/users/Gonnzik/repos", "events_url": "https://api.github.com/users/Gonnzik/events{/privacy}", "received_events_url": "https://api.github.com/users/Gonnzik/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "4b720472601e76e4bd2d0097def7613feb17b7f7", "created_at": "2013-02-02T16:48:48Z", "updated_at": "2013-02-02T16:48:48Z", "author_association": "NONE", "body": "\u0421 \u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0431\u043b\u044f (\u041a\u0430\u0440\u0430\u0441\u044c)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2548382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808", "html_url": "https://github.com/libgit2/pygit2/commit/673053dc7136cc6ba87296e23d3e817796928a99#commitcomment-2952808", "id": 2952808, "user": {"login": "cboos", "id": 153279, "avatar_url": "https://avatars1.githubusercontent.com/u/153279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboos", "html_url": "https://github.com/cboos", "followers_url": "https://api.github.com/users/cboos/followers", "following_url": "https://api.github.com/users/cboos/following{/other_user}", "gists_url": "https://api.github.com/users/cboos/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboos/subscriptions", "organizations_url": "https://api.github.com/users/cboos/orgs", "repos_url": "https://api.github.com/users/cboos/repos", "events_url": "https://api.github.com/users/cboos/events{/privacy}", "received_events_url": "https://api.github.com/users/cboos/received_events", "type": "User", "site_admin": false}, "position": 22, "line": 422, "path": "src/pygit2.c", "commit_id": "673053dc7136cc6ba87296e23d3e817796928a99", "created_at": "2013-04-05T12:24:43Z", "updated_at": "2013-04-05T12:24:43Z", "author_association": "CONTRIBUTOR", "body": "I suppose this is a typo... \"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH\"\ns/MATC/MATCH/\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/2952808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232373", "id": 3232373, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T03:56:28Z", "updated_at": "2013-05-17T03:56:28Z", "author_association": "NONE", "body": "why `GIT_DIFF_LINE_CONTEXT` has been removed ?\n\nin version 0.18.0 \nI can do\n\n`from pygit2 import GIT_DIFF_LINE_CONTEXT`\n\nbut now I can't , why?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3232412", "id": 3232412, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T04:06:32Z", "updated_at": "2013-05-17T04:06:32Z", "author_association": "NONE", "body": "btw, I thought this parameter is used to control how many context line I would show in diff, like `git diff -U`, is this correct, how can I \nuse it properly?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3232412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3236676", "id": 3236676, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-17T16:28:58Z", "updated_at": "2013-05-17T16:28:58Z", "author_association": "MEMBER", "body": "These constants are used when looking at text lines in a diff to indicate if the line is a context line (or and added line or a removed line). The set the number of context lines, you need to set the `context_lines` value in the `git_diff_options`. It appears to me that that field of the options is not current exposed through pygit2.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3236676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3247623", "id": 3247623, "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T13:08:23Z", "updated_at": "2013-05-20T13:08:23Z", "author_association": "MEMBER", "body": "In pygit2 we convert the `context_line` to unicode (for python2/3 compability reasons). So if you use these constants for comparison it will fail. I think '+','-',' ' and '\\n' are more than enough meaningful. Btw pygit2 has support for `context_lines` with `#77b5cdc` (not yet merged to master).\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3247623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463", "html_url": "https://github.com/libgit2/pygit2/commit/f972d99d5f9f82ce3c04af6b3987ca2a337815e3#commitcomment-3249463", "id": 3249463, "user": {"login": "arrbee", "id": 103350, "avatar_url": "https://avatars0.githubusercontent.com/u/103350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arrbee", "html_url": "https://github.com/arrbee", "followers_url": "https://api.github.com/users/arrbee/followers", "following_url": "https://api.github.com/users/arrbee/following{/other_user}", "gists_url": "https://api.github.com/users/arrbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/arrbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arrbee/subscriptions", "organizations_url": "https://api.github.com/users/arrbee/orgs", "repos_url": "https://api.github.com/users/arrbee/repos", "events_url": "https://api.github.com/users/arrbee/events{/privacy}", "received_events_url": "https://api.github.com/users/arrbee/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 342, "path": "src/pygit2.c", "commit_id": "f972d99d5f9f82ce3c04af6b3987ca2a337815e3", "created_at": "2013-05-20T17:03:51Z", "updated_at": "2013-05-20T17:03:51Z", "author_association": "MEMBER", "body": "@cholin Just a heads up, in recent libgit2 updates to the `development` branch, I had to introduce a new constant `GIT_DIFF_LINE_CONTEXT_EOFNL` that deals with the case where both sides of a diff end without an newline and those lines appear in the context at the end of the diff. When I added this new constant, I changed the values for the `...EOFNL` constants so that we're no longer using `'\\n'` as a value (since I worried it was confusing). The new values are `'>'` is ADD_EOFNL, `'<'` is DEL_EOFNL, and `'='` is CONTEXT_EOFNL.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3249463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324", "html_url": "https://github.com/libgit2/pygit2/commit/3474dca78f2b87ed7ce8222eb0ce168e59437e23#commitcomment-3980324", "id": 3980324, "user": {"login": "luchuan", "id": 811665, "avatar_url": "https://avatars1.githubusercontent.com/u/811665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luchuan", "html_url": "https://github.com/luchuan", "followers_url": "https://api.github.com/users/luchuan/followers", "following_url": "https://api.github.com/users/luchuan/following{/other_user}", "gists_url": "https://api.github.com/users/luchuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/luchuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luchuan/subscriptions", "organizations_url": "https://api.github.com/users/luchuan/orgs", "repos_url": "https://api.github.com/users/luchuan/repos", "events_url": "https://api.github.com/users/luchuan/events{/privacy}", "received_events_url": "https://api.github.com/users/luchuan/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 500, "path": "src/repository.c", "commit_id": "3474dca78f2b87ed7ce8222eb0ce168e59437e23", "created_at": "2013-08-30T05:53:47Z", "updated_at": "2013-08-30T05:53:47Z", "author_association": "NONE", "body": ":beer:\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/3980324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4840766", "id": 4840766, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T04:38:52Z", "updated_at": "2013-12-12T04:38:52Z", "author_association": "NONE", "body": "hi @carlosmn is `git_diff_list` depreciated in libgit2\uff0c we here has a kind of fork of `pygi2` with some modification. The fork hasn't sync with the main repo for a while, and now there are some conflicts with `git_diff_list`, I found your commit to adjust to libgit2, is there any explanation or documentation about the `git_diff_list` thing, either in libgit2 or pygit2. Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4840766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360", "html_url": "https://github.com/libgit2/pygit2/commit/b7e906eee9d503fd6dee55fee5c7e7bc8e28978d#commitcomment-4841360", "id": 4841360, "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "b7e906eee9d503fd6dee55fee5c7e7bc8e28978d", "created_at": "2013-12-12T06:52:05Z", "updated_at": "2013-12-12T06:52:05Z", "author_association": "NONE", "body": "seems that it's just rename https://github.com/libgit2/libgit2/commit/3ff1d123736e5686fb9ec16e65828d5b8ffa2b30\n\nso I can just rename it , cool\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/4841360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816", "html_url": "https://github.com/libgit2/pygit2/commit/9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7#commitcomment-7623816", "id": 7623816, "user": {"login": "guysoft", "id": 325670, "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "9a7348a9d0af13e2d4bcf2ab19e167e64f173cd7", "created_at": "2014-09-02T13:20:31Z", "updated_at": "2014-09-02T13:20:31Z", "author_association": "NONE", "body": "Hey,\nWhy was the MergeResult object object removed? How do I get now the oid of the merged result? It does not seem to appear in the working directory for me.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/7623816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684", "html_url": "https://github.com/libgit2/pygit2/commit/0ba17a5b4608706f696c2212315ea0bb301db209#commitcomment-10577684", "id": 10577684, "user": {"login": "luto", "id": 2158203, "avatar_url": "https://avatars3.githubusercontent.com/u/2158203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luto", "html_url": "https://github.com/luto", "followers_url": "https://api.github.com/users/luto/followers", "following_url": "https://api.github.com/users/luto/following{/other_user}", "gists_url": "https://api.github.com/users/luto/gists{/gist_id}", "starred_url": "https://api.github.com/users/luto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luto/subscriptions", "organizations_url": "https://api.github.com/users/luto/orgs", "repos_url": "https://api.github.com/users/luto/repos", "events_url": "https://api.github.com/users/luto/events{/privacy}", "received_events_url": "https://api.github.com/users/luto/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0ba17a5b4608706f696c2212315ea0bb301db209", "created_at": "2015-04-05T15:20:35Z", "updated_at": "2015-04-05T15:20:35Z", "author_association": "NONE", "body": "thank you :heart: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/10577684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701", "html_url": "https://github.com/libgit2/pygit2/commit/5c061cbb0a11e68cc36def504d8d74c10c255df0#commitcomment-21637701", "id": 21637701, "user": {"login": "tmr232", "id": 1386239, "avatar_url": "https://avatars1.githubusercontent.com/u/1386239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmr232", "html_url": "https://github.com/tmr232", "followers_url": "https://api.github.com/users/tmr232/followers", "following_url": "https://api.github.com/users/tmr232/following{/other_user}", "gists_url": "https://api.github.com/users/tmr232/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmr232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmr232/subscriptions", "organizations_url": "https://api.github.com/users/tmr232/orgs", "repos_url": "https://api.github.com/users/tmr232/repos", "events_url": "https://api.github.com/users/tmr232/events{/privacy}", "received_events_url": "https://api.github.com/users/tmr232/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5c061cbb0a11e68cc36def504d8d74c10c255df0", "created_at": "2017-04-05T13:47:48Z", "updated_at": "2017-04-05T13:47:48Z", "author_association": "CONTRIBUTOR", "body": "This closes #669 ", "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/comments/21637701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984", "pull_request_review_id": null, "id": 462984, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "I bet you mean:\n\n```\nif (builder) {\n```\n", "created_at": "2012-02-17T19:16:11Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462984"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992", "pull_request_review_id": null, "id": 462992, "diff_hunk": "@@ -938,6 +940,45 @@\n     return PyInt_FromLong(status);\n }\n \n+static PyObject *\n+Repository_TreeBuilder(Repository *self, PyObject *args)\n+{\n+    TreeBuilder *builder;\n+    git_treebuilder *bld;\n+    PyObject *py_oid = NULL;\n+    size_t oid_len;\n+    git_oid oid;\n+    git_tree *tree = NULL;\n+    int err;\n+\n+    if (!PyArg_ParseTuple(args, \"|O\", &py_oid))\n+        return NULL;\n+\n+    if (py_oid) {\n+        oid_len = py_str_to_git_oid(py_oid, &oid);\n+        TODO_SUPPORT_SHORT_HEXS(oid_len)\n+            if (oid_len == 0)\n+                return NULL;\n+\n+        err = git_tree_lookup(&tree, self->repo, &oid);\n+        if (err < 0)\n+            return Error_set(err);\n+    }\n+\n+    err = git_treebuilder_create(&bld, tree);\n+    if (err < 0)\n+        return Error_set(err);\n+\n+    builder = PyObject_New(TreeBuilder, &TreeBuilderType);\n+    if (bld) {", "path": "pygit2.c", "position": null, "original_position": 50, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Yes I do. `builder` used to be called `bld` and it looks like I didn't clean up properly.\n", "created_at": "2012-02-17T19:19:09Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r462992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/462992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078", "pull_request_review_id": null, "id": 463078, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "- I wonder what Py_XDECREF will do with a `git_treebuilder` struct.\n- The point of using `Py_XDECREF` instead of `Py_DECREF` is that you don't need to check for NULL.\n", "created_at": "2012-02-17T19:34:01Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r463078"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/463078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739", "pull_request_review_id": null, "id": 464739, "diff_hunk": "@@ -1600,6 +1643,101 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_XDECREF(self->bld);\n+    if (self->repo)\n+        Py_XDECREF(self->repo);", "path": "pygit2.c", "position": null, "original_position": 79, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "68be8a697ca15fea7e7dd57d2199eff578a4a638", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It doesn't seem to mind a `git_treebuilder` that much (it doesn't crash in the tests). Some example code must have been wrong about `Py_XDECREF`. I saw it being used with a guard. I'll update shortly.\n", "created_at": "2012-02-18T12:24:38Z", "updated_at": "2012-03-09T17:04:25Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r464739"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/464739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062", "pull_request_review_id": null, "id": 465062, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "This line should not be. The dealloc function is called when the refcount is zero. Decreasing it below zero is not correct.\n", "created_at": "2012-02-18T22:17:20Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r465062"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/465062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804", "pull_request_review_id": null, "id": 470804, "diff_hunk": "@@ -1600,6 +1643,96 @@\n };\n \n static void\n+TreeBuilder_dealloc(TreeBuilder* self)\n+{\n+    Py_DECREF(self);", "path": "pygit2.c", "position": null, "original_position": 77, "commit_id": "242f3c2ffa267006f0dbba098bbec8fe3e92d620", "original_commit_id": "1de103d7a333d4ac74588e867224c99ab95989af", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Now that you mention it, it does look silly, will fix.\n", "created_at": "2012-02-21T11:21:41Z", "updated_at": "2012-03-09T17:04:26Z", "html_url": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/56", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/56#discussion_r470804"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/56"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/470804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081", "pull_request_review_id": null, "id": 3873081, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "sorry, I do not familiar with C. \nThe old code seems like try to compatible with either unicode and bytes. So if use \"ssi\", we can accept them both or does this require specific python version?\n", "created_at": "2013-04-19T13:13:29Z", "updated_at": "2013-04-19T13:13:29Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873081"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195", "pull_request_review_id": null, "id": 3873195, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "Well unicode and python is a bit messy. But PyArg_ParseTuple with `s` as argument will convert Strings and Unicode Strings to a c string pointer. So we can use PyArg_ParseTuple and do not loose any functionalities... Check the api: [python2.7](http://docs.python.org/2.7/c-api/arg.html) and [python3](http://docs.python.org/2.7/c-api/arg.html)\n", "created_at": "2013-04-19T13:20:15Z", "updated_at": "2013-04-19T13:20:15Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873195"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248", "pull_request_review_id": null, "id": 3873248, "diff_hunk": "@@ -854,30 +854,15 @@\n Repository_git_reference_symbolic_create(Repository *self,  PyObject *args,\n                                          PyObject *kw)\n {\n-    PyObject *py_obj;\n     git_reference *c_reference;\n     char *c_name, *c_target;\n     int err, force;\n \n-    if (!PyArg_ParseTuple(args, \"sOi\", &c_name, &py_obj, &force))\n-        return NULL;\n-\n-    #if PY_MAJOR_VERSION == 2\n-    c_target = PyBytes_AsString(py_obj);\n-    #else\n-    // increases ref counter, so we have to release it afterwards\n-    PyObject* py_str = PyUnicode_AsASCIIString(py_obj);\n-    c_target = PyBytes_AsString(py_str);\n-    #endif\n-    if (c_target == NULL)\n+    if (!PyArg_ParseTuple(args, \"ssi\", &c_name, &c_target, &force))", "path": "src/repository.c", "position": 20, "original_position": 20, "commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "original_commit_id": "aa3f0cf99d67a763ccf1d1508e1777c0171bbe07", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "Thanks. Then it's much clear now.\n", "created_at": "2013-04-19T13:23:56Z", "updated_at": "2013-04-19T13:23:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/211", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/211#discussion_r3873248"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/211"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/3873248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132", "pull_request_review_id": null, "id": 4185132, "diff_hunk": "@@ -88,8 +88,8 @@\n                 PyList_SetItem(py_hunk->lines, 0,\n                     to_unicode_n(header, header_len, NULL, NULL));\n                 for (j=1; j < lines_in_hunk + 1; ++j) {\n-                    err = git_diff_patch_get_line_in_hunk(NULL, &line,\n-                              &line_len, NULL, NULL, patch, i, j - 1);\n+                    err = git_diff_patch_get_line_in_hunk(&py_hunk->origin,", "path": "src/diff.c", "position": 15, "original_position": 15, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "@cholin hi, I think here exist a problem, that, for `git_diff_patch_get_line_in_hunk`, this get a line detail for every line, but only the last one of 'origin' get reserved in hunk.origin.\n", "created_at": "2013-05-12T09:06:12Z", "updated_at": "2013-05-12T09:06:12Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4185132"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4185132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006", "pull_request_review_id": null, "id": 4188006, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "alexband", "id": 640578, "avatar_url": "https://avatars2.githubusercontent.com/u/640578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexband", "html_url": "https://github.com/alexband", "followers_url": "https://api.github.com/users/alexband/followers", "following_url": "https://api.github.com/users/alexband/following{/other_user}", "gists_url": "https://api.github.com/users/alexband/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexband/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexband/subscriptions", "organizations_url": "https://api.github.com/users/alexband/orgs", "repos_url": "https://api.github.com/users/alexband/repos", "events_url": "https://api.github.com/users/alexband/events{/privacy}", "received_events_url": "https://api.github.com/users/alexband/received_events", "type": "User", "site_admin": false}, "body": "this will break application code. and I change my code to receive int to char now. if this can be noticed in advance pull from master.\nby the way, do you guys recommend we application developer always use the latest code of pygit2?\n", "created_at": "2013-05-13T05:19:37Z", "updated_at": "2013-05-13T05:19:37Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4188006"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4188006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703", "pull_request_review_id": null, "id": 4189703, "diff_hunk": "@@ -111,13 +111,14 @@\n     const char * new_file_path;\n     char* old_oid;\n     char* new_oid;\n-    unsigned status;\n+    char status;", "path": "src/types.h", "position": 5, "original_position": 5, "commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "original_commit_id": "f572a8fb00fcc7d2b72916c917e6aab96d32cfb0", "user": {"login": "cholin", "id": 140243, "avatar_url": "https://avatars2.githubusercontent.com/u/140243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cholin", "html_url": "https://github.com/cholin", "followers_url": "https://api.github.com/users/cholin/followers", "following_url": "https://api.github.com/users/cholin/following{/other_user}", "gists_url": "https://api.github.com/users/cholin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cholin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cholin/subscriptions", "organizations_url": "https://api.github.com/users/cholin/orgs", "repos_url": "https://api.github.com/users/cholin/repos", "events_url": "https://api.github.com/users/cholin/events{/privacy}", "received_events_url": "https://api.github.com/users/cholin/received_events", "type": "User", "site_admin": false}, "body": "I do not think you should use the latest version of pygit2 in your application. Right now the api isn't stable. We try to avoid these changes but better now than after a 1.0 release (which could be in near future). If you depend on a recent change, well then you have no other choice...\n", "created_at": "2013-05-13T09:01:05Z", "updated_at": "2013-05-13T09:01:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/225#discussion_r4189703"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/225"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/4189703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335", "pull_request_review_id": null, "id": 7895335, "diff_hunk": "@@ -95,8 +96,164 @@\n }\n \n \n+PyObject * get_pylist_from_git_strarray(git_strarray *strarray)\n+{\n+    int index;\n+    PyObject *new_list;\n+\n+    new_list = PyList_New(strarray->count);\n+    for (index = 0; index < strarray->count; (index)++ ) {\n+        PyList_SET_ITEM(\n+                       new_list,\n+                       index,\n+                       PyString_FromString(strarray->strings[index]));", "path": "src/remote.c", "position": null, "original_position": 31, "commit_id": "6050ae021dad0bc1af053b5fd1b6a431bf160df0", "original_commit_id": "ea8901f417ec29eb39524fecf23dda9760fd2148", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "We have `to_unicode` for this which works across verisions.\n", "created_at": "2013-11-25T16:21:44Z", "updated_at": "2013-12-02T15:18:04Z", "html_url": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/290", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/290#discussion_r7895335"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/290"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/7895335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225", "pull_request_review_id": null, "id": 9060225, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Why not use `\"s\"` as the format directly?\n", "created_at": "2014-01-21T23:54:43Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9060225"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9060225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396", "pull_request_review_id": null, "id": 9064396, "diff_hunk": "@@ -729,11 +729,70 @@\n }\n \n \n+PyDoc_STRVAR(Remote_add_push__doc__,\n+    \"add_push(refspec)\\n\"\n+    \"\\n\"\n+    \"Add a push refspec to the remote.\");\n+\n+PyObject *\n+Remote_add_push(Remote *self, PyObject *args)\n+{\n+    git_remote *remote;\n+    PyObject *py_refspec = NULL;\n+    const char *refspec = NULL;\n+    int err = 0;\n+\n+    if (!PyArg_ParseTuple(args, \"O\", &py_refspec))", "path": "src/remote.c", "position": null, "original_position": 17, "commit_id": "9ef75d846eabe575c53653fc9aeb109f5b2d7010", "original_commit_id": "1adf28fe6b1830d6f6f7f09c3ffb294d28b9573d", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "I'll fix this.\n", "created_at": "2014-01-22T03:30:59Z", "updated_at": "2014-01-22T07:25:44Z", "html_url": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/318", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/318#discussion_r9064396"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9064396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021", "pull_request_review_id": null, "id": 9171021, "diff_hunk": "@@ -256,7 +258,7 @@\n PyTypeObject RefspecType = {\n     PyVarObject_HEAD_INIT(NULL, 0)\n     \"_pygit2.Refspec\",                         /* tp_name           */\n-    sizeof(Remote),                            /* tp_basicsize      */\n+    sizeof(Refspec),                            /* tp_basicsize      */", "path": "src/remote.c", "position": 19, "original_position": 19, "commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "original_commit_id": "9a428f985c29b1872f723af2e06173e6c809e7dc", "user": {"login": "xtao", "id": 1050163, "avatar_url": "https://avatars1.githubusercontent.com/u/1050163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtao", "html_url": "https://github.com/xtao", "followers_url": "https://api.github.com/users/xtao/followers", "following_url": "https://api.github.com/users/xtao/following{/other_user}", "gists_url": "https://api.github.com/users/xtao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtao/subscriptions", "organizations_url": "https://api.github.com/users/xtao/orgs", "repos_url": "https://api.github.com/users/xtao/repos", "events_url": "https://api.github.com/users/xtao/events{/privacy}", "received_events_url": "https://api.github.com/users/xtao/received_events", "type": "User", "site_admin": false}, "body": "More than one space.\n", "created_at": "2014-01-25T11:03:56Z", "updated_at": "2014-01-25T11:03:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/324#discussion_r9171021"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/9171021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155", "pull_request_review_id": null, "id": 14758155, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why not `from_c` like in `Index.from_c`? Is more consistent this way\n", "created_at": "2014-07-10T10:16:38Z", "updated_at": "2014-07-10T10:16:38Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14758155"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14758155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262", "pull_request_review_id": null, "id": 14761262, "diff_hunk": "@@ -0,0 +1,428 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Copyright 2010-2014 The pygit2 contributors\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License, version 2,\n+# as published by the Free Software Foundation.\n+#\n+# In addition to the permissions in the GNU General Public License,\n+# the authors give you unlimited permission to link the compiled\n+# version of this file into combinations with other programs,\n+# and to distribute those combinations without any restriction\n+# coming from the use of this file.  (The General Public License\n+# restrictions do apply in other respects; for example, they cover\n+# modification of the file, and distribution when not linked into\n+# a combined executable.)\n+#\n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Import from the future\n+from __future__ import absolute_import, unicode_literals\n+\n+from _pygit2 import Oid, Tree, Diff\n+\n+from .ffi import ffi, C, to_str, is_string, strings_to_strarray\n+from .errors import check_error, GitError\n+\n+class Index(object):\n+\n+    def __init__(self, path=None):\n+        \"\"\"Create a new Index\n+\n+        If path is supplied, the read and write methods will use that path\n+        to read from and write to.\n+        \"\"\"\n+        cindex = ffi.new('git_index **')\n+        err = C.git_index_open(cindex, to_str(path))\n+        check_error(err)\n+\n+        self._index = cindex[0]\n+        self._cindex = cindex\n+\n+    @classmethod\n+    def from_c(cls, repo, ptr):\n+        index = cls.__new__(cls);\n+        index._repo = repo\n+        index._index = ptr[0]\n+        index._cindex = ptr\n+\n+        return index\n+\n+    @property\n+    def _pointer(self):\n+        return bytes(ffi.buffer(self._cindex)[:])\n+\n+    def __del__(self):\n+        C.git_index_free(self._index)\n+\n+    def __len__(self):\n+        return C.git_index_entrycount(self._index)\n+\n+    def __contains__(self, path):\n+        err = C.git_index_find(ffi.NULL, self._index, to_str(path))\n+        if err == C.GIT_ENOTFOUND:\n+            return False\n+\n+        check_error(err)\n+        return True\n+\n+    def __getitem__(self, key):\n+        centry = ffi.NULL\n+        if is_string(key):\n+            centry = C.git_index_get_bypath(self._index, to_str(key), 0)\n+        elif not key >= 0:\n+            raise ValueError(key)\n+        else:\n+            centry = C.git_index_get_byindex(self._index, key)\n+\n+        if centry == ffi.NULL:\n+            raise KeyError(key)\n+\n+        return IndexEntry._from_c(centry)\n+    \n+    def __iter__(self):\n+        return IndexIterator(self)\n+\n+    def read(self, force=True):\n+        \"\"\"Update the contents the Index\n+\n+        Update the contents by reading from a file\n+        \n+        Arguments:\n+\n+        force: if True (the default) allways reload. If False, only if the file has changed\n+        \"\"\"\n+\n+        err = C.git_index_read(self._index, force)\n+        check_error(err, True)\n+\n+    def write(self):\n+        \"\"\"Write the contents of the Index to disk\n+        \"\"\"\n+        err = C.git_index_write(self._index)\n+        check_error(err, True)\n+\n+    def clear(self):\n+        err = C.git_index_clear(self._index)\n+        check_error(err)\n+\n+    def read_tree(self, tree):\n+        \"\"\"read_tree([Tree|Oid])\n+\n+        Replace the contents of the Index with those of a tree\n+\n+        The tree will be read recursively and all its children will also be\n+        inserted into the Index.\n+        \"\"\"\n+        if is_string(tree):\n+            tree = self._repo[tree]\n+\n+        if isinstance(tree, Oid):\n+            if not hasattr(self, '_repo'):\n+                raise TypeError(\"id given but no associated repository\")\n+\n+            tree = self._repo[tree]\n+        elif not isinstance(tree, Tree):\n+            raise TypeError(\"argument must be Oid or Tree\")\n+\n+        tree_cptr = ffi.new('git_tree **')\n+        ffi.buffer(tree_cptr)[:] = tree._pointer[:]\n+        err = C.git_index_read_tree(self._index, tree_cptr[0])\n+        check_error(err)\n+\n+    def write_tree(self, repo=None):\n+        \"\"\"write_tree([repo]) -> Oid\n+\n+        Create a tree out of the Index\n+\n+        The contents of the index will be written out to the object\n+        database. If there is no associated repository, 'repo' must be\n+        passed. If there is an associated repository and 'repo' is\n+        passed, then that repository will be used instead.\n+\n+        It returns the id of the resulting tree.\n+        \"\"\"\n+        coid = ffi.new('git_oid *')\n+        if repo:\n+            err = C.git_index_write_tree_to(coid, self._index, repo._repo)\n+        else:\n+            err = C.git_index_write_tree(coid, self._index)\n+\n+        check_error(err)\n+        return Oid(raw=bytes(ffi.buffer(coid)[:]))\n+\n+        \n+    def remove(self, path):\n+        \"\"\"Remove an entry from the Index.\n+        \"\"\"\n+        err = C.git_index_remove(self._index, to_str(path), 0)\n+        check_error(err, True)\n+\n+    def add_all(self, pathspecs=[]):\n+        \"\"\"Add or update index entries matching files in the working directory.\n+\n+        If pathspecs are specified, only files matching those pathspecs will be added.\n+        \"\"\"\n+        arr, refs = strings_to_strarray(pathspecs)\n+        err = C.git_index_add_all(self._index, arr, 0, ffi.NULL, ffi.NULL)\n+        check_error(err, True)\n+        \n+    def add(self, path_or_entry):\n+        \"\"\"add([path|entry])\n+\n+        Add or update an entry in the Index\n+\n+        If a path is given, that file will be added. The path must be\n+        relative to the root of the worktree and the Index must be associated\n+        with a repository.\n+\n+        If an IndexEntry is given, that entry will be added or update in the Index\n+        without checking for the existence of the path or id.\n+        \"\"\"\n+\n+        if is_string(path_or_entry):\n+            path = path_or_entry\n+            err = C.git_index_add_bypath(self._index, to_str(path))\n+        elif isinstance(path_or_entry, IndexEntry):\n+            entry = path_or_entry\n+            centry, str_ref = entry._to_c()\n+            err = C.git_index_add(self._index, centry)\n+        else:\n+            raise AttributeError('argument must be string or IndexEntry')\n+\n+        check_error(err, True)\n+\n+    @property\n+    def has_conflicts(self):\n+        \"\"\"Whether this Index contains conflict information\n+        \"\"\"\n+        return C.git_index_has_conflicts(self._index) != 0\n+\n+    def diff_to_workdir(self, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_workdir(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against the working directory\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences\n+        between the index and the working copy.\n+\n+        Arguments:\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the\n+        boundary of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one\n+        \"\"\"\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_index_to_workdir(cdiff, self._repo._repo, self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    def diff_to_tree(self, tree, flags=0, context_lines=3, interhunk_lines=0):\n+        \"\"\"diff_to_tree(flags=0, context_lines=3, interhunk_lines=0) -> Diff\n+\n+        Diff the index against a tree\n+\n+        Return a :py:class:`~pygit2.Diff` object with the differences between the\n+        index and the given tree.\n+\n+        Arguments:\n+\n+        tree: the tree to diff.\n+\n+        flags: a GIT_DIFF_* constant.\n+\n+        context_lines: the number of unchanged lines that define the boundary\n+        of a hunk (and to display before and after)\n+\n+        interhunk_lines: the maximum number of unchanged lines between hunk\n+        boundaries before the hunks will be merged into a one.\n+        \"\"\"\n+\n+        if not hasattr(self, '_repo'):\n+            raise ValueError('diff needs an associated repository')\n+\n+        if not isinstance(tree, Tree):\n+            raise TypeError('tree must be a Tree')\n+\n+        copts = ffi.new('git_diff_options *')\n+        err = C.git_diff_init_options(copts, 1)\n+        check_error(err)\n+\n+        copts.flags = flags\n+        copts.context_lines = context_lines\n+        copts.interhunk_lines = interhunk_lines\n+\n+        ctree = ffi.new('git_tree **')\n+        ffi.buffer(ctree)[:] = tree._pointer[:]\n+\n+        cdiff = ffi.new('git_diff **')\n+        err = C.git_diff_tree_to_index(cdiff, self._repo._repo, ctree[0], self._index, copts)\n+        check_error(err)\n+\n+        return Diff.from_c(bytes(ffi.buffer(cdiff)[:]), self._repo)\n+\n+    @property\n+    def conflicts(self):\n+        \"\"\"A collection of conflict information\n+\n+        This presents a mapping interface with the paths as keys. You\n+        can use the ``del`` operator to remove a conflict form the Index.\n+\n+        Each conflict is made up of three elements. Access or iteration\n+        of the conflicts returns a three-tuple of\n+        :py:class:`~pygit2.IndexEntry`. The first is the common\n+        ancestor, the second is the \"ours\" side of the conflict and the\n+        thirs is the \"theirs\" side.\n+\n+        These elements may be None depending on which sides exist for\n+        the particular conflict.\n+        \"\"\"\n+        if not hasattr(self, '_conflicts'):\n+            self._conflicts = ConflictCollection(self)\n+\n+        return self._conflicts\n+\n+class IndexEntry(object):\n+    __slots__ = ['id', 'path', 'mode', '_index']\n+\n+    def __init__(self, path, object_id, mode):\n+        self.path = path\n+        \"\"\"The path of this entry\"\"\"\n+        self.id = object_id\n+        \"\"\"The id of the referenced object\"\"\"\n+        self.mode = mode\n+        \"\"\"The mode of this entry, a GIT_FILEMODE_ value\"\"\"\n+\n+    @property\n+    def hex(self):\n+        \"\"\"The id of the referenced object as a hex string\"\"\"\n+        return self.id.hex\n+\n+    def _to_c(self):\n+        \"\"\"Convert this entry into the C structure\n+\n+        The first returned arg is the pointer, the second is the reference to\n+        the string we allocated, which we need to exist past this function\n+        \"\"\"\n+        centry = ffi.new('git_index_entry *')\n+        # basically memcpy()\n+        ffi.buffer(ffi.addressof(centry, 'id'))[:] = self.id.raw[:]\n+        centry.mode = self.mode\n+        path = ffi.new('char[]', to_str(self.path))\n+        centry.path = path\n+\n+        return centry, path\n+\n+    @classmethod\n+    def _from_c(cls, centry):", "path": "pygit2/index.py", "position": 342, "original_position": 342, "commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "original_commit_id": "7f922ae9d982cfd3b13f842c213667cdf4ee8ed6", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Because it's a special function. I went back and forth on that one, but this is a private function that only makes sense inside pygit2. The consistency should go the other way.\n", "created_at": "2014-07-10T11:54:21Z", "updated_at": "2014-07-10T11:54:21Z", "html_url": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/389", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/389#discussion_r14761262"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/389"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14761262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831", "pull_request_review_id": null, "id": 14817831, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "Why do you need to iterate? You can do it with 2 if statements:\n\n``` python\nif 'strategy' in kwargs:\n  copts.checkout_strategy = kwargs['strategy']\n\nif 'directory' in kwargs:\n  target_dir = ffi.new('char[]', to_str(kwargs['directory']))\n  refs.append(target_dir)\n  copts.target_directory = target_dir\n```\n", "created_at": "2014-07-11T12:25:54Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817831"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881", "pull_request_review_id": null, "id": 14817881, "diff_hunk": "@@ -221,7 +281,7 @@ def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n     def diff(self, a=None, b=None, cached=False, flags=GIT_DIFF_NORMAL,\n              context_lines=3, interhunk_lines=0):\n         \"\"\"\n-        Show changes between the working tree and the index or a tree,\n+        Sow changes between the working tree and the index or a tree,", "path": "pygit2/repository.py", "position": null, "original_position": 105, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "vtemian", "id": 639771, "avatar_url": "https://avatars0.githubusercontent.com/u/639771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtemian", "html_url": "https://github.com/vtemian", "followers_url": "https://api.github.com/users/vtemian/followers", "following_url": "https://api.github.com/users/vtemian/following{/other_user}", "gists_url": "https://api.github.com/users/vtemian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtemian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtemian/subscriptions", "organizations_url": "https://api.github.com/users/vtemian/orgs", "repos_url": "https://api.github.com/users/vtemian/repos", "events_url": "https://api.github.com/users/vtemian/events{/privacy}", "received_events_url": "https://api.github.com/users/vtemian/received_events", "type": "User", "site_admin": false}, "body": "I think you delete by mistake an `h` from `Show`\n", "created_at": "2014-07-11T12:27:46Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14817881"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14817881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235", "pull_request_review_id": null, "id": 14818235, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "It's a leftover from working with less abstract constructions; but it's a guess as to how many parameters will actually be passed versus how many we will be looking at. I'm not a fan of looking up the same key twice, but it can be reduced.\n", "created_at": "2014-07-11T12:41:16Z", "updated_at": "2014-07-11T12:50:05Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14818235"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14818235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294", "pull_request_review_id": null, "id": 14854294, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "I remember now why I wanted to iterate over the inputs instead of checking for the known keys: if the programmer using this method makes a typo, we will ignore that option instead of complaining, which can cause subtle bugs, as there is no indication that we're ignoring an argument that was passed. I didn't end up doing it as we just have the two things, but when this gets extended, we should raise an exception if we get something we don't recognise as an option.\n", "created_at": "2014-07-12T17:23:34Z", "updated_at": "2014-07-12T17:23:34Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r14854294"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/14854294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085", "pull_request_review_id": null, "id": 15143085, "diff_hunk": "@@ -176,11 +176,59 @@ def create_reference(self, name, target, force=False):\n \n         return self.create_reference_symbolic(name, target, force)\n \n-\n     #\n     # Checkout\n     #\n-    def checkout(self, refname=None, strategy=GIT_CHECKOUT_SAFE_CREATE):\n+    @staticmethod\n+    def _checkout_args_to_options(**kwargs):\n+        # Create the options struct to pass\n+        copts = ffi.new('git_checkout_options *')\n+        check_error(C.git_checkout_init_options(copts, 1))\n+\n+        # References we need to keep to strings and so forth\n+        refs = []\n+\n+        # pygit2's default is SAFE_CREATE\n+        copts.checkout_strategy = GIT_CHECKOUT_SAFE_CREATE\n+        # and go through the arguments to see what the user wanted\n+        for k, v in kwargs.iteritems():", "path": "pygit2/repository.py", "position": null, "original_position": 21, "commit_id": "763b571c84b6ef73192aca191ee22f2785f2b2e9", "original_commit_id": "bffb3cb7e651549a74e4693357c8a79abc82fd06", "user": {"login": "jdavid", "id": 596769, "avatar_url": "https://avatars1.githubusercontent.com/u/596769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavid", "html_url": "https://github.com/jdavid", "followers_url": "https://api.github.com/users/jdavid/followers", "following_url": "https://api.github.com/users/jdavid/following{/other_user}", "gists_url": "https://api.github.com/users/jdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavid/subscriptions", "organizations_url": "https://api.github.com/users/jdavid/orgs", "repos_url": "https://api.github.com/users/jdavid/repos", "events_url": "https://api.github.com/users/jdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavid/received_events", "type": "User", "site_admin": false}, "body": "Just changed this static method so it is shorter and fails on unexpected arguments.\n", "created_at": "2014-07-19T10:32:13Z", "updated_at": "2014-07-19T10:32:13Z", "html_url": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/390", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/390#discussion_r15143085"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/390"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15143085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992", "pull_request_review_id": null, "id": 15392992, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "All of these values will be unitialised if they're not passed. Instead of this, you should let `PyArg_ParseTupleAndKeywords` write into the options structure directly.\n", "created_at": "2014-07-25T09:36:57Z", "updated_at": "2014-07-25T09:40:42Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15392992"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15392992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170", "pull_request_review_id": null, "id": 15393170, "diff_hunk": "@@ -438,19 +438,30 @@ Diff_merge(Diff *self, PyObject *args)\n \n \n PyDoc_STRVAR(Diff_find_similar__doc__,\n-  \"find_similar([flags])\\n\"\n+  \"find_similar([flags, rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold, rename_limit])\\n\"\n   \"\\n\"\n   \"Find renamed files in diff and updates them in-place in the diff itself.\");\n \n PyObject *\n-Diff_find_similar(Diff *self, PyObject *args)\n+Diff_find_similar(Diff *self, PyObject *args, PyObject *kwds)\n {\n     int err;\n     git_diff_find_options opts = GIT_DIFF_FIND_OPTIONS_INIT;\n \n-    if (!PyArg_ParseTuple(args, \"|i\", &opts.flags))\n+    uint16_t rename_threshold, copy_threshold, rename_from_rewrite_threshold, break_rewrite_threshold;\n+    size_t rename_limit;", "path": "src/diff.c", "position": null, "original_position": 18, "commit_id": "e31f0acf976ced828046d95516ad7b4b1c0cc500", "original_commit_id": "eb001f0b9865d038ef904573c45946f7f8298534", "user": {"login": "ArnoVanLumig", "id": 893745, "avatar_url": "https://avatars3.githubusercontent.com/u/893745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnoVanLumig", "html_url": "https://github.com/ArnoVanLumig", "followers_url": "https://api.github.com/users/ArnoVanLumig/followers", "following_url": "https://api.github.com/users/ArnoVanLumig/following{/other_user}", "gists_url": "https://api.github.com/users/ArnoVanLumig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnoVanLumig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnoVanLumig/subscriptions", "organizations_url": "https://api.github.com/users/ArnoVanLumig/orgs", "repos_url": "https://api.github.com/users/ArnoVanLumig/repos", "events_url": "https://api.github.com/users/ArnoVanLumig/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnoVanLumig/received_events", "type": "User", "site_admin": false}, "body": "Thanks!\n\nI actually figured that out myself but forgot to commit and push it... Thanks for the heads-up!\n", "created_at": "2014-07-25T09:41:56Z", "updated_at": "2014-07-25T09:41:56Z", "html_url": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/396", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/396#discussion_r15393170"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/396"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/15393170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723", "pull_request_review_id": null, "id": 16031723, "diff_hunk": "@@ -61,6 +61,11 @@ class Keypair(object):\n     This is an object suitable for passing to a remote's credentials\n     callback and for returning from said callback.\n \n+    :param str username: the username used in the remote URL", "path": "pygit2/credentials.py", "position": null, "original_position": 4, "commit_id": "d752e8550b50d10abe8f0252e44e801ef71b263b", "original_commit_id": "f787a52e66c67958a9127f1a900c07c4ed48c879", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "Again, this has nothing to do with the username the user may have passed as a hint. _This_ username is the only one that counts, and it has to be the username as which you wish to authenticate to the ssh host.\n", "created_at": "2014-08-10T15:19:27Z", "updated_at": "2014-08-11T22:51:41Z", "html_url": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/398", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/398#discussion_r16031723"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/398"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16031723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524", "pull_request_review_id": null, "id": 16348524, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "There's no need for this line. You're already setting the version above with the init function. If the version does increase, this would cause libgit2 to consider the struct to have a different layout.\n", "created_at": "2014-08-18T11:45:28Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16348524"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16348524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362", "pull_request_review_id": null, "id": 16349362, "diff_hunk": "@@ -205,17 +191,39 @@ def fetch(self, signature=None, message=None):\n         Perform a fetch against this remote.\n         \"\"\"\n \n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks,\n+                                          C.GIT_REMOTE_CALLBACKS_VERSION)\n+\n+        # Build the callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1", "path": "pygit2/remote.py", "position": null, "original_position": 31, "commit_id": "2f2d4005c70eac2aefe66db19a0f7004ac765cbf", "original_commit_id": "9ce6a26db33b6f46865f0878bf950624ed52b738", "user": {"login": "mduggan", "id": 3765590, "avatar_url": "https://avatars2.githubusercontent.com/u/3765590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mduggan", "html_url": "https://github.com/mduggan", "followers_url": "https://api.github.com/users/mduggan/followers", "following_url": "https://api.github.com/users/mduggan/following{/other_user}", "gists_url": "https://api.github.com/users/mduggan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mduggan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mduggan/subscriptions", "organizations_url": "https://api.github.com/users/mduggan/orgs", "repos_url": "https://api.github.com/users/mduggan/repos", "events_url": "https://api.github.com/users/mduggan/events{/privacy}", "received_events_url": "https://api.github.com/users/mduggan/received_events", "type": "User", "site_admin": false}, "body": "Ah, I was doing it in a little bit of a weird order.. I wanted to create the \"default\" callbacks first so that any error could raise before the custom callbacks had been set.. but fair point about the version number being set differently on the two lines.. if it changes in one place it will need to change in both,\n", "created_at": "2014-08-18T12:11:45Z", "updated_at": "2014-08-25T13:39:27Z", "html_url": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/404", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/404#discussion_r16349362"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/404"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/16349362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924", "pull_request_review_id": null, "id": 18427924, "diff_hunk": "@@ -321,6 +321,30 @@ def push(self, spec, signature=None, message=None):\n         :param Signature signature: signature to use when updating the tips\n         :param str message: message to use when updating the tips\n         \"\"\"\n+        # Get the default callbacks first\n+        defaultcallbacks = ffi.new('git_remote_callbacks *')\n+        err = C.git_remote_init_callbacks(defaultcallbacks, 1)\n+        check_error(err)\n+\n+        # Build custom callback structure\n+        callbacks = ffi.new('git_remote_callbacks *')\n+        callbacks.version = 1\n+        callbacks.sideband_progress = self._sideband_progress_cb\n+        callbacks.transfer_progress = self._transfer_progress_cb\n+        callbacks.update_tips = self._update_tips_cb\n+        callbacks.credentials = self._credentials_cb\n+        # We need to make sure that this handle stays alive\n+        self._self_handle = ffi.new_handle(self)", "path": "pygit2/remote.py", "position": 17, "original_position": 17, "commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "original_commit_id": "cd379eae9993fbf6572360b4c8505e5806eb09e3", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "`self._self_handle` needs to be set to `None` after the push operation completes, next to freeing the push object itself.\n", "created_at": "2014-10-04T06:43:23Z", "updated_at": "2014-10-04T06:43:23Z", "html_url": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/431", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/431#discussion_r18427924"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/431"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/18427924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737", "pull_request_review_id": null, "id": 17552737, "diff_hunk": "@@ -85,3 +85,9 @@ def credential_tuple(self):\n \n     def __call__(self, _url, _username, _allowed):\n         return self\n+\n+\n+class KeypairFromAgent(Keypair):\n+    def __init__(self, username):\n+        self._username = username\n+        super(KeypairFromAgent, self).__init__(username, None, None, None)", "path": "pygit2/credentials.py", "position": null, "original_position": 9, "commit_id": "9aa39aafbc4e9e5920086cdafdb96270ee66ebe5", "original_commit_id": "4b9fe1cc7c54735e3a0a062d0ffe013d4e4d984d", "user": {"login": "carlosmn", "id": 335443, "avatar_url": "https://avatars0.githubusercontent.com/u/335443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosmn", "html_url": "https://github.com/carlosmn", "followers_url": "https://api.github.com/users/carlosmn/followers", "following_url": "https://api.github.com/users/carlosmn/following{/other_user}", "gists_url": "https://api.github.com/users/carlosmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosmn/subscriptions", "organizations_url": "https://api.github.com/users/carlosmn/orgs", "repos_url": "https://api.github.com/users/carlosmn/repos", "events_url": "https://api.github.com/users/carlosmn/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosmn/received_events", "type": "User", "site_admin": true}, "body": "One of these lies is redundant. If we're going to rely on the superclass' constructor, then there's no need for us to store the username explicitly.\n", "created_at": "2014-09-15T16:35:10Z", "updated_at": "2014-10-07T08:48:52Z", "html_url": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737", "pull_request_url": "https://api.github.com/repos/libgit2/pygit2/pulls/424", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737"}, "html": {"href": "https://github.com/libgit2/pygit2/pull/424#discussion_r17552737"}, "pull_request": {"href": "https://api.github.com/repos/libgit2/pygit2/pulls/424"}}, "reactions": {"url": "https://api.github.com/repos/libgit2/pygit2/pulls/comments/17552737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}