{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/mapbox/rasterio/issues/1249", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1249/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1249/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1249/events", "html_url": "https://github.com/mapbox/rasterio/issues/1249", "id": 289630374, "number": 1249, "title": "Cannot get samples from tif with no CRS since 1.0a10", "user": {"login": "odormond", "id": 6637092, "avatar_url": "https://avatars3.githubusercontent.com/u/6637092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odormond", "html_url": "https://github.com/odormond", "followers_url": "https://api.github.com/users/odormond/followers", "following_url": "https://api.github.com/users/odormond/following{/other_user}", "gists_url": "https://api.github.com/users/odormond/gists{/gist_id}", "starred_url": "https://api.github.com/users/odormond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odormond/subscriptions", "organizations_url": "https://api.github.com/users/odormond/orgs", "repos_url": "https://api.github.com/users/odormond/repos", "events_url": "https://api.github.com/users/odormond/events{/privacy}", "received_events_url": "https://api.github.com/users/odormond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-18T13:35:08Z", "updated_at": "2018-01-18T13:35:08Z", "closed_at": null, "author_association": "NONE", "body": "Hello!\r\n\r\nWhen trying to sample a tif not containing any CRS, rasterio will raise a CRSError since version 1.0a10 while it was working fine up to 1.0a9.\r\n\r\n## Expected behavior and actual behavior.\r\n\r\n### Expected\r\n```\r\n$ ./test.py\r\n[array([ 0.21086692]), array([ 0.21086692])]\r\n```\r\n\r\n### Actual\r\n```\r\n$ ./test.py\r\n/venv/lib/python3.5/site-packages/rasterio/windows.py:483: RasterioDeprecationWarning: use 'width' attribute instead\r\n  RasterioDeprecationWarning)\r\n/venv/lib/python3.5/site-packages/rasterio/sample.py:17: RasterioDeprecationWarning: use 'height' attribute instead\r\n  data = read(indexes, window=window, masked=False, boundless=True)\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 6, in <module>\r\n    samples = list(rasterio.sample.sample_gen(tif, ((708816.547, 5678449.287), (708816.547, 5678449.287))))\r\n  File \"/venv/lib/python3.5/site-packages/rasterio/sample.py\", line 17, in sample_gen\r\n    data = read(indexes, window=window, masked=False, boundless=True)\r\n  File \"rasterio/_io.pyx\", line 325, in rasterio._io.DatasetReaderBase.read\r\n  File \"rasterio/_warp.pyx\", line 702, in rasterio._warp.WarpedVRTReaderBase.__init__\r\n  File \"rasterio/_base.pyx\", line 991, in rasterio._base._osr_from_crs\r\nrasterio.errors.CRSError: A defined coordinate reference system is required\r\n```\r\n\r\n## Steps to reproduce the problem.\r\n\r\nUnzip the following zip and go into the `rasterio_no_crs_tif_cannot_be_sampled` directory. Then just run `./test.py`.\r\n[rasterio_no_crs_tif_cannot_be_sampled.zip](https://github.com/mapbox/rasterio/files/1642938/rasterio_no_crs_tif_cannot_be_sampled.zip)\r\n\r\nI'm reproducing `test.py` itself for convenience:\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport rasterio\r\n\r\ntif = rasterio.open('test.tif')\r\nsamples = list(rasterio.sample.sample_gen(tif, ((708816.547, 5678449.287), (708816.547, 5678449.287))))\r\nprint(samples)\r\n```\r\n\r\n## Operating system\r\n\r\nUbuntu 16.04.3 LTS\r\n\r\n## Rasterio version and provenance\r\n\r\nrasterio-1.0a10-cp35-cp35m-manylinux1_x86_64.whl installed in a python3 virtualenv with pip 9.0.1\r\n\r\nThe result are the same with version 1.0a11 and 1.0a12 from pypi.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1248", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1248/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1248/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1248/events", "html_url": "https://github.com/mapbox/rasterio/issues/1248", "id": 289444499, "number": 1248, "title": "Georeference metadata not read from some GRIB files", "user": {"login": "nawendt", "id": 13972103, "avatar_url": "https://avatars0.githubusercontent.com/u/13972103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nawendt", "html_url": "https://github.com/nawendt", "followers_url": "https://api.github.com/users/nawendt/followers", "following_url": "https://api.github.com/users/nawendt/following{/other_user}", "gists_url": "https://api.github.com/users/nawendt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nawendt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nawendt/subscriptions", "organizations_url": "https://api.github.com/users/nawendt/orgs", "repos_url": "https://api.github.com/users/nawendt/repos", "events_url": "https://api.github.com/users/nawendt/events{/privacy}", "received_events_url": "https://api.github.com/users/nawendt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-17T22:58:21Z", "updated_at": "2018-01-18T05:39:19Z", "closed_at": null, "author_association": "NONE", "body": "## Expected behavior and actual behavior.\r\n\r\nI have been working with GRIB (version 2) data and have run into an issue where the georeference metadata are not extracted (i.e., the CRS is missing, affine parameters are incorrect, etc.). However, if I simply use the standard GDAL Python bindings, the metadata are extracted. The data I am working with is from the [NCEP SREF](http://www.nco.ncep.noaa.gov/pmb/products/sref/) weather forecast model.\r\n\r\n## Steps to reproduce the problem.\r\nI use `rasterio` as follows:\r\n```python\r\nimport rasterio\r\ndat = rasterio.open('my_grib_file.grib2')\r\ndat.profile\r\n```\r\nwhich produces the following output\r\n```python\r\n>>> {'affine': Affine(1.0, 0.0, -0.5, 0.0, 1.0, -0.5),\r\n 'count': 523,\r\n 'crs': CRS({}),\r\n 'driver': 'GRIB',\r\n 'dtype': 'float64',\r\n 'height': 129,\r\n 'nodata': None,\r\n 'tiled': False,\r\n 'transform': (-0.5, 1.0, 0.0, -0.5, 0.0, 1.0),\r\n 'width': 185}\r\n```\r\nWith `osgeo.gdal` (in a separate session)\r\n```python\r\nfrom osgeo import gdal\r\ndat = gdal.Open('my_grib_file.grib2')\r\ndat.GetProjectionRef()\r\ndat.GetGeoTransform()\r\n```\r\nwhich produces\r\n```python\r\n>>> 'PROJCS[\"unnamed\",GEOGCS[\"Coordinate System imported from GRIB file\",DATUM[\"unknown\",SPHEROID[\"Sphere\",6371229,0]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic_2SP\"],PARAMETER[\"standard_parallel_1\",25],PARAMETER[\"standard_parallel_2\",25],PARAMETER[\"latitude_of_origin\",25],PARAMETER[\"central_meridian\",265],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0]]'\r\n>>> (-4246424.496915466, 40635.0, 0.0, 4388899.238982436, 0.0, -40635.0)\r\n```\r\n\r\n## Operating systems\r\n\r\nRHEL 6\r\n\r\n## Rasterio version and provenance\r\n\r\nrasterio 0.36.0 via conda-forge\r\ngdal 2.1.3 via conda-forge\r\npython 3.6.4 via conda-forge\r\n\r\n## Other information\r\n\r\nI have verified that both `osgeo.gdal` and `rasterio` are using the same GDAL C library. When I use the same methods as above on another GRIB (this time version 1) from a different weather forecast model, the georeference metadata are read correctly. This would indicate it could be an issue with individual files, but, as I show above, the same GDAL library reads the correct georeference data when not using `rasterio`.\r\n\r\nI determined that the issue occurs when `GDALGetProjectionRef` is called in `read_crs` from `_base.pyx`. What I did then was to create a small C program that uses `GDALGetProjectionRef` to access the georeference information and print it to STDOUT. That worked just fine and produced the same information as when using `osgeo.gdal`. I also built rasterio from source in a separate conda environment and still had the same problem. This is what ultimately led me to believe that the issue has something to do with what is getting passed around in `rasterio` versus the GDAL C library itself or something with my conda environments.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1242", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1242/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1242/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1242/events", "html_url": "https://github.com/mapbox/rasterio/issues/1242", "id": 285214868, "number": 1242, "title": "Windowed read for a large single-block data", "user": {"login": "hackedbellini", "id": 134025, "avatar_url": "https://avatars1.githubusercontent.com/u/134025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackedbellini", "html_url": "https://github.com/hackedbellini", "followers_url": "https://api.github.com/users/hackedbellini/followers", "following_url": "https://api.github.com/users/hackedbellini/following{/other_user}", "gists_url": "https://api.github.com/users/hackedbellini/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackedbellini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackedbellini/subscriptions", "organizations_url": "https://api.github.com/users/hackedbellini/orgs", "repos_url": "https://api.github.com/users/hackedbellini/repos", "events_url": "https://api.github.com/users/hackedbellini/events{/privacy}", "received_events_url": "https://api.github.com/users/hackedbellini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 86183081, "url": "https://api.github.com/repos/mapbox/rasterio/labels/docs", "name": "docs", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/8", "html_url": "https://github.com/mapbox/rasterio/milestone/8", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/8/labels", "id": 686337, "number": 8, "title": "1.0", "description": null, "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 29, "closed_issues": 179, "state": "open", "created_at": "2014-06-10T00:10:13Z", "updated_at": "2018-01-11T22:28:40Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2017-12-30T17:48:30Z", "updated_at": "2018-01-01T13:55:16Z", "closed_at": null, "author_association": "NONE", "body": "I have a large data (2gb geotiff image) that I need to process and write to a new image, but the computer I'm going to process it only has 512mb of ram.\r\n\r\nLooking at the windowed read/write from the documentation I wrote a code that reads and writes using a window of 50cols x 50rows. I slide that window through all the image.\r\n\r\nI'm testing the code in my development machine, which has 8gb of ram. I notied that, when doing the processing, the whole image got loaded in the memory, even though I was using windowed  read/write.\r\n\r\nOne thing that I noticed is that the image has only one block. More specifically, if I call `src.block_windows(1)` it will give me only one window, and that window takes the whole image.\r\n\r\nSo, I don't know if this is an issue in rasterio or is something that I'm doing wrong", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1241", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1241/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1241/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1241/events", "html_url": "https://github.com/mapbox/rasterio/issues/1241", "id": 285156626, "number": 1241, "title": "Recreating gdalwarp with alpha band", "user": {"login": "mheppner", "id": 2390428, "avatar_url": "https://avatars3.githubusercontent.com/u/2390428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mheppner", "html_url": "https://github.com/mheppner", "followers_url": "https://api.github.com/users/mheppner/followers", "following_url": "https://api.github.com/users/mheppner/following{/other_user}", "gists_url": "https://api.github.com/users/mheppner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mheppner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mheppner/subscriptions", "organizations_url": "https://api.github.com/users/mheppner/orgs", "repos_url": "https://api.github.com/users/mheppner/repos", "events_url": "https://api.github.com/users/mheppner/events{/privacy}", "received_events_url": "https://api.github.com/users/mheppner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-29T21:17:22Z", "updated_at": "2017-12-29T21:17:59Z", "closed_at": null, "author_association": "NONE", "body": "I apologize in advance that this is for help and not a bug report, but the rasterio tag on StackOverflow seems to get little traffic, and I couldn't find a Gitter or Slack channel. Are there are places for usage help or examples?\r\n\r\nI'm trying to figure out how to convert a `gdalwarp` command into a rasterio-equivilant, but can't quite figure it out. I'm basically trying to make a tile:\r\n\r\n```sh\r\ngdalwarp \\\r\n    -of PNG \\                                       # output format\r\n    -t_srs EPSG:3857 \\                              # target SRS\r\n    -ts 256 256 \\                                   # target size, width x height\r\n    -te 4696291.0 3757032.8 5009377.0 4070118.8 \\   # target bounds\r\n    -dstalpha \\                                     # add an alpha band to represent nodata\r\n    /tmp/input.tiff \\\r\n    /tmp/output.png\r\n```\r\n\r\nWhich looks something like this (notice the source image is zoomed out, scaled, positioned relative to the bounds, and surrounded by transparency):\r\n\r\n![gdalwarp](https://user-images.githubusercontent.com/2390428/34447122-06bd5fd4-ecaf-11e7-953b-a3a38f2862b2.png)\r\n\r\nI've noticed a few opened issues about adding support for the alpha band in `warp.reproject()`, but I'm wondering if something could be achieved using `WarpedVRT` instead. This is about as close as I can get:\r\n\r\n```python\r\nimport rasterio\r\nfrom rasterio.vrt import WarpedVRT\r\nfrom rasterio.io import MemoryFile\r\nfrom rasterio.windows import Window\r\n\r\n\r\nbounds = [4696291.0, 3757032.8, 5009377.0, 4070118.8]\r\nwidth = height = 256\r\n\r\nwith rasterio.open('/tmp/input.tiff') as src:\r\n    dst_window = Window(*bounds)\r\n\r\n    with WarpedVRT(src,\r\n                   dst_crs='EPSG:3857',\r\n                   dst_window=dst_window,\r\n                   width=width,\r\n                   height=height) as vrt:\r\n        \r\n        vrt_window = vrt.window(*bounds)\r\n\r\n        data = vrt.read(window=vrt_window)\r\n\r\n        profile = vrt.profile.copy()\r\n        profile['width'] = width\r\n        profile['height'] = height\r\n        profile['driver'] = 'PNG'\r\n        profile['transform'] = vrt.window_transform(vrt_window)\r\n\r\n        with open('/tmp/output.png', 'w', **profile) as dst:\r\n            dst.write(data)\r\n```\r\n\r\nWhich results in an image like this:\r\n\r\n![rasterio](https://user-images.githubusercontent.com/2390428/34447359-100e47e0-ecb1-11e7-8269-eaa33d967d44.png)\r\n\r\nDoes a `WarpedVRT` snap to it's own maximum bounds if the `dst_window` is larger? Can it be used to keep an alpha channel for nodata?\r\n\r\n## Operating system\r\n\r\nMac OS X 10.13.2\r\n\r\n## Rasterio version and provenance\r\n\r\nPython 3.6.3\r\nGDAL 2.2.3\r\nnumpy==1.13.3\r\nrasterio==1.0a12\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1240", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1240/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1240/events", "html_url": "https://github.com/mapbox/rasterio/issues/1240", "id": 285021217, "number": 1240, "title": "`rasterio.mask.mask` masks images with rotation terms in transforms incorrectly", "user": {"login": "whlteXbread", "id": 2965960, "avatar_url": "https://avatars0.githubusercontent.com/u/2965960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whlteXbread", "html_url": "https://github.com/whlteXbread", "followers_url": "https://api.github.com/users/whlteXbread/followers", "following_url": "https://api.github.com/users/whlteXbread/following{/other_user}", "gists_url": "https://api.github.com/users/whlteXbread/gists{/gist_id}", "starred_url": "https://api.github.com/users/whlteXbread/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whlteXbread/subscriptions", "organizations_url": "https://api.github.com/users/whlteXbread/orgs", "repos_url": "https://api.github.com/users/whlteXbread/repos", "events_url": "https://api.github.com/users/whlteXbread/events{/privacy}", "received_events_url": "https://api.github.com/users/whlteXbread/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-29T02:04:25Z", "updated_at": "2018-01-04T01:40:40Z", "closed_at": null, "author_association": "NONE", "body": "## Overview\r\n\r\nI've got some images that have rotation terms in their transform. If I attempt to use `rasterio.mask.mask`, I find that the mask is generated incorrectly. It's fairly easy to demonstrate this issue in `rasterio.features.geometry_window`. \r\n\r\nBasically, the code that finds the bounds of the shapes does so in the CRS domain. The `top`, `bottom`, `left`, and `right` are calculated by finding the extrema in the CRS domain, which is a reasonable approach, but assumes that the image transform has no rotation terms (even though north can be up or down!). This results in corners that don't correspond to corners in the raster's pixel domain which causes incorrect and sometimes faulty window generation.\r\n\r\nI was able to get results that made more sense by converting the shape vertices to values in the pixel domain, and then finding the extrema. But of course it's silly to convert to the raster pixel domain only to convert them back to the CRS domain, which is what `rasterio.windows.from_bounds` expects. That said, it's unclear how I would go about addressing this issue.\r\n\r\nInterestingly, the mask itself is generated correctly. I don't know the codebase well enough to know if there is potential for synergy there.\r\n\r\nI will work on creating some data that will reproduce the issues I'm seeing.\r\n\r\n## Expected behavior:\r\nUsing `rasterio.mask.mask` on an image with rotation components in its transform should correctly mask an image based on shape specified.\r\n\r\n## Actual behavior:\r\nIn some cases,  the error `width and height must be > 0` (`rasterio.features`, line 288) is raised.\r\n\r\nIn other cases, a mask is generated (properly) but the window cuts off part of the mask.\r\n\r\n## Steps to reproduce the problem:\r\nUsing an image with rotation terms in the transform, attempt to use `rasterio.mask.mask`.\r\n\r\n## Operating system:\r\n\r\nUbuntu 17.04 (but the bug is OS independent)\r\n\r\n## Rasterio version and provenance\r\nInstalled from source.\r\n\r\n```\r\n>>> import rasterio\r\n>>> rasterio.__version__\r\n'1.0a12'```\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1235", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1235/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1235/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1235/events", "html_url": "https://github.com/mapbox/rasterio/pull/1235", "id": 283225913, "number": 1235, "title": "WIP:add indexes / bidx parameter to merge", "user": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-19T13:20:33Z", "updated_at": "2017-12-19T22:08:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/1235", "html_url": "https://github.com/mapbox/rasterio/pull/1235", "diff_url": "https://github.com/mapbox/rasterio/pull/1235.diff", "patch_url": "https://github.com/mapbox/rasterio/pull/1235.patch"}, "body": "Sorry for bombarding you with PRs... \r\n\r\nThis one adds the `indexes` parameter to `rasterio.merge.merge`, equivalent to the PR you just merged for `rasterio.mask.mask` (#1225).\r\n\r\nI also added the functionality to `rio merge` as a `--bidx` parameter.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1234", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1234/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1234/events", "html_url": "https://github.com/mapbox/rasterio/issues/1234", "id": 283075073, "number": 1234, "title": "A color interp test fails when running against GDAL trunk", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 346458805, "url": "https://api.github.com/repos/mapbox/rasterio/labels/GDAL", "name": "GDAL", "color": "c7def8", "default": false}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-19T01:22:38Z", "updated_at": "2017-12-19T12:13:28Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "`tests/test_colorinterp.py::test_set_colorinterp_all` has been failing for a few months [on Travis against GDAL trunk](https://travis-ci.org/mapbox/rasterio/jobs/315618227).\r\n\r\nhttps://github.com/mapbox/rasterio/blob/5f1c3ed9d2e2b5bc8dabde0f5cb8bdd00759fc7d/tests/test_colorinterp.py#L86\r\n\r\nFor `GDAL<=2.2` the first band could never be `undefined` and GDAL would change it to `gray`, but it looks like `undefined` is now an allowed value on GDAL trunk.  @rouault is this correct?  I couldn't find any recent tickets in trac.\r\n\r\nFailure report:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n_________________ test_set_colorinterp_all[ColorInterp.grey0] __________________\r\npath_4band_no_colorinterp = '/tmp/pytest-of-travis/pytest-0/test_set_colorinterp_all_Color1/4band-byte-no-ci.tif'\r\nci = <ColorInterp.grey: 1>\r\n    @pytest.mark.parametrize(\"ci\", ColorInterp.__members__.values())\r\n    def test_set_colorinterp_all(path_4band_no_colorinterp, ci):\r\n    \r\n        \"\"\"Test setting with all color interpretations.\"\"\"\r\n    \r\n        with rasterio.open(path_4band_no_colorinterp, 'r+') as src:\r\n            all_ci = list(src.colorinterp)\r\n            all_ci[1] = ci\r\n            src.colorinterp = all_ci\r\n    \r\n        with rasterio.open(path_4band_no_colorinterp) as src:\r\n>           assert src.colorinterp[1] == ci\r\nE           assert <ColorInterp.undefined: 0> == <ColorInterp.grey: 1>\r\ntests/test_colorinterp.py:96: AssertionError\r\n---------------------------- Captured stderr setup -----------------------------\r\n```\r\n\r\nThe failing test takes an image with no color interpretation and sets the color interpretation of the first band to each of the color interpretation options.  More specifically it takes a 4 band image with color interpretation `gray undefined undefined undefined` because older versions of GDAL silently switched an `undefined` first band to `gray`.\r\n\r\nThis snippet illustrates the problem, succeeds on `GDAL<=2.2` and fails on GDAL trunk:\r\n\r\n```python\r\nimport affine\r\nimport rasterio\r\nfrom rasterio import shutil as rio_shutil\r\nfrom rasterio.enums import ColorInterp\r\n\r\n\r\npath_4band_no_colorinterp = '4band-no-ci.tif'\r\n\r\n\r\n# This seems to be a GDAL default.  GDAL 2.2 allows 'undefined' for first\r\n# band, but older versions silently convert to 'gray'\r\nundefined_ci = (\r\n    ColorInterp.gray,\r\n    ColorInterp.undefined,\r\n    ColorInterp.undefined,\r\n    ColorInterp.undefined)\r\n\r\n\r\nprofile = {\r\n    'height': 10,\r\n    'width': 10,\r\n    'count': 4,\r\n    'dtype': rasterio.ubyte,\r\n    'transform': affine.Affine(1, 0.0, 0,\r\n                               0.0, -1, 1),\r\n    'driver': 'GTiff',\r\n    'photometric': 'minisblack'\r\n}\r\n\r\nwith rasterio.open(path_4band_no_colorinterp, 'w', **profile) as src:\r\n    src.colorinterp = undefined_ci\r\n\r\n# Ensure color interp was set.\r\nwith rasterio.open(path_4band_no_colorinterp) as src:\r\n    if src.colorinterp != undefined_ci:\r\n        raise ValueError(\r\n            \"Didn't properly set color interpretation.  GDAL can \"\r\n            \"forcefully make assumptions.\")\r\n\r\n\r\nfor ci in ColorInterp.__members__.values():\r\n\r\n    with rasterio.open(path_4band_no_colorinterp, 'r+') as src:\r\n        all_ci = list(src.colorinterp)\r\n        # Adjust CI for first band.  This appears to be failing on GDAL\r\n        # trunk for 'ColorInterp.gray' and 'ColorInterp.grey', which are\r\n        # aliases for the same value.\r\n        all_ci[1] = ci\r\n        src.colorinterp = all_ci\r\n\r\n    with rasterio.open(path_4band_no_colorinterp) as src:\r\n        assert src.colorinterp[1] == ci, \"Expected {!r} but found {!r}\".format(src.colorinterp[1], ci)\r\n```", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1227", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1227/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1227/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1227/events", "html_url": "https://github.com/mapbox/rasterio/issues/1227", "id": 280327913, "number": 1227, "title": "Cleanup doc warnings", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 86183081, "url": "https://api.github.com/repos/mapbox/rasterio/labels/docs", "name": "docs", "color": "5319e7", "default": false}, {"id": 351216675, "url": "https://api.github.com/repos/mapbox/rasterio/labels/good%20first%20issue", "name": "good first issue", "color": "0e8a16", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-08T00:28:23Z", "updated_at": "2017-12-08T00:28:23Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Docs are built with:\r\n\r\n```console\r\n$ cd docs\r\n$ make html\r\n```\r\n\r\nbut emit a ton of warnings.  It looks like some things have moved around.  Switching from `numpydoc` to Sphinx's builtin [`sphinx.ext.napoleon`](http://www.sphinx-doc.org/en/stable/ext/napoleon.html`) [may remove some warnings](https://stackoverflow.com/questions/12206334/sphinx-autosummary-toctree-contains-reference-to-nonexisting-document-warnings).  `napoleon` is a builtin Sphinx extension and supports translating Numpy-style docstrings, which is what we use.\r\n\r\nHere are the current warnings:\r\n\r\n```console\r\n$ cd docs && make html\r\nsphinx-build -b html -d _build/doctrees   . _build/html\r\nRunning Sphinx v1.6.5\r\nloading pickled environment... done\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 0 source files that are out of date\r\nupdating environment: 0 added, 4 changed, 0 removed\r\nreading sources... [100%] topics/index                                             \r\n/Users/wursterk/code/rasterio/docs/cli.rst:174: WARNING: toctree contains reference to nonexisting document 'calc'\r\n/Users/wursterk/code/rasterio/docs/index.rst:61: WARNING: toctree contains reference to nonexisting document 'topics/nodata'\r\n/Users/wursterk/code/rasterio/docs/python_manual.rst:15: WARNING: toctree contains reference to nonexisting document 'reading'\r\n/Users/wursterk/code/rasterio/docs/python_manual.rst:15: WARNING: toctree contains reference to nonexisting document 'working_with_datasets'\r\n/Users/wursterk/code/rasterio/docs/python_manual.rst:15: WARNING: toctree contains reference to nonexisting document 'writing'\r\n/Users/wursterk/code/rasterio/docs/python_manual.rst:15: WARNING: toctree contains reference to nonexisting document 'topics'\r\n/Users/wursterk/code/rasterio/docs/python_manual.rst:15: WARNING: toctree contains reference to nonexisting document 'osgeo_gdal_migration'\r\n/Users/wursterk/code/rasterio/docs/topics/index.rst:4: WARNING: toctree contains reference to nonexisting document 'topics/nodata'\r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... /Users/wursterk/code/rasterio/docs/python_manual.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/rasterio.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/calc.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/configuration.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/index.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/profiles.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/reading.rst: WARNING: document isn't included in any toctree\r\n/Users/wursterk/code/rasterio/docs/topics/writing.rst: WARNING: document isn't included in any toctree\r\ndone\r\npreparing documents... done\r\nwriting output... [100%] topics/index                                              \r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.coords.BoundingBox.count'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.coords.BoundingBox.index'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.is_epsg_code'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.is_geographic'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.is_projected'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.is_valid'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.wkt'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.clear'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.copy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.from_epsg'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.from_string'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.from_wkt'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.fromkeys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.get'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.items'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.keys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.pop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.popitem'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.setdefault'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.to_dict'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.to_string'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.update'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.crs.CRS.values'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.Env.is_credentialized'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.Env.can_credentialize_on_enter'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.Env.credentialize'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.Env.drivers'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.GDALVersion.at_least'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.GDALVersion.from_string'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.env.GDALVersion.runtime'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.affine'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.block_shapes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.closed'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.colorinterp'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.compression'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.count'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.descriptions'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.driver'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.dtypes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.files'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.height'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.indexes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.interleaving'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.is_tiled'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.kwds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.mask_flag_enums'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.mask_flags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.meta'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.mode'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.name'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.nodata'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.options'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.photometric'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.profile'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.res'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.shape'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.subdatasets'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.units'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.width'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.block_size'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.block_window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.block_windows'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.build_overviews'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.checksum'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.close'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.colormap'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.dataset_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.get_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.get_gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.get_nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.get_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.index'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.lnglat'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.overviews'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.read'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.read_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.read_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.read_masks'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.read_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.sample'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.set_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.set_description'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.set_gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.set_nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.set_units'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.start'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.stop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.tags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.update_tags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.window_bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.window_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.write'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.write_band'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.write_colormap'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.write_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.write_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.BufferedDatasetWriter.xy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.affine'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.block_shapes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.closed'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.colorinterp'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.compression'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.count'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.descriptions'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.driver'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.dtypes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.files'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.height'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.indexes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.interleaving'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.is_tiled'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.kwds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.mask_flag_enums'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.mask_flags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.meta'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.mode'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.name'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.nodata'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.options'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.photometric'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.profile'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.res'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.shape'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.subdatasets'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.units'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.width'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.block_size'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.block_window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.block_windows'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.checksum'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.close'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.colormap'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.dataset_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.get_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.get_gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.get_nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.get_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.index'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.lnglat'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.overviews'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.read'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.read_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.read_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.read_masks'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.read_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.sample'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.stop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.tags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.window_bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.window_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetReader.xy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.affine'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.block_shapes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.closed'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.colorinterp'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.compression'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.count'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.descriptions'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.driver'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.dtypes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.files'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.height'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.indexes'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.interleaving'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.is_tiled'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.kwds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.mask_flag_enums'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.mask_flags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.meta'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.mode'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.name'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.nodata'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.options'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.photometric'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.profile'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.res'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.shape'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.subdatasets'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.units'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.width'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.block_size'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.block_window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.block_windows'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.build_overviews'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.checksum'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.close'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.colormap'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.dataset_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.get_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.get_gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.get_nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.get_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.index'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.lnglat'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.overviews'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.read'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.read_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.read_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.read_masks'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.read_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.sample'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.set_crs'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.set_description'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.set_gcps'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.set_nodatavals'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.set_units'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.start'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.stop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.tags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.update_tags'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.window_bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.window_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.write'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.write_band'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.write_colormap'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.write_mask'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.write_transform'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.DatasetWriter.xy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.close'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.exists'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.getbuffer'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.open'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.read'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.seek'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.tell'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.MemoryFile.write'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.close'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.exists'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.getbuffer'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.open'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.read'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.seek'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.tell'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.io.ZipMemoryFile.write'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.__call__'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.clear'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.copy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.fromkeys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.get'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.items'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.keys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.pop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.popitem'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.setdefault'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.update'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.DefaultGTiffProfile.values'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.__call__'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.clear'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.copy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.fromkeys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.get'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.items'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.keys'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.pop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.popitem'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.setdefault'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.update'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.profiles.Profile.values'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.transform.TransformMethodsMixin.index'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.transform.TransformMethodsMixin.xy'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.crop'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.flatten'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.from_offlen'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.from_ranges'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.from_slices'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.intersection'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.round_lengths'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.round_offsets'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.round_shape'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.todict'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.toranges'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.Window.toslices'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.WindowMethodsMixin.window'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.WindowMethodsMixin.window_bounds'\r\n/Users/wursterk/code/rasterio/docs/index.rst:: WARNING: toctree contains reference to nonexisting document 'api/rasterio.windows.WindowMethodsMixin.window_transform'\r\ngenerating indices... genindex py-modindex\r\nhighlighting module code... [100%] rasterio.vrt                                    \r\nwriting additional pages... search\r\ncopying static files... WARNING: html_static_path entry '/Users/wursterk/code/rasterio/docs/_static' does not exist\r\ndone\r\ncopying extra files... done\r\ndumping search index in English (code: en) ... done\r\ndumping object inventory... done\r\nbuild succeeded, 310 warnings.\r\ntouch _build/html/.nojekyll\r\n\r\nBuild finished. The HTML pages are in _build/html.\r\n``", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1226", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1226/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1226/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1226/events", "html_url": "https://github.com/mapbox/rasterio/pull/1226", "id": 280177414, "number": 1226, "title": "WIP:use non-square test image", "user": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-07T15:45:22Z", "updated_at": "2017-12-08T15:24:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/1226", "html_url": "https://github.com/mapbox/rasterio/pull/1226", "diff_url": "https://github.com/mapbox/rasterio/pull/1226.diff", "patch_url": "https://github.com/mapbox/rasterio/pull/1226.patch"}, "body": "I have a suspicion that `raster_geometry_mask` with `crop=True` is returning a square image even though the inputs should give a rectangular image.\r\n\r\nIt is only a suspicion yet, but we would not catch this error with our current tests, because we are always using a square input image. \r\n\r\nI think it would be better to use a non-square test image to maybe also detect inconsistencies as discussed in https://github.com/mapbox/rasterio/issues/525 (have not yet checked whether they use this image).\r\n\r\nNB: This PR is only for investigating which tests fail when I just deform the test image.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1226/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1219", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1219/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1219/events", "html_url": "https://github.com/mapbox/rasterio/issues/1219", "id": 279421339, "number": 1219, "title": "windows 2.7 segfaults", "user": {"login": "johanvdw", "id": 868434, "avatar_url": "https://avatars1.githubusercontent.com/u/868434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanvdw", "html_url": "https://github.com/johanvdw", "followers_url": "https://api.github.com/users/johanvdw/followers", "following_url": "https://api.github.com/users/johanvdw/following{/other_user}", "gists_url": "https://api.github.com/users/johanvdw/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanvdw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanvdw/subscriptions", "organizations_url": "https://api.github.com/users/johanvdw/orgs", "repos_url": "https://api.github.com/users/johanvdw/repos", "events_url": "https://api.github.com/users/johanvdw/events{/privacy}", "received_events_url": "https://api.github.com/users/johanvdw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-05T15:39:47Z", "updated_at": "2018-01-11T21:16:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The following script causes a segfault when run in python 2.7 with version 1.0.0a12:\r\n```\r\nimport rasterio\r\nimport numpy as np\r\nimport affine\r\n\r\nband = np.zeros((5, 5))\r\n\r\ntransform = affine.Affine(25, 0, 1000, 0, -25, 1000)\r\n\r\nwith rasterio.open(\"temp.tif\", \"w\", width=5, height=5, driver=\"GTiff\",\r\n                   count=1, transform=transform, dtype=\"uint8\") as dst:\r\n    dst.write(band, 1)\r\n```\r\n\r\nI have reported similar issues here: https://github.com/conda-forge/rasterio-feedstock/issues/44", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1214", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1214/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1214/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1214/events", "html_url": "https://github.com/mapbox/rasterio/issues/1214", "id": 277924367, "number": 1214, "title": "Add Cloud Optimized GeoTIFF profile", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64167170, "url": "https://api.github.com/repos/mapbox/rasterio/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 351216675, "url": "https://api.github.com/repos/mapbox/rasterio/labels/good%20first%20issue", "name": "good first issue", "color": "0e8a16", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-29T22:04:47Z", "updated_at": "2017-11-29T22:04:47Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Relates to #987\r\n\r\nAdd a `rasterio.profile` for Cloud [Optimized GeoTIFF](http://www.cogeo.org/) to make producing compliant images easier.  GDAL includes a [validation script](https://github.com/OSGeo/gdal/blob/b9f7526103b961f8fec87acb75743b1cad14fed3/gdal/swig/python/samples/validate_cloud_optimized_geotiff.py) we can use for testing.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1214/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1206", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1206/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1206/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1206/events", "html_url": "https://github.com/mapbox/rasterio/issues/1206", "id": 276593067, "number": 1206, "title": "WarpedVRT resampling behavior", "user": {"login": "ungarj", "id": 3802285, "avatar_url": "https://avatars3.githubusercontent.com/u/3802285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ungarj", "html_url": "https://github.com/ungarj", "followers_url": "https://api.github.com/users/ungarj/followers", "following_url": "https://api.github.com/users/ungarj/following{/other_user}", "gists_url": "https://api.github.com/users/ungarj/gists{/gist_id}", "starred_url": "https://api.github.com/users/ungarj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ungarj/subscriptions", "organizations_url": "https://api.github.com/users/ungarj/orgs", "repos_url": "https://api.github.com/users/ungarj/repos", "events_url": "https://api.github.com/users/ungarj/events{/privacy}", "received_events_url": "https://api.github.com/users/ungarj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-24T11:41:31Z", "updated_at": "2017-12-20T18:39:05Z", "closed_at": null, "author_association": "NONE", "body": "``WarpedVRT`` shows unexpected behavior when using other resampling methods than ``Resampling.nearest``.\r\n\r\n## Expected behavior and actual behavior.\r\n\r\n``Resampling.bilinear`` returns the same output than ``Resampling.nearest``. However, when resampling with GDAL, the output image is smoothed.\r\n\r\nGDAL bilinear:\r\n![gdal_bilinear](https://user-images.githubusercontent.com/3802285/33208787-3dc1029a-d113-11e7-80a7-bf918cdcb5fb.jpg)\r\n\r\n``Resampling.nearest``:\r\n![rio_nearest](https://user-images.githubusercontent.com/3802285/33208785-3d86cf3a-d113-11e7-8473-ff010bee37d1.jpg)\r\n\r\n``Resampling.bilinear``:\r\n![rio_bilinear](https://user-images.githubusercontent.com/3802285/33208786-3da0bbb6-d113-11e7-9c9b-5b188b9e1910.jpg)\r\n\r\n## Steps to reproduce the problem.\r\n\r\nHere is a zip file containing the example data (a CleanTOPO extract) and the script that reproduces all outputs: [warpedvrt_resampling.zip](https://github.com/mapbox/rasterio/files/1501490/warpedvrt_resampling.zip)\r\n\r\nthis is the code snipped that reads and resamples the window:\r\n```\r\n    with rasterio.open(input_file, \"r\") as src:\r\n        with WarpedVRT(src, dst_crs=tile.crs, resampling=Resampling.bilinear) as vrt:\r\n            bilinear = vrt.read(\r\n                window=vrt.window(*tile.bounds()),\r\n                out_shape=tile.shape(),\r\n                indexes=1\r\n            )\r\n```\r\nNot sure whether I used all of the parameters correctly. I used the [example](https://mapbox.github.io/rasterio/topics/virtual-warping.html) from the docs.\r\n\r\n## Operating system\r\n\r\nUbuntu 16.04\r\n\r\n## Rasterio version and provenance\r\n\r\n1.0a11 installed from PyPI using pip 9.0.1, using Python 2.7\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1204", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1204/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1204/events", "html_url": "https://github.com/mapbox/rasterio/issues/1204", "id": 275504560, "number": 1204, "title": "Create a mapbox/rasterio team to use GitHub discussions", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 351216296, "url": "https://api.github.com/repos/mapbox/rasterio/labels/admin", "name": "admin", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-20T21:27:38Z", "updated_at": "2017-11-20T21:31:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "We've got nothing quite like GDAL's gdal-dev, but maybe this will be enough: https://github.com/blog/2471-introducing-team-discussions.\r\n\r\nThoughts? Any reservations or concerns @geowurster @brendan-ward @perrygeo ?", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1204/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1203", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1203/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1203/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1203/events", "html_url": "https://github.com/mapbox/rasterio/issues/1203", "id": 275433910, "number": 1203, "title": "Omitting 'driver' when creating a new image does not produce a helpful error", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 351216675, "url": "https://api.github.com/repos/mapbox/rasterio/labels/good%20first%20issue", "name": "good first issue", "color": "0e8a16", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-20T17:18:48Z", "updated_at": "2017-11-20T17:18:48Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "## Expected behavior and actual behavior.\r\n\r\nAttempting to create an image without a driver produces a cryptic error that does not inform the user of the underlying problem.\r\n\r\n```console\r\nTraceback (most recent call last):\r\n  File \"buh.py\", line 12, in <module>\r\n    with rio.open('image.tif', 'w', **profile) as dst:\r\n  File \"/Users/kevin.wurster/code/rasterio/rasterio/__init__.py\", line 248, in open\r\n    s = get_writer_for_driver(driver)(fp, mode, driver=driver,\r\n  File \"/Users/kevin.wurster/code/rasterio/rasterio/io.py\", line 163, in get_writer_for_driver\r\n    if driver_can_create(driver):\r\n  File \"rasterio/_base.pyx\", line 102, in rasterio._base.driver_can_create (rasterio/_base.c:3871)\r\n    return driver_supports_mode(drivername, 'DCAP_CREATE')\r\n  File \"rasterio/_base.pyx\", line 85, in rasterio._base.driver_supports_mode (rasterio/_base.c:3586)\r\n    drivername = drivername.encode('utf-8')\r\nAttributeError: 'NoneType' object has no attribute 'encode'\r\n```\r\n\r\n## Steps to reproduce the problem.\r\n\r\n```python\r\nimport rasterio as rio\r\n\r\nprofile = {\r\n    'height': 1,\r\n    'width': 1,\r\n    'count': 1,\r\n    'nodata': None,\r\n    'dtype': rio.uint8,\r\n}\r\n\r\n\r\nwith rio.open('image.tif', 'w', **profile) as dst:\r\n    pass\r\n```\r\n\r\nAdding `driver='GTiff'` creates the image without issue.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1199", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1199/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1199/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1199/events", "html_url": "https://github.com/mapbox/rasterio/issues/1199", "id": 273578494, "number": 1199, "title": "Can rasterio coordinates be non rectilinear?", "user": {"login": "fmaussion", "id": 10050469, "avatar_url": "https://avatars3.githubusercontent.com/u/10050469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmaussion", "html_url": "https://github.com/fmaussion", "followers_url": "https://api.github.com/users/fmaussion/followers", "following_url": "https://api.github.com/users/fmaussion/following{/other_user}", "gists_url": "https://api.github.com/users/fmaussion/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmaussion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmaussion/subscriptions", "organizations_url": "https://api.github.com/users/fmaussion/orgs", "repos_url": "https://api.github.com/users/fmaussion/repos", "events_url": "https://api.github.com/users/fmaussion/events{/privacy}", "received_events_url": "https://api.github.com/users/fmaussion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-13T21:09:22Z", "updated_at": "2017-11-13T21:09:22Z", "closed_at": null, "author_association": "NONE", "body": "We are currently trying to [fix a bug](https://github.com/pydata/xarray/pull/1712) in xarray's rasterio backend.  \r\n\r\nTo compute the dataset's cartesian coordinates, I'm replacing the current error prone homegrown code with the following:\r\n\r\n```python\r\nif LooseVersion(rasterio.__version__) < '1.0':\r\n    transform = riods.affine\r\nelse:\r\n    transform = riods.transform\r\nnx, ny = riods.width, riods.height\r\nif transform.is_rectilinear:\r\n    # Coordinates are 1D\r\n    # xarray's convention is to have pixel center coordinates\r\n    x, _ = (np.arange(nx)+0.5, np.zeros(nx)+0.5) * transform\r\n    _, y = (np.zeros(ny)+0.5, np.arange(ny)+0.5) * transform\r\nelse:\r\n    # Can this happen?\r\n```\r\n\r\nI have two questions: \r\n- is the code above OK? It works for my use cases, but I'm not sure it's working for *all* uses cases. \r\n- can files opened by rasterio have non-rectilinear (i.e.: 2D) coordinates? I never encountered one, and none of the test files on the rasterio repository has non-rectilinear coordinates, but I thought I'd rather ask here...\r\n\r\nThanks!\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1198", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1198/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1198/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1198/events", "html_url": "https://github.com/mapbox/rasterio/issues/1198", "id": 273185399, "number": 1198, "title": "VRT format to create an image stack and read a time series", "user": {"login": "sebhahn", "id": 5929935, "avatar_url": "https://avatars3.githubusercontent.com/u/5929935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhahn", "html_url": "https://github.com/sebhahn", "followers_url": "https://api.github.com/users/sebhahn/followers", "following_url": "https://api.github.com/users/sebhahn/following{/other_user}", "gists_url": "https://api.github.com/users/sebhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhahn/subscriptions", "organizations_url": "https://api.github.com/users/sebhahn/orgs", "repos_url": "https://api.github.com/users/sebhahn/repos", "events_url": "https://api.github.com/users/sebhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-11T23:40:50Z", "updated_at": "2017-11-11T23:47:10Z", "closed_at": null, "author_association": "NONE", "body": "I was going through the rasterio documentation and found the class 'rasterio.vrt.WarpedVRT`. However, I'm not sure if this is what I'm looking for. In my use case I would like to read a certain subset of many raster files (i.e. basically a time series from an image stack). Is this supported at the moment in rasterio?", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1197", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1197/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1197/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1197/events", "html_url": "https://github.com/mapbox/rasterio/issues/1197", "id": 273055126, "number": 1197, "title": "Document shim module strategy", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 86183081, "url": "https://api.github.com/repos/mapbox/rasterio/labels/docs", "name": "docs", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/8", "html_url": "https://github.com/mapbox/rasterio/milestone/8", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/8/labels", "id": 686337, "number": 8, "title": "1.0", "description": null, "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 29, "closed_issues": 179, "state": "open", "created_at": "2014-06-10T00:10:13Z", "updated_at": "2018-01-11T22:28:40Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-11-10T20:49:42Z", "updated_at": "2017-11-10T20:49:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "A follow up to my work on #1196. The design of the GDAL shim modules and the source juggling in setup.py is under-documented. It's testament to your ingenuity if you can figure out how to contribute to this part of Rasterio.\r\n\r\nI'm on the hook for documenting this in our contributing doc and elsewhere at 1.0.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1191", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1191/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1191/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1191/events", "html_url": "https://github.com/mapbox/rasterio/issues/1191", "id": 270414211, "number": 1191, "title": "Sidecar masks are lost when using WarpedVRTs", "user": {"login": "mojodna", "id": 45, "avatar_url": "https://avatars2.githubusercontent.com/u/45?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojodna", "html_url": "https://github.com/mojodna", "followers_url": "https://api.github.com/users/mojodna/followers", "following_url": "https://api.github.com/users/mojodna/following{/other_user}", "gists_url": "https://api.github.com/users/mojodna/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojodna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojodna/subscriptions", "organizations_url": "https://api.github.com/users/mojodna/orgs", "repos_url": "https://api.github.com/users/mojodna/repos", "events_url": "https://api.github.com/users/mojodna/events{/privacy}", "received_events_url": "https://api.github.com/users/mojodna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T18:57:35Z", "updated_at": "2017-11-16T20:38:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "**Version**: `51968aee58101d6fb264dfd4e13008a6ee3f3adb` (`master` post `1.0a11`)\r\n\r\nSidecar masks (`.msk`) are ignored when the source is wrapped in a `WarpedVRT`, probably because we're not doing anything special to preserve / mark them (in the same way that an XML VRT would).\r\n\r\nFailing test:\r\n\r\n```diff\r\ndiff --git i/tests/test_band_masks.py w/tests/test_band_masks.py\r\nindex f6cf3ac..fdd248d 100644\r\n--- i/tests/test_band_masks.py\r\n+++ w/tests/test_band_masks.py\r\n@@ -6,8 +6,11 @@ import numpy as np\r\n import pytest\r\n \r\n import rasterio\r\n+from rasterio import warp\r\n+from rasterio.crs import CRS\r\n from rasterio.enums import MaskFlags\r\n from rasterio.errors import NodataShadowWarning, RasterioDeprecationWarning\r\n+from rasterio.vrt import WarpedVRT\r\n \r\n \r\n @pytest.fixture(scope='function')\r\n@@ -175,3 +176,30 @@ def test_masking_sidecar_mask(tiffs):\r\n         assert r.mask.all()\r\n         masks = src.read_masks()\r\n         assert not masks.any()\r\n+\r\n+\r\n+def test_masking_vrt_sidecar_mask(tiffs):\r\n+    # If the dataset has a .msk sidecar mask band file, all masks will\r\n+    # be derived from that file.\r\n+    with rasterio.open(str(tiffs.join('sidecar-masked.tif'))) as src:\r\n+        dst_crs = CRS.from_epsg(4326)\r\n+        transform, dst_width, dst_height = warp.calculate_default_transform(\r\n+            src.crs, dst_crs, src.width, src.height, *src.bounds)\r\n+\r\n+        with WarpedVRT(\r\n+                src,\r\n+                dst_crs=dst_crs,\r\n+                dst_width=dst_width,\r\n+                dst_height=dst_height,\r\n+                dst_transform=transform) as vrt:\r\n+\r\n+            for flags in vrt.mask_flag_enums:\r\n+                assert MaskFlags.per_dataset in flags\r\n+                assert MaskFlags.alpha not in flags\r\n+                assert MaskFlags.nodata not in flags\r\n+            rgb = vrt.read(masked=True)\r\n+            assert rgb.mask.all()\r\n+            r = vrt.read(1, masked=True)\r\n+            assert r.mask.all()\r\n+            masks = vrt.read_masks()\r\n+            assert not masks.any()\r\n```\r\n\r\nTest output:\r\n\r\n```\r\n________________________________________ test_masking_vrt_sidecar_mask _________________________________________\r\n\r\ntiffs = local('/tmp/pytest-of-root/pytest-1/test_masking_vrt_sidecar_mask0')\r\n\r\n    def test_masking_vrt_sidecar_mask(tiffs):\r\n        # If the dataset has a .msk sidecar mask band file, all masks will\r\n        # be derived from that file.\r\n        with rasterio.open(str(tiffs.join('sidecar-masked.tif'))) as src:\r\n            dst_crs = CRS.from_epsg(4326)\r\n            transform, dst_width, dst_height = warp.calculate_default_transform(\r\n                src.crs, dst_crs, src.width, src.height, *src.bounds)\r\n\r\n            with WarpedVRT(\r\n                    src,\r\n                    dst_crs=dst_crs,\r\n                    dst_width=dst_width,\r\n                    dst_height=dst_height,\r\n                    dst_transform=transform) as vrt:\r\n\r\n                for flags in vrt.mask_flag_enums:\r\n>                   assert MaskFlags.per_dataset in flags\r\nE                   assert <MaskFlags.per_dataset: 2> in [<MaskFlags.all_valid: 1>]\r\nE                    +  where <MaskFlags.per_dataset: 2> = MaskFlags.per_dataset\r\n\r\ntests/test_band_masks.py:197: AssertionError\r\n```", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1190", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1190/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1190/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1190/events", "html_url": "https://github.com/mapbox/rasterio/issues/1190", "id": 270401443, "number": 1190, "title": "URLs and schemes for Rasterio 1.0", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-01T18:16:02Z", "updated_at": "2017-11-09T23:39:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'd like to update https://github.com/mapbox/rasterio/blob/master/docs/switch.rst#dataset-identifiers for 1.0 and want to run this by everyone before I do. Feedback, please \ud83d\ude4f \r\n\r\n## Datasets in local files\r\n\r\n### Rasterio\r\n\r\n`path/to/file.tif`\r\n\r\nor equivalently\r\n\r\n`file://path/to/file.tif`\r\n\r\n### GDAL translation\r\n\r\n`path/to/file.tif`\r\n\r\n## Datasets within a local zip file\r\n\r\n### Rasterio\r\n\r\nSee https://commons.apache.org/proper/commons-vfs/filesystems.html#Zip_Jar_and_Tar.\r\n\r\n`zip://path/to/file.zip!/folder/file.tif`\r\n\r\nor equivalently\r\n\r\n`zip+file://path/to/file.zip!/folder/file.tif`\r\n\r\n### GDAL translation\r\n\r\n`/vsizip/path/to/file.zip/folder/file.tif`\r\n\r\n## Datasets on the web\r\n\r\n### Rasterio\r\n\r\n`https://example.com/file.tif`\r\n\r\n### GDAL translation\r\n\r\n`/vsicurl/https://example.com/file.tif`\r\n\r\n## Datasets within a zip file on the web\r\n\r\n### Rasterio\r\n\r\nA variation on https://commons.apache.org/proper/commons-vfs/filesystems.html#Zip_Jar_and_Tar. The `protocol+https` pattern (see https://pip.pypa.io/en/stable/reference/pip_install/#git, https://docs.npmjs.com/cli/install) seems to have won out on the web over Apache's `protocol:https`.\r\n\r\n`zip+https://example.com/file.tif&p=x&q=y!/folder/file.tif`\r\n\r\n### GDAL translation\r\n\r\n`/vsizip/{/vsicurl/https://example.com/file.tif&p=x&q=y}/folder/file.tif`", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1190/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1187", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1187/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1187/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1187/events", "html_url": "https://github.com/mapbox/rasterio/issues/1187", "id": 270183640, "number": 1187, "title": "Isolate test files", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 351216675, "url": "https://api.github.com/repos/mapbox/rasterio/labels/good%20first%20issue", "name": "good first issue", "color": "0e8a16", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-01T03:34:00Z", "updated_at": "2017-11-01T03:34:00Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "I learned a lot about `GDALPAMDataset()` in https://github.com/mapbox/rasterio/pull/1134 and the unexpected pains it can introduce when testing against the same file.  One way we can guard ourselves from unexpected behavior is to have all of our `pytest` fixtures copy files from `tests/data` every time they execute.  This copy must be performed with Python's `shutil.copy()` function as using GDAL can trigger a PAM (`.aux.xml`) file to be written.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1187/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1181", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1181/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1181/events", "html_url": "https://github.com/mapbox/rasterio/issues/1181", "id": 268578927, "number": 1181, "title": "Deprecate '-f' for '--force-overwrite' and '--force-overwrite' in favor of '--overwrite'", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 114854931, "url": "https://api.github.com/repos/mapbox/rasterio/labels/cli", "name": "cli", "color": "d4c5f9", "default": false}, {"id": 351216675, "url": "https://api.github.com/repos/mapbox/rasterio/labels/good%20first%20issue", "name": "good first issue", "color": "0e8a16", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/8", "html_url": "https://github.com/mapbox/rasterio/milestone/8", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/8/labels", "id": 686337, "number": 8, "title": "1.0", "description": null, "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 29, "closed_issues": 179, "state": "open", "created_at": "2014-06-10T00:10:13Z", "updated_at": "2018-01-11T22:28:40Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-10-25T23:05:42Z", "updated_at": "2017-10-25T23:06:03Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "See https://github.com/mapbox/rasterio/pull/1173#discussion_r144642158 for background.  We have `-f` for `--format`, but also `--force-overwrite`.  The plan is to:\r\n\r\n- Deprecate the use of `-f` as a short option for `--force-overwrite` as `-f` is a better short option for `--format`.\r\n- Deprecate `--force-overwrite`.\r\n- Add the more universal `--overwrite`.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1178", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1178/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1178/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1178/events", "html_url": "https://github.com/mapbox/rasterio/issues/1178", "id": 266674547, "number": 1178, "title": "'src.dataset_mask()' ignores alpha band when more than 4 bands are present", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 346458805, "url": "https://api.github.com/repos/mapbox/rasterio/labels/GDAL", "name": "GDAL", "color": "c7def8", "default": false}, {"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-18T23:29:02Z", "updated_at": "2017-10-23T23:47:02Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Given a 5 band image where the last band is a valid alpha band, `src.dataset_mask()` will entirely ignore the alpha band and produce a completely unmasked array.\r\n\r\nHere's what's happening:\r\n\r\n1. Create a 5 band image.\r\n2. Write different constant values to bands 1 through 4.\r\n3. Write an alpha band to band 5 that only has a transparent 3 x 3 square in the upper left corner.\r\n4. Force the color interpretation of the file's 5th band to be alpha.\r\n5. Generate a mask with `src.dataset_mask()` and drop that in a new file.\r\n6. Write only the alpha band to a new file.\r\n7. Compare alpha band file to `src.dataset_mask()`.  The latter should be entirely transparent.\r\n\r\n```\r\nfrom osgeo import gdal\r\n\r\nimport numpy as np\r\nimport rasterio as rio\r\n\r\n\r\ndsm_input = 'dsm-input.tif'\r\nalpha_file = 'alpha.tif'\r\nds_mask_file = 'dataset-mask.tif'\r\n\r\n# GDALPAMDataset can get weird.  Make sure none of the test files exist.\r\nfor path in [dsm_input, alpha_file, ds_mask_file]:\r\n    try:\r\n        gdal.Unlink(path)\r\n    except:\r\n        pass\r\n\r\n\r\nprofile = {\r\n    'driver': 'GTiff',\r\n    'height': 10,\r\n    'width': 10,\r\n    'count': 5,\r\n    'dtype': rio.ubyte,\r\n}\r\nwith rio.open(dsm_input, 'w', **profile) as dst:\r\n    data = np.zeros(dst.shape, dtype=profile['dtype'])\r\n    \r\n    # Write a constant value to each band.\r\n    dst.write(data + 1, 1)\r\n    dst.write(data + 2, 2)\r\n    dst.write(data + 3, 3)\r\n    dst.write(data + 4, 4)\r\n    \r\n    # Make a 3x3 square in the upper left corner transparent.\r\n    alpha = np.zeros(dst.shape, dtype=profile['dtype'])\r\n    alpha[:3, :3] = 255\r\n    dst.write(alpha, 5)\r\n\r\n\r\n# Force last band to be alpha.  This may create a '.aux.xml' to set the\r\n# new color interpreation.  That's fine.\r\nds = gdal.Open(dsm_input, gdal.GA_Update)\r\nband = ds.GetRasterBand(5)\r\nband.SetColorInterpretation(gdal.GCI_AlphaBand)\r\nband = None\r\nds = None\r\n\r\n\r\nwith rio.open(dsm_input) as src:\r\n        \r\n    profile = src.profile.copy()\r\n    profile['count'] = 1\r\n    \r\n    # Write the output of 'src.dataset_mask()' and just the alpha band\r\n    with rio.open(ds_mask_file, 'w', **profile) as dst:\r\n        dst.write(src.dataset_mask(), 1)\r\n    \r\n    # Copy just the alpha band to a new file\r\n    with rio.open(alpha_file, 'w', **profile) as dst:\r\n        dst.write(src.read(5), 1)\r\n```", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1175", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1175/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1175/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1175/events", "html_url": "https://github.com/mapbox/rasterio/issues/1175", "id": 265512028, "number": 1175, "title": "Replace 'src.set_*()' methods with getter/setter properties", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 391922171, "url": "https://api.github.com/repos/mapbox/rasterio/labels/API-change", "name": "API-change", "color": "5319e7", "default": false}, {"id": 346458805, "url": "https://api.github.com/repos/mapbox/rasterio/labels/GDAL", "name": "GDAL", "color": "c7def8", "default": false}, {"id": 351223620, "url": "https://api.github.com/repos/mapbox/rasterio/labels/cython", "name": "cython", "color": "006b75", "default": false}, {"id": 64167170, "url": "https://api.github.com/repos/mapbox/rasterio/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/8", "html_url": "https://github.com/mapbox/rasterio/milestone/8", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/8/labels", "id": 686337, "number": 8, "title": "1.0", "description": null, "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 29, "closed_issues": 179, "state": "open", "created_at": "2014-06-10T00:10:13Z", "updated_at": "2018-01-11T22:28:40Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-10-14T18:16:37Z", "updated_at": "2017-10-14T18:16:37Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Like `src.colorinterp() -> src.colorinterp` in https://github.com/mapbox/rasterio/pull/1134.  A quick search shows these:\r\n\r\n```\r\n$ git grep \"def set_\"\r\nrasterio/_env.pyx:cpdef set_gdal_config(key, val, normalize=True):\r\nrasterio/_io.pyx:    def set_crs(self, crs):\r\nrasterio/_io.pyx:    def set_nodatavals(self, vals):\r\nrasterio/_io.pyx:    def set_description(self, bidx, value):\r\nrasterio/_io.pyx:    def set_units(self, bidx, value):\r\nrasterio/_io.pyx:    def set_gcps(self, gcps, crs=None):\r\n```\r\n\r\nLooks like `src.gcps` might be a bit harder.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1170", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1170/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1170/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1170/events", "html_url": "https://github.com/mapbox/rasterio/issues/1170", "id": 264753020, "number": 1170, "title": "transform_geom() not properly catching NULL", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 346458805, "url": "https://api.github.com/repos/mapbox/rasterio/labels/GDAL", "name": "GDAL", "color": "c7def8", "default": false}, {"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 351223620, "url": "https://api.github.com/repos/mapbox/rasterio/labels/cython", "name": "cython", "color": "006b75", "default": false}, {"id": 602660531, "url": "https://api.github.com/repos/mapbox/rasterio/labels/env", "name": "env", "color": "7ccc8d", "default": false}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/8", "html_url": "https://github.com/mapbox/rasterio/milestone/8", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/8/labels", "id": 686337, "number": 8, "title": "1.0", "description": null, "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 29, "closed_issues": 179, "state": "open", "created_at": "2014-06-10T00:10:13Z", "updated_at": "2018-01-11T22:28:40Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-10-11T22:12:46Z", "updated_at": "2017-10-13T00:56:49Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "I haven't dug into the code, but it looks like we're not catching a `NULL` somewhere in `transform_geom()` in some cases.\r\n\r\nSample code:\r\n\r\n```python\r\nimport rasterio as rio\r\nfrom rasterio.warp import transform, transform_geom\r\n\r\n\r\n# A polygon around 180, 90 with a single point falling outside the bounds\r\n# of EPSG:4326.\r\ngeom = {\r\n    'type': 'Polygon',\r\n    'coordinates': [[\r\n        [178, 83],\r\n        [178, 84],\r\n        [181, 91],  # Out of bounds\r\n        [179, 83],\r\n        [178, 83]\r\n    ]]\r\n}\r\n\r\n\r\n# Everything is fine.  Only 3 out of 4 points are reprojected as expected.\r\nprint(\"---> rasterio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=True)\")\r\nwith rio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=True):\r\n    reproj = transform_geom('EPSG:4326', 'EPSG:3857', geom)\r\n\r\n\r\n# A SystemError\r\nprint(\"---> rasterio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=False)\")\r\ntry:\r\n    with rio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=False):\r\n        reproj = transform_geom('EPSG:4326', 'EPSG:3857', geom)\r\nexcept SystemError as e:\r\n    print(str(e))\r\n\r\n\r\n# Error handler picks up the error\r\nprint(\"---> Default rasterio.Env(), which has OGR_ENABLE_PARTIAL_REPROJECTION=False\")\r\ntry:\r\n    reproj = transform_geom('EPSG:4326', 'EPSG:3857', geom)\r\nexcept Exception as e:\r\n    print(str(e))\r\n```\r\n\r\nproduces:\r\n\r\n```\r\n---> rasterio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=True)\r\n---> rasterio.Env(OGR_ENABLE_PARTIAL_REPROJECTION=False)\r\n<built-in function _transform_geom> returned NULL without setting an error\r\n---> Default rasterio.Env(), which has OGR_ENABLE_PARTIAL_REPROJECTION=False\r\nFull reprojection failed, but partial is possible if you define OGR_ENABLE_PARTIAL_REPROJECTION configuration option to TRUE\r\n```\r\n\r\nThe second and third test cases both use `OGR_ENABLE_PARTIAL_REPROJECTION=False`, but an error is triggered in the second that is not in the third.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1159", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1159/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1159/events", "html_url": "https://github.com/mapbox/rasterio/issues/1159", "id": 261336504, "number": 1159, "title": "vsis3 write capabilities", "user": {"login": "four43", "id": 517006, "avatar_url": "https://avatars1.githubusercontent.com/u/517006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/four43", "html_url": "https://github.com/four43", "followers_url": "https://api.github.com/users/four43/followers", "following_url": "https://api.github.com/users/four43/following{/other_user}", "gists_url": "https://api.github.com/users/four43/gists{/gist_id}", "starred_url": "https://api.github.com/users/four43/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/four43/subscriptions", "organizations_url": "https://api.github.com/users/four43/orgs", "repos_url": "https://api.github.com/users/four43/repos", "events_url": "https://api.github.com/users/four43/events{/privacy}", "received_events_url": "https://api.github.com/users/four43/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-28T14:20:57Z", "updated_at": "2018-01-17T08:05:49Z", "closed_at": null, "author_association": "NONE", "body": "This is an enhancement. I have been searching around and haven't been able to find any docs or explanation of this issue. It would be great if direct S3 writing was possible. According to this announcement it's supported by the /vsis3/ handler: \r\n\r\nhttps://lists.osgeo.org/pipermail/gdal-dev/2015-October/042975.html\r\n\r\nSequential writing only which I understand could be kind of a pain to enforce/clunky. In Rasterio, it looks like here a type error is explicitly raised: \r\n\r\nhttps://github.com/mapbox/rasterio/blob/master/rasterio/_io.pyx#L942\r\n\r\nThat seems like kind of an anti pattern. Instead of forcing an error for that feature could you try the write, then bubble up the error from the underlying VFS? I could totally be looking in the wrong place, but that's where I found my error was generated.\r\n\r\nThis is a great library, thanks for all the effort on it. I can try and help where I can. \r\n\r\nThanks,\r\n-Seth \r\n\r\nEnvironment:\r\n```\r\n$ pip freeze | grep rasterio\r\nrasterio==0.36.0\r\n\r\nGDAL Version 2.2.1\r\n\r\n$ python --version\r\nPython 3.5.2\r\n\r\n$ uname -a\r\nLinux seth-ws 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n```", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1159/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1157", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1157/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1157/events", "html_url": "https://github.com/mapbox/rasterio/issues/1157", "id": 259913839, "number": 1157, "title": "CLI calc to consider NoData values; CLI warp to clear NoData values?", "user": {"login": "arthur-e", "id": 1211103, "avatar_url": "https://avatars3.githubusercontent.com/u/1211103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthur-e", "html_url": "https://github.com/arthur-e", "followers_url": "https://api.github.com/users/arthur-e/followers", "following_url": "https://api.github.com/users/arthur-e/following{/other_user}", "gists_url": "https://api.github.com/users/arthur-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthur-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthur-e/subscriptions", "organizations_url": "https://api.github.com/users/arthur-e/orgs", "repos_url": "https://api.github.com/users/arthur-e/repos", "events_url": "https://api.github.com/users/arthur-e/events{/privacy}", "received_events_url": "https://api.github.com/users/arthur-e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-22T19:27:49Z", "updated_at": "2017-10-17T15:11:51Z", "closed_at": null, "author_association": "NONE", "body": "## Feature Request\r\n\r\nI would really like to be able to perform calculations over NoData (and other values) using the CLI `calc` program. Right now (version 0.36.0), it seems like the CLI `calc` program ignores NoData areas. Doubtless this is useful in many cases but it is problematic for other applications (e.g., merging masks). It would be nice if there was a switch to force NoData values to be treated like any other value.\r\n\r\nAlternatively, or perhaps in conjunction with the improvement above, the CLI `warp` tool could allow for the resetting of the NoData value. Right now, it is possible to change the NoData value to a new value, but it is not clear how to clear the NoData value entirely. The GDAL utility gdalwarp, for instance, [allows the NoData value to be unset in the output](http://www.gdal.org/gdalwarp.html).\r\n\r\nThanks for considering!\r\n\r\n## Expected behavior and actual behavior.\r\n\r\nI expected, e.g., a calculation over two binary masks (ones and zeroes everywhere):\r\n\r\n```sh\r\nls *some_files.tiff | xargs rio calc \"(greater (+ (read 1) (read 2)) 0)\" -o output.tiff\r\n```\r\n\r\nTo produce an image where NoData areas remain 0 in the output. But, instead, the NoData areas appear as 1. The NoData values are set to the Landsat convention, -9999.\r\n\r\n## Operating system\r\n\r\nUbuntu 16.04, Python 3\r\n\r\n## Rasterio version and provenance\r\n\r\nrasterio 0.36.0 installed with `pip`\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1151", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1151/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1151/events", "html_url": "https://github.com/mapbox/rasterio/issues/1151", "id": 258599407, "number": 1151, "title": "Map zip+https:// to GDAL /vsizip/vsicurl", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64167170, "url": "https://api.github.com/repos/mapbox/rasterio/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/57", "html_url": "https://github.com/mapbox/rasterio/milestone/57", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/57/labels", "id": 2820680, "number": 57, "title": "post-1.0a10", "description": "", "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 1, "state": "open", "created_at": "2017-10-06T18:44:00Z", "updated_at": "2017-11-20T17:15:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-09-18T19:47:41Z", "updated_at": "2017-11-07T13:39:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "As well as `zip+file://` -> `vsizip` and `zip+s3://` -> `/vsizip/vsis3`.\r\n\r\nSee https://trac.osgeo.org/gdal/wiki/UserDocs/ReadInZip#Complexexamplecombiningwithvsizip.", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1149", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1149/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1149/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1149/events", "html_url": "https://github.com/mapbox/rasterio/issues/1149", "id": 257496542, "number": 1149, "title": "Rasterio's GDAL config value normalization doesn't always work", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 346458805, "url": "https://api.github.com/repos/mapbox/rasterio/labels/GDAL", "name": "GDAL", "color": "c7def8", "default": false}, {"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 351223620, "url": "https://api.github.com/repos/mapbox/rasterio/labels/cython", "name": "cython", "color": "006b75", "default": false}, {"id": 602660531, "url": "https://api.github.com/repos/mapbox/rasterio/labels/env", "name": "env", "color": "7ccc8d", "default": false}, {"id": 351216760, "url": "https://api.github.com/repos/mapbox/rasterio/labels/intermediate", "name": "intermediate", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-13T19:37:16Z", "updated_at": "2017-11-28T23:53:11Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Rasterio normalizes creation options like [`str(v).upper()`](https://github.com/mapbox/rasterio/blob/b69f4c061574952dd78ba924b8b3cc64df1122e0/rasterio/_io.pyx#L1873), which works for strings and ints, but not always for `True` and `False`. \r\n GeoTIFF's `ALPHA` creation option requires [`YES` or `NO`](http://www.gdal.org/frmt_gtiff.html) (and some other strings).  Using `True` results in a 4 band image where photometric interpretation is RGB, but the 4th band's color interpretation is `undefined`.  We normalize config options to [`ON` and `OFF`](https://github.com/mapbox/rasterio/blob/master/rasterio/_env.pyx#L141), but that also won't work for this creation option.  Verified on `1.0a9` and `master`.\r\n\r\nExample:\r\n\r\n```python\r\nimport rasterio\r\n\r\n\r\nprofile = {\r\n    'height': 1,\r\n    'width': 1,\r\n    'dtype': rasterio.uint8,\r\n    'count': 4,\r\n    'driver': 'GTiff',\r\n    'photometric': 'rgb',\r\n    'alpha': True\r\n}\r\n\r\n\r\ntrue_profile = profile.copy()\r\ntrue_profile['alpha'] = True\r\nwith rasterio.open('true.tif', 'w', **true_profile) as dst:\r\n    pass\r\nprint(\"True\")\r\nwith rasterio.open('true.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n\r\n\r\nyes_profile = profile.copy()\r\nyes_profile['alpha'] = 'yes'\r\nwith rasterio.open('yes.tif', 'w', **yes_profile) as dst:\r\n    pass\r\nprint(\"Yes\")\r\nwith rasterio.open('yes.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n\r\n\r\non_profile = profile.copy()\r\non_profile['alpha'] = 'on'\r\nwith rasterio.open('on.tif', 'w', **on_profile) as dst:\r\n    pass\r\nprint(\"On\")\r\nwith rasterio.open('on.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n\r\n\r\nfalse_profile = profile.copy()\r\nfalse_profile['alpha'] = False\r\nprint(\"False\")\r\nwith rasterio.open('false.tif', 'w', **true_profile) as dst:\r\n    pass\r\nwith rasterio.open('false.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n\r\n\r\nno_profile = profile.copy()\r\nno_profile['alpha'] = 'no'\r\nprint(\"No\")\r\nwith rasterio.open('no.tif', 'w', **true_profile) as dst:\r\n    pass\r\nwith rasterio.open('no.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n\r\n\r\noff_profile = profile.copy()\r\noff_profile['alpha'] = 'off'\r\nwith rasterio.open('off.tif', 'w', **on_profile) as dst:\r\n    pass\r\nprint(\"Off\")\r\nwith rasterio.open('off.tif') as src:\r\n    print([src.colorinterp(i) for i in range(1, src.count + 1)])\r\n```\r\n\r\nproduces:\r\n\r\n```python\r\nTrue\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.undefined: 0>]\r\nYes\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.alpha: 6>]\r\nOn\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.undefined: 0>]\r\nFalse\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.undefined: 0>]\r\nNo\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.undefined: 0>]\r\nOff\r\n[<ColorInterp.red: 3>, <ColorInterp.green: 4>, <ColorInterp.blue: 5>, <ColorInterp.undefined: 0>]\r\n```", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1143", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1143/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1143/events", "html_url": "https://github.com/mapbox/rasterio/issues/1143", "id": 256240108, "number": 1143, "title": "Internal rounding within windows.py::round_offsets() and round_lengths() should be optional", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 391922171, "url": "https://api.github.com/repos/mapbox/rasterio/labels/API-change", "name": "API-change", "color": "5319e7", "default": false}, {"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/mapbox/rasterio/milestones/57", "html_url": "https://github.com/mapbox/rasterio/milestone/57", "labels_url": "https://api.github.com/repos/mapbox/rasterio/milestones/57/labels", "id": 2820680, "number": 57, "title": "post-1.0a10", "description": "", "creator": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "open_issues": 16, "closed_issues": 1, "state": "open", "created_at": "2017-10-06T18:44:00Z", "updated_at": "2017-11-20T17:15:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-09-08T12:34:24Z", "updated_at": "2017-10-06T18:44:25Z", "closed_at": null, "author_association": "COLLABORATOR", "body": "Use case:\r\ngiven a floating point window, for example, derived from a polygon intersected with a raster\r\n```\r\nWindow(col_off=1.9999, row_off=1.9999, width=3.001, height=3.001)\r\n```\r\n\r\nWe want to be able to derive the outermost pixel indices that contain that polygon by default:\r\n```\r\nWindow(col_off=1, row_off=1, width=4, height=4)\r\n```\r\nWe can opt-in to rounding if that is desirable for a given use case (e.g., to snap to closest rather than outermost index).\r\n\r\nRight now, `round_offsets()` and `round_lengths()` use internal rounding prior to applying `ceil` or `floor` to a given value:\r\nhttps://github.com/mapbox/rasterio/blob/master/rasterio/windows.py#L601-L603\r\n\r\nSeems like we have 2 options:\r\n1. make the `pixel_precision` parameter optional, default `None`.  Only apply rounding if provided.\r\n2. add a pair of new functions `snap_offsets()` and `snap_lengths()` that apply only `ceil` or `floor` and not internal rounding.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1141", "repository_url": "https://api.github.com/repos/mapbox/rasterio", "labels_url": "https://api.github.com/repos/mapbox/rasterio/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1141/comments", "events_url": "https://api.github.com/repos/mapbox/rasterio/issues/1141/events", "html_url": "https://github.com/mapbox/rasterio/issues/1141", "id": 256012029, "number": 1141, "title": "Error when reading a dataset with window and boundless to a buffer ", "user": {"login": "vincentsarago", "id": 10407788, "avatar_url": "https://avatars2.githubusercontent.com/u/10407788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentsarago", "html_url": "https://github.com/vincentsarago", "followers_url": "https://api.github.com/users/vincentsarago/followers", "following_url": "https://api.github.com/users/vincentsarago/following{/other_user}", "gists_url": "https://api.github.com/users/vincentsarago/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentsarago/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentsarago/subscriptions", "organizations_url": "https://api.github.com/users/vincentsarago/orgs", "repos_url": "https://api.github.com/users/vincentsarago/repos", "events_url": "https://api.github.com/users/vincentsarago/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentsarago/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64167168, "url": "https://api.github.com/repos/mapbox/rasterio/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-07T17:23:34Z", "updated_at": "2017-09-08T13:44:36Z", "closed_at": null, "author_association": "MEMBER", "body": "**Version:** `master (1.0a10)`\r\n\r\nWhen reading window at resolution higher native resolution `src.read` return an error.\r\n\r\n```python\r\ndata = src.read(window=window, \r\n    out_shape=(512, 512), \r\n    indexes=1,  boundless=True)\r\n\r\nValueError: could not broadcast input array from shape (515,515) into shape (512,512)\r\n```\r\n\r\nThis error wasn't present in rasterio `1.0a9`. I believe the error is happening somewhere here\r\nhttps://github.com/mapbox/rasterio/blob/6fc3ab334200920819dc2ae063c7845988bcd9fc/rasterio/_io.pyx#L336-L347\r\n\r\nThe major change I'm seing between `1.0a9` to `1.0a10` is the window overlap calculation : https://github.com/mapbox/rasterio/blob/6fc3ab334200920819dc2ae063c7845988bcd9fc/rasterio/_io.pyx#L324-L325\r\n\r\nthat could have an impact on https://github.com/mapbox/rasterio/blob/6fc3ab334200920819dc2ae063c7845988bcd9fc/rasterio/_io.pyx#L342-L344\r\n\r\nThe issue is summarized in this [notebook](https://gist.github.com/vincentsarago/e7e0ec1edf4732108c7ef27deca0a5d5)\r\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/1141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "c075358b162298074db10054411553e2d845ae3b", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2018-01-11T17:43:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-11T17:43:51Z"}, "message": "Merge pull request #1245 from mapbox/issue1217\n\nUse enum for rasterize merge algorithm", "tree": {"sha": "e279e5053696d1de6d64a6de5b444517869f0ada", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/e279e5053696d1de6d64a6de5b444517869f0ada"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/c075358b162298074db10054411553e2d845ae3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaV6JXCRBK7hj4Ov3rIwAAdHIIABa06iSc+GXKK8NYxG97JPv2\nC0VBxDlh44s5P6F23YyEeTDTn9Vxe850yHm88CgdRThMyRA50Rzqn8KMsgfe9yn9\n0ZrzQzLHXbOy4IAKPYQa5vS+7IqUjLL8ASBERm+935gtbtl6oHj/VDEAtvwmwqYW\notfbR1hMPnVlwJ8W1qTP7a/TKsQpn/OKE9b4bVTeSpT7DfadpRvEP4zVBTM2A+zT\nab30Z1rBcxGFcJVIXuPGR5Z9Cqdkwyspa7rVVpHcq9I4061sc5r/ek+p71bz8jbk\nD1jG5CFhnJbWeCCUKqVoHdN0lDMIksgyvRlw4AgVN12FBUaBhjShlbLIr0eZlEQ=\n=W76V\n-----END PGP SIGNATURE-----\n", "payload": "tree e279e5053696d1de6d64a6de5b444517869f0ada\nparent 92104fbdc29fe6751956dbe7ac108f1fbebd9e6f\nparent eca50a816e7fe5ae2ede117158856ce2724d46f1\nauthor Sean Gillies <sean.gillies@gmail.com> 1515692631 -0700\ncommitter GitHub <noreply@github.com> 1515692631 -0700\n\nMerge pull request #1245 from mapbox/issue1217\n\nUse enum for rasterize merge algorithm"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/c075358b162298074db10054411553e2d845ae3b", "html_url": "https://github.com/mapbox/rasterio/commit/c075358b162298074db10054411553e2d845ae3b", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/c075358b162298074db10054411553e2d845ae3b/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "url": "https://api.github.com/repos/mapbox/rasterio/commits/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "html_url": "https://github.com/mapbox/rasterio/commit/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f"}, {"sha": "eca50a816e7fe5ae2ede117158856ce2724d46f1", "url": "https://api.github.com/repos/mapbox/rasterio/commits/eca50a816e7fe5ae2ede117158856ce2724d46f1", "html_url": "https://github.com/mapbox/rasterio/commit/eca50a816e7fe5ae2ede117158856ce2724d46f1"}]}, {"sha": "eca50a816e7fe5ae2ede117158856ce2724d46f1", "commit": {"author": {"name": "Brendan Ward", "email": "bcward@consbio.org", "date": "2018-01-11T04:58:46Z"}, "committer": {"name": "Brendan Ward", "email": "bcward@consbio.org", "date": "2018-01-11T04:58:46Z"}, "message": "Use enum for rasterize merge algorithm", "tree": {"sha": "e279e5053696d1de6d64a6de5b444517869f0ada", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/e279e5053696d1de6d64a6de5b444517869f0ada"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/eca50a816e7fe5ae2ede117158856ce2724d46f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/eca50a816e7fe5ae2ede117158856ce2724d46f1", "html_url": "https://github.com/mapbox/rasterio/commit/eca50a816e7fe5ae2ede117158856ce2724d46f1", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/eca50a816e7fe5ae2ede117158856ce2724d46f1/comments", "author": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "url": "https://api.github.com/repos/mapbox/rasterio/commits/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "html_url": "https://github.com/mapbox/rasterio/commit/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f"}]}, {"sha": "92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2018-01-10T21:02:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-10T21:02:00Z"}, "message": "Comment has not been valid in a long time", "tree": {"sha": "855fa15e5fe4d0301824b6050b993af31fe5963e", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/855fa15e5fe4d0301824b6050b993af31fe5963e"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaVn9JCRBK7hj4Ov3rIwAAdHIIAFHRzLTqjefgOLDJjtBCBblI\nFQICTic3rXlw1E0Wpqdq6RfD7WmiMEb4UOB8P5UAx+y1EO+GVw3vnJqi+TpgU+XJ\nKc2VZJ6Ie6mz3hO0k/2gGpp3F7gHOwqWggA63LmHrrnqNklSY3edTB8j05vT1V4h\n7gcXTPrn4dvRVV79/SXgpDBn8yktrYGV+nHxw96gsSsrl8ODLUdvK0yo1uneVeR1\nUbaA3KjsvGrBSbXqeFtJfVLLZIPOv0E1/LBIECfKuzoobAP/m8tRBzUti3AaDL6k\nwSHOSvY/6rZfX7JTEDZPeZwzALt2JCXpSQXeT2zjJ1DJttMWC/Tatw4sugwojow=\n=DK5u\n-----END PGP SIGNATURE-----\n", "payload": "tree 855fa15e5fe4d0301824b6050b993af31fe5963e\nparent 3662de90a662f92fabc0656ea0581b62808cc363\nauthor Sean Gillies <sean.gillies@gmail.com> 1515618120 -0700\ncommitter GitHub <noreply@github.com> 1515618120 -0700\n\nComment has not been valid in a long time"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "html_url": "https://github.com/mapbox/rasterio/commit/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/92104fbdc29fe6751956dbe7ac108f1fbebd9e6f/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3662de90a662f92fabc0656ea0581b62808cc363", "url": "https://api.github.com/repos/mapbox/rasterio/commits/3662de90a662f92fabc0656ea0581b62808cc363", "html_url": "https://github.com/mapbox/rasterio/commit/3662de90a662f92fabc0656ea0581b62808cc363"}]}, {"sha": "3662de90a662f92fabc0656ea0581b62808cc363", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2018-01-05T16:06:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-05T16:06:07Z"}, "message": "Merge pull request #1243 from mapbox/window-mask\n\nsupport writing windowed internal masks", "tree": {"sha": "f8c7938fbbdd3d2d50a8af8bf223952bc041ef16", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/f8c7938fbbdd3d2d50a8af8bf223952bc041ef16"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/3662de90a662f92fabc0656ea0581b62808cc363", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaT6JvCRBK7hj4Ov3rIwAAdHIIAGebHxJZhDT9A1TAGsXj0vay\nQn+Qp+eOVAhoAefmzaAELeCAqkNcc9f1guI7mdzi0dfbYQfaHfS7XjOKNPLDtqHh\n5I6K38raRq9hKNDSzxtVDqyjwBRqEZydooD4Jgf7HaBNlw38bjqHi0BF8bAruF6B\nGDE6uUvazOc9stndlIqRvPqLTuj69wkfjOZqRgOenv0UOzH6TfNNDG+g68g+FbWK\ni8myn5p0wnfE9U7lqN8ihWTysHfnXm8VJB3wWWIYqlGEaw6p2d3gccOfrFnvvJRd\nu/KmkRtGuA4/WBPbf/JeDkl4z1zzbvSmFjBc4thG6Uk1zhpdNJ4Nj9fWwYW8NAQ=\n=NYEt\n-----END PGP SIGNATURE-----\n", "payload": "tree f8c7938fbbdd3d2d50a8af8bf223952bc041ef16\nparent 27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1\nparent 779bad70c43ebf79845b495772e25aee3abe5df2\nauthor Sean Gillies <sean.gillies@gmail.com> 1515168367 -0700\ncommitter GitHub <noreply@github.com> 1515168367 -0700\n\nMerge pull request #1243 from mapbox/window-mask\n\nsupport writing windowed internal masks"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/3662de90a662f92fabc0656ea0581b62808cc363", "html_url": "https://github.com/mapbox/rasterio/commit/3662de90a662f92fabc0656ea0581b62808cc363", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/3662de90a662f92fabc0656ea0581b62808cc363/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "url": "https://api.github.com/repos/mapbox/rasterio/commits/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "html_url": "https://github.com/mapbox/rasterio/commit/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1"}, {"sha": "779bad70c43ebf79845b495772e25aee3abe5df2", "url": "https://api.github.com/repos/mapbox/rasterio/commits/779bad70c43ebf79845b495772e25aee3abe5df2", "html_url": "https://github.com/mapbox/rasterio/commit/779bad70c43ebf79845b495772e25aee3abe5df2"}]}, {"sha": "779bad70c43ebf79845b495772e25aee3abe5df2", "commit": {"author": {"name": "Matthew Perry", "email": "perrygeo@gmail.com", "date": "2018-01-04T23:20:16Z"}, "committer": {"name": "Matthew Perry", "email": "perrygeo@gmail.com", "date": "2018-01-04T23:20:16Z"}, "message": "catch only CPLE_BaseError", "tree": {"sha": "f8c7938fbbdd3d2d50a8af8bf223952bc041ef16", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/f8c7938fbbdd3d2d50a8af8bf223952bc041ef16"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/779bad70c43ebf79845b495772e25aee3abe5df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/779bad70c43ebf79845b495772e25aee3abe5df2", "html_url": "https://github.com/mapbox/rasterio/commit/779bad70c43ebf79845b495772e25aee3abe5df2", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/779bad70c43ebf79845b495772e25aee3abe5df2/comments", "author": {"login": "perrygeo", "id": 1151287, "avatar_url": "https://avatars0.githubusercontent.com/u/1151287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrygeo", "html_url": "https://github.com/perrygeo", "followers_url": "https://api.github.com/users/perrygeo/followers", "following_url": "https://api.github.com/users/perrygeo/following{/other_user}", "gists_url": "https://api.github.com/users/perrygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrygeo/subscriptions", "organizations_url": "https://api.github.com/users/perrygeo/orgs", "repos_url": "https://api.github.com/users/perrygeo/repos", "events_url": "https://api.github.com/users/perrygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/perrygeo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "perrygeo", "id": 1151287, "avatar_url": "https://avatars0.githubusercontent.com/u/1151287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrygeo", "html_url": "https://github.com/perrygeo", "followers_url": "https://api.github.com/users/perrygeo/followers", "following_url": "https://api.github.com/users/perrygeo/following{/other_user}", "gists_url": "https://api.github.com/users/perrygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrygeo/subscriptions", "organizations_url": "https://api.github.com/users/perrygeo/orgs", "repos_url": "https://api.github.com/users/perrygeo/repos", "events_url": "https://api.github.com/users/perrygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/perrygeo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e22ca9263e9116eaa1176debdc33c5bfaf46552", "url": "https://api.github.com/repos/mapbox/rasterio/commits/2e22ca9263e9116eaa1176debdc33c5bfaf46552", "html_url": "https://github.com/mapbox/rasterio/commit/2e22ca9263e9116eaa1176debdc33c5bfaf46552"}]}, {"sha": "2e22ca9263e9116eaa1176debdc33c5bfaf46552", "commit": {"author": {"name": "Matthew Perry", "email": "perrygeo@gmail.com", "date": "2018-01-04T21:48:28Z"}, "committer": {"name": "Matthew Perry", "email": "perrygeo@gmail.com", "date": "2018-01-04T21:48:28Z"}, "message": "only create mask if per_dataset mask doesn't exist yet", "tree": {"sha": "732692cc4503a4cad6ceac0d115a3f11fc8fd916", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/732692cc4503a4cad6ceac0d115a3f11fc8fd916"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/2e22ca9263e9116eaa1176debdc33c5bfaf46552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/2e22ca9263e9116eaa1176debdc33c5bfaf46552", "html_url": "https://github.com/mapbox/rasterio/commit/2e22ca9263e9116eaa1176debdc33c5bfaf46552", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/2e22ca9263e9116eaa1176debdc33c5bfaf46552/comments", "author": {"login": "perrygeo", "id": 1151287, "avatar_url": "https://avatars0.githubusercontent.com/u/1151287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrygeo", "html_url": "https://github.com/perrygeo", "followers_url": "https://api.github.com/users/perrygeo/followers", "following_url": "https://api.github.com/users/perrygeo/following{/other_user}", "gists_url": "https://api.github.com/users/perrygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrygeo/subscriptions", "organizations_url": "https://api.github.com/users/perrygeo/orgs", "repos_url": "https://api.github.com/users/perrygeo/repos", "events_url": "https://api.github.com/users/perrygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/perrygeo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "perrygeo", "id": 1151287, "avatar_url": "https://avatars0.githubusercontent.com/u/1151287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrygeo", "html_url": "https://github.com/perrygeo", "followers_url": "https://api.github.com/users/perrygeo/followers", "following_url": "https://api.github.com/users/perrygeo/following{/other_user}", "gists_url": "https://api.github.com/users/perrygeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrygeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrygeo/subscriptions", "organizations_url": "https://api.github.com/users/perrygeo/orgs", "repos_url": "https://api.github.com/users/perrygeo/repos", "events_url": "https://api.github.com/users/perrygeo/events{/privacy}", "received_events_url": "https://api.github.com/users/perrygeo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "url": "https://api.github.com/repos/mapbox/rasterio/commits/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "html_url": "https://github.com/mapbox/rasterio/commit/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1"}]}, {"sha": "27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-22T20:29:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-22T20:29:17Z"}, "message": "Merge pull request #1239 from mapbox/boundless-vrt-nearest\n\nBoundless reads that don't alter pixels", "tree": {"sha": "61d556226d8a731aece8e5d81d23df86cfed9d18", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/61d556226d8a731aece8e5d81d23df86cfed9d18"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaPWsdCRBK7hj4Ov3rIwAAdHIIAJZgCV6Glm/lplFIJ77LW3rl\nV2IIzZTDBybW5juZWOOSdy04ScA5qrzVUvP67oU08k/4WxcbAnPwmaOZkZGWW8EC\n7mAikFFR9qHX7jIBqMLBYT6ln+iUtN+QIuNRybnQi0gfAf5BZLfNvBr1dEz1/yHY\nV6amphFTirsmUms3NxvN6lWPTN+dwZf1WSU/LEJQHJUUFmFeH+1fAHO7fSZMcKWU\nrGSCm35jhCLrXHzFIFq0zdoN6vZS2l/FdIi6GMHDpq3+j+0dbQFxLon4YS7tWFwk\nyVfUVi5lF3NWqZjhUGpYh5GZH0qYaJ5QeVaH0eQyBoJu4chwiUbNXQ5NMTLpRC0=\n=hZaM\n-----END PGP SIGNATURE-----\n", "payload": "tree 61d556226d8a731aece8e5d81d23df86cfed9d18\nparent 0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424\nparent 711400a1bd005bde8c310b144873cf48a03cb426\nauthor Sean Gillies <sean.gillies@gmail.com> 1513974557 -0700\ncommitter GitHub <noreply@github.com> 1513974557 -0700\n\nMerge pull request #1239 from mapbox/boundless-vrt-nearest\n\nBoundless reads that don't alter pixels"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "html_url": "https://github.com/mapbox/rasterio/commit/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/27676a1fb6ca48216dbcac9cbd67e2156d9cc9b1/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "url": "https://api.github.com/repos/mapbox/rasterio/commits/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "html_url": "https://github.com/mapbox/rasterio/commit/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424"}, {"sha": "711400a1bd005bde8c310b144873cf48a03cb426", "url": "https://api.github.com/repos/mapbox/rasterio/commits/711400a1bd005bde8c310b144873cf48a03cb426", "html_url": "https://github.com/mapbox/rasterio/commit/711400a1bd005bde8c310b144873cf48a03cb426"}]}, {"sha": "711400a1bd005bde8c310b144873cf48a03cb426", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-22T19:50:29Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-22T19:50:29Z"}, "message": "Add resampling help to read methods", "tree": {"sha": "6bc866d36bfcaf0c0266aa92876434b4ed494deb", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/6bc866d36bfcaf0c0266aa92876434b4ed494deb"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/711400a1bd005bde8c310b144873cf48a03cb426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/711400a1bd005bde8c310b144873cf48a03cb426", "html_url": "https://github.com/mapbox/rasterio/commit/711400a1bd005bde8c310b144873cf48a03cb426", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/711400a1bd005bde8c310b144873cf48a03cb426/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6fdb9dddefc0b04970b464efb3ad433e96e9151", "url": "https://api.github.com/repos/mapbox/rasterio/commits/b6fdb9dddefc0b04970b464efb3ad433e96e9151", "html_url": "https://github.com/mapbox/rasterio/commit/b6fdb9dddefc0b04970b464efb3ad433e96e9151"}]}, {"sha": "b6fdb9dddefc0b04970b464efb3ad433e96e9151", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-22T16:39:47Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-22T16:39:47Z"}, "message": "Even more variable windows and cleaner asserts", "tree": {"sha": "9c77cfd1d3bceee00ca244c8a147ce48392fc72f", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/9c77cfd1d3bceee00ca244c8a147ce48392fc72f"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/b6fdb9dddefc0b04970b464efb3ad433e96e9151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/b6fdb9dddefc0b04970b464efb3ad433e96e9151", "html_url": "https://github.com/mapbox/rasterio/commit/b6fdb9dddefc0b04970b464efb3ad433e96e9151", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/b6fdb9dddefc0b04970b464efb3ad433e96e9151/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccdba45f39ada0615b7c5e347e46261586e57a52", "url": "https://api.github.com/repos/mapbox/rasterio/commits/ccdba45f39ada0615b7c5e347e46261586e57a52", "html_url": "https://github.com/mapbox/rasterio/commit/ccdba45f39ada0615b7c5e347e46261586e57a52"}]}, {"sha": "ccdba45f39ada0615b7c5e347e46261586e57a52", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T18:28:04Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T18:28:04Z"}, "message": "Outer boundless reads", "tree": {"sha": "2d992aedbc7f2d4bceb7738696768f311620c98a", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/2d992aedbc7f2d4bceb7738696768f311620c98a"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/ccdba45f39ada0615b7c5e347e46261586e57a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/ccdba45f39ada0615b7c5e347e46261586e57a52", "html_url": "https://github.com/mapbox/rasterio/commit/ccdba45f39ada0615b7c5e347e46261586e57a52", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/ccdba45f39ada0615b7c5e347e46261586e57a52/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60350ebc4f615d515d8f4eb2fa5f459479e0a391", "url": "https://api.github.com/repos/mapbox/rasterio/commits/60350ebc4f615d515d8f4eb2fa5f459479e0a391", "html_url": "https://github.com/mapbox/rasterio/commit/60350ebc4f615d515d8f4eb2fa5f459479e0a391"}]}, {"sha": "60350ebc4f615d515d8f4eb2fa5f459479e0a391", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T16:03:06Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T16:03:06Z"}, "message": "Add docstring", "tree": {"sha": "ad16e8a8f7baf4bb882d02e067d22e2051812fc3", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/ad16e8a8f7baf4bb882d02e067d22e2051812fc3"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/60350ebc4f615d515d8f4eb2fa5f459479e0a391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/60350ebc4f615d515d8f4eb2fa5f459479e0a391", "html_url": "https://github.com/mapbox/rasterio/commit/60350ebc4f615d515d8f4eb2fa5f459479e0a391", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/60350ebc4f615d515d8f4eb2fa5f459479e0a391/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "url": "https://api.github.com/repos/mapbox/rasterio/commits/cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "html_url": "https://github.com/mapbox/rasterio/commit/cddb90c3206ec16e953eaec0dce34271f0d4f8c4"}]}, {"sha": "cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T16:02:18Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T16:02:18Z"}, "message": "Add test of pixel fidelity", "tree": {"sha": "434b510a78f18d03c8083fcbb81d3af6fc40c4c4", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/434b510a78f18d03c8083fcbb81d3af6fc40c4c4"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "html_url": "https://github.com/mapbox/rasterio/commit/cddb90c3206ec16e953eaec0dce34271f0d4f8c4", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/cddb90c3206ec16e953eaec0dce34271f0d4f8c4/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08df92cf160e77660ee5f9f6190be4d19537f236", "url": "https://api.github.com/repos/mapbox/rasterio/commits/08df92cf160e77660ee5f9f6190be4d19537f236", "html_url": "https://github.com/mapbox/rasterio/commit/08df92cf160e77660ee5f9f6190be4d19537f236"}]}, {"sha": "08df92cf160e77660ee5f9f6190be4d19537f236", "commit": {"author": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T01:08:44Z"}, "committer": {"name": "Sean C. Gillies", "email": "sean@mapbox.com", "date": "2017-12-21T01:08:44Z"}, "message": "Use nearest resampling for VRT\n\nSince we're not changing resolution in boundless reads, nearest is\nA-ok. The important thing is to forward the resampling algo when\nwe read().", "tree": {"sha": "cf3fa7d90676c764c8754e33180608b1a2096eee", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/cf3fa7d90676c764c8754e33180608b1a2096eee"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/08df92cf160e77660ee5f9f6190be4d19537f236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/08df92cf160e77660ee5f9f6190be4d19537f236", "html_url": "https://github.com/mapbox/rasterio/commit/08df92cf160e77660ee5f9f6190be4d19537f236", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/08df92cf160e77660ee5f9f6190be4d19537f236/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17a090743588060653f51275443be3e65567eaa5", "url": "https://api.github.com/repos/mapbox/rasterio/commits/17a090743588060653f51275443be3e65567eaa5", "html_url": "https://github.com/mapbox/rasterio/commit/17a090743588060653f51275443be3e65567eaa5"}]}, {"sha": "0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-20T04:21:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-20T04:21:23Z"}, "message": "Merge pull request #1236 from omad/patch-1\n\nFix link to TravisCI CloudFormation IAM template", "tree": {"sha": "de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOeVDCRBK7hj4Ov3rIwAAdHIIAHnwoyCaMfFtwG6Z3I0vqE7+\nfDyKSwNjOsJOhpcJEc0dkRzJuyROoXQ1ETbsUCm5NzJ1IBmQH75l9hlV7WCWI9bO\niD3lum3sCHiOEFuAV56krguGLDIbp2pngx+6YYGHtMMuKhZNApSwv00fXpUcdDuk\ndKw4Y2P1NP63AzWXYPDV2GcXEkqdBEaNFt3Y/+gFbu4ARiOjalc0X/n9EJcua74T\nFtgjRoKIP1eG6142h/N1qrX17VBiS6U17EHMk+y1KHCzi+KM7W5f9jQbjFoH8g12\n7wEwKhkWEFbSTIM10d5y+u2Baq5BLyUF9jYbqMGg9joiUJKEp1BIzM+4Xfv4CUs=\n=ao3f\n-----END PGP SIGNATURE-----\n", "payload": "tree de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c\nparent fef7353c6f6371628d5ce6d38913d0d3fc2ed406\nparent 5f9c225cf764a59ab7c8bf5abe613dd8282b7b30\nauthor Sean Gillies <sean.gillies@gmail.com> 1513743683 -0700\ncommitter GitHub <noreply@github.com> 1513743683 -0700\n\nMerge pull request #1236 from omad/patch-1\n\nFix link to TravisCI CloudFormation IAM template"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "html_url": "https://github.com/mapbox/rasterio/commit/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/0f72e35bbc36cc4a07cc11c33a1aa5e9e0374424/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "url": "https://api.github.com/repos/mapbox/rasterio/commits/fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "html_url": "https://github.com/mapbox/rasterio/commit/fef7353c6f6371628d5ce6d38913d0d3fc2ed406"}, {"sha": "5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "url": "https://api.github.com/repos/mapbox/rasterio/commits/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "html_url": "https://github.com/mapbox/rasterio/commit/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30"}]}, {"sha": "5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "commit": {"author": {"name": "Damien Ayers", "email": "damien@omad.net", "date": "2017-12-20T04:07:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-20T04:07:52Z"}, "message": "Fix link to TravisCI CloudFormation IAM template", "tree": {"sha": "de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOeIYCRBK7hj4Ov3rIwAAdHIIAEv+fp77CwT6AmzMVb7F5V87\n6bZC1NpQ1Nx0BObhDQRcV3R6sHQwNfju4hfWshSIebBrMcr9eyGAIn3cf5AYZvcP\nQWmG5g8g6EN81K0fIVjgM1U0WEd7X59JsCli2H05a6VHzcfsOyemeiSineUtVlY2\ntC8s+D6svasHwYWNO5NdWgREzEVPeI+DKRl3dxpTBwboChLx9ZOniBLPzTj9jAVa\nDRQ0HlLJbCBYtTnTVovy0KrYqh5Rbzmu6pySE6tueqYHg9lhnB9Wo0jIYhzTut+Y\nGMqP7HnsfzpF/r2a7LCorIMaIlFgO5LGhqgNLn9NZLA1ILxrJR+aEuhHSnDi9wU=\n=cISB\n-----END PGP SIGNATURE-----\n", "payload": "tree de5a4710ccd8c086ccc1fcc9b2aa7d9304f0eb2c\nparent fef7353c6f6371628d5ce6d38913d0d3fc2ed406\nauthor Damien Ayers <damien@omad.net> 1513742872 +1100\ncommitter GitHub <noreply@github.com> 1513742872 +1100\n\nFix link to TravisCI CloudFormation IAM template"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "html_url": "https://github.com/mapbox/rasterio/commit/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/5f9c225cf764a59ab7c8bf5abe613dd8282b7b30/comments", "author": {"login": "omad", "id": 108979, "avatar_url": "https://avatars2.githubusercontent.com/u/108979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omad", "html_url": "https://github.com/omad", "followers_url": "https://api.github.com/users/omad/followers", "following_url": "https://api.github.com/users/omad/following{/other_user}", "gists_url": "https://api.github.com/users/omad/gists{/gist_id}", "starred_url": "https://api.github.com/users/omad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omad/subscriptions", "organizations_url": "https://api.github.com/users/omad/orgs", "repos_url": "https://api.github.com/users/omad/repos", "events_url": "https://api.github.com/users/omad/events{/privacy}", "received_events_url": "https://api.github.com/users/omad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "url": "https://api.github.com/repos/mapbox/rasterio/commits/fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "html_url": "https://github.com/mapbox/rasterio/commit/fef7353c6f6371628d5ce6d38913d0d3fc2ed406"}]}, {"sha": "fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-19T22:23:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-19T22:23:47Z"}, "message": "Remove stranded text", "tree": {"sha": "f11ffc503ccc459af53019bb3cfd4c8169a7e91b", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/f11ffc503ccc459af53019bb3cfd4c8169a7e91b"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOZFzCRBK7hj4Ov3rIwAAdHIIADDBmTJaBO7cTfwfDYI0P/6b\nnqizVMJbqe6xgEC/t3WEHgWE2j782UwrfsJnBVruWj3BFMk3fwydivUaXsrsRRvt\noQaaqgl+dlAiIA8FGSLSniql5XCy9ZevHdoZwy4vpeR+CUsFCIGMn6CHxhwLdWzk\ncrqp3ThSuGQ9tec7ebhcLjrZIMIxwke3NIXMHSuC4/i70iElJMdj7uSjTINp6err\nO0HbIuSg+Q4VTperBuex684nk8mKPohJI3zCptw2NpLjg8GopjweAmYx1aoMQBzU\ni2ZljfKxPLmbQKhsFgGoAS6eT4QZ0uVwzUdrbK2bUpYVhOZ1tWO2sWDBReeu2xo=\n=P80y\n-----END PGP SIGNATURE-----\n", "payload": "tree f11ffc503ccc459af53019bb3cfd4c8169a7e91b\nparent 84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc\nauthor Sean Gillies <sean.gillies@gmail.com> 1513722227 -0700\ncommitter GitHub <noreply@github.com> 1513722227 -0700\n\nRemove stranded text"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "html_url": "https://github.com/mapbox/rasterio/commit/fef7353c6f6371628d5ce6d38913d0d3fc2ed406", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/fef7353c6f6371628d5ce6d38913d0d3fc2ed406/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "url": "https://api.github.com/repos/mapbox/rasterio/commits/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "html_url": "https://github.com/mapbox/rasterio/commit/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc"}]}, {"sha": "84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-19T22:23:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-19T22:23:03Z"}, "message": "Add note about dataset objects", "tree": {"sha": "90c1aedd30392c0c96c4ab8531e560277ff82c88", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/90c1aedd30392c0c96c4ab8531e560277ff82c88"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOZFHCRBK7hj4Ov3rIwAAdHIIAFNtjhm97w/Sm0LjsPo8uD2T\n9kJwiGkWuOVqkB5WX1fMvDQN3Bk762V6zU/C+oJv0oLmYpjWGs2ozFefPp8+/J1N\nhgBn1DGPhRbl8NJaGsQKUw36i0P5X9MyTiM6epVeP6Su0VjUGOGIMDtSqK9a/BcP\nrR+3akuIZQURXBkqcbXZwisqEJ/pue7XKbmIlc0ZlkzrN893qQhS0G2M/bF6cui6\nRtWrNpMgdD+/0zhIe9yuKqksVlwPbqP6UHlyos+n3/fPHJidGBFZF2jL7oBfXgeC\nwi+PePEq+qq4uG1V1XL8mjDzc96wQ+t4qAYT8o8tMuyhJfzJITilzJQNL0ju67k=\n=Gute\n-----END PGP SIGNATURE-----\n", "payload": "tree 90c1aedd30392c0c96c4ab8531e560277ff82c88\nparent 3adfdd25548463a2a9692c492a4ad47e142aaab4\nauthor Sean Gillies <sean.gillies@gmail.com> 1513722183 -0700\ncommitter GitHub <noreply@github.com> 1513722183 -0700\n\nAdd note about dataset objects"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "html_url": "https://github.com/mapbox/rasterio/commit/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/84958d7a36e9cbb7bc7d6088e9f66bc9160cfbbc/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3adfdd25548463a2a9692c492a4ad47e142aaab4", "url": "https://api.github.com/repos/mapbox/rasterio/commits/3adfdd25548463a2a9692c492a4ad47e142aaab4", "html_url": "https://github.com/mapbox/rasterio/commit/3adfdd25548463a2a9692c492a4ad47e142aaab4"}]}, {"sha": "3adfdd25548463a2a9692c492a4ad47e142aaab4", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-19T21:46:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-19T21:46:17Z"}, "message": "Merge pull request #1229 from mapbox/issue1208\n\nNew decorator for requiring specific GDAL version", "tree": {"sha": "8b29b1a92705987aa2a3a6da5f8c7b5f97ae1ba2", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/8b29b1a92705987aa2a3a6da5f8c7b5f97ae1ba2"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/3adfdd25548463a2a9692c492a4ad47e142aaab4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOYipCRBK7hj4Ov3rIwAAdHIIAEBYpAL919BHJYSL1QfTh49e\n/c6+7pTk0yDjNMZpe21Aq71K9U9S5/Mc7O+fV2RQxx+PGokt7jNO9CYUmFkShFNf\nvYhKbwEI/Ynrdn9gH1t9CkPhz4chcYLgHbxjZBT89eXon/Owh1PXkAcahG3gwqMx\npM/gJtFuoPQtPhC3XnWwxK4zovfYtQgML+b3WR424KbyknSc5bt8r9u4vr8fG02s\no85acfa+kduoPZzyPk1w2a2g8NC9EQnhu9VeX1IsHJhT9GEYWAACbiaM9JCg/xsi\nn0Mp7LhLQYE35OI/q/hME1J3yuPCUqC82wt2/Bv4vBkY33rFuc6IxFAUz7WGJ3s=\n=2XqQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b29b1a92705987aa2a3a6da5f8c7b5f97ae1ba2\nparent b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b\nparent 0daad71fceba788210d9e55c9c6d41239c14aff3\nauthor Sean Gillies <sean.gillies@gmail.com> 1513719977 -0700\ncommitter GitHub <noreply@github.com> 1513719977 -0700\n\nMerge pull request #1229 from mapbox/issue1208\n\nNew decorator for requiring specific GDAL version"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/3adfdd25548463a2a9692c492a4ad47e142aaab4", "html_url": "https://github.com/mapbox/rasterio/commit/3adfdd25548463a2a9692c492a4ad47e142aaab4", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/3adfdd25548463a2a9692c492a4ad47e142aaab4/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "url": "https://api.github.com/repos/mapbox/rasterio/commits/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "html_url": "https://github.com/mapbox/rasterio/commit/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b"}, {"sha": "0daad71fceba788210d9e55c9c6d41239c14aff3", "url": "https://api.github.com/repos/mapbox/rasterio/commits/0daad71fceba788210d9e55c9c6d41239c14aff3", "html_url": "https://github.com/mapbox/rasterio/commit/0daad71fceba788210d9e55c9c6d41239c14aff3"}]}, {"sha": "b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "commit": {"author": {"name": "Sean Gillies", "email": "sean.gillies@gmail.com", "date": "2017-12-19T21:37:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-19T21:37:53Z"}, "message": "Merge pull request #1222 from DHI-GRAS/naming\n\nNaming raster / source / dataset", "tree": {"sha": "e3a1289d1b01df26c16378b11313b960e0e390e5", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/e3a1289d1b01df26c16378b11313b960e0e390e5"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaOYaxCRBK7hj4Ov3rIwAAdHIIAGSuKvj/13JvL9sq+6v5D3lL\nt/CSoCfBXsRgVNhTa44ALd1dXnC/Qh4n4IMwCIw8rj/RVXkTq5AT8+HAMxm+L8Fx\n/+Alh1XPyuG5l/EBCbTYxdBsderCTCyZCPvuTirN834II33rExhQ/nO78vNPMztz\nafDzc5NFkPKF0tErNeQueg6OH4B3Iws4WrQEHHnh0bgNJ4q+BNQzj0gts+De62tl\nl1GtbdT/DjKKamw/Cbrn02dM6pkUwaDsvRCmVCaYh5UtUfVy1WVkn1GtYV6ijMBR\n6IdVbn6WcpIalOkF2rXaUYZklHLBASJrRLR2vElhpL0ULNKoNOyDeg756ywnUMU=\n=Nf3B\n-----END PGP SIGNATURE-----\n", "payload": "tree e3a1289d1b01df26c16378b11313b960e0e390e5\nparent cb620c56783934c92d063892ed3e536c2d58f9f6\nparent 927cae58e3c25150b73d3a3549c5b163c404fb33\nauthor Sean Gillies <sean.gillies@gmail.com> 1513719473 -0700\ncommitter GitHub <noreply@github.com> 1513719473 -0700\n\nMerge pull request #1222 from DHI-GRAS/naming\n\nNaming raster / source / dataset"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "html_url": "https://github.com/mapbox/rasterio/commit/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/b71fa43290f0f9b07dbc7fb3d5604eca88a2a72b/comments", "author": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb620c56783934c92d063892ed3e536c2d58f9f6", "url": "https://api.github.com/repos/mapbox/rasterio/commits/cb620c56783934c92d063892ed3e536c2d58f9f6", "html_url": "https://github.com/mapbox/rasterio/commit/cb620c56783934c92d063892ed3e536c2d58f9f6"}, {"sha": "927cae58e3c25150b73d3a3549c5b163c404fb33", "url": "https://api.github.com/repos/mapbox/rasterio/commits/927cae58e3c25150b73d3a3549c5b163c404fb33", "html_url": "https://github.com/mapbox/rasterio/commit/927cae58e3c25150b73d3a3549c5b163c404fb33"}]}, {"sha": "927cae58e3c25150b73d3a3549c5b163c404fb33", "commit": {"author": {"name": "Jonas", "email": "j08lue@gmail.com", "date": "2017-12-19T09:38:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-19T09:38:16Z"}, "message": "Merge branch 'master' into naming", "tree": {"sha": "e3a1289d1b01df26c16378b11313b960e0e390e5", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/e3a1289d1b01df26c16378b11313b960e0e390e5"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/927cae58e3c25150b73d3a3549c5b163c404fb33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaON4ICRBK7hj4Ov3rIwAAdHIIAENmfEUkSiMJQJSVISMXqe9l\nm337gI3DW67sERDYQtNIPATn3IkOdwTtYtw3PyT58dumUphLbmkQDeRKNoUYXOqz\nrWRUo4jj67sUxVwWw6LajUT4ZYRvpeJjKiajCJ6cq1uPa7sCE4UDCXHUzxrFiN2f\nwQjgcea3uw1RusWXrzJJKd1NeMJUwnnlGrLFGbf6etQ2NEww22XkR5EXBGHJmMv7\nOYAOyEKispx0jIX/YC8gX8mHwhjIZhLXFYppwDhZ1hm4eLEdS447iK9JAcWjFK0g\nzBqAmSgUBbbyVNs4griESN1sOr/xiFAweBPHzGOXgXpZl51lG3Vyszm2N48Kl1Y=\n=71vP\n-----END PGP SIGNATURE-----\n", "payload": "tree e3a1289d1b01df26c16378b11313b960e0e390e5\nparent f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd\nparent cb620c56783934c92d063892ed3e536c2d58f9f6\nauthor Jonas <j08lue@gmail.com> 1513676296 +0100\ncommitter GitHub <noreply@github.com> 1513676296 +0100\n\nMerge branch 'master' into naming"}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/927cae58e3c25150b73d3a3549c5b163c404fb33", "html_url": "https://github.com/mapbox/rasterio/commit/927cae58e3c25150b73d3a3549c5b163c404fb33", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/927cae58e3c25150b73d3a3549c5b163c404fb33/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "url": "https://api.github.com/repos/mapbox/rasterio/commits/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "html_url": "https://github.com/mapbox/rasterio/commit/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd"}, {"sha": "cb620c56783934c92d063892ed3e536c2d58f9f6", "url": "https://api.github.com/repos/mapbox/rasterio/commits/cb620c56783934c92d063892ed3e536c2d58f9f6", "html_url": "https://github.com/mapbox/rasterio/commit/cb620c56783934c92d063892ed3e536c2d58f9f6"}]}, {"sha": "f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:49:14Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:49:14Z"}, "message": "opened in 'r' mode", "tree": {"sha": "4aaa13ff0eeb7033e6295f0bdcd81d474375cb8a", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/4aaa13ff0eeb7033e6295f0bdcd81d474375cb8a"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "html_url": "https://github.com/mapbox/rasterio/commit/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/f4f1740f944e0cdaac6f8ae3da2fc6a860b97cfd/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "url": "https://api.github.com/repos/mapbox/rasterio/commits/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "html_url": "https://github.com/mapbox/rasterio/commit/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8"}]}, {"sha": "7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:45:10Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:45:10Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "b945646e12586992214b770d884c2b16fe3221fe", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/b945646e12586992214b770d884c2b16fe3221fe"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "html_url": "https://github.com/mapbox/rasterio/commit/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/7ab07aecf3b7184bebe9301b09c1f4e82b2078e8/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "url": "https://api.github.com/repos/mapbox/rasterio/commits/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "html_url": "https://github.com/mapbox/rasterio/commit/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65"}]}, {"sha": "57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:43:23Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:43:23Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "9629c7e8f6be01b4442582b1ed08f479c75e9794", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/9629c7e8f6be01b4442582b1ed08f479c75e9794"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "html_url": "https://github.com/mapbox/rasterio/commit/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/57ed398ab86ccd74a50e6de7bcf21ea6bc837a65/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9548a6beb5416ee32210d3d9b57ad22c905000f4", "url": "https://api.github.com/repos/mapbox/rasterio/commits/9548a6beb5416ee32210d3d9b57ad22c905000f4", "html_url": "https://github.com/mapbox/rasterio/commit/9548a6beb5416ee32210d3d9b57ad22c905000f4"}]}, {"sha": "9548a6beb5416ee32210d3d9b57ad22c905000f4", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:43:00Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:43:00Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "d06a9daf5376ddb73514be15d76826f5504fcedd", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/d06a9daf5376ddb73514be15d76826f5504fcedd"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/9548a6beb5416ee32210d3d9b57ad22c905000f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/9548a6beb5416ee32210d3d9b57ad22c905000f4", "html_url": "https://github.com/mapbox/rasterio/commit/9548a6beb5416ee32210d3d9b57ad22c905000f4", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/9548a6beb5416ee32210d3d9b57ad22c905000f4/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "849e3e1b2973773ad8efad8f6a41333986067d9b", "url": "https://api.github.com/repos/mapbox/rasterio/commits/849e3e1b2973773ad8efad8f6a41333986067d9b", "html_url": "https://github.com/mapbox/rasterio/commit/849e3e1b2973773ad8efad8f6a41333986067d9b"}]}, {"sha": "849e3e1b2973773ad8efad8f6a41333986067d9b", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:41:11Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:41:11Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "8359bb1839473e906658f1a471cbd33a915c256d", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/8359bb1839473e906658f1a471cbd33a915c256d"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/849e3e1b2973773ad8efad8f6a41333986067d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/849e3e1b2973773ad8efad8f6a41333986067d9b", "html_url": "https://github.com/mapbox/rasterio/commit/849e3e1b2973773ad8efad8f6a41333986067d9b", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/849e3e1b2973773ad8efad8f6a41333986067d9b/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "839123f3edc2253d437a1c117d01f5470f47f282", "url": "https://api.github.com/repos/mapbox/rasterio/commits/839123f3edc2253d437a1c117d01f5470f47f282", "html_url": "https://github.com/mapbox/rasterio/commit/839123f3edc2253d437a1c117d01f5470f47f282"}]}, {"sha": "839123f3edc2253d437a1c117d01f5470f47f282", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:39:18Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:39:18Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "eb8aa8d0ccec29e8794ca6d28f36cf0c243283f8", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/eb8aa8d0ccec29e8794ca6d28f36cf0c243283f8"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/839123f3edc2253d437a1c117d01f5470f47f282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/839123f3edc2253d437a1c117d01f5470f47f282", "html_url": "https://github.com/mapbox/rasterio/commit/839123f3edc2253d437a1c117d01f5470f47f282", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/839123f3edc2253d437a1c117d01f5470f47f282/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15837f4c6e19b2c74d3f4ea471305832c8eba823", "url": "https://api.github.com/repos/mapbox/rasterio/commits/15837f4c6e19b2c74d3f4ea471305832c8eba823", "html_url": "https://github.com/mapbox/rasterio/commit/15837f4c6e19b2c74d3f4ea471305832c8eba823"}]}, {"sha": "15837f4c6e19b2c74d3f4ea471305832c8eba823", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:21:00Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:21:00Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "570472fcf7fcc0efd8cc8b5b633190eebeccb2c6", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/570472fcf7fcc0efd8cc8b5b633190eebeccb2c6"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/15837f4c6e19b2c74d3f4ea471305832c8eba823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/15837f4c6e19b2c74d3f4ea471305832c8eba823", "html_url": "https://github.com/mapbox/rasterio/commit/15837f4c6e19b2c74d3f4ea471305832c8eba823", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/15837f4c6e19b2c74d3f4ea471305832c8eba823/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b74581f5571590461012d4ce35b739a00bf16061", "url": "https://api.github.com/repos/mapbox/rasterio/commits/b74581f5571590461012d4ce35b739a00bf16061", "html_url": "https://github.com/mapbox/rasterio/commit/b74581f5571590461012d4ce35b739a00bf16061"}]}, {"sha": "b74581f5571590461012d4ce35b739a00bf16061", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:19:09Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:19:09Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "f45ffa0f79768524e9cbb6f065dd2222dc4e1d19", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/f45ffa0f79768524e9cbb6f065dd2222dc4e1d19"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/b74581f5571590461012d4ce35b739a00bf16061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/b74581f5571590461012d4ce35b739a00bf16061", "html_url": "https://github.com/mapbox/rasterio/commit/b74581f5571590461012d4ce35b739a00bf16061", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/b74581f5571590461012d4ce35b739a00bf16061/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "666176c4fb9c297ac79975cdef8d056656e3a75f", "url": "https://api.github.com/repos/mapbox/rasterio/commits/666176c4fb9c297ac79975cdef8d056656e3a75f", "html_url": "https://github.com/mapbox/rasterio/commit/666176c4fb9c297ac79975cdef8d056656e3a75f"}]}, {"sha": "666176c4fb9c297ac79975cdef8d056656e3a75f", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:17:56Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:17:56Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "3c8e224bbe0bca8b903cba9e883a8a8ec0160316", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/3c8e224bbe0bca8b903cba9e883a8a8ec0160316"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/666176c4fb9c297ac79975cdef8d056656e3a75f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/666176c4fb9c297ac79975cdef8d056656e3a75f", "html_url": "https://github.com/mapbox/rasterio/commit/666176c4fb9c297ac79975cdef8d056656e3a75f", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/666176c4fb9c297ac79975cdef8d056656e3a75f/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de666ff5887e5ffb1d70860d7540856f8128889b", "url": "https://api.github.com/repos/mapbox/rasterio/commits/de666ff5887e5ffb1d70860d7540856f8128889b", "html_url": "https://github.com/mapbox/rasterio/commit/de666ff5887e5ffb1d70860d7540856f8128889b"}]}, {"sha": "de666ff5887e5ffb1d70860d7540856f8128889b", "commit": {"author": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:17:10Z"}, "committer": {"name": "Jonas S\u00f8lvsteen", "email": "j08lue@gmail.com", "date": "2017-12-19T08:17:10Z"}, "message": "DatasetReader -> dataset", "tree": {"sha": "daa863cb71656b7f1ec1fc8e2226e6629dec657a", "url": "https://api.github.com/repos/mapbox/rasterio/git/trees/daa863cb71656b7f1ec1fc8e2226e6629dec657a"}, "url": "https://api.github.com/repos/mapbox/rasterio/git/commits/de666ff5887e5ffb1d70860d7540856f8128889b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/mapbox/rasterio/commits/de666ff5887e5ffb1d70860d7540856f8128889b", "html_url": "https://github.com/mapbox/rasterio/commit/de666ff5887e5ffb1d70860d7540856f8128889b", "comments_url": "https://api.github.com/repos/mapbox/rasterio/commits/de666ff5887e5ffb1d70860d7540856f8128889b/comments", "author": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cf54c10e4c4c5573961ee9bd308a2f4e57b27b3", "url": "https://api.github.com/repos/mapbox/rasterio/commits/1cf54c10e4c4c5573961ee9bd308a2f4e57b27b3", "html_url": "https://github.com/mapbox/rasterio/commit/1cf54c10e4c4c5573961ee9bd308a2f4e57b27b3"}]}], "pull_requests": [{"url": "https://api.github.com/repos/mapbox/rasterio/pulls/1235", "id": 159164784, "html_url": "https://github.com/mapbox/rasterio/pull/1235", "diff_url": "https://github.com/mapbox/rasterio/pull/1235.diff", "patch_url": "https://github.com/mapbox/rasterio/pull/1235.patch", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/1235", "number": 1235, "state": "open", "locked": false, "title": "WIP:add indexes / bidx parameter to merge", "user": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "body": "Sorry for bombarding you with PRs... \r\n\r\nThis one adds the `indexes` parameter to `rasterio.merge.merge`, equivalent to the PR you just merged for `rasterio.mask.mask` (#1225).\r\n\r\nI also added the functionality to `rio merge` as a `--bidx` parameter.", "created_at": "2017-12-19T13:20:33Z", "updated_at": "2017-12-19T22:08:45Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "89ea5bb14cf51c3fb4b3feca528e4f7e5c6afffc", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1235/commits", "review_comments_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1235/comments", "review_comment_url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1235/comments", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/1ddcdf39aaeda1e8fbb68804c8748c9be29dbe81", "head": {"label": "DHI-GRAS:merge-indexes", "ref": "merge-indexes", "sha": "1ddcdf39aaeda1e8fbb68804c8748c9be29dbe81", "user": {"login": "DHI-GRAS", "id": 14074266, "avatar_url": "https://avatars2.githubusercontent.com/u/14074266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DHI-GRAS", "html_url": "https://github.com/DHI-GRAS", "followers_url": "https://api.github.com/users/DHI-GRAS/followers", "following_url": "https://api.github.com/users/DHI-GRAS/following{/other_user}", "gists_url": "https://api.github.com/users/DHI-GRAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DHI-GRAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DHI-GRAS/subscriptions", "organizations_url": "https://api.github.com/users/DHI-GRAS/orgs", "repos_url": "https://api.github.com/users/DHI-GRAS/repos", "events_url": "https://api.github.com/users/DHI-GRAS/events{/privacy}", "received_events_url": "https://api.github.com/users/DHI-GRAS/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 105248066, "name": "rasterio", "full_name": "DHI-GRAS/rasterio", "owner": {"login": "DHI-GRAS", "id": 14074266, "avatar_url": "https://avatars2.githubusercontent.com/u/14074266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DHI-GRAS", "html_url": "https://github.com/DHI-GRAS", "followers_url": "https://api.github.com/users/DHI-GRAS/followers", "following_url": "https://api.github.com/users/DHI-GRAS/following{/other_user}", "gists_url": "https://api.github.com/users/DHI-GRAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DHI-GRAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DHI-GRAS/subscriptions", "organizations_url": "https://api.github.com/users/DHI-GRAS/orgs", "repos_url": "https://api.github.com/users/DHI-GRAS/repos", "events_url": "https://api.github.com/users/DHI-GRAS/events{/privacy}", "received_events_url": "https://api.github.com/users/DHI-GRAS/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/DHI-GRAS/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": true, "url": "https://api.github.com/repos/DHI-GRAS/rasterio", "forks_url": "https://api.github.com/repos/DHI-GRAS/rasterio/forks", "keys_url": "https://api.github.com/repos/DHI-GRAS/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/DHI-GRAS/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/DHI-GRAS/rasterio/teams", "hooks_url": "https://api.github.com/repos/DHI-GRAS/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/DHI-GRAS/rasterio/events", "assignees_url": "https://api.github.com/repos/DHI-GRAS/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/DHI-GRAS/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/DHI-GRAS/rasterio/tags", "blobs_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/DHI-GRAS/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/DHI-GRAS/rasterio/languages", "stargazers_url": "https://api.github.com/repos/DHI-GRAS/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/DHI-GRAS/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/DHI-GRAS/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/DHI-GRAS/rasterio/subscription", "commits_url": "https://api.github.com/repos/DHI-GRAS/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/DHI-GRAS/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/DHI-GRAS/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/DHI-GRAS/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/DHI-GRAS/rasterio/merges", "archive_url": "https://api.github.com/repos/DHI-GRAS/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/DHI-GRAS/rasterio/downloads", "issues_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/DHI-GRAS/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/DHI-GRAS/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/DHI-GRAS/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/DHI-GRAS/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/DHI-GRAS/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/DHI-GRAS/rasterio/deployments", "created_at": "2017-09-29T08:21:06Z", "updated_at": "2017-09-29T08:21:09Z", "pushed_at": "2017-12-19T14:03:31Z", "git_url": "git://github.com/DHI-GRAS/rasterio.git", "ssh_url": "git@github.com:DHI-GRAS/rasterio.git", "clone_url": "https://github.com/DHI-GRAS/rasterio.git", "svn_url": "https://github.com/DHI-GRAS/rasterio", "homepage": "", "size": 21886, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "mapbox:master", "ref": "master", "sha": "cb620c56783934c92d063892ed3e536c2d58f9f6", "user": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14116604, "name": "rasterio", "full_name": "mapbox/rasterio", "owner": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/mapbox/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": false, "url": "https://api.github.com/repos/mapbox/rasterio", "forks_url": "https://api.github.com/repos/mapbox/rasterio/forks", "keys_url": "https://api.github.com/repos/mapbox/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mapbox/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mapbox/rasterio/teams", "hooks_url": "https://api.github.com/repos/mapbox/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/mapbox/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/mapbox/rasterio/events", "assignees_url": "https://api.github.com/repos/mapbox/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/mapbox/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/mapbox/rasterio/tags", "blobs_url": "https://api.github.com/repos/mapbox/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mapbox/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mapbox/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mapbox/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/mapbox/rasterio/languages", "stargazers_url": "https://api.github.com/repos/mapbox/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/mapbox/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/mapbox/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/mapbox/rasterio/subscription", "commits_url": "https://api.github.com/repos/mapbox/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mapbox/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mapbox/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mapbox/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/mapbox/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mapbox/rasterio/merges", "archive_url": "https://api.github.com/repos/mapbox/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mapbox/rasterio/downloads", "issues_url": "https://api.github.com/repos/mapbox/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/mapbox/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/mapbox/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/mapbox/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mapbox/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/mapbox/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/mapbox/rasterio/deployments", "created_at": "2013-11-04T16:36:27Z", "updated_at": "2018-01-18T17:13:28Z", "pushed_at": "2018-01-11T17:43:55Z", "git_url": "git://github.com/mapbox/rasterio.git", "ssh_url": "git@github.com:mapbox/rasterio.git", "clone_url": "https://github.com/mapbox/rasterio.git", "svn_url": "https://github.com/mapbox/rasterio", "homepage": "", "size": 22423, "stargazers_count": 696, "watchers_count": 696, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 180, "mirror_url": null, "archived": false, "open_issues_count": 142, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 180, "open_issues": 142, "watchers": 696, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1235"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/1235"}, "issue": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1235"}, "comments": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1235/comments"}, "review_comments": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1235/comments"}, "review_comment": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1235/commits"}, "statuses": {"href": "https://api.github.com/repos/mapbox/rasterio/statuses/1ddcdf39aaeda1e8fbb68804c8748c9be29dbe81"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/1226", "id": 157028946, "html_url": "https://github.com/mapbox/rasterio/pull/1226", "diff_url": "https://github.com/mapbox/rasterio/pull/1226.diff", "patch_url": "https://github.com/mapbox/rasterio/pull/1226.patch", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/1226", "number": 1226, "state": "open", "locked": false, "title": "WIP:use non-square test image", "user": {"login": "j08lue", "id": 3404817, "avatar_url": "https://avatars0.githubusercontent.com/u/3404817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j08lue", "html_url": "https://github.com/j08lue", "followers_url": "https://api.github.com/users/j08lue/followers", "following_url": "https://api.github.com/users/j08lue/following{/other_user}", "gists_url": "https://api.github.com/users/j08lue/gists{/gist_id}", "starred_url": "https://api.github.com/users/j08lue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j08lue/subscriptions", "organizations_url": "https://api.github.com/users/j08lue/orgs", "repos_url": "https://api.github.com/users/j08lue/repos", "events_url": "https://api.github.com/users/j08lue/events{/privacy}", "received_events_url": "https://api.github.com/users/j08lue/received_events", "type": "User", "site_admin": false}, "body": "I have a suspicion that `raster_geometry_mask` with `crop=True` is returning a square image even though the inputs should give a rectangular image.\r\n\r\nIt is only a suspicion yet, but we would not catch this error with our current tests, because we are always using a square input image. \r\n\r\nI think it would be better to use a non-square test image to maybe also detect inconsistencies as discussed in https://github.com/mapbox/rasterio/issues/525 (have not yet checked whether they use this image).\r\n\r\nNB: This PR is only for investigating which tests fail when I just deform the test image.", "created_at": "2017-12-07T15:45:22Z", "updated_at": "2017-12-08T15:24:57Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9259568a8d09edc86cd1e9a5e9bfde474474973c", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1226/commits", "review_comments_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1226/comments", "review_comment_url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1226/comments", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/e92655bf798103b20ffe0dbcb839a8524507850b", "head": {"label": "DHI-GRAS:testimage-asymmetric", "ref": "testimage-asymmetric", "sha": "e92655bf798103b20ffe0dbcb839a8524507850b", "user": {"login": "DHI-GRAS", "id": 14074266, "avatar_url": "https://avatars2.githubusercontent.com/u/14074266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DHI-GRAS", "html_url": "https://github.com/DHI-GRAS", "followers_url": "https://api.github.com/users/DHI-GRAS/followers", "following_url": "https://api.github.com/users/DHI-GRAS/following{/other_user}", "gists_url": "https://api.github.com/users/DHI-GRAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DHI-GRAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DHI-GRAS/subscriptions", "organizations_url": "https://api.github.com/users/DHI-GRAS/orgs", "repos_url": "https://api.github.com/users/DHI-GRAS/repos", "events_url": "https://api.github.com/users/DHI-GRAS/events{/privacy}", "received_events_url": "https://api.github.com/users/DHI-GRAS/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 105248066, "name": "rasterio", "full_name": "DHI-GRAS/rasterio", "owner": {"login": "DHI-GRAS", "id": 14074266, "avatar_url": "https://avatars2.githubusercontent.com/u/14074266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DHI-GRAS", "html_url": "https://github.com/DHI-GRAS", "followers_url": "https://api.github.com/users/DHI-GRAS/followers", "following_url": "https://api.github.com/users/DHI-GRAS/following{/other_user}", "gists_url": "https://api.github.com/users/DHI-GRAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DHI-GRAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DHI-GRAS/subscriptions", "organizations_url": "https://api.github.com/users/DHI-GRAS/orgs", "repos_url": "https://api.github.com/users/DHI-GRAS/repos", "events_url": "https://api.github.com/users/DHI-GRAS/events{/privacy}", "received_events_url": "https://api.github.com/users/DHI-GRAS/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/DHI-GRAS/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": true, "url": "https://api.github.com/repos/DHI-GRAS/rasterio", "forks_url": "https://api.github.com/repos/DHI-GRAS/rasterio/forks", "keys_url": "https://api.github.com/repos/DHI-GRAS/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/DHI-GRAS/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/DHI-GRAS/rasterio/teams", "hooks_url": "https://api.github.com/repos/DHI-GRAS/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/DHI-GRAS/rasterio/events", "assignees_url": "https://api.github.com/repos/DHI-GRAS/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/DHI-GRAS/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/DHI-GRAS/rasterio/tags", "blobs_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/DHI-GRAS/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/DHI-GRAS/rasterio/languages", "stargazers_url": "https://api.github.com/repos/DHI-GRAS/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/DHI-GRAS/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/DHI-GRAS/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/DHI-GRAS/rasterio/subscription", "commits_url": "https://api.github.com/repos/DHI-GRAS/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/DHI-GRAS/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/DHI-GRAS/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/DHI-GRAS/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/DHI-GRAS/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/DHI-GRAS/rasterio/merges", "archive_url": "https://api.github.com/repos/DHI-GRAS/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/DHI-GRAS/rasterio/downloads", "issues_url": "https://api.github.com/repos/DHI-GRAS/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/DHI-GRAS/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/DHI-GRAS/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/DHI-GRAS/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/DHI-GRAS/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/DHI-GRAS/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/DHI-GRAS/rasterio/deployments", "created_at": "2017-09-29T08:21:06Z", "updated_at": "2017-09-29T08:21:09Z", "pushed_at": "2017-12-19T14:03:31Z", "git_url": "git://github.com/DHI-GRAS/rasterio.git", "ssh_url": "git@github.com:DHI-GRAS/rasterio.git", "clone_url": "https://github.com/DHI-GRAS/rasterio.git", "svn_url": "https://github.com/DHI-GRAS/rasterio", "homepage": "", "size": 21886, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "mapbox:master", "ref": "master", "sha": "a30c8994f6a2af79179d92161cac09b6e64a2a9a", "user": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14116604, "name": "rasterio", "full_name": "mapbox/rasterio", "owner": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/mapbox/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": false, "url": "https://api.github.com/repos/mapbox/rasterio", "forks_url": "https://api.github.com/repos/mapbox/rasterio/forks", "keys_url": "https://api.github.com/repos/mapbox/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mapbox/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mapbox/rasterio/teams", "hooks_url": "https://api.github.com/repos/mapbox/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/mapbox/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/mapbox/rasterio/events", "assignees_url": "https://api.github.com/repos/mapbox/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/mapbox/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/mapbox/rasterio/tags", "blobs_url": "https://api.github.com/repos/mapbox/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mapbox/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mapbox/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mapbox/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/mapbox/rasterio/languages", "stargazers_url": "https://api.github.com/repos/mapbox/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/mapbox/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/mapbox/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/mapbox/rasterio/subscription", "commits_url": "https://api.github.com/repos/mapbox/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mapbox/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mapbox/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mapbox/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/mapbox/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mapbox/rasterio/merges", "archive_url": "https://api.github.com/repos/mapbox/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mapbox/rasterio/downloads", "issues_url": "https://api.github.com/repos/mapbox/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/mapbox/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/mapbox/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/mapbox/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mapbox/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/mapbox/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/mapbox/rasterio/deployments", "created_at": "2013-11-04T16:36:27Z", "updated_at": "2018-01-18T17:13:28Z", "pushed_at": "2018-01-11T17:43:55Z", "git_url": "git://github.com/mapbox/rasterio.git", "ssh_url": "git@github.com:mapbox/rasterio.git", "clone_url": "https://github.com/mapbox/rasterio.git", "svn_url": "https://github.com/mapbox/rasterio", "homepage": "", "size": 22423, "stargazers_count": 696, "watchers_count": 696, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 180, "mirror_url": null, "archived": false, "open_issues_count": 142, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 180, "open_issues": 142, "watchers": 696, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1226"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/1226"}, "issue": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1226"}, "comments": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1226/comments"}, "review_comments": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1226/comments"}, "review_comment": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1226/commits"}, "statuses": {"href": "https://api.github.com/repos/mapbox/rasterio/statuses/e92655bf798103b20ffe0dbcb839a8524507850b"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/1079", "id": 128508749, "html_url": "https://github.com/mapbox/rasterio/pull/1079", "diff_url": "https://github.com/mapbox/rasterio/pull/1079.diff", "patch_url": "https://github.com/mapbox/rasterio/pull/1079.patch", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/1079", "number": 1079, "state": "open", "locked": false, "title": "[WIP] Support non-path connection strings", "user": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "body": "**Not ready**\r\n\r\nCloses #871\r\n\r\nI tried demonstrating this with a PostGIS raster table, but had some problems with my `$ brew install`'ed version of PostGIS lacking `raster2pgsql`.  The only other raster driver I am aware of that uses connection strings is Planet's `PLScenes` driver, although it requires setting up a https://planet.com/explorer account to get an API key.\r\n\r\nCurrently on master:\r\n\r\n```console\r\n$ PL_API_KEY=$(cat planet-api) rio info \"PLScenes:scene=20170602_180403_1008\"\r\nUsage: rio info [OPTIONS] INPUT\r\n\r\nError: Invalid value for \"INPUT\": PLScenes:scene=20170602_180403_1008 is not a valid input file\r\n```\r\n\r\nThe analogous GDAL command: `$ PL_API_KEY=$(cat planet-api) gdalinfo \"PLScenes:scene=20170602_180403_1008\"`\r\n\r\n### Problems ###\r\n\r\nThere are a bunch of `click.Path(exists=True)` that need to be resolved, but before I do that:\r\n\r\nMy initial goal for this PR was to change as little behavior as possible, however because the CLI does an existence check on every input image before executing, the CLI now incurs all of the network overhead associated with a `rasterio.open()` on remote datasets, including S3.  The tradeoff is that the CLI can raise a useful \"the input raster doesn't exist\" but the network overhead is a major drag that translates to real money for heavy users of the CLI in production.\r\n\r\nThe solution is to never do a file existence check and just let `rasterio.open()` fail, but that won't work for ensuring existing output files aren't overwritten, plus the resulting error isn't nearly as useful:\r\n\r\n```console\r\n$ rio info trash\r\nERROR:rasterio._gdal:CPLE_OpenFailed in trash: No such file or directory\r\nAborted!\r\n```\r\n\r\nThe above error is less useful than:\r\n\r\n```console\r\n$ gdalinfo trash\r\nERROR 4: trash: No such file or directory\r\ngdalinfo failed - unable to open 'trash'.\r\n```\r\n\r\n### Solution ###\r\n\r\nAnyone working with remote rasters is probably at least a little bit experienced with this stuff, and the CLI level sanity checks are _most_ useful for those that are inexperienced.  I think I can rework the `click` handlers to just assume a connection string exists, which is how VSI URL's work right now on `master`, so for most cases we still get the errors, but in some cases users will have to parse the CPLE log to figure out what went wrong.  The remaining `click.Path()` instances will all have to be replaced with a smarter callback, but I think we already have a generic one somewhere.\r\n\r\nThis PR does not address write support, but to my knowledge none of the remote raster drivers do, including [PostGIS Raster](https://trac.osgeo.org/gdal/wiki/frmts_wtkraster.html).  I left the `os.path.exists()` checks in the core write code path, so if its actually a problem eventually someone will hit them.", "created_at": "2017-07-02T04:15:27Z", "updated_at": "2017-10-14T06:06:46Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "80d26e6a2281bb08d94d60673d4e64e4da0c5b75", "assignee": {"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "geowurster", "id": 2676083, "avatar_url": "https://avatars2.githubusercontent.com/u/2676083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geowurster", "html_url": "https://github.com/geowurster", "followers_url": "https://api.github.com/users/geowurster/followers", "following_url": "https://api.github.com/users/geowurster/following{/other_user}", "gists_url": "https://api.github.com/users/geowurster/gists{/gist_id}", "starred_url": "https://api.github.com/users/geowurster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geowurster/subscriptions", "organizations_url": "https://api.github.com/users/geowurster/orgs", "repos_url": "https://api.github.com/users/geowurster/repos", "events_url": "https://api.github.com/users/geowurster/events{/privacy}", "received_events_url": "https://api.github.com/users/geowurster/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1079/commits", "review_comments_url": "https://api.github.com/repos/mapbox/rasterio/pulls/1079/comments", "review_comment_url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/issues/1079/comments", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/4c9073468994b118f24463934c66febf11fadee3", "head": {"label": "mapbox:no-path-rasters", "ref": "no-path-rasters", "sha": "4c9073468994b118f24463934c66febf11fadee3", "user": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14116604, "name": "rasterio", "full_name": "mapbox/rasterio", "owner": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/mapbox/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": false, "url": "https://api.github.com/repos/mapbox/rasterio", "forks_url": "https://api.github.com/repos/mapbox/rasterio/forks", "keys_url": "https://api.github.com/repos/mapbox/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mapbox/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mapbox/rasterio/teams", "hooks_url": "https://api.github.com/repos/mapbox/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/mapbox/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/mapbox/rasterio/events", "assignees_url": "https://api.github.com/repos/mapbox/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/mapbox/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/mapbox/rasterio/tags", "blobs_url": "https://api.github.com/repos/mapbox/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mapbox/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mapbox/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mapbox/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/mapbox/rasterio/languages", "stargazers_url": "https://api.github.com/repos/mapbox/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/mapbox/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/mapbox/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/mapbox/rasterio/subscription", "commits_url": "https://api.github.com/repos/mapbox/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mapbox/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mapbox/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mapbox/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/mapbox/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mapbox/rasterio/merges", "archive_url": "https://api.github.com/repos/mapbox/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mapbox/rasterio/downloads", "issues_url": "https://api.github.com/repos/mapbox/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/mapbox/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/mapbox/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/mapbox/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mapbox/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/mapbox/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/mapbox/rasterio/deployments", "created_at": "2013-11-04T16:36:27Z", "updated_at": "2018-01-18T17:13:28Z", "pushed_at": "2018-01-11T17:43:55Z", "git_url": "git://github.com/mapbox/rasterio.git", "ssh_url": "git@github.com:mapbox/rasterio.git", "clone_url": "https://github.com/mapbox/rasterio.git", "svn_url": "https://github.com/mapbox/rasterio", "homepage": "", "size": 22423, "stargazers_count": 696, "watchers_count": 696, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 180, "mirror_url": null, "archived": false, "open_issues_count": 142, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 180, "open_issues": 142, "watchers": 696, "default_branch": "master"}}, "base": {"label": "mapbox:master", "ref": "master", "sha": "ab502b4af0c42708a9110ae9d345d2a4af56ac72", "user": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14116604, "name": "rasterio", "full_name": "mapbox/rasterio", "owner": {"login": "mapbox", "id": 600935, "avatar_url": "https://avatars1.githubusercontent.com/u/600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapbox", "html_url": "https://github.com/mapbox", "followers_url": "https://api.github.com/users/mapbox/followers", "following_url": "https://api.github.com/users/mapbox/following{/other_user}", "gists_url": "https://api.github.com/users/mapbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapbox/subscriptions", "organizations_url": "https://api.github.com/users/mapbox/orgs", "repos_url": "https://api.github.com/users/mapbox/repos", "events_url": "https://api.github.com/users/mapbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mapbox/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/mapbox/rasterio", "description": "Rasterio reads and writes geospatial raster datasets", "fork": false, "url": "https://api.github.com/repos/mapbox/rasterio", "forks_url": "https://api.github.com/repos/mapbox/rasterio/forks", "keys_url": "https://api.github.com/repos/mapbox/rasterio/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mapbox/rasterio/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mapbox/rasterio/teams", "hooks_url": "https://api.github.com/repos/mapbox/rasterio/hooks", "issue_events_url": "https://api.github.com/repos/mapbox/rasterio/issues/events{/number}", "events_url": "https://api.github.com/repos/mapbox/rasterio/events", "assignees_url": "https://api.github.com/repos/mapbox/rasterio/assignees{/user}", "branches_url": "https://api.github.com/repos/mapbox/rasterio/branches{/branch}", "tags_url": "https://api.github.com/repos/mapbox/rasterio/tags", "blobs_url": "https://api.github.com/repos/mapbox/rasterio/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mapbox/rasterio/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mapbox/rasterio/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mapbox/rasterio/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mapbox/rasterio/statuses/{sha}", "languages_url": "https://api.github.com/repos/mapbox/rasterio/languages", "stargazers_url": "https://api.github.com/repos/mapbox/rasterio/stargazers", "contributors_url": "https://api.github.com/repos/mapbox/rasterio/contributors", "subscribers_url": "https://api.github.com/repos/mapbox/rasterio/subscribers", "subscription_url": "https://api.github.com/repos/mapbox/rasterio/subscription", "commits_url": "https://api.github.com/repos/mapbox/rasterio/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mapbox/rasterio/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mapbox/rasterio/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mapbox/rasterio/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mapbox/rasterio/contents/{+path}", "compare_url": "https://api.github.com/repos/mapbox/rasterio/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mapbox/rasterio/merges", "archive_url": "https://api.github.com/repos/mapbox/rasterio/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mapbox/rasterio/downloads", "issues_url": "https://api.github.com/repos/mapbox/rasterio/issues{/number}", "pulls_url": "https://api.github.com/repos/mapbox/rasterio/pulls{/number}", "milestones_url": "https://api.github.com/repos/mapbox/rasterio/milestones{/number}", "notifications_url": "https://api.github.com/repos/mapbox/rasterio/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mapbox/rasterio/labels{/name}", "releases_url": "https://api.github.com/repos/mapbox/rasterio/releases{/id}", "deployments_url": "https://api.github.com/repos/mapbox/rasterio/deployments", "created_at": "2013-11-04T16:36:27Z", "updated_at": "2018-01-18T17:13:28Z", "pushed_at": "2018-01-11T17:43:55Z", "git_url": "git://github.com/mapbox/rasterio.git", "ssh_url": "git@github.com:mapbox/rasterio.git", "clone_url": "https://github.com/mapbox/rasterio.git", "svn_url": "https://github.com/mapbox/rasterio", "homepage": "", "size": 22423, "stargazers_count": 696, "watchers_count": 696, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 180, "mirror_url": null, "archived": false, "open_issues_count": 142, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 180, "open_issues": 142, "watchers": 696, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1079"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/1079"}, "issue": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1079"}, "comments": {"href": "https://api.github.com/repos/mapbox/rasterio/issues/1079/comments"}, "review_comments": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1079/comments"}, "review_comment": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/1079/commits"}, "statuses": {"href": "https://api.github.com/repos/mapbox/rasterio/statuses/4c9073468994b118f24463934c66febf11fadee3"}}, "author_association": "COLLABORATOR"}], "issue_comments": [{"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29094970", "html_url": "https://github.com/mapbox/rasterio/issues/2#issuecomment-29094970", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/2", "id": 29094970, "user": {"login": "celoyd", "id": 148985, "avatar_url": "https://avatars2.githubusercontent.com/u/148985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/celoyd", "html_url": "https://github.com/celoyd", "followers_url": "https://api.github.com/users/celoyd/followers", "following_url": "https://api.github.com/users/celoyd/following{/other_user}", "gists_url": "https://api.github.com/users/celoyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/celoyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/celoyd/subscriptions", "organizations_url": "https://api.github.com/users/celoyd/orgs", "repos_url": "https://api.github.com/users/celoyd/repos", "events_url": "https://api.github.com/users/celoyd/events{/privacy}", "received_events_url": "https://api.github.com/users/celoyd/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-22T18:03:46Z", "updated_at": "2013-11-22T18:03:46Z", "author_association": "MEMBER", "body": "Makes complete sense. Of the conflicting conventions, this seems like the less painful one to apply.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29094970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29264866", "html_url": "https://github.com/mapbox/rasterio/issues/9#issuecomment-29264866", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/9", "id": 29264866, "user": {"login": "prologic", "id": 1290234, "avatar_url": "https://avatars2.githubusercontent.com/u/1290234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prologic", "html_url": "https://github.com/prologic", "followers_url": "https://api.github.com/users/prologic/followers", "following_url": "https://api.github.com/users/prologic/following{/other_user}", "gists_url": "https://api.github.com/users/prologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/prologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prologic/subscriptions", "organizations_url": "https://api.github.com/users/prologic/orgs", "repos_url": "https://api.github.com/users/prologic/repos", "events_url": "https://api.github.com/users/prologic/events{/privacy}", "received_events_url": "https://api.github.com/users/prologic/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T03:24:28Z", "updated_at": "2013-11-26T03:24:28Z", "author_association": "NONE", "body": "IHMO I don't think it's a big deal to depend on six\nI do so in a few of my projects and it's quite a minimal dependency.\nPlus if you already have it installed by some other dependency than it's no\nproblems at all.\n\noverall if you plan on supporting both Python 2/3 six is the way to go and\nyou'll just end up duplicating six code if you don't use six.\n\ncheers\nJames\n\nJames Mills / prologic\n\nE: prologic@shortcircuit.net.au\nW: prologic.shortcircuit.net.au\n\nOn Tue, Nov 26, 2013 at 11:07 AM, Mike Toews notifications@github.comwrote:\n\n> Currently there is a very limited used of the six module dependency.\n> \n> In rasterio/**init**.py:\n> \n> from six import string_types\n> \n> Looking at the source codehttps://github.com/kelp404/six/blob/master/six.py#L31,\n> this function from the module can be replaced by:\n> \n> import sysif sys.version_info[0] >= 3:\n>     string_types = str,else:\n>     string_types = basestring,\n> \n> Or, an alternative solution is to define:\n> \n> if sys.version_info[0] >= 3:\n>     basestring = str\n> \n> and replace instances of string_types with basestring.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sgillies/rasterio/issues/9\n> .\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29264866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29265265", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29265265", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29265265, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T03:36:59Z", "updated_at": "2013-11-26T03:36:59Z", "author_association": "CONTRIBUTOR", "body": "Using ReadBlock and WriteBlock as in http://www.gdal.org/classGDALRasterBand.html#a09e1d83971ddff0b43deffd54ef25eef?\n\nA major concern for me is how RasterIO and Block access can't be mixed, explained in http://osgeo-org.1560.x6.nabble.com/gdal-dev-Best-practices-for-concurrent-writes-with-GDAL-was-RasterIO-in-paralel-td3746104.html#a3746106, and how to protect programmers from mixing them.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29265265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29273497", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29273497", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29273497, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T07:59:40Z", "updated_at": "2013-11-26T07:59:40Z", "author_association": "COLLABORATOR", "body": "I was thinking more along the lines of using windowed read/write and just have a convenient way to align the processing chunks with the block size of the source raster.\n\nThis is not as fast as using block indexes directly, but it is significantly faster than making badly aligned reads, and it should prevent mistakes as you mention.\n\nMoreover this approach will always work regardless of differences in source and destination layout (for instance going from a tiled source to a scanline destination). At worst it will perform more or less as bad as choosing you own chunks.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29273497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29277850", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29277850", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29277850, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T09:25:36Z", "updated_at": "2013-11-26T15:14:20Z", "author_association": "COLLABORATOR", "body": "Basically I want to be able to process my rasters in chunks which should match the block layout from the source raster. Preferably without having to know too much about the \"block\" concept from GDAL.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29277850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29299794", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29299794", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29299794, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T15:13:04Z", "updated_at": "2013-11-26T15:13:04Z", "author_association": "CONTRIBUTOR", "body": "Don't take this the wrong way, anyone, but I'm going to prune away off-topic or tangential comments in this repo.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29299794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29301870", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29301870", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29301870, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T15:35:38Z", "updated_at": "2013-11-26T15:35:38Z", "author_association": "CONTRIBUTOR", "body": "Thanks, @AsgerPetersen, I think I get it.\n\nIn your example above, I see block reads and a windowed write. Is that deliberate? It could be a good usage pattern: block writing is tricky and as you said, requires understanding of GDAL internals, while block reading is more forgiving, just iterate over blocks as the driver gives them to you.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29301870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29301962", "html_url": "https://github.com/mapbox/rasterio/issues/7#issuecomment-29301962", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/7", "id": 29301962, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T15:36:40Z", "updated_at": "2013-11-26T15:36:40Z", "author_association": "CONTRIBUTOR", "body": "I'm probably in favor of this, but what exactly is the difference from #6?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29301962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29369492", "html_url": "https://github.com/mapbox/rasterio/issues/7#issuecomment-29369492", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/7", "id": 29369492, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-27T09:11:10Z", "updated_at": "2013-11-27T09:11:10Z", "author_association": "COLLABORATOR", "body": "Assuming the raster for some reason cannot be loaded entirely into RAM windowed reads are necessary to allow efficient random access. In my opinion this is a very common use case. For instance when calculating zonal stats, getting single pixel value etc.\n\n#6 allows efficient processing of the entire raster in smaller chunks.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29369492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29416692", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-29416692", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 29416692, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-27T20:14:55Z", "updated_at": "2013-11-28T08:07:02Z", "author_association": "COLLABORATOR", "body": "Yes, I think windowed write is the way to go. I am a little unsure whether it could maybe be a good idea to read the data out using windowed reads also.\n\nWith something like these methods (completely untested) exposed on RasterReader:\n\n``` python\ndef block_shapes(self):\n        \"\"\"Returns an ordered list of block shapes for all bands\"\"\"\n        cdef void *hband = NULL\n        cdef int *xsize, *ysize\n        if not self._block_shapes:\n            if not self._hds:\n                raise ValueError(\"Can't read closed raster file\")\n            for i in range(self._count):\n                hband = _gdal.GDALGetRasterBand(self._hds, i+1)\n                _gdal.GDALGetBlockSize(hband, xsize, ysize)\n                self._block_shapes.append( (xsize, ysize) )\n        return self._block_shapes\n\ndef get_chunks(self, bandix, chunk_shape = None):\n        block_shape = chunk_shape or self.block_shapes[bandix - 1]\n        cols = int(ceil(float(self.width) / block_shape[0]))\n        rows = int(ceil(float(self.height / block_shape[1]))\n        for c in xrange(cols):\n            yoffset = c * block_shape[0]\n            height = min(block_shape[0], self.height - yoffset)\n            r in xrange(rows):\n                xoffset = r * block_shape[1]\n                width = min(block_shape[1], self.width - xoffset)\n                yield (xoffset, yoffset, width, height)\n```\n\nWhich would then be used like this\n\n``` python\nwith rasterio.open('source.tif') as src:\n    kwargs = src.meta\n    with rasterio.open('destination.tif', 'w', **kwargs) as dst:\n        for window in src.get_chunks( 1 ):\n            data = src.read_band( 1, window)\n            dst.write_band( 1, data, window)\n```\n\nIf one want larger to process 2x2 blocks at a time:\n\n``` python\nwith rasterio.open('source.tif') as src:\n    kwargs = src.meta\n    with rasterio.open('destination.tif', 'w', **kwargs) as dst:\n        chunksize = map(lambda x: x*2, src.block_shapes[bandix - 1])\n        for window in src.get_chunks( 1, chunksize ):\n            data = src.read_band( 1, window)\n            dst.write_band(1, data, window)\n```\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29416692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29593268", "html_url": "https://github.com/mapbox/rasterio/issues/12#issuecomment-29593268", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/12", "id": 29593268, "user": {"login": "hobu", "id": 87751, "avatar_url": "https://avatars2.githubusercontent.com/u/87751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hobu", "html_url": "https://github.com/hobu", "followers_url": "https://api.github.com/users/hobu/followers", "following_url": "https://api.github.com/users/hobu/following{/other_user}", "gists_url": "https://api.github.com/users/hobu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hobu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hobu/subscriptions", "organizations_url": "https://api.github.com/users/hobu/orgs", "repos_url": "https://api.github.com/users/hobu/repos", "events_url": "https://api.github.com/users/hobu/events{/privacy}", "received_events_url": "https://api.github.com/users/hobu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-02T04:01:18Z", "updated_at": "2013-12-02T04:01:18Z", "author_association": "NONE", "body": "gdal.py has never really had a successful interface to the warper. VRT is probably the most flexible interface to the warper at this time. I will say it'd be damn handy to be able to define your warp kernels in python and have GDAL use them. That's something that no one's done AFAIK.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/29593268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30175196", "html_url": "https://github.com/mapbox/rasterio/issues/1#issuecomment-30175196", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/1", "id": 30175196, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-09T21:27:36Z", "updated_at": "2013-12-09T21:27:36Z", "author_association": "CONTRIBUTOR", "body": "I'm going to try to keep issues actionable and moving forward, so will close this one. do send a pull request when ready!\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30175196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30182237", "html_url": "https://github.com/mapbox/rasterio/issues/1#issuecomment-30182237", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/1", "id": 30182237, "user": {"login": "prologic", "id": 1290234, "avatar_url": "https://avatars2.githubusercontent.com/u/1290234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prologic", "html_url": "https://github.com/prologic", "followers_url": "https://api.github.com/users/prologic/followers", "following_url": "https://api.github.com/users/prologic/following{/other_user}", "gists_url": "https://api.github.com/users/prologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/prologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prologic/subscriptions", "organizations_url": "https://api.github.com/users/prologic/orgs", "repos_url": "https://api.github.com/users/prologic/repos", "events_url": "https://api.github.com/users/prologic/events{/privacy}", "received_events_url": "https://api.github.com/users/prologic/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-09T22:48:24Z", "updated_at": "2013-12-09T22:48:24Z", "author_association": "NONE", "body": "No problems. I'll try to add this to rasterio soon. We have the code in our\nproject's codebase, just need to make it more rasterio-ish :)\n\nJames Mills / prologic\n\nE: prologic@shortcircuit.net.au\nW: prologic.shortcircuit.net.au\n\nOn Tue, Dec 10, 2013 at 7:27 AM, Sean Gillies notifications@github.comwrote:\n\n> I'm going to try to keep issues actionable and moving forward, so will\n> close this one. do send a pull request when ready!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sgillies/rasterio/issues/1#issuecomment-30175196\n> .\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30182237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30184894", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-30184894", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 30184894, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-09T23:22:08Z", "updated_at": "2013-12-09T23:22:08Z", "author_association": "CONTRIBUTOR", "body": "That interface looks almost exactly right to me. For a start, let's just have the native blocks as (offsetx, offsety, width, height) tuples from a src.blocks iterator. I'd rather we aggregate them (for the 2x2 case) using an itertools-ish grouping approach.\n\n```\nfor double_blocks in double_the_blocks(src.blocks(1)):\n    ...\n```\n\nBut if this won't work a chunksize kwarg would be okay. How about window as a kwarg?\n\n```\n    for block in src.blocks(1):\n        data = src.read_band(1, window=block)\n        dst.write_band(1, data, window=block)\n```\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30184894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30207168", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-30207168", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 30207168, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-10T08:25:56Z", "updated_at": "2013-12-10T08:25:56Z", "author_association": "COLLABORATOR", "body": "I think your approach with the \"itertool-ish grouping\" gives a cleaner and more understandable interface.\n\nThe block concept is difficult for people who are not raster aficionados, and having a \"chunksize\" param on a \"blocks\" method will only make things more confusing.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30207168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30246399", "html_url": "https://github.com/mapbox/rasterio/issues/6#issuecomment-30246399", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/6", "id": 30246399, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-10T17:04:11Z", "updated_at": "2013-12-10T17:04:11Z", "author_association": "CONTRIBUTOR", "body": "Great. While we're discussing blocks, I've got a half-formed idea that a function returning the block window for a given pixel coordinate would be helpful. Yes? No? \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30246399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30259698", "html_url": "https://github.com/mapbox/rasterio/issues/7#issuecomment-30259698", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/7", "id": 30259698, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-10T19:32:29Z", "updated_at": "2013-12-10T19:32:29Z", "author_association": "CONTRIBUTOR", "body": "Implemented in a8e0533 (I messed up the commit message, should have mentioned this issue). \n\nLemme know if it works like you'd expect. And thanks again for the help on this!\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30259698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30342183", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30342183", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30342183, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-11T17:33:15Z", "updated_at": "2013-12-11T17:33:15Z", "author_association": "CONTRIBUTOR", "body": "@AsgerPetersen you mean the window tuples, right? If so, I agree 100% and this is the time to switch. \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30342183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30347399", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30347399", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30347399, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-11T18:28:12Z", "updated_at": "2013-12-11T18:28:12Z", "author_association": "CONTRIBUTOR", "body": "Can you check out the commit above?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30347399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30360796", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30360796", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30360796, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-11T20:34:15Z", "updated_at": "2013-12-11T20:34:15Z", "author_association": "COLLABORATOR", "body": "The commit looks good, I think. I believe this will make rasterio a lot easier to use correctly.\n\nThank you! \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30360796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30390413", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30390413", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30390413, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-12T05:29:21Z", "updated_at": "2013-12-12T05:29:21Z", "author_association": "CONTRIBUTOR", "body": "@hobu, any comment on this interface for windowed reading and writing? https://github.com/sgillies/rasterio/blob/issue13/docs/windowed-rw.rst\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30390413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30486933", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30486933", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30486933, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T04:48:18Z", "updated_at": "2013-12-13T04:48:18Z", "author_association": "CONTRIBUTOR", "body": "@AsgerPetersen after a little more thought: to get closer to numpy syntax should the windows be tuples like \n\n```\n(row_start, row_stop, col_start, col_stop)\n```\n\nor even\n\n```\nwindow = ((row_start, row_stop), (col_start, col_stop))\n```\n\n? The second form is directly convertible to numpy slices for 2d subsets:\n\n```\narr[window[0]:window[1]]\n```\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30486933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30512796", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30512796", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30512796, "user": {"login": "hobu", "id": 87751, "avatar_url": "https://avatars2.githubusercontent.com/u/87751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hobu", "html_url": "https://github.com/hobu", "followers_url": "https://api.github.com/users/hobu/followers", "following_url": "https://api.github.com/users/hobu/following{/other_user}", "gists_url": "https://api.github.com/users/hobu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hobu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hobu/subscriptions", "organizations_url": "https://api.github.com/users/hobu/orgs", "repos_url": "https://api.github.com/users/hobu/repos", "events_url": "https://api.github.com/users/hobu/events{/privacy}", "received_events_url": "https://api.github.com/users/hobu/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T14:29:50Z", "updated_at": "2013-12-13T14:29:50Z", "author_association": "NONE", "body": ":+1: on the harmonization of ordering.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30512796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30514528", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30514528", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30514528, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T14:53:38Z", "updated_at": "2013-12-13T14:53:38Z", "author_association": "COLLABORATOR", "body": "The second form looks nice, I think.\n\nShould the ul-method take a coordinate tuple then?\n\nLike:\nsrc.ul(window [0])\n\nSent from Samsung Mobile\n\n-------- Original message --------\nFrom: Sean Gillies notifications@github.com \nDate:  \nTo: sgillies/rasterio rasterio@noreply.github.com \nCc: Asger Skovbo Petersen mail@asgerpetersen.dk \nSubject: Re: [rasterio] Harmonize indexing throughout the API (#13) \n\n@AsgerPetersen after a little more thought: to get closer to numpy syntax should the windows be tuples like\n\n(row_start, row_stop, col_start, col_stop)\nor even\n\nwindow = ((row_start, row_stop), (col_start, col_stop))\n? The second form is directly convertible to numpy slices for 2d subsets:\n\narr[window[0]:window[1]]\n\u2014\nReply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30514528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30523031", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30523031", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30523031, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T16:37:33Z", "updated_at": "2013-12-13T16:37:33Z", "author_association": "CONTRIBUTOR", "body": "@hobu thanks!\n\n@AsgerPetersen: windows don't apply to .ul(). It's there to serve the \"I have x,y coordinates in space, what pixel do they fit?\" question. But yes, it could accept either a tuple or x, y positional params.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30523031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30526571", "html_url": "https://github.com/mapbox/rasterio/issues/13#issuecomment-30526571", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/13", "id": 30526571, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T17:21:12Z", "updated_at": "2013-12-13T17:21:12Z", "author_association": "COLLABORATOR", "body": "If the elements of a window specifies the coords of a certain pixel. Wouldn't it be logical if the same way of specifying pixel coords is used throughout the api?\n\nSent from Samsung Mobile\n\n-------- Original message --------\nFrom: Sean Gillies notifications@github.com \nDate:  \nTo: sgillies/rasterio rasterio@noreply.github.com \nCc: Asger Skovbo Petersen mail@asgerpetersen.dk \nSubject: Re: [rasterio] Harmonize indexing throughout the API (#13) \n\n@hobu thanks!\n\n@AsgerPetersen: windows don't apply to .ul(). It's there to serve the \"I have x,y coordinates in space, what pixel do they fit?\" question. But yes, it could accept either a tuple or x, y positional params.\n\n\u2014\nReply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30526571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30599230", "html_url": "https://github.com/mapbox/rasterio/issues/14#issuecomment-30599230", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/14", "id": 30599230, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-15T06:33:11Z", "updated_at": "2013-12-15T06:33:11Z", "author_association": "CONTRIBUTOR", "body": "@RutgerK: it's an interesting idea, but I think it complicates rasterio and is better left out of the library. I suspect it would be less code to extend rasterio yourself with a new function that took a list of filenames and made itself into a context manager for all those files, closing them on exit, etc.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30599230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30632406", "html_url": "https://github.com/mapbox/rasterio/issues/15#issuecomment-30632406", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/15", "id": 30632406, "user": {"login": "prologic", "id": 1290234, "avatar_url": "https://avatars2.githubusercontent.com/u/1290234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prologic", "html_url": "https://github.com/prologic", "followers_url": "https://api.github.com/users/prologic/followers", "following_url": "https://api.github.com/users/prologic/following{/other_user}", "gists_url": "https://api.github.com/users/prologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/prologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prologic/subscriptions", "organizations_url": "https://api.github.com/users/prologic/orgs", "repos_url": "https://api.github.com/users/prologic/repos", "events_url": "https://api.github.com/users/prologic/events{/privacy}", "received_events_url": "https://api.github.com/users/prologic/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-16T03:57:42Z", "updated_at": "2013-12-16T03:57:42Z", "author_association": "NONE", "body": "Congrats on a great release!\n\nJames Mills / prologic\n\nE: prologic@shortcircuit.net.au\nW: prologic.shortcircuit.net.au\n\nOn Mon, Dec 16, 2013 at 1:47 PM, Sean Gillies notifications@github.comwrote:\n\n> Closed #15 https://github.com/sgillies/rasterio/issues/15.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/sgillies/rasterio/issues/15\n> .\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30632406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30677276", "html_url": "https://github.com/mapbox/rasterio/issues/16#issuecomment-30677276", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/16", "id": 30677276, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-16T16:53:03Z", "updated_at": "2013-12-16T16:53:03Z", "author_association": "CONTRIBUTOR", "body": "Agreed. How about another band-ordered list property (like band_shapes) called \"nodata\"?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/30677276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/31664866", "html_url": "https://github.com/mapbox/rasterio/pull/19#issuecomment-31664866", "issue_url": "https://api.github.com/repos/mapbox/rasterio/issues/19", "id": 31664866, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-06T16:58:25Z", "updated_at": "2014-01-06T16:58:25Z", "author_association": "CONTRIBUTOR", "body": "Looks pretty good. I see a couple little things to change, but I'll do that after I merge.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/issues/comments/31664866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/mapbox/rasterio/comments/6100902", "html_url": "https://github.com/mapbox/rasterio/commit/276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b#commitcomment-6100902", "id": 6100902, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b", "created_at": "2014-04-23T21:00:58Z", "updated_at": "2014-04-23T21:00:58Z", "author_association": "CONTRIBUTOR", "body": "@AsgerPetersen have you looked into parallel processing with rasterio? I thought you might be interested in this example. Turning it into a useful tool becomes a matter of choosing optimal window sizes, among other things, but this could be a good starting point.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6100902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6139025", "html_url": "https://github.com/mapbox/rasterio/commit/276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b#commitcomment-6139025", "id": 6139025, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b", "created_at": "2014-04-28T09:01:33Z", "updated_at": "2014-04-28T09:01:33Z", "author_association": "COLLABORATOR", "body": "@sgillies I prefer to split big rasters into separate tiffs and then process these datasets in parallel if the algorithm allows. This approach scales well, performs well (for large enough processing jobs), and it saves me from a lot of headache :-)\n\nRegarding the example above: I guess the mentioned IOErrors come from trying to update the destination raster concurrently, which is generally not a good idea. Then having to reprocess the block every time the writing fails seems like a waste of good CPU cycles :-) Also, for large tiffs there will be a lot of overhead opening the files once for each block.\n\nI think a better pattern for parallelization would be 1 thread reading, n threads processing and 1 thread writing. Unfortunately I don't know Python multiprocessing well enough to shake an example out of my sleeve.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6139025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6144313", "html_url": "https://github.com/mapbox/rasterio/commit/276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b#commitcomment-6144313", "id": 6144313, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "276e0d1c4e2cde6fc41afda5f6ac4c4ca1eebd0b", "created_at": "2014-04-28T16:22:38Z", "updated_at": "2014-04-28T16:22:38Z", "author_association": "CONTRIBUTOR", "body": "@AsgerPetersen thanks for the feedback. Yeah, that's our parallelization strategy at Mapbox, too.\n\nI read through GDAL's warper code this weekend and discovered that in multi mode it does this: multiple threads each doing the full read-process-write chunk-wise but with mutexes that ensure that only one is doing IO on a file at any time. Better than what I suggested and worth exposing in rasterio someday.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6144313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6872946", "html_url": "https://github.com/mapbox/rasterio/commit/5902672da76f19ad302ede0d1c2065dfac00ad7f#commitcomment-6872946", "id": 6872946, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 18, "line": 1178, "path": "rasterio/_io.pyx", "commit_id": "5902672da76f19ad302ede0d1c2065dfac00ad7f", "created_at": "2014-07-02T16:46:41Z", "updated_at": "2014-07-02T16:46:41Z", "author_association": "CONTRIBUTOR", "body": "@kapadia How about returning a ColorInterp enum here?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6872946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6873073", "html_url": "https://github.com/mapbox/rasterio/commit/5902672da76f19ad302ede0d1c2065dfac00ad7f#commitcomment-6873073", "id": 6873073, "user": {"login": "kapadia", "id": 581337, "avatar_url": "https://avatars2.githubusercontent.com/u/581337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapadia", "html_url": "https://github.com/kapadia", "followers_url": "https://api.github.com/users/kapadia/followers", "following_url": "https://api.github.com/users/kapadia/following{/other_user}", "gists_url": "https://api.github.com/users/kapadia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapadia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapadia/subscriptions", "organizations_url": "https://api.github.com/users/kapadia/orgs", "repos_url": "https://api.github.com/users/kapadia/repos", "events_url": "https://api.github.com/users/kapadia/events{/privacy}", "received_events_url": "https://api.github.com/users/kapadia/received_events", "type": "User", "site_admin": false}, "position": 18, "line": 1178, "path": "rasterio/_io.pyx", "commit_id": "5902672da76f19ad302ede0d1c2065dfac00ad7f", "created_at": "2014-07-02T16:54:21Z", "updated_at": "2014-07-02T16:54:21Z", "author_association": "CONTRIBUTOR", "body": "@sgillies makes sense.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6873073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6873346", "html_url": "https://github.com/mapbox/rasterio/commit/5902672da76f19ad302ede0d1c2065dfac00ad7f#commitcomment-6873346", "id": 6873346, "user": {"login": "kapadia", "id": 581337, "avatar_url": "https://avatars2.githubusercontent.com/u/581337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapadia", "html_url": "https://github.com/kapadia", "followers_url": "https://api.github.com/users/kapadia/followers", "following_url": "https://api.github.com/users/kapadia/following{/other_user}", "gists_url": "https://api.github.com/users/kapadia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapadia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapadia/subscriptions", "organizations_url": "https://api.github.com/users/kapadia/orgs", "repos_url": "https://api.github.com/users/kapadia/repos", "events_url": "https://api.github.com/users/kapadia/events{/privacy}", "received_events_url": "https://api.github.com/users/kapadia/received_events", "type": "User", "site_admin": false}, "position": 18, "line": 1178, "path": "rasterio/_io.pyx", "commit_id": "5902672da76f19ad302ede0d1c2065dfac00ad7f", "created_at": "2014-07-02T17:13:36Z", "updated_at": "2014-07-02T17:13:36Z", "author_association": "CONTRIBUTOR", "body": "@sgillies done. also added the [enum to the setter](https://github.com/mapbox/rasterio/blob/9903d59a71e01285fe2632a0f4ed83a4f1dcc37d/rasterio/_io.pyx#L1576). That way if there's an invalid color interp, the enum will raise an error before calling the C function.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/6873346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8002097", "html_url": "https://github.com/mapbox/rasterio/commit/b240c0234643c25e32992f834ecb60ed1b51dd0f#commitcomment-8002097", "id": 8002097, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 15, "line": 182, "path": "tests/test_warp.py", "commit_id": "b240c0234643c25e32992f834ecb60ed1b51dd0f", "created_at": "2014-10-01T19:58:23Z", "updated_at": "2014-10-01T19:58:23Z", "author_association": "CONTRIBUTOR", "body": "@brendan-ward check this out :) another function that both Fiona and Rasterio have needed.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8002097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8006369", "html_url": "https://github.com/mapbox/rasterio/commit/7223283b787e84ed591ae2704bdc12d8a6b1542d#commitcomment-8006369", "id": 8006369, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 152, "line": 175, "path": "rasterio/_warp.pyx", "commit_id": "7223283b787e84ed591ae2704bdc12d8a6b1542d", "created_at": "2014-10-02T04:03:40Z", "updated_at": "2014-10-02T04:03:40Z", "author_association": "COLLABORATOR", "body": "@sgillies this breaks in cython 0.20 (on windows) due to casting of python temporary string to char*, but works fine in 0.21 ( [one of several new features](https://github.com/cython/cython/blob/master/CHANGES.rst#021-2014-09-10) ).  May want to up the version required in `requirements_dev.txt`\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8006369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8451730", "html_url": "https://github.com/mapbox/rasterio/commit/0a9debe3f43e9a4a66e2d389627252362acaa308#commitcomment-8451730", "id": 8451730, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 26, "line": 200, "path": "rasterio/features.py", "commit_id": "0a9debe3f43e9a4a66e2d389627252362acaa308", "created_at": "2014-11-05T22:00:31Z", "updated_at": "2014-11-05T22:00:31Z", "author_association": "CONTRIBUTOR", "body": "@jfloyd99 @brendan-ward is this better?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8451730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8451858", "html_url": "https://github.com/mapbox/rasterio/commit/0a9debe3f43e9a4a66e2d389627252362acaa308#commitcomment-8451858", "id": 8451858, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0a9debe3f43e9a4a66e2d389627252362acaa308", "created_at": "2014-11-05T22:08:00Z", "updated_at": "2014-11-05T22:08:00Z", "author_association": "COLLABORATOR", "body": "Looks better to me - thanks!.  :+1: \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8451858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808845", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8808845", "id": 8808845, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 550, "path": "rasterio/_io.pyx", "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T03:49:35Z", "updated_at": "2014-12-03T03:49:35Z", "author_association": "COLLABORATOR", "body": "Possibly overkill, but please consider adding numpy-style docstrings such as in [features.py](https://github.com/mapbox/rasterio/blob/master/rasterio/features.py#L25), as per #161.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808854", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8808854", "id": 8808854, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 8, "line": 553, "path": "rasterio/_io.pyx", "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T03:50:57Z", "updated_at": "2014-12-03T03:50:57Z", "author_association": "COLLABORATOR", "body": "Please move comment to it's own line (before or within `if`)\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808958", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8808958", "id": 8808958, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 26, "line": 571, "path": "rasterio/_io.pyx", "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T04:05:16Z", "updated_at": "2014-12-03T04:05:16Z", "author_association": "COLLABORATOR", "body": "Looks like you are sidestepping some of the validation of window parameters that you are doing in `eval_window`.  Might be a good idea to do some of that validation here or validation errors may get masked by `IndexErrors` or the like.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808971", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8808971", "id": 8808971, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 34, "line": 579, "path": "rasterio/_io.pyx", "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T04:08:17Z", "updated_at": "2014-12-03T04:08:17Z", "author_association": "COLLABORATOR", "body": "Leaving this unqualified seems like it risks catching too many kinds of exceptions, some of which are true errors (e.g., `IOError`?).  Are you trying to handle the `AssertionError` here or something else?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8808971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8809010", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8809010", "id": 8809010, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 59, "line": 604, "path": "rasterio/_io.pyx", "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T04:14:27Z", "updated_at": "2014-12-03T04:14:27Z", "author_association": "COLLABORATOR", "body": "could be simplified to: `if len(set(nodatavals)):` and avoid otherwise unused local variable above.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8809010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8823708", "html_url": "https://github.com/mapbox/rasterio/commit/c887da65dd245f7e3b3dc675a59b9fc068a811bf#commitcomment-8823708", "id": 8823708, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "c887da65dd245f7e3b3dc675a59b9fc068a811bf", "created_at": "2014-12-03T21:18:03Z", "updated_at": "2014-12-03T21:18:03Z", "author_association": "CONTRIBUTOR", "body": "Yes, yes. Good comments all.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8823708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8904553", "html_url": "https://github.com/mapbox/rasterio/commit/594b690d9f4fd5a3dca83bc7ba274d8503b15b5f#commitcomment-8904553", "id": 8904553, "user": {"login": "kapadia", "id": 581337, "avatar_url": "https://avatars2.githubusercontent.com/u/581337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapadia", "html_url": "https://github.com/kapadia", "followers_url": "https://api.github.com/users/kapadia/followers", "following_url": "https://api.github.com/users/kapadia/following{/other_user}", "gists_url": "https://api.github.com/users/kapadia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapadia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapadia/subscriptions", "organizations_url": "https://api.github.com/users/kapadia/orgs", "repos_url": "https://api.github.com/users/kapadia/repos", "events_url": "https://api.github.com/users/kapadia/events{/privacy}", "received_events_url": "https://api.github.com/users/kapadia/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "594b690d9f4fd5a3dca83bc7ba274d8503b15b5f", "created_at": "2014-12-10T00:28:14Z", "updated_at": "2014-12-10T00:28:14Z", "author_association": "CONTRIBUTOR", "body": "@sgillies gcs.csv\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8904553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8904988", "html_url": "https://github.com/mapbox/rasterio/commit/594b690d9f4fd5a3dca83bc7ba274d8503b15b5f#commitcomment-8904988", "id": 8904988, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "594b690d9f4fd5a3dca83bc7ba274d8503b15b5f", "created_at": "2014-12-10T01:18:12Z", "updated_at": "2014-12-10T01:18:12Z", "author_association": "CONTRIBUTOR", "body": "@kapadia I think both will work in this case.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/8904988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9369978", "html_url": "https://github.com/mapbox/rasterio/commit/3921032fb33ad6d0d82112cf77ba4b03f1ee7a7b#commitcomment-9369978", "id": 9369978, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 53, "line": 479, "path": "rasterio/rasterfill.cpp", "commit_id": "3921032fb33ad6d0d82112cf77ba4b03f1ee7a7b", "created_at": "2015-01-21T04:57:45Z", "updated_at": "2015-01-21T04:57:45Z", "author_association": "COLLABORATOR", "body": "@sgillies Does this need to be closed below, ~ line 874?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9369978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370004", "html_url": "https://github.com/mapbox/rasterio/commit/62cc9168c4eb69f802b2f5951c6ea68b53d949e4#commitcomment-9370004", "id": 9370004, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 15, "line": 64, "path": "rasterio/_fill.pyx", "commit_id": "62cc9168c4eb69f802b2f5951c6ea68b53d949e4", "created_at": "2015-01-21T05:03:27Z", "updated_at": "2015-01-21T05:03:27Z", "author_association": "COLLABORATOR", "body": "@sgillies Please add a newline here; with two parameter lists that wrap like this it is hard to see breaks between function calls.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370115", "html_url": "https://github.com/mapbox/rasterio/commit/97b05ba2e13f240825210123314404129a323d93#commitcomment-9370115", "id": 9370115, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 25, "line": 25, "path": "rasterio/fill.py", "commit_id": "97b05ba2e13f240825210123314404129a323d93", "created_at": "2015-01-21T05:17:13Z", "updated_at": "2015-01-21T05:17:13Z", "author_association": "COLLABORATOR", "body": "@sgillies The docstring is now incorrect; image is not modified in place.  Not always a \"band\" either; may simply be an array.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370128", "html_url": "https://github.com/mapbox/rasterio/commit/97b05ba2e13f240825210123314404129a323d93#commitcomment-9370128", "id": 9370128, "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "position": 44, "line": 44, "path": "rasterio/fill.py", "commit_id": "97b05ba2e13f240825210123314404129a323d93", "created_at": "2015-01-21T05:18:52Z", "updated_at": "2015-01-21T05:18:52Z", "author_association": "COLLABORATOR", "body": "@sgillies you can return here and avoid possibly undefined `ret` below if `with` statement fails.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9370128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9379205", "html_url": "https://github.com/mapbox/rasterio/commit/3921032fb33ad6d0d82112cf77ba4b03f1ee7a7b#commitcomment-9379205", "id": 9379205, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 53, "line": 479, "path": "rasterio/rasterfill.cpp", "commit_id": "3921032fb33ad6d0d82112cf77ba4b03f1ee7a7b", "created_at": "2015-01-21T16:24:03Z", "updated_at": "2015-01-21T16:24:03Z", "author_association": "CONTRIBUTOR", "body": "Fixed in next revision\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9379205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9488111", "html_url": "https://github.com/mapbox/rasterio/commit/dc8682466c4ad5e72d97d3543fe957a6b08bb9a9#commitcomment-9488111", "id": 9488111, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 21, "line": 593, "path": "rasterio/_io.pyx", "commit_id": "dc8682466c4ad5e72d97d3543fe957a6b08bb9a9", "created_at": "2015-01-28T22:15:51Z", "updated_at": "2015-01-28T22:15:51Z", "author_association": "CONTRIBUTOR", "body": "@AsgerPetersen how's this for closure on #261?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9488111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9490237", "html_url": "https://github.com/mapbox/rasterio/commit/92ce29cc460f4e8d8b4871dc90085312577eece2#commitcomment-9490237", "id": 9490237, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 30, "line": 81, "path": "docs/reproject.rst", "commit_id": "92ce29cc460f4e8d8b4871dc90085312577eece2", "created_at": "2015-01-29T00:51:29Z", "updated_at": "2015-01-29T00:51:29Z", "author_association": "CONTRIBUTOR", "body": "@synflyn28 Whadaya think? Is this example helpful?\n\nMixing extent changes _and_ coordinate reference system (CRS) changes gets a little more complicated, for sure, because the destination transform needs to be in the units of the output CRS.\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9490237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9490328", "html_url": "https://github.com/mapbox/rasterio/commit/92ce29cc460f4e8d8b4871dc90085312577eece2#commitcomment-9490328", "id": 9490328, "user": {"login": "synflyn28", "id": 9700485, "avatar_url": "https://avatars1.githubusercontent.com/u/9700485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synflyn28", "html_url": "https://github.com/synflyn28", "followers_url": "https://api.github.com/users/synflyn28/followers", "following_url": "https://api.github.com/users/synflyn28/following{/other_user}", "gists_url": "https://api.github.com/users/synflyn28/gists{/gist_id}", "starred_url": "https://api.github.com/users/synflyn28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synflyn28/subscriptions", "organizations_url": "https://api.github.com/users/synflyn28/orgs", "repos_url": "https://api.github.com/users/synflyn28/repos", "events_url": "https://api.github.com/users/synflyn28/events{/privacy}", "received_events_url": "https://api.github.com/users/synflyn28/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "92ce29cc460f4e8d8b4871dc90085312577eece2", "created_at": "2015-01-29T01:00:20Z", "updated_at": "2015-01-29T01:05:41Z", "author_association": "NONE", "body": "Thanks Sean! This is a great example, though I'm thinking I'm letting gdalwarp do some assumption magic for my specific usecase. What I want to do simply take a raster with a given coordinate system (such as LCC) and then convert it into another one like WGS:84. With gdalwarp I don't mess with the any array dimensions and I let GDAL do all the destination optimization. I believe what I'm wanting to accomplish is what you mentioned as a TODO in your blog post here: http://sgillies.net/blog/2014/02/25/warping-images-with-rasterio.html\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9490328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9493394", "html_url": "https://github.com/mapbox/rasterio/commit/dc8682466c4ad5e72d97d3543fe957a6b08bb9a9#commitcomment-9493394", "id": 9493394, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "position": 21, "line": 593, "path": "rasterio/_io.pyx", "commit_id": "dc8682466c4ad5e72d97d3543fe957a6b08bb9a9", "created_at": "2015-01-29T07:41:37Z", "updated_at": "2015-01-29T07:41:37Z", "author_association": "COLLABORATOR", "body": "@sgillies Much better. Still, I think that it is not clear that the \"output array\" will not necessarily hold the final result. I have been reading Numpy docs, and I haven't been able to find this fact about ufuncs documented anywhere.  \n\nStating directly at the \"out\" parameter that it shouldn't be used as result would probably prevent a lot of hair pulling. Maybe \"output array\" could be changed to just \"array\". And how about adding something like this to the doc for \"out\": \"Note: The method result may be a view on this array.\" \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9493394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9557400", "html_url": "https://github.com/mapbox/rasterio/commit/876b9a1e2bf04e349b485e05ebc4a8674ace3cf0#commitcomment-9557400", "id": 9557400, "user": {"login": "AsgerPetersen", "id": 1392735, "avatar_url": "https://avatars2.githubusercontent.com/u/1392735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsgerPetersen", "html_url": "https://github.com/AsgerPetersen", "followers_url": "https://api.github.com/users/AsgerPetersen/followers", "following_url": "https://api.github.com/users/AsgerPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/AsgerPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsgerPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsgerPetersen/subscriptions", "organizations_url": "https://api.github.com/users/AsgerPetersen/orgs", "repos_url": "https://api.github.com/users/AsgerPetersen/repos", "events_url": "https://api.github.com/users/AsgerPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/AsgerPetersen/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "876b9a1e2bf04e349b485e05ebc4a8674ace3cf0", "created_at": "2015-02-03T08:08:47Z", "updated_at": "2015-02-03T08:08:47Z", "author_association": "COLLABORATOR", "body": "That is very clear. Thank you @sgillies  \n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9557400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9978925", "html_url": "https://github.com/mapbox/rasterio/commit/034ee2b97274d697aca50a79aa477976586b86db#commitcomment-9978925", "id": 9978925, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 39, "line": 675, "path": "rasterio/_io.pyx", "commit_id": "034ee2b97274d697aca50a79aa477976586b86db", "created_at": "2015-03-02T04:35:38Z", "updated_at": "2015-03-02T04:35:38Z", "author_association": "CONTRIBUTOR", "body": "@mwtoews can you check that this is consistent with your original intent?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9978925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9978939", "html_url": "https://github.com/mapbox/rasterio/commit/034ee2b97274d697aca50a79aa477976586b86db#commitcomment-9978939", "id": 9978939, "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "position": 27, "line": 599, "path": "rasterio/_io.pyx", "commit_id": "034ee2b97274d697aca50a79aa477976586b86db", "created_at": "2015-03-02T04:37:42Z", "updated_at": "2015-03-02T04:37:42Z", "author_association": "CONTRIBUTOR", "body": "@IamJeffG what do you think of this docstring change?\n", "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/comments/9978939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21583781", "pull_request_review_id": null, "id": 21583781, "diff_hunk": "@@ -84,6 +93,12 @@ cdef class GDALEnv(object):\n         CPLSetErrorHandler(<void *>errorHandler)\n         if driver_count() == 0:\n             raise ValueError(\"Drivers not registered\")\n+\n+        if 'GDAL_DATA' not in os.environ:\n+            if os.path.exists(os.path.join(sys.prefix, 'share/gdal/pcs.csv')):", "path": "rasterio/_drivers.pyx", "position": null, "original_position": 52, "commit_id": "a488f2aafe4881cd8c1bba51a03d333922138010", "original_commit_id": "a0f6b2f6a63bc8050e579675933d43122b4a5df5", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "Consider a little consolidation:\n\n```\ngdal_root = os.path.join(sys.prefix, 'share/gdal')\nif os.path.exists(os.path.join(gdal_root, 'pcs.csv')):\n    os.environ['GDAL_DATA'] = gdal_root\n```\n", "created_at": "2014-12-10T04:27:02Z", "updated_at": "2014-12-10T18:42:43Z", "html_url": "https://github.com/mapbox/rasterio/pull/217#discussion_r21583781", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/217", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21583781"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/217#discussion_r21583781"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/217"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21583781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21623377", "pull_request_review_id": null, "id": 21623377, "diff_hunk": "@@ -84,6 +93,12 @@ cdef class GDALEnv(object):\n         CPLSetErrorHandler(<void *>errorHandler)\n         if driver_count() == 0:\n             raise ValueError(\"Drivers not registered\")\n+\n+        if 'GDAL_DATA' not in os.environ:\n+            if os.path.exists(os.path.join(sys.prefix, 'share/gdal/pcs.csv')):", "path": "rasterio/_drivers.pyx", "position": null, "original_position": 52, "commit_id": "a488f2aafe4881cd8c1bba51a03d333922138010", "original_commit_id": "a0f6b2f6a63bc8050e579675933d43122b4a5df5", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies in cases of simple edits like this, would you prefer I:\n1) flag this for you to fix, then I merge when you are done      (this is closest to our process at CBI and why I defaulted to this)\n\nOR \n\n2) I make edits directly in your pull request, and ping you for approval\n\nOR \n\n3) I make edits then merge\n", "created_at": "2014-12-10T18:16:37Z", "updated_at": "2014-12-10T18:42:43Z", "html_url": "https://github.com/mapbox/rasterio/pull/217#discussion_r21623377", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/217", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21623377"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/217#discussion_r21623377"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/217"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/21623377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22075761", "pull_request_review_id": null, "id": 22075761, "diff_hunk": "@@ -74,9 +70,11 @@ def stack(ctx, input, bidx, photometric, output, driver):\n     logger = logging.getLogger('rio')\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n+            output = files[-1]", "path": "rasterio/rio/bands.py", "position": 36, "original_position": 36, "commit_id": "5abea7ccbf4f7595a41d09fb2aa903a7aa282bc7", "original_commit_id": "7cc5b6af38797859f34872b12beb20ea26269e61", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "just out of curiosity, why not use `pop` for this case?\n\n`output = files.pop()`\n", "created_at": "2014-12-18T22:14:47Z", "updated_at": "2014-12-18T23:05:07Z", "html_url": "https://github.com/mapbox/rasterio/pull/224#discussion_r22075761", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/224", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22075761"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/224#discussion_r22075761"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/224"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22075761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22256944", "pull_request_review_id": null, "id": 22256944, "diff_hunk": "@@ -0,0 +1,24 @@\n+import rasterio\n+from rasterio._fill import _fillnodata\n+\n+def fillnodata(image, mask=None, max_search_distance=100.0,\n+    smoothing_iterations=0):\n+    \"\"\"\n+    Fill nodata pixels by interpolation from the edges", "path": "rasterio/fill.py", "position": null, "original_position": 7, "commit_id": "4758a8aad45af22d466bf95ab4ab825eb2e31c02", "original_commit_id": "9a480d55dd335128a1ac3534d94cf654d15182f6", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@snorfalorpagus Please consider adding a bit more description to this from the GDAL docs describing the algorithm (and suggested uses or uses to avoid).\n", "created_at": "2014-12-24T14:28:55Z", "updated_at": "2014-12-25T23:31:11Z", "html_url": "https://github.com/mapbox/rasterio/pull/227#discussion_r22256944", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/227", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22256944"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/227#discussion_r22256944"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/227"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22256944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257019", "pull_request_review_id": null, "id": 22257019, "diff_hunk": "@@ -0,0 +1,24 @@\n+import rasterio\n+from rasterio._fill import _fillnodata\n+\n+def fillnodata(image, mask=None, max_search_distance=100.0,\n+    smoothing_iterations=0):\n+    \"\"\"\n+    Fill nodata pixels by interpolation from the edges\n+    \n+    Parameters\n+    ----------\n+    image : numpy ndarray\n+        The band to be modified in place\n+    mask : numpy ndarray\n+        A mask band indicating pixels to be interpolated (zero valud)", "path": "rasterio/fill.py", "position": null, "original_position": 14, "commit_id": "4758a8aad45af22d466bf95ab4ab825eb2e31c02", "original_commit_id": "9a480d55dd335128a1ac3534d94cf654d15182f6", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@snorfalorpagus typo: \"valud\" -> \"valued\".\n\nConsider rewriting a little to make it more clear, e.g.,:\n\n```\nA mask band indicating pixels to be interpolated.  Pixels to interpolate into are indicated by the value 0.  Values of 1 indicate areas to use during interpolation.  Must be same shape as image.\n```\n", "created_at": "2014-12-24T14:32:00Z", "updated_at": "2014-12-25T23:31:11Z", "html_url": "https://github.com/mapbox/rasterio/pull/227#discussion_r22257019", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/227", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257019"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/227#discussion_r22257019"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/227"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257045", "pull_request_review_id": null, "id": 22257045, "diff_hunk": "@@ -0,0 +1,24 @@\n+import rasterio\n+from rasterio._fill import _fillnodata\n+\n+def fillnodata(image, mask=None, max_search_distance=100.0,\n+    smoothing_iterations=0):\n+    \"\"\"\n+    Fill nodata pixels by interpolation from the edges\n+    \n+    Parameters\n+    ----------\n+    image : numpy ndarray\n+        The band to be modified in place\n+    mask : numpy ndarray\n+        A mask band indicating pixels to be interpolated (zero valud)\n+    max_search_distance : float, optional\n+        The maxmimum number of pixels to search in all directions to find\n+        values to interpolate from. The default is 100.\n+    smoothing_iterations : integer, optional\n+        The number of 3x3 smoothing filter passes to run. The default is 0.", "path": "rasterio/fill.py", "position": 34, "original_position": 19, "commit_id": "4758a8aad45af22d466bf95ab4ab825eb2e31c02", "original_commit_id": "9a480d55dd335128a1ac3534d94cf654d15182f6", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@snorfalorpagus If `smoothing_iterations` is retained, please add a little more detail to this description to indicate what smoothing applies to: interpolated pixels, or full image.\n", "created_at": "2014-12-24T14:33:02Z", "updated_at": "2014-12-25T23:31:11Z", "html_url": "https://github.com/mapbox/rasterio/pull/227#discussion_r22257045", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/227", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257045"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/227#discussion_r22257045"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/227"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22257045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240749", "pull_request_review_id": null, "id": 22240749, "diff_hunk": "@@ -22,3 +20,86 @@\n     '--quiet', '-q',\n     count=True,\n     help=\"Decrease verbosity.\")\n+\n+# Format driver option.\n+format_opt = click.option(\n+    '-f', '--format', '--driver',\n+    default='GTiff',\n+    help=\"Output format driver\")\n+\n+# JSON formatting options.\n+indent_opt = click.option(\n+    '--indent',\n+    type=int,\n+    default=None,\n+    help=\"Indentation level for JSON output\")\n+\n+compact_opt = click.option(\n+    '--compact/--no-compact',\n+    default=False,\n+    help=\"Use compact separators (',', ':').\")\n+\n+# Coordinate precision option.\n+precision_opt = click.option(\n+    '--precision',\n+    type=int,\n+    default=-1,\n+    help=\"Decimal precision of coordinates.\")\n+\n+# Geographic (default) or Mercator switch.\n+geographic_opt = click.option(\n+    '--geographic',\n+    'projected',\n+    flag_value='geographic',\n+    default=True,\n+    help=\"Output in geographic coordinates (the default).\")\n+\n+projected_opt = click.option(\n+    '--projected',\n+    'projected',\n+    flag_value='projected',\n+    help=\"Output in dataset's own, projected coordinates.\")\n+\n+mercator_opt = click.option(\n+    '--mercator',\n+    'projected',\n+    flag_value='mercator',\n+    help=\"Output in Web Mercator coordinates.\")\n+\n+# Collection or sequence.\n+collection_opt = click.option(\n+    '--collection/--sequence',\n+    default=True,\n+    help=\"Write a collection of shapes as a single object \"\n+         \"(the default) or write a sequence of objects.\")\n+\n+rs_opt = click.option(\n+    '--with-rs/--without-rs',\n+    'use_rs',\n+    default=False,\n+    help=\"Use RS as text separator.\")", "path": "rasterio/rio/params.py", "position": null, "original_position": 84, "commit_id": "c5267bb5f26bca1287a534a48ae426096979c599", "original_commit_id": "711f8fd45a07a7f6165dea8ca132560163935cbd", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "Please consider adding a little more to this message.\n\n```\nhelp=\"Use RS (0x1E) as a text separator between records \n(per the draft-ietf-json-text-sequence).  Default is False.\"\n```\n", "created_at": "2014-12-23T23:36:38Z", "updated_at": "2014-12-25T23:44:55Z", "html_url": "https://github.com/mapbox/rasterio/pull/228#discussion_r22240749", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/228", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240749"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/228#discussion_r22240749"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/228"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240789", "pull_request_review_id": null, "id": 22240789, "diff_hunk": "@@ -27,7 +30,11 @@\n # Insp command.\n @cli.command(short_help=\"Open a data file and start an interpreter.\")\n @click.argument('input', type=click.Path(exists=True))\n-@click.option('--mode', type=click.Choice(['r', 'r+']), default='r', help=\"File mode (default 'r').\")\n+@click.option(", "path": "rasterio/rio/rio.py", "position": 17, "original_position": 17, "commit_id": "c5267bb5f26bca1287a534a48ae426096979c599", "original_commit_id": "711f8fd45a07a7f6165dea8ca132560163935cbd", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "Consider moving this option to `params.py`\n", "created_at": "2014-12-23T23:38:07Z", "updated_at": "2014-12-25T23:44:55Z", "html_url": "https://github.com/mapbox/rasterio/pull/228#discussion_r22240789", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/228", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240789"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/228#discussion_r22240789"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/228"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22240789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22242597", "pull_request_review_id": null, "id": 22242597, "diff_hunk": "@@ -27,7 +30,11 @@\n # Insp command.\n @cli.command(short_help=\"Open a data file and start an interpreter.\")\n @click.argument('input', type=click.Path(exists=True))\n-@click.option('--mode', type=click.Choice(['r', 'r+']), default='r', help=\"File mode (default 'r').\")\n+@click.option(", "path": "rasterio/rio/rio.py", "position": 17, "original_position": 17, "commit_id": "c5267bb5f26bca1287a534a48ae426096979c599", "original_commit_id": "711f8fd45a07a7f6165dea8ca132560163935cbd", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": "I'm torn about this. Feels premature, I'd rather wait until it would be used in another command.\n", "created_at": "2014-12-24T00:50:38Z", "updated_at": "2014-12-25T23:44:55Z", "html_url": "https://github.com/mapbox/rasterio/pull/228#discussion_r22242597", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/228", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22242597"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/228#discussion_r22242597"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/228"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22242597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363749", "pull_request_review_id": null, "id": 22363749, "diff_hunk": "@@ -73,6 +73,7 @@ def bbox(self):\n \n         def __call__(self):\n             with rasterio.open(input) as src:\n+                img = None", "path": "rasterio/rio/features.py", "position": 4, "original_position": 4, "commit_id": "ed4890ce04e18686901dec4af8a6defcb134e215", "original_commit_id": "1091a69eea068435902c5a4dcbdc836d9b7ff527", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies Consider moving `nodata_mask = None` up here so it transcends the `if` branching below.\n", "created_at": "2014-12-30T20:38:26Z", "updated_at": "2014-12-30T20:42:06Z", "html_url": "https://github.com/mapbox/rasterio/pull/234#discussion_r22363749", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/234", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363749"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/234#discussion_r22363749"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/234"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363887", "pull_request_review_id": null, "id": 22363887, "diff_hunk": "@@ -73,6 +73,7 @@ def bbox(self):\n \n         def __call__(self):\n             with rasterio.open(input) as src:\n+                img = None", "path": "rasterio/rio/features.py", "position": 4, "original_position": 4, "commit_id": "ed4890ce04e18686901dec4af8a6defcb134e215", "original_commit_id": "1091a69eea068435902c5a4dcbdc836d9b7ff527", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": ":+1: \n", "created_at": "2014-12-30T20:42:14Z", "updated_at": "2014-12-30T20:42:14Z", "html_url": "https://github.com/mapbox/rasterio/pull/234#discussion_r22363887", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/234", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363887"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/234#discussion_r22363887"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/234"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22363887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22668026", "pull_request_review_id": null, "id": 22668026, "diff_hunk": "@@ -36,31 +36,39 @@ def merge(ctx, files, driver):\n             with rasterio.open(files[0]) as first:\n                 kwargs = first.meta\n                 kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n+                dest = np.zeros((first.count,) + first.shape, \n                     dtype=first.dtypes[0])\n \n+            nodataval = 0.0", "path": "rasterio/rio/merge.py", "position": null, "original_position": 8, "commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "original_commit_id": "9cd3cc049f8ebc02620bb55bc80cacdbf4ddb6cb", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies shouldn't this be based on the data type for `dest` or that automatically handled?\n\nThis could be:\n`nodataval = dest.flat[0]`\n", "created_at": "2015-01-08T17:56:55Z", "updated_at": "2015-01-08T19:39:21Z", "html_url": "https://github.com/mapbox/rasterio/pull/241#discussion_r22668026", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/241", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22668026"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/241#discussion_r22668026"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/241"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22668026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22675788", "pull_request_review_id": null, "id": 22675788, "diff_hunk": "@@ -36,31 +36,39 @@ def merge(ctx, files, driver):\n             with rasterio.open(files[0]) as first:\n                 kwargs = first.meta\n                 kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n+                dest = np.zeros((first.count,) + first.shape, \n                     dtype=first.dtypes[0])\n \n+            nodataval = 0.0", "path": "rasterio/rio/merge.py", "position": null, "original_position": 8, "commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "original_commit_id": "9cd3cc049f8ebc02620bb55bc80cacdbf4ddb6cb", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": "Good idea!\n", "created_at": "2015-01-08T19:39:31Z", "updated_at": "2015-01-08T19:39:31Z", "html_url": "https://github.com/mapbox/rasterio/pull/241#discussion_r22675788", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/241", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22675788"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/241#discussion_r22675788"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/241"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22675788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22695903", "pull_request_review_id": null, "id": 22695903, "diff_hunk": "@@ -36,31 +36,39 @@ def merge(ctx, files, driver):\n             with rasterio.open(files[0]) as first:\n                 kwargs = first.meta\n                 kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n+                dest = np.zeros((first.count,) + first.shape, \n                     dtype=first.dtypes[0])\n \n+            nodataval = next(dest.flat)\n             if os.path.exists(output):\n                 dst = rasterio.open(output, 'r+')\n-                nodataval = dst.nodatavals[0]\n+                nodataval = dst.nodatavals[0] or nodataval\n             else:\n                 kwargs['driver'] == driver\n                 dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                nodataval = first.nodatavals[0] or nodataval\n \n-            dest.fill(nodataval)\n+            if nodataval:\n+                dest.fill(nodataval)\n \n             for fname in reversed(files):\n                 with rasterio.open(fname) as src:\n                     data = src.read()\n-                    np.copyto(dest, data,\n-                        where=np.logical_and(\n-                        dest==nodataval, data.mask==False))\n+                    try:\n+                        where = np.logical_and(\n+                                dest==nodataval, data.mask==False)\n+                    except AttributeError:\n+                        where = dest==nodataval\n+                    np.copyto(dest, data, where=where)\n \n             if dst.mode == 'r+':\n                 data = dst.read()\n-                np.copyto(dest, data,\n-                    where=np.logical_and(\n-                    dest==nodataval, data.mask==False))\n+                try:", "path": "rasterio/rio/merge.py", "position": 41, "original_position": 41, "commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "original_commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies I'm not a fan of using exception handling to differentiate masked arrays from regular ndarrarys (here and above).\n\nHow about: \n`if isinstance(data, np.ma.masked_array):`\nOr \n`if hasattr(data, 'mask'):`\n\nIf I recall correctly, we do this test in many places in rasterio (in various ways), perhaps a tiny, obvious utility function would help us do this more consistently?  E.g., `is_masked_array(arr)`  (which could implement the highest performance way of detecting if masked or regular array).\n", "created_at": "2015-01-09T00:59:23Z", "updated_at": "2015-01-09T00:59:23Z", "html_url": "https://github.com/mapbox/rasterio/pull/241#discussion_r22695903", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/241", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22695903"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/241#discussion_r22695903"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/241"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22695903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22696067", "pull_request_review_id": null, "id": 22696067, "diff_hunk": "@@ -36,31 +36,39 @@ def merge(ctx, files, driver):\n             with rasterio.open(files[0]) as first:\n                 kwargs = first.meta\n                 kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n+                dest = np.zeros((first.count,) + first.shape, \n                     dtype=first.dtypes[0])\n \n+            nodataval = next(dest.flat)\n             if os.path.exists(output):\n                 dst = rasterio.open(output, 'r+')\n-                nodataval = dst.nodatavals[0]\n+                nodataval = dst.nodatavals[0] or nodataval\n             else:\n                 kwargs['driver'] == driver\n                 dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                nodataval = first.nodatavals[0] or nodataval\n \n-            dest.fill(nodataval)\n+            if nodataval:\n+                dest.fill(nodataval)\n \n             for fname in reversed(files):\n                 with rasterio.open(fname) as src:\n                     data = src.read()\n-                    np.copyto(dest, data,\n-                        where=np.logical_and(\n-                        dest==nodataval, data.mask==False))\n+                    try:\n+                        where = np.logical_and(\n+                                dest==nodataval, data.mask==False)\n+                    except AttributeError:\n+                        where = dest==nodataval\n+                    np.copyto(dest, data, where=where)\n \n             if dst.mode == 'r+':\n                 data = dst.read()\n-                np.copyto(dest, data,\n-                    where=np.logical_and(\n-                    dest==nodataval, data.mask==False))\n+                try:", "path": "rasterio/rio/merge.py", "position": 41, "original_position": 41, "commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "original_commit_id": "e08fb78754dcc3414b1ee8bd35b692ac75da4fbc", "user": {"login": "kapadia", "id": 581337, "avatar_url": "https://avatars2.githubusercontent.com/u/581337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapadia", "html_url": "https://github.com/kapadia", "followers_url": "https://api.github.com/users/kapadia/followers", "following_url": "https://api.github.com/users/kapadia/following{/other_user}", "gists_url": "https://api.github.com/users/kapadia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapadia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapadia/subscriptions", "organizations_url": "https://api.github.com/users/kapadia/orgs", "repos_url": "https://api.github.com/users/kapadia/repos", "events_url": "https://api.github.com/users/kapadia/events{/privacy}", "received_events_url": "https://api.github.com/users/kapadia/received_events", "type": "User", "site_admin": false}, "body": "+1.\n", "created_at": "2015-01-09T01:03:44Z", "updated_at": "2015-01-09T01:03:44Z", "html_url": "https://github.com/mapbox/rasterio/pull/241#discussion_r22696067", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/241", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22696067"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/241#discussion_r22696067"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/241"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22696067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835656", "pull_request_review_id": null, "id": 22835656, "diff_hunk": "@@ -377,10 +377,10 @@ cdef class DatasetReader(object):\n         \"\"\"Returns the window corresponding to the world bounding box.\"\"\"\n         ul = self.index(left, top)\n         lr = self.index(right, bottom)\n-        if ul[0] < 0 or ul[1] < 0 or lr[0] > self.height or lr[1] > self.width:\n-            raise ValueError(\"Bounding box overflows the dataset extents\")\n-        else:\n-            return tuple(zip(ul, lr))\n+        #if ul[0] < 0 or ul[1] < 0 or lr[0] > self.height or lr[1] > self.width:", "path": "rasterio/_base.pyx", "position": null, "original_position": 17, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies Please remove commented code\n", "created_at": "2015-01-13T00:37:30Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22835656", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835656"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22835656"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835831", "pull_request_review_id": null, "id": 22835831, "diff_hunk": "@@ -668,16 +668,31 @@ cdef class RasterReader(_base.DatasetReader):\n                 max(min(window[1][1] or self.width, self.width), 0)))\n \n             if overlap != ((0, 0), (0, 0)):\n-                data = self.read(indexes, window=overlap)\n+                # Prepare a buffer.\n+                window_h, window_w = win_shape[-2:]\n+                overlap_h = overlap[0][1] - overlap[0][0]\n+                overlap_w = overlap[1][1] - overlap[1][0]\n+                scaling_h = float(out.shape[-2:][0])/window_h\n+                scaling_w = float(out.shape[-2:][1])/window_w\n+                buffer_shape = (int(overlap_h*scaling_h), int(overlap_w*scaling_w))\n+                data = np.empty(win_shape[:-2] + buffer_shape, dtype)\n+                data = self._read(indexes, data, overlap, dtype)\n             else:\n                 data = None\n \n             if data is not None:\n                 # Determine where to put the data in the output window.\n-                window_h, window_w = win_shape[-2:]\n                 data_h, data_w = data.shape[-2:]\n-                roff = -window[0][0]\n-                coff = -window[1][0]\n+                roff = 0\n+                coff = 0\n+                if window[0][0] < 0:\n+                    roff = int(window_h*scaling_h) - data_h\n+                if window[0][0] > 0:", "path": "rasterio/_io.pyx", "position": null, "original_position": 36, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies This `if` and the one on 694 are unnecessary since they do not change the value of `roff` and `coff`\n", "created_at": "2015-01-13T00:41:23Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22835831", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835831"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22835831"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22835831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836018", "pull_request_review_id": null, "id": 22836018, "diff_hunk": "@@ -34,33 +45,76 @@ def merge(ctx, files, driver):\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dest = np.zeros((dst.count,) + dst.shape,\n+                        dtype=dst.dtypes[0])\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n+\n                 dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count,) + (output_height, output_width),", "path": "rasterio/rio/merge.py", "position": null, "original_position": 94, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies adding tuples seems unnecessary since everything is at hand here, couldn't you just do this?\n\n`dest = np.zeros((first.count, output_height, output_width), dtype=first.dtypes[0])`\n", "created_at": "2015-01-13T00:46:10Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836018", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836018"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836018"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836168", "pull_request_review_id": null, "id": 22836168, "diff_hunk": "@@ -34,33 +45,76 @@ def merge(ctx, files, driver):\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dest = np.zeros((dst.count,) + dst.shape,\n+                        dtype=dst.dtypes[0])\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n+\n                 dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count,) + (output_height, output_width),\n+                        dtype=first.dtypes[0])\n                 nodataval = first.nodatavals[0]\n \n-            dest.fill(nodataval)\n+            if nodataval is not None:\n+                dest.fill(nodataval)\n ", "path": "rasterio/rio/merge.py", "position": null, "original_position": 101, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies Consider adding:\n\n```\nelse:\n    nodataval = 0\n```\n\nand then remove the `or 0` part of the conditionals on lines 111 and 117.  Those seem risky unless handled here, since 0 is only indicating nodata when `nodataval is None`   (otherwise 0 is possibly a valid pixel value).\n", "created_at": "2015-01-13T00:50:09Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836168", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836168"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836168"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836307", "pull_request_review_id": null, "id": 22836307, "diff_hunk": "@@ -13,13 +13,12 @@ def test_full_window():\n     with rasterio.open('tests/data/RGB.byte.tif') as src:\n         assert src.window(*src.bounds) == tuple(zip((0, 0), src.shape))\n \n-def test_window_exception():\n+def test_window_no_exception():\n     with rasterio.open('tests/data/RGB.byte.tif') as src:\n         left, bottom, right, top = src.bounds\n         left -= 1000.0\n         try:\n             _ = src.window(left, bottom, right, top)\n-            assert False\n-        except ValueError:\n             assert True\n-\n+        except ValueError:", "path": "tests/test_indexing.py", "position": null, "original_position": 15, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies try / catch doesn't seem necessary here.  You are just verifying that src.window() executes.    (and if it throws something other than `ValueError` we'd want this test to fail here)\n", "created_at": "2015-01-13T00:53:50Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836307", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836307"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836307"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836413", "pull_request_review_id": null, "id": 22836413, "diff_hunk": "@@ -11,6 +13,7 @@ def test_read_boundless_natural_extent():\n     with rasterio.open('tests/data/RGB.byte.tif') as src:\n         data = src.read(boundless=True)\n         assert data.shape == (3, src.height, src.width)\n+        assert data[0].mean() == src.read(1).mean()", "path": "tests/test_read_boundless.py", "position": null, "original_position": 13, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies this seems potentially risky across platforms since it is a floating point precision equality comparison.  What about\n\n`assert abs(data[0].mean() - src.read(1).mean()) < 0.0001`\n", "created_at": "2015-01-13T00:56:41Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836413", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836413"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836413"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836912", "pull_request_review_id": null, "id": 22836912, "diff_hunk": "@@ -89,3 +89,50 @@ def test_format_jpeg(tmpdir):\n         ['tests/data/RGB.byte.tif', outputname, '--format', 'JPEG'])\n     assert result.exit_code == 0\n     assert os.path.exists(outputname)\n+\n+\n+# Non-coincident datasets test fixture.\n+# Two overlapping GeoTIFFs, one to the NW and one to the SE.\n+@fixture(scope='function')", "path": "tests/test_rio_merge.py", "position": 43, "original_position": 26, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "2b4f7284ba5b0483647628699b49788043ea80b1", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies I've been reconsidering how we are using fixtures here and in #241 based on my initial addition of them.  Obviously I didn't come up with a good precedent; the goal for fixtures should be something we reuse across multiple tests (my example originally did but I later modified the tests and ended up using it only once; I should have stripped it back out).  If the fixture is only used in one test, we could accomplish the same thing by having at the beginning of the test.  That said, your changes here are fine to leave as is for now.\n\nI'd like to take a pass at refactoring this pattern once this and #241 are merged into the codebase.  I'm also thinking that we'll probably want to move these fixtures from this module into `tests/conftest.py` so we can use them in other tests (there's other tests that could benefit from using these rather than the test files for performance reasons).\n", "created_at": "2015-01-13T01:07:37Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836912", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836912"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22836912"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22836912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22891841", "pull_request_review_id": null, "id": 22891841, "diff_hunk": "@@ -286,7 +286,7 @@ cdef class DatasetReader(object):\n                 if hband == NULL:\n                     raise ValueError(\"Null band\")\n                 val = _gdal.GDALGetRasterNoDataValue(hband, &success)\n-                if not success:\n+                if not success or val == -9999.0:", "path": "rasterio/_base.pyx", "position": null, "original_position": 5, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "6258f460ca8ac053357935559247f1fc85406d21", "user": {"login": "mwtoews", "id": 895458, "avatar_url": "https://avatars1.githubusercontent.com/u/895458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtoews", "html_url": "https://github.com/mwtoews", "followers_url": "https://api.github.com/users/mwtoews/followers", "following_url": "https://api.github.com/users/mwtoews/following{/other_user}", "gists_url": "https://api.github.com/users/mwtoews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtoews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtoews/subscriptions", "organizations_url": "https://api.github.com/users/mwtoews/orgs", "repos_url": "https://api.github.com/users/mwtoews/repos", "events_url": "https://api.github.com/users/mwtoews/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtoews/received_events", "type": "User", "site_admin": false}, "body": "Doesn't this unset the NoData value if -9999 is used?\n", "created_at": "2015-01-13T20:27:59Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22891841", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22891841"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22891841"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22891841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22892825", "pull_request_review_id": null, "id": 22892825, "diff_hunk": "@@ -286,7 +286,7 @@ cdef class DatasetReader(object):\n                 if hband == NULL:\n                     raise ValueError(\"Null band\")\n                 val = _gdal.GDALGetRasterNoDataValue(hband, &success)\n-                if not success:\n+                if not success or val == -9999.0:", "path": "rasterio/_base.pyx", "position": null, "original_position": 5, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "6258f460ca8ac053357935559247f1fc85406d21", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": "@mwtoews good point... i'll undo this and rethink my approach. Looking at the files I'm using to test rio-merge, they are uint8 with a defined nodata value of -9999.0. A terrible practice since this is also the value that GDAL returns from `GDALGetRasterNoDataValue()` when there's no defined nodata value. And I need to deal with this because a naive `.fill(nodataval)` leads to this:\n\n``` python\n>>> arr = np.zeros((2,2), np.uint8)\n>>> arr\narray([[0, 0],\n       [0, 0]], dtype=uint8)\n>>> arr.fill(-9999.0)\n>>> arr\narray([[241, 241],\n       [241, 241]], dtype=uint8)\n```\n", "created_at": "2015-01-13T20:41:35Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22892825", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22892825"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22892825"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22892825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22903768", "pull_request_review_id": null, "id": 22903768, "diff_hunk": "@@ -8,56 +9,134 @@\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                try:", "path": "rasterio/rio/merge.py", "position": null, "original_position": 115, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "476e1188e2383ef0918ba8a6348b4b3ec585d667", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies Consider using a conditional instead of exception handling:\n\n```\ntry: \n    if np.dtype(dtype).kind in ('i', 'u'):\n        info = np.iinfo(dtype)\n        inrange = (info.min <= nodataval <= info.max)\n    else:\n        info = np.finfo(dtype)\n        inrange = (info.min <= nodataval <= info.max)\n\nexcept:\n    pass\n```\n", "created_at": "2015-01-13T23:08:55Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22903768", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22903768"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22903768"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22903768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905134", "pull_request_review_id": null, "id": 22905134, "diff_hunk": "@@ -8,56 +9,134 @@\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                try:", "path": "rasterio/rio/merge.py", "position": null, "original_position": 115, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "476e1188e2383ef0918ba8a6348b4b3ec585d667", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": "Awesome. Yes.\n", "created_at": "2015-01-13T23:31:25Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22905134", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905134"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22905134"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905279", "pull_request_review_id": null, "id": 22905279, "diff_hunk": "@@ -8,56 +9,130 @@\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                if np.dtype(dtype).kind in ('i', 'u'):\n+                    info = np.iinfo(dtype)\n+                elif np.dtype(dtype).kind == 'f':\n+                    info = np.finfo(dtype)\n+                inrange = (info.min <= nodataval <= info.max)", "path": "rasterio/rio/merge.py", "position": null, "original_position": 119, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "9922499358d99f7a1fef84532318dea0e48f77f5", "user": {"login": "brendan-ward", "id": 3375604, "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "body": "@sgillies this has the risk of `info` being undefined at this point.\n", "created_at": "2015-01-13T23:33:57Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22905279", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905279"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22905279"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22905279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907139", "pull_request_review_id": null, "id": 22907139, "diff_hunk": "@@ -8,56 +9,130 @@\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                if np.dtype(dtype).kind in ('i', 'u'):\n+                    info = np.iinfo(dtype)\n+                elif np.dtype(dtype).kind == 'f':\n+                    info = np.finfo(dtype)\n+                inrange = (info.min <= nodataval <= info.max)", "path": "rasterio/rio/merge.py", "position": null, "original_position": 119, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "9922499358d99f7a1fef84532318dea0e48f77f5", "user": {"login": "mwtoews", "id": 895458, "avatar_url": "https://avatars1.githubusercontent.com/u/895458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtoews", "html_url": "https://github.com/mwtoews", "followers_url": "https://api.github.com/users/mwtoews/followers", "following_url": "https://api.github.com/users/mwtoews/following{/other_user}", "gists_url": "https://api.github.com/users/mwtoews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtoews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtoews/subscriptions", "organizations_url": "https://api.github.com/users/mwtoews/orgs", "repos_url": "https://api.github.com/users/mwtoews/repos", "events_url": "https://api.github.com/users/mwtoews/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtoews/received_events", "type": "User", "site_admin": false}, "body": "agree, like `'c'` [kind](http://docs.scipy.org/doc/numpy/reference/generated/numpy.dtype.kind.html) for complex types, which can use `ffinfo`. Just change `elif` to `else`, and this should work (`np.finfo(np.cdouble)`).\n", "created_at": "2015-01-14T00:08:44Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22907139", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907139"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22907139"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907774", "pull_request_review_id": null, "id": 22907774, "diff_hunk": "@@ -8,56 +9,130 @@\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                if np.dtype(dtype).kind in ('i', 'u'):\n+                    info = np.iinfo(dtype)\n+                elif np.dtype(dtype).kind == 'f':\n+                    info = np.finfo(dtype)\n+                inrange = (info.min <= nodataval <= info.max)", "path": "rasterio/rio/merge.py", "position": null, "original_position": 119, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "9922499358d99f7a1fef84532318dea0e48f77f5", "user": {"login": "sgillies", "id": 33697, "avatar_url": "https://avatars2.githubusercontent.com/u/33697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgillies", "html_url": "https://github.com/sgillies", "followers_url": "https://api.github.com/users/sgillies/followers", "following_url": "https://api.github.com/users/sgillies/following{/other_user}", "gists_url": "https://api.github.com/users/sgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgillies/subscriptions", "organizations_url": "https://api.github.com/users/sgillies/orgs", "repos_url": "https://api.github.com/users/sgillies/repos", "events_url": "https://api.github.com/users/sgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/sgillies/received_events", "type": "User", "site_admin": false}, "body": "Fixed. Also added more tests to get coverage of rasterio.rio.merge back to 100%.\n", "created_at": "2015-01-14T00:21:46Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22907774", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907774"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22907774"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22907774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22913400", "pull_request_review_id": null, "id": 22913400, "diff_hunk": "@@ -1,63 +1,140 @@\n # Merge command.\n \n import logging\n+import math\n import os.path\n import sys\n+import warnings\n \n import click\n from cligj import files_inout_arg, format_opt\n \n import rasterio\n-\n from rasterio.rio.cli import cli\n+from rasterio.transform import Affine\n \n \n @cli.command(short_help=\"Merge a stack of raster datasets.\")\n @files_inout_arg\n @format_opt\n+@click.option('--bounds', nargs=4, type=float, default=None,\n+              help=\"Output bounds: left, bottom, right, top.\")\n+@click.option('--res', nargs=2, type=float, default=None,\n+              help=\"Output dataset resolution: pixel width, pixel height\")\n+@click.option('--nodata', '-n', type=float, default=None,\n+              help=\"Override nodata values defined in input datasets\")\n @click.pass_context\n-def merge(ctx, files, driver):\n+def merge(ctx, files, driver, bounds, res, nodata):\n     \"\"\"Copy valid pixels from input files to an output file.\n \n-    All files must have the same shape, number of bands, and data type.\n+    All files must have the same number of bands, data type, and\n+    coordinate reference system.\n+\n+    Input files are merged in their listed order using the reverse\n+    painter's algorithm. If the output file exists, its values will be\n+    overwritten by input values.\n \n-    Input files are merged in their listed order using a reverse\n-    painter's algorithm.\n+    Geospatial bounds and resolution of a new output file in the\n+    units of the input file coordinate reference system may be provided\n+    and are otherwise taken from the first input file.\n     \"\"\"\n     import numpy as np\n \n     verbosity = (ctx.obj and ctx.obj.get('verbosity')) or 1\n     logger = logging.getLogger('rio')\n+\n     try:\n         with rasterio.drivers(CPL_DEBUG=verbosity>2):\n             output = files[-1]\n             files = files[:-1]\n \n             with rasterio.open(files[0]) as first:\n+                first_res = first.res\n                 kwargs = first.meta\n-                kwargs['transform'] = kwargs.pop('affine')\n-                dest = np.empty((first.count,) + first.shape, \n-                    dtype=first.dtypes[0])\n+                kwargs.pop('affine')\n+                nodataval = first.nodatavals[0]\n+                dtype = first.dtypes[0]\n \n             if os.path.exists(output):\n+                # TODO: prompt user to update existing file (-i option) like:\n+                # overwrite b.tif? (y/n [n]) n\n+                # not overwritten\n                 dst = rasterio.open(output, 'r+')\n                 nodataval = dst.nodatavals[0]\n+                dtype = dst.dtypes[0]\n+                dest = np.zeros((dst.count,) + dst.shape, dtype=dtype)\n             else:\n+                # Create new output file.\n+                # Extent from option or extent of all inputs.\n+                if not bounds:\n+                    # scan input files.\n+                    xs = []\n+                    ys = []\n+                    for f in files:\n+                        with rasterio.open(f) as src:\n+                            left, bottom, right, top = src.bounds\n+                            xs.extend([left, right])\n+                            ys.extend([bottom, top])\n+                    bounds = min(xs), min(ys), max(xs), max(ys)\n+                output_transform = Affine.translation(bounds[0], bounds[3])\n+\n+                # Resolution/pixel size.\n+                if not res:\n+                    res = first_res\n+                output_transform *= Affine.scale(res[0], -res[1])\n+\n+                # Dataset shape.\n+                output_width = int(math.ceil((bounds[2]-bounds[0])/res[0]))\n+                output_height = int(math.ceil((bounds[3]-bounds[1])/res[1]))\n+\n                 kwargs['driver'] == driver\n-                dst = rasterio.open(output, 'w', **kwargs)\n-                nodataval = first.nodatavals[0]\n+                kwargs['transform'] = output_transform\n+                kwargs['width'] = output_width\n+                kwargs['height'] = output_height\n \n-            dest.fill(nodataval)\n+                dst = rasterio.open(output, 'w', **kwargs)\n+                dest = np.zeros((first.count, output_height, output_width),\n+                        dtype=dtype)\n+\n+            if nodata is not None:\n+                nodataval = nodata\n+\n+            if nodataval is not None:\n+                # Only fill if the nodataval is within dtype's range.\n+                inrange = False\n+                if np.dtype(dtype).kind in ('i', 'u'):\n+                    info = np.iinfo(dtype)\n+                    inrange = (info.min <= nodataval <= info.max)\n+                elif np.dtype(dtype).kind == 'f':", "path": "rasterio/rio/merge.py", "position": 122, "original_position": 119, "commit_id": "0cde25b9cd9ed36e09e08d63b5b392365b6428ba", "original_commit_id": "f686ccad70f05d9f6b712d7e00a4f92c37af70bb", "user": {"login": "mwtoews", "id": 895458, "avatar_url": "https://avatars1.githubusercontent.com/u/895458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtoews", "html_url": "https://github.com/mwtoews", "followers_url": "https://api.github.com/users/mwtoews/followers", "following_url": "https://api.github.com/users/mwtoews/following{/other_user}", "gists_url": "https://api.github.com/users/mwtoews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtoews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtoews/subscriptions", "organizations_url": "https://api.github.com/users/mwtoews/orgs", "repos_url": "https://api.github.com/users/mwtoews/repos", "events_url": "https://api.github.com/users/mwtoews/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtoews/received_events", "type": "User", "site_admin": false}, "body": "add `'c'` for complex kinds, i.e. `np.dtype(dtype).kind in ('f', 'c')`\n", "created_at": "2015-01-14T02:32:33Z", "updated_at": "2015-01-14T03:50:46Z", "html_url": "https://github.com/mapbox/rasterio/pull/247#discussion_r22913400", "pull_request_url": "https://api.github.com/repos/mapbox/rasterio/pulls/247", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22913400"}, "html": {"href": "https://github.com/mapbox/rasterio/pull/247#discussion_r22913400"}, "pull_request": {"href": "https://api.github.com/repos/mapbox/rasterio/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/mapbox/rasterio/pulls/comments/22913400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}