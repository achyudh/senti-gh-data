{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3378", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3378/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3378/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3378/events", "html_url": "https://github.com/facebook/rocksdb/pull/3378", "id": 289510985, "number": 3378, "title": "Fix Flush() keep waiting after flush finish", "user": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-18T05:41:56Z", "updated_at": "2018-01-18T17:48:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3378", "html_url": "https://github.com/facebook/rocksdb/pull/3378", "diff_url": "https://github.com/facebook/rocksdb/pull/3378.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3378.patch"}, "body": "Summary:\r\nFlush() call could be waiting indefinitely if min_write_buffer_number_to_merge is used. Consider the sequence:\r\n1. User call Flush() with flush_options.wait = true\r\n2. The manual flush started in the background\r\n3. New memtable become immutable because of writes. The new memtable will not trigger flush if min_write_buffer_number_to_merge is not reached.\r\n4. The manual flush finish.\r\n\r\nBecause of the new memtable created at step 3 not being flush, previous logic of WaitForFlushMemTable() keep waiting, despite the memtables it intent to flush has been flushed.\r\n\r\nHere instead of checking if there are any more memtables to flush, WaitForFlushMemTable() also check the sequence number of the earliest memtable. If the sequence is larger than the sequence number at the time flush was initiated, it means all the memtable at the time of flush start has all been flush.\r\n\r\nTest Plan:\r\nSee the new test. Without the fix the test will stuck at WaitForFlushMemTable() and never finishes.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3377", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3377/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3377/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3377/events", "html_url": "https://github.com/facebook/rocksdb/pull/3377", "id": 289499511, "number": 3377, "title": "Fixed get version on windows, moved throwing exceptions into cc file.", "user": {"login": "topilski", "id": 4686379, "avatar_url": "https://avatars1.githubusercontent.com/u/4686379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topilski", "html_url": "https://github.com/topilski", "followers_url": "https://api.github.com/users/topilski/followers", "following_url": "https://api.github.com/users/topilski/following{/other_user}", "gists_url": "https://api.github.com/users/topilski/gists{/gist_id}", "starred_url": "https://api.github.com/users/topilski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topilski/subscriptions", "organizations_url": "https://api.github.com/users/topilski/orgs", "repos_url": "https://api.github.com/users/topilski/repos", "events_url": "https://api.github.com/users/topilski/events{/privacy}", "received_events_url": "https://api.github.com/users/topilski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-18T04:16:36Z", "updated_at": "2018-01-18T18:10:49Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3377", "html_url": "https://github.com/facebook/rocksdb/pull/3377", "diff_url": "https://github.com/facebook/rocksdb/pull/3377.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3377.patch"}, "body": "Fixes for msys2 and mingw, hide exceptions into cpp  file.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3369", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3369/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3369/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3369/events", "html_url": "https://github.com/facebook/rocksdb/pull/3369", "id": 288867474, "number": 3369, "title": "JNI transactions  is working.", "user": {"login": "publicocean0", "id": 2518180, "avatar_url": "https://avatars1.githubusercontent.com/u/2518180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/publicocean0", "html_url": "https://github.com/publicocean0", "followers_url": "https://api.github.com/users/publicocean0/followers", "following_url": "https://api.github.com/users/publicocean0/following{/other_user}", "gists_url": "https://api.github.com/users/publicocean0/gists{/gist_id}", "starred_url": "https://api.github.com/users/publicocean0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/publicocean0/subscriptions", "organizations_url": "https://api.github.com/users/publicocean0/orgs", "repos_url": "https://api.github.com/users/publicocean0/repos", "events_url": "https://api.github.com/users/publicocean0/events{/privacy}", "received_events_url": "https://api.github.com/users/publicocean0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-16T11:06:28Z", "updated_at": "2018-01-17T17:16:12Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3369", "html_url": "https://github.com/facebook/rocksdb/pull/3369", "diff_url": "https://github.com/facebook/rocksdb/pull/3369.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3369.patch"}, "body": "hi, \r\nI merged and fixed compilation problems for extending transations in JNI starting from adamretter code. Actually it seams to work correctly ", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3367", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3367/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3367/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3367/events", "html_url": "https://github.com/facebook/rocksdb/issues/3367", "id": 288778346, "number": 3367, "title": "windows 10, vs 2017: error C2220: warning treated as error - no 'object' file generated", "user": {"login": "egor-agafonov", "id": 34836979, "avatar_url": "https://avatars2.githubusercontent.com/u/34836979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egor-agafonov", "html_url": "https://github.com/egor-agafonov", "followers_url": "https://api.github.com/users/egor-agafonov/followers", "following_url": "https://api.github.com/users/egor-agafonov/following{/other_user}", "gists_url": "https://api.github.com/users/egor-agafonov/gists{/gist_id}", "starred_url": "https://api.github.com/users/egor-agafonov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egor-agafonov/subscriptions", "organizations_url": "https://api.github.com/users/egor-agafonov/orgs", "repos_url": "https://api.github.com/users/egor-agafonov/repos", "events_url": "https://api.github.com/users/egor-agafonov/events{/privacy}", "received_events_url": "https://api.github.com/users/egor-agafonov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-16T03:52:19Z", "updated_at": "2018-01-16T03:52:19Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I followed installation instructions from CMakeLists.txt:\r\n- installed GFLAGS, SNAPPY, LZ4 and ZLIB\r\n- edited file thirdparty.inc accordingly \r\ncmake -G \"Visual Studio 15 Win64\" -DWITH_GFLAGS=1 -DWITH_SNAPPY=1 -DWITH_LZ4=1 -DWITH_ZLIB=1 ..\r\nmsbuild rocksdb.sln /p:Configuration=Release\r\nGot problem: \r\n....\\util\\compression.h(61): error C2220: warning treated as error - no 'object' file generated [...\\build\\rocksdb.vcxproj]\r\n\r\nCan anybody help me please?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3360", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3360/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3360/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3360/events", "html_url": "https://github.com/facebook/rocksdb/pull/3360", "id": 287978408, "number": 3360, "title": "Support skipping bloom filters for SstFileWriter", "user": {"login": "IslamAbdelRahman", "id": 1676006, "avatar_url": "https://avatars2.githubusercontent.com/u/1676006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IslamAbdelRahman", "html_url": "https://github.com/IslamAbdelRahman", "followers_url": "https://api.github.com/users/IslamAbdelRahman/followers", "following_url": "https://api.github.com/users/IslamAbdelRahman/following{/other_user}", "gists_url": "https://api.github.com/users/IslamAbdelRahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/IslamAbdelRahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IslamAbdelRahman/subscriptions", "organizations_url": "https://api.github.com/users/IslamAbdelRahman/orgs", "repos_url": "https://api.github.com/users/IslamAbdelRahman/repos", "events_url": "https://api.github.com/users/IslamAbdelRahman/events{/privacy}", "received_events_url": "https://api.github.com/users/IslamAbdelRahman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-12T01:13:48Z", "updated_at": "2018-01-16T20:55:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3360", "html_url": "https://github.com/facebook/rocksdb/pull/3360", "diff_url": "https://github.com/facebook/rocksdb/pull/3360.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3360.patch"}, "body": "Add an option for SstFileWriter to skip building bloom filters", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3355", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3355/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3355/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3355/events", "html_url": "https://github.com/facebook/rocksdb/issues/3355", "id": 287646489, "number": 3355, "title": "RocksDB do not well in parallel with write/read and close", "user": {"login": "lwjyqjykn", "id": 33336415, "avatar_url": "https://avatars2.githubusercontent.com/u/33336415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwjyqjykn", "html_url": "https://github.com/lwjyqjykn", "followers_url": "https://api.github.com/users/lwjyqjykn/followers", "following_url": "https://api.github.com/users/lwjyqjykn/following{/other_user}", "gists_url": "https://api.github.com/users/lwjyqjykn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwjyqjykn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwjyqjykn/subscriptions", "organizations_url": "https://api.github.com/users/lwjyqjykn/orgs", "repos_url": "https://api.github.com/users/lwjyqjykn/repos", "events_url": "https://api.github.com/users/lwjyqjykn/events{/privacy}", "received_events_url": "https://api.github.com/users/lwjyqjykn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309865616, "url": "https://api.github.com/repos/facebook/rocksdb/labels/java-api", "name": "java-api", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-01-11T02:48:40Z", "updated_at": "2018-01-11T20:31:36Z", "closed_at": null, "author_association": "NONE", "body": "We use rocksdbjni for write/read and close in parallel, then coredump, follow are the coredump infos, is anyone meet this problem, how do you solve it.\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007fedcc553cd, pid=4904, tid=4416\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n C  [librocksdbjni6164768070392737012.dll+0x2f53cd]  rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const & __ptr64>::KeyIsAfterNode+0x7d\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007fedcf9b1ea, pid=5284, tid=5112\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni1393172717064025021.dll+0x2fb1ea]  rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const & __ptr64>::Insert<0>+0xb4a\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007feeb70da64, pid=5728, tid=3372\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni4086279910858052465.dll+0x4fda64]  rocksdb::MemTable::Add+0x374\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007feeb60aa38, pid=5976, tid=4400\r\n\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni3909728769303213122.dll+0x3faa38]  std::unique_ptr<rocksdb::ColumnFamilySet,std::default_delete<rocksdb::ColumnFamilySet> >::get+0x28\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3347", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3347/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3347/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3347/events", "html_url": "https://github.com/facebook/rocksdb/issues/3347", "id": 287283320, "number": 3347, "title": "Test failures on PowerPC arch", "user": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-10T01:08:50Z", "updated_at": "2018-01-12T06:17:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "@adamretter alerted us that `make check` is failing on PPC64le (powerpc 64-bit little-endian) architecture on RocksDB master HEAD. On investigating further, I noticed a couple of tests have been failing since RocksDB 5.7 release. \r\nThe two specific tests that are failing are: \r\n- FullBloomTest.FullVaryingLengths\r\n- DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n\r\nI narrowed the issue down to be due to ccf5f08f882038e8b481fafa0a0c0b1a04f6a390 introduced in #2579 . The tests work without this commit and fail with this commit included. \r\n\r\n### Steps to reproduce the behavior\r\nEither\r\n`make check`\r\nOR\r\n```\r\nmake bloom_test db_properties_test\r\nTMP_DIR=/dev/shm ./bloom_test --gtest_filter=FullBloomTest.FullVaryingLengths\r\nTMP_DIR=/dev/shm ./db_properties_test --gtest_filter=DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n```\r\nHere's the output:\r\n\r\n```\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ make bloom_test db_properties_test -j8\r\n...\r\n...\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ TMP_DIR=/dev/shm ./bloom_test --gtest_filter=FullBloomTest.FullVaryingLengths\r\nNote: Google Test filter = FullBloomTest.FullVaryingLengths\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from FullBloomTest\r\n[ RUN      ] FullBloomTest.FullVaryingLengths\r\nFalse positives:  0.00% @ length =      1 ; bytes =    133\r\nFalse positives:  0.00% @ length =      2 ; bytes =    133\r\nFalse positives:  0.00% @ length =      3 ; bytes =    133\r\nFalse positives:  0.00% @ length =      4 ; bytes =    133\r\nFalse positives:  0.00% @ length =      5 ; bytes =    133\r\nFalse positives:  0.00% @ length =      6 ; bytes =    133\r\nFalse positives:  0.00% @ length =      7 ; bytes =    133\r\nFalse positives:  0.00% @ length =      8 ; bytes =    133\r\nFalse positives:  0.00% @ length =      9 ; bytes =    133\r\nFalse positives:  0.00% @ length =     10 ; bytes =    133\r\nFalse positives:  0.00% @ length =     20 ; bytes =    133\r\nFalse positives:  0.00% @ length =     30 ; bytes =    133\r\nFalse positives:  0.02% @ length =     40 ; bytes =    133\r\nFalse positives:  0.04% @ length =     50 ; bytes =    133\r\nFalse positives:  0.15% @ length =     60 ; bytes =    133\r\nFalse positives:  0.27% @ length =     70 ; bytes =    133\r\nFalse positives:  0.59% @ length =     80 ; bytes =    133\r\nFalse positives:  0.83% @ length =     90 ; bytes =    133\r\nFalse positives:  1.17% @ length =    100 ; bytes =    133\r\nutil/bloom_test.cc:287: Failure\r\nExpected: (FilterSize()) <= ((size_t)((length * 10 / 8) + 128 + 5)), actual: 389 vs 383\r\n200\r\n[  FAILED  ] FullBloomTest.FullVaryingLengths (8 ms)\r\n[----------] 1 test from FullBloomTest (8 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test case ran. (8 ms total)\r\n[  PASSED  ] 0 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] FullBloomTest.FullVaryingLengths\r\n\r\n 1 FAILED TEST\r\n\r\n\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ TMP_DIR=/dev/shm ./db_properties_test --gtest_filter=DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\nNote: Google Test filter = DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from DBPropertiesTest\r\n[ RUN      ] DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\ndb/db_properties_test.cc:200: Failure\r\nExpected: (static_cast<double>(dbl_a - dbl_b) / (dbl_a + dbl_b)) < (bias), actual: 0.599198 vs 0.5\r\n...\r\n```\r\n\r\nArch and OS details on the machine I have access to shows:\r\n```\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ uname -a\r\nLinux hortonworks-2 4.4.0-101-generic #124-Ubuntu SMP Fri Nov 10 18:29:11 UTC 2017 ppc64le ppc64le ppc64le GNU/Linux\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ cat /proc/cpuinfo\r\nprocessor       : 0\r\ncpu             : POWER8E (raw), altivec supported\r\nclock           : 3425.000000MHz\r\nrevision        : 2.1 (pvr 004b 0201)\r\n...\r\ntimebase        : 512000000\r\nplatform        : pSeries\r\nmodel           : IBM pSeries (emulated by qemu)\r\nmachine         : CHRP IBM pSeries (emulated by qemu)\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3340", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3340/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3340/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3340/events", "html_url": "https://github.com/facebook/rocksdb/pull/3340", "id": 286937083, "number": 3340, "title": "Preload some files even if options.max_open_files", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-09T00:54:53Z", "updated_at": "2018-01-09T21:25:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3340", "html_url": "https://github.com/facebook/rocksdb/pull/3340", "diff_url": "https://github.com/facebook/rocksdb/pull/3340.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3340.patch"}, "body": "Summary:\r\nChoose to preload some files if options.max_open_files != -1. This can slightly narrow the gap of performance between options.max_open_files is -1 and a large number. To avoid a significant regression to DB reopen speed if options.max_open_files != -1. Limit the files to preload in DB open time to 16.\r\n\r\nTest Plan: Run all existing tests.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3339", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3339/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3339/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3339/events", "html_url": "https://github.com/facebook/rocksdb/pull/3339", "id": 286814811, "number": 3339, "title": "crc32: suppress -Wimplicit-fallthrough warnings", "user": {"login": "quark-zju", "id": 445459, "avatar_url": "https://avatars0.githubusercontent.com/u/445459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quark-zju", "html_url": "https://github.com/quark-zju", "followers_url": "https://api.github.com/users/quark-zju/followers", "following_url": "https://api.github.com/users/quark-zju/following{/other_user}", "gists_url": "https://api.github.com/users/quark-zju/gists{/gist_id}", "starred_url": "https://api.github.com/users/quark-zju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quark-zju/subscriptions", "organizations_url": "https://api.github.com/users/quark-zju/orgs", "repos_url": "https://api.github.com/users/quark-zju/repos", "events_url": "https://api.github.com/users/quark-zju/events{/privacy}", "received_events_url": "https://api.github.com/users/quark-zju/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-01-08T17:06:26Z", "updated_at": "2018-01-16T18:49:31Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3339", "html_url": "https://github.com/facebook/rocksdb/pull/3339", "diff_url": "https://github.com/facebook/rocksdb/pull/3339.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3339.patch"}, "body": "Workaround a bunch of \"implicit-fallthrough\" compiler errors, like:\r\n\r\n```\r\nutil/crc32c.cc:533:7: error: this statement may fall through [-Werror=implicit-fallthrough=]\r\n   crc = _mm_crc32_u64(crc, *(uint64_t*)(buf + offset));\r\n       ^\r\nutil/crc32c.cc:1016:9: note: in expansion of macro \u2018CRCsinglet\u2019\r\n         CRCsinglet(crc0, next, -2 * 8);\r\n         ^~~~~~~~~~\r\nutil/crc32c.cc:1017:7: note: here\r\n       case 1:\r\n```\r\n\r\nTest Plan:\r\nBuild rocksdb using gcc 7.2.0 on Arch Linux with success.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3338", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3338/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3338/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3338/events", "html_url": "https://github.com/facebook/rocksdb/pull/3338", "id": 286792387, "number": 3338, "title": "Callback bridge for Java-based CompactionFilter", "user": {"login": "benclay", "id": 7607858, "avatar_url": "https://avatars3.githubusercontent.com/u/7607858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benclay", "html_url": "https://github.com/benclay", "followers_url": "https://api.github.com/users/benclay/followers", "following_url": "https://api.github.com/users/benclay/following{/other_user}", "gists_url": "https://api.github.com/users/benclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/benclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benclay/subscriptions", "organizations_url": "https://api.github.com/users/benclay/orgs", "repos_url": "https://api.github.com/users/benclay/repos", "events_url": "https://api.github.com/users/benclay/events{/privacy}", "received_events_url": "https://api.github.com/users/benclay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-08T15:57:14Z", "updated_at": "2018-01-11T20:46:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3338", "html_url": "https://github.com/facebook/rocksdb/pull/3338", "diff_url": "https://github.com/facebook/rocksdb/pull/3338.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3338.patch"}, "body": "Similar to `AbstractCompactionFilterFactory` and `AbstractComparator`, this diff contains an abstract base class for `rocksdb::CompactionFilter` written in Java. It uses a similar set of techniques to cache relevant field / method IDs at startup, passes scalars back into Java and relies on threadlocals to avoid `DirectSlice` finalize churn.\r\n\r\nUsing this implementation we've been able to run a Java compaction filter under Manhattan production workloads with a ~10% performance reduction.  It's not free but is good enough for some usecases.\r\n\r\nThere are a few unresolved issues with this implementation that I wanted to discuss with the community. They're marked with `TODO(benclay)` below.\r\n\r\n- Detaching compaction threads after every callback is extremely expensive. On our OpenJDK8 JVM the `DetachCurrentThread` call internally serializes on a mutex while releasing monitors, causing compactions and thus writes to eventually stall.  As a result, in this diff **we are not detaching at all**.  However, I am concerned about upstreaming this as-is this because folks might explicitly take locks in their CompactionFilter implementations and need those monitors to be automatically released.  I am looking for feedback from the community on this problem.  There are a few solutions from Rocks side I can think of, but am open to more ideas:\r\n  - Add a lifecycle hook (perhaps to CompactionFilterFactory?) when the compaction thread is shutting down. At that point we can detach the thread from the JVM.  This still risks the thread crashing and never detaching though.\r\n  - Implement a batching interface to CompactionFilter so we aren't making so many roundtrips and the detach cost is amortized.  This would help performance more generally but is probably more invasive - I haven't looked into the implications on Rocks side.\r\n  - Detach every Nth call - this seems very racy and doesn't guarantee that the thread detaches on the final call, so it seems like a non-starter.\r\n- I couldn't take advantage of @adamretter 's `RocksCallbackObject` regime because Java disallows multiple inheritance and I needed to inherit from `AbstractCompactionFilter`.  Right now that class and its C++ companion `JniCallback` are fairly basic, but over time could export some useful performance enhancements.  I thought about shimming a new `ICompactionFilter` interface **below** `AbstractCompactionFilter` and have that be the primary unit for interacting with `ColumnFamilyOptions`. Upon further examination that will somewhat break the tradition of having abstract base classes with package-private `nativeHandle_` member variables, which is how `ColumnFamilyOptions` is binding the `CompactionFilter` handle on the C++ side.  Open to suggestions here as well.\r\n\r\n@sagar0 @adamretter \r\n \r\nEDIT: There is a test issue that I'm still chasing down.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3337", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3337/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3337/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3337/events", "html_url": "https://github.com/facebook/rocksdb/pull/3337", "id": 286671004, "number": 3337, "title": "Support StringAppendOperator(delimiter_char) constructor in java-api", "user": {"login": "javeme", "id": 9625821, "avatar_url": "https://avatars3.githubusercontent.com/u/9625821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javeme", "html_url": "https://github.com/javeme", "followers_url": "https://api.github.com/users/javeme/followers", "following_url": "https://api.github.com/users/javeme/following{/other_user}", "gists_url": "https://api.github.com/users/javeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/javeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javeme/subscriptions", "organizations_url": "https://api.github.com/users/javeme/orgs", "repos_url": "https://api.github.com/users/javeme/repos", "events_url": "https://api.github.com/users/javeme/events{/privacy}", "received_events_url": "https://api.github.com/users/javeme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T08:01:17Z", "updated_at": "2018-01-08T08:01:43Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3337", "html_url": "https://github.com/facebook/rocksdb/pull/3337", "diff_url": "https://github.com/facebook/rocksdb/pull/3337.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3337.patch"}, "body": "Fixes #3336", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3336", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3336/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3336/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3336/events", "html_url": "https://github.com/facebook/rocksdb/issues/3336", "id": 286661747, "number": 3336, "title": "support StringAppendOperator(delim_char) constructor in java-api", "user": {"login": "javeme", "id": 9625821, "avatar_url": "https://avatars3.githubusercontent.com/u/9625821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javeme", "html_url": "https://github.com/javeme", "followers_url": "https://api.github.com/users/javeme/followers", "following_url": "https://api.github.com/users/javeme/following{/other_user}", "gists_url": "https://api.github.com/users/javeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/javeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javeme/subscriptions", "organizations_url": "https://api.github.com/users/javeme/orgs", "repos_url": "https://api.github.com/users/javeme/repos", "events_url": "https://api.github.com/users/javeme/events{/privacy}", "received_events_url": "https://api.github.com/users/javeme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T06:59:52Z", "updated_at": "2018-01-08T08:07:53Z", "closed_at": null, "author_association": "NONE", "body": "### Expected behavior\r\nwe should support `new StringAppendOperator(delim_char)` constructor in java-api, which is already supported in [c++ implementation](https://github.com/facebook/rocksdb/blob/72502cf2270db7323d447cc7a504dbea251d432a/utilities/merge_operators/string_append/stringappend.cc#L19).\r\n\r\n### Actual behavior\r\nwe can only use [`new StringAppendOperator()`](https://github.com/facebook/rocksdb/blob/3c327ac2d0fd50bbd82fe1f1af5de909dad769e6/java/src/main/java/org/rocksdb/StringAppendOperator.java#L14) constructor without parameter.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3334", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3334/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3334/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3334/events", "html_url": "https://github.com/facebook/rocksdb/pull/3334", "id": 286470372, "number": 3334, "title": "Java wrapper for Native Comparators", "user": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}, {"id": 309865616, "url": "https://api.github.com/repos/facebook/rocksdb/labels/java-api", "name": "java-api", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-06T08:44:35Z", "updated_at": "2018-01-08T15:54:54Z", "closed_at": null, "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3334", "html_url": "https://github.com/facebook/rocksdb/pull/3334", "diff_url": "https://github.com/facebook/rocksdb/pull/3334.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3334.patch"}, "body": "This is an abstraction for working with custom Comparators implemented in native C++ code from Java. Native code must directly extend `rocksdb::Comparator`. When the native code comparator is compiled into the RocksDB codebase, you can then create a Java Class, and JNI stub to wrap it.\r\n\r\nUseful if the C++/JNI barrier overhead is too much for your applications comparator performance.\r\n\r\nAn example is provided in `java/rocksjni/native_comparator_wrapper_test.cc` and `java/src/main/java/org/rocksdb/NativeComparatorWrapperTest.java`.\r\n  \r\n  ", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3333", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3333/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3333/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3333/events", "html_url": "https://github.com/facebook/rocksdb/pull/3333", "id": 286435512, "number": 3333, "title": "Use block cache to track memory usage when ReadOptions.fill_cache=false", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-05T23:40:16Z", "updated_at": "2018-01-17T20:10:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3333", "html_url": "https://github.com/facebook/rocksdb/pull/3333", "diff_url": "https://github.com/facebook/rocksdb/pull/3333.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3333.patch"}, "body": "ReadOptions.fill_cache is set in compaction inputs and can be set by users in their queries too. It tells RocksDB not to put a data block used to block cache.\r\n\r\nThe memory used by the data block is, however, not trackable by users.\r\n\r\nTo make the system more manageable, we can cost the block to block cache while using it, and then release it after using.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3326", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3326/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3326/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3326/events", "html_url": "https://github.com/facebook/rocksdb/issues/3326", "id": 285875407, "number": 3326, "title": "rocksdbjni coredump at rocksdb::WriteThread::EnterAsBatchGroupLeader()", "user": {"login": "xiaoweizw", "id": 10990365, "avatar_url": "https://avatars2.githubusercontent.com/u/10990365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaoweizw", "html_url": "https://github.com/xiaoweizw", "followers_url": "https://api.github.com/users/xiaoweizw/followers", "following_url": "https://api.github.com/users/xiaoweizw/following{/other_user}", "gists_url": "https://api.github.com/users/xiaoweizw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaoweizw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaoweizw/subscriptions", "organizations_url": "https://api.github.com/users/xiaoweizw/orgs", "repos_url": "https://api.github.com/users/xiaoweizw/repos", "events_url": "https://api.github.com/users/xiaoweizw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaoweizw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-04T03:55:41Z", "updated_at": "2018-01-04T03:55:41Z", "closed_at": null, "author_association": "NONE", "body": "we have used rocksdbjni, but when process batch write, generator coredump due to abort signal. \r\nHas anyone meet this problem and how should this problem be solved? Thank you very much.\r\ncoredump detail information:\r\nProgram terminated with signal 6, Aborted.\r\n(gdb) bt\r\n#0  0x00002b17cbbf8625 in raise () from /lib64/libc.so.6\r\n#1  0x00002b17cbbf9e05 in abort () from /lib64/libc.so.6\r\n#2  0x00002b17cc8810b5 in os::abort(bool) ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#3  0x00002b17cca23443 in VMError::report_and_die() ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#4  0x00002b17cc8865bf in JVM_handle_linux_signal ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#5  0x00002b17cc87cb03 in signalHandler(int, siginfo*, void*) ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#6  <signal handler called>\r\n#7  0x00002b1806881a95 in rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::Writer**, rocksdb::autovector<rocksdb::WriteThread::Writer*, 8ul>*) ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n#8  0x00002b18067de00f in rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool) ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n#9  0x00002b18067df9eb in rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*) () from /tmp/librocksdbjni6424814419910142735.so\r\n#10 0x00002b1806758a3f in Java_org_rocksdb_RocksDB_write0 ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n \r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3325", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3325/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3325/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3325/events", "html_url": "https://github.com/facebook/rocksdb/pull/3325", "id": 285851762, "number": 3325, "title": "Demonstrate async IO with coroutines", "user": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-04T00:44:24Z", "updated_at": "2018-01-16T11:43:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3325", "html_url": "https://github.com/facebook/rocksdb/pull/3325", "diff_url": "https://github.com/facebook/rocksdb/pull/3325.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3325.patch"}, "body": "  with async/coroutine_random_access_test.cc windows only test.\r\n  RandomAccessFileReader::RequestRead() is a clone of Read() for test purposes.\r\n  demonstrates minimal would be changes to Read() with the insertion of 3 keywords\r\n  and keeping the source code intact.\r\n  Some scaffolding is required but it is all on the side and does not affect the code flow.\r\n  The downside that we would need to keep track that all functions on the way\r\n  down to I/O become coroutines and make use of co_await and co_return if they returning\r\n  anything (usually status). A separate AppVeyor build would be enough to make sure we are OK.\r\n  Use VS 2017 to build. It might work on 2015, I have not tried yet.\r\n  Use -DWITH_COROUTINES=1 to enable coroutines.\r\n  The output on my box is:\r\n  [==========] Running 2 tests from 1 test case.\r\n  [----------] Global test environment set-up.\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0\r\n  Thread ID before co_await: 240 after co_await: 27328\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 2600 after co_await: 27328\r\n  Thread ID before co_await: 17928 after co_await: 9420\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 28480 after co_await: 30912\r\n  Thread ID before co_await: 25000 after co_await: 15280\r\n  Thread ID before co_await: 14312 after co_await: 21532\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 19940 after co_await: 14912\r\n  Thread ID before co_await: 7188 after co_await: 9420\r\n  Thread ID before co_await: 360 after co_await: 7012\r\n  Thread ID before co_await: 28892 after co_await: 27328\r\n  Thread ID before co_await: 14744 after co_await: 26552\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 13904 after co_await: 12556\r\n  Thread ID before co_await: 15712 after co_await: 28904\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0 (235 ms)\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1\r\n  Thread ID before co_await: 240 after co_await: 13428\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 26040 after co_await: 13428\r\n  Thread ID before co_await: 10276 after co_await: 14276\r\n  Read:7935 bytes, status: OK\r\n  Read:Thread ID before co_await: 7396Thread ID before co_await: 20800 after co_await: 18884\r\n  Thread ID before co_await: 20684 after co_await: 26680\r\n  Thread ID before co_await: 16728 after co_await: 18724\r\n  Thread ID before co_await: 27968 after co_await: 7148\r\n  after co_await: 13428\r\n  Thread ID before co_await: 27496 after co_await: 22984\r\n  Read:Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 21056 after co_await: 2012\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 29944 after co_await: 2896\r\n  7935Read:7935 bytes, status: OK\r\n  bytes, status: OK\r\n  Thread ID before co_await: 10464 after co_await: 31984\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 15656 after co_await: 22984\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1 (230 ms)\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest (467 ms total)\r\n\r\n  [----------] Global test environment tear-down\r\n  [==========] 2 tests from 1 test case ran. (468 ms total)\r\n  [  PASSED  ] 2 tests.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3320", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3320/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3320/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3320/events", "html_url": "https://github.com/facebook/rocksdb/issues/3320", "id": 285608466, "number": 3320, "title": "OS is corrput for stoping rocksdb when compaction", "user": {"login": "lwjyqjykn", "id": 33336415, "avatar_url": "https://avatars2.githubusercontent.com/u/33336415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwjyqjykn", "html_url": "https://github.com/lwjyqjykn", "followers_url": "https://api.github.com/users/lwjyqjykn/followers", "following_url": "https://api.github.com/users/lwjyqjykn/following{/other_user}", "gists_url": "https://api.github.com/users/lwjyqjykn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwjyqjykn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwjyqjykn/subscriptions", "organizations_url": "https://api.github.com/users/lwjyqjykn/orgs", "repos_url": "https://api.github.com/users/lwjyqjykn/repos", "events_url": "https://api.github.com/users/lwjyqjykn/events{/privacy}", "received_events_url": "https://api.github.com/users/lwjyqjykn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-03T06:35:23Z", "updated_at": "2018-01-03T06:35:23Z", "closed_at": null, "author_association": "NONE", "body": "We do a massive of read-modify-write with rokcsdbjava, after serveral hours, invoke another thread to stop the rocksdb instance without stoping read-modify-write progress, then OS is corrput. And there is a disk full of writing, we cann't do anything in this server for serveral hours. We check rocksdb LOG, only discover \"Shutdown: canceling all background work\", then some compaction log infos, but we don't find \"Shutdown complete\" info, is it means rocksdb doesn't stop successfully, and if this will trigger brush write and OS corrupt.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3318", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3318/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3318/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3318/events", "html_url": "https://github.com/facebook/rocksdb/issues/3318", "id": 285451903, "number": 3318, "title": "MemoryLeak&Potential Deadlock", "user": {"login": "wolfkdy", "id": 2135661, "avatar_url": "https://avatars2.githubusercontent.com/u/2135661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolfkdy", "html_url": "https://github.com/wolfkdy", "followers_url": "https://api.github.com/users/wolfkdy/followers", "following_url": "https://api.github.com/users/wolfkdy/following{/other_user}", "gists_url": "https://api.github.com/users/wolfkdy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolfkdy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolfkdy/subscriptions", "organizations_url": "https://api.github.com/users/wolfkdy/orgs", "repos_url": "https://api.github.com/users/wolfkdy/repos", "events_url": "https://api.github.com/users/wolfkdy/events{/privacy}", "received_events_url": "https://api.github.com/users/wolfkdy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}, {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-01-02T15:06:12Z", "updated_at": "2018-01-04T18:51:52Z", "closed_at": null, "author_association": "NONE", "body": "https://github.com/facebook/rocksdb/blob/b5c99cc908a7e34fa65d588b2706c33000786935/utilities/transactions/pessimistic_transaction_db.cc#L115\r\n\r\nIt should be wrapped by a unique_ptr<>\r\nDestructor is not called, so potential row-lock ( or key-lock\uff09may be leaked", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3315", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3315/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3315/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3315/events", "html_url": "https://github.com/facebook/rocksdb/issues/3315", "id": 285192496, "number": 3315, "title": "PPC 64 bit BigEndian ASM compilation fault", "user": {"login": "gcsideal", "id": 1567903, "avatar_url": "https://avatars3.githubusercontent.com/u/1567903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcsideal", "html_url": "https://github.com/gcsideal", "followers_url": "https://api.github.com/users/gcsideal/followers", "following_url": "https://api.github.com/users/gcsideal/following{/other_user}", "gists_url": "https://api.github.com/users/gcsideal/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcsideal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcsideal/subscriptions", "organizations_url": "https://api.github.com/users/gcsideal/orgs", "repos_url": "https://api.github.com/users/gcsideal/repos", "events_url": "https://api.github.com/users/gcsideal/events{/privacy}", "received_events_url": "https://api.github.com/users/gcsideal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 578790148, "url": "https://api.github.com/repos/facebook/rocksdb/labels/ppc", "name": "ppc", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-12-30T08:58:54Z", "updated_at": "2018-01-03T20:15:29Z", "closed_at": null, "author_association": "NONE", "body": "### Expected behavior\r\nSuccessful compilation on ppc64 as happened with the 5.8.8 version.\r\n\r\n### Actual behavior\r\nAs of RocksDB 5.9.2 and with the previously used GCC 7.2 compilation fails with:\r\n  CC       util/crc32c_ppc_asm.o\r\nutil/crc32c_ppc_asm.S: Assembler messages:\r\nutil/crc32c_ppc_asm.S:109: Error: invalid operands (*UND* and *ABS* sections) for `&'\r\nutil/crc32c_ppc_asm.S:109: Error: invalid operands (*UND* and *ABS* sections) for `&'\r\n[...]\r\nutil/crc32c_ppc_asm.S:88: Error: unsupported relocation against v20\r\nutil/crc32c_ppc_asm.S:89: Error: unsupported relocation against v21\r\n[...]\r\nutil/crc32c_ppc_asm.S:745: Error: unsupported relocation against v20\r\nMakefile:1812: recipe for target 'util/crc32c_ppc_asm.o' failed\r\n\r\n### Steps to reproduce the behavior\r\nTry to compile on a ppc64 machine.\r\nFull build log: https://buildd.debian.org/status/fetch.php?pkg=rocksdb&arch=ppc64&ver=5.9.2-1&stamp=1514504777&raw=0", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3314", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3314/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3314/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3314/events", "html_url": "https://github.com/facebook/rocksdb/issues/3314", "id": 285140712, "number": 3314, "title": "Slowdown in read after ~ 15 million records in DB", "user": {"login": "kl3eo", "id": 33757315, "avatar_url": "https://avatars2.githubusercontent.com/u/33757315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kl3eo", "html_url": "https://github.com/kl3eo", "followers_url": "https://api.github.com/users/kl3eo/followers", "following_url": "https://api.github.com/users/kl3eo/following{/other_user}", "gists_url": "https://api.github.com/users/kl3eo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kl3eo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kl3eo/subscriptions", "organizations_url": "https://api.github.com/users/kl3eo/orgs", "repos_url": "https://api.github.com/users/kl3eo/repos", "events_url": "https://api.github.com/users/kl3eo/events{/privacy}", "received_events_url": "https://api.github.com/users/kl3eo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-29T19:07:03Z", "updated_at": "2018-01-04T16:37:44Z", "closed_at": null, "author_association": "NONE", "body": "The manner we did the test is following: writing 1 mln. (key:value) pairs (time checked) - each key is bigint, value is ~200bytes, - then reading them back to csv format (time checked). Then adding other 1 million records, reading 2 million records, etc. The fact is until we reached 15 million records, the time necessary for reading grew proportionally with the growing of the number of records to read. After that, there was a serious non-linearity, so the time grew much more with the number of millions of records to read. I would not be much surprised if the linearity stopped at 100 mln. records, but 10-15 million seems rather low. Am I missing something important in setup, or this is normal and well-known behaviour of RocksDb?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3311", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3311/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3311/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3311/events", "html_url": "https://github.com/facebook/rocksdb/issues/3311", "id": 284725913, "number": 3311, "title": "error compiling last roskdb source in ubuntu ", "user": {"login": "publicocean0", "id": 2518180, "avatar_url": "https://avatars1.githubusercontent.com/u/2518180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/publicocean0", "html_url": "https://github.com/publicocean0", "followers_url": "https://api.github.com/users/publicocean0/followers", "following_url": "https://api.github.com/users/publicocean0/following{/other_user}", "gists_url": "https://api.github.com/users/publicocean0/gists{/gist_id}", "starred_url": "https://api.github.com/users/publicocean0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/publicocean0/subscriptions", "organizations_url": "https://api.github.com/users/publicocean0/orgs", "repos_url": "https://api.github.com/users/publicocean0/repos", "events_url": "https://api.github.com/users/publicocean0/events{/privacy}", "received_events_url": "https://api.github.com/users/publicocean0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309865616, "url": "https://api.github.com/repos/facebook/rocksdb/labels/java-api", "name": "java-api", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2017-12-27T13:41:55Z", "updated_at": "2018-01-16T18:34:24Z", "closed_at": null, "author_association": "NONE", "body": "\r\n\r\n\r\n\r\n### Actual behavior\r\n```\r\nIn file included from /usr/include/c++/6/memory:81:0,\r\n                 from ./java/./rocksjni/comparatorjnicallback.h:13,\r\n                 from java/rocksjni/comparatorjnicallback.cc:9:\r\n/usr/include/c++/6/bits/unique_ptr.h: In instantiation of \u2018void std::unique_ptr<_Tp [], _Dp>::reset(_Up) [with _Up = char*; <template-parameter-2-2> = void; _Tp = const char; _Dp = std::default_delete<const char []>]\u2019:\r\n/usr/include/c++/6/bits/unique_ptr.h:539:9:   required from \u2018typename std::enable_if<std::__and_<std::__and_<std::is_array<_Up>, std::is_same<typename std::unique_ptr<_Tp [], _Dp>::_Pointer::type, _Tp*>, std::is_same<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Up, _Ep>::element_type*>, std::is_convertible<typename std::unique_ptr<_Up, _Ep>::element_type (*)[], _Tp (*)[]>, std::__or_<std::__and_<std::is_reference<_Dp>, std::is_same<_T2, _U2> >, std::__and_<std::__not_<std::is_reference<_Dp> >, std::is_convertible<_Ep, _Dp> > > >, std::is_assignable<_T2&, _U2&&> >::value, std::unique_ptr<_Tp [], _Dp>&>::type std::unique_ptr<_Tp [], _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = char []; _Ep = std::default_delete<char []>; _Tp = const char; _Dp = std::default_delete<const char []>; typename std::enable_if<std::__and_<std::__and_<std::is_array<_Up>, std::is_same<typename std::unique_ptr<_Tp [], _Dp>::_Pointer::type, _Tp*>, std::is_same<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Up, _Ep>::element_type*>, std::is_convertible<typename std::unique_ptr<_Up, _Ep>::element_type (*)[], _Tp (*)[]>, std::__or_<std::__and_<std::is_reference<_Dp>, std::is_same<_T2, _U2> >, std::__and_<std::__not_<std::is_reference<_Dp> >, std::is_convertible<_Ep, _Dp> > > >, std::is_assignable<_T2&, _U2&&> >::value, std::unique_ptr<_Tp [], _Dp>&>::type = std::unique_ptr<const char []>&]\u2019\r\njava/rocksjni/comparatorjnicallback.cc:34:21:   required from here\r\n/usr/include/c++/6/bits/unique_ptr.h:614:6: error: no matching function for call to \u2018swap(const char*&, char*&)\u2019\r\n  swap(std::get<0>(_M_t), __p);\r\n\r\n```\r\n### Steps to reproduce the behavior\r\nmake -j8 rocksdbjava\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3310", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3310/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3310/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3310/events", "html_url": "https://github.com/facebook/rocksdb/issues/3310", "id": 284690289, "number": 3310, "title": "LZ4 not supported or corrupted LZ4 compressed block contents", "user": {"login": "zengqingfu1442", "id": 14928378, "avatar_url": "https://avatars0.githubusercontent.com/u/14928378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengqingfu1442", "html_url": "https://github.com/zengqingfu1442", "followers_url": "https://api.github.com/users/zengqingfu1442/followers", "following_url": "https://api.github.com/users/zengqingfu1442/following{/other_user}", "gists_url": "https://api.github.com/users/zengqingfu1442/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengqingfu1442/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengqingfu1442/subscriptions", "organizations_url": "https://api.github.com/users/zengqingfu1442/orgs", "repos_url": "https://api.github.com/users/zengqingfu1442/repos", "events_url": "https://api.github.com/users/zengqingfu1442/events{/privacy}", "received_events_url": "https://api.github.com/users/zengqingfu1442/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-27T09:59:47Z", "updated_at": "2017-12-28T10:12:58Z", "closed_at": null, "author_association": "NONE", "body": "The lz4 compression can't work in my rocksbd now.\r\n[dzeng@dzeng rocksdb-33efdde8316759f1efc6a2a228c5efcf01f09cbc]$ ./db_sanity_test /mnt/sfx-card-root/dfs/dn/disk/rocksdb573/ create\r\nCreating...\r\nBasic -- OK\r\nSpecialComparator -- OK\r\nZlibCompression -- OK\r\nZlibCompressionVersion2 -- OK\r\nLZ4Compression -- Corruption: LZ4 not supported or corrupted LZ4 compressed block contents\r\nFAIL\r\nLZ4HCCompression -- Corruption: LZ4HC not supported or corrupted LZ4HC compressed block contents\r\nFAIL\r\nZSTDCompression -- OK\r\nCSSZlibCompression -- mypid = 7029, dev_name = /dev/sfx0, dev_num = 0\r\nOK\r\nCSSZlibCompressionVersion2 -- OK\r\nPlainTable -- OK\r\nBloomFilter -- OK\r\nThe sst file of lz4 can't be generated under LZ4Compression dir.\r\nFrom the LOG under LZ4Compression, I can see such error:\r\n 2017/12/27-17:29:08.114337 7fa3c1ccfa00 [db/version_set.cc:2969] Recovered from manifest file:/mnt/sfx-card-root/dfs/dn/disk/rocksdb573/LZ4Compression/MANIFEST-000001 succeeded,manifest_file_number is 1, next_file_number is 3, last_sequence is 0, log_number is 0,prev_log_number is 0,max_column_family is 0\r\n 2017/12/27-17:29:08.114344 7fa3c1ccfa00 [db/version_set.cc:2977] Column family [default] (ID 0), log number is 0\r\n 2017/12/27-17:29:08.115443 7fa3c1ccfa00 [db/db_impl_open.cc:1111] DB pointer 0x220adb0\r\n 2017/12/27-17:29:13.279864 7fa3c1ccfa00 [db/db_impl_write.cc:1128] [default] New memtable created with log file: #6. Immutable memtables: 0.\r\n 2017/12/27-17:29:13.279921 7fa3b5ef5700 [db/db_impl_compaction_flush.cc:50] [JOB 2] Syncing log #3\r\n 2017/12/27-17:29:13.304067 7fa3b5ef5700 (Original Log Time 2017/12/27-17:29:13.279910) [db/db_impl_compaction_flush.cc:1216] Calling FlushMemTableToOutputFile with column family [default], flush slots available 1, compaction slots available 1, flush slots scheduled 1, compaction slots scheduled 0\r\n 2017/12/27-17:29:13.304075 7fa3b5ef5700 [db/flush_job.cc:264] [default] [JOB 2] Flushing memtable with next log file: 6\r\n 2017/12/27-17:29:13.304106 7fa3b5ef5700 EVENT_LOG_v1 {\"time_micros\": 1514366953304093, \"job\": 2, \"event\": \"flush_started\", \"num_memtables\": 1, \"num_entries\": 1000000, \"num_deletes\": 0, \"memory_usage\": 42651544}\r\n 2017/12/27-17:29:13.304113 7fa3b5ef5700 [db/flush_job.cc:293] [default] [JOB 2] Level-0 flush table #7: started\r\n 2017/12/27-17:29:13.702675 7fa3b5ef5700 [db/flush_job.cc:324] [default] [JOB 2] Level-0 flush table #7: 13976059 bytes Corruption: LZ4 not supported or corrupted LZ4 compressed block contents\r\n**2017/12/27-17:29:13.702897 7fa3b5ef5700 [ERROR] [db/db_impl_compaction_flush.cc:1255] Waiting after background flush error: Corruption: LZ4 not supported or corrupted LZ4 compressed block contentsAccumulated background error counts: 1**\r\n2017/12/27-17:29:13.702903 7fa3b5ef5700 (Original Log Time 2017/12/27-17:29:13.702885) EVENT_LOG_v1 {\"time_micros\": 1514366953702877, \"job\": 2, \"event\": \"flush_finished\", \"lsm_state\": [0, 0, 0, 0, 0, 0, 0], \"immutable_memtables\": 1}\r\n2017/12/27-17:29:13.702934 7fa3c1ccfa00 [db/db_impl.cc:222] Shutdown: canceling all background work\r\n2017/12/27-17:29:14.705500 7fa3c1ccfa00 [db/db_impl.cc:348] Shutdown complete\r\n\r\n\r\nBut I can scan the key-values of lz4 by ldb tool.\r\n[dzeng@dzeng rocksdb-33efdde8316759f1efc6a2a228c5efcf01f09cbc]$ ./ldb --db=/mnt/sfx-card-root/dfs/dn/disk/rocksdb573/LZ4Compression scan | less\r\nkey0 : value0\r\nkey1 : value1\r\nkey10 : value10\r\nkey100 : value100\r\nkey1000 : value1000\r\nkey10000 : value10000\r\nkey100000 : value100000\r\n..\r\n...", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3307", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3307/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3307/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3307/events", "html_url": "https://github.com/facebook/rocksdb/issues/3307", "id": 284432355, "number": 3307, "title": "UnsatisfiedLinkError when RocksDB.loadLibrary()", "user": {"login": "sjmind", "id": 11039107, "avatar_url": "https://avatars1.githubusercontent.com/u/11039107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjmind", "html_url": "https://github.com/sjmind", "followers_url": "https://api.github.com/users/sjmind/followers", "following_url": "https://api.github.com/users/sjmind/following{/other_user}", "gists_url": "https://api.github.com/users/sjmind/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjmind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjmind/subscriptions", "organizations_url": "https://api.github.com/users/sjmind/orgs", "repos_url": "https://api.github.com/users/sjmind/repos", "events_url": "https://api.github.com/users/sjmind/events{/privacy}", "received_events_url": "https://api.github.com/users/sjmind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309865616, "url": "https://api.github.com/repos/facebook/rocksdb/labels/java-api", "name": "java-api", "color": "fbca04", "default": false}, {"id": 458587234, "url": "https://api.github.com/repos/facebook/rocksdb/labels/windows", "name": "windows", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-12-25T10:07:41Z", "updated_at": "2018-01-04T03:49:15Z", "closed_at": null, "author_association": "NONE", "body": "```\r\npackage a;\r\n\r\nimport org.rocksdb.RocksDB;\r\n\r\n/**\r\n * @author z72069\r\n */\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        RocksDB.loadLibrary();\r\n    }\r\n}\r\n```\r\n\r\n```\r\nException in thread \"main\" java.lang.UnsatisfiedLinkError: C:\\Users\\z72069\\AppData\\Local\\Temp\\librocksdbjni1453993472684985674.dll: P\u52cb\u0002\r\n\tat java.lang.ClassLoader$NativeLibrary.load(Native Method)\r\n\tat java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941)\r\n\tat java.lang.ClassLoader.loadLibrary(ClassLoader.java:1824)\r\n\tat java.lang.Runtime.load0(Runtime.java:809)\r\n\tat java.lang.System.load(System.java:1086)\r\n\tat org.rocksdb.NativeLibraryLoader.loadLibraryFromJar(NativeLibraryLoader.java:78)\r\n\tat org.rocksdb.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:56)\r\n\tat org.rocksdb.RocksDB.loadLibrary(RocksDB.java:64)\r\n\tat org.rocksdb.RocksDB.<clinit>(RocksDB.java:35)\r\n\tat a.Main.main(Main.java:20)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n```\r\n\r\nIt's different from #1715 , VC Redist 2015 x64 had been installed.\r\n![ss171225](https://user-images.githubusercontent.com/11039107/34337771-4b893634-e99d-11e7-89f4-6ca7d72eee78.png)\r\n\r\nVersion 5.5.1, 5.7.3, 5.8.6 have the problem. Version 5.0.1 is ok.\r\n\r\nOS: Windows 7(6.1.7601)\r\nJDK: jdk7u80, jdk8u121\r\nVC redist 2015 x64, VC redist 2008, .Net Framework 4.0,4.5 installed.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3306", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3306/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3306/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3306/events", "html_url": "https://github.com/facebook/rocksdb/issues/3306", "id": 284428055, "number": 3306, "title": "How to understand the compaction levels?", "user": {"login": "zengqingfu1442", "id": 14928378, "avatar_url": "https://avatars0.githubusercontent.com/u/14928378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengqingfu1442", "html_url": "https://github.com/zengqingfu1442", "followers_url": "https://api.github.com/users/zengqingfu1442/followers", "following_url": "https://api.github.com/users/zengqingfu1442/following{/other_user}", "gists_url": "https://api.github.com/users/zengqingfu1442/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengqingfu1442/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengqingfu1442/subscriptions", "organizations_url": "https://api.github.com/users/zengqingfu1442/orgs", "repos_url": "https://api.github.com/users/zengqingfu1442/repos", "events_url": "https://api.github.com/users/zengqingfu1442/events{/privacy}", "received_events_url": "https://api.github.com/users/zengqingfu1442/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-12-25T09:25:37Z", "updated_at": "2018-01-13T03:23:16Z", "closed_at": null, "author_association": "NONE", "body": "How to understand the compaction levels?https://github.com/facebook/rocksdb/wiki/Leveled-Compaction\r\nIf level_compaction_dynamic_level_bytes=false\r\nFor example, if max_bytes_for_level_base = 123456, max_bytes_for_level_multiplier = 10 and max_bytes_for_level_multiplier_additional is not set, then size of L1, L2, L3 and L4 will be 16384, 163840, 1638400, and 16384000, respectively.\r\n\r\nBut L1's target will be max_bytes_for_level_base. And then Target_Size(Ln+1) = Target_Size(Ln) * max_bytes_for_level_multiplier * max_bytes_for_level_multiplier_additional[n]. max_bytes_for_level_multiplier_additional is by default all 1.\r\n\r\nWhy is the size of L1 not 123456?\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3305", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3305/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3305/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3305/events", "html_url": "https://github.com/facebook/rocksdb/issues/3305", "id": 284193567, "number": 3305, "title": "Making it work for those poor NetBSD users out there: max_align_t", "user": {"login": "zilti", "id": 661984, "avatar_url": "https://avatars2.githubusercontent.com/u/661984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilti", "html_url": "https://github.com/zilti", "followers_url": "https://api.github.com/users/zilti/followers", "following_url": "https://api.github.com/users/zilti/following{/other_user}", "gists_url": "https://api.github.com/users/zilti/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilti/subscriptions", "organizations_url": "https://api.github.com/users/zilti/orgs", "repos_url": "https://api.github.com/users/zilti/repos", "events_url": "https://api.github.com/users/zilti/events{/privacy}", "received_events_url": "https://api.github.com/users/zilti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-22T15:48:04Z", "updated_at": "2018-01-02T20:17:33Z", "closed_at": null, "author_association": "NONE", "body": "Hi! This is mostly a heads-up. I tried to compile it on NetBSD and stumbled over `max_align_t`. used in util/arena.h. The solution is to add this to the util/arena.h file:\r\n\r\n```c\r\n/* Some platforms lack max_align_t.  The check for _GCC_MAX_ALIGN_T is\r\n   a hack in case the configure-time test was done with g++ even though\r\n   we are currently compiling with gcc.  */\r\n#if ! (0 || defined _GCC_MAX_ALIGN_T)\r\n/* On the x86, the maximum storage alignment of double, long, etc. is 4,\r\n   but GCC's C11 ABI for x86 says that max_align_t has an alignment of 8,\r\n   and the C11 standard allows this.  Work around this problem by\r\n   using __alignof__ (which returns 8 for double) rather than _Alignof\r\n   (which returns 4), and align each union member accordingly.  */\r\n# ifdef __GNUC__\r\n#  define _GL_STDDEF_ALIGNAS(type) \\\r\n     __attribute__ ((__aligned__ (__alignof__ (type))))\r\n# else\r\n#  define _GL_STDDEF_ALIGNAS(type) /* */\r\n# endif\r\ntypedef union\r\n{\r\n  char *__p _GL_STDDEF_ALIGNAS (char *);\r\n  double __d _GL_STDDEF_ALIGNAS (double);\r\n  long double __ld _GL_STDDEF_ALIGNAS (long double);\r\n  long int __i _GL_STDDEF_ALIGNAS (long int);\r\n} max_align_t;\r\n#endif\r\n```\r\n\r\nsomewhere before the reference to `max_align_t`. Feel free to copy this snippet into your code and use it under your license; no need to mention me anywhere. I don't claim any rights on it.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3304", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3304/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3304/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3304/events", "html_url": "https://github.com/facebook/rocksdb/pull/3304", "id": 284189909, "number": 3304, "title": "expose WAL iterator in the C API", "user": {"login": "gritzko", "id": 81581, "avatar_url": "https://avatars2.githubusercontent.com/u/81581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gritzko", "html_url": "https://github.com/gritzko", "followers_url": "https://api.github.com/users/gritzko/followers", "following_url": "https://api.github.com/users/gritzko/following{/other_user}", "gists_url": "https://api.github.com/users/gritzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gritzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gritzko/subscriptions", "organizations_url": "https://api.github.com/users/gritzko/orgs", "repos_url": "https://api.github.com/users/gritzko/repos", "events_url": "https://api.github.com/users/gritzko/events{/privacy}", "received_events_url": "https://api.github.com/users/gritzko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-12-22T15:32:19Z", "updated_at": "2017-12-26T19:53:32Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3304", "html_url": "https://github.com/facebook/rocksdb/pull/3304", "diff_url": "https://github.com/facebook/rocksdb/pull/3304.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3304.patch"}, "body": "A minor change: I wrapped TransactionLogIterator for the C API.\r\nI needed that for the golang binding.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3292", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3292/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3292/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3292/events", "html_url": "https://github.com/facebook/rocksdb/pull/3292", "id": 283224891, "number": 3292, "title": "Add possibility to change ttl on open DB", "user": {"login": "falkevik", "id": 169777, "avatar_url": "https://avatars2.githubusercontent.com/u/169777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falkevik", "html_url": "https://github.com/falkevik", "followers_url": "https://api.github.com/users/falkevik/followers", "following_url": "https://api.github.com/users/falkevik/following{/other_user}", "gists_url": "https://api.github.com/users/falkevik/gists{/gist_id}", "starred_url": "https://api.github.com/users/falkevik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falkevik/subscriptions", "organizations_url": "https://api.github.com/users/falkevik/orgs", "repos_url": "https://api.github.com/users/falkevik/repos", "events_url": "https://api.github.com/users/falkevik/events{/privacy}", "received_events_url": "https://api.github.com/users/falkevik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-12-19T13:16:55Z", "updated_at": "2018-01-17T18:17:13Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3292", "html_url": "https://github.com/facebook/rocksdb/pull/3292", "diff_url": "https://github.com/facebook/rocksdb/pull/3292.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3292.patch"}, "body": "We have seen cases where it could be good to change TTL on already open DB.\r\nChange ttl in TtlCompactionFilterFactory on open db.\r\nNext time a filter is created, it will filter accroding to the set TTL.\r\n\r\nIs this something that could be useful for others?\r\nAny downsides?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3291", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3291/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3291/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3291/events", "html_url": "https://github.com/facebook/rocksdb/issues/3291", "id": 283212855, "number": 3291, "title": "calculate scores failed", "user": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-19T12:33:38Z", "updated_at": "2017-12-21T01:19:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "When i set level_compaction_dynamic_level_bytes on for an existed DB, and then turn off it again, this will cause calculating scores failed. Look at the statistics in log, the scores for L3 L4 L5 are inf.\r\n```\r\n** Compaction Stats [write] **\r\nLevel    Files   Size     Score \r\n----------------------------\r\n  L0      3/0    6.92 MB   0.8   \r\n  L1     65/0   510.06 MB   1.0 \r\n  L2     98/0   509.38 MB   inf  \r\n  L3    695/0    4.89 GB   inf      \r\n  L4   6727/0   49.07 GB   inf    \r\n  L5  12541/0   57.89 GB   inf    \r\n  L6    224/0   804.98 MB   0.0     \r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3287", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3287/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3287/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3287/events", "html_url": "https://github.com/facebook/rocksdb/issues/3287", "id": 282925550, "number": 3287, "title": "librocksdb.a error", "user": {"login": "anuscool", "id": 34475405, "avatar_url": "https://avatars2.githubusercontent.com/u/34475405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuscool", "html_url": "https://github.com/anuscool", "followers_url": "https://api.github.com/users/anuscool/followers", "following_url": "https://api.github.com/users/anuscool/following{/other_user}", "gists_url": "https://api.github.com/users/anuscool/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuscool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuscool/subscriptions", "organizations_url": "https://api.github.com/users/anuscool/orgs", "repos_url": "https://api.github.com/users/anuscool/repos", "events_url": "https://api.github.com/users/anuscool/events{/privacy}", "received_events_url": "https://api.github.com/users/anuscool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-12-18T15:48:50Z", "updated_at": "2018-01-04T18:52:26Z", "closed_at": null, "author_association": "NONE", "body": "librocksdb.a(db_impl.o): relocation R_X86_64_32S against `_ZTVN7rocksdb12SnapshotImplE' can not be used when making a shared object; recompile with -fPIC\r\n[INFO] /home/anupam/Arm_Project/project_oss/old_rocksdb/librocksdb.a: error adding symbols: Bad value\r\n\r\ncan any one help me to resolve this issue?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3282", "repository_url": "https://api.github.com/repos/facebook/rocksdb", "labels_url": "https://api.github.com/repos/facebook/rocksdb/issues/3282/labels{/name}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3282/comments", "events_url": "https://api.github.com/repos/facebook/rocksdb/issues/3282/events", "html_url": "https://github.com/facebook/rocksdb/pull/3282", "id": 282590790, "number": 3282, "title": "Improve performance of long range scans with readahead", "user": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196859108, "url": "https://api.github.com/repos/facebook/rocksdb/labels/CLA%20Signed", "name": "CLA Signed", "color": "009900", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-16T01:51:36Z", "updated_at": "2018-01-17T21:02:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3282", "html_url": "https://github.com/facebook/rocksdb/pull/3282", "diff_url": "https://github.com/facebook/rocksdb/pull/3282.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3282.patch"}, "body": "This change improves the performance of iterators doing long range scans (e.g. big/full table scans in MyRocks) by using readahead and prefetching additional data on each disk IO. This prefetching is automatically enabled on noticing more than 2 IOs for the same table file during iteration. The readahead size starts with 8KB and is exponentially increased on each additional sequential IO, up to a max of 16 MB. This helps in cutting down the number of IOs needed to complete the range scan. \r\n\r\nThe prefetched data is stored by the OS in page cache. So this currently works only for non direct-reads use-cases i.e applications which use page cache. \r\n\r\nThanks to @siying for the original idea and implementation.\r\n\r\n**Benchmarks:**\r\nData fill:\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=fillrandom -num=1000000000 -compression_type=\"none\" -level_compaction_dynamic_level_bytes\r\n```\r\nDo a long range scan: Seekrandom with large number of nexts\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=seekrandom -duration=60 -num=1000000000 -use_existing_db -seek_nexts=10000 -statistics -histogram\r\n```\r\n\r\nPage cache was cleared before each experiment with the command:\r\n```\r\nsudo sh -c \"echo 3 > /proc/sys/vm/drop_caches\"\r\n```\r\n```\r\nBefore:\r\nseekrandom   :   34020.945 micros/op 29 ops/sec;   32.5 MB/s (1636 of 1999 found)\r\nWith this change:\r\nseekrandom   :    9611.361 micros/op 104 ops/sec;  115.1 MB/s (5702 of 6999 found)\r\n```\r\n~3.5X performance improvement.\r\n\r\nAlso verified with strace and gdb that the readahead size is increasing as expected. \r\n```\r\nstrace -e readahead -f -T -t -p <db_bench process pid>\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "46e599fc6b47e47c1a988189114085c2b13ab49e", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-18T01:37:10Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-18T01:42:04Z"}, "message": "fix live WALs purged while file deletions disabled\n\nSummary:\nWhen calling `DisableFileDeletions` followed by `GetSortedWalFiles`, we guarantee the files returned by the latter call won't be deleted until after file deletions are re-enabled. However, `GetSortedWalFiles` didn't omit files already planned for deletion via `PurgeObsoleteFiles`, so the guarantee could be broken.\n\nWe fix it by making `GetSortedWalFiles` wait for the number of pending purges to hit zero if file deletions are disabled. This condition is eventually met since `PurgeObsoleteFiles` is guaranteed to be called for the existing pending purges, and new purges cannot be scheduled while file deletions are disabled. Once the condition is met, `GetSortedWalFiles` simply returns the content of DB and archive directories, which nobody can delete (except for deletion scheduler, for which I plan to fix this bug later) until deletions are re-enabled.\nCloses https://github.com/facebook/rocksdb/pull/3341\n\nDifferential Revision: D6681131\n\nPulled By: ajkr\n\nfbshipit-source-id: 90b1e2f2362ea9ef715623841c0826611a817634", "tree": {"sha": "eefc3ec87bfc15a13f4f46811f95eca112d0ac37", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/eefc3ec87bfc15a13f4f46811f95eca112d0ac37"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/46e599fc6b47e47c1a988189114085c2b13ab49e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/46e599fc6b47e47c1a988189114085c2b13ab49e", "html_url": "https://github.com/facebook/rocksdb/commit/46e599fc6b47e47c1a988189114085c2b13ab49e", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/46e599fc6b47e47c1a988189114085c2b13ab49e/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "266d85fbec80b129dbb6be28e75fe383a429b778", "url": "https://api.github.com/repos/facebook/rocksdb/commits/266d85fbec80b129dbb6be28e75fe383a429b778", "html_url": "https://github.com/facebook/rocksdb/commit/266d85fbec80b129dbb6be28e75fe383a429b778"}]}, {"sha": "266d85fbec80b129dbb6be28e75fe383a429b778", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-17T06:56:47Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-17T07:12:00Z"}, "message": "fix DBTest.AutomaticConflictsWithManualCompaction\n\nSummary:\nAfter af92d4ad112f192693f6017f24f9ae1b00e1f053, only exclusive manual compaction can have conflict. dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac updated the conflict-checking test case accordingly. But we missed the point that exclusive manual compaction can only conflict with automatic compactions scheduled after it, since it waits on pending automatic compactions before it begins running.\n\nThis PR updates the test case to ensure the automatic compactions are scheduled after the manual compaction starts but before it finishes, thus ensuring a conflict. I also cleaned up the test case to use less space as I saw it cause out-of-space error on travis.\nCloses https://github.com/facebook/rocksdb/pull/3375\n\nDifferential Revision: D6735162\n\nPulled By: ajkr\n\nfbshipit-source-id: 020530a4e150a4786792dce7cec5d66b420cb884", "tree": {"sha": "5a4c0ba377b1a49cd3ac281380c811587deaa904", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/5a4c0ba377b1a49cd3ac281380c811587deaa904"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/266d85fbec80b129dbb6be28e75fe383a429b778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/266d85fbec80b129dbb6be28e75fe383a429b778", "html_url": "https://github.com/facebook/rocksdb/commit/266d85fbec80b129dbb6be28e75fe383a429b778", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/266d85fbec80b129dbb6be28e75fe383a429b778/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "url": "https://api.github.com/repos/facebook/rocksdb/commits/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "html_url": "https://github.com/facebook/rocksdb/commit/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac"}]}, {"sha": "dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "commit": {"author": {"name": "Yi Wu", "email": "yiwu@fb.com", "date": "2018-01-17T01:26:29Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-17T01:30:39Z"}, "message": "Fix multiple build failures\n\nSummary:\n* Fix DBTest.CompactRangeWithEmptyBottomLevel lite build failure\n* Fix DBTest.AutomaticConflictsWithManualCompaction failure introduce by #3366\n* Fix BlockBasedTableTest::IndexUncompressed should be disabled if snappy is disabled\n* Fix ASAN failure with DBBasicTest::DBClose test\nCloses https://github.com/facebook/rocksdb/pull/3373\n\nDifferential Revision: D6732313\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 1eb9b9d9a8d795f56188fa9770db9353f6fdedc5", "tree": {"sha": "3649727cec39fdb61062feec73609c7b7229a05a", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/3649727cec39fdb61062feec73609c7b7229a05a"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "html_url": "https://github.com/facebook/rocksdb/commit/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac/comments", "author": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf6f03f3cdbc51637820655c07151fe4e2efda3f", "url": "https://api.github.com/repos/facebook/rocksdb/commits/bf6f03f3cdbc51637820655c07151fe4e2efda3f", "html_url": "https://github.com/facebook/rocksdb/commit/bf6f03f3cdbc51637820655c07151fe4e2efda3f"}]}, {"sha": "bf6f03f3cdbc51637820655c07151fe4e2efda3f", "commit": {"author": {"name": "Bartek Wrona", "email": "wrona@syncad.com", "date": "2018-01-16T22:13:38Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-16T22:26:50Z"}, "message": "Issue #3370 Broken CMakeLists.txt\n\nSummary:\nIssue #3370 Simple fixes to make RocksDB project working also as a submodule of other bigger one.\nCloses https://github.com/facebook/rocksdb/pull/3372\n\nDifferential Revision: D6729595\n\nPulled By: ajkr\n\nfbshipit-source-id: eee2589e7a7c4322873dff8510eebd050301c54c", "tree": {"sha": "4b22f091dc124e76dc83ff5851adf97a7f093e65", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/4b22f091dc124e76dc83ff5851adf97a7f093e65"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/bf6f03f3cdbc51637820655c07151fe4e2efda3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/bf6f03f3cdbc51637820655c07151fe4e2efda3f", "html_url": "https://github.com/facebook/rocksdb/commit/bf6f03f3cdbc51637820655c07151fe4e2efda3f", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/bf6f03f3cdbc51637820655c07151fe4e2efda3f/comments", "author": {"login": "vogel76", "id": 6086581, "avatar_url": "https://avatars1.githubusercontent.com/u/6086581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogel76", "html_url": "https://github.com/vogel76", "followers_url": "https://api.github.com/users/vogel76/followers", "following_url": "https://api.github.com/users/vogel76/following{/other_user}", "gists_url": "https://api.github.com/users/vogel76/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogel76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogel76/subscriptions", "organizations_url": "https://api.github.com/users/vogel76/orgs", "repos_url": "https://api.github.com/users/vogel76/repos", "events_url": "https://api.github.com/users/vogel76/events{/privacy}", "received_events_url": "https://api.github.com/users/vogel76/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af92d4ad112f192693f6017f24f9ae1b00e1f053", "url": "https://api.github.com/repos/facebook/rocksdb/commits/af92d4ad112f192693f6017f24f9ae1b00e1f053", "html_url": "https://github.com/facebook/rocksdb/commit/af92d4ad112f192693f6017f24f9ae1b00e1f053"}]}, {"sha": "af92d4ad112f192693f6017f24f9ae1b00e1f053", "commit": {"author": {"name": "Sunguck Lee", "email": "sunguck.lee@gmail.com", "date": "2018-01-16T21:10:34Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-16T21:12:12Z"}, "message": "Avoid too frequent MaybeScheduleFlushOrCompaction() call\n\nSummary:\nIf there's manual compaction in the queue, then \"HaveManualCompaction(compaction_queue_.front())\" will return true, and this cause too frequent MaybeScheduleFlushOrCompaction().\n\nhttps://github.com/facebook/rocksdb/issues/3198\nCloses https://github.com/facebook/rocksdb/pull/3366\n\nDifferential Revision: D6729575\n\nPulled By: ajkr\n\nfbshipit-source-id: 96da04f8fd33297b1ccaec3badd9090403da29b0", "tree": {"sha": "79a416ba457179dec8d267610cc4b52871ff7122", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/79a416ba457179dec8d267610cc4b52871ff7122"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/af92d4ad112f192693f6017f24f9ae1b00e1f053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/af92d4ad112f192693f6017f24f9ae1b00e1f053", "html_url": "https://github.com/facebook/rocksdb/commit/af92d4ad112f192693f6017f24f9ae1b00e1f053", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/af92d4ad112f192693f6017f24f9ae1b00e1f053/comments", "author": {"login": "SunguckLee", "id": 7089501, "avatar_url": "https://avatars0.githubusercontent.com/u/7089501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SunguckLee", "html_url": "https://github.com/SunguckLee", "followers_url": "https://api.github.com/users/SunguckLee/followers", "following_url": "https://api.github.com/users/SunguckLee/following{/other_user}", "gists_url": "https://api.github.com/users/SunguckLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/SunguckLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SunguckLee/subscriptions", "organizations_url": "https://api.github.com/users/SunguckLee/orgs", "repos_url": "https://api.github.com/users/SunguckLee/repos", "events_url": "https://api.github.com/users/SunguckLee/events{/privacy}", "received_events_url": "https://api.github.com/users/SunguckLee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "url": "https://api.github.com/repos/facebook/rocksdb/commits/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "html_url": "https://github.com/facebook/rocksdb/commit/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b"}]}, {"sha": "d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "commit": {"author": {"name": "Anand Ananthabhotla", "email": "anand76@devvm31471.prn1.facebook.com", "date": "2018-01-16T18:57:56Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-16T19:08:57Z"}, "message": "Add a Close() method to DB to return status when closing a db\n\nSummary:\nCurrently, the only way to close an open DB is to destroy the DB\nobject. There is no way for the caller to know the status. In one\ninstance, the destructor encountered an error due to failure to\nclose a log file on HDFS. In order to prevent silent failures, we add\nDB::Close() that calls CloseImpl() which must be implemented by its\ndescendants.\nThe main failure point in the destructor is closing the log file. This\npatch also adds a Close() entry point to Logger in order to get status.\nWhen DBOptions::info_log is allocated and owned by the DBImpl, it is\nexplicitly closed by DBImpl::CloseImpl().\nCloses https://github.com/facebook/rocksdb/pull/3348\n\nDifferential Revision: D6698158\n\nPulled By: anand1976\n\nfbshipit-source-id: 9468e2892553eb09c4c41b8723f590c0dbd8ab7d", "tree": {"sha": "f9fe029de05317de00b01463a6d6859a6e3579cd", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/f9fe029de05317de00b01463a6d6859a6e3579cd"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "html_url": "https://github.com/facebook/rocksdb/commit/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/d0f1b49ab600bdfb37e1226c03fed5ae4ab2da7b/comments", "author": null, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68829ed89cec64186557dc0860fc693c118ff1c6", "url": "https://api.github.com/repos/facebook/rocksdb/commits/68829ed89cec64186557dc0860fc693c118ff1c6", "html_url": "https://github.com/facebook/rocksdb/commit/68829ed89cec64186557dc0860fc693c118ff1c6"}]}, {"sha": "68829ed89cec64186557dc0860fc693c118ff1c6", "commit": {"author": {"name": "Sagar Vemuri", "email": "svemuri@fb.com", "date": "2018-01-13T07:36:27Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-13T07:41:43Z"}, "message": "Revert Snappy version upgrade\n\nSummary:\nJava static builds are again broken, this time due Snappy version upgrade introduced in 90c1d81975a03b0f8b352ddc614fbc99c2496ddd (#3331).\n\nThis is due to two reasons:\n1. The new Snappy packages should now be downloaded from https://github.com/google/snappy/archive/<pkg.tar.gz> instead of https://github.com/google/snappy/releases/download/<pkg.tar.gz> which we are using now.\n1. In addition to the the above URL change, Snappy changed its build from using autotools to CMake based : https://github.com/google/snappy/blame/e69d9f880677f2aa3488c80b953ec4309f0dfa2e/README.md#L65-L72\n\nSo more changes are needed if we are going to upgrade to 1.1.7. Hence reverting the version upgrade until we figure them out.\nCloses https://github.com/facebook/rocksdb/pull/3363\n\nDifferential Revision: D6716983\n\nPulled By: sagar0\n\nfbshipit-source-id: f451a1bc5eb0bb090f4da07bc3e5ba72cf89aefa", "tree": {"sha": "069000c511221cdea3c866b7eea4c5497d4393a4", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/069000c511221cdea3c866b7eea4c5497d4393a4"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/68829ed89cec64186557dc0860fc693c118ff1c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/68829ed89cec64186557dc0860fc693c118ff1c6", "html_url": "https://github.com/facebook/rocksdb/commit/68829ed89cec64186557dc0860fc693c118ff1c6", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/68829ed89cec64186557dc0860fc693c118ff1c6/comments", "author": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "url": "https://api.github.com/repos/facebook/rocksdb/commits/43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "html_url": "https://github.com/facebook/rocksdb/commit/43549c7d59c40dee7af1c955cb23a7dfa1227e5a"}]}, {"sha": "43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "commit": {"author": {"name": "Andrew Kryczka", "email": "ajkr@users.noreply.github.com", "date": "2018-01-12T21:16:39Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T21:27:08Z"}, "message": "Prevent unnecessary calls to PurgeObsoleteFiles\n\nSummary:\nSplit `JobContext::HaveSomethingToDelete` into two functions: itself and `JobContext::HaveSomethingToClean`. Now we won't call `DBImpl::PurgeObsoleteFiles` in cases where we really just need to call `JobContext::Clean`. The change is needed because I want to track pending calls to `PurgeObsoleteFiles` for a bug fix, which is much simpler if we only call it after `FindObsoleteFiles` finds files to delete.\nCloses https://github.com/facebook/rocksdb/pull/3350\n\nDifferential Revision: D6690609\n\nPulled By: ajkr\n\nfbshipit-source-id: 61502e7469288afe16a663a1b7df345baeaf246f", "tree": {"sha": "ef818ca1cbf58332a2e4ab46291b652e632f1ae1", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/ef818ca1cbf58332a2e4ab46291b652e632f1ae1"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "html_url": "https://github.com/facebook/rocksdb/commit/43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/43549c7d59c40dee7af1c955cb23a7dfa1227e5a/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba295cda29daee3ffe58549542804efdfd969784", "url": "https://api.github.com/repos/facebook/rocksdb/commits/ba295cda29daee3ffe58549542804efdfd969784", "html_url": "https://github.com/facebook/rocksdb/commit/ba295cda29daee3ffe58549542804efdfd969784"}]}, {"sha": "ba295cda29daee3ffe58549542804efdfd969784", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-12T19:03:55Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T19:12:09Z"}, "message": "replace DBTest.HugeNumbersOfLevel with a more targeted test case\n\nSummary:\nThis test often causes out-of-space error when run on travis. We don't want such stress tests in our unit test suite.\n\nThe bug in #596, which this test intends to expose, can be repro'd as long as the bottommost level(s) are empty when CompactRange is called. I rewrote the test to cover this simple case without writing a lot of data.\nCloses https://github.com/facebook/rocksdb/pull/3362\n\nDifferential Revision: D6710417\n\nPulled By: ajkr\n\nfbshipit-source-id: 9a1ec85e738c813ac2fee29f1d5302065ecb54c5", "tree": {"sha": "5b65ab3bb1a51eb8dd56cb7b0d4c5a2c0f248797", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/5b65ab3bb1a51eb8dd56cb7b0d4c5a2c0f248797"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/ba295cda29daee3ffe58549542804efdfd969784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/ba295cda29daee3ffe58549542804efdfd969784", "html_url": "https://github.com/facebook/rocksdb/commit/ba295cda29daee3ffe58549542804efdfd969784", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/ba295cda29daee3ffe58549542804efdfd969784/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e446d14093283f5eec4057901a08669cad46865c", "url": "https://api.github.com/repos/facebook/rocksdb/commits/e446d14093283f5eec4057901a08669cad46865c", "html_url": "https://github.com/facebook/rocksdb/commit/e446d14093283f5eec4057901a08669cad46865c"}]}, {"sha": "e446d14093283f5eec4057901a08669cad46865c", "commit": {"author": {"name": "Sagar Vemuri", "email": "svemuri@fb.com", "date": "2018-01-12T18:53:43Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T18:57:14Z"}, "message": "Fix PowerPC dynamic java build\n\nSummary:\nJava build on PPC64le has been broken since a few months, due to #2716. Fixing it with the least amount of changes.\n(We should cleanup a little around this code when time permits).\n\nThis should fix the build failures seen in http://140.211.168.68:8080/job/Rocksdb/ .\nCloses https://github.com/facebook/rocksdb/pull/3359\n\nDifferential Revision: D6712938\n\nPulled By: sagar0\n\nfbshipit-source-id: 3046e8f072180693de2af4762934ec1ace309ca4", "tree": {"sha": "62bd6bb769101ffaad20ba5ae01650410896a9d1", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/62bd6bb769101ffaad20ba5ae01650410896a9d1"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/e446d14093283f5eec4057901a08669cad46865c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/e446d14093283f5eec4057901a08669cad46865c", "html_url": "https://github.com/facebook/rocksdb/commit/e446d14093283f5eec4057901a08669cad46865c", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/e446d14093283f5eec4057901a08669cad46865c/comments", "author": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "url": "https://api.github.com/repos/facebook/rocksdb/commits/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "html_url": "https://github.com/facebook/rocksdb/commit/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420"}]}, {"sha": "6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "commit": {"author": {"name": "Andrew Kryczka", "email": "ajkr@users.noreply.github.com", "date": "2018-01-12T04:08:44Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T04:11:32Z"}, "message": "fix Gemfile.lock nokogiri dependencies\n\nSummary:\nI installed the ruby dependencies and ran `bundle update nokogiri`. It depends on a newer version of \"mini_portile2\" which I missed in 9c2f64e1488d577746686189d4d127dcf3a7f6e0. Now `bundle install` works again.\nCloses https://github.com/facebook/rocksdb/pull/3361\n\nDifferential Revision: D6710164\n\nPulled By: ajkr\n\nfbshipit-source-id: 9a08d6cc6400ef495b715b3d68b04ce3f3367031", "tree": {"sha": "1e4a27c36da90f027306627efcd01664ebef531a", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/1e4a27c36da90f027306627efcd01664ebef531a"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "html_url": "https://github.com/facebook/rocksdb/commit/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45828c721536e2145be6f825e563955d39948f02", "url": "https://api.github.com/repos/facebook/rocksdb/commits/45828c721536e2145be6f825e563955d39948f02", "html_url": "https://github.com/facebook/rocksdb/commit/45828c721536e2145be6f825e563955d39948f02"}]}, {"sha": "45828c721536e2145be6f825e563955d39948f02", "commit": {"author": {"name": "Peter (Stig) Edwards", "email": "thatsafunnyname@gmail.com", "date": "2018-01-12T02:49:48Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T02:57:41Z"}, "message": "Consider an increase to buffer size when reading option file, from 4K to 8K.\n\nSummary:\nHello and thank you for RocksDB,\n\nWhile looking into the buffered io used when an `OPTIONS` file is read I noticed the `OPTIONS` files produced by RocksDB 5.8.8 (and head of master) were just over 4096 bytes in size, resulting in the version of glibc I am using (glibc-2.17-196.el7) (on the filesystem used) being passed a 4K buffer for the `fread_unlocked` call and 2 system call reads using a 4096 buffer being used to read the contents of the `OPTIONS` file.\n\n  If the buffer size is increased to 8192 then 1 system call read is used to read the contents.\n\n  As I think the buffer size is just used for reading `OPTIONS` files, and I thought it likely that `OPTIONS` files have increased in size (as more options are added), I thought I would suggest an increase.\n\n[  If the comments from the top of the `OPTIONS` file are removed, and white space from the start of lines is removed then the size can be reduced to be under 4K, but as more options are added the size seems likely to grow again. ]\n\nCreate a new database:\n\n```\n> ./ldb --create_if_missing --db=/tmp/rdb_tmp put 1 1\nOK\n```\n\nThe OPTIONS file is 4252 bytes:\n\n```\n> stat /tmp/rdb_tmp/OPTIONS* | head -n 2\n  File: \u2018/tmp/rdb_tmp/OPTIONS-000005\u2019\n  Size: 4252            Blocks: 16         IO Block: 4096   regular file\n```\n\nBefore, the 4096 byte buffer is used from 2 system read calls:\n\n```\n> strace -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 |\n    grep -A 1 'RocksDB option file'\nread(3, \"# This is a RocksDB option file.\"..., 4096) = 4096\nread(3, \"e\\n  metadata_block_size=4096\\n  c\"..., 4096) = 156\n```\n\nltrace shows 4096 passed to fread_unlocked\n\n```\n> ltrace -S -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 |\n    grep -C 3 'RocksDB option file'\n[pid 51013] fread_unlocked(0x7ffd5fbf2d50, 1, 4096, 0x7fd2e084e780 <unfinished ...>\n[pid 51013] fstat@SYS(3, 0x7ffd5fbf28f0)         = 0\n[pid 51013] mmap@SYS(nil, 4096, 3, 34, -1, 0)    = 0x7fd2e318c000\n[pid 51013] read@SYS(3, \"# This is a RocksDB option file.\"..., 4096) = 4096\n[pid 51013] <... fread_unlocked resumed> )       = 4096\n...\n```\n\nAfter, the 8192 byte buffer is used from 1 system read call:\n\n```\n> strace -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 | grep -A 1 'RocksDB option file'\nread(3, \"# This is a RocksDB option file.\"..., 8192) = 4252\nread(3, \"\", 4096)                       = 0\n```\n\nltrace shows 8192 passed to fread_unlocked\n\n```\n> ltrace -S -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 | grep -C 3 'RocksDB option file'\n[pid 146611] fread_unlocked(0x7ffcfba382f0, 1, 8192, 0x7fc4e844e780 <unfinished ...>\n[pid 146611] fstat@SYS(3, 0x7ffcfba380f0)        = 0\n[pid 146611] mmap@SYS(nil, 4096, 3, 34, -1, 0)   = 0x7fc4eaee0000\n[pid 146611] read@SYS(3, \"# This is a RocksDB option file.\"..., 8192) = 4252\n[pid 146611] read@SYS(3, \"\", 4096)               = 0\n[pid 146611] <... fread_unlocked resumed> )      = 4252\n[pid 146611] feof(0x7fc4e844e780)                = 1\n```\nCloses https://github.com/facebook/rocksdb/pull/3294\n\nDifferential Revision: D6653684\n\nPulled By: ajkr\n\nfbshipit-source-id: 222f25f5442fefe1dcec18c700bd9e235bb63491", "tree": {"sha": "474d9fb4bd16d28db734a54736270a78bd024807", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/474d9fb4bd16d28db734a54736270a78bd024807"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/45828c721536e2145be6f825e563955d39948f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/45828c721536e2145be6f825e563955d39948f02", "html_url": "https://github.com/facebook/rocksdb/commit/45828c721536e2145be6f825e563955d39948f02", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/45828c721536e2145be6f825e563955d39948f02/comments", "author": {"login": "thatsafunnyname", "id": 4728785, "avatar_url": "https://avatars0.githubusercontent.com/u/4728785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatsafunnyname", "html_url": "https://github.com/thatsafunnyname", "followers_url": "https://api.github.com/users/thatsafunnyname/followers", "following_url": "https://api.github.com/users/thatsafunnyname/following{/other_user}", "gists_url": "https://api.github.com/users/thatsafunnyname/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatsafunnyname/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatsafunnyname/subscriptions", "organizations_url": "https://api.github.com/users/thatsafunnyname/orgs", "repos_url": "https://api.github.com/users/thatsafunnyname/repos", "events_url": "https://api.github.com/users/thatsafunnyname/events{/privacy}", "received_events_url": "https://api.github.com/users/thatsafunnyname/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a7ba0e54826a01fb2117d3b2431973d25763242", "url": "https://api.github.com/repos/facebook/rocksdb/commits/0a7ba0e54826a01fb2117d3b2431973d25763242", "html_url": "https://github.com/facebook/rocksdb/commit/0a7ba0e54826a01fb2117d3b2431973d25763242"}]}, {"sha": "0a7ba0e54826a01fb2117d3b2431973d25763242", "commit": {"author": {"name": "Changli Gao", "email": "xiaosuo@gmail.com", "date": "2018-01-12T02:48:19Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T02:57:33Z"}, "message": "Fix memleak when DB::DeleteFile()\n\nSummary:\nBecause the corresponding read_first_record_cache_ item wasn't\nerased, memory leaked.\nCloses https://github.com/facebook/rocksdb/pull/1712\n\nDifferential Revision: D4363654\n\nPulled By: ajkr\n\nfbshipit-source-id: 7da1adcfc8c380e4ffe05b8769fc2221ad17a225", "tree": {"sha": "4fccfd2669de7962757f7c8c6fd2f2a376cc08bf", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/4fccfd2669de7962757f7c8c6fd2f2a376cc08bf"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/0a7ba0e54826a01fb2117d3b2431973d25763242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/0a7ba0e54826a01fb2117d3b2431973d25763242", "html_url": "https://github.com/facebook/rocksdb/commit/0a7ba0e54826a01fb2117d3b2431973d25763242", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/0a7ba0e54826a01fb2117d3b2431973d25763242/comments", "author": {"login": "xiaosuo", "id": 105033, "avatar_url": "https://avatars3.githubusercontent.com/u/105033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaosuo", "html_url": "https://github.com/xiaosuo", "followers_url": "https://api.github.com/users/xiaosuo/followers", "following_url": "https://api.github.com/users/xiaosuo/following{/other_user}", "gists_url": "https://api.github.com/users/xiaosuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaosuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaosuo/subscriptions", "organizations_url": "https://api.github.com/users/xiaosuo/orgs", "repos_url": "https://api.github.com/users/xiaosuo/repos", "events_url": "https://api.github.com/users/xiaosuo/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaosuo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c2f64e1488d577746686189d4d127dcf3a7f6e0", "url": "https://api.github.com/repos/facebook/rocksdb/commits/9c2f64e1488d577746686189d4d127dcf3a7f6e0", "html_url": "https://github.com/facebook/rocksdb/commit/9c2f64e1488d577746686189d4d127dcf3a7f6e0"}]}, {"sha": "9c2f64e1488d577746686189d4d127dcf3a7f6e0", "commit": {"author": {"name": "Andrew Kryczka", "email": "ajkr@users.noreply.github.com", "date": "2018-01-12T00:51:09Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-12T00:57:25Z"}, "message": "Update Gemfile.lock\n\nSummary:\nbump nokogiri number\nCloses https://github.com/facebook/rocksdb/pull/3358\n\nDifferential Revision: D6708596\n\nPulled By: ajkr\n\nfbshipit-source-id: 6662c3ba4994374ecf8a13928e915b655a980b70", "tree": {"sha": "970c017e6abb3a00d1cca32cf47ce90e2a78bf37", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/970c017e6abb3a00d1cca32cf47ce90e2a78bf37"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/9c2f64e1488d577746686189d4d127dcf3a7f6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/9c2f64e1488d577746686189d4d127dcf3a7f6e0", "html_url": "https://github.com/facebook/rocksdb/commit/9c2f64e1488d577746686189d4d127dcf3a7f6e0", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/9c2f64e1488d577746686189d4d127dcf3a7f6e0/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "204af1ecccb6ed8110ee04cf9130594cfcb3af27", "url": "https://api.github.com/repos/facebook/rocksdb/commits/204af1ecccb6ed8110ee04cf9130594cfcb3af27", "html_url": "https://github.com/facebook/rocksdb/commit/204af1ecccb6ed8110ee04cf9130594cfcb3af27"}]}, {"sha": "204af1ecccb6ed8110ee04cf9130594cfcb3af27", "commit": {"author": {"name": "Bo Liu", "email": "bol@pinterest.com", "date": "2018-01-11T23:35:21Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-11T23:43:56Z"}, "message": "add WriteBatch::WriteBatch(std::string&&)\n\nSummary:\nto save a string copy for some use cases.\n\nThe change is pretty straightforward, please feel free to let me know if you want to suggest any tests for it.\nCloses https://github.com/facebook/rocksdb/pull/3349\n\nDifferential Revision: D6706828\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 873ce4442937bdc030b395c7f99228eda7f59eb7", "tree": {"sha": "a8f50cd1501540379c75de13b700a286da60f886", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/a8f50cd1501540379c75de13b700a286da60f886"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/204af1ecccb6ed8110ee04cf9130594cfcb3af27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/204af1ecccb6ed8110ee04cf9130594cfcb3af27", "html_url": "https://github.com/facebook/rocksdb/commit/204af1ecccb6ed8110ee04cf9130594cfcb3af27", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/204af1ecccb6ed8110ee04cf9130594cfcb3af27/comments", "author": {"login": "newpoo", "id": 2150070, "avatar_url": "https://avatars3.githubusercontent.com/u/2150070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpoo", "html_url": "https://github.com/newpoo", "followers_url": "https://api.github.com/users/newpoo/followers", "following_url": "https://api.github.com/users/newpoo/following{/other_user}", "gists_url": "https://api.github.com/users/newpoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpoo/subscriptions", "organizations_url": "https://api.github.com/users/newpoo/orgs", "repos_url": "https://api.github.com/users/newpoo/repos", "events_url": "https://api.github.com/users/newpoo/events{/privacy}", "received_events_url": "https://api.github.com/users/newpoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4da02d147e6ab331a0450e67368839c2e22c291", "url": "https://api.github.com/repos/facebook/rocksdb/commits/d4da02d147e6ab331a0450e67368839c2e22c291", "html_url": "https://github.com/facebook/rocksdb/commit/d4da02d147e6ab331a0450e67368839c2e22c291"}]}, {"sha": "d4da02d147e6ab331a0450e67368839c2e22c291", "commit": {"author": {"name": "Adam Retter", "email": "adam.retter@googlemail.com", "date": "2018-01-11T22:51:26Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-11T22:57:45Z"}, "message": "Add Jenkins for PPC64le build status badge\n\nSummary: Closes https://github.com/facebook/rocksdb/pull/3356\n\nDifferential Revision: D6706909\n\nPulled By: sagar0\n\nfbshipit-source-id: 6e4757d9eceab3e8a6c1b83c1be4108e86576cb2", "tree": {"sha": "59afd5d957dc6a40ee552829099ecc977df4f83a", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/59afd5d957dc6a40ee552829099ecc977df4f83a"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/d4da02d147e6ab331a0450e67368839c2e22c291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/d4da02d147e6ab331a0450e67368839c2e22c291", "html_url": "https://github.com/facebook/rocksdb/commit/d4da02d147e6ab331a0450e67368839c2e22c291", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/d4da02d147e6ab331a0450e67368839c2e22c291/comments", "author": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a53c571d2d69e212922c92f275258ede328652ab", "url": "https://api.github.com/repos/facebook/rocksdb/commits/a53c571d2d69e212922c92f275258ede328652ab", "html_url": "https://github.com/facebook/rocksdb/commit/a53c571d2d69e212922c92f275258ede328652ab"}]}, {"sha": "a53c571d2d69e212922c92f275258ede328652ab", "commit": {"author": {"name": "Adam Retter", "email": "adam.retter@googlemail.com", "date": "2018-01-11T21:21:35Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-11T21:29:55Z"}, "message": "FreeBSD build support for RocksDB and RocksJava\n\nSummary:\nTested on a clean FreeBSD 11.01 x64.\n\nCloses https://github.com/facebook/rocksdb/pull/1423\nCloses https://github.com/facebook/rocksdb/pull/3357\n\nDifferential Revision: D6705868\n\nPulled By: sagar0\n\nfbshipit-source-id: cbccbbdafd4f42922512ca03619a5d5583a425fd", "tree": {"sha": "4a47dc051a024c1aa38262262c2c3b1f662c3611", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/4a47dc051a024c1aa38262262c2c3b1f662c3611"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/a53c571d2d69e212922c92f275258ede328652ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/a53c571d2d69e212922c92f275258ede328652ab", "html_url": "https://github.com/facebook/rocksdb/commit/a53c571d2d69e212922c92f275258ede328652ab", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/a53c571d2d69e212922c92f275258ede328652ab/comments", "author": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b010116d8263db1ba3f6ea5b30f9886243320a59", "url": "https://api.github.com/repos/facebook/rocksdb/commits/b010116d8263db1ba3f6ea5b30f9886243320a59", "html_url": "https://github.com/facebook/rocksdb/commit/b010116d8263db1ba3f6ea5b30f9886243320a59"}]}, {"sha": "b010116d8263db1ba3f6ea5b30f9886243320a59", "commit": {"author": {"name": "Dmitri Smirnov", "email": "dmitrism@microsoft.com", "date": "2018-01-11T01:03:12Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-11T01:11:58Z"}, "message": "Eliminate some redundant block reads.\n\nSummary:\nRe-use metadata for reading Compression Dictionary on BlockBased\n  table open, this saves two reads from disk.\n  This helps to our 999 percentile in 5.6.1 where prefetch buffer is  not present.\nCloses https://github.com/facebook/rocksdb/pull/3354\n\nDifferential Revision: D6695753\n\nPulled By: ajkr\n\nfbshipit-source-id: bb8acd9e9e66e65b89c548ab8940570ae360333c", "tree": {"sha": "f9c55382ed34657b0d2c3062ae24c29a5135bb61", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/f9c55382ed34657b0d2c3062ae24c29a5135bb61"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/b010116d8263db1ba3f6ea5b30f9886243320a59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/b010116d8263db1ba3f6ea5b30f9886243320a59", "html_url": "https://github.com/facebook/rocksdb/commit/b010116d8263db1ba3f6ea5b30f9886243320a59", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/b010116d8263db1ba3f6ea5b30f9886243320a59/comments", "author": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6e8be9e205d434a29418410155397f2a762e58", "url": "https://api.github.com/repos/facebook/rocksdb/commits/0c6e8be9e205d434a29418410155397f2a762e58", "html_url": "https://github.com/facebook/rocksdb/commit/0c6e8be9e205d434a29418410155397f2a762e58"}]}, {"sha": "0c6e8be9e205d434a29418410155397f2a762e58", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-10T23:36:48Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-10T23:41:46Z"}, "message": "Fix directory name for db_basic_test\n\nSummary:\nIt was using the same directory as `db_options_test` so transiently failed when unit tests were run in parallel.\nCloses https://github.com/facebook/rocksdb/pull/3352\n\nDifferential Revision: D6691649\n\nPulled By: ajkr\n\nfbshipit-source-id: bee433484fec4faedd5cadf2db3c92fdcc99a170", "tree": {"sha": "7d8cdd05ba4b9c460b4d58cd90e959ba6366b33a", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/7d8cdd05ba4b9c460b4d58cd90e959ba6366b33a"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/0c6e8be9e205d434a29418410155397f2a762e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/0c6e8be9e205d434a29418410155397f2a762e58", "html_url": "https://github.com/facebook/rocksdb/commit/0c6e8be9e205d434a29418410155397f2a762e58", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/0c6e8be9e205d434a29418410155397f2a762e58/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199405192d356876055196a11e06b8d83c36118e", "url": "https://api.github.com/repos/facebook/rocksdb/commits/199405192d356876055196a11e06b8d83c36118e", "html_url": "https://github.com/facebook/rocksdb/commit/199405192d356876055196a11e06b8d83c36118e"}]}, {"sha": "199405192d356876055196a11e06b8d83c36118e", "commit": {"author": {"name": "Anand Ananthabhotla", "email": "anand76@devvm31471.prn1.facebook.com", "date": "2018-01-10T23:06:29Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-10T23:11:59Z"}, "message": "Add a BlockBasedTableOption to turn off index block compression.\n\nSummary:\nAdd a new bool option index_uncompressed in BlockBasedTableOptions.\nCloses https://github.com/facebook/rocksdb/pull/3303\n\nDifferential Revision: D6686161\n\nPulled By: anand1976\n\nfbshipit-source-id: 748b46993d48a01e5f89b6bd3e41f06a59ec6054", "tree": {"sha": "558a6d100b6c2480c57236f608d11a825e89d63e", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/558a6d100b6c2480c57236f608d11a825e89d63e"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/199405192d356876055196a11e06b8d83c36118e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/199405192d356876055196a11e06b8d83c36118e", "html_url": "https://github.com/facebook/rocksdb/commit/199405192d356876055196a11e06b8d83c36118e", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/199405192d356876055196a11e06b8d83c36118e/comments", "author": null, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "url": "https://api.github.com/repos/facebook/rocksdb/commits/bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "html_url": "https://github.com/facebook/rocksdb/commit/bafec6bb30c8da09558f1af4278dcbe1defbdfa1"}]}, {"sha": "bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-10T20:14:18Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-10T20:26:49Z"}, "message": "Fix checkpoint_test directory setup/cleanup\n\nSummary:\n- Change directory name from \"db_test\" to \"checkpoint_test\". Previously it used the same directory as `db_test`\n- Systematically cleanup snapshot and snapshot staging directories before each test. Previously a failed test run caused subsequent runs to fail, particularly when the first failure caused \"snapshot.tmp\" to not be cleaned up.\nCloses https://github.com/facebook/rocksdb/pull/3351\n\nDifferential Revision: D6691015\n\nPulled By: ajkr\n\nfbshipit-source-id: 4fc2ac2e21ff2617ea0e96297c5132b5f2eefd79", "tree": {"sha": "5a7876b94035dec582f486986aab5d71d25e60b6", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/5a7876b94035dec582f486986aab5d71d25e60b6"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "html_url": "https://github.com/facebook/rocksdb/commit/bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/bafec6bb30c8da09558f1af4278dcbe1defbdfa1/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a478e8569778266abf78fa67a860e805ac7fb86d", "url": "https://api.github.com/repos/facebook/rocksdb/commits/a478e8569778266abf78fa67a860e805ac7fb86d", "html_url": "https://github.com/facebook/rocksdb/commit/a478e8569778266abf78fa67a860e805ac7fb86d"}]}, {"sha": "a478e8569778266abf78fa67a860e805ac7fb86d", "commit": {"author": {"name": "Siying Dong", "email": "siying.d@fb.com", "date": "2018-01-10T02:12:32Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-10T02:27:03Z"}, "message": "Remove GCC parameter \"-march=native\" for ARM\n\nSummary:\nMost popular versions of GCC can't identify platform on ARM if \"-march=native\" is specified. Remove it to unblock most people.\nCloses https://github.com/facebook/rocksdb/pull/3346\n\nDifferential Revision: D6690544\n\nPulled By: siying\n\nfbshipit-source-id: bbaba9fe2645b6b37144b36ea75beeff88992b49", "tree": {"sha": "3fd0292cc30b552719985f09ec74abd6cf5cd845", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/3fd0292cc30b552719985f09ec74abd6cf5cd845"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/a478e8569778266abf78fa67a860e805ac7fb86d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/a478e8569778266abf78fa67a860e805ac7fb86d", "html_url": "https://github.com/facebook/rocksdb/commit/a478e8569778266abf78fa67a860e805ac7fb86d", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/a478e8569778266abf78fa67a860e805ac7fb86d/comments", "author": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677f249d6d388780658a79732545b77a276f8e07", "url": "https://api.github.com/repos/facebook/rocksdb/commits/677f249d6d388780658a79732545b77a276f8e07", "html_url": "https://github.com/facebook/rocksdb/commit/677f249d6d388780658a79732545b77a276f8e07"}]}, {"sha": "677f249d6d388780658a79732545b77a276f8e07", "commit": {"author": {"name": "Sagar Vemuri", "email": "svemuri@fb.com", "date": "2018-01-10T00:27:01Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-10T00:42:15Z"}, "message": "Fix Travis build failures in CMake RocksJava\n\nSummary:\nFixed RocksJava travis build failure due to a missing file in java/CMakeLists.txt. (from #3332).\nCloses https://github.com/facebook/rocksdb/pull/3344\n\nDifferential Revision: D6686472\n\nPulled By: sagar0\n\nfbshipit-source-id: dd3281dff1342c3a7235c402890420aa56db0fe3", "tree": {"sha": "5759d6ad53a59eb9969eba758545b9028a9b5904", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/5759d6ad53a59eb9969eba758545b9028a9b5904"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/677f249d6d388780658a79732545b77a276f8e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/677f249d6d388780658a79732545b77a276f8e07", "html_url": "https://github.com/facebook/rocksdb/commit/677f249d6d388780658a79732545b77a276f8e07", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/677f249d6d388780658a79732545b77a276f8e07/comments", "author": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aa95f4d0fc904d2865c13f59051576619ca9811", "url": "https://api.github.com/repos/facebook/rocksdb/commits/6aa95f4d0fc904d2865c13f59051576619ca9811", "html_url": "https://github.com/facebook/rocksdb/commit/6aa95f4d0fc904d2865c13f59051576619ca9811"}]}, {"sha": "6aa95f4d0fc904d2865c13f59051576619ca9811", "commit": {"author": {"name": "Siying Dong", "email": "siying.d@fb.com", "date": "2018-01-09T22:46:30Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-09T22:58:33Z"}, "message": "Fix a wrong log formatting\n\nSummary:\nI experienced weird segfault because of this mismatch of type in log formatting. Fix it.\nCloses https://github.com/facebook/rocksdb/pull/3345\n\nDifferential Revision: D6687224\n\nPulled By: siying\n\nfbshipit-source-id: c51fb1c008b7ebc3efdc353a4adad3e8f5b3e9de", "tree": {"sha": "b1431b92b70d0d7d47626a3222bf3f8338aaa334", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/b1431b92b70d0d7d47626a3222bf3f8338aaa334"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/6aa95f4d0fc904d2865c13f59051576619ca9811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/6aa95f4d0fc904d2865c13f59051576619ca9811", "html_url": "https://github.com/facebook/rocksdb/commit/6aa95f4d0fc904d2865c13f59051576619ca9811", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/6aa95f4d0fc904d2865c13f59051576619ca9811/comments", "author": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "url": "https://api.github.com/repos/facebook/rocksdb/commits/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "html_url": "https://github.com/facebook/rocksdb/commit/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32"}]}, {"sha": "0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "commit": {"author": {"name": "Andrew Kryczka", "email": "andrewkr@fb.com", "date": "2018-01-09T20:51:10Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-09T20:56:58Z"}, "message": "fix DBImpl instance variable naming\n\nSummary:\ngot confused while reading `FindObsoleteFiles` due to thinking it's a local variable, so renamed it properly\nCloses https://github.com/facebook/rocksdb/pull/3342\n\nDifferential Revision: D6684797\n\nPulled By: ajkr\n\nfbshipit-source-id: a4df0aae1cccce99d4dd4d164aadc85b17707132", "tree": {"sha": "9e3e877f6fa8249e73c2542d6b82237bc8a6c7b9", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/9e3e877f6fa8249e73c2542d6b82237bc8a6c7b9"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "html_url": "https://github.com/facebook/rocksdb/commit/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32/comments", "author": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46ec52499eb0bab57f9b649b11ca9161f93ba06b", "url": "https://api.github.com/repos/facebook/rocksdb/commits/46ec52499eb0bab57f9b649b11ca9161f93ba06b", "html_url": "https://github.com/facebook/rocksdb/commit/46ec52499eb0bab57f9b649b11ca9161f93ba06b"}]}, {"sha": "46ec52499eb0bab57f9b649b11ca9161f93ba06b", "commit": {"author": {"name": "Yi Wu", "email": "yiwu@fb.com", "date": "2018-01-09T18:53:35Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-09T18:57:29Z"}, "message": "Fix db_bench write being disabled in lite build\n\nSummary:\nThe macro was added by mistake in #2372\nCloses https://github.com/facebook/rocksdb/pull/3343\n\nDifferential Revision: D6681356\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 4180172fb0eaef4189c07f219241e0c261c03461", "tree": {"sha": "d9391db62837873a54b2108c43cc98881fda281c", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/d9391db62837873a54b2108c43cc98881fda281c"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/46ec52499eb0bab57f9b649b11ca9161f93ba06b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/46ec52499eb0bab57f9b649b11ca9161f93ba06b", "html_url": "https://github.com/facebook/rocksdb/commit/46ec52499eb0bab57f9b649b11ca9161f93ba06b", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/46ec52499eb0bab57f9b649b11ca9161f93ba06b/comments", "author": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "url": "https://api.github.com/repos/facebook/rocksdb/commits/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "html_url": "https://github.com/facebook/rocksdb/commit/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6"}]}, {"sha": "00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "commit": {"author": {"name": "Maysam Yabandeh", "email": "myabandeh@fb.com", "date": "2018-01-09T16:47:46Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-09T16:57:20Z"}, "message": "WritePrepared Txn: address some pending TODOs\n\nSummary:\nThis patch addresses a couple of minor TODOs for WritePrepared Txn such as double checking some assert statements at runtime as well, skip extra AddPrepared in non-2pc transactions, and safety check for infinite loops.\nCloses https://github.com/facebook/rocksdb/pull/3302\n\nDifferential Revision: D6617002\n\nPulled By: maysamyabandeh\n\nfbshipit-source-id: ef6673c139cb49f64c0879508d2f573b78609aca", "tree": {"sha": "1c94a51287f6f775b3e6f6afa8a9aaebbf8a9746", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/1c94a51287f6f775b3e6f6afa8a9aaebbf8a9746"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "html_url": "https://github.com/facebook/rocksdb/commit/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6/comments", "author": {"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24e2c1640d9808a9dc18b770427aa024670f5edf", "url": "https://api.github.com/repos/facebook/rocksdb/commits/24e2c1640d9808a9dc18b770427aa024670f5edf", "html_url": "https://github.com/facebook/rocksdb/commit/24e2c1640d9808a9dc18b770427aa024670f5edf"}]}, {"sha": "24e2c1640d9808a9dc18b770427aa024670f5edf", "commit": {"author": {"name": "Chris Lu", "email": "chrislusf@users.noreply.github.com", "date": "2018-01-09T01:16:22Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-09T01:26:31Z"}, "message": "add support for allow_ingest_behind in C API\n\nSummary:\nhttps://github.com/facebook/rocksdb/wiki/Creating-and-Ingesting-SST-files\n\nNeed to expose these functions in the C API to be used by Go bindings.\nCloses https://github.com/facebook/rocksdb/pull/3011\n\nDifferential Revision: D6679563\n\nPulled By: sagar0\n\nfbshipit-source-id: 536f844ddaeb0172c6d7e416d2a75e8f9e57c8ef", "tree": {"sha": "683e2849c8c62cd902af455c86ff11088f7b74d3", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/683e2849c8c62cd902af455c86ff11088f7b74d3"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/24e2c1640d9808a9dc18b770427aa024670f5edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/24e2c1640d9808a9dc18b770427aa024670f5edf", "html_url": "https://github.com/facebook/rocksdb/commit/24e2c1640d9808a9dc18b770427aa024670f5edf", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/24e2c1640d9808a9dc18b770427aa024670f5edf/comments", "author": {"login": "chrislusf", "id": 1543151, "avatar_url": "https://avatars3.githubusercontent.com/u/1543151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrislusf", "html_url": "https://github.com/chrislusf", "followers_url": "https://api.github.com/users/chrislusf/followers", "following_url": "https://api.github.com/users/chrislusf/following{/other_user}", "gists_url": "https://api.github.com/users/chrislusf/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrislusf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrislusf/subscriptions", "organizations_url": "https://api.github.com/users/chrislusf/orgs", "repos_url": "https://api.github.com/users/chrislusf/repos", "events_url": "https://api.github.com/users/chrislusf/events{/privacy}", "received_events_url": "https://api.github.com/users/chrislusf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "398d72fa614b809cc4df153092e0665b57b170d2", "url": "https://api.github.com/repos/facebook/rocksdb/commits/398d72fa614b809cc4df153092e0665b57b170d2", "html_url": "https://github.com/facebook/rocksdb/commit/398d72fa614b809cc4df153092e0665b57b170d2"}]}, {"sha": "398d72fa614b809cc4df153092e0665b57b170d2", "commit": {"author": {"name": "Adam Retter", "email": "adam.retter@googlemail.com", "date": "2018-01-08T20:20:48Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-08T20:30:52Z"}, "message": "Add autotune and #getBytesPerSecond() to RocksJava RateLimiter\n\nSummary: Closes https://github.com/facebook/rocksdb/pull/3332\n\nDifferential Revision: D6667680\n\nPulled By: ajkr\n\nfbshipit-source-id: b2bb6889257850a4eb6f6cbd7106f62df7b82730", "tree": {"sha": "7428ae445d09e514de7cc593134d6913d07674c8", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/7428ae445d09e514de7cc593134d6913d07674c8"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/398d72fa614b809cc4df153092e0665b57b170d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/398d72fa614b809cc4df153092e0665b57b170d2", "html_url": "https://github.com/facebook/rocksdb/commit/398d72fa614b809cc4df153092e0665b57b170d2", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/398d72fa614b809cc4df153092e0665b57b170d2/comments", "author": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "url": "https://api.github.com/repos/facebook/rocksdb/commits/30a017fecae60aa7b87c4a1e283b6ac027724a92", "html_url": "https://github.com/facebook/rocksdb/commit/30a017fecae60aa7b87c4a1e283b6ac027724a92"}]}, {"sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "commit": {"author": {"name": "Yi Wu", "email": "yiwu@fb.com", "date": "2018-01-06T00:35:49Z"}, "committer": {"name": "Facebook Github Bot", "email": "facebook-github-bot@users.noreply.github.com", "date": "2018-01-06T00:41:58Z"}, "message": "Blob DB: avoid having a separate read of checksum\n\nSummary:\nPreviously on a blob db read, we are making a read of the blob value, and then make another read to get CRC checksum. I'm combining the two read into one.\n\nreadrandom db_bench with 1G database with base db size of 13M, value size 1k:\n`./db_bench --db=/home/yiwu/tmp/db_bench --use_blob_db --value_size=1024 --num=1000000 --benchmarks=readrandom --use_existing_db --cache_size=32000000`\nmaster: throughput 234MB/s, get micros p50 5.984 p95 9.998 p99 20.817 p100 787\nthis PR: throughput 261MB/s, get micros p50 5.157 p95 9.928 p99 20.724 p100 190\nCloses https://github.com/facebook/rocksdb/pull/3301\n\nDifferential Revision: D6615950\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 052410c6d8539ec0cc305d53793bbc8f3616baa3", "tree": {"sha": "ad5d0f6d4092655a749fbaec7997e5afa21936c8", "url": "https://api.github.com/repos/facebook/rocksdb/git/trees/ad5d0f6d4092655a749fbaec7997e5afa21936c8"}, "url": "https://api.github.com/repos/facebook/rocksdb/git/commits/30a017fecae60aa7b87c4a1e283b6ac027724a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/facebook/rocksdb/commits/30a017fecae60aa7b87c4a1e283b6ac027724a92", "html_url": "https://github.com/facebook/rocksdb/commit/30a017fecae60aa7b87c4a1e283b6ac027724a92", "comments_url": "https://api.github.com/repos/facebook/rocksdb/commits/30a017fecae60aa7b87c4a1e283b6ac027724a92/comments", "author": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "facebook-github-bot", "id": 6422482, "avatar_url": "https://avatars3.githubusercontent.com/u/6422482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook-github-bot", "html_url": "https://github.com/facebook-github-bot", "followers_url": "https://api.github.com/users/facebook-github-bot/followers", "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}", "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions", "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs", "repos_url": "https://api.github.com/users/facebook-github-bot/repos", "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e955fad09840397c4e010f0daa21be5a48873cd", "url": "https://api.github.com/repos/facebook/rocksdb/commits/3e955fad09840397c4e010f0daa21be5a48873cd", "html_url": "https://github.com/facebook/rocksdb/commit/3e955fad09840397c4e010f0daa21be5a48873cd"}]}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3378", "id": 163624311, "html_url": "https://github.com/facebook/rocksdb/pull/3378", "diff_url": "https://github.com/facebook/rocksdb/pull/3378.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3378.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3378", "number": 3378, "state": "open", "locked": false, "title": "Fix Flush() keep waiting after flush finish", "user": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "body": "Summary:\r\nFlush() call could be waiting indefinitely if min_write_buffer_number_to_merge is used. Consider the sequence:\r\n1. User call Flush() with flush_options.wait = true\r\n2. The manual flush started in the background\r\n3. New memtable become immutable because of writes. The new memtable will not trigger flush if min_write_buffer_number_to_merge is not reached.\r\n4. The manual flush finish.\r\n\r\nBecause of the new memtable created at step 3 not being flush, previous logic of WaitForFlushMemTable() keep waiting, despite the memtables it intent to flush has been flushed.\r\n\r\nHere instead of checking if there are any more memtables to flush, WaitForFlushMemTable() also check the sequence number of the earliest memtable. If the sequence is larger than the sequence number at the time flush was initiated, it means all the memtable at the time of flush start has all been flush.\r\n\r\nTest Plan:\r\nSee the new test. Without the fix the test will stuck at WaitForFlushMemTable() and never finishes.", "created_at": "2018-01-18T05:41:56Z", "updated_at": "2018-01-18T17:48:00Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "7578454bd0ae314340fd04bbb42e49ffb56a6de2", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3378/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3378/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3378/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/ea8a8cf7b8fb8103cf1eaa4cb912b09154470f91", "head": {"label": "yiwu-arbug:flush", "ref": "flush", "sha": "ea8a8cf7b8fb8103cf1eaa4cb912b09154470f91", "user": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "repo": {"id": 68760384, "name": "rocksdb", "full_name": "yiwu-arbug/rocksdb", "owner": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/yiwu-arbug/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/yiwu-arbug/rocksdb", "forks_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/forks", "keys_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/teams", "hooks_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/events", "assignees_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/tags", "blobs_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/subscription", "commits_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/merges", "archive_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/downloads", "issues_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/deployments", "created_at": "2016-09-20T23:06:58Z", "updated_at": "2016-09-20T23:07:03Z", "pushed_at": "2018-01-18T05:43:24Z", "git_url": "git://github.com/yiwu-arbug/rocksdb.git", "ssh_url": "git@github.com:yiwu-arbug/rocksdb.git", "clone_url": "https://github.com/yiwu-arbug/rocksdb.git", "svn_url": "https://github.com/yiwu-arbug/rocksdb", "homepage": "http://rocksdb.org", "size": 57500, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "46e599fc6b47e47c1a988189114085c2b13ab49e", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3378"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3378"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3378"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3378/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3378/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3378/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/ea8a8cf7b8fb8103cf1eaa4cb912b09154470f91"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3377", "id": 163616213, "html_url": "https://github.com/facebook/rocksdb/pull/3377", "diff_url": "https://github.com/facebook/rocksdb/pull/3377.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3377.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3377", "number": 3377, "state": "open", "locked": false, "title": "Fixed get version on windows, moved throwing exceptions into cc file.", "user": {"login": "topilski", "id": 4686379, "avatar_url": "https://avatars1.githubusercontent.com/u/4686379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topilski", "html_url": "https://github.com/topilski", "followers_url": "https://api.github.com/users/topilski/followers", "following_url": "https://api.github.com/users/topilski/following{/other_user}", "gists_url": "https://api.github.com/users/topilski/gists{/gist_id}", "starred_url": "https://api.github.com/users/topilski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topilski/subscriptions", "organizations_url": "https://api.github.com/users/topilski/orgs", "repos_url": "https://api.github.com/users/topilski/repos", "events_url": "https://api.github.com/users/topilski/events{/privacy}", "received_events_url": "https://api.github.com/users/topilski/received_events", "type": "User", "site_admin": false}, "body": "Fixes for msys2 and mingw, hide exceptions into cpp  file.", "created_at": "2018-01-18T04:16:36Z", "updated_at": "2018-01-18T18:10:49Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "d5065334565fc4afad0407a7506ac766e34339c5", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3377/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3377/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3377/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/6f3b1f7c75732cbb229c7773167cacaa3b728807", "head": {"label": "fastogt:hot_fixes", "ref": "hot_fixes", "sha": "6f3b1f7c75732cbb229c7773167cacaa3b728807", "user": {"login": "fastogt", "id": 6024327, "avatar_url": "https://avatars2.githubusercontent.com/u/6024327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fastogt", "html_url": "https://github.com/fastogt", "followers_url": "https://api.github.com/users/fastogt/followers", "following_url": "https://api.github.com/users/fastogt/following{/other_user}", "gists_url": "https://api.github.com/users/fastogt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fastogt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fastogt/subscriptions", "organizations_url": "https://api.github.com/users/fastogt/orgs", "repos_url": "https://api.github.com/users/fastogt/repos", "events_url": "https://api.github.com/users/fastogt/events{/privacy}", "received_events_url": "https://api.github.com/users/fastogt/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 117630546, "name": "rocksdb", "full_name": "fastogt/rocksdb", "owner": {"login": "fastogt", "id": 6024327, "avatar_url": "https://avatars2.githubusercontent.com/u/6024327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fastogt", "html_url": "https://github.com/fastogt", "followers_url": "https://api.github.com/users/fastogt/followers", "following_url": "https://api.github.com/users/fastogt/following{/other_user}", "gists_url": "https://api.github.com/users/fastogt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fastogt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fastogt/subscriptions", "organizations_url": "https://api.github.com/users/fastogt/orgs", "repos_url": "https://api.github.com/users/fastogt/repos", "events_url": "https://api.github.com/users/fastogt/events{/privacy}", "received_events_url": "https://api.github.com/users/fastogt/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/fastogt/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/fastogt/rocksdb", "forks_url": "https://api.github.com/repos/fastogt/rocksdb/forks", "keys_url": "https://api.github.com/repos/fastogt/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/fastogt/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/fastogt/rocksdb/teams", "hooks_url": "https://api.github.com/repos/fastogt/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/fastogt/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/fastogt/rocksdb/events", "assignees_url": "https://api.github.com/repos/fastogt/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/fastogt/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/fastogt/rocksdb/tags", "blobs_url": "https://api.github.com/repos/fastogt/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/fastogt/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/fastogt/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/fastogt/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/fastogt/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/fastogt/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/fastogt/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/fastogt/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/fastogt/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/fastogt/rocksdb/subscription", "commits_url": "https://api.github.com/repos/fastogt/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/fastogt/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/fastogt/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/fastogt/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/fastogt/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/fastogt/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/fastogt/rocksdb/merges", "archive_url": "https://api.github.com/repos/fastogt/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/fastogt/rocksdb/downloads", "issues_url": "https://api.github.com/repos/fastogt/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/fastogt/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/fastogt/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/fastogt/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/fastogt/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/fastogt/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/fastogt/rocksdb/deployments", "created_at": "2018-01-16T04:19:38Z", "updated_at": "2018-01-16T04:19:45Z", "pushed_at": "2018-01-18T04:15:09Z", "git_url": "git://github.com/fastogt/rocksdb.git", "ssh_url": "git@github.com:fastogt/rocksdb.git", "clone_url": "https://github.com/fastogt/rocksdb.git", "svn_url": "https://github.com/fastogt/rocksdb", "homepage": "http://rocksdb.org", "size": 110650, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "46e599fc6b47e47c1a988189114085c2b13ab49e", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3377"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3377"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3377"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3377/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3377/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3377/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/6f3b1f7c75732cbb229c7773167cacaa3b728807"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3369", "id": 163148955, "html_url": "https://github.com/facebook/rocksdb/pull/3369", "diff_url": "https://github.com/facebook/rocksdb/pull/3369.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3369.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3369", "number": 3369, "state": "open", "locked": false, "title": "JNI transactions  is working.", "user": {"login": "publicocean0", "id": 2518180, "avatar_url": "https://avatars1.githubusercontent.com/u/2518180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/publicocean0", "html_url": "https://github.com/publicocean0", "followers_url": "https://api.github.com/users/publicocean0/followers", "following_url": "https://api.github.com/users/publicocean0/following{/other_user}", "gists_url": "https://api.github.com/users/publicocean0/gists{/gist_id}", "starred_url": "https://api.github.com/users/publicocean0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/publicocean0/subscriptions", "organizations_url": "https://api.github.com/users/publicocean0/orgs", "repos_url": "https://api.github.com/users/publicocean0/repos", "events_url": "https://api.github.com/users/publicocean0/events{/privacy}", "received_events_url": "https://api.github.com/users/publicocean0/received_events", "type": "User", "site_admin": false}, "body": "hi, \r\nI merged and fixed compilation problems for extending transations in JNI starting from adamretter code. Actually it seams to work correctly ", "created_at": "2018-01-16T11:06:28Z", "updated_at": "2018-01-17T17:16:12Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "d6964c45e5b24817f94dbb6deae7feb958a7da47", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3369/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3369/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3369/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/8f1e628f001471fe4d462af16b2b7b3f4c6f97bc", "head": {"label": "publicocean0:master", "ref": "master", "sha": "8f1e628f001471fe4d462af16b2b7b3f4c6f97bc", "user": {"login": "publicocean0", "id": 2518180, "avatar_url": "https://avatars1.githubusercontent.com/u/2518180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/publicocean0", "html_url": "https://github.com/publicocean0", "followers_url": "https://api.github.com/users/publicocean0/followers", "following_url": "https://api.github.com/users/publicocean0/following{/other_user}", "gists_url": "https://api.github.com/users/publicocean0/gists{/gist_id}", "starred_url": "https://api.github.com/users/publicocean0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/publicocean0/subscriptions", "organizations_url": "https://api.github.com/users/publicocean0/orgs", "repos_url": "https://api.github.com/users/publicocean0/repos", "events_url": "https://api.github.com/users/publicocean0/events{/privacy}", "received_events_url": "https://api.github.com/users/publicocean0/received_events", "type": "User", "site_admin": false}, "repo": {"id": 117532035, "name": "rocksdb", "full_name": "publicocean0/rocksdb", "owner": {"login": "publicocean0", "id": 2518180, "avatar_url": "https://avatars1.githubusercontent.com/u/2518180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/publicocean0", "html_url": "https://github.com/publicocean0", "followers_url": "https://api.github.com/users/publicocean0/followers", "following_url": "https://api.github.com/users/publicocean0/following{/other_user}", "gists_url": "https://api.github.com/users/publicocean0/gists{/gist_id}", "starred_url": "https://api.github.com/users/publicocean0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/publicocean0/subscriptions", "organizations_url": "https://api.github.com/users/publicocean0/orgs", "repos_url": "https://api.github.com/users/publicocean0/repos", "events_url": "https://api.github.com/users/publicocean0/events{/privacy}", "received_events_url": "https://api.github.com/users/publicocean0/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/publicocean0/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/publicocean0/rocksdb", "forks_url": "https://api.github.com/repos/publicocean0/rocksdb/forks", "keys_url": "https://api.github.com/repos/publicocean0/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/publicocean0/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/publicocean0/rocksdb/teams", "hooks_url": "https://api.github.com/repos/publicocean0/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/publicocean0/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/publicocean0/rocksdb/events", "assignees_url": "https://api.github.com/repos/publicocean0/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/publicocean0/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/publicocean0/rocksdb/tags", "blobs_url": "https://api.github.com/repos/publicocean0/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/publicocean0/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/publicocean0/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/publicocean0/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/publicocean0/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/publicocean0/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/publicocean0/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/publicocean0/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/publicocean0/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/publicocean0/rocksdb/subscription", "commits_url": "https://api.github.com/repos/publicocean0/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/publicocean0/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/publicocean0/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/publicocean0/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/publicocean0/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/publicocean0/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/publicocean0/rocksdb/merges", "archive_url": "https://api.github.com/repos/publicocean0/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/publicocean0/rocksdb/downloads", "issues_url": "https://api.github.com/repos/publicocean0/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/publicocean0/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/publicocean0/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/publicocean0/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/publicocean0/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/publicocean0/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/publicocean0/rocksdb/deployments", "created_at": "2018-01-15T10:36:32Z", "updated_at": "2018-01-15T10:36:38Z", "pushed_at": "2018-01-15T16:21:45Z", "git_url": "git://github.com/publicocean0/rocksdb.git", "ssh_url": "git@github.com:publicocean0/rocksdb.git", "clone_url": "https://github.com/publicocean0/rocksdb.git", "svn_url": "https://github.com/publicocean0/rocksdb", "homepage": "http://rocksdb.org", "size": 110787, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "68829ed89cec64186557dc0860fc693c118ff1c6", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3369"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3369"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3369"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3369/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3369/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3369/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/8f1e628f001471fe4d462af16b2b7b3f4c6f97bc"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3360", "id": 162527326, "html_url": "https://github.com/facebook/rocksdb/pull/3360", "diff_url": "https://github.com/facebook/rocksdb/pull/3360.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3360.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3360", "number": 3360, "state": "open", "locked": false, "title": "Support skipping bloom filters for SstFileWriter", "user": {"login": "IslamAbdelRahman", "id": 1676006, "avatar_url": "https://avatars2.githubusercontent.com/u/1676006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IslamAbdelRahman", "html_url": "https://github.com/IslamAbdelRahman", "followers_url": "https://api.github.com/users/IslamAbdelRahman/followers", "following_url": "https://api.github.com/users/IslamAbdelRahman/following{/other_user}", "gists_url": "https://api.github.com/users/IslamAbdelRahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/IslamAbdelRahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IslamAbdelRahman/subscriptions", "organizations_url": "https://api.github.com/users/IslamAbdelRahman/orgs", "repos_url": "https://api.github.com/users/IslamAbdelRahman/repos", "events_url": "https://api.github.com/users/IslamAbdelRahman/events{/privacy}", "received_events_url": "https://api.github.com/users/IslamAbdelRahman/received_events", "type": "User", "site_admin": false}, "body": "Add an option for SstFileWriter to skip building bloom filters", "created_at": "2018-01-12T01:13:48Z", "updated_at": "2018-01-16T20:55:22Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "1dfbf60a10a0215fb05974eed1a1125d02871317", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3360/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3360/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3360/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/8efff7bad73b006eda2e96eb4f6e36b83865be16", "head": {"label": "IslamAbdelRahman:bloom_sst_file_writer", "ref": "bloom_sst_file_writer", "sha": "8efff7bad73b006eda2e96eb4f6e36b83865be16", "user": {"login": "IslamAbdelRahman", "id": 1676006, "avatar_url": "https://avatars2.githubusercontent.com/u/1676006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IslamAbdelRahman", "html_url": "https://github.com/IslamAbdelRahman", "followers_url": "https://api.github.com/users/IslamAbdelRahman/followers", "following_url": "https://api.github.com/users/IslamAbdelRahman/following{/other_user}", "gists_url": "https://api.github.com/users/IslamAbdelRahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/IslamAbdelRahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IslamAbdelRahman/subscriptions", "organizations_url": "https://api.github.com/users/IslamAbdelRahman/orgs", "repos_url": "https://api.github.com/users/IslamAbdelRahman/repos", "events_url": "https://api.github.com/users/IslamAbdelRahman/events{/privacy}", "received_events_url": "https://api.github.com/users/IslamAbdelRahman/received_events", "type": "User", "site_admin": false}, "repo": {"id": 69213682, "name": "rocksdb", "full_name": "IslamAbdelRahman/rocksdb", "owner": {"login": "IslamAbdelRahman", "id": 1676006, "avatar_url": "https://avatars2.githubusercontent.com/u/1676006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IslamAbdelRahman", "html_url": "https://github.com/IslamAbdelRahman", "followers_url": "https://api.github.com/users/IslamAbdelRahman/followers", "following_url": "https://api.github.com/users/IslamAbdelRahman/following{/other_user}", "gists_url": "https://api.github.com/users/IslamAbdelRahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/IslamAbdelRahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IslamAbdelRahman/subscriptions", "organizations_url": "https://api.github.com/users/IslamAbdelRahman/orgs", "repos_url": "https://api.github.com/users/IslamAbdelRahman/repos", "events_url": "https://api.github.com/users/IslamAbdelRahman/events{/privacy}", "received_events_url": "https://api.github.com/users/IslamAbdelRahman/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/IslamAbdelRahman/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb", "forks_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/forks", "keys_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/teams", "hooks_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/events", "assignees_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/tags", "blobs_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/subscription", "commits_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/merges", "archive_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/downloads", "issues_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/IslamAbdelRahman/rocksdb/deployments", "created_at": "2016-09-26T04:46:23Z", "updated_at": "2016-09-26T04:46:28Z", "pushed_at": "2018-01-13T00:00:16Z", "git_url": "git://github.com/IslamAbdelRahman/rocksdb.git", "ssh_url": "git@github.com:IslamAbdelRahman/rocksdb.git", "clone_url": "https://github.com/IslamAbdelRahman/rocksdb.git", "svn_url": "https://github.com/IslamAbdelRahman/rocksdb", "homepage": "http://rocksdb.org", "size": 57220, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "9c2f64e1488d577746686189d4d127dcf3a7f6e0", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3360"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3360"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3360"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3360/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3360/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3360/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/8efff7bad73b006eda2e96eb4f6e36b83865be16"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3340", "id": 161762351, "html_url": "https://github.com/facebook/rocksdb/pull/3340", "diff_url": "https://github.com/facebook/rocksdb/pull/3340.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3340.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3340", "number": 3340, "state": "open", "locked": false, "title": "Preload some files even if options.max_open_files", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "body": "Summary:\r\nChoose to preload some files if options.max_open_files != -1. This can slightly narrow the gap of performance between options.max_open_files is -1 and a large number. To avoid a significant regression to DB reopen speed if options.max_open_files != -1. Limit the files to preload in DB open time to 16.\r\n\r\nTest Plan: Run all existing tests.", "created_at": "2018-01-09T00:54:53Z", "updated_at": "2018-01-09T21:25:35Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "17ab633e63e5be1972b4777ef8e66c25e1dfaa75", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "maysamyabandeh", "id": 1167741, "avatar_url": "https://avatars2.githubusercontent.com/u/1167741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maysamyabandeh", "html_url": "https://github.com/maysamyabandeh", "followers_url": "https://api.github.com/users/maysamyabandeh/followers", "following_url": "https://api.github.com/users/maysamyabandeh/following{/other_user}", "gists_url": "https://api.github.com/users/maysamyabandeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maysamyabandeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maysamyabandeh/subscriptions", "organizations_url": "https://api.github.com/users/maysamyabandeh/orgs", "repos_url": "https://api.github.com/users/maysamyabandeh/repos", "events_url": "https://api.github.com/users/maysamyabandeh/events{/privacy}", "received_events_url": "https://api.github.com/users/maysamyabandeh/received_events", "type": "User", "site_admin": false}, {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3340/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3340/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3340/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/39fb1668e07bda7ac23b7dc5718794c2258a738b", "head": {"label": "siying:max_open", "ref": "max_open", "sha": "39fb1668e07bda7ac23b7dc5718794c2258a738b", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "repo": {"id": 48715206, "name": "rocksdb", "full_name": "siying/rocksdb", "owner": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/siying/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/siying/rocksdb", "forks_url": "https://api.github.com/repos/siying/rocksdb/forks", "keys_url": "https://api.github.com/repos/siying/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/siying/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/siying/rocksdb/teams", "hooks_url": "https://api.github.com/repos/siying/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/siying/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/siying/rocksdb/events", "assignees_url": "https://api.github.com/repos/siying/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/siying/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/siying/rocksdb/tags", "blobs_url": "https://api.github.com/repos/siying/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/siying/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/siying/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/siying/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/siying/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/siying/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/siying/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/siying/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/siying/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/siying/rocksdb/subscription", "commits_url": "https://api.github.com/repos/siying/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/siying/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/siying/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/siying/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/siying/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/siying/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/siying/rocksdb/merges", "archive_url": "https://api.github.com/repos/siying/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/siying/rocksdb/downloads", "issues_url": "https://api.github.com/repos/siying/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/siying/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/siying/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/siying/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/siying/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/siying/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/siying/rocksdb/deployments", "created_at": "2015-12-28T22:25:13Z", "updated_at": "2017-12-28T10:13:15Z", "pushed_at": "2018-01-09T22:08:58Z", "git_url": "git://github.com/siying/rocksdb.git", "ssh_url": "git@github.com:siying/rocksdb.git", "clone_url": "https://github.com/siying/rocksdb.git", "svn_url": "https://github.com/siying/rocksdb", "homepage": "http://rocksdb.org", "size": 97202, "stargazers_count": 1, "watchers_count": 1, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "398d72fa614b809cc4df153092e0665b57b170d2", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3340"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3340"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3340"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3340/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3340/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3340/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/39fb1668e07bda7ac23b7dc5718794c2258a738b"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3339", "id": 161677759, "html_url": "https://github.com/facebook/rocksdb/pull/3339", "diff_url": "https://github.com/facebook/rocksdb/pull/3339.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3339.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3339", "number": 3339, "state": "open", "locked": false, "title": "crc32: suppress -Wimplicit-fallthrough warnings", "user": {"login": "quark-zju", "id": 445459, "avatar_url": "https://avatars0.githubusercontent.com/u/445459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quark-zju", "html_url": "https://github.com/quark-zju", "followers_url": "https://api.github.com/users/quark-zju/followers", "following_url": "https://api.github.com/users/quark-zju/following{/other_user}", "gists_url": "https://api.github.com/users/quark-zju/gists{/gist_id}", "starred_url": "https://api.github.com/users/quark-zju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quark-zju/subscriptions", "organizations_url": "https://api.github.com/users/quark-zju/orgs", "repos_url": "https://api.github.com/users/quark-zju/repos", "events_url": "https://api.github.com/users/quark-zju/events{/privacy}", "received_events_url": "https://api.github.com/users/quark-zju/received_events", "type": "User", "site_admin": false}, "body": "Workaround a bunch of \"implicit-fallthrough\" compiler errors, like:\r\n\r\n```\r\nutil/crc32c.cc:533:7: error: this statement may fall through [-Werror=implicit-fallthrough=]\r\n   crc = _mm_crc32_u64(crc, *(uint64_t*)(buf + offset));\r\n       ^\r\nutil/crc32c.cc:1016:9: note: in expansion of macro \u2018CRCsinglet\u2019\r\n         CRCsinglet(crc0, next, -2 * 8);\r\n         ^~~~~~~~~~\r\nutil/crc32c.cc:1017:7: note: here\r\n       case 1:\r\n```\r\n\r\nTest Plan:\r\nBuild rocksdb using gcc 7.2.0 on Arch Linux with success.", "created_at": "2018-01-08T17:06:26Z", "updated_at": "2018-01-16T18:49:31Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "827007bc1daa6196534c0299857a70fae7e88f58", "assignee": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3339/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3339/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3339/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/ee42f4ac3de7e9a7a5cd915a6fcc484a25a11ac1", "head": {"label": "quark-zju:master", "ref": "master", "sha": "ee42f4ac3de7e9a7a5cd915a6fcc484a25a11ac1", "user": {"login": "quark-zju", "id": 445459, "avatar_url": "https://avatars0.githubusercontent.com/u/445459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quark-zju", "html_url": "https://github.com/quark-zju", "followers_url": "https://api.github.com/users/quark-zju/followers", "following_url": "https://api.github.com/users/quark-zju/following{/other_user}", "gists_url": "https://api.github.com/users/quark-zju/gists{/gist_id}", "starred_url": "https://api.github.com/users/quark-zju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quark-zju/subscriptions", "organizations_url": "https://api.github.com/users/quark-zju/orgs", "repos_url": "https://api.github.com/users/quark-zju/repos", "events_url": "https://api.github.com/users/quark-zju/events{/privacy}", "received_events_url": "https://api.github.com/users/quark-zju/received_events", "type": "User", "site_admin": false}, "repo": {"id": 116704325, "name": "rocksdb", "full_name": "quark-zju/rocksdb", "owner": {"login": "quark-zju", "id": 445459, "avatar_url": "https://avatars0.githubusercontent.com/u/445459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quark-zju", "html_url": "https://github.com/quark-zju", "followers_url": "https://api.github.com/users/quark-zju/followers", "following_url": "https://api.github.com/users/quark-zju/following{/other_user}", "gists_url": "https://api.github.com/users/quark-zju/gists{/gist_id}", "starred_url": "https://api.github.com/users/quark-zju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quark-zju/subscriptions", "organizations_url": "https://api.github.com/users/quark-zju/orgs", "repos_url": "https://api.github.com/users/quark-zju/repos", "events_url": "https://api.github.com/users/quark-zju/events{/privacy}", "received_events_url": "https://api.github.com/users/quark-zju/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/quark-zju/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/quark-zju/rocksdb", "forks_url": "https://api.github.com/repos/quark-zju/rocksdb/forks", "keys_url": "https://api.github.com/repos/quark-zju/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/quark-zju/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/quark-zju/rocksdb/teams", "hooks_url": "https://api.github.com/repos/quark-zju/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/quark-zju/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/quark-zju/rocksdb/events", "assignees_url": "https://api.github.com/repos/quark-zju/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/quark-zju/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/quark-zju/rocksdb/tags", "blobs_url": "https://api.github.com/repos/quark-zju/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/quark-zju/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/quark-zju/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/quark-zju/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/quark-zju/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/quark-zju/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/quark-zju/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/quark-zju/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/quark-zju/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/quark-zju/rocksdb/subscription", "commits_url": "https://api.github.com/repos/quark-zju/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/quark-zju/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/quark-zju/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/quark-zju/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/quark-zju/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/quark-zju/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/quark-zju/rocksdb/merges", "archive_url": "https://api.github.com/repos/quark-zju/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/quark-zju/rocksdb/downloads", "issues_url": "https://api.github.com/repos/quark-zju/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/quark-zju/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/quark-zju/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/quark-zju/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/quark-zju/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/quark-zju/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/quark-zju/rocksdb/deployments", "created_at": "2018-01-08T17:02:34Z", "updated_at": "2018-01-08T17:02:40Z", "pushed_at": "2018-01-08T17:06:01Z", "git_url": "git://github.com/quark-zju/rocksdb.git", "ssh_url": "git@github.com:quark-zju/rocksdb.git", "clone_url": "https://github.com/quark-zju/rocksdb.git", "svn_url": "https://github.com/quark-zju/rocksdb", "homepage": "http://rocksdb.org", "size": 110469, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3339"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3339"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3339"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3339/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3339/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3339/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/ee42f4ac3de7e9a7a5cd915a6fcc484a25a11ac1"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3338", "id": 161661301, "html_url": "https://github.com/facebook/rocksdb/pull/3338", "diff_url": "https://github.com/facebook/rocksdb/pull/3338.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3338.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3338", "number": 3338, "state": "open", "locked": false, "title": "Callback bridge for Java-based CompactionFilter", "user": {"login": "benclay", "id": 7607858, "avatar_url": "https://avatars3.githubusercontent.com/u/7607858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benclay", "html_url": "https://github.com/benclay", "followers_url": "https://api.github.com/users/benclay/followers", "following_url": "https://api.github.com/users/benclay/following{/other_user}", "gists_url": "https://api.github.com/users/benclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/benclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benclay/subscriptions", "organizations_url": "https://api.github.com/users/benclay/orgs", "repos_url": "https://api.github.com/users/benclay/repos", "events_url": "https://api.github.com/users/benclay/events{/privacy}", "received_events_url": "https://api.github.com/users/benclay/received_events", "type": "User", "site_admin": false}, "body": "Similar to `AbstractCompactionFilterFactory` and `AbstractComparator`, this diff contains an abstract base class for `rocksdb::CompactionFilter` written in Java. It uses a similar set of techniques to cache relevant field / method IDs at startup, passes scalars back into Java and relies on threadlocals to avoid `DirectSlice` finalize churn.\r\n\r\nUsing this implementation we've been able to run a Java compaction filter under Manhattan production workloads with a ~10% performance reduction.  It's not free but is good enough for some usecases.\r\n\r\nThere are a few unresolved issues with this implementation that I wanted to discuss with the community. They're marked with `TODO(benclay)` below.\r\n\r\n- Detaching compaction threads after every callback is extremely expensive. On our OpenJDK8 JVM the `DetachCurrentThread` call internally serializes on a mutex while releasing monitors, causing compactions and thus writes to eventually stall.  As a result, in this diff **we are not detaching at all**.  However, I am concerned about upstreaming this as-is this because folks might explicitly take locks in their CompactionFilter implementations and need those monitors to be automatically released.  I am looking for feedback from the community on this problem.  There are a few solutions from Rocks side I can think of, but am open to more ideas:\r\n  - Add a lifecycle hook (perhaps to CompactionFilterFactory?) when the compaction thread is shutting down. At that point we can detach the thread from the JVM.  This still risks the thread crashing and never detaching though.\r\n  - Implement a batching interface to CompactionFilter so we aren't making so many roundtrips and the detach cost is amortized.  This would help performance more generally but is probably more invasive - I haven't looked into the implications on Rocks side.\r\n  - Detach every Nth call - this seems very racy and doesn't guarantee that the thread detaches on the final call, so it seems like a non-starter.\r\n- I couldn't take advantage of @adamretter 's `RocksCallbackObject` regime because Java disallows multiple inheritance and I needed to inherit from `AbstractCompactionFilter`.  Right now that class and its C++ companion `JniCallback` are fairly basic, but over time could export some useful performance enhancements.  I thought about shimming a new `ICompactionFilter` interface **below** `AbstractCompactionFilter` and have that be the primary unit for interacting with `ColumnFamilyOptions`. Upon further examination that will somewhat break the tradition of having abstract base classes with package-private `nativeHandle_` member variables, which is how `ColumnFamilyOptions` is binding the `CompactionFilter` handle on the C++ side.  Open to suggestions here as well.\r\n\r\n@sagar0 @adamretter \r\n \r\nEDIT: There is a test issue that I'm still chasing down.", "created_at": "2018-01-08T15:57:14Z", "updated_at": "2018-01-11T20:46:28Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "2a7b6b2fb807c8a763977b73bb35dc43dce866eb", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3338/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3338/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3338/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/ded34d44de26b0acd36176e13a82a41275165357", "head": {"label": "benclay:benclay/java_compaction_filter", "ref": "benclay/java_compaction_filter", "sha": "ded34d44de26b0acd36176e13a82a41275165357", "user": {"login": "benclay", "id": 7607858, "avatar_url": "https://avatars3.githubusercontent.com/u/7607858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benclay", "html_url": "https://github.com/benclay", "followers_url": "https://api.github.com/users/benclay/followers", "following_url": "https://api.github.com/users/benclay/following{/other_user}", "gists_url": "https://api.github.com/users/benclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/benclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benclay/subscriptions", "organizations_url": "https://api.github.com/users/benclay/orgs", "repos_url": "https://api.github.com/users/benclay/repos", "events_url": "https://api.github.com/users/benclay/events{/privacy}", "received_events_url": "https://api.github.com/users/benclay/received_events", "type": "User", "site_admin": false}, "repo": {"id": 102871716, "name": "rocksdb", "full_name": "benclay/rocksdb", "owner": {"login": "benclay", "id": 7607858, "avatar_url": "https://avatars3.githubusercontent.com/u/7607858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benclay", "html_url": "https://github.com/benclay", "followers_url": "https://api.github.com/users/benclay/followers", "following_url": "https://api.github.com/users/benclay/following{/other_user}", "gists_url": "https://api.github.com/users/benclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/benclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benclay/subscriptions", "organizations_url": "https://api.github.com/users/benclay/orgs", "repos_url": "https://api.github.com/users/benclay/repos", "events_url": "https://api.github.com/users/benclay/events{/privacy}", "received_events_url": "https://api.github.com/users/benclay/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/benclay/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/benclay/rocksdb", "forks_url": "https://api.github.com/repos/benclay/rocksdb/forks", "keys_url": "https://api.github.com/repos/benclay/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/benclay/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/benclay/rocksdb/teams", "hooks_url": "https://api.github.com/repos/benclay/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/benclay/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/benclay/rocksdb/events", "assignees_url": "https://api.github.com/repos/benclay/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/benclay/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/benclay/rocksdb/tags", "blobs_url": "https://api.github.com/repos/benclay/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/benclay/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/benclay/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/benclay/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/benclay/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/benclay/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/benclay/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/benclay/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/benclay/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/benclay/rocksdb/subscription", "commits_url": "https://api.github.com/repos/benclay/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/benclay/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/benclay/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/benclay/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/benclay/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/benclay/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/benclay/rocksdb/merges", "archive_url": "https://api.github.com/repos/benclay/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/benclay/rocksdb/downloads", "issues_url": "https://api.github.com/repos/benclay/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/benclay/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/benclay/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/benclay/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/benclay/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/benclay/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/benclay/rocksdb/deployments", "created_at": "2017-09-08T14:44:25Z", "updated_at": "2017-09-08T14:44:33Z", "pushed_at": "2018-01-08T15:24:00Z", "git_url": "git://github.com/benclay/rocksdb.git", "ssh_url": "git@github.com:benclay/rocksdb.git", "clone_url": "https://github.com/benclay/rocksdb.git", "svn_url": "https://github.com/benclay/rocksdb", "homepage": "http://rocksdb.org", "size": 109896, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3338"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3338"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3338"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3338/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3338/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3338/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/ded34d44de26b0acd36176e13a82a41275165357"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3337", "id": 161575750, "html_url": "https://github.com/facebook/rocksdb/pull/3337", "diff_url": "https://github.com/facebook/rocksdb/pull/3337.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3337.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3337", "number": 3337, "state": "open", "locked": false, "title": "Support StringAppendOperator(delimiter_char) constructor in java-api", "user": {"login": "javeme", "id": 9625821, "avatar_url": "https://avatars3.githubusercontent.com/u/9625821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javeme", "html_url": "https://github.com/javeme", "followers_url": "https://api.github.com/users/javeme/followers", "following_url": "https://api.github.com/users/javeme/following{/other_user}", "gists_url": "https://api.github.com/users/javeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/javeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javeme/subscriptions", "organizations_url": "https://api.github.com/users/javeme/orgs", "repos_url": "https://api.github.com/users/javeme/repos", "events_url": "https://api.github.com/users/javeme/events{/privacy}", "received_events_url": "https://api.github.com/users/javeme/received_events", "type": "User", "site_admin": false}, "body": "Fixes #3336", "created_at": "2018-01-08T08:01:17Z", "updated_at": "2018-01-08T08:01:43Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "2de56e35ef93ad135d475aae4e68ee77487c6d89", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3337/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3337/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3337/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/5dd990518026ae7920999fd2a5a620fef6dd2573", "head": {"label": "javeme:str-append-delim", "ref": "str-append-delim", "sha": "5dd990518026ae7920999fd2a5a620fef6dd2573", "user": {"login": "javeme", "id": 9625821, "avatar_url": "https://avatars3.githubusercontent.com/u/9625821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javeme", "html_url": "https://github.com/javeme", "followers_url": "https://api.github.com/users/javeme/followers", "following_url": "https://api.github.com/users/javeme/following{/other_user}", "gists_url": "https://api.github.com/users/javeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/javeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javeme/subscriptions", "organizations_url": "https://api.github.com/users/javeme/orgs", "repos_url": "https://api.github.com/users/javeme/repos", "events_url": "https://api.github.com/users/javeme/events{/privacy}", "received_events_url": "https://api.github.com/users/javeme/received_events", "type": "User", "site_admin": false}, "repo": {"id": 116646827, "name": "rocksdb", "full_name": "javeme/rocksdb", "owner": {"login": "javeme", "id": 9625821, "avatar_url": "https://avatars3.githubusercontent.com/u/9625821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javeme", "html_url": "https://github.com/javeme", "followers_url": "https://api.github.com/users/javeme/followers", "following_url": "https://api.github.com/users/javeme/following{/other_user}", "gists_url": "https://api.github.com/users/javeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/javeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javeme/subscriptions", "organizations_url": "https://api.github.com/users/javeme/orgs", "repos_url": "https://api.github.com/users/javeme/repos", "events_url": "https://api.github.com/users/javeme/events{/privacy}", "received_events_url": "https://api.github.com/users/javeme/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/javeme/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/javeme/rocksdb", "forks_url": "https://api.github.com/repos/javeme/rocksdb/forks", "keys_url": "https://api.github.com/repos/javeme/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/javeme/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/javeme/rocksdb/teams", "hooks_url": "https://api.github.com/repos/javeme/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/javeme/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/javeme/rocksdb/events", "assignees_url": "https://api.github.com/repos/javeme/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/javeme/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/javeme/rocksdb/tags", "blobs_url": "https://api.github.com/repos/javeme/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/javeme/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/javeme/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/javeme/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/javeme/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/javeme/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/javeme/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/javeme/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/javeme/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/javeme/rocksdb/subscription", "commits_url": "https://api.github.com/repos/javeme/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/javeme/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/javeme/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/javeme/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/javeme/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/javeme/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/javeme/rocksdb/merges", "archive_url": "https://api.github.com/repos/javeme/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/javeme/rocksdb/downloads", "issues_url": "https://api.github.com/repos/javeme/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/javeme/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/javeme/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/javeme/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/javeme/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/javeme/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/javeme/rocksdb/deployments", "created_at": "2018-01-08T07:56:02Z", "updated_at": "2018-01-08T07:56:08Z", "pushed_at": "2018-01-08T08:00:31Z", "git_url": "git://github.com/javeme/rocksdb.git", "ssh_url": "git@github.com:javeme/rocksdb.git", "clone_url": "https://github.com/javeme/rocksdb.git", "svn_url": "https://github.com/javeme/rocksdb", "homepage": "http://rocksdb.org", "size": 110469, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3337"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3337"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3337"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3337/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3337/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3337/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/5dd990518026ae7920999fd2a5a620fef6dd2573"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3334", "id": 161472184, "html_url": "https://github.com/facebook/rocksdb/pull/3334", "diff_url": "https://github.com/facebook/rocksdb/pull/3334.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3334.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3334", "number": 3334, "state": "open", "locked": false, "title": "Java wrapper for Native Comparators", "user": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "body": "This is an abstraction for working with custom Comparators implemented in native C++ code from Java. Native code must directly extend `rocksdb::Comparator`. When the native code comparator is compiled into the RocksDB codebase, you can then create a Java Class, and JNI stub to wrap it.\r\n\r\nUseful if the C++/JNI barrier overhead is too much for your applications comparator performance.\r\n\r\nAn example is provided in `java/rocksjni/native_comparator_wrapper_test.cc` and `java/src/main/java/org/rocksdb/NativeComparatorWrapperTest.java`.\r\n  \r\n  ", "created_at": "2018-01-06T08:44:35Z", "updated_at": "2018-01-08T15:54:54Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "69fc6f90b69ff17e470cc932a3b35311dc5b55e8", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3334/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3334/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3334/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/a141862c12402f6cfe869063b75aa1505332fca2", "head": {"label": "adamretter:java-wrapper-native-comparator", "ref": "java-wrapper-native-comparator", "sha": "a141862c12402f6cfe869063b75aa1505332fca2", "user": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "repo": {"id": 22577794, "name": "rocksdb", "full_name": "adamretter/rocksdb", "owner": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/adamretter/rocksdb", "description": "Embedded key-value store for fast storage", "fork": true, "url": "https://api.github.com/repos/adamretter/rocksdb", "forks_url": "https://api.github.com/repos/adamretter/rocksdb/forks", "keys_url": "https://api.github.com/repos/adamretter/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/adamretter/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/adamretter/rocksdb/teams", "hooks_url": "https://api.github.com/repos/adamretter/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/adamretter/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/adamretter/rocksdb/events", "assignees_url": "https://api.github.com/repos/adamretter/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/adamretter/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/adamretter/rocksdb/tags", "blobs_url": "https://api.github.com/repos/adamretter/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/adamretter/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/adamretter/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/adamretter/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/adamretter/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/adamretter/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/adamretter/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/adamretter/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/adamretter/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/adamretter/rocksdb/subscription", "commits_url": "https://api.github.com/repos/adamretter/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/adamretter/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/adamretter/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/adamretter/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/adamretter/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/adamretter/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/adamretter/rocksdb/merges", "archive_url": "https://api.github.com/repos/adamretter/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/adamretter/rocksdb/downloads", "issues_url": "https://api.github.com/repos/adamretter/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/adamretter/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/adamretter/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/adamretter/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/adamretter/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/adamretter/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/adamretter/rocksdb/deployments", "created_at": "2014-08-03T15:38:02Z", "updated_at": "2016-01-15T11:32:54Z", "pushed_at": "2018-01-11T22:03:58Z", "git_url": "git://github.com/adamretter/rocksdb.git", "ssh_url": "git@github.com:adamretter/rocksdb.git", "clone_url": "https://github.com/adamretter/rocksdb.git", "svn_url": "https://github.com/adamretter/rocksdb", "homepage": "http://rocksdb.org", "size": 66521, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3334"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3334"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3334"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3334/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3334/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3334/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/a141862c12402f6cfe869063b75aa1505332fca2"}}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3333", "id": 161449992, "html_url": "https://github.com/facebook/rocksdb/pull/3333", "diff_url": "https://github.com/facebook/rocksdb/pull/3333.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3333.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3333", "number": 3333, "state": "open", "locked": false, "title": "Use block cache to track memory usage when ReadOptions.fill_cache=false", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "body": "ReadOptions.fill_cache is set in compaction inputs and can be set by users in their queries too. It tells RocksDB not to put a data block used to block cache.\r\n\r\nThe memory used by the data block is, however, not trackable by users.\r\n\r\nTo make the system more manageable, we can cost the block to block cache while using it, and then release it after using.\r\n", "created_at": "2018-01-05T23:40:16Z", "updated_at": "2018-01-17T20:10:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "ff9f58de9cfd6096666840a8c9cc075651b9acfb", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3333/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3333/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3333/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/93d9428da6fcdba3201cea259b5aeaeceb956fe1", "head": {"label": "miasantreble:track-memory-fill-cache", "ref": "track-memory-fill-cache", "sha": "93d9428da6fcdba3201cea259b5aeaeceb956fe1", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103351953, "name": "rocksdb", "full_name": "miasantreble/rocksdb", "owner": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/miasantreble/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/miasantreble/rocksdb", "forks_url": "https://api.github.com/repos/miasantreble/rocksdb/forks", "keys_url": "https://api.github.com/repos/miasantreble/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/miasantreble/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/miasantreble/rocksdb/teams", "hooks_url": "https://api.github.com/repos/miasantreble/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/miasantreble/rocksdb/events", "assignees_url": "https://api.github.com/repos/miasantreble/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/miasantreble/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/miasantreble/rocksdb/tags", "blobs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/miasantreble/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/miasantreble/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/miasantreble/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/miasantreble/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/miasantreble/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/miasantreble/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/miasantreble/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/miasantreble/rocksdb/subscription", "commits_url": "https://api.github.com/repos/miasantreble/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/miasantreble/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/miasantreble/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/miasantreble/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/miasantreble/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/miasantreble/rocksdb/merges", "archive_url": "https://api.github.com/repos/miasantreble/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/miasantreble/rocksdb/downloads", "issues_url": "https://api.github.com/repos/miasantreble/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/miasantreble/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/miasantreble/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/miasantreble/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/miasantreble/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/miasantreble/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/miasantreble/rocksdb/deployments", "created_at": "2017-09-13T04:08:50Z", "updated_at": "2017-09-13T04:08:56Z", "pushed_at": "2018-01-17T20:01:20Z", "git_url": "git://github.com/miasantreble/rocksdb.git", "ssh_url": "git@github.com:miasantreble/rocksdb.git", "clone_url": "https://github.com/miasantreble/rocksdb.git", "svn_url": "https://github.com/miasantreble/rocksdb", "homepage": "http://rocksdb.org", "size": 110294, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "30a017fecae60aa7b87c4a1e283b6ac027724a92", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3333"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3333"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3333"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3333/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3333/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3333/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/93d9428da6fcdba3201cea259b5aeaeceb956fe1"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3325", "id": 161031756, "html_url": "https://github.com/facebook/rocksdb/pull/3325", "diff_url": "https://github.com/facebook/rocksdb/pull/3325.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3325.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3325", "number": 3325, "state": "open", "locked": false, "title": "Demonstrate async IO with coroutines", "user": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "body": "  with async/coroutine_random_access_test.cc windows only test.\r\n  RandomAccessFileReader::RequestRead() is a clone of Read() for test purposes.\r\n  demonstrates minimal would be changes to Read() with the insertion of 3 keywords\r\n  and keeping the source code intact.\r\n  Some scaffolding is required but it is all on the side and does not affect the code flow.\r\n  The downside that we would need to keep track that all functions on the way\r\n  down to I/O become coroutines and make use of co_await and co_return if they returning\r\n  anything (usually status). A separate AppVeyor build would be enough to make sure we are OK.\r\n  Use VS 2017 to build. It might work on 2015, I have not tried yet.\r\n  Use -DWITH_COROUTINES=1 to enable coroutines.\r\n  The output on my box is:\r\n  [==========] Running 2 tests from 1 test case.\r\n  [----------] Global test environment set-up.\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0\r\n  Thread ID before co_await: 240 after co_await: 27328\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 2600 after co_await: 27328\r\n  Thread ID before co_await: 17928 after co_await: 9420\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 28480 after co_await: 30912\r\n  Thread ID before co_await: 25000 after co_await: 15280\r\n  Thread ID before co_await: 14312 after co_await: 21532\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 19940 after co_await: 14912\r\n  Thread ID before co_await: 7188 after co_await: 9420\r\n  Thread ID before co_await: 360 after co_await: 7012\r\n  Thread ID before co_await: 28892 after co_await: 27328\r\n  Thread ID before co_await: 14744 after co_await: 26552\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 13904 after co_await: 12556\r\n  Thread ID before co_await: 15712 after co_await: 28904\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0 (235 ms)\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1\r\n  Thread ID before co_await: 240 after co_await: 13428\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 26040 after co_await: 13428\r\n  Thread ID before co_await: 10276 after co_await: 14276\r\n  Read:7935 bytes, status: OK\r\n  Read:Thread ID before co_await: 7396Thread ID before co_await: 20800 after co_await: 18884\r\n  Thread ID before co_await: 20684 after co_await: 26680\r\n  Thread ID before co_await: 16728 after co_await: 18724\r\n  Thread ID before co_await: 27968 after co_await: 7148\r\n  after co_await: 13428\r\n  Thread ID before co_await: 27496 after co_await: 22984\r\n  Read:Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 21056 after co_await: 2012\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 29944 after co_await: 2896\r\n  7935Read:7935 bytes, status: OK\r\n  bytes, status: OK\r\n  Thread ID before co_await: 10464 after co_await: 31984\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 15656 after co_await: 22984\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1 (230 ms)\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest (467 ms total)\r\n\r\n  [----------] Global test environment tear-down\r\n  [==========] 2 tests from 1 test case ran. (468 ms total)\r\n  [  PASSED  ] 2 tests.", "created_at": "2018-01-04T00:44:24Z", "updated_at": "2018-01-16T11:43:04Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "8c9122f537ed356507564602588aa6a3e51dcc7b", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3325/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3325/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3325/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/2943fecfd74abff452f7561c1b18bb5ed09df342", "head": {"label": "yuslepukhin:co_routines_port", "ref": "co_routines_port", "sha": "2943fecfd74abff452f7561c1b18bb5ed09df342", "user": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "repo": {"id": 44776420, "name": "rocksdb", "full_name": "yuslepukhin/rocksdb", "owner": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/yuslepukhin/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/yuslepukhin/rocksdb", "forks_url": "https://api.github.com/repos/yuslepukhin/rocksdb/forks", "keys_url": "https://api.github.com/repos/yuslepukhin/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/yuslepukhin/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/yuslepukhin/rocksdb/teams", "hooks_url": "https://api.github.com/repos/yuslepukhin/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/yuslepukhin/rocksdb/events", "assignees_url": "https://api.github.com/repos/yuslepukhin/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/yuslepukhin/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/yuslepukhin/rocksdb/tags", "blobs_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/yuslepukhin/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/yuslepukhin/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/yuslepukhin/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/yuslepukhin/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/yuslepukhin/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/yuslepukhin/rocksdb/subscription", "commits_url": "https://api.github.com/repos/yuslepukhin/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/yuslepukhin/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/yuslepukhin/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/yuslepukhin/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/yuslepukhin/rocksdb/merges", "archive_url": "https://api.github.com/repos/yuslepukhin/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/yuslepukhin/rocksdb/downloads", "issues_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/yuslepukhin/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/yuslepukhin/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/yuslepukhin/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/yuslepukhin/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/yuslepukhin/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/yuslepukhin/rocksdb/deployments", "created_at": "2015-10-22T22:16:34Z", "updated_at": "2017-11-22T12:32:48Z", "pushed_at": "2018-01-11T18:26:53Z", "git_url": "git://github.com/yuslepukhin/rocksdb.git", "ssh_url": "git@github.com:yuslepukhin/rocksdb.git", "clone_url": "https://github.com/yuslepukhin/rocksdb.git", "svn_url": "https://github.com/yuslepukhin/rocksdb", "homepage": "http://rocksdb.org", "size": 72669, "stargazers_count": 1, "watchers_count": 1, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "ea8ccd2267db7f565bb9718d17f48f2339883248", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3325"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3325"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3325"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3325/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3325/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3325/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/2943fecfd74abff452f7561c1b18bb5ed09df342"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3304", "id": 159888003, "html_url": "https://github.com/facebook/rocksdb/pull/3304", "diff_url": "https://github.com/facebook/rocksdb/pull/3304.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3304.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3304", "number": 3304, "state": "open", "locked": false, "title": "expose WAL iterator in the C API", "user": {"login": "gritzko", "id": 81581, "avatar_url": "https://avatars2.githubusercontent.com/u/81581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gritzko", "html_url": "https://github.com/gritzko", "followers_url": "https://api.github.com/users/gritzko/followers", "following_url": "https://api.github.com/users/gritzko/following{/other_user}", "gists_url": "https://api.github.com/users/gritzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gritzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gritzko/subscriptions", "organizations_url": "https://api.github.com/users/gritzko/orgs", "repos_url": "https://api.github.com/users/gritzko/repos", "events_url": "https://api.github.com/users/gritzko/events{/privacy}", "received_events_url": "https://api.github.com/users/gritzko/received_events", "type": "User", "site_admin": false}, "body": "A minor change: I wrapped TransactionLogIterator for the C API.\r\nI needed that for the golang binding.", "created_at": "2017-12-22T15:32:19Z", "updated_at": "2017-12-26T19:53:32Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "1c866b594f33321d9e9f9b976ca16494e6bae0c4", "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3304/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3304/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3304/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/621ca287da28b31139cbc47f73709dec8f1a5624", "head": {"label": "gritzko:master", "ref": "master", "sha": "621ca287da28b31139cbc47f73709dec8f1a5624", "user": {"login": "gritzko", "id": 81581, "avatar_url": "https://avatars2.githubusercontent.com/u/81581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gritzko", "html_url": "https://github.com/gritzko", "followers_url": "https://api.github.com/users/gritzko/followers", "following_url": "https://api.github.com/users/gritzko/following{/other_user}", "gists_url": "https://api.github.com/users/gritzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gritzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gritzko/subscriptions", "organizations_url": "https://api.github.com/users/gritzko/orgs", "repos_url": "https://api.github.com/users/gritzko/repos", "events_url": "https://api.github.com/users/gritzko/events{/privacy}", "received_events_url": "https://api.github.com/users/gritzko/received_events", "type": "User", "site_admin": false}, "repo": {"id": 115125291, "name": "rocksdb", "full_name": "gritzko/rocksdb", "owner": {"login": "gritzko", "id": 81581, "avatar_url": "https://avatars2.githubusercontent.com/u/81581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gritzko", "html_url": "https://github.com/gritzko", "followers_url": "https://api.github.com/users/gritzko/followers", "following_url": "https://api.github.com/users/gritzko/following{/other_user}", "gists_url": "https://api.github.com/users/gritzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gritzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gritzko/subscriptions", "organizations_url": "https://api.github.com/users/gritzko/orgs", "repos_url": "https://api.github.com/users/gritzko/repos", "events_url": "https://api.github.com/users/gritzko/events{/privacy}", "received_events_url": "https://api.github.com/users/gritzko/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/gritzko/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/gritzko/rocksdb", "forks_url": "https://api.github.com/repos/gritzko/rocksdb/forks", "keys_url": "https://api.github.com/repos/gritzko/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/gritzko/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/gritzko/rocksdb/teams", "hooks_url": "https://api.github.com/repos/gritzko/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/gritzko/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/gritzko/rocksdb/events", "assignees_url": "https://api.github.com/repos/gritzko/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/gritzko/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/gritzko/rocksdb/tags", "blobs_url": "https://api.github.com/repos/gritzko/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/gritzko/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/gritzko/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/gritzko/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/gritzko/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/gritzko/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/gritzko/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/gritzko/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/gritzko/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/gritzko/rocksdb/subscription", "commits_url": "https://api.github.com/repos/gritzko/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/gritzko/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/gritzko/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/gritzko/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/gritzko/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/gritzko/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/gritzko/rocksdb/merges", "archive_url": "https://api.github.com/repos/gritzko/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/gritzko/rocksdb/downloads", "issues_url": "https://api.github.com/repos/gritzko/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/gritzko/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/gritzko/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/gritzko/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/gritzko/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/gritzko/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/gritzko/rocksdb/deployments", "created_at": "2017-12-22T15:02:32Z", "updated_at": "2017-12-22T15:02:39Z", "pushed_at": "2017-12-22T15:43:01Z", "git_url": "git://github.com/gritzko/rocksdb.git", "ssh_url": "git@github.com:gritzko/rocksdb.git", "clone_url": "https://github.com/gritzko/rocksdb.git", "svn_url": "https://github.com/gritzko/rocksdb", "homepage": "http://rocksdb.org", "size": 110554, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 1, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "b5c99cc908a7e34fa65d588b2706c33000786935", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3304"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3304"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3304"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3304/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3304/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3304/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/621ca287da28b31139cbc47f73709dec8f1a5624"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3292", "id": 159164026, "html_url": "https://github.com/facebook/rocksdb/pull/3292", "diff_url": "https://github.com/facebook/rocksdb/pull/3292.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3292.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3292", "number": 3292, "state": "open", "locked": false, "title": "Add possibility to change ttl on open DB", "user": {"login": "falkevik", "id": 169777, "avatar_url": "https://avatars2.githubusercontent.com/u/169777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falkevik", "html_url": "https://github.com/falkevik", "followers_url": "https://api.github.com/users/falkevik/followers", "following_url": "https://api.github.com/users/falkevik/following{/other_user}", "gists_url": "https://api.github.com/users/falkevik/gists{/gist_id}", "starred_url": "https://api.github.com/users/falkevik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falkevik/subscriptions", "organizations_url": "https://api.github.com/users/falkevik/orgs", "repos_url": "https://api.github.com/users/falkevik/repos", "events_url": "https://api.github.com/users/falkevik/events{/privacy}", "received_events_url": "https://api.github.com/users/falkevik/received_events", "type": "User", "site_admin": false}, "body": "We have seen cases where it could be good to change TTL on already open DB.\r\nChange ttl in TtlCompactionFilterFactory on open db.\r\nNext time a filter is created, it will filter accroding to the set TTL.\r\n\r\nIs this something that could be useful for others?\r\nAny downsides?", "created_at": "2017-12-19T13:16:55Z", "updated_at": "2018-01-17T18:17:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9ed3402bc8de65d96cb1dbccd594f10225076f71", "assignee": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3292/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3292/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3292/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/26ba353f9f1b2f2994904d544d3dd2b30261d548", "head": {"label": "falkevik:change_ttl_on_open_db", "ref": "change_ttl_on_open_db", "sha": "26ba353f9f1b2f2994904d544d3dd2b30261d548", "user": {"login": "falkevik", "id": 169777, "avatar_url": "https://avatars2.githubusercontent.com/u/169777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falkevik", "html_url": "https://github.com/falkevik", "followers_url": "https://api.github.com/users/falkevik/followers", "following_url": "https://api.github.com/users/falkevik/following{/other_user}", "gists_url": "https://api.github.com/users/falkevik/gists{/gist_id}", "starred_url": "https://api.github.com/users/falkevik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falkevik/subscriptions", "organizations_url": "https://api.github.com/users/falkevik/orgs", "repos_url": "https://api.github.com/users/falkevik/repos", "events_url": "https://api.github.com/users/falkevik/events{/privacy}", "received_events_url": "https://api.github.com/users/falkevik/received_events", "type": "User", "site_admin": false}, "repo": {"id": 114741414, "name": "rocksdb", "full_name": "falkevik/rocksdb", "owner": {"login": "falkevik", "id": 169777, "avatar_url": "https://avatars2.githubusercontent.com/u/169777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falkevik", "html_url": "https://github.com/falkevik", "followers_url": "https://api.github.com/users/falkevik/followers", "following_url": "https://api.github.com/users/falkevik/following{/other_user}", "gists_url": "https://api.github.com/users/falkevik/gists{/gist_id}", "starred_url": "https://api.github.com/users/falkevik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falkevik/subscriptions", "organizations_url": "https://api.github.com/users/falkevik/orgs", "repos_url": "https://api.github.com/users/falkevik/repos", "events_url": "https://api.github.com/users/falkevik/events{/privacy}", "received_events_url": "https://api.github.com/users/falkevik/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/falkevik/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/falkevik/rocksdb", "forks_url": "https://api.github.com/repos/falkevik/rocksdb/forks", "keys_url": "https://api.github.com/repos/falkevik/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/falkevik/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/falkevik/rocksdb/teams", "hooks_url": "https://api.github.com/repos/falkevik/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/falkevik/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/falkevik/rocksdb/events", "assignees_url": "https://api.github.com/repos/falkevik/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/falkevik/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/falkevik/rocksdb/tags", "blobs_url": "https://api.github.com/repos/falkevik/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/falkevik/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/falkevik/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/falkevik/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/falkevik/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/falkevik/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/falkevik/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/falkevik/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/falkevik/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/falkevik/rocksdb/subscription", "commits_url": "https://api.github.com/repos/falkevik/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/falkevik/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/falkevik/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/falkevik/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/falkevik/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/falkevik/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/falkevik/rocksdb/merges", "archive_url": "https://api.github.com/repos/falkevik/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/falkevik/rocksdb/downloads", "issues_url": "https://api.github.com/repos/falkevik/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/falkevik/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/falkevik/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/falkevik/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/falkevik/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/falkevik/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/falkevik/rocksdb/deployments", "created_at": "2017-12-19T08:50:15Z", "updated_at": "2017-12-19T08:50:21Z", "pushed_at": "2018-01-17T07:16:19Z", "git_url": "git://github.com/falkevik/rocksdb.git", "ssh_url": "git@github.com:falkevik/rocksdb.git", "clone_url": "https://github.com/falkevik/rocksdb.git", "svn_url": "https://github.com/falkevik/rocksdb", "homepage": "http://rocksdb.org", "size": 110722, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "266d85fbec80b129dbb6be28e75fe383a429b778", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3292"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3292"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3292"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3292/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3292/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3292/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/26ba353f9f1b2f2994904d544d3dd2b30261d548"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3282", "id": 158724790, "html_url": "https://github.com/facebook/rocksdb/pull/3282", "diff_url": "https://github.com/facebook/rocksdb/pull/3282.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3282.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3282", "number": 3282, "state": "open", "locked": false, "title": "Improve performance of long range scans with readahead", "user": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "body": "This change improves the performance of iterators doing long range scans (e.g. big/full table scans in MyRocks) by using readahead and prefetching additional data on each disk IO. This prefetching is automatically enabled on noticing more than 2 IOs for the same table file during iteration. The readahead size starts with 8KB and is exponentially increased on each additional sequential IO, up to a max of 16 MB. This helps in cutting down the number of IOs needed to complete the range scan. \r\n\r\nThe prefetched data is stored by the OS in page cache. So this currently works only for non direct-reads use-cases i.e applications which use page cache. \r\n\r\nThanks to @siying for the original idea and implementation.\r\n\r\n**Benchmarks:**\r\nData fill:\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=fillrandom -num=1000000000 -compression_type=\"none\" -level_compaction_dynamic_level_bytes\r\n```\r\nDo a long range scan: Seekrandom with large number of nexts\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=seekrandom -duration=60 -num=1000000000 -use_existing_db -seek_nexts=10000 -statistics -histogram\r\n```\r\n\r\nPage cache was cleared before each experiment with the command:\r\n```\r\nsudo sh -c \"echo 3 > /proc/sys/vm/drop_caches\"\r\n```\r\n```\r\nBefore:\r\nseekrandom   :   34020.945 micros/op 29 ops/sec;   32.5 MB/s (1636 of 1999 found)\r\nWith this change:\r\nseekrandom   :    9611.361 micros/op 104 ops/sec;  115.1 MB/s (5702 of 6999 found)\r\n```\r\n~3.5X performance improvement.\r\n\r\nAlso verified with strace and gdb that the readahead size is increasing as expected. \r\n```\r\nstrace -e readahead -f -T -t -p <db_bench process pid>\r\n```", "created_at": "2017-12-16T01:51:36Z", "updated_at": "2018-01-17T21:02:22Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "50d08ca143a501bccc194774bcbb393a80bbc644", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3282/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3282/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3282/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/69851a04172d523c630f7968bad4ae06a7480bb4", "head": {"label": "sagar0:readahead", "ref": "readahead", "sha": "69851a04172d523c630f7968bad4ae06a7480bb4", "user": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "repo": {"id": 81277831, "name": "rocksdb", "full_name": "sagar0/rocksdb", "owner": {"login": "sagar0", "id": 1087535, "avatar_url": "https://avatars3.githubusercontent.com/u/1087535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagar0", "html_url": "https://github.com/sagar0", "followers_url": "https://api.github.com/users/sagar0/followers", "following_url": "https://api.github.com/users/sagar0/following{/other_user}", "gists_url": "https://api.github.com/users/sagar0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagar0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagar0/subscriptions", "organizations_url": "https://api.github.com/users/sagar0/orgs", "repos_url": "https://api.github.com/users/sagar0/repos", "events_url": "https://api.github.com/users/sagar0/events{/privacy}", "received_events_url": "https://api.github.com/users/sagar0/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/sagar0/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/sagar0/rocksdb", "forks_url": "https://api.github.com/repos/sagar0/rocksdb/forks", "keys_url": "https://api.github.com/repos/sagar0/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/sagar0/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/sagar0/rocksdb/teams", "hooks_url": "https://api.github.com/repos/sagar0/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/sagar0/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/sagar0/rocksdb/events", "assignees_url": "https://api.github.com/repos/sagar0/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/sagar0/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/sagar0/rocksdb/tags", "blobs_url": "https://api.github.com/repos/sagar0/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/sagar0/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/sagar0/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/sagar0/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/sagar0/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/sagar0/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/sagar0/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/sagar0/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/sagar0/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/sagar0/rocksdb/subscription", "commits_url": "https://api.github.com/repos/sagar0/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/sagar0/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/sagar0/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/sagar0/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/sagar0/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/sagar0/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/sagar0/rocksdb/merges", "archive_url": "https://api.github.com/repos/sagar0/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/sagar0/rocksdb/downloads", "issues_url": "https://api.github.com/repos/sagar0/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/sagar0/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/sagar0/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/sagar0/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/sagar0/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/sagar0/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/sagar0/rocksdb/deployments", "created_at": "2017-02-08T02:22:18Z", "updated_at": "2017-02-08T02:22:23Z", "pushed_at": "2018-01-16T21:31:54Z", "git_url": "git://github.com/sagar0/rocksdb.git", "ssh_url": "git@github.com:sagar0/rocksdb.git", "clone_url": "https://github.com/sagar0/rocksdb.git", "svn_url": "https://github.com/sagar0/rocksdb", "homepage": "http://rocksdb.org", "size": 108743, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "95583e1532118b070cfcc548b09007f2368d5eb1", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3282"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3282"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3282"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3282/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3282/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3282/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/69851a04172d523c630f7968bad4ae06a7480bb4"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3275", "id": 158501283, "html_url": "https://github.com/facebook/rocksdb/pull/3275", "diff_url": "https://github.com/facebook/rocksdb/pull/3275.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3275.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3275", "number": 3275, "state": "open", "locked": false, "title": "fix for checkpoint directory with trailing slash(es)", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "body": "previously if `checkpoint_dir` contained a trailing slash, we'd attempt to create the `.tmp` directory under `checkpoint_dir` due to simply concatenating `checkpoint_dir + \".tmp\"`. This failed because `checkpoint_dir` hadn't been created yet and our directory creation is non-recursive. This PR fixes the issue by always creating the `.tmp` directory in the same parent as `checkpoint_dir` by stripping trailing slashes before concatenating.\r\n\r\nTest Plan:\r\n\r\ncommand: `./ldb checkpoint --db=/data/compaction_bench/dbbench/ --checkpoint_dir=/data/compaction_bench/dbbench_checkpoint/`\r\n\r\noutput before this PR: `Failed: IO error: While mkdir: /data/compaction_bench/dbbench_checkpoint6/.tmp: No such file or directory`\r\n\r\noutput after this PR: `OK`", "created_at": "2017-12-15T01:04:48Z", "updated_at": "2017-12-20T23:41:45Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "9fefd2511e718772cfa697019c04614c0f532111", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, {"login": "anand1976", "id": 33647610, "avatar_url": "https://avatars0.githubusercontent.com/u/33647610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anand1976", "html_url": "https://github.com/anand1976", "followers_url": "https://api.github.com/users/anand1976/followers", "following_url": "https://api.github.com/users/anand1976/following{/other_user}", "gists_url": "https://api.github.com/users/anand1976/gists{/gist_id}", "starred_url": "https://api.github.com/users/anand1976/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anand1976/subscriptions", "organizations_url": "https://api.github.com/users/anand1976/orgs", "repos_url": "https://api.github.com/users/anand1976/repos", "events_url": "https://api.github.com/users/anand1976/events{/privacy}", "received_events_url": "https://api.github.com/users/anand1976/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3275/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3275/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3275/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/babf77f2bbe264503979b506c4b7abcb91227e1b", "head": {"label": "ajkr:fix-checkpoint-trailing-slash", "ref": "fix-checkpoint-trailing-slash", "sha": "babf77f2bbe264503979b506c4b7abcb91227e1b", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "repo": {"id": 69681666, "name": "rocksdb", "full_name": "ajkr/rocksdb", "owner": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/ajkr/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/ajkr/rocksdb", "forks_url": "https://api.github.com/repos/ajkr/rocksdb/forks", "keys_url": "https://api.github.com/repos/ajkr/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ajkr/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ajkr/rocksdb/teams", "hooks_url": "https://api.github.com/repos/ajkr/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/ajkr/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/ajkr/rocksdb/events", "assignees_url": "https://api.github.com/repos/ajkr/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/ajkr/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/ajkr/rocksdb/tags", "blobs_url": "https://api.github.com/repos/ajkr/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ajkr/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ajkr/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ajkr/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ajkr/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/ajkr/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/ajkr/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/ajkr/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/ajkr/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/ajkr/rocksdb/subscription", "commits_url": "https://api.github.com/repos/ajkr/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ajkr/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ajkr/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ajkr/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ajkr/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/ajkr/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ajkr/rocksdb/merges", "archive_url": "https://api.github.com/repos/ajkr/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ajkr/rocksdb/downloads", "issues_url": "https://api.github.com/repos/ajkr/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/ajkr/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/ajkr/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/ajkr/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ajkr/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/ajkr/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/ajkr/rocksdb/deployments", "created_at": "2016-09-30T16:09:32Z", "updated_at": "2016-09-30T16:09:37Z", "pushed_at": "2018-01-17T23:51:29Z", "git_url": "git://github.com/ajkr/rocksdb.git", "ssh_url": "git@github.com:ajkr/rocksdb.git", "clone_url": "https://github.com/ajkr/rocksdb.git", "svn_url": "https://github.com/ajkr/rocksdb", "homepage": "http://rocksdb.org", "size": 133896, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "5a7e08468ad2f03b957e255aefdfa81b95a6810a", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3275"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3275"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3275"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3275/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3275/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3275/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/babf77f2bbe264503979b506c4b7abcb91227e1b"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3272", "id": 158431506, "html_url": "https://github.com/facebook/rocksdb/pull/3272", "diff_url": "https://github.com/facebook/rocksdb/pull/3272.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3272.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3272", "number": 3272, "state": "open", "locked": false, "title": "[WIP] Skip obsolete files during recovery", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "body": "Right now during crash recovery Rocksdb replays all logs found in order of log number and relies on `recovering_log_number_` to ignore duplicate replays. This PR simplifies the process by first collecting the smallest log number(`min_log_num`) among all column families from the manifest, and skipping all obsolete WAL logs whose log number is strictly smaller than `min_log_num`.\r\n\r\nThis change might cause some regression in txn related tests and will be updated soon.", "created_at": "2017-12-14T18:34:33Z", "updated_at": "2017-12-14T22:59:56Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "594b87cbf8ef28333f213afd472578223f133ba8", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3272/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3272/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3272/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/11ab8b1bb2b38811ee81e399fdd1ec58e582dd1f", "head": {"label": "miasantreble:track-log-num-in-manifest", "ref": "track-log-num-in-manifest", "sha": "11ab8b1bb2b38811ee81e399fdd1ec58e582dd1f", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103351953, "name": "rocksdb", "full_name": "miasantreble/rocksdb", "owner": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/miasantreble/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/miasantreble/rocksdb", "forks_url": "https://api.github.com/repos/miasantreble/rocksdb/forks", "keys_url": "https://api.github.com/repos/miasantreble/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/miasantreble/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/miasantreble/rocksdb/teams", "hooks_url": "https://api.github.com/repos/miasantreble/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/miasantreble/rocksdb/events", "assignees_url": "https://api.github.com/repos/miasantreble/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/miasantreble/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/miasantreble/rocksdb/tags", "blobs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/miasantreble/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/miasantreble/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/miasantreble/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/miasantreble/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/miasantreble/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/miasantreble/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/miasantreble/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/miasantreble/rocksdb/subscription", "commits_url": "https://api.github.com/repos/miasantreble/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/miasantreble/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/miasantreble/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/miasantreble/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/miasantreble/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/miasantreble/rocksdb/merges", "archive_url": "https://api.github.com/repos/miasantreble/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/miasantreble/rocksdb/downloads", "issues_url": "https://api.github.com/repos/miasantreble/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/miasantreble/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/miasantreble/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/miasantreble/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/miasantreble/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/miasantreble/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/miasantreble/rocksdb/deployments", "created_at": "2017-09-13T04:08:50Z", "updated_at": "2017-09-13T04:08:56Z", "pushed_at": "2018-01-17T20:01:20Z", "git_url": "git://github.com/miasantreble/rocksdb.git", "ssh_url": "git@github.com:miasantreble/rocksdb.git", "clone_url": "https://github.com/miasantreble/rocksdb.git", "svn_url": "https://github.com/miasantreble/rocksdb", "homepage": "http://rocksdb.org", "size": 110294, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "def6a00740fc4d15ca4e3e7cae003d4d2b8b8a98", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3272"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3272"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3272"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3272/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3272/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3272/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/11ab8b1bb2b38811ee81e399fdd1ec58e582dd1f"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3143", "id": 151295758, "html_url": "https://github.com/facebook/rocksdb/pull/3143", "diff_url": "https://github.com/facebook/rocksdb/pull/3143.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3143.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3143", "number": 3143, "state": "open", "locked": false, "title": "Add shared library for musl-libc", "user": {"login": "double16", "id": 5640233, "avatar_url": "https://avatars1.githubusercontent.com/u/5640233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/double16", "html_url": "https://github.com/double16", "followers_url": "https://api.github.com/users/double16/followers", "following_url": "https://api.github.com/users/double16/following{/other_user}", "gists_url": "https://api.github.com/users/double16/gists{/gist_id}", "starred_url": "https://api.github.com/users/double16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/double16/subscriptions", "organizations_url": "https://api.github.com/users/double16/orgs", "repos_url": "https://api.github.com/users/double16/repos", "events_url": "https://api.github.com/users/double16/events{/privacy}", "received_events_url": "https://api.github.com/users/double16/received_events", "type": "User", "site_admin": false}, "body": "Add the jni library for musl-libc, specifically for incorporating into Alpine based docker images. The classifier is `musl64`.\r\n\r\nI have signed the CLA electronically.", "created_at": "2017-11-08T05:20:10Z", "updated_at": "2017-11-10T03:30:24Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "7a89b672b05b1148e6441ab7c52c1f2004be5fd0", "assignee": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3143/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3143/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3143/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/3466adaba1ee8b847fa99e2319f4e43a2a1e1cce", "head": {"label": "double16:jni-alpine", "ref": "jni-alpine", "sha": "3466adaba1ee8b847fa99e2319f4e43a2a1e1cce", "user": {"login": "double16", "id": 5640233, "avatar_url": "https://avatars1.githubusercontent.com/u/5640233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/double16", "html_url": "https://github.com/double16", "followers_url": "https://api.github.com/users/double16/followers", "following_url": "https://api.github.com/users/double16/following{/other_user}", "gists_url": "https://api.github.com/users/double16/gists{/gist_id}", "starred_url": "https://api.github.com/users/double16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/double16/subscriptions", "organizations_url": "https://api.github.com/users/double16/orgs", "repos_url": "https://api.github.com/users/double16/repos", "events_url": "https://api.github.com/users/double16/events{/privacy}", "received_events_url": "https://api.github.com/users/double16/received_events", "type": "User", "site_admin": false}, "repo": {"id": 109697300, "name": "rocksdb", "full_name": "double16/rocksdb", "owner": {"login": "double16", "id": 5640233, "avatar_url": "https://avatars1.githubusercontent.com/u/5640233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/double16", "html_url": "https://github.com/double16", "followers_url": "https://api.github.com/users/double16/followers", "following_url": "https://api.github.com/users/double16/following{/other_user}", "gists_url": "https://api.github.com/users/double16/gists{/gist_id}", "starred_url": "https://api.github.com/users/double16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/double16/subscriptions", "organizations_url": "https://api.github.com/users/double16/orgs", "repos_url": "https://api.github.com/users/double16/repos", "events_url": "https://api.github.com/users/double16/events{/privacy}", "received_events_url": "https://api.github.com/users/double16/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/double16/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/double16/rocksdb", "forks_url": "https://api.github.com/repos/double16/rocksdb/forks", "keys_url": "https://api.github.com/repos/double16/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/double16/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/double16/rocksdb/teams", "hooks_url": "https://api.github.com/repos/double16/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/double16/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/double16/rocksdb/events", "assignees_url": "https://api.github.com/repos/double16/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/double16/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/double16/rocksdb/tags", "blobs_url": "https://api.github.com/repos/double16/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/double16/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/double16/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/double16/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/double16/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/double16/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/double16/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/double16/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/double16/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/double16/rocksdb/subscription", "commits_url": "https://api.github.com/repos/double16/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/double16/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/double16/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/double16/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/double16/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/double16/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/double16/rocksdb/merges", "archive_url": "https://api.github.com/repos/double16/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/double16/rocksdb/downloads", "issues_url": "https://api.github.com/repos/double16/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/double16/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/double16/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/double16/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/double16/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/double16/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/double16/rocksdb/deployments", "created_at": "2017-11-06T13:14:16Z", "updated_at": "2017-11-06T13:14:30Z", "pushed_at": "2017-11-10T03:30:18Z", "git_url": "git://github.com/double16/rocksdb.git", "ssh_url": "git@github.com:double16/rocksdb.git", "clone_url": "https://github.com/double16/rocksdb.git", "svn_url": "https://github.com/double16/rocksdb", "homepage": "http://rocksdb.org", "size": 108781, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "4f9f1243475b729f7da63388aaa002aedc1d9559", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3143"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3143"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3143"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3143/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3143/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3143/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/3466adaba1ee8b847fa99e2319f4e43a2a1e1cce"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3139", "id": 151029396, "html_url": "https://github.com/facebook/rocksdb/pull/3139", "diff_url": "https://github.com/facebook/rocksdb/pull/3139.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3139.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3139", "number": 3139, "state": "open", "locked": false, "title": "expose SstFileReader", "user": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-11-07T05:44:29Z", "updated_at": "2017-12-13T02:46:25Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "4010e6617e7c483260949440ae396ae093815bec", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3139/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3139/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3139/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/45983497927d74e1a5dd7d94ce4b44677469232d", "head": {"label": "zhangjinpeng1987:zhangjinpeng/sst-reader", "ref": "zhangjinpeng/sst-reader", "sha": "45983497927d74e1a5dd7d94ce4b44677469232d", "user": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "repo": {"id": 67785573, "name": "rocksdb", "full_name": "zhangjinpeng1987/rocksdb", "owner": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/zhangjinpeng1987/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb", "forks_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/forks", "keys_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/teams", "hooks_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/events", "assignees_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/tags", "blobs_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/subscription", "commits_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/merges", "archive_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/downloads", "issues_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/deployments", "created_at": "2016-09-09T09:24:52Z", "updated_at": "2016-09-09T09:24:57Z", "pushed_at": "2017-12-24T02:42:08Z", "git_url": "git://github.com/zhangjinpeng1987/rocksdb.git", "ssh_url": "git@github.com:zhangjinpeng1987/rocksdb.git", "clone_url": "https://github.com/zhangjinpeng1987/rocksdb.git", "svn_url": "https://github.com/zhangjinpeng1987/rocksdb", "homepage": "http://rocksdb.org", "size": 133116, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "7393ef779c2d430d93fabb8c82e0c375f24bc46e", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3139"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3139"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3139"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3139/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3139/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3139/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/45983497927d74e1a5dd7d94ce4b44677469232d"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3106", "id": 150023584, "html_url": "https://github.com/facebook/rocksdb/pull/3106", "diff_url": "https://github.com/facebook/rocksdb/pull/3106.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3106.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3106", "number": 3106, "state": "open", "locked": false, "title": "options: Fix coverity issues", "user": {"login": "pdvian", "id": 2360405, "avatar_url": "https://avatars0.githubusercontent.com/u/2360405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdvian", "html_url": "https://github.com/pdvian", "followers_url": "https://api.github.com/users/pdvian/followers", "following_url": "https://api.github.com/users/pdvian/following{/other_user}", "gists_url": "https://api.github.com/users/pdvian/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdvian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdvian/subscriptions", "organizations_url": "https://api.github.com/users/pdvian/orgs", "repos_url": "https://api.github.com/users/pdvian/repos", "events_url": "https://api.github.com/users/pdvian/events{/privacy}", "received_events_url": "https://api.github.com/users/pdvian/received_events", "type": "User", "site_admin": false}, "body": "Summary:\r\noptions/cf_options.cc:\r\n 77      memtable_insert_with_hint_prefix_extractor(\r\n\r\nCID 1396208 (#1 of 1): Uninitialized scalar field (UNINIT_CTOR)\r\n2. uninit_member: Non-static class member info_log_level is not initialized in this constructor nor in any functions that it calls.\r\n 78          cf_options.memtable_insert_with_hint_prefix_extractor.get()) {}\r\n\r\ninclude/rocksdb/advanced_options.h:\r\n\r\nAdvancedColumnFamilyOptions::AdvancedColumnFamilyOptions() {\r\n 40  assert(memtable_factory.get() != nullptr);\r\n\r\nCID 1405359 (#1 of 1): Uninitialized scalar field (UNINIT_CTOR)\r\n2. uninit_member: Non-static class member max_mem_compaction_level is not initialized in this constructor nor in any functions that it calls.\r\n 41}\r\n\r\nAs max_mem_compaction_level is not supported anymore, undefine it.", "created_at": "2017-11-01T12:08:09Z", "updated_at": "2017-12-12T06:31:00Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "a4f40511f2e20bf91736dd202927dc6589639f71", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3106/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3106/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3106/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/37f163c5f13f40fedca33648085a91bac1527b3d", "head": {"label": "pdvian:wip-fix-coverity-issues-1396208", "ref": "wip-fix-coverity-issues-1396208", "sha": "37f163c5f13f40fedca33648085a91bac1527b3d", "user": {"login": "pdvian", "id": 2360405, "avatar_url": "https://avatars0.githubusercontent.com/u/2360405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdvian", "html_url": "https://github.com/pdvian", "followers_url": "https://api.github.com/users/pdvian/followers", "following_url": "https://api.github.com/users/pdvian/following{/other_user}", "gists_url": "https://api.github.com/users/pdvian/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdvian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdvian/subscriptions", "organizations_url": "https://api.github.com/users/pdvian/orgs", "repos_url": "https://api.github.com/users/pdvian/repos", "events_url": "https://api.github.com/users/pdvian/events{/privacy}", "received_events_url": "https://api.github.com/users/pdvian/received_events", "type": "User", "site_admin": false}, "repo": {"id": 108256493, "name": "rocksdb", "full_name": "pdvian/rocksdb", "owner": {"login": "pdvian", "id": 2360405, "avatar_url": "https://avatars0.githubusercontent.com/u/2360405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdvian", "html_url": "https://github.com/pdvian", "followers_url": "https://api.github.com/users/pdvian/followers", "following_url": "https://api.github.com/users/pdvian/following{/other_user}", "gists_url": "https://api.github.com/users/pdvian/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdvian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdvian/subscriptions", "organizations_url": "https://api.github.com/users/pdvian/orgs", "repos_url": "https://api.github.com/users/pdvian/repos", "events_url": "https://api.github.com/users/pdvian/events{/privacy}", "received_events_url": "https://api.github.com/users/pdvian/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/pdvian/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/pdvian/rocksdb", "forks_url": "https://api.github.com/repos/pdvian/rocksdb/forks", "keys_url": "https://api.github.com/repos/pdvian/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pdvian/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pdvian/rocksdb/teams", "hooks_url": "https://api.github.com/repos/pdvian/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/pdvian/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/pdvian/rocksdb/events", "assignees_url": "https://api.github.com/repos/pdvian/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/pdvian/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/pdvian/rocksdb/tags", "blobs_url": "https://api.github.com/repos/pdvian/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pdvian/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pdvian/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pdvian/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pdvian/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/pdvian/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/pdvian/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/pdvian/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/pdvian/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/pdvian/rocksdb/subscription", "commits_url": "https://api.github.com/repos/pdvian/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pdvian/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pdvian/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pdvian/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pdvian/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/pdvian/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pdvian/rocksdb/merges", "archive_url": "https://api.github.com/repos/pdvian/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pdvian/rocksdb/downloads", "issues_url": "https://api.github.com/repos/pdvian/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/pdvian/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/pdvian/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/pdvian/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pdvian/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/pdvian/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/pdvian/rocksdb/deployments", "created_at": "2017-10-25T10:43:06Z", "updated_at": "2017-10-25T10:43:13Z", "pushed_at": "2017-12-12T06:27:53Z", "git_url": "git://github.com/pdvian/rocksdb.git", "ssh_url": "git@github.com:pdvian/rocksdb.git", "clone_url": "https://github.com/pdvian/rocksdb.git", "svn_url": "https://github.com/pdvian/rocksdb", "homepage": "http://rocksdb.org", "size": 109370, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "a9c8d4ef15ed22196260ecf6326a5d3b5a5cbbe8", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3106"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3106"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3106"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3106/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3106/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3106/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/37f163c5f13f40fedca33648085a91bac1527b3d"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3102", "id": 149880453, "html_url": "https://github.com/facebook/rocksdb/pull/3102", "diff_url": "https://github.com/facebook/rocksdb/pull/3102.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3102.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3102", "number": 3102, "state": "open", "locked": false, "title": "Support for Column family specific paths.", "user": {"login": "PhaniShekhar", "id": 30535191, "avatar_url": "https://avatars1.githubusercontent.com/u/30535191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhaniShekhar", "html_url": "https://github.com/PhaniShekhar", "followers_url": "https://api.github.com/users/PhaniShekhar/followers", "following_url": "https://api.github.com/users/PhaniShekhar/following{/other_user}", "gists_url": "https://api.github.com/users/PhaniShekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhaniShekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhaniShekhar/subscriptions", "organizations_url": "https://api.github.com/users/PhaniShekhar/orgs", "repos_url": "https://api.github.com/users/PhaniShekhar/repos", "events_url": "https://api.github.com/users/PhaniShekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/PhaniShekhar/received_events", "type": "User", "site_admin": false}, "body": "In this change, an option to set different paths for different column families is added.\r\nThis option is set via cf_paths setting of ColumnFamilyOptions. This option will work in a similar fashion to db_paths setting. Cf_paths is a vector of Dbpath values which contains a pair of the absolute path and target size. Multiple levels in a Column family can go to different paths if cf_paths has more than one path. \r\nTo maintain backward compatibility, if cf_paths is not specified for a column family, db_paths setting will be used. Note that, if db_paths setting is also not specified, RocksDB already has code to use db_name as the only path. \r\n\r\nChanges : \r\n1) A new member \"cf_paths\" is added to ImmutableCfOptions. This is set, based on cf_paths setting of ColumnFamilyOptions and db_paths setting of ImmutableDbOptions.  This member is used to identify the path information whenever files are accessed. \r\n2) Validation checks are added for cf_paths setting based on existing checks for db_paths setting.\r\n3) DestroyDB, PurgeObsoleteFiles etc. are edited to support multiple cf_paths.\r\n4) Unit tests are added appropriately.", "created_at": "2017-10-31T19:02:12Z", "updated_at": "2018-01-12T02:40:12Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "fc5ebc898eed1379423cdc045b9f7e3142b89767", "assignee": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3102/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3102/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3102/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/d276010a18c41d796c5c4a82ddefbfed6a65d899", "head": {"label": "PhaniShekhar:PerColumnFamilyPath", "ref": "PerColumnFamilyPath", "sha": "d276010a18c41d796c5c4a82ddefbfed6a65d899", "user": {"login": "PhaniShekhar", "id": 30535191, "avatar_url": "https://avatars1.githubusercontent.com/u/30535191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhaniShekhar", "html_url": "https://github.com/PhaniShekhar", "followers_url": "https://api.github.com/users/PhaniShekhar/followers", "following_url": "https://api.github.com/users/PhaniShekhar/following{/other_user}", "gists_url": "https://api.github.com/users/PhaniShekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhaniShekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhaniShekhar/subscriptions", "organizations_url": "https://api.github.com/users/PhaniShekhar/orgs", "repos_url": "https://api.github.com/users/PhaniShekhar/repos", "events_url": "https://api.github.com/users/PhaniShekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/PhaniShekhar/received_events", "type": "User", "site_admin": false}, "repo": {"id": 99615094, "name": "rocksdb", "full_name": "PhaniShekhar/rocksdb", "owner": {"login": "PhaniShekhar", "id": 30535191, "avatar_url": "https://avatars1.githubusercontent.com/u/30535191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhaniShekhar", "html_url": "https://github.com/PhaniShekhar", "followers_url": "https://api.github.com/users/PhaniShekhar/followers", "following_url": "https://api.github.com/users/PhaniShekhar/following{/other_user}", "gists_url": "https://api.github.com/users/PhaniShekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhaniShekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhaniShekhar/subscriptions", "organizations_url": "https://api.github.com/users/PhaniShekhar/orgs", "repos_url": "https://api.github.com/users/PhaniShekhar/repos", "events_url": "https://api.github.com/users/PhaniShekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/PhaniShekhar/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/PhaniShekhar/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/PhaniShekhar/rocksdb", "forks_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/forks", "keys_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/teams", "hooks_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/events", "assignees_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/tags", "blobs_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/subscription", "commits_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/merges", "archive_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/downloads", "issues_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/PhaniShekhar/rocksdb/deployments", "created_at": "2017-08-07T20:01:30Z", "updated_at": "2017-08-07T20:01:37Z", "pushed_at": "2017-12-11T19:26:57Z", "git_url": "git://github.com/PhaniShekhar/rocksdb.git", "ssh_url": "git@github.com:PhaniShekhar/rocksdb.git", "clone_url": "https://github.com/PhaniShekhar/rocksdb.git", "svn_url": "https://github.com/PhaniShekhar/rocksdb", "homepage": "http://rocksdb.org", "size": 109187, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "e3814a860818531fd8a36d3dd908382e21839bf4", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3102"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3102"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3102"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3102/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3102/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3102/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/d276010a18c41d796c5c4a82ddefbfed6a65d899"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3097", "id": 149674816, "html_url": "https://github.com/facebook/rocksdb/pull/3097", "diff_url": "https://github.com/facebook/rocksdb/pull/3097.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3097.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3097", "number": 3097, "state": "open", "locked": false, "title": "Write path error handling cleanup", "user": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "body": "Summary:\r\nFixing the bug where concurrent writes may get Status::OK while it actually gets IOError on WAL write. This happens when multiple writes form a write batch group, and the leader get an IOError while writing to WAL. The leader failed to pass the error to followers in the group, and the followers end up return Status::OK() while actually writing nothing. The bug only affect writes in a batch group. Future writes after the batch group will correctly return immediately with the IOError.\r\n\r\nCloses #3096 \r\n\r\nTest Plan:\r\nSee the new test.", "created_at": "2017-10-31T01:18:49Z", "updated_at": "2017-11-28T22:47:33Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "d1ac010e1943fb4e197051b8a13c1ad0b1131093", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3097/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3097/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3097/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/2086fdf5f5b5cfb8ced3e5653c443a88d14bbf4b", "head": {"label": "yiwu-arbug:bg_error", "ref": "bg_error", "sha": "2086fdf5f5b5cfb8ced3e5653c443a88d14bbf4b", "user": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "repo": {"id": 68760384, "name": "rocksdb", "full_name": "yiwu-arbug/rocksdb", "owner": {"login": "yiwu-arbug", "id": 2606959, "avatar_url": "https://avatars3.githubusercontent.com/u/2606959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiwu-arbug", "html_url": "https://github.com/yiwu-arbug", "followers_url": "https://api.github.com/users/yiwu-arbug/followers", "following_url": "https://api.github.com/users/yiwu-arbug/following{/other_user}", "gists_url": "https://api.github.com/users/yiwu-arbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiwu-arbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiwu-arbug/subscriptions", "organizations_url": "https://api.github.com/users/yiwu-arbug/orgs", "repos_url": "https://api.github.com/users/yiwu-arbug/repos", "events_url": "https://api.github.com/users/yiwu-arbug/events{/privacy}", "received_events_url": "https://api.github.com/users/yiwu-arbug/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/yiwu-arbug/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/yiwu-arbug/rocksdb", "forks_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/forks", "keys_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/teams", "hooks_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/events", "assignees_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/tags", "blobs_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/subscription", "commits_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/merges", "archive_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/downloads", "issues_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/yiwu-arbug/rocksdb/deployments", "created_at": "2016-09-20T23:06:58Z", "updated_at": "2016-09-20T23:07:03Z", "pushed_at": "2018-01-18T05:43:24Z", "git_url": "git://github.com/yiwu-arbug/rocksdb.git", "ssh_url": "git@github.com:yiwu-arbug/rocksdb.git", "clone_url": "https://github.com/yiwu-arbug/rocksdb.git", "svn_url": "https://github.com/yiwu-arbug/rocksdb", "homepage": "http://rocksdb.org", "size": 57500, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "dd49f89466521ae86b45ebcd97f7e2d7a84c03ca", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3097"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3097"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3097"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3097/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3097/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3097/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/2086fdf5f5b5cfb8ced3e5653c443a88d14bbf4b"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3068", "id": 148588857, "html_url": "https://github.com/facebook/rocksdb/pull/3068", "diff_url": "https://github.com/facebook/rocksdb/pull/3068.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3068.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3068", "number": 3068, "state": "open", "locked": false, "title": "support set global seqno for external file", "user": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "body": "Before ingesting external file, we usually need to verify the checksum of the external file to guarantee the file is not corrupted. \r\nWhen ingesting fail before version change has been added to MANIFEST, but after global_seqno has been set with `move_files = true and allow_global_seqno = true` mode(actually use hard link instead of move), if we restart the ingesting process, checksum verify will fail because of the global_seqno has been changed. So we need to reset the global sequence number to zero before verify.\r\n", "created_at": "2017-10-25T07:24:22Z", "updated_at": "2017-10-25T07:24:39Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "553f319040c172426b852e9eebd688cba892cb86", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3068/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3068/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3068/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/6dfb2310c0b7523308cc9ce9441f6c0a974a1f3d", "head": {"label": "zhangjinpeng1987:zhangjinpeng/set-global-seq", "ref": "zhangjinpeng/set-global-seq", "sha": "6dfb2310c0b7523308cc9ce9441f6c0a974a1f3d", "user": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "repo": {"id": 67785573, "name": "rocksdb", "full_name": "zhangjinpeng1987/rocksdb", "owner": {"login": "zhangjinpeng1987", "id": 19700528, "avatar_url": "https://avatars2.githubusercontent.com/u/19700528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjinpeng1987", "html_url": "https://github.com/zhangjinpeng1987", "followers_url": "https://api.github.com/users/zhangjinpeng1987/followers", "following_url": "https://api.github.com/users/zhangjinpeng1987/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjinpeng1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjinpeng1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjinpeng1987/subscriptions", "organizations_url": "https://api.github.com/users/zhangjinpeng1987/orgs", "repos_url": "https://api.github.com/users/zhangjinpeng1987/repos", "events_url": "https://api.github.com/users/zhangjinpeng1987/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjinpeng1987/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/zhangjinpeng1987/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb", "forks_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/forks", "keys_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/teams", "hooks_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/events", "assignees_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/tags", "blobs_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/subscription", "commits_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/merges", "archive_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/downloads", "issues_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/zhangjinpeng1987/rocksdb/deployments", "created_at": "2016-09-09T09:24:52Z", "updated_at": "2016-09-09T09:24:57Z", "pushed_at": "2017-12-24T02:42:08Z", "git_url": "git://github.com/zhangjinpeng1987/rocksdb.git", "ssh_url": "git@github.com:zhangjinpeng1987/rocksdb.git", "clone_url": "https://github.com/zhangjinpeng1987/rocksdb.git", "svn_url": "https://github.com/zhangjinpeng1987/rocksdb", "homepage": "http://rocksdb.org", "size": 133116, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "bsd-3-clause", "name": "BSD 3-clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "386a57e6ef08fbcc2f9b92217fa4a8c9873386c9", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3068"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3068"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3068"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3068/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3068/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3068/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/6dfb2310c0b7523308cc9ce9441f6c0a974a1f3d"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3065", "id": 148511085, "html_url": "https://github.com/facebook/rocksdb/pull/3065", "diff_url": "https://github.com/facebook/rocksdb/pull/3065.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3065.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3065", "number": 3065, "state": "open", "locked": false, "title": "Added bytes XOR merge operator", "user": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "body": "Closes https://github.com/facebook/rocksdb/pull/575\r\n\r\nI fixed the merge conflicts etc.", "created_at": "2017-10-24T20:57:17Z", "updated_at": "2017-10-24T20:57:26Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "74e795d581a485b066ee36c07f034f681378446d", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3065/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3065/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3065/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/fc3bc7543305a3cd8848b596a0d77deda6b7f7c3", "head": {"label": "adamretter:575", "ref": "575", "sha": "fc3bc7543305a3cd8848b596a0d77deda6b7f7c3", "user": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "repo": {"id": 22577794, "name": "rocksdb", "full_name": "adamretter/rocksdb", "owner": {"login": "adamretter", "id": 1264057, "avatar_url": "https://avatars1.githubusercontent.com/u/1264057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamretter", "html_url": "https://github.com/adamretter", "followers_url": "https://api.github.com/users/adamretter/followers", "following_url": "https://api.github.com/users/adamretter/following{/other_user}", "gists_url": "https://api.github.com/users/adamretter/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamretter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamretter/subscriptions", "organizations_url": "https://api.github.com/users/adamretter/orgs", "repos_url": "https://api.github.com/users/adamretter/repos", "events_url": "https://api.github.com/users/adamretter/events{/privacy}", "received_events_url": "https://api.github.com/users/adamretter/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/adamretter/rocksdb", "description": "Embedded key-value store for fast storage", "fork": true, "url": "https://api.github.com/repos/adamretter/rocksdb", "forks_url": "https://api.github.com/repos/adamretter/rocksdb/forks", "keys_url": "https://api.github.com/repos/adamretter/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/adamretter/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/adamretter/rocksdb/teams", "hooks_url": "https://api.github.com/repos/adamretter/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/adamretter/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/adamretter/rocksdb/events", "assignees_url": "https://api.github.com/repos/adamretter/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/adamretter/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/adamretter/rocksdb/tags", "blobs_url": "https://api.github.com/repos/adamretter/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/adamretter/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/adamretter/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/adamretter/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/adamretter/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/adamretter/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/adamretter/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/adamretter/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/adamretter/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/adamretter/rocksdb/subscription", "commits_url": "https://api.github.com/repos/adamretter/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/adamretter/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/adamretter/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/adamretter/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/adamretter/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/adamretter/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/adamretter/rocksdb/merges", "archive_url": "https://api.github.com/repos/adamretter/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/adamretter/rocksdb/downloads", "issues_url": "https://api.github.com/repos/adamretter/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/adamretter/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/adamretter/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/adamretter/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/adamretter/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/adamretter/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/adamretter/rocksdb/deployments", "created_at": "2014-08-03T15:38:02Z", "updated_at": "2016-01-15T11:32:54Z", "pushed_at": "2018-01-11T22:03:58Z", "git_url": "git://github.com/adamretter/rocksdb.git", "ssh_url": "git@github.com:adamretter/rocksdb.git", "clone_url": "https://github.com/adamretter/rocksdb.git", "svn_url": "https://github.com/adamretter/rocksdb", "homepage": "http://rocksdb.org", "size": 66521, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "386a57e6ef08fbcc2f9b92217fa4a8c9873386c9", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3065"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3065"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3065"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3065/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3065/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3065/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/fc3bc7543305a3cd8848b596a0d77deda6b7f7c3"}}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3063", "id": 148491096, "html_url": "https://github.com/facebook/rocksdb/pull/3063", "diff_url": "https://github.com/facebook/rocksdb/pull/3063.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3063.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3063", "number": 3063, "state": "open", "locked": false, "title": "Async 5.6.1", "user": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "body": "This is the second iteration of async. This includes two major things: 1) Get code refactored for more inlining. 2) Async iterators implementation.\r\n\r\nIn my perf runs I no longer see the difference on windows while running single thread against RAM drive.\r\n\r\nHowever, if this is still no acceptable I am prepared to restore sync interfaces and leave async path on the side. Async iteration is implemented on the side.\r\n\r\nWe may need another meeting with better preparation to explain how things work.", "created_at": "2017-10-24T19:28:16Z", "updated_at": "2017-12-13T18:42:27Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "0d3d0cbbec92846a19e43f41ff8d0015fe27141f", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3063/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3063/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3063/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/4dffb86ae638f9e58aad3846cfa8d16cf85d399c", "head": {"label": "yuslepukhin:async_5.6.1", "ref": "async_5.6.1", "sha": "4dffb86ae638f9e58aad3846cfa8d16cf85d399c", "user": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "repo": {"id": 44776420, "name": "rocksdb", "full_name": "yuslepukhin/rocksdb", "owner": {"login": "yuslepukhin", "id": 11303988, "avatar_url": "https://avatars0.githubusercontent.com/u/11303988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuslepukhin", "html_url": "https://github.com/yuslepukhin", "followers_url": "https://api.github.com/users/yuslepukhin/followers", "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}", "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions", "organizations_url": "https://api.github.com/users/yuslepukhin/orgs", "repos_url": "https://api.github.com/users/yuslepukhin/repos", "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/yuslepukhin/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/yuslepukhin/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/yuslepukhin/rocksdb", "forks_url": "https://api.github.com/repos/yuslepukhin/rocksdb/forks", "keys_url": "https://api.github.com/repos/yuslepukhin/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/yuslepukhin/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/yuslepukhin/rocksdb/teams", "hooks_url": "https://api.github.com/repos/yuslepukhin/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/yuslepukhin/rocksdb/events", "assignees_url": "https://api.github.com/repos/yuslepukhin/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/yuslepukhin/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/yuslepukhin/rocksdb/tags", "blobs_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/yuslepukhin/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/yuslepukhin/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/yuslepukhin/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/yuslepukhin/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/yuslepukhin/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/yuslepukhin/rocksdb/subscription", "commits_url": "https://api.github.com/repos/yuslepukhin/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/yuslepukhin/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/yuslepukhin/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/yuslepukhin/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/yuslepukhin/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/yuslepukhin/rocksdb/merges", "archive_url": "https://api.github.com/repos/yuslepukhin/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/yuslepukhin/rocksdb/downloads", "issues_url": "https://api.github.com/repos/yuslepukhin/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/yuslepukhin/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/yuslepukhin/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/yuslepukhin/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/yuslepukhin/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/yuslepukhin/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/yuslepukhin/rocksdb/deployments", "created_at": "2015-10-22T22:16:34Z", "updated_at": "2017-11-22T12:32:48Z", "pushed_at": "2018-01-11T18:26:53Z", "git_url": "git://github.com/yuslepukhin/rocksdb.git", "ssh_url": "git@github.com:yuslepukhin/rocksdb.git", "clone_url": "https://github.com/yuslepukhin/rocksdb.git", "svn_url": "https://github.com/yuslepukhin/rocksdb", "homepage": "http://rocksdb.org", "size": 72669, "stargazers_count": 1, "watchers_count": 1, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "facebook:5.6.fb", "ref": "5.6.fb", "sha": "bbd65abcfc156a4777d10250601761691e2fcef3", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3063"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3063"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3063"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3063/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3063/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3063/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/4dffb86ae638f9e58aad3846cfa8d16cf85d399c"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3059", "id": 148268764, "html_url": "https://github.com/facebook/rocksdb/pull/3059", "diff_url": "https://github.com/facebook/rocksdb/pull/3059.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3059.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3059", "number": 3059, "state": "open", "locked": false, "title": "Fix DeleteFilesInRange so keys never reappear", "user": {"login": "dcclyde", "id": 12972575, "avatar_url": "https://avatars3.githubusercontent.com/u/12972575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcclyde", "html_url": "https://github.com/dcclyde", "followers_url": "https://api.github.com/users/dcclyde/followers", "following_url": "https://api.github.com/users/dcclyde/following{/other_user}", "gists_url": "https://api.github.com/users/dcclyde/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcclyde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcclyde/subscriptions", "organizations_url": "https://api.github.com/users/dcclyde/orgs", "repos_url": "https://api.github.com/users/dcclyde/repos", "events_url": "https://api.github.com/users/dcclyde/events{/privacy}", "received_events_url": "https://api.github.com/users/dcclyde/received_events", "type": "User", "site_admin": false}, "body": "In the previous implementation of DeleteFilesInRange, keys could reappear if we drop a wider range at a higher level, making the tombstone in the upper level disappear while the key it covered in the lower level doesn't. The second commit in this pull request reimplements DeleteFilesInRange to use the following strategy:\r\n1) Initialize the deletion range to the lower and upper bounds specified by the user.\r\n2) Start from the bottom level and iterate upward. At each level:\r\n    i) pick the widest clean-cut set of files that fall entirely in the range.\r\n    ii) Reset the deletion range to the min and max userkeys of the clean-cut set of files from step (i).\r\n\r\nTo support this, the first commit in this pull request modifies several functions VersionStorageInfo to accept ranges with no lower and/or upper bound. This is a \"fix\" in the sense that the functions' comments already promised the new behaviour.\r\n\r\nI've added a new unit test in db_compaction_test which passes now but fails when using the old implementation.", "created_at": "2017-10-24T00:05:13Z", "updated_at": "2017-10-24T00:11:46Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "238b71ab5d55ecb60f01e042255370bad249e9af", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3059/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3059/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3059/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/04cfecb65a9bfe2326cad2d2a52289c16a52c7f6", "head": {"label": "dcclyde:master", "ref": "master", "sha": "04cfecb65a9bfe2326cad2d2a52289c16a52c7f6", "user": {"login": "dcclyde", "id": 12972575, "avatar_url": "https://avatars3.githubusercontent.com/u/12972575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcclyde", "html_url": "https://github.com/dcclyde", "followers_url": "https://api.github.com/users/dcclyde/followers", "following_url": "https://api.github.com/users/dcclyde/following{/other_user}", "gists_url": "https://api.github.com/users/dcclyde/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcclyde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcclyde/subscriptions", "organizations_url": "https://api.github.com/users/dcclyde/orgs", "repos_url": "https://api.github.com/users/dcclyde/repos", "events_url": "https://api.github.com/users/dcclyde/events{/privacy}", "received_events_url": "https://api.github.com/users/dcclyde/received_events", "type": "User", "site_admin": false}, "repo": {"id": 107465579, "name": "rocksdb", "full_name": "dcclyde/rocksdb", "owner": {"login": "dcclyde", "id": 12972575, "avatar_url": "https://avatars3.githubusercontent.com/u/12972575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcclyde", "html_url": "https://github.com/dcclyde", "followers_url": "https://api.github.com/users/dcclyde/followers", "following_url": "https://api.github.com/users/dcclyde/following{/other_user}", "gists_url": "https://api.github.com/users/dcclyde/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcclyde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcclyde/subscriptions", "organizations_url": "https://api.github.com/users/dcclyde/orgs", "repos_url": "https://api.github.com/users/dcclyde/repos", "events_url": "https://api.github.com/users/dcclyde/events{/privacy}", "received_events_url": "https://api.github.com/users/dcclyde/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/dcclyde/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/dcclyde/rocksdb", "forks_url": "https://api.github.com/repos/dcclyde/rocksdb/forks", "keys_url": "https://api.github.com/repos/dcclyde/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dcclyde/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dcclyde/rocksdb/teams", "hooks_url": "https://api.github.com/repos/dcclyde/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/dcclyde/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/dcclyde/rocksdb/events", "assignees_url": "https://api.github.com/repos/dcclyde/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/dcclyde/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/dcclyde/rocksdb/tags", "blobs_url": "https://api.github.com/repos/dcclyde/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dcclyde/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dcclyde/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dcclyde/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dcclyde/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/dcclyde/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/dcclyde/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/dcclyde/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/dcclyde/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/dcclyde/rocksdb/subscription", "commits_url": "https://api.github.com/repos/dcclyde/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dcclyde/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dcclyde/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dcclyde/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dcclyde/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/dcclyde/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dcclyde/rocksdb/merges", "archive_url": "https://api.github.com/repos/dcclyde/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dcclyde/rocksdb/downloads", "issues_url": "https://api.github.com/repos/dcclyde/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/dcclyde/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/dcclyde/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/dcclyde/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dcclyde/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/dcclyde/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/dcclyde/rocksdb/deployments", "created_at": "2017-10-18T21:33:06Z", "updated_at": "2017-10-18T21:33:13Z", "pushed_at": "2017-10-23T23:55:41Z", "git_url": "git://github.com/dcclyde/rocksdb.git", "ssh_url": "git@github.com:dcclyde/rocksdb.git", "clone_url": "https://github.com/dcclyde/rocksdb.git", "svn_url": "https://github.com/dcclyde/rocksdb", "homepage": "http://rocksdb.org", "size": 107949, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "57fcdc264aa0f2bb481fdad9d4a1a7846395c6e1", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3059"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3059"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3059"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3059/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3059/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3059/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/04cfecb65a9bfe2326cad2d2a52289c16a52c7f6"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3001", "id": 146377016, "html_url": "https://github.com/facebook/rocksdb/pull/3001", "diff_url": "https://github.com/facebook/rocksdb/pull/3001.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/3001.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/3001", "number": 3001, "state": "open", "locked": false, "title": "handle error with kSkipAnyCorruptedRecords", "user": {"login": "cooljiansir", "id": 5054250, "avatar_url": "https://avatars2.githubusercontent.com/u/5054250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljiansir", "html_url": "https://github.com/cooljiansir", "followers_url": "https://api.github.com/users/cooljiansir/followers", "following_url": "https://api.github.com/users/cooljiansir/following{/other_user}", "gists_url": "https://api.github.com/users/cooljiansir/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljiansir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljiansir/subscriptions", "organizations_url": "https://api.github.com/users/cooljiansir/orgs", "repos_url": "https://api.github.com/users/cooljiansir/repos", "events_url": "https://api.github.com/users/cooljiansir/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljiansir/received_events", "type": "User", "site_admin": false}, "body": "in kSkipAnyCorruptedRecords mode, continue to replay the log.", "created_at": "2017-10-13T05:54:46Z", "updated_at": "2018-01-12T02:39:49Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "73ce6c3e8c44fc0038c46795977655c5fb92aca3", "assignee": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3001/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/3001/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/3001/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/ce8f744d7a62d30007255900b6de28f64b2bd52f", "head": {"label": "cooljiansir:patch-1", "ref": "patch-1", "sha": "ce8f744d7a62d30007255900b6de28f64b2bd52f", "user": {"login": "cooljiansir", "id": 5054250, "avatar_url": "https://avatars2.githubusercontent.com/u/5054250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljiansir", "html_url": "https://github.com/cooljiansir", "followers_url": "https://api.github.com/users/cooljiansir/followers", "following_url": "https://api.github.com/users/cooljiansir/following{/other_user}", "gists_url": "https://api.github.com/users/cooljiansir/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljiansir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljiansir/subscriptions", "organizations_url": "https://api.github.com/users/cooljiansir/orgs", "repos_url": "https://api.github.com/users/cooljiansir/repos", "events_url": "https://api.github.com/users/cooljiansir/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljiansir/received_events", "type": "User", "site_admin": false}, "repo": {"id": 106783277, "name": "rocksdb", "full_name": "cooljiansir/rocksdb", "owner": {"login": "cooljiansir", "id": 5054250, "avatar_url": "https://avatars2.githubusercontent.com/u/5054250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljiansir", "html_url": "https://github.com/cooljiansir", "followers_url": "https://api.github.com/users/cooljiansir/followers", "following_url": "https://api.github.com/users/cooljiansir/following{/other_user}", "gists_url": "https://api.github.com/users/cooljiansir/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljiansir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljiansir/subscriptions", "organizations_url": "https://api.github.com/users/cooljiansir/orgs", "repos_url": "https://api.github.com/users/cooljiansir/repos", "events_url": "https://api.github.com/users/cooljiansir/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljiansir/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/cooljiansir/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/cooljiansir/rocksdb", "forks_url": "https://api.github.com/repos/cooljiansir/rocksdb/forks", "keys_url": "https://api.github.com/repos/cooljiansir/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/cooljiansir/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/cooljiansir/rocksdb/teams", "hooks_url": "https://api.github.com/repos/cooljiansir/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/cooljiansir/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/cooljiansir/rocksdb/events", "assignees_url": "https://api.github.com/repos/cooljiansir/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/cooljiansir/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/cooljiansir/rocksdb/tags", "blobs_url": "https://api.github.com/repos/cooljiansir/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/cooljiansir/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/cooljiansir/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/cooljiansir/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/cooljiansir/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/cooljiansir/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/cooljiansir/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/cooljiansir/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/cooljiansir/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/cooljiansir/rocksdb/subscription", "commits_url": "https://api.github.com/repos/cooljiansir/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/cooljiansir/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/cooljiansir/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/cooljiansir/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/cooljiansir/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/cooljiansir/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/cooljiansir/rocksdb/merges", "archive_url": "https://api.github.com/repos/cooljiansir/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/cooljiansir/rocksdb/downloads", "issues_url": "https://api.github.com/repos/cooljiansir/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/cooljiansir/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/cooljiansir/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/cooljiansir/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/cooljiansir/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/cooljiansir/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/cooljiansir/rocksdb/deployments", "created_at": "2017-10-13T05:49:38Z", "updated_at": "2017-10-13T05:49:45Z", "pushed_at": "2017-10-13T05:53:42Z", "git_url": "git://github.com/cooljiansir/rocksdb.git", "ssh_url": "git@github.com:cooljiansir/rocksdb.git", "clone_url": "https://github.com/cooljiansir/rocksdb.git", "svn_url": "https://github.com/cooljiansir/rocksdb", "homepage": "http://rocksdb.org", "size": 107559, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "31d3e4181099bd92ca5c1be0ab8b7f51765fa558", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3001"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/3001"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3001"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/3001/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3001/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/3001/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/ce8f744d7a62d30007255900b6de28f64b2bd52f"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2987", "id": 145575959, "html_url": "https://github.com/facebook/rocksdb/pull/2987", "diff_url": "https://github.com/facebook/rocksdb/pull/2987.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/2987.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/2987", "number": 2987, "state": "open", "locked": false, "title": "Apply compression dictionary to file from which it was generated", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "body": "- Move sampling logic from `CompactionJob` to `BlockBasedTableBuilder` as now we generate dictionary per file rather than per subcompaction.\r\n- Buffer uncompressed data blocks and all keys in-memory. We take a second pass through these during `Finish()` to compress/write data blocks and generate the index. The keys are buffered for convenience, even though they're redundantly stored in the uncompressed data blocks, so we can replay them to `OnKeyAdded` and `AddIndexEntry`.", "created_at": "2017-10-10T00:35:06Z", "updated_at": "2017-11-15T06:57:11Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "ee2ac54a9761a63e3bd31ab325566a2238327fb5", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2987/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2987/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/2987/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/78f22896bfeee3182171435a73448049b1ac11b3", "head": {"label": "ajkr:zstd-for-pr", "ref": "zstd-for-pr", "sha": "78f22896bfeee3182171435a73448049b1ac11b3", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "repo": {"id": 69681666, "name": "rocksdb", "full_name": "ajkr/rocksdb", "owner": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/ajkr/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/ajkr/rocksdb", "forks_url": "https://api.github.com/repos/ajkr/rocksdb/forks", "keys_url": "https://api.github.com/repos/ajkr/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ajkr/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ajkr/rocksdb/teams", "hooks_url": "https://api.github.com/repos/ajkr/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/ajkr/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/ajkr/rocksdb/events", "assignees_url": "https://api.github.com/repos/ajkr/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/ajkr/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/ajkr/rocksdb/tags", "blobs_url": "https://api.github.com/repos/ajkr/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ajkr/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ajkr/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ajkr/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ajkr/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/ajkr/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/ajkr/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/ajkr/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/ajkr/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/ajkr/rocksdb/subscription", "commits_url": "https://api.github.com/repos/ajkr/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ajkr/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ajkr/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ajkr/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ajkr/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/ajkr/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ajkr/rocksdb/merges", "archive_url": "https://api.github.com/repos/ajkr/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ajkr/rocksdb/downloads", "issues_url": "https://api.github.com/repos/ajkr/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/ajkr/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/ajkr/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/ajkr/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ajkr/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/ajkr/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/ajkr/rocksdb/deployments", "created_at": "2016-09-30T16:09:32Z", "updated_at": "2016-09-30T16:09:37Z", "pushed_at": "2018-01-17T23:51:29Z", "git_url": "git://github.com/ajkr/rocksdb.git", "ssh_url": "git@github.com:ajkr/rocksdb.git", "clone_url": "https://github.com/ajkr/rocksdb.git", "svn_url": "https://github.com/ajkr/rocksdb", "homepage": "http://rocksdb.org", "size": 133896, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "a6d8e30c05ac1a2cd4bfa9aa7d95a498b02b354c", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2987"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/2987"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2987"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2987/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2987/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2987/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/78f22896bfeee3182171435a73448049b1ac11b3"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2978", "id": 145150789, "html_url": "https://github.com/facebook/rocksdb/pull/2978", "diff_url": "https://github.com/facebook/rocksdb/pull/2978.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/2978.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/2978", "number": 2978, "state": "open", "locked": false, "title": "stats_dump_period_sec(60), //1min", "user": {"login": "cld378632668", "id": 14916170, "avatar_url": "https://avatars3.githubusercontent.com/u/14916170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cld378632668", "html_url": "https://github.com/cld378632668", "followers_url": "https://api.github.com/users/cld378632668/followers", "following_url": "https://api.github.com/users/cld378632668/following{/other_user}", "gists_url": "https://api.github.com/users/cld378632668/gists{/gist_id}", "starred_url": "https://api.github.com/users/cld378632668/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cld378632668/subscriptions", "organizations_url": "https://api.github.com/users/cld378632668/orgs", "repos_url": "https://api.github.com/users/cld378632668/repos", "events_url": "https://api.github.com/users/cld378632668/events{/privacy}", "received_events_url": "https://api.github.com/users/cld378632668/received_events", "type": "User", "site_admin": false}, "body": "stats_dump_period_sec(60), //1min", "created_at": "2017-10-06T13:19:32Z", "updated_at": "2017-10-11T19:37:02Z", "closed_at": null, "merged_at": null, "merge_commit_sha": null, "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2978/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2978/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/2978/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/5c788de719dfbac45dc00cb32a4d143e5dae681d", "head": {"label": "cld378632668:v2.7.1", "ref": "v2.7.1", "sha": "5c788de719dfbac45dc00cb32a4d143e5dae681d", "user": {"login": "cld378632668", "id": 14916170, "avatar_url": "https://avatars3.githubusercontent.com/u/14916170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cld378632668", "html_url": "https://github.com/cld378632668", "followers_url": "https://api.github.com/users/cld378632668/followers", "following_url": "https://api.github.com/users/cld378632668/following{/other_user}", "gists_url": "https://api.github.com/users/cld378632668/gists{/gist_id}", "starred_url": "https://api.github.com/users/cld378632668/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cld378632668/subscriptions", "organizations_url": "https://api.github.com/users/cld378632668/orgs", "repos_url": "https://api.github.com/users/cld378632668/repos", "events_url": "https://api.github.com/users/cld378632668/events{/privacy}", "received_events_url": "https://api.github.com/users/cld378632668/received_events", "type": "User", "site_admin": false}, "repo": {"id": 105844793, "name": "rocksdb", "full_name": "cld378632668/rocksdb", "owner": {"login": "cld378632668", "id": 14916170, "avatar_url": "https://avatars3.githubusercontent.com/u/14916170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cld378632668", "html_url": "https://github.com/cld378632668", "followers_url": "https://api.github.com/users/cld378632668/followers", "following_url": "https://api.github.com/users/cld378632668/following{/other_user}", "gists_url": "https://api.github.com/users/cld378632668/gists{/gist_id}", "starred_url": "https://api.github.com/users/cld378632668/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cld378632668/subscriptions", "organizations_url": "https://api.github.com/users/cld378632668/orgs", "repos_url": "https://api.github.com/users/cld378632668/repos", "events_url": "https://api.github.com/users/cld378632668/events{/privacy}", "received_events_url": "https://api.github.com/users/cld378632668/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/cld378632668/rocksdb", "description": "rocksdb-v5.7.2-slot", "fork": true, "url": "https://api.github.com/repos/cld378632668/rocksdb", "forks_url": "https://api.github.com/repos/cld378632668/rocksdb/forks", "keys_url": "https://api.github.com/repos/cld378632668/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/cld378632668/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/cld378632668/rocksdb/teams", "hooks_url": "https://api.github.com/repos/cld378632668/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/cld378632668/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/cld378632668/rocksdb/events", "assignees_url": "https://api.github.com/repos/cld378632668/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/cld378632668/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/cld378632668/rocksdb/tags", "blobs_url": "https://api.github.com/repos/cld378632668/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/cld378632668/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/cld378632668/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/cld378632668/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/cld378632668/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/cld378632668/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/cld378632668/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/cld378632668/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/cld378632668/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/cld378632668/rocksdb/subscription", "commits_url": "https://api.github.com/repos/cld378632668/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/cld378632668/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/cld378632668/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/cld378632668/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/cld378632668/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/cld378632668/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/cld378632668/rocksdb/merges", "archive_url": "https://api.github.com/repos/cld378632668/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/cld378632668/rocksdb/downloads", "issues_url": "https://api.github.com/repos/cld378632668/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/cld378632668/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/cld378632668/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/cld378632668/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/cld378632668/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/cld378632668/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/cld378632668/rocksdb/deployments", "created_at": "2017-10-05T03:18:02Z", "updated_at": "2017-12-26T01:54:18Z", "pushed_at": "2018-01-18T14:13:46Z", "git_url": "git://github.com/cld378632668/rocksdb.git", "ssh_url": "git@github.com:cld378632668/rocksdb.git", "clone_url": "https://github.com/cld378632668/rocksdb.git", "svn_url": "https://github.com/cld378632668/rocksdb", "homepage": "http://rocksdb.org", "size": 107443, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "01542400a87ad130aed790bf895c029082745cbe", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2978"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/2978"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2978"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2978/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2978/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2978/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/5c788de719dfbac45dc00cb32a4d143e5dae681d"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2977", "id": 145079313, "html_url": "https://github.com/facebook/rocksdb/pull/2977", "diff_url": "https://github.com/facebook/rocksdb/pull/2977.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/2977.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/2977", "number": 2977, "state": "open", "locked": false, "title": "fix condition for fsync wal before deletion", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "body": "fixing the condition for fsync: it should be number of CF greater than 1 instead of 0", "created_at": "2017-10-06T06:20:51Z", "updated_at": "2017-10-12T17:29:54Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "b8e30ee4d40396af099bc46fc6a250d31fd541ed", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2977/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2977/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/2977/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/2ff9b013cfff377cc6295d7675a93f5560c3a159", "head": {"label": "miasantreble:skip-fsync-single-cf", "ref": "skip-fsync-single-cf", "sha": "2ff9b013cfff377cc6295d7675a93f5560c3a159", "user": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103351953, "name": "rocksdb", "full_name": "miasantreble/rocksdb", "owner": {"login": "miasantreble", "id": 12212793, "avatar_url": "https://avatars3.githubusercontent.com/u/12212793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miasantreble", "html_url": "https://github.com/miasantreble", "followers_url": "https://api.github.com/users/miasantreble/followers", "following_url": "https://api.github.com/users/miasantreble/following{/other_user}", "gists_url": "https://api.github.com/users/miasantreble/gists{/gist_id}", "starred_url": "https://api.github.com/users/miasantreble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miasantreble/subscriptions", "organizations_url": "https://api.github.com/users/miasantreble/orgs", "repos_url": "https://api.github.com/users/miasantreble/repos", "events_url": "https://api.github.com/users/miasantreble/events{/privacy}", "received_events_url": "https://api.github.com/users/miasantreble/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/miasantreble/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/miasantreble/rocksdb", "forks_url": "https://api.github.com/repos/miasantreble/rocksdb/forks", "keys_url": "https://api.github.com/repos/miasantreble/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/miasantreble/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/miasantreble/rocksdb/teams", "hooks_url": "https://api.github.com/repos/miasantreble/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/miasantreble/rocksdb/events", "assignees_url": "https://api.github.com/repos/miasantreble/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/miasantreble/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/miasantreble/rocksdb/tags", "blobs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/miasantreble/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/miasantreble/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/miasantreble/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/miasantreble/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/miasantreble/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/miasantreble/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/miasantreble/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/miasantreble/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/miasantreble/rocksdb/subscription", "commits_url": "https://api.github.com/repos/miasantreble/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/miasantreble/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/miasantreble/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/miasantreble/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/miasantreble/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/miasantreble/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/miasantreble/rocksdb/merges", "archive_url": "https://api.github.com/repos/miasantreble/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/miasantreble/rocksdb/downloads", "issues_url": "https://api.github.com/repos/miasantreble/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/miasantreble/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/miasantreble/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/miasantreble/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/miasantreble/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/miasantreble/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/miasantreble/rocksdb/deployments", "created_at": "2017-09-13T04:08:50Z", "updated_at": "2017-09-13T04:08:56Z", "pushed_at": "2018-01-17T20:01:20Z", "git_url": "git://github.com/miasantreble/rocksdb.git", "ssh_url": "git@github.com:miasantreble/rocksdb.git", "clone_url": "https://github.com/miasantreble/rocksdb.git", "svn_url": "https://github.com/miasantreble/rocksdb", "homepage": "http://rocksdb.org", "size": 110294, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "01542400a87ad130aed790bf895c029082745cbe", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2977"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/2977"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2977"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2977/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2977/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2977/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/2ff9b013cfff377cc6295d7675a93f5560c3a159"}}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2973", "id": 145012408, "html_url": "https://github.com/facebook/rocksdb/pull/2973", "diff_url": "https://github.com/facebook/rocksdb/pull/2973.diff", "patch_url": "https://github.com/facebook/rocksdb/pull/2973.patch", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/2973", "number": 2973, "state": "open", "locked": false, "title": "log decimal TID on linux", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "body": "identify the thread using the output of `gettid()` syscall on Linux, which is a system-wide unique ID, unlike `pthread_self()`. Also changed from hex to decimal to be compatible with tools like `top`.\r\n\r\nTest Plan:\r\n\r\n- make check -j64\r\n- run db_bench and correlate `top` entries with log entries\r\n\r\n```\r\n$ top -H\r\n...\r\n782508 andrewkr  20   0  319272  47864   8884 R 99.7  0.0   0:04.18  4 db_bench\r\n...\r\n```\r\n\r\n```\r\n$ grep '782508' /dev/shm/dbbench/LOG | head -1\r\n2017/10/05-13:23:17.517942 782508 [db/db_impl_write.cc:1162] [default] New memtable created with log file: #6. Immutable memtables: 0.\r\n```", "created_at": "2017-10-05T20:25:56Z", "updated_at": "2017-10-06T20:30:45Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "c058ccb419c9f5dd2c5247556102a126953464ba", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2973/commits", "review_comments_url": "https://api.github.com/repos/facebook/rocksdb/pulls/2973/comments", "review_comment_url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/issues/2973/comments", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/b1d59639ff1570fc884be67dd53edd8c62e60809", "head": {"label": "ajkr:log-tid", "ref": "log-tid", "sha": "b1d59639ff1570fc884be67dd53edd8c62e60809", "user": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "repo": {"id": 69681666, "name": "rocksdb", "full_name": "ajkr/rocksdb", "owner": {"login": "ajkr", "id": 4780362, "avatar_url": "https://avatars0.githubusercontent.com/u/4780362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajkr", "html_url": "https://github.com/ajkr", "followers_url": "https://api.github.com/users/ajkr/followers", "following_url": "https://api.github.com/users/ajkr/following{/other_user}", "gists_url": "https://api.github.com/users/ajkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajkr/subscriptions", "organizations_url": "https://api.github.com/users/ajkr/orgs", "repos_url": "https://api.github.com/users/ajkr/repos", "events_url": "https://api.github.com/users/ajkr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajkr/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/ajkr/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": true, "url": "https://api.github.com/repos/ajkr/rocksdb", "forks_url": "https://api.github.com/repos/ajkr/rocksdb/forks", "keys_url": "https://api.github.com/repos/ajkr/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ajkr/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ajkr/rocksdb/teams", "hooks_url": "https://api.github.com/repos/ajkr/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/ajkr/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/ajkr/rocksdb/events", "assignees_url": "https://api.github.com/repos/ajkr/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/ajkr/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/ajkr/rocksdb/tags", "blobs_url": "https://api.github.com/repos/ajkr/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ajkr/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ajkr/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ajkr/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ajkr/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/ajkr/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/ajkr/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/ajkr/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/ajkr/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/ajkr/rocksdb/subscription", "commits_url": "https://api.github.com/repos/ajkr/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ajkr/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ajkr/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ajkr/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ajkr/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/ajkr/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ajkr/rocksdb/merges", "archive_url": "https://api.github.com/repos/ajkr/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ajkr/rocksdb/downloads", "issues_url": "https://api.github.com/repos/ajkr/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/ajkr/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/ajkr/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/ajkr/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ajkr/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/ajkr/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/ajkr/rocksdb/deployments", "created_at": "2016-09-30T16:09:32Z", "updated_at": "2016-09-30T16:09:37Z", "pushed_at": "2018-01-17T23:51:29Z", "git_url": "git://github.com/ajkr/rocksdb.git", "ssh_url": "git@github.com:ajkr/rocksdb.git", "clone_url": "https://github.com/ajkr/rocksdb.git", "svn_url": "https://github.com/ajkr/rocksdb", "homepage": "http://rocksdb.org", "size": 133896, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "facebook:master", "ref": "master", "sha": "5a6ad9d52a568e53e52c2b6b9d4d51a185b691d6", "user": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 6934395, "name": "rocksdb", "full_name": "facebook/rocksdb", "owner": {"login": "facebook", "id": 69631, "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facebook", "html_url": "https://github.com/facebook", "followers_url": "https://api.github.com/users/facebook/followers", "following_url": "https://api.github.com/users/facebook/following{/other_user}", "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}", "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facebook/subscriptions", "organizations_url": "https://api.github.com/users/facebook/orgs", "repos_url": "https://api.github.com/users/facebook/repos", "events_url": "https://api.github.com/users/facebook/events{/privacy}", "received_events_url": "https://api.github.com/users/facebook/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/facebook/rocksdb", "description": "A library that provides an embeddable, persistent key-value store for fast storage.", "fork": false, "url": "https://api.github.com/repos/facebook/rocksdb", "forks_url": "https://api.github.com/repos/facebook/rocksdb/forks", "keys_url": "https://api.github.com/repos/facebook/rocksdb/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/facebook/rocksdb/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/facebook/rocksdb/teams", "hooks_url": "https://api.github.com/repos/facebook/rocksdb/hooks", "issue_events_url": "https://api.github.com/repos/facebook/rocksdb/issues/events{/number}", "events_url": "https://api.github.com/repos/facebook/rocksdb/events", "assignees_url": "https://api.github.com/repos/facebook/rocksdb/assignees{/user}", "branches_url": "https://api.github.com/repos/facebook/rocksdb/branches{/branch}", "tags_url": "https://api.github.com/repos/facebook/rocksdb/tags", "blobs_url": "https://api.github.com/repos/facebook/rocksdb/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/facebook/rocksdb/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/facebook/rocksdb/git/refs{/sha}", "trees_url": "https://api.github.com/repos/facebook/rocksdb/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/facebook/rocksdb/statuses/{sha}", "languages_url": "https://api.github.com/repos/facebook/rocksdb/languages", "stargazers_url": "https://api.github.com/repos/facebook/rocksdb/stargazers", "contributors_url": "https://api.github.com/repos/facebook/rocksdb/contributors", "subscribers_url": "https://api.github.com/repos/facebook/rocksdb/subscribers", "subscription_url": "https://api.github.com/repos/facebook/rocksdb/subscription", "commits_url": "https://api.github.com/repos/facebook/rocksdb/commits{/sha}", "git_commits_url": "https://api.github.com/repos/facebook/rocksdb/git/commits{/sha}", "comments_url": "https://api.github.com/repos/facebook/rocksdb/comments{/number}", "issue_comment_url": "https://api.github.com/repos/facebook/rocksdb/issues/comments{/number}", "contents_url": "https://api.github.com/repos/facebook/rocksdb/contents/{+path}", "compare_url": "https://api.github.com/repos/facebook/rocksdb/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/facebook/rocksdb/merges", "archive_url": "https://api.github.com/repos/facebook/rocksdb/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/facebook/rocksdb/downloads", "issues_url": "https://api.github.com/repos/facebook/rocksdb/issues{/number}", "pulls_url": "https://api.github.com/repos/facebook/rocksdb/pulls{/number}", "milestones_url": "https://api.github.com/repos/facebook/rocksdb/milestones{/number}", "notifications_url": "https://api.github.com/repos/facebook/rocksdb/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/facebook/rocksdb/labels{/name}", "releases_url": "https://api.github.com/repos/facebook/rocksdb/releases{/id}", "deployments_url": "https://api.github.com/repos/facebook/rocksdb/deployments", "created_at": "2012-11-30T06:16:18Z", "updated_at": "2018-01-18T15:42:07Z", "pushed_at": "2018-01-18T05:43:25Z", "git_url": "git://github.com/facebook/rocksdb.git", "ssh_url": "git@github.com:facebook/rocksdb.git", "clone_url": "https://github.com/facebook/rocksdb.git", "svn_url": "https://github.com/facebook/rocksdb", "homepage": "http://rocksdb.org", "size": 110712, "stargazers_count": 9485, "watchers_count": 9485, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2091, "mirror_url": null, "archived": false, "open_issues_count": 133, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0"}, "forks": 2091, "open_issues": 133, "watchers": 9485, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2973"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/2973"}, "issue": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2973"}, "comments": {"href": "https://api.github.com/repos/facebook/rocksdb/issues/2973/comments"}, "review_comments": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2973/comments"}, "review_comment": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/2973/commits"}, "statuses": {"href": "https://api.github.com/repos/facebook/rocksdb/statuses/b1d59639ff1570fc884be67dd53edd8c62e60809"}}, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694841", "html_url": "https://github.com/facebook/rocksdb/pull/63#issuecomment-127694841", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/63", "id": 127694841, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:36Z", "updated_at": "2015-08-04T18:05:36Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40266010", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40266010", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40266010, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-12T00:10:42Z", "updated_at": "2014-04-12T00:10:42Z", "author_association": "NONE", "body": "Thanks. \n\nFrom the failure I get, it looks like it doesn't like an Options variable. What is this test supposed to do?\n\n---\n\nFrom: Lei Jin [notifications@github.com]\nSent: Friday, April 11, 2014 5:00 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nsignal test is meant to trigger a segment fault. So that is expected. But merge_test failure is not expected. I just ran merge_test on my machine, it works for me.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40265556.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40266010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40267892", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40267892", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40267892, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-12T01:12:03Z", "updated_at": "2014-04-12T01:12:03Z", "author_association": "NONE", "body": "I downloaded it this morning as a zip file from,\n\nhttps://github.com/facebook/rocksdb\n\nFrom: Lei Jin [mailto:notifications@github.com]\nSent: Friday, April 11, 2014 6:03 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\ninclude/rocksdb/options.h:772 is the constructor of Options(). It is not possible to be on the call stack of db/merge_test.cc:344. Are you sure it is copied correctly?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40267674.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40267892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40271657", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40271657", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40271657, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-12T04:40:46Z", "updated_at": "2014-04-12T04:40:46Z", "author_association": "NONE", "body": "Whatever it was, rocksdb seems to be running fine with the application I am testing it with \u263a.\n\nFrom: Ethan Hamilton\nSent: Friday, April 11, 2014 6:12 PM\nTo: facebook/rocksdb; facebook/rocksdb\nSubject: RE: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI downloaded it this morning as a zip file from,\n\nhttps://github.com/facebook/rocksdb\n\nFrom: Lei Jin [mailto:notifications@github.com]\nSent: Friday, April 11, 2014 6:03 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\ninclude/rocksdb/options.h:772 is the constructor of Options(). It is not possible to be on the call stack of db/merge_test.cc:344. Are you sure it is copied correctly?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40267674.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40271657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40400441", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40400441", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40400441, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-14T18:24:01Z", "updated_at": "2014-04-14T18:24:01Z", "author_association": "NONE", "body": "Thanks Igor,\n\nThis is strange, in debug mode, the test passes,\n\n$ ./merge_test\nTest read-modify-write counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nCompaction started ...\nCompaction ended\na: 3\nb: 1225\nTest merge-based counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest merge in memtable...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest Partial-Merge\nOpening database with TTL\nTest read-modify-write counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nCompaction started ...\nCompaction ended\na: 3\nb: 1225\nTest merge-based counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest merge in memtable...\nOpening database with TTL\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest Partial-Merge\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\n\nBut in release mode I get,\n\n$ ./merge_test\nTest read-modify-write counters...\n1\n2\n3\nCompaction started ...\nCompaction ended\nTest merge-based counters...\n1\n2\n3\nTest merge in memtable...\n1\n2\n3\nTest Partial-Merge\ndb/merge_test.cc:344: failed: 10 == 0\n#0   ./merge_test() [0x423083] Options  /home/fgomez/rocksdb/rocksdb-master/./include/rocksdb/options.h:772\n#1   ./merge_test() [0x406a94] ~basic_string    /usr/include/c++/4.8/bits/basic_string.h:539\n#2   /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fc0876b8de5] ??        ??:0\n#3   ./merge_test() [0x41f7a2] _start   ??:?\n\nWith respect to the version of gcc that I used for the above,\n\n]$ gcc --version\ngcc (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nOn Friday I was running things on a machine that had two different versions of the gcc runtime, so to isolate the problems I am now compiling, building, linking on a machine that has only the gcc compiler mentioned above.\n\nIn any case, I have integrated rocksdb with our app and things seem to work fine. What is the \u201cmerge test\u201d actually testing?\n\nThanks,\n\nEthan.\n\nFrom: Igor Canadi [mailto:notifications@github.com]\nSent: Monday, April 14, 2014 10:19 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\n@ehamiltohttps://github.com/ehamilto signal_test is expected (if you run unit tests using the command make check we don't actually run signal_test). merge_test is not expected.\n\nCan you try doing; ./merge_test? That will give us correct line on which the test fails. (if you're running optimized code, our stack trace seems off)\n\nThanks!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40392804.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40400441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40402259", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40402259", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40402259, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-14T18:39:20Z", "updated_at": "2014-04-14T18:39:20Z", "author_association": "NONE", "body": "For the one that passes (ie, debug mode),\n\nmake clean; make dbg\n\nFor the one that doesn\u2019t ,\n\nmake release\n\nFrom: Igor Canadi [mailto:notifications@github.com]\nSent: Monday, April 14, 2014 11:35 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nCan you send me the exact line how you compiled merge_test?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40401715.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40402259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40406943", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40406943", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40406943, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-14T19:22:03Z", "updated_at": "2014-04-14T19:22:03Z", "author_association": "NONE", "body": "That was fast :).\n\nOne quick question. Was this an issue with the example code, build process or something that affected the core of rocksdb?\n\nThanks,\n\nEthan. \n\n---\n\nFrom: Igor Canadi [notifications@github.com]\nSent: Monday, April 14, 2014 11:43 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI'm able to reproduce, thanks for the report, we'll fix this asap\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40402735.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40406943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40407117", "html_url": "https://github.com/facebook/rocksdb/issues/117#issuecomment-40407117", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/117", "id": 40407117, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-14T19:23:41Z", "updated_at": "2014-04-14T19:23:41Z", "author_association": "NONE", "body": "Never mind, I see that the issue was with the example code from the fix.\n\nThanks for getting it fixed so quickly.\n\nBest,\n\nEthan. \n\n---\n\nFrom: Ethan Hamilton\nSent: Monday, April 14, 2014 12:21 PM\nTo: facebook/rocksdb; facebook/rocksdb\nCc: Ethan Hamilton\nSubject: RE: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nThat was fast :).\n\nOne quick question. Was this an issue with the example code, build process or something that affected the core of rocksdb?\n\nThanks,\n\nEthan.\n\n---\n\nFrom: Igor Canadi [notifications@github.com]\nSent: Monday, April 14, 2014 11:43 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI'm able to reproduce, thanks for the report, we'll fix this asap\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40402735.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40407117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694842", "html_url": "https://github.com/facebook/rocksdb/issues/144#issuecomment-127694842", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/144", "id": 127694842, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:36Z", "updated_at": "2015-08-04T18:05:36Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43151761", "html_url": "https://github.com/facebook/rocksdb/issues/149#issuecomment-43151761", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/149", "id": 43151761, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T23:38:01Z", "updated_at": "2014-05-14T23:38:01Z", "author_association": "NONE", "body": "Thanks Igor!\n\nWe are using both disk and SSD. The write rate is pretty intensive, and it resembles the scenario called \u201cBulk Load of keys in Random Order\u201d here (the rate is also in the tens of MB/s) ,\n\nhttps://github.com/facebook/rocksdb/wiki/Performance-Benchmarks\n\nWould you mind to be a bit more specific about how to set the options to enable this scenario? Now I am using,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            rocksdb::Status status = rocksdb::DB::Open(options, \"directory\", &m_rdb);\n```\n\nWould this work,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            options. target_file_size_base = 200; // Do I put 200 or 200000000?\n\n                            options.max_bytes_for_level_base = 512; // Do I put 512 or 512000000?\n\n                            rocksdb::Status status = rocksdb::DB::Open(options, \"directory\", &m_rdb);\n```\n\nThank you in advance!\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 4:23 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are the optimal parameters? (#149)\n\nAlso set max_bytes_for_level_base to 512MB. Default is too small, it's 10MB.\n\nWe are planning to write tuning book that should make this much easier. :)\n\nWhat's your write rate? SSD or disk?\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/rocksdb/issues/149#issuecomment-43150370 .  https://github.com/notifications/beacon/7267817__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxNTcyODk2NiwiZGF0YSI6eyJpZCI6MzIyNTU4MDR9fQ==--18c34a235ce6978154367f84bb6eda901d447d1b.gif \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43151761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43152657", "html_url": "https://github.com/facebook/rocksdb/issues/149#issuecomment-43152657", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/149", "id": 43152657, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T23:43:56Z", "updated_at": "2014-05-14T23:43:56Z", "author_association": "NONE", "body": "Hi there!\n\nTwo of the previous emails went to the \u201cjunk\u201d folder, so I missed them L.\n\nSo, to summarize, are those parameters OK? Or should I set write_buffer_size\nto also 200? Or 64? \n\nWith respect to the question of the disks, in either case (ie SSD or disk) ,\nthe 100 Gb will be contained in a single partition. \n\nThanks,\n\nEthan.\n\nFrom: Ethan Hamilton [mailto:ehamilto@tibco.com] \nSent: Wednesday, May 14, 2014 4:38 PM\nTo: 'facebook/rocksdb'\nSubject: RE: [rocksdb] I want to run a test on a 100 Gb dataset, what are\nthe optimal parameters? (#149)\n\nThanks Igor!\n\nWe are using both disk and SSD. The write rate is pretty intensive, and it\nresembles the scenario called \u201cBulk Load of keys in Random Order\u201d here (the\nrate is also in the tens of MB/s) ,\n\nhttps://github.com/facebook/rocksdb/wiki/Performance-Benchmarks\n\nWould you mind to be a bit more specific about how to set the options to\nenable this scenario? Now I am using,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            rocksdb::Status status =\n```\n\nrocksdb::DB::Open(options, \"directory\", &m_rdb);\n\nWould this work,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            options. target_file_size_base = 200; // Do\n```\n\nI put 200 or 200000000?\n\n```\n                            options.max_bytes_for_level_base = 512; //\n```\n\nDo I put 512 or 512000000?\n\n```\n                            rocksdb::Status status =\n```\n\nrocksdb::DB::Open(options, \"directory\", &m_rdb);\n\nThank you in advance!\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 4:23 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are\nthe optimal parameters? (#149)\n\nAlso set max_bytes_for_level_base to 512MB. Default is too small, it's 10MB.\n\nWe are planning to write tuning book that should make this much easier. :)\n\nWhat's your write rate? SSD or disk?\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/rocksdb/issues/149#issuecomment-43150370 .\n<https://github.com/notifications/beacon/7267817__eyJzY29wZSI6Ik5ld3NpZXM6Qm\nVhY29uIiwiZXhwaXJlcyI6MTcxNTcyODk2NiwiZGF0YSI6eyJpZCI6MzIyNTU4MDR9fQ==--18c3\n4a235ce6978154367f84bb6eda901d447d1b.gif> \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43152657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43166001", "html_url": "https://github.com/facebook/rocksdb/issues/149#issuecomment-43166001", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/149", "id": 43166001, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-15T03:52:39Z", "updated_at": "2014-05-15T03:52:39Z", "author_association": "NONE", "body": "Thanks!\n\nI figured the values indeed looking at the examples,\n\n```\n                            rocksdb::Options options;\n\n                            options.write_buffer_size = 256*1024*1024;\n\n                            options.target_file_size_base  = 256*1024*1024;\n\n                            options.max_bytes_for_level_base = 512*1024*1024;\n\n                            options.create_if_missing = true;\n```\n\nApparently, the following is not available in the version that I have (which is from a couple of months back)\n\n  options.IncreaseParallelism();\n\n  options.OptimizeLevelStyleCompaction();\n\nI am running the test and so far so good. It is more to get a feel of what kind of performance we can expect from RocksDB. Feel free to close this issue.\n\nThank you for taking your time addressing my questions. \n\nBest,\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 8:47 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are the optimal parameters? (#149)\n\nTo get more information on what specific options mean, take a look at include/rocksdb/options.h. Documentation there is somewhat verbose.\n\nAlso, look at implementations of the functions I mentioned above. You might want to consider Universal style compaction if your write rate is really high (tens of MB/s). This wiki page does a good job of describing Universal style compaction: https://github.com/facebook/rocksdb/wiki/Rocksdb-Architecture-Guide\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/rocksdb/issues/149#issuecomment-43165761 .Image removed by sender.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43166001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694843", "html_url": "https://github.com/facebook/rocksdb/issues/172#issuecomment-127694843", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/172", "id": 127694843, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:36Z", "updated_at": "2015-08-04T18:05:36Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694844", "html_url": "https://github.com/facebook/rocksdb/issues/192#issuecomment-127694844", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/192", "id": 127694844, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:37Z", "updated_at": "2015-08-04T18:05:37Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694846", "html_url": "https://github.com/facebook/rocksdb/issues/210#issuecomment-127694846", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/210", "id": 127694846, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:37Z", "updated_at": "2015-08-04T18:05:37Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694848", "html_url": "https://github.com/facebook/rocksdb/issues/261#issuecomment-127694848", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/261", "id": 127694848, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:37Z", "updated_at": "2015-08-04T18:05:37Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694850", "html_url": "https://github.com/facebook/rocksdb/issues/280#issuecomment-127694850", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/280", "id": 127694850, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:37Z", "updated_at": "2015-08-04T18:05:37Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694853", "html_url": "https://github.com/facebook/rocksdb/issues/291#issuecomment-127694853", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/291", "id": 127694853, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:38Z", "updated_at": "2015-08-04T18:05:38Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694854", "html_url": "https://github.com/facebook/rocksdb/issues/297#issuecomment-127694854", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/297", "id": 127694854, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:38Z", "updated_at": "2015-08-04T18:05:38Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694858", "html_url": "https://github.com/facebook/rocksdb/issues/298#issuecomment-127694858", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/298", "id": 127694858, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:38Z", "updated_at": "2015-08-04T18:05:38Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694859", "html_url": "https://github.com/facebook/rocksdb/issues/300#issuecomment-127694859", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/300", "id": 127694859, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-04T18:05:39Z", "updated_at": "2015-08-04T18:05:39Z", "author_association": "NONE", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60173960", "html_url": "https://github.com/facebook/rocksdb/issues/359#issuecomment-60173960", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/359", "id": 60173960, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-22T23:50:53Z", "updated_at": "2014-10-22T23:50:53Z", "author_association": "NONE", "body": "thread apply all bt full\n\nThread 34 (Thread 0x7f68d6d54700 (LWP 28441)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=8, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 8\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d6d54700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d6d54700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088257627904, 1613666937563492894, 0, 0, 140088257628608, 140088257627904, -1678355924575342050, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 33 (Thread 0x7f68da95a700 (LWP 28435)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=2, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 2\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68da95a700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68da95a700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088320567040, 1613666937563492894, 0, 0, 140088320567744, 140088320567040, -1678346584095215074, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 32 (Thread 0x7f68ddb5f700 (LWP 28429)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=60675866, __nbytes=4006, __buf=0x7f68ddb5cd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6864a984e0, offset=60675866, n=4006, result=0x7f68ddb5cd10, scratch=0x7f68ddb5cd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68ddb5cd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6864a984e0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68ddb5cd10, buf=buf@entry=0x7f68ddb5cd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68ddb5e150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002?\ufffd\\231\\003\\355\\021\\343\\363\\233\\265#\\273y\\334_\\316Yo\\202\\252\\001\\000\\000\\000\\000\\000\\000\\000b\\234\\217\\000\u06623\\350\\343\u04a5\\037\\320\ufffd\\230\\246\\360\\274\\276\\020\\254K\\366>\\177\\200\\206\\347\\247B\\324:\\274\\312\\373\\277\\367~\\>\\036\\t\\n\\230\\000lO\\324V?\\273\\365\\024\\223\\a\\331,s\\244\\250\\347noo\\203\\064.F\\361;{,B\\006\\204RR\\261\\327\\344\\272\\065 \\200l\\234\\234\\205\\063\\343I<\\a0\\306(\\364i>\\355\\271\\302\\361\\270F~\\037\\324\\303s{\\245W\\022\\061m\\002m\\365\\033\\221HKt\ufffd\\232M\\037\\t\u0727Er}\\307b\\234\\257\\036e\\037\\272\\224\\\"\\303(\\274\\222\\215\u043a\\006H\\207K\\276I6\\t\\021Z\\247\\356\\353_j\\022\\203\\332\\344\\315G8\\212\\\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68ddb5e150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68ddb5e270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6864251600, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68ddb5e4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\344\\265\\335h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\350\\265\\335h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\344\\265\\335h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68ddb5e2a0 \"\\205\\020\\252\\223\\205\\322\\005\ufffd\\210\\221\\277\\t\\232\\256\\367\\034\\200\\346\\265\\335h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\252\\223\\205\\322\\005\ufffd\\210\\221\\277\\t\\232\\256\\367\\034\\200\\346\\265\\335h\\177\\000\\000 \\343\\265\\335h\\177\\000\\000\\000\\343\\265\\335h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 60675866, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6865acdf76 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6864251af0, read_options=..., key=..., handle_context=0x7f68ddb5e6d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a00829a0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68ddb5e510 \"?\ufffd\\231\\336uf\\213)\\336\\020\\304\\065\\263\\353B\\230j\\326\\071\\313\\001\\177c\\251\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"?\ufffd\\231\\336uf\\213)\\336\\020\\304\\065\\263\\353B\\230j\\326\\071\\313\\001\\177c\\251\\t\\000\\000\\000\\021Q\u05ad\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6865acdf70 \"\\232\\256\\367\\034\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6865a77ab0 \"\", restarts_ = 391080, num_restarts_ = 16749, current_ = 353457, restart_index_ = 15141, key_ = {key_ = 0x7f68ddb5e460 \"?\ufffd\\232J\\002\\377\\377\\377\\377\\377\\377\\377_\\271\u04ab\\b\\002\\323\\n\\001\", buf_size_ = 32, key_size_ = 12, space_ = \"?\ufffd\\232J\\002\\377\\377\\377\\377\\377\\377\\377_\\271\u04ab\\b\\002\\323\\n\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6865acdf70 \"\\232\\256\\367\\034\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68ddb5e6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68642519a0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68ddb5ea60, status=status@entry=0x7f68ddb5ea70, merge_context=merge_context@entry=0x7f68ddb5e810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68ddb5ea60, merge_operator = 0x0, merge_context = 0x7f68ddb5e810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 166, start_index_in_curr_level_ = 166, user_key_ = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c41c0\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68ddb5ea60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68ddb5e8c8 \"\\034?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", kstart_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", end_ = 0x7f68ddb5e8e5 \"\\021Q\u05ad\\251\\217\\240)\\002\\235\\256\\021\\n\", space_ = \"\\034?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\\000\\000\\000\\021Q\u05ad\\251\\217\\240)\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\240h\\177\\000\\000\\200\\006\", '\\000' <repeats 14 times>, \"t\\006\\000\\000\\000\\000\\000\\000\\300\\371\\265\\335h\\177\\000\\000\\000\\367\\265\\335h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\026J\\\"\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\026J\\\"\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68ddb5ea60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68ddb5ea60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68ddb5f700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68ddb5f700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088373016320, 1613666937563492894, 0, 0, 140088373017024, 140088373016320, -1678330916591390178, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 31 (Thread 0x7f68d7755700 (LWP 28440)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=7, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 7\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d7755700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d7755700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088268117760, 1613666937563492894, 0, 0, 140088268118464, 140088268117760, -1678352353846906338, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 30 (Thread 0x7f68d8b57700 (LWP 28438)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=5, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 5\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d8b57700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d8b57700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088289097472, 1613666937563492894, 0, 0, 140088289098176, 140088289097472, -1678341907412700642, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 29 (Thread 0x7f68de560700 (LWP 28428)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=3814409, __nbytes=4007, __buf=0x7f68de55dd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68687e3110, offset=3814409, n=4007, result=0x7f68de55dd10, scratch=0x7f68de55dd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68de55dd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68687e3110, footer=..., options=..., handle=..., contents=contents@entry=0x7f68de55dd10, buf=buf@entry=0x7f68de55dd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68de55f150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\236\\305t\\276\\343\\273\\324\\r\\367\\221\\v\\270e\\\"\\257\u01f9\\312\\004\\266\\001\\000\\000\\000\\000\\000\\000\\000\\371\ufffd\\231R9\\233\\025\u06ff\\245\\240:\\b\\262\\243\\070i\\022\\275\\364P\\037\\022\\204\\313\\335v\\322_E\\206\\025\\204}6e\\301\\355\\064\\214\\t\\320\\371\\036\\374\\065\\037P\\000\\256\\343\\256\\361=g\\341M\\354\\277\\067\\352\\367M)\\312E(\\372\\004\\213s9p\\260\\020&\\373\\300\\305\\067{\\326:jz\\207\\232\\352Iq>\\264\\374\\313\\345\\071+\\264o~^=W\\244\\025\\346\\272}\\027\\vX\\204\\333\\346?\\312\\067\\022l\\342\\362B\\372\\273\\021\\200\\200\\315\\t8]\\307q\\225\\237\\020U\\305x\\222\\236Sx\\300\\037\\va\\a\\b\ufffd\\207\\204\\364\\241\\200Y\\037i\\366\\310\\004\\261\\037\\273\\223rI\\016\\cC\\325\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68de55f150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68de55f270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6868488bd0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68de55f4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\364U\\336h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\370U\\336h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\364U\\336h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68de55f2a0 \"\\205\\020\ufffd\\222\\205\\322\\005\\270\\223\\221\\277\\t\\211\\350\\350\\001\\200\\366U\\336h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\222\\205\\322\\005\\270\\223\\221\\277\\t\\211\\350\\350\\001\\200\\366U\\336h\\177\\000\\000 \\363U\\336h\\177\\000\\000\\000\\363U\\336h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 3814409, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f686954827e \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68684890c0, read_options=..., key=..., handle_context=0x7f68de55f6d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a4073690, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68de55f510 \"\\236\ufffd\\204\\335\\061\\063S\\031_\\206\\270v\\030\\353\\242\\334Y'\\345m\\001\\327&\\003\\n\", buf_size_ = 32, key_size_ = 0, space_ = \"\\236\ufffd\\204\\335\\061\\063S\\031_\\206\\270v\\030\\353\\242\\334Y'\\345m\\001\\327&\\003\\n\\000\\000\\000&f\", <incomplete sequence \\333>}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6869548278 \"\\211\\350\\350\\001\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6869542d50 \"\", restarts_ = 389023, num_restarts_ = 16750, current_ = 21785, restart_index_ = 951, key_ = {key_ = 0x7f68de55f460 \"\\236\\305vS\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\236\\305vS\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\364U\\336h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6869548278 \"\\211\\350\\350\\001\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68de55f6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6868488f70\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68de55fa60, status=status@entry=0x7f68de55fa70, merge_context=merge_context@entry=0x7f68de55f810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68de55fa60, merge_operator = 0x0, merge_context = 0x7f68de55f810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 557, start_index_in_curr_level_ = 557, user_key_ = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c9748\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68de55fa60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68de55f8c8 \"\\034\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", kstart_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", end_ = 0x7f68de55f8e5 \"&fR\\333Dk\\t\", space_ = \"\\034\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\\000\\000\\000&fR\\333Dk\\t\\000\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\244h\\177\\000\\000\\260\\a\", '\\000' <repeats 14 times>, \"\\250\\a\\000\\000\\000\\000\\000\\000\\300\\tV\\336h\\177\\000\\000\\000\\aV\\336h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\006\\252!\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\006\\252!\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68de55fa60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68de55fa60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68de560700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68de560700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088383506176, 1613666937563492894, 0, 0, 140088383506880, 140088383506176, -1678337239320120802, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 28 (Thread 0x7f68def61700 (LWP 28427)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=58310206, __nbytes=4007, __buf=0x7f68def5ed40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6840790b90, offset=58310206, n=4007, result=0x7f68def5ed10, scratch=0x7f68def5ed40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68def5ed40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6840790b90, footer=..., options=..., handle=..., contents=contents@entry=0x7f68def5ed10, buf=buf@entry=0x7f68def5ed40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68def60150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\005w\\202\\\"O\\253\\001\\334\\321\\324\\332\\346\\374\\277\\334BcS\ufffd\\205\\001\\000\\000\\000\\000\\000\\000\\000\\327\\f\\b\\032\\037@\\210(\\264\\210\\364i\\277\\036g\\335)!\ufffd\\236cPI\\211\\236b\\354Or+\\247^\\261\\327x\\360X\\362aP\\376\\000g\\357\\377\\240\\201;\\\"\\020++;\\247\\242\\354Bvi\\v$\\224\\002\\301\\376\\216+Q.\u013e\\033B^\\274l\\277\\313\\004\\276Q\\\"\\247\\210s\u06bb\ufffd\\220\\024\\244\\331\u01f5\\212\\310B\\375\\374\\206\\233\\\\204k\\260\\006\\270\\062\\316\\000\\256\\220\\030\\243\\311P\\262~%9\\242>w4\\037\ufffd\\216\\204\\304e\\340\\374!\\005\\230\\201b`+\\375\\224\\017e\\305\u0629x\\027q\\203\\355\\031\\337\\360\\247\\366\ufffd\\231b\\373r\\273\\033\\245D/\\340Jdg\\327s\\225\\036\\061\\277\\375\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68def60150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68def60270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6840004b60, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68def604b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\004\\366\\336h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\b\\366\\336h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\004\\366\\336h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68def602a0 \"\\205\\020\\251\\222\\205\\322\\005\\263\\223\\221\\277\\t\\276\\374\\346\\033\\200\\006\\366\\336h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\251\\222\\205\\322\\005\\263\\223\\221\\277\\t\\276\\374\\346\\033\\200\\006\\366\\336h\\177\\000\\000 \\003\\366\\336h\\177\\000\\000\\000\\003\\366\\336h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 58310206, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6841898a71 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6840004fc0, read_options=..., key=..., handle_context=0x7f68def606d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f688406a880, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68def60510 \"\\005w\\214\ufffd\\233\\220\\356\\251X\\211_\\t\\277\\243\\372\\210:\\273\\363\\346\\001\\347\\373\\004\\n\", buf_size_ = 32, key_size_ = 0, space_ = \"\\005w\\214\ufffd\\233\\220\\356\\251X\\211_\\t\\277\\243\\372\\210:\\273\\363\\346\\001\\347\\373\\004\\n\\000\\000\\000J^\\345t\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6841898a6b \"\\276\\374\\346\\033\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68418461c0 \"\", restarts_ = 388915, num_restarts_ = 16749, current_ = 338076, restart_index_ = 14551, key_ = {key_ = 0x7f68def60460 \"\\005w\\203\\315\\002\\377\\377\\377\\377\\377\\377\\377\\022\\274\\262\\274\\234b\\232U\\001\", buf_size_ = 32, key_size_ = 12, space_ = \"\\005w\\203\\315\\002\\377\\377\\377\\377\\377\\377\\377\\022\\274\\262\\274\\234b\\232U\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6841898a6b \"\\276\\374\\346\\033\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68def606d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6841eac990\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68def60a60, status=status@entry=0x7f68def60a70, merge_context=merge_context@entry=0x7f68def60810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68def60a60, merge_operator = 0x0, merge_context = 0x7f68def60810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 13, start_index_in_curr_level_ = 13, user_key_ = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c2048\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68def60a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68def608c8 \"\\034\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", kstart_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", end_ = 0x7f68def608e5 \"J^\\345t(E\\225\\365\\002\\235\\256\\021\\n\", space_ = \"\\034\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\\000\\000\\000J^\\345t(E\\225\\365\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\204h\\177\\000\\000\\260\\a\", '\\000' <repeats 14 times>, \"\\250\\a\\000\\000\\000\\000\\000\\000\\300\\031\\366\\336h\\177\\000\\000\\000\\027\\366\\336h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\366\\t!\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\366\\t!\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68def60a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68def60a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68def61700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68def61700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088393996032, 1613666937563492894, 0, 0, 140088393996736, 140088393996032, -1678338066638196194, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 27 (Thread 0x7f68e496a700 (LWP 28418)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=346818, __nbytes=4131, __buf=0x7f68e4967d50, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68540190e0, offset=346818, n=4131, result=0x7f68e4967d20, scratch=0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4131\nptr = 0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68540190e0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e4967d20, buf=buf@entry=0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e4969160, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"`$\\366\\200\\277\\031w\\206\\001\\000\\000\\000\\000\\000\\000\\000n\\317\\344\\260\\032m\\343\\237Q\\370U#n\\221]\\360v\\230t\\310\\001\\276\ufffd\\223\ufffd\\210\\253!\\276 \\343C_1\\232\\220\\t\\233\\350~Z\\t\\274\\071\u02efu\\362\\237\\251\\355 \\315T\\366n\\354\\064\\327\\273<\\205X}a\\177\\256D\\016\\272\\030\\221\\303\\361\\033\\fL\\250c\\214\\337\\347@G\\266\\216{\\031\\374TI:G&oE~\\020\\260\\257&\\324\\b\\242\\211\\375Y6!(\\372\\255\\373\ufffd\\214\ufffd\\246@\\366\\343\\036~\\277eua\\023\\032@n\\277J\\226\\243\\062}e\\251\\261`\\025\\351ptF\\365\\260\\036\\364A\\005{U\\213\\232\\271\\366SS\\016\\266\\223s\\261\\362(H]\\004\\371\\307\\373e\\027\\355\ufffd\\200.g\\021\\004/\ufffd\\213G\\030\\n\\355gGt\\244\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e4969160, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e4969280, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = false, heap_allocated = false, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f685400acf0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e49694c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\272A|h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000\ufffd\\230\\226\\344h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000\\020\\224\\226\\344h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e49692b0 \"\\205\\020\\267\\214\\205\\322\\005\\377\\275\\220\\277\\t\\302\\225\\025\", size_ = 15}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\267\\214\\205\\322\\005\\377\\275\\220\\277\\t\\302\\225\\025\\000\\220\\226\\226\\344h\\177\\000\\000\\060\\223\\226\\344h\\177\\000\\000\\020\\223\\226\\344h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 346818, size_ = 4126, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6854b85fbc \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f685400b160, read_options=..., key=..., handle_context=0x7f68e49696e0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f687c3f48e0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e4969520 \"\\277\\031w\\206\\001\", buf_size_ = 32, key_size_ = 0, space_ = \"\\277\\031w\\206\\001\\000\\000\\000\\000\\000\\000\\000\\065\\267 \\220\\340\\347\\003|h\\177\\000\\000\\000\\001\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6854b85fb7 \"\\302\\225\\025\\236 \", size_ = 5}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0xc00200000, arg2 = 0x600000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6854b85430 \"\", restarts_ = 612956, num_restarts_ = 14508, current_ = 2914, restart_index_ = 70, key_ = {key_ = 0x7f687c41ba60 \"test_data/dup545796.data,0\\001\\231\\276#\\001\", buf_size_ = 34, key_size_ = 34, space_ = \"\\260\\224\\226\\344h\\177\\000\\000\\031\\061J\\000\\000\\000\\000\\000\\300\\224\\226\\344h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6854b85fb7 \"\\302\\225\\025\\236 \", size_ = 5}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e49696e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6854007730\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e4969a70, status=status@entry=0x7f68e4969a80, merge_context=merge_context@entry=0x7f68e4969820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 34}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}, value_found = 0x0, value = 0x7f68e4969a70, merge_operator = 0x0, merge_context = 0x7f68e4969820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 438, start_index_in_curr_level_ = 438, user_key_ = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}, ikey_ = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 34}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}\nf = 0x7f68484c7d40\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e4969a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e49698d8 \"\\\"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", end_ = 0x7f68e49698fb \"\", space_ = \"\\\"test_data/dup545795.data,0\\002\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377\\200\\232\\226\\344h\\177\\000\\000\\377\\377\\377\\377h\\177\\000\\000\\200\\232\\226\\344h\\177\\000\\000\\200\\232\\226\\344h\\177\\000\\000 \\000\\000|h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000K\\000\\000\\000\\000\\000\\000\\000Afi\\033\\227\\200\\377\\377\\006\\000\\000\\000h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\061\", '\\000' <repeats 15 times>, \"[\", '\\000' <repeats 23 times>, \"n\\000\\000\\000w\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e4969a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e4969a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f4f2 in store::Store::get(std::string const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ee52 in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e496a700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e496a700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088488404736, 1613666937563492894, 0, 0, 140088488405440, 140088488404736, -1678386175103749602, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 26 (Thread 0x7f68dc75d700 (LWP 28431)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=14377810, __nbytes=4008, __buf=0x7f68dc75ad40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6840d66180, offset=14377810, n=4008, result=0x7f68dc75ad10, scratch=0x7f68dc75ad40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68dc75ad40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6840d66180, footer=..., options=..., handle=..., contents=contents@entry=0x7f68dc75ad10, buf=buf@entry=0x7f68dc75ad40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68dc75c150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002`\\324i\\232\u04bd.4\\242KZ]\\327X\\341\\207)\\253\\203\\026\\001\\350\ufffd\\212\\t\\000\\000\\000\\004\\323\ufffd\\235)\\314]LHM\\345\\347\\256U\\317\\065\\330#\\305\\t\\017,\\005\\322A\\302\\200$\\220Z\\036j\\016\\272cz\\320\\v\\306\ufffd\\227\u0373\\n\\244\\255{\\341i\\311\\r*8\\342\\r\\357\\366\\020E\\317'\\304s\\364o\u01be\\003\\377J\\271\\243\\277\\200\\370\\255Q=\\341pYP\\206\ufffd\\232ox\\377\\267\\215\\032+\\v\\277\\234`}\\231\\217\\a\\302\\321)\\330\\331\\b\\243(\\224\\061\\255\\316\\330\\332\\031\\213\\232\\247\\071|\\022\u01ae;\\000\\003\\302\\301\\024\\061\\310\\332Zv{\\226\\255v\\233w|\\030\\210\\064\\337h\\253\\002Z\\\\351\\242\\346\\200d\\255\\236}\\370\\071:G\\302:\\016\\373\\302\\020\\262p\\v>LV\\356\\321\u0675\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dc75c150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dc75c270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6841eabe30, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68dc75c4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\304u\\334h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\310u\\334h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\304u\\334h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68dc75c2a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\227\\212\\221\\277\\t\\322\\306\\355\\006\\200\\306u\\334h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\227\\212\\221\\277\\t\\322\\306\\355\\006\\200\\306u\\334h\\177\\000\\000 \\303u\\334h\\177\\000\\000\\000\\303u\\334h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 14377810, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f684170bb86 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6841eac2a0, read_options=..., key=..., handle_context=0x7f68dc75c6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68b4001ed0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68dc75c510 \"`\\324l@;\\241\\315A\\033\\352F\\205\\235\\234[\\022\\027PM\\305\\001A\\261d\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"`\\324l@;\\241\\315A\\033\\352F\\205\\235\\234[\\022\\027PM\\305\\001A\\261d\\t\\000\\000\\000C\\316\\005r\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f684170bb80 \"\\322\\306\\355\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68416f7900 \"\", restarts_ = 391294, num_restarts_ = 16749, current_ = 82545, restart_index_ = 3587, key_ = {key_ = 0x7f68dc75c460 \"`\\324k.\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"`\\324k.\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\304u\\334h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f684170bb80 \"\\322\\306\\355\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68dc75c6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6840efaa80\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68dc75ca60, status=status@entry=0x7f68dc75ca70, merge_context=merge_context@entry=0x7f68dc75c810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68dc75ca60, merge_operator = 0x0, merge_context = 0x7f68dc75c810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 251, start_index_in_curr_level_ = 251, user_key_ = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c5458\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dc75ca60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68dc75c8c8 \"\\034`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", kstart_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", end_ = 0x7f68dc75c8e5 \"C\\316\\005r\\216\\235\\354\\064\\002\\235\\256\\021\\n\", space_ = \"\\034`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\\000\\000\\000C\\316\\005r\\216\\235\\354\\064\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\264h\\177\\000\\000\\220\\b\", '\\000' <repeats 14 times>, \"\\210\\b\\000\\000\\000\\000\\000\\000\\300\\331u\\334h\\177\\000\\000\\000\\327u\\334h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A6\\212#\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\066\\212#\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dc75ca60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68dc75ca60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68dc75d700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68dc75d700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088352036608, 1613666937563492894, 0, 0, 140088352037312, 140088352036608, -1678332566932573666, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 25 (Thread 0x7f68e0363700 (LWP 28425)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=26932090, __nbytes=4008, __buf=0x7f68e0360d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68344f0ca0, offset=26932090, n=4008, result=0x7f68e0360d10, scratch=0x7f68e0360d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68e0360d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68344f0ca0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e0360d10, buf=buf@entry=0x7f68e0360d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e0362150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\u02ba\\377\\ns\\as\\250\\211X[\\261\\216\\277\\260,\\022U3\\266\\001F\\231=\\t\\000\\000\\000\\350B\\226\\Vt\\213G\\206\\000]\\301\\263\\261\\226\\253\\226\\246\\217UN\\235\\336\\024\\002o9\\347\\211.u\\354\\330X=U\\222\\200\\226\\203!kc\\332`_[#\\355\\355+\\n\\362\\304\\355\\253a\\370\\303\\ad\\222\\003\\277\\016\\251w\\332<\\307\\333a\\216})\\236\\036\\234\\316\ufffd\\211\u0760P\\315\\a~\\365\\336\\346^}\\241WB\\320\\323\\335m\\215]V\ufffd\\222 c\\231\\061sM\\344\\212\\365\\066\ufffd\\232\\r,\\022\u036bG%\\265\\214\\322\\342\\241\\367\\030\\210\\354\\026\\357oz\\346<O/.,K{cb\\263\\001u\\332]\\222<\\223`7\\375\\203\\311\\305 \\r@\\234~\\347\\303\\034~\\006\\070\\347Y\\232\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0362150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0362270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68349de5b0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e03624b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`$6\\340h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311(6\\340h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000$6\\340h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e03622a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\223\\212\\221\\277\\t\\372\\346\\353\\f\\200&6\\340h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\223\\212\\221\\277\\t\\372\\346\\353\\f\\200&6\\340h\\177\\000\\000 #6\\340h\\177\\000\\000\\000#6\\340h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 26932090, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835f9faae \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68349dea30, read_options=..., key=..., handle_context=0x7f68e03626d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f6888093d70, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e0362510 \"\u02bb\\004\\241\\037-\\262/\\037\\252@\\b\\221\\277\\256-\\253\\367\\232\\220\\001%\\261\\330\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\u02bb\\004\\241\\037-\\262/\\037\\252@\\b\\221\\277\\256-\\253\\367\\232\\220\\001%\\261\\330\\t\\000\\000\\000\\024c@?\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835f9faa8 \"\\372\\346\\353\\f\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835f79740 \"\", restarts_ = 391621, num_restarts_ = 16749, current_ = 156505, restart_index_ = 6720, key_ = {key_ = 0x7f68e0362460 \"\u02bb\\004{\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\u02bb\\004{\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260$6\\340h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835f9faa8 \"\\372\\346\\353\\f\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e03626d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68349de950\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e0362a60, status=status@entry=0x7f68e0362a70, merge_context=merge_context@entry=0x7f68e0362810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e0362a60, merge_operator = 0x0, merge_context = 0x7f68e0362810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 669, start_index_in_curr_level_ = 669, user_key_ = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484cafc8\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0362a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e03628c8 \"\\034\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", end_ = 0x7f68e03628e5 \"\\024c@?y\\244\\372\\342\\002\\235\\256\\021\\n\", space_ = \"\\034\u02bb\\004`_\\004\\223_w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\\000\\000\\000\\024c@?y\\244\\372\\342\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\210h\\177\\000\\000\\360\\a\", '\\000' <repeats 14 times>, \"\\340\\a\\000\\000\\000\\000\\000\\000\\300\\071\\066\\340h\\177\\000\\000\\000\\067\\066\\340h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\326\\311\\037\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\326\\311\\037\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0362a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e0362a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e0363700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e0363700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088414975744, 1613666937563492894, 0, 0, 140088414976448, 140088414975744, -1678393590901657058, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 24 (Thread 0x7f68e1765700 (LWP 28423)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=55330114, __nbytes=4008, __buf=0x7f68e1762d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6835202360, offset=55330114, n=4008, result=0x7f68e1762d10, scratch=0x7f68e1762d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68e1762d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6835202360, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e1762d10, buf=buf@entry=0x7f68e1762d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e1764150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\312}e\\243\\030'\\207\\017YZ\\244\\034F\\rS\\246\\003\\354P\\333\\001\\000\\000\\000\\000\\000\\000\\000\\362\\250+\\267Ld\\231\\206P\\243\\071\\005\\a\\253\\372\\220\\342\\347M\\255`~\\311\\065$\\247\\355\\004\\a\\357I\\242\\263\\177\\263+\ufffd\\227\\223\\314\\325\\372h\\363\\355ag\\205|b\\200\\030\\302\\060%\\030\\061oD\\221\\201\\nV\\231\ufffd\\237SJ\\317r\\304N\\212W\\360\\355/\\202\\265\\205\\366\\242\\272e\\\\\\033\\353$\\310&\\227\\\\Z\\272\\227\\001\\374\\363\\322\u04b0{\\\"Z\\024\\325\\034\\\"P\\002\\242\\324\\363\\272]{Y\\foo\\222\\365\\314\\356\\334\\343\\027\\274\\361\\\\<\\341\\065\\345|6\\331\\301\\224\\375\\245\\227\\021\\347\\361\\261\\244\\037\\367\\002IU\\353RW\\006J[\\017{f\\246P\\031u\\236\\201\\357\\254\\017V\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e1764150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e1764270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68344eff00, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e17644b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`Dv\\341h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311Hv\\341h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000Dv\\341h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e17642a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\213\\212\\221\\277\\t\\302\\212\\261\\032\\200Fv\\341h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\213\\212\\221\\277\\t\\302\\212\\261\\032\\200Fv\\341h\\177\\000\\000 Cv\\341h\\177\\000\\000\\000Cv\\341h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 55330114, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835f5854b \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68344f03f0, read_options=..., key=..., handle_context=0x7f68e17646d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f6898064e50, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e1764510 \"\\312}h\\v\\237\ufffd\\232\\326\\003bx\\277$k\\343v\\250Z\\275\\b\\001\ufffd\\206f\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\312}h\\v\\237\ufffd\\232\\326\\003bx\\277$k\\343v\\250Z\\275\\b\\001\ufffd\\206f\\t\\000\\000\\000;\\340Y\\223\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835f58545 \"\\302\\212\\261\\032\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835f09ba0 \"\", restarts_ = 390618, num_restarts_ = 16749, current_ = 321942, restart_index_ = 13807, key_ = {key_ = 0x7f68e1764460 \"\\312}g\\027\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\312}g\\027\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260Dv\\341h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835f58545 \"\\302\\212\\261\\032\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e17646d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68344f02a0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e1764a60, status=status@entry=0x7f68e1764a70, merge_context=merge_context@entry=0x7f68e1764810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e1764a60, merge_operator = 0x0, merge_context = 0x7f68e1764810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 668, start_index_in_curr_level_ = 668, user_key_ = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484caf90\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e1764a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e17648c8 \"\\034\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", kstart_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", end_ = 0x7f68e17648e5 \";\\340Y\\223\\365\\304\\360v\\002\\235\\256\\021\\n\", space_ = \"\\034\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\\000\\000\\000;\\340Y\\223\\365\\304\\360v\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\230h\\177\\000\\000\\060\\a\", '\\000' <repeats 14 times>, \"\\034\\a\\000\\000\\000\\000\\000\\000\\300Yv\\341h\\177\\000\\000\\000Wv\\341h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\266\\211\\036\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\266\\211\\036\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e1764a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e1764a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e1765700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e1765700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088435955456, 1613666937563492894, 0, 0, 140088435956160, 140088435955456, -1678391944855440866, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 23 (Thread 0x7f68d8156700 (LWP 28439)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=33235625, __nbytes=4008, __buf=0x7f68d81528a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68501751d0, offset=33235625, n=4008, result=0x7f68d8152870, scratch=0x7f68d81528a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d81528a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68501751d0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d8152870, buf=buf@entry=0x7f68d81528a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d8156628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d8153cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\345\\244s\\211\\307\\346\\362Xf\\212t\\232 \\303\\342\\220\\373\\343\\023\\240\\001\\000\\000\\000\\000\\000\\000\\000!X$\\034JfQ|e\\034<N\\367\\000C\\373\\027^\\340cZ\\023\\360\\065f*Jo]`\\347\\027\u0728\\003B\\355X\\333\\027\\257g\\024r\\027&sT<\\241\\242\u05e9\\341\\300*\\252\\217\\244\\222\\234p\\025y\\301\\254n\\f\\266\\272\\313\\030\ufffd\\217\\v\\363\\202\\302\\235\\017\\264\\252\\202\\360\uc834F7^\\200\\307\\364\\233k\\320\\024\\265\\325ql\\251\\033\\237\\065\\351\\066\\321\\331\\302\\065\\270h\\263pI\\267\\314\\327hY\\347\\251@\ufffd\\221\\372vNH\\376\u07e8\\327\\a*\\260\\315'\\220\\244-\u0623\\177\\366x&L\\347\\215x `\\240$\\221?j\\324|\\370A\u03f5\\322k\\355\\354\\234\\364\\065\\272\\035;|\u0168\\030\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d8153cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d8153d60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6850555e10, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 33235625, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68525f7b70 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f683c3536b0) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f68525f7b6a \"\\251\\305\\354\\017\\243\\037\", size_ = 6}\nthis = 0x7f683c3536b0\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f683c3536b0) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f683c48d800) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f683c48d7b0) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f683c85d600) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f683c85d5a0) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168886022, earliest_snapshot=earliest_snapshot@entry=168886022, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d81544f8: 0, input=input@entry=0x7f683c85d5a0, compact=compact@entry=0x7f683c85e950, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f683c353890 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\001\", size_ = 28}\nvalue = {data_ = 0x7f683c3682a9 \"\\237\\230Wu\\346g\\366\\367\\336t\\244\\f\\242,\u0638\\024G\\217`\\224\\223\u0173|e\\037\\357Fr\\200\\273\\264j\\241\\257\", size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168886022\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d8154228 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\", buf_size_ = 32, key_size_ = 20, space_ = \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\000\\000\\000\\000p\\267\\205<h\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f683c353890 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 849\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d8154268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000x\\270\\205<h\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000p\\267\\205<h\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f683c85e950, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168886022\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1970 Base level 2, seek compaction:0, inputs: [11262(64MB)], [9953(64MB) 9954(64MB) 9955(64MB) 9956(64MB) 9957(64MB) 9958(64MB) 9959(64MB) 9996(38MB) 8756(64MB) 8757(64MB)]\\000\\062\\066(43MB)]\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f683c85d5a0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f683c85b770\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168886022\ntmp = {buffer = \"files[0 11 117 807 0 0 0]\\000\\025\\330h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310H\\025\\330h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310H\\025\\330h\\177\\000\\000\\310H\", <incomplete sequence \\330>}\nis_snapshot_supported = true\nstart_micros = 1413982265885092\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d815522f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:2321\ncompact = 0x7f683c85e950\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f683d24e160\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d8155050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f683c858430, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"9\\250GT\\000\\000\\000\\000O\\201\\r\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.01 slots available 7\\000\\000\\060 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d8155bc8 \"\", aligned_alloc_ptr_ = 0x7f68d81557c8 \"9\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d81553c8, 0x7f68d81555c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=6, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 6\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d8156700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d8156700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088278607616, 1613666937563492894, 0, 0, 140088278608320, 140088278607616, -1678341084389592546, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 22 (Thread 0x7f68dbd5c700 (LWP 28432)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=0, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 0\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68dbd5c700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68dbd5c700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088341546752, 1613666937563492894, 0, 0, 140088341547456, 140088341546752, -1678344933754031586, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 21 (Thread 0x7f68e2b67700 (LWP 28421)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=35783671, __nbytes=5300, __buf=0x7f68b80f09c0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6868000bf0, offset=35783671, n=5300, result=0x7f68e2b660b0, scratch=0x7f68b80f09c0 \"\\370\\a\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 5300\nptr = 0x7f68b80f09c0 \"\\370\\a\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=file@entry=0x7f6868000bf0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e2b660b0, buf=buf@entry=0x7f68b80f09c0 \"\\370\\a\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004c0009 in rocksdb::ReadAndDecompress (file=0x7f6868000bf0, footer=..., options=..., handle=..., result=0x7f68e2b66160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:336\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = 0x7f68b80f09c0 \"\\370\\a\"\n#5 0x00000000004c018b in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2b66160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:362\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2b66280, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = false, heap_allocated = false, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f686876fd70, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e2b664c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"\\340@\\000\\270h\\177\\000\\000\\033\\000\\000\\000\\000\\000\\000\\000\\331h\\266\\342h\\177\\000\\000\\033\\000\\000\\000\\000\\000\\000\\000\\020d\\266\\342h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e2b662b0 \"\\205\\020\\246\\216\\205\\322\\005\\227\\210\\221\\277\\t\\367\\207\\210\\021\\220f\\266\\342h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\246\\216\\205\\322\\005\\227\\210\\221\\277\\t\\367\\207\\210\\021\\220f\\266\\342h\\177\\000\\000\\060c\\266\\342h\\177\\000\\000\\020c\\266\\342h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 35783671, size_ = 5295, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6869973b8e \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6868770150, read_options=..., key=..., handle_context=0x7f68e2b666e0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x0, arg2 = 0x23802a8, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e2b66520 \"\\273\\001%\\337\\001\", buf_size_ = 32, key_size_ = 0, space_ = \"\\273\\001%\\337\\001\\000\\000\\000\\000\\000\\000\\000\\262j\\217d\\256\\213\\033\\270h\\177\\000\\000\\000\\001\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6869973b88 \"\\367\\207\\210\\021\\257)\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0xc00200000, arg2 = 0x700000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6869922070 \"\", restarts_ = 628376, num_restarts_ = 14517, current_ = 334578, restart_index_ = 7728, key_ = {key_ = 0x7f68b80040e0 \"test_data/dup4299628.data,0\\001\\026\\312\\371\\b\", buf_size_ = 35, key_size_ = 35, space_ = \"\\260d\\266\\342h\\177\\000\\000\\031\\061J\\000\\000\\000\\000\\000\\300d\\266\\342h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6869973b88 \"\\367\\207\\210\\021\\257)\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e2b666e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6868008620\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e2b66a70, status=status@entry=0x7f68e2b66a80, merge_context=merge_context@entry=0x7f68e2b66820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 35}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}, value_found = 0x0, value = 0x7f68e2b66a70, merge_operator = 0x0, merge_context = 0x7f68e2b66820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 429, start_index_in_curr_level_ = 429, user_key_ = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}, ikey_ = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 35}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}\nf = 0x7f68484c7b48\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2b66a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e2b668d8 \"#test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", end_ = 0x7f68e2b668fc \"\", space_ = \"#test_data/dup4299628.data,0\\002\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377\\200j\\266\\342h\\177\\000\\000\\377\\377\\377\\377h\\177\\000\\000\\200j\\266\\342h\\177\\000\\000\\200j\\266\\342h\\177\\000\\000 \\000\\000\\270h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000M\\000\\000\\000\\000\\000\\000\\000A\\226I\\035\\227\\200\\377\\377\\006\\000\\000\\000h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\061\", '\\000' <repeats 15 times>, \"[\", '\\000' <repeats 23 times>, \"n\\000\\000\\000w\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2b66a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e2b66a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f4f2 in store::Store::get(std::string const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ee52 in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e2b67700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e2b67700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088456935168, 1613666937563492894, 0, 0, 140088456935872, 140088456935168, -1678399090607279586, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 20 (Thread 0x7f68d9558700 (LWP 28437)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=65465530, __nbytes=4008, __buf=0x7f68d95548a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68512d1190, offset=65465530, n=4008, result=0x7f68d9554870, scratch=0x7f68d95548a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d95548a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68512d1190, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d9554870, buf=buf@entry=0x7f68d95548a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d9558628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d9555cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\271\\\"=\\320jx!3\\203\ufffd\\225\\216\u07a7\\225w\\005\\372\\035_\\001\\000\\000\\000\\000\\000\\000\\000\\377\\033\\207O4\\214\\021\\227\\325<\\242,#\\371\\300\\004\\n\\340\\322\\020\ubf2a:a\ufffd\\202\\nZ\\a\\a3J\\233\\~\\307Z\\310\\377/\\273{u\\363^\\234\\032\\202\\316\\315!\\306\ufffd\\233\\253q\\245\\320\\361\\214\\001\\256\\356i\\267\\f\\373G2\\v@\\270\\222\\245L\u046d\\351\\257\\342\\021\\006\u0566$\\322'/_\\206^q\\351\u03e5\\366\\025\\065\u0133\\314\\001\\254\\v\\203u\\263\ufffd\\205K\\211*jf_!\\363\\002\\021\\022\\342\\254R\\\"\\346>\\353\\276\\366d\\310E6\\276\\t\\265\\177\\355\\362\\214\\303\\017\\037\\220\u0320\\334z\\022\\313/-\\314\\001iqz\\a\\023\\020\\214\\023\\345i\\336^TzC\\v\\004\\066.\\341\\t1WSUy\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d9555cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d9555d60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f685080b550, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 65465530, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68521c6971 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f6844da2190) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f68521c696b \"\\272\ufffd\\233\\037\\243\\037\", size_ = 6}\nthis = 0x7f6844da2190\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f6844da2190) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f6844066080) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f6844066030) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f68442b3400) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f68442b33a0) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168867389, earliest_snapshot=earliest_snapshot@entry=168867389, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d95564f8: 0, input=input@entry=0x7f68442b33a0, compact=compact@entry=0x7f6844346de0, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f6844de9af0 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\001\", size_ = 28}\nvalue = {data_ = 0x7f6844de975a \"n\\004,\\004\\377\\301\\334\ufffd\\232\ufffd\\251w5\\232\\210\\327P_\u03f3\\331\\177R\\236C\\326\\020\\bc\\236\\276\\252\\237\\245\\260|>e\\320(\\005\\v\\234\\337C\\206(\\fH\\304Yt8\\370\\276\\032\\362^\\222\\376\\335\\337\\375u\\301\\064\\257 A\\a\\365U\\370\\272\\034\\326\\346\\373s0\\261\\016\\221V\\235\\064\\016\\364\\210\\062q\\312\\023,\\346\\346\\346v\\231\\316\\331\\314|\\270\\\\263\\207U)}\\231\\253i\\222\\067\\233\\235\\060\\336<\\322dE\\204u\\017@\\300\\016\\070\\227v\\313\\061\\325\\240\\352\\322\\002c\\330\\\\214@dU\\241\\230\\224#\\aAz\\273\\022\\253r\\241\\037\\344\\260\\342\\247-~+\\343\ufffd\\220EJ\\035\\016\\306\\364Z\\306^\\032\\262\\267\\333c\\005\\236\\366M\\342\\317Wu\\203\\217\\266\", size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168867389\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d9556228 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\", buf_size_ = 32, key_size_ = 20, space_ = \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\000\\000\\000\\000\\000\\065+Dh\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6844de9af0 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 448\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d9556268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000\\b6+Dh\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000\\065+Dh\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f6844346de0, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168867389\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1967 Base level 2, seek compaction:0, inputs: [11272(64MB)], [9786(64MB) 9787(64MB) 9788(64MB) 9789(64MB) 9790(64MB) 9791(64MB) 9792(64MB) 10581(64MB) 10582(64MB)]\\000mU\\331h\\177\\000\\000\\060mU\\331h\\177\\000\\000\\037\\302a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f68442b33a0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f68442b3500\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 140088299580392, type = 80}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168867389\ntmp = {buffer = \"files[0 14 113 807 0 0 0]\\000U\\331h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310hU\\331h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310hU\\331h\\177\\000\\000\\310h\", <incomplete sequence \\331>}\nis_snapshot_supported = true\nstart_micros = 1413982261964161\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d955722f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:2321\ncompact = 0x7f6844346de0\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6844002ac0\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d9557050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x7f6878603c30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f6844821b30, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"5\\250GT\\000\\000\\000\\000+\\266\\016\\000\\000\\000\\000\\000[default] Compacting 1@2 + 9@3 files, score 1.01 slots available 7\\000\\000\\000\\066 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d9557bc8 \"\", aligned_alloc_ptr_ = 0x7f68d95577c8 \"5\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d95573c8, 0x7f68d95575c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=4, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 4\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d9558700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d9558700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088299587328, 1613666937563492894, 0, 0, 140088299588032, 140088299587328, -1678339434048409058, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 19 (Thread 0x7f68e3f69700 (LWP 28419)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=56865799, __nbytes=4006, __buf=0x7f68e3f66d50, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6848322700, offset=56865799, n=4006, result=0x7f68e3f66d20, scratch=0x7f68e3f66d50 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68e3f66d50 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6848322700, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e3f66d20, buf=buf@entry=0x7f68e3f66d50 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e3f68160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002s\\210\\247\\\\027\\277Tc\\v~\\031\\340>_\\277\\030\\t\\227>9\\001\\000\\000\\000\\000\\000\\000\\000\\255\\305\\021\\310?\\363\\212dA\\363\\177\\024Y\\036\\245\\071\\263\\372u]\\246\\273\\017\\062\\316\\036\\f%\\240\\255\\\"Y\\334K\\245\\211\\316(\\253\\256\\321\\327\\357V\\366?\\274\\222)\\334j\\332\u05aa\\226#\\200b\\345\\260\\033b[\\257\\305\\\"\\241\\235!\\220\\377\\261V\\300\\062\\071\\250\\b\\255:\\222\\322B\\370\u0476\\351\\324i\\255\\262d\\035\\031S\\367E\\017\\317\\070\\202\\326\\346\\364\\216\\221\\354\u077dqz\\v\\324\\331\\070/\\024VW\\373\\365\\\\244C\\275\\247\\006V_\\277\\252\\035\\252\\334\\340\\063V\\b0\\023\\251-G\\233\\234\\340$\\020\\227\\\"\\361\\247\\201\\324X\\233\\205r\\261\ufffd\\227\\026$\\037\\376\\341\\345\\255\\352\\343\\bx\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3f68160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3f68280, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6848003fc0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e3f684c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"p\\204\\366\\343h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\ufffd\\210\\366\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\020\\204\\366\\343h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e3f682b0 \"\\205\\020\\272\\223\\205\\322\\005\ufffd\\222\\221\\277\\t\\207\\350\\216\\033\\220\\206\\366\\343h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\272\\223\\205\\322\\005\ufffd\\222\\221\\277\\t\\207\\350\\216\\033\\220\\206\\366\\343h\\177\\000\\000\\060\\203\\366\\343h\\177\\000\\000\\020\\203\\366\\343h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 56865799, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f684a9129a2 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6848103c50, read_options=..., key=..., handle_context=0x7f68e3f686e0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68bc00caa0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e3f68520 \"s\\210\\256\\310-}d!\\276~\\210\\300(\ufffd\\236\\017\\341\\226\u02a7\\001\", <incomplete sequence \\355>, buf_size_ = 32, key_size_ = 0, space_ = \"s\\210\\256\\310-}d!\\276~\\210\\300(\ufffd\\236\\017\\341\\226\u02a7\\001Q\\355\\000\\n\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f684a91299c \"\\207\\350\\216\\033\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x200000, arg2 = 0x700000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f684a8c2280 \"\", restarts_ = 389086, num_restarts_ = 16750, current_ = 329485, restart_index_ = 14191, key_ = {key_ = 0x7f68e3f68470 \"s\\210\\250\\264\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"s\\210\\250\\264\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\300\\204\\366\\343h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f684a91299c \"\\207\\350\\216\\033\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e3f686e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6848008fe0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e3f68a70, status=status@entry=0x7f68e3f68a80, merge_context=merge_context@entry=0x7f68e3f68820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e3f68a70, merge_operator = 0x0, merge_context = 0x7f68e3f68820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 300, start_index_in_curr_level_ = 300, user_key_ = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c5f10\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3f68a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e3f688d8 \"\\034s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", end_ = 0x7f68e3f688f5 \"\\235\\256\\021\\n\", space_ = \"\\034s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\274h\\177\\000\\000P\\006\", '\\000' <repeats 14 times>, \"<\\006\\000\\000\\000\\000\\000\\000\\300\\231\\366\\343h\\177\\000\\000\\000\\227\\366\\343h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000Av\\t\\034\\227\\200\\377\\377<\\006\\000\\000\\000\\000\\000\\000\\061v\\t\\034\\227\\200\\377\\377e\\000\\000\\000\\000\\000\\000\\000\\031\\000\\000\\000\\000\\000\\000\\000I\\000\\000\\000\\000\\000\\000\\000\\003\\000\\000\\000\\000\\000\\000\\000^\", '\\000' <repeats 22 times>}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3f68a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e3f68a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e3f69700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e3f69700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088477914880, 1613666937563492894, 0, 0, 140088477915584, 140088477914880, -1678397444561063394, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 18 (Thread 0x7f68d9f59700 (LWP 28436)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=3, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 3\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d9f59700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d9f59700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088310077184, 1613666937563492894, 0, 0, 140088310077888, 140088310077184, -1678340261366484450, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 17 (Thread 0x7f68df962700 (LWP 28426)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=14569178, __nbytes=4006, __buf=0x7f68df95fd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f683c003240, offset=14569178, n=4006, result=0x7f68df95fd10, scratch=0x7f68df95fd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68df95fd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f683c003240, footer=..., options=..., handle=..., contents=contents@entry=0x7f68df95fd10, buf=buf@entry=0x7f68df95fd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68df961150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002R\\003#L\\216\\016\\327\\366z)\\370\\253\\212\\066wG;\\277\\370\\223\\001\\000\\000\\000\\000\\000\\000\\000\\241y\\b\\214vz\\037\\351&Shk2\\n=N\\022|\\027&\\231c%\\265G\\200W\\v\\221\\374H\\260I\\261 \\000\\333\u023c\\270\\027\\247\\252\\253\\023DPr\\351=i\\224&+ry\\271\\306\\063'\\307CRy\\367\\324\\352v%\\375B}\\200-\\375\\204\\001\\001\\353\\377\\276[\\240\\233(\\205\\023\\067\\\"DK\\203u;.\\245B1\\005@\\t\\370.|H\\253e\\343v|\\374H\\221\\214[P\\364~\\243\\252\\372\\237\\330\\003\\177\\310|\\303>\\260\\200\\065:e\\231\\264\\254\\214\\250cip\\226\\302\\003\\321_\\254\\224\\312\\001d\\024gRy\\255\\000nA-\\n{\\221\\211\\355\\261Y\\202\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68df961150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68df961270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f683c002cf0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68df9614b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\024\\226\\337h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\030\\226\\337h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\024\\226\\337h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68df9612a0 \"\\205\\020\\275\\214\\205\\322\\005\\213\\213\\221\\277\\t\ufffd\\235\\371\\006\\200\\026\\226\\337h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\275\\214\\205\\322\\005\\213\\213\\221\\277\\t\ufffd\\235\\371\\006\\200\\026\\226\\337h\\177\\000\\000 \\023\\226\\337h\\177\\000\\000\\000\\023\\226\\337h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 14569178, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683da46fb8 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f683c0030b0, read_options=..., key=..., handle_context=0x7f68df9616d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68ac05f440, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68df961510 \"R\\003$\\371\\277\\361\\247\\322c\\030\\066\\324_\\300\\033\\337\\315l\\365T\\001\\t\\207=\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"R\\003$\\371\\277\\361\\247\\322c\\030\\066\\324_\\300\\033\\337\\315l\\365T\\001\\t\\207=\\t\\000\\000\\000\\031;^/\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f683da46fb2 \"\ufffd\\235\\371\\006\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f683da32670 \"\", restarts_ = 390164, num_restarts_ = 16749, current_ = 84275, restart_index_ = 3635, key_ = {key_ = 0x7f68df961460 \"R\\003$l\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"R\\003$l\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\024\\226\\337h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f683da46fb2 \"\ufffd\\235\\371\\006\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68df9616d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f683c859c40\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68df961a60, status=status@entry=0x7f68df961a70, merge_context=merge_context@entry=0x7f68df961810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68df961a60, merge_operator = 0x0, merge_context = 0x7f68df961810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 212, start_index_in_curr_level_ = 212, user_key_ = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c4bd0\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68df961a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68df9618c8 \"\\034R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", kstart_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", end_ = 0x7f68df9618e5 \"\\031;^/\\023b\\204\\371\\002\\235\\256\\021\\n\", space_ = \"\\034R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\\000\\000\\000\\031;^/\\023b\\204\\371\\002\\235\\256\\021\\n\\000\\000\\000\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\254h\\177\\000\\000\\200\\b\", '\\000' <repeats 14 times>, \"l\\b\\000\\000\\000\\000\\000\\000\\300)\\226\\337h\\177\\000\\000\\000'\\226\\337h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\346i \\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\346i \\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68df961a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68df961a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68df962700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68df962700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088404485888, 1613666937563492894, 0, 0, 140088404486592, 140088404485888, -1678335593273904610, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 16 (Thread 0x7f68db35b700 (LWP 28433)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=1, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 1\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68db35b700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68db35b700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088331056896, 1613666937563492894, 0, 0, 140088331057600, 140088331056896, -1678343009071812066, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 15 (Thread 0x7f68d4f51700 (LWP 28444)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=62735089, __nbytes=4008, __buf=0x7f68d4f4d8a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68347edf10, offset=62735089, n=4008, result=0x7f68d4f4d870, scratch=0x7f68d4f4d8a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d4f4d8a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68347edf10, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d4f4d870, buf=buf@entry=0x7f68d4f4d8a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d4f51628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d4f4ecb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002w[\\003\\270\\212^\\022I|\\343_\\330\\304\\030\\270\\245\\n\\317\\326\\325\\001\\000\\000\\000\\000\\000\\000\\000\\346\\305\u0468\\261\\310\\006<\\365g\\265\\372oRo\\333\\357\\235\\330\\026\\223n\\204\\060R\\253\\t\\245\\200\\205\\036\\327\\322a\\232q-\\211X\\241h\\247\\n\\351n\\211\\353^\\026\\341__\\303\\025\\237\\\\351>N\\327\\214\\203\\313D\\215\\342\\251N\\355\\272\\223-Xi\\022a\\343/\\254\\070\\250\\217]-S2}\\017B;\\277-\\230\\336\\303zD\\376\\377bR\\177\\231\\vQ.|\\333\ufffd\\221\\336\\a\\364~\\266\\220\\217/\\340vm\\361\u073f)x07\\206(#ZQ2@\\213A\\374\\276\\224q0x\\020\\005\\003|\\304\\302\u0570\\363\\000\\236FF\\005\\250\\310\\a\\274}\\261\\td}\\245\\334\\353\\tJ9\\021\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d4f4ecb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d4f4ed60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6834001c50, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 62735089, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683548f5b0 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f6859eb06f0) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f683548f5aa \"\\361\\205\\365\\035\\243\\037\", size_ = 6}\nthis = 0x7f6859eb06f0\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f6859eb06f0) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f6858007d30) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f6858007ce0) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f685887af80) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f685887af20) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168930973, earliest_snapshot=earliest_snapshot@entry=168930973, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d4f4f4f8: 0, input=input@entry=0x7f685887af20, compact=compact@entry=0x7f68591bc220, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f6859eb1470 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252\\001\", size_ = 28}\nvalue = {data_ = 0x7f6859ec7afa \"\\207\\266\\336\ufffd\\2025\\264\\314\\023o1\\037\\a\\315M\\221\\276\\016\\245\\034LG\\317\\300N\\024\\r\\342/\\355\\352\\065\\350)\\350b \\303#6\\205\\\"Em@\\274w\\351\\027x\\371\u01be\\275\\064F\\373:\\002\\205\\201\\030\\324x9\\024\\b\\304\\035\\363\\374\\305\\022\\222\\257\\217\\223\\001\\262`\u02f2\\r)\\264s\\371P\\027\ufffd\\205\\230;5\\355\\064\\377\ufffd\\220\\360\\326\\374=/\\274~9u\\366\\242U=p\\256\\301\\a@\\211AO\\350\\026\u047e%\\b\\253mM[\\003\\r\\232\\254`G\\314A{\\365e(\\036\\272W\\352\\260\\354\\r\\030?\\223+\\351p,\\362B\\222\\305\\001W\\355h\\201w\\034\\361U\\\\362A\\r\\251p\\226A\\322\\061T\\252Ai\\315|\\331l\ufffd\\202\\233\\220\\341\\274\\334\\b\\301$\\234\", <incomplete sequence \\374>..., size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168930973\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d4f4f228 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252data,05Xh\\177\", buf_size_ = 32, key_size_ = 20, space_ = \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252data,05Xh\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6859eb1470 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 557\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d4f4f268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000x\\354\\065Xh\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000p\\353\\065Xh\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f68591bc220, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168930973\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1972 Base level 2, seek compaction:0, inputs: [11244(64MB) 11245(906KB)], [9567(64MB) 9568(64MB) 9569(64MB) 9570(64MB) 9571(64MB) 9572(64MB) 9573(64MB)]\\000\\000\\000\\020\\372\\364\\324h\\177\\000\\000\\003\\374\\364\\324h\\177\\000\\000`\\245e\", '\\000' <repeats 29 times>...\ninput = std::unique_ptr<rocksdb::Iterator> containing 0x7f685887af20\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f685835eb70\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6356992, type = rocksdb::kTypeDeletion}\ncompaction_filter_from_factory_v2 = std::unique_ptr<rocksdb::CompactionFilterV2> containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168930973\ntmp = {buffer = \"71829981`\\366\\364\\324h\\177\\000\\000\\310\\370\\364\\324h\\177\\000\\000`\\366\\364\\324h\\177\\000\\000\\000eb\\000\\000\\000\\000\\000H\\370\\364\\324h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\313\\001\\000\\000\\000\\000\\000\\000\\310\\370\\364\\324h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310\\370\\364\\324h\\177\\000\\000\\310\\370\\364\", <incomplete sequence \\324>}\nis_snapshot_supported = true\nstart_micros = 1413982275951984\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d4f5022f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:2321\ncompact = 0x7f68591bc220\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6858007180\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d4f50050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x7f685c003a50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f68588f5620, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"C\\250GT\\000\\000\\000\\000\\242\\206\\016\\000\\000\\000\\000\\000[default] Compacting 2@2 + 7@3 files, score 1.01 slots available 8\\000\\000\\067\\070\\060 0 0 0]\\n\", '\\000' <repeats 417 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d4f50bc8 \"\", aligned_alloc_ptr_ = 0x7f68d4f507c8 \"\\211\\247GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d4f503c8, 0x7f68d4f505c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=11, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 11\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d4f51700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d4f51700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088226158336, 1613666937563492894, 0, 0, 140088226159040, 140088226158336, -1678351252187794914, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 14 (Thread 0x7f68e0d64700 (LWP 28424)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=32678579, __nbytes=4007, __buf=0x7f68e0d61d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6848085380, offset=32678579, n=4007, result=0x7f68e0d61d10, scratch=0x7f68e0d61d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e0d61d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6848085380, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e0d61d10, buf=buf@entry=0x7f68e0d61d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e0d63150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\261\\373g\\235\ufffd\ufffd\\210\\034\\374\\301I\\237\\273u\\230\\374\\327\\b\\a\\336\\001\\355\\243\\324\\t\\000\\000\\000\\227\\276\\254\\367\\005\\002\\\ufffd\\206\\215B\\361\\060O%\\225\\215P\\370\\020\\322\\343.%\\332\\323\\016\\250+\\357P\\367\\b+ \\214\\211#%\\016\\303{\\260\\342>\\356\\004\\064\\212=\\213\\004\\016\\306@\\342\\240\\8\\037\\227\\366;(|\\374\\215\\071Z&Q-\\\\222\\061\\300\\234\\335\\346\\344x6\\364\\223\u05a5\\230?\\005\\063\\323\\035E\\226\u04bb\\333e:\\310m\\336\\341H\\331\\333]\\367\\003\\066+\\222\\021>\\264Xc\\033\\233B\\222\\266;\\350\\251F\\t\\377\\004k!\\363\\067\\357O\\032\\300:c\ufffd\\234\\271&\\360\\017R\\331`\\361M>\\270\\246\\251M\\300\\033\\002\\323\\331\\336\\370\\336X\\356r\\320\\005\\274G\\213\\360\\363X\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0d63150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0d63270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68485c8500, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e0d634b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`4\\326\\340h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\070\\326\\340h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\064\\326\\340h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e0d632a0 \"\\205\\020\\300\\215\\205\\322\\005\ufffd\\207\\221\\277\\t\\263\\305\\312\\017\\200\\066\\326\\340h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\300\\215\\205\\322\\005\ufffd\\207\\221\\277\\t\\263\\305\\312\\017\\200\\066\\326\\340h\\177\\000\\000 3\\326\\340h\\177\\000\\000\\000\\063\\326\\340h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 32678579, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68495a1645 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68493b24c0, read_options=..., key=..., handle_context=0x7f68e0d636d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68905984e0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e0d63510 \"\\261\\373k\\215\\006\\310p\\177E\\341/\ufffd\\204n\\344\\b\\a\\321\\370\\031\\001\\336\\006\\312\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\261\\373k\\215\\006\\310p\\177E\\341/\ufffd\\204n\\344\\b\\a\\321\\370\\031\\001\\336\\006\\312\\t\\000\\000\\000\\005\\177\\215\\242\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f68495a163f \"\\263\\305\\312\\017\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6849572e10 \"\", restarts_ = 391020, num_restarts_ = 16749, current_ = 190496, restart_index_ = 8154, key_ = {key_ = 0x7f68e0d63460 \"\\261\\373k\\271\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\261\\373k\\271\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\064\\326\\340h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f68495a163f \"\\263\\305\\312\\017\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e0d636d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68480fee20\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e0d63a60, status=status@entry=0x7f68e0d63a70, merge_context=merge_context@entry=0x7f68e0d63810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e0d63a60, merge_operator = 0x0, merge_context = 0x7f68e0d63810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 607, start_index_in_curr_level_ = 607, user_key_ = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484ca238\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0d63a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e0d638c8 \"\\034\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", end_ = 0x7f68e0d638e5 \"\\005\\177\\215\\242\\363jF\\373\\002\\235\\256\\021\\n\", space_ = \"\\034\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\\000\\000\\000\\005\\177\\215\\242\\363jF\\373\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\220h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300I\\326\\340h\\177\\000\\000\\000G\\326\\340h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\306)\\037\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\306)\\037\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0d63a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e0d63a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e0d64700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e0d64700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088425465600, 1613666937563492894, 0, 0, 140088425466304, 140088425465600, -1678395515583876578, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 13 (Thread 0x7f68e3568700 (LWP 28420)):\n#0 Slow_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:305\nc = 3481991131\n#1 Fast_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:321\nNo locals.\n#2 rocksdb::crc32c::ExtendImplrocksdb::crc32c::Fast_CRC32 (crc=<optimized out>, buf=<optimized out>, size=<optimized out>) at util/crc32c.cc:353\ne = 0x7f68e3566ce4 \"%\\026\\327.\"\np = <optimized out>\nl = <optimized out>\npval = <optimized out>\nx = <optimized out>\n#3 0x00000000004bf433 in Value (n=4004, data=0x7f68e3565d40 \"\") at ./util/crc32c.h:24\nNo locals.\n#4 rocksdb::ReadBlock (file=<optimized out>, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e3565d10, buf=buf@entry=0x7f68e3565d40 \"\") at table/format.cc:240\nperf_step_timer_block_checksum_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568630}\nvalue = <optimized out>\nactual = 0\ns = <optimized out>\n#5 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e3567150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x7f68e3565d40 \"\", size_ = 4008}\nbuf = \"\\000\\034\\200\\002X\\001\\212\\343L\\r7\\023\\210:\\356\\002Is\\255\ufffd\\203\\364\\351\\f\\001\\000\\000\\000\\000\\000\\000\\000\\233\\276\\035s\\037\\356\\355\ufffd\\217(&$\\342|\\261\\032\\347\\062\\216\\v&\\241W\\227\u043eU\\227\\351f\\245\\247\\363,0\u077f&\\235'3\\251h\\317K?^\\v~\\317|\\024\\247\\037\\251\\065\\373av\\231\\060H#\\301\\325\\364\\322Tg\\216\\301m+\u01b0K\\222\\377O\\364\\271\\263[~\\375\\031\\364\\355]?C\\202\\362a.\\201\\374p\\223\\373^\\326\\336RD\\203i\\220\\276b\\005\ufffd\\2239\\327Q\\257@\\244\\363\\263[\\302\\f\\202\\305V\\224\\302S}\\325\\360\\376y\\312RAL\\177i\\206\\356FX\\212\\307Bf\\203r\\321\\365aPk\\227\\203=\\230\\023?'LJ\\243\\037\\025\\342`\\202\\375\\020\\203\"...\n#6 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3567150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#7 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3567270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#8 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f683d58f420, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e35674b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`tV\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\311xV\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000tV\\343h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e35672a0 \"\\205\\020\\326\\216\\205\\322\\005\\316\\202\\221\\277\\t\\340\\342\\354\\017\\200vV\\343h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\326\\216\\205\\322\\005\\316\\202\\221\\277\\t\\340\\342\\354\\017\\200vV\\343h\\177\\000\\000 sV\\343h\\177\\000\\000\\000sV\\343h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 33239392, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683d633115 \"\", size_ = 0}\n#9 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f683d490c10, read_options=..., key=..., handle_context=0x7f68e35676d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68946243a0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e3567510 \"X\\001\\213\\257\\305\\027\\271\\023p\\323\\365'\\220&V\\026\\341Z{\\251\\001\ufffd\\222\\021\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"X\\001\\213\\257\\305\\027\\271\\023p\\323\\365'\\220&V\\026\\341Z{\\251\\001\ufffd\\222\\021\\t\\000\\000\\000\\v\\266\\334\\023\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f683d63310f \"\\340\\342\\354\\017\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f683d603c30 \"\", restarts_ = 393187, num_restarts_ = 16749, current_ = 193728, restart_index_ = 8294, key_ = {key_ = 0x7f68e3567460 \"X\\001\\214\\354\\033\\373\\345\\341Q\\227\\320\\332:\\271H\\027\\214\\200\\357\\021\\001\", buf_size_ = 32, key_size_ = 28, space_ = \"X\\001\\214\\354\\033\\373\\345\\341Q\\227\\320\\332:\\271H\\027\\214\\200\\357\\021\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f683d63310f \"\\340\\342\\354\\017\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#10 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e35676d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f683c857e80\n#11 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e3567a60, status=status@entry=0x7f68e3567a70, merge_context=merge_context@entry=0x7f68e3567810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e3567a60, merge_operator = 0x0, merge_context = 0x7f68e3567810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 228, start_index_in_curr_level_ = 228, user_key_ = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c4f50\n#12 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3567a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e35678c8 \"\\034X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", end_ = 0x7f68e35678e5 \"\\v\\266\\334\\023\\374`\\266C\\002\\235\\256\\021\\n\", space_ = \"\\034X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\\000\\000\\000\\v\\266\\334\\023\\374`\\266C\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\224h\\177\\000\\000\\240\\a\", '\\000' <repeats 14 times>, \"\\214\\a\\000\\000\\000\\000\\000\\000\\300\\211V\\343h\\177\\000\\000\\000\\207V\\343h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\206\\251\\034\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\206\\251\\034\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#13 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3567a60) at db/db_impl.cc:3387\nNo locals.\n#14 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e3567a60) at ./include/rocksdb/db.h:213\nNo locals.\n#15 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#16 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#17 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#18 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#19 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#20 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#21 0x000000000055af02 in start_thread (arg=0x7f68e3568700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68e3568700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088467425024, 1613666937563492894, 0, 0, 140088467425728, 140088467425024, -1678396617242988002, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#22 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 12 (Thread 0x7f68e2166700 (LWP 28422)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=553016, __nbytes=4007, __buf=0x7f68e2163d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f683436fcd0, offset=553016, n=4007, result=0x7f68e2163d10, scratch=0x7f68e2163d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e2163d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f683436fcd0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e2163d10, buf=buf@entry=0x7f68e2163d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e2165150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\u027c\\250\\035\\343;\\305f1\\t&\\255\\257b\\252\\261\\023?\\rE\\001'\\004\\067\\t\\000\\000\\000\\324\\032\\263\\061^\\203\\334\\006\\252\\324\\355xNS2s\\205\\276\\017\\022B>\\356\\327\\323Z\\202{k\\353\\212zuxz\ufffd\\213\\022K\\022\\237\\206\\345\\263\\353,5\\305\\351aG!\\305\\317\\062Q\\321\\312\\302,(\\344\\371\\314\\362/K^\\230\\334\\323^\\027\\070\\061\\272h\\303\\340)i_~\\354R\\353\ufffd\\213\\275\\253\\270$\\306\\345#s\\342\\b/\\367\\006\\225\\340\\265\\323\\317F\\372\\223W]\ufffd\\200\\216,\\300I\\266=\\274%\\211\\261\\202\\270?\\360\\274\\332{\\365\\303\\351+!V\\240\\325\\355\\276h\\\\201\\234\\260F\\002F\\216n\\244K4\\221\\t\\264\\215\ufffd\\214|\\rM\\302sy\\273\\220y\\001n\\237~\\311\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2165150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2165270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68352023f0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e21654b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`T\\026\\342h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311X\\026\\342h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000T\\026\\342h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e21652a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\207\\212\\221\\277\\t\\270\\340!\", size_ = 15}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\207\\212\\221\\277\\t\\270\\340!\\000\\200V\\026\\342h\\177\\000\\000 S\\026\\342h\\177\\000\\000\\000S\\026\\342h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 553016, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835e9aaa7 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68352028c0, read_options=..., key=..., handle_context=0x7f68e21656d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f689c078d60, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e2165510 \"\u027c\\263/c\\351\\032\\365\u0239\\321W\\373|\\336\\003\\003\\322\\302[\\001\\060\\241\\300\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\u027c\\263/c\\351\\032\\365\u0239\\321W\\373|\\336\\003\\003\\322\\302[\\001\\060\\241\\300\\t\\000\\000\\000\\357\\310\\362\\020\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835e9aaa2 \"\\270\\340!\\242\\037\", size_ = 5}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835e99ea0 \"\", restarts_ = 390962, num_restarts_ = 16749, current_ = 3059, restart_index_ = 137, key_ = {key_ = 0x7f68e2165460 \"\u027c\\263c\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\u027c\\263c\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260T\\026\\342h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835e9aaa2 \"\\270\\340!\\242\\037\", size_ = 5}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e21656d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6835202300\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e2165a60, status=status@entry=0x7f68e2165a70, merge_context=merge_context@entry=0x7f68e2165810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e2165a60, merge_operator = 0x0, merge_context = 0x7f68e2165810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 667, start_index_in_curr_level_ = 667, user_key_ = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484caf58\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2165a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e21658c8 \"\\034\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", end_ = 0x7f68e21658e5 \"\\357\\310\\362\\020\\017\\061\\244\\252\\002\\235\\256\\021\\n\", space_ = \"\\034\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\\000\\000\\000\\357\\310\\362\\020\\017\\061\\244\\252\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\234h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300i\\026\\342h\\177\\000\\000\\000g\\026\\342h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\246\\351\\035\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\246\\351\\035\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2165a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e2165a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e2166700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e2166700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088446445312, 1613666937563492894, 0, 0, 140088446446016, 140088446445312, -1678398267584171490, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 11 (Thread 0x7f6870cc9700 (LWP 28906)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=0, this=0x2378140) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 0\ntp = 0x2378140\n#3 0x000000000055af02 in start_thread (arg=0x7f6870cc9700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f6870cc9700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140086545782528, 1613666937563492894, 0, 0, 140086545783232, 140086545782528, -1678712231304121826, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 10 (Thread 0x2345940 (LWP 28415)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x000000000041b3b3 in ThreadPool::wait_completion() ()\nNo symbol table info available.\n#2 0x0000000000402874 in main ()\nNo symbol table info available.\n\nThread 9 (Thread 0x7f68d5952700 (LWP 28443)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=10, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 10\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d5952700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d5952700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088236648192, 1613666937563492894, 0, 0, 140088236648896, 140088236648192, -1678348778823503330, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 8 (Thread 0x7f68e536b700 (LWP 28417)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=13683420, __nbytes=4007, __buf=0x7f68e5368d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f687400d440, offset=13683420, n=4007, result=0x7f68e5368d10, scratch=0x7f68e5368d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e5368d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f687400d440, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e5368d10, buf=buf@entry=0x7f68e5368d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e536a150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002-Qk\\256\\254\\277!\u0727\\306\\310\\372\\260%\\023\\v\\350=^\\031\\001\\246\\027\\356\\t\\000\\000\\000\\236\ufffd\\204\\353\\342\\\"\\221\\211\\263x%\\036\\062;/\\212\\t\\024k\\245\\335\\330s\\207\\333\\062\\265\\062\\205\\352\\067%\\223l\\334|\ufffd\\237\\203\\312I\\000Z\\\"\\347%\\b\\242\\311!&p\\003V\\004\\327:a\\267PJ\\377\\f?\\020\\223\\200\\037D\\200\\261O\\036\\063$\\276\\t\\355I\\034\\302\\f\u02fb\\301\\062'\\232\\325X\\272\\367[\\252uF\\261\\273z\\204\\265\\266\\222\\066|-\\371E\ufffd\\205\\223\\205\\036\\214]\\304{\u02b2s\\314\\316 \\363\\271\u0124e\\252?I\\326{\\322@i\\325\\067\\020\\025\\350\\377\\264\\026\\020\u017b\\231\\004,|1\\360\\362\\243\\257\\315\\356\\327i+\\230\\000\\273\\217\\252\\060V\\253@k\\330]\\006\\035\\237\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e536a150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e536a270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f687400e250, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e536a4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\244\\066\\345h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\u02686\\345h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\244\\066\\345h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e536a2a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\202\\220\\221\\277\\t\ufffd\\225\\303\\006\\200\\246\\066\\345h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\202\\220\\221\\277\\t\ufffd\\225\\303\\006\\200\\246\\066\\345h\\177\\000\\000 \\243\\066\\345h\\177\\000\\000\\000\\243\\066\\345h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 13683420, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f687419fed1 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f687400e670, read_options=..., key=..., handle_context=0x7f68e536a6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a8683250, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e536a510 \"-Q\\207E\\357\\n&\ufffd\\200\\311\\036\u05aeRjN/K\\305b\\001\\ti\\246\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"-Q\\207E\\357\\n&\ufffd\\200\\311\\036\u05aeRjN/K\\305b\\001\\ti\\246\\t\\000\\000\\000\\204 \\213\", <incomplete sequence \\313>}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f687419fecb \"\ufffd\\225\\303\\006\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f687418cc10 \"\", restarts_ = 389522, num_restarts_ = 16750, current_ = 78508, restart_index_ = 3414, key_ = {key_ = 0x7f68e536a460 \"-Q\\204w\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"-Q\\204w\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\244\\066\\345h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f687419fecb \"\ufffd\\225\\303\\006\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e536a6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6874a0a010\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e536aa60, status=status@entry=0x7f68e536aa70, merge_context=merge_context@entry=0x7f68e536a810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e536aa60, merge_operator = 0x0, merge_context = 0x7f68e536a810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 118, start_index_in_curr_level_ = 118, user_key_ = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c3740\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e536aa60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e536a8c8 \"\\034-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", end_ = 0x7f68e536a8e5 \"\\204 \\213\ufffd\\225\u0467\\024\\002\\235\\256\\021\\n\", space_ = \"\\034-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\\000\\000\\000\\204 \\213\ufffd\\225\u0467\\024\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\250h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300\\271\\066\\345h\\177\\000\\000\\000\\267\\066\\345h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000AV\\311\\032\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061V\\311\\032\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e536aa60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e536aa60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e536b700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e536b700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088498894592, 1613666937563492894, 0, 0, 140088498895296, 140088498894592, -1678382600080346594, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 7 (Thread 0x7f68dd15e700 (LWP 28430)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=12650876, __nbytes=4008, __buf=0x7f68dd15bd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6874586660, offset=12650876, n=4008, result=0x7f68dd15bd10, scratch=0x7f68dd15bd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68dd15bd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6874586660, footer=..., options=..., handle=..., contents=contents@entry=0x7f68dd15bd10, buf=buf@entry=0x7f68dd15bd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68dd15d150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\370Mc\\253\\277\\270\\205\\va\\214gR\\365\\353P\\003\\037j8\\210\\001\\000\\000\\000\\000\\000\\000\\000\\371\\233\\230\\t\\255\\231|_\\201\\023\\245\\354\\372S\\\\343\\024\\062]\\203\\307g\\322H\\261\\257\\362F\\201f\\366\\066Q\\232)'\\n\ufffd\\204\\006v\ufffd\\226\\215r\\033z\\312J=p\\353\\234\\347B'\ufffd\\221\\345\\222v.r\\332mD\\\"\\352X\\302\\037\\235\\230U\\341\\323nijFQMZ\\030\\334\\317\\337\\025[\ufffd\\207\\201\\325~VE\\270\u036c\\272Qqs\\016\\210\\312\\341\\023?\\215D\\031\\033\\260\\311Q\\206\\330[\\326\\360\\272\\377_'\ufffd\\237\\262B\\351U@\\340\\351\\220\\345\\347\\334e\\372.\u02e0\\311k@\\374\\270\\f\\343_F\\336\\b\\223\\205\\037\\373.\\345\\363r\\350\\000\\354zKKK\\376\\bvx\\f4\\333\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dd15d150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dd15d270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68742b6ac0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68dd15d4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\324\\025\\335h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\330\\025\\335h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\324\\025\\335h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68dd15d2a0 \"\\205\\020\\375\\222\\205\\322\\005\\205\\200\\221\\277\\t\\374\\222\\204\\006\\200\\326\\025\\335h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\375\\222\\205\\322\\005\\205\\200\\221\\277\\t\\374\\222\\204\\006\\200\\326\\025\\335h\\177\\000\\000 \\323\\025\\335h\\177\\000\\000\\000\\323\\025\\335h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 12650876, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6875045f43 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6874a0a6d0, read_options=..., key=..., handle_context=0x7f68dd15d6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f688c0674d0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68dd15d510 \"\\370Md\\227\\262\\374+N[ F\", buf_size_ = 32, key_size_ = 0, space_ = \"\\370Md\\227\\262\\374+N[ F\\000\\251\\243\\312\\375j\\022\\262!\\001\\305\\347\\006\\t\\000\\000\\000z_\\024\\254\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6875045f3d \"\\374\\222\\204\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6875033e90 \"\", restarts_ = 393557, num_restarts_ = 16748, current_ = 73886, restart_index_ = 3156, key_ = {key_ = 0x7f68dd15d460 \"\\370Mee\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\370Mee\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\324\\025\\335h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6875045f3d \"\\374\\222\\204\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68dd15d6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6874006700\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68dd15da60, status=status@entry=0x7f68dd15da70, merge_context=merge_context@entry=0x7f68dd15d810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68dd15da60, merge_operator = 0x0, merge_context = 0x7f68dd15d810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 787, start_index_in_curr_level_ = 787, user_key_ = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484cc998\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dd15da60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68dd15d8c8 \"\\034\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", kstart_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", end_ = 0x7f68dd15d8e5 \"z_\\024\\254\\002\\334\\005q\\002\\235\\256\\021\\n\", space_ = \"\\034\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\\000\\000\\000z_\\024\\254\\002\\334\\005q\\002\\235\\256\\021\\n\\000\\000\\000\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000|\\000\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\214h\\177\\000\\000\\200\\006\", '\\000' <repeats 14 times>, \"t\\006\\000\\000\\000\\000\\000\\000\\300\\351\\025\\335h\\177\\000\\000\\000\\347\\025\\335h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A&\\352\\\"\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061&\\352\\\"\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dd15da60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68dd15da60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68dd15e700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68dd15e700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088362526464, 1613666937563492894, 0, 0, 140088362527168, 140088362526464, -1678330093568282082, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 6 (Thread 0x7f68e5d6c700 (LWP 28416)):\n#0 Slow_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:311\nc = 781169130\n#1 Fast_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:321\nNo locals.\n#2 rocksdb::crc32c::ExtendImplrocksdb::crc32c::Fast_CRC32 (crc=<optimized out>, buf=<optimized out>, size=<optimized out>) at util/crc32c.cc:353\ne = 0x7f68e5d6ace4 \"Y\\261S\\223\"\np = 0x7f68e5d6a370 \"@\\356\\331\\003:\\245v\\316\\357\\r9q:\\330V\\305l\\231BD\\027\u057a\\264)\\005\\370d_\u6fa7\\222m\\030y\\307'\\023\\022\\211\u03f3\\342\\376h2o\ufffd\\200\\v\\223\\202\\337)m|[f\\205j&\\242\\310\\350&\\374\\063\\070\\230M\\022\\005\u05a2\\252\\064;m\\225]\\230\\357\\216W\\022a\\214\\203\\224;\\225\\363\\n\\350\\347\\250\\003=\\273\\310\\354h\\360\\214\\227)\\316\ufffd\\217\\026p(\\275@m6({\\336\\305\\034\\004\\247\\362s\\266\\300\\062\\376\\003\\031\\200\\002b\u0779\\271V\\034\\222~\\\"\\374\\033\\255\\215\\321\ufffd\\226p\\001\"\nl = <optimized out>\npval = <optimized out>\nx = <optimized out>\n#3 0x00000000004bf433 in Value (n=4004, data=0x7f68e5d69d40 \"\") at ./util/crc32c.h:24\nNo locals.\n#4 rocksdb::ReadBlock (file=<optimized out>, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e5d69d10, buf=buf@entry=0x7f68e5d69d40 \"\") at table/format.cc:240\nperf_step_timer_block_checksum_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c630}\nvalue = <optimized out>\nactual = 0\ns = <optimized out>\n#5 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e5d6b150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x7f68e5d69d40 \"\", size_ = 4008}\nbuf = \"\\000\\034\\200\\002\\232\\062t\\251\\303\\a\\356\\301\\306\u00e7J\\350/\\220\\225}J\\231\\242\\001\\000\\000\\000\\000\\000\\000\\000\\304\\361\\357qk\\234a\\217\\036\\267\\331\\g\\v`[X\\247\\177\\227i\\375\\236L\\251\\017G#\\371\\304mG\\333\\027Q\\327\ufffd\ufffd\\214.\\006z\\326\ufffd\\207/f\\356i\\rq\\261C\\340{@\\304\\003\\233G\\\\\\251q\\233\\267(\\036I\\224\\220\\262\\323f\\215\\022\\222S\\346!\\177\\311\ufffd\\200\\001\\217u\\036\\300\\063\\321,\\375Y:O\u027b\\033\\327\\364!H>\\355o\\263\\244\\372\\375\u03e5\u0221'\\245\\226n\\353\\t\\021\\327e\\266\\254T\\177;;\\361~\\327\\003\\236\\271\\274t\\231!C\\341U\ufffd\\210W}(Z\\216,\\335\\314\\066\\233\\003\\021\\rX%\\244N\\021\\344\\364xx\\364\\252:\\352znf@\\036H\\343\\033\"...\n#6 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e5d6b150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#7 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e5d6b270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#8 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6854d45400, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e5d6b4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\264\\326\\345h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\u0278\\326\\345h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\264\\326\\345h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e5d6b2a0 \"\\205\\020\\250\\220\\205\\322\\005\ufffd\\221\\221\\277\\t\\250\ufffd\\204\\006\\200\\266\\326\\345h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\250\\220\\205\\322\\005\ufffd\\221\\221\\277\\t\\250\ufffd\\204\\006\\200\\266\\326\\345h\\177\\000\\000 \\263\\326\\345h\\177\\000\\000\\000\\263\\326\\345h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 12658088, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68550cc4b4 \"\", size_ = 0}\n#9 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6854000ce0, read_options=..., key=..., handle_context=0x7f68e5d6b6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68b0020820, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e5d6b510 \"\\232\\062u\\311\\375X\\177\\036\\202G\\215\\035)a#\ufffd\\222(\\205\\322\\001\\245N\\324\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\232\\062u\\311\\375X\\177\\036\\202G\\215\\035)a#\ufffd\\222(\\205\\322\\001\\245N\\324\\t\\000\\000\\000\\006g\\351\\016\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f68550cc4ae \"\\250\ufffd\\204\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68550ba5b0 \"\", restarts_ = 389867, num_restarts_ = 16750, current_ = 73455, restart_index_ = 3158, key_ = {key_ = 0x7f68e5d6b460 \"\\232\\062vD\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\232\\062vD\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\264\\326\\345h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f68550cc4ae \"\\250\ufffd\\204\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#10 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e5d6b6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6854002470\n#11 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e5d6ba60, status=status@entry=0x7f68e5d6ba70, merge_context=merge_context@entry=0x7f68e5d6b810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e5d6ba60, merge_operator = 0x0, merge_context = 0x7f68e5d6b810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 545, start_index_in_curr_level_ = 545, user_key_ = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c94a8\n#12 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e5d6ba60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e5d6b8c8 \"\\034\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", end_ = 0x7f68e5d6b8e5 \"\\006g\\351\\016\\360R[\\217\\002\\235\\256\\021\\n\", space_ = \"\\034\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\\000\\000\\000\\006g\\351\\016\\360R[\\217\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\260h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300\\311\\326\\345h\\177\\000\\000\\000\\307\\326\\345h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000AF)\\032\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061F)\\032\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#13 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e5d6ba60) at db/db_impl.cc:3387\nNo locals.\n#14 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e5d6ba60) at ./include/rocksdb/db.h:213\nNo locals.\n#15 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#16 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#17 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#18 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#19 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#20 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#21 0x000000000055af02 in start_thread (arg=0x7f68e5d6c700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68e5d6c700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088509384448, 1613666937563492894, 0, 0, 140088509385152, 140088509384448, -1678384524762566114, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#22 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 5 (Thread 0x7f68d4550700 (LWP 28445)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=12, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 12\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d4550700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d4550700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088215668480, 1613666937563492894, 0, 0, 140088215669184, 140088215668480, -1678350424869719522, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 4 (Thread 0x7f68d314e700 (LWP 28447)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=14, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 14\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d314e700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d314e700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088194688768, 1613666937563492894, 0, 0, 140088194689472, 140088194688768, -1678360871303925218, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 3 (Thread 0x7f68d3b4f700 (LWP 28446)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=13, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 13\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d3b4f700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d3b4f700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088205178624, 1613666937563492894, 0, 0, 140088205179328, 140088205178624, -1678361694327033314, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 2 (Thread 0x7f68d274d700 (LWP 28448)):\n#0 0x000000000055e881 in write () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x000000000049716e in rocksdb::(anonymous namespace)::PosixWritableFile::Flush (this=0x7f6875c6f880) at util/env_posix.cc:758\ndone = <optimized out>\nleft = 4007\nsrc = 0x7f6875d3f7c0 \"\"\n#2 0x00000000004d17a2 in rocksdb::BlockBasedTableBuilder::Flush (this=this@entry=0x7f68742b74b0) at table/block_based_table_builder.cc:516\nr = 0x7f6875c6ff80\n#3 0x00000000004d1948 in rocksdb::BlockBasedTableBuilder::Add (this=0x7f68742b74b0, key=..., value=...) at table/block_based_table_builder.cc:479\nr = 0x7f6875c6ff80\nshould_flush = <optimized out>\n#4 0x0000000000442389 in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168867873, earliest_snapshot=earliest_snapshot@entry=168867873, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d274b4f8: 0, input=input@entry=0x7f6874012a10, compact=compact@entry=0x7f687400f1f0, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:2891\nkptr = <optimized out>\nkstr = \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\\000\\000\\000\\000\\000\\000\"\nnewkey = {data_ = 0x7f6874005408 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 28}\nseqno = 0\nhas_merge_list = <optimized out>\nkeys = 0x0\nvalues = 0x0\nkey_iter = {<std::iterator<std::random_access_iterator_tag, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const_, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>> = {<No data fields>}, current = <error reading variable>\nvalue_iter = {<std::iterator<std::random_access_iterator_tag, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const_, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>> = {<No data fields>}, current = <error reading variable>\nkey = {data_ = 0x7f6875c6fea0 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 28}\nvalue = {data_ = 0x7f6875d52110 \"X\\375n^\\362\\303?\\t7\\v&\\233\\233\\313.;\\024qH\u02a5\\215\ufffd\\215\ufffd'\ufffd\\206\\246\u0177\\265=\\235z\\364A\\204\\f|d\\321B\\301a\\375D}\\256\\243\\371\\235\\232\ufffd\\237\\215\\016\\343x\\006\\216s\ufffd\\232\\344@Y\\211`\\257Q\\024\\231fosiB\\317_\\366\\361b\u07b1\\253\\071f\\205\u03e087+\\304\\035\\221\\032\\033\\360\\341+\\a\\335\\351\\006\\363\\260\\240D\\261\\261\\376\\267\\221'@_\\006aE\u07aew\\267+L\\025\\212B\\020\\260\\035\\275\\035\\316\\061n&\\334\\067\\065h\\215\\016'\\267\\331\\005(9_\\034\\061\\376&\\330\\364\", <incomplete sequence \\355>, size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168867873\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d274b228 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\", <incomplete sequence \\372>, buf_size_ = 32, key_size_ = 20, space_ = \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\000\\000\\000\\000\\000\\337\\063th\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6875c6fea0 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 484\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d274b268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000\\b\\340\\063th\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000\\337\\063th\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#5 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f687400f1f0, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168867873\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1969 Base level 2, seek compaction:0, inputs: [11260(64MB)], [9964(64MB) 9965(64MB) 9966(64MB) 9967(64MB) 9968(64MB) 9969(64MB) 9970(64MB) 9994(5186KB) 8850(64MB) 9951(64MB)]\\000h\\177\\000\\000\\070\\320a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f6874012a10\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f687433df00\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168867873\ntmp = {buffer = \"files[0 12 116 807 0 0 0]\\000t\\322h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\u0238t\\322h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\u0238t\\322h\\177\\000\\000\u0238\", <incomplete sequence \\322>}\nis_snapshot_supported = true\nstart_micros = 1413982263127845\n#6 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d274c22f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:2321\ncompact = 0x7f687400f1f0\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6874008830\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d274c050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f6874007390, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"7\\250GT\\000\\000\\000\\000U\\363\\001\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.01 slots available 7\\000\\070\\071 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d274cbc8 \"\", aligned_alloc_ptr_ = 0x7f68d274c7c8 \"7\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d274c3c8, 0x7f68d274c5c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#8 0x0000000000496c31 in BGThread (thread_id=15, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 <rocksdb::DBImpl::BGWorkCompaction(void_)>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#9 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 15\ntp = 0x2378070\n#10 0x000000000055af02 in start_thread (arg=0x7f68d274d700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d274d700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088184198912, 1613666937563492894, 0, 0, 140088184199616, 140088184198912, -1678363344668216802, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#11 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 1 (Thread 0x7f68d6353700 (LWP 28442)):\n#0 0x000000000059c428 in **memcmp_sse4_1 ()\nNo symbol table info available.\n#1 0x0000000000492fae in compare (b=..., this=<optimized out>) at ./include/rocksdb/slice.h:127\nmin_len = -8\nr = <optimized out>\n#2 rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (this=<optimized out>, a=..., b=...) at util/comparator.cc:31\nNo locals.\n#3 0x00000000004b0c3e in rocksdb::InternalKeyComparator::Compare (this=<optimized out>, akey=..., bkey=...) at db/dbformat.cc:61\nr = <optimized out>\n#4 0x00000000004822f6 in Compare (b=..., a=..., this=<optimized out>) at ./db/dbformat.h:164\nNo locals.\n#5 BySmallestKey (cmp=<optimized out>, b=0x7f685c9f5670, a=0x7f685c9f5730) at db/version_set.cc:81\nr = <optimized out>\n#6 operator() (this=0x7f685c1ed7c0, this=0x7f685c1ed7c0, f2=0x7f685c9f5670, f1=0x7f685c9f5730) at db/version_set.cc:1502\nNo locals.\n#7 _M_get_insert_unique_pos (__k=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_tree.h:1324\n__x = 0x7f685c9f5700\n__y = 0x7f685c9f5700\n__comp = true\n__j = <optimized out>\n#8 _M_insert_unique<rocksdb::FileMetaData* const&> (__v=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_tree.h:1377\n__res = <optimized out>\n#9 insert (__x=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_set.h:463\nNo locals.\n#10 rocksdb::VersionSet::Builder::Apply (this=this@entry=0x7f685c002620, edit=<optimized out>) at db/version_set.cc:1658\nlevel = <optimized out>\nf = 0x7f685c9f5730\n__for_range = <optimized out>\ndel = <optimized out>\n#11 0x0000000000476d20 in rocksdb::VersionSet::LogAndApplyHelper (this=this@entry=0x237d100, cfd=cfd@entry=0x2380280, builder=builder@entry=0x7f685c002620, v=v@entry=0x7f685dd6d4c0, edit=<optimized out>, mu=mu@entry=0x237b250) at db/version_set.cc:2064\nNo locals.\n#12 0x000000000047dd78 in rocksdb::VersionSet::LogAndApply (this=0x237d100, column_family_data=0x2380280, edit=0x7f685c003a50, mu=mu@entry=0x237b250, db_directory=0x237f030, new_descriptor_log=new_descriptor_log@entry=false, options=options@entry=0x0) at db/version_set.cc:1834\n__for_range = std::deque with 1 elements = {0x7f68d6351060}\nw = {status = {code_ = rocksdb::Status::kOk, state_ = 0x0}, done = false, cv = {cv_ = {__data = {__lock = 0, __futex = 0, __total_seq = 0, __wakeup_seq = 0, __woken_seq = 0, __mutex = 0x0, __nwaiters = 0, __broadcast_seq = 0}, __size = '\\000' <repeats 47 times>, __align = 0}, mu_ = 0x237b250}, cfd = 0x2380280, edit = 0x7f685c003a50}\nbuilder = std::unique_ptrrocksdb::VersionSet::Builder containing 0x7f685c002620\ns = {code_ = 176, state_ = 0x2200000 <error: Cannot access memory at address 0x2200000>}\nbatch_edits = std::vector of length 0, capacity 0\nv = 0x7f685dd6d4c0\nlast_writer = 0x7f68d6351060\nnew_manifest_file_size = <optimized out>\n#13 0x000000000043c791 in rocksdb::DBImpl::InstallCompactionResults (this=this@entry=0x237b120, compact=compact@entry=0x7f685c014920, log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:2559\nNo locals.\n#14 0x00000000004439ed in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f685c014920, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:3289\nimm_micros = 0\nvisible_at_tip = 168930973\nstats = {micros = <optimized out>, bytes_readn = <optimized out>, bytes_readnp1 = <optimized out>, bytes_written = 623863468, files_in_leveln = <optimized out>, files_in_levelnp1 = <optimized out>, files_out_levelnp1 = <optimized out>, count = <optimized out>}\nprefix_initialized = <optimized out>\nscratch = \"Base version 1972 Base level 2, seek compaction:0, inputs: [11276(64MB)], [10825(64MB) 10873(5082KB) 9691(64MB) 9692(64MB) 9693(64MB) 9694(64MB) 9695(64MB) 9696(64MB) 9697(64MB) 9698(64MB)]\\000\\000\\000\\037\\302a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f685c004140\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = 194332\nearliest_snapshot = 168930973\ntmp = {buffer = \"\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\060\\034\\065\\326h\\177\\000\\000 \\034\\065\\326h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310\\030\\065\\326h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310\\030\\065\\326h\\177\\000\\000\\310\\030\", <incomplete sequence \\326>}\nis_snapshot_supported = true\nstart_micros = 1413982275951849\n#15 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d635222f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:2321\ncompact = 0x7f685c014920\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f685c9f1110\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d6352050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#16 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f685c017a60, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"C\\250GT\\000\\000\\000\\000\\002\\206\\016\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.02 slots available 9\\000\\071\\064 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d6352bc8 \"\", aligned_alloc_ptr_ = 0x7f68d63529c8 \"\\203\\247GT\", alloc_bytes_remaining_ = 512, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 1, values_ = {0x7f68d63527c8, 0x7f68d63525c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#17 0x0000000000496c31 in BGThread (thread_id=9, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#18 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 9\ntp = 0x2378070\n#19 0x000000000055af02 in start_thread (arg=0x7f68d6353700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d6353700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088247138048, 1613666937563492894, 0, 0, 140088247138752, 140088247138048, -1678353999893122530, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#20 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60173960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60340094", "html_url": "https://github.com/facebook/rocksdb/issues/359#issuecomment-60340094", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/359", "id": 60340094, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-24T03:20:18Z", "updated_at": "2014-10-24T03:20:18Z", "author_association": "NONE", "body": "I'm not sure what are you asking me for. If you could share what gdb commands would you like me to execute I can do that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60340094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60503580", "html_url": "https://github.com/facebook/rocksdb/issues/359#issuecomment-60503580", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/359", "id": 60503580, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-26T01:42:51Z", "updated_at": "2014-10-26T01:42:51Z", "author_association": "NONE", "body": "Closing since I've verified it's the same issue than #365\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60503580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60456064", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-60456064", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 60456064, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-24T22:10:09Z", "updated_at": "2014-10-24T22:10:09Z", "author_association": "NONE", "body": "This smells like the same issue I reported in #359 but in this case it was a debug build.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60456064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60532376", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-60532376", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 60532376, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-26T21:09:02Z", "updated_at": "2014-10-26T21:09:02Z", "author_association": "NONE", "body": "I've found out the way to repro the crash. The problem happens when compaction code fails to open files due to too many open files. Unfortunately, Linux sets the maximum to 1024 by default (ulimit -n), while RocksDB default is max_open_files=5000.\nBy setting a higher value in ulimit the problem goes away and my stress test passes fine. On the other hand, setting it to something quite low like 50 makes RocksDB crash much more easily.\nBesides fixing the crash, maybe the default value for RocksDB should be reconsidered.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60532376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60535245", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-60535245", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 60535245, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-26T22:31:08Z", "updated_at": "2014-10-26T22:31:08Z", "author_association": "NONE", "body": "Sorry for oversimplifying the ulimit issue. The distributions I've used for development are Ubuntu based, and my deployment is in Scientific Linux, a quite different distribution. Both have it set to 1024 by default, because of that I'm guessing it's a common default, but you're totally right, other distributions may set it to different values.\nIn any case, it's impossible to know what other handles are open in the process, so maybe it's not worth it to change RocksDB default, but it shouldn't crash either :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60535245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60558638", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-60558638", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 60558638, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-27T07:44:49Z", "updated_at": "2014-10-27T07:44:49Z", "author_association": "NONE", "body": "It does happen in 3.5.1, please see #359 for stack traces on how this looks like in that version and in release build (no assertion, but it crashes anyway).\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60558638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60629068", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-60629068", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 60629068, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-27T17:05:48Z", "updated_at": "2014-10-27T17:05:48Z", "author_association": "NONE", "body": "https://drive.google.com/file/d/0B5b62mktIEdjdG91LVgzcmhyN2s/view?usp=sharing\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60629068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/61140026", "html_url": "https://github.com/facebook/rocksdb/issues/365#issuecomment-61140026", "issue_url": "https://api.github.com/repos/facebook/rocksdb/issues/365", "id": 61140026, "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-30T18:02:51Z", "updated_at": "2014-10-30T18:02:51Z", "author_association": "NONE", "body": "3.6.2 doesn't crash, but I'm getting kIOError \"Too many open files\" in a write right after I see this in the LOG:\n2014/10/30-10:55:27.441455 7f8ce4968700 [default] Level-0 flush table #44: started\n2014/10/30-10:55:27.441485 7f8ce4968700 [default] Level-0 flush table #44: 0 bytes IO error: csp.db/000044.sst: Too many open files\n2014/10/30-10:55:27.441558 7f8ced9b2700 (Original Log Time 2014/10/30-10:55:27.441551) Compaction nothing to do\n2014/10/30-10:55:27.814053 7f8ce4968700 Waiting after background flush error: IO error: csp.db/000044.sst: Too many open filesAccumulated background error counts: 1\n\nIs this expected?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/61140026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4580949", "html_url": "https://github.com/facebook/rocksdb/commit/60bf2b7d4a78f2477ba2ecc231c0963080c5362d#commitcomment-4580949", "id": 4580949, "user": {"login": "maoy", "id": 545783, "avatar_url": "https://avatars0.githubusercontent.com/u/545783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maoy", "html_url": "https://github.com/maoy", "followers_url": "https://api.github.com/users/maoy/followers", "following_url": "https://api.github.com/users/maoy/following{/other_user}", "gists_url": "https://api.github.com/users/maoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/maoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maoy/subscriptions", "organizations_url": "https://api.github.com/users/maoy/orgs", "repos_url": "https://api.github.com/users/maoy/repos", "events_url": "https://api.github.com/users/maoy/events{/privacy}", "received_events_url": "https://api.github.com/users/maoy/received_events", "type": "User", "site_admin": false}, "position": 25, "line": 240, "path": "include/leveldb/db.h", "commit_id": "60bf2b7d4a78f2477ba2ecc231c0963080c5362d", "created_at": "2013-11-12T21:45:23Z", "updated_at": "2013-11-12T21:45:23Z", "author_association": "NONE", "body": "Did you mean GetLiveTableMetaData?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4580949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4584830", "html_url": "https://github.com/facebook/rocksdb/commit/60bf2b7d4a78f2477ba2ecc231c0963080c5362d#commitcomment-4584830", "id": 4584830, "user": {"login": "dhruba", "id": 155266, "avatar_url": "https://avatars2.githubusercontent.com/u/155266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhruba", "html_url": "https://github.com/dhruba", "followers_url": "https://api.github.com/users/dhruba/followers", "following_url": "https://api.github.com/users/dhruba/following{/other_user}", "gists_url": "https://api.github.com/users/dhruba/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhruba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhruba/subscriptions", "organizations_url": "https://api.github.com/users/dhruba/orgs", "repos_url": "https://api.github.com/users/dhruba/repos", "events_url": "https://api.github.com/users/dhruba/events{/privacy}", "received_events_url": "https://api.github.com/users/dhruba/received_events", "type": "User", "site_admin": false}, "position": 25, "line": 240, "path": "include/leveldb/db.h", "commit_id": "60bf2b7d4a78f2477ba2ecc231c0963080c5362d", "created_at": "2013-11-13T06:46:46Z", "updated_at": "2013-11-13T06:46:46Z", "author_association": "CONTRIBUTOR", "body": "Yes!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4584830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4589365", "html_url": "https://github.com/facebook/rocksdb/commit/60bf2b7d4a78f2477ba2ecc231c0963080c5362d#commitcomment-4589365", "id": 4589365, "user": {"login": "maoy", "id": 545783, "avatar_url": "https://avatars0.githubusercontent.com/u/545783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maoy", "html_url": "https://github.com/maoy", "followers_url": "https://api.github.com/users/maoy/followers", "following_url": "https://api.github.com/users/maoy/following{/other_user}", "gists_url": "https://api.github.com/users/maoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/maoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maoy/subscriptions", "organizations_url": "https://api.github.com/users/maoy/orgs", "repos_url": "https://api.github.com/users/maoy/repos", "events_url": "https://api.github.com/users/maoy/events{/privacy}", "received_events_url": "https://api.github.com/users/maoy/received_events", "type": "User", "site_admin": false}, "position": 25, "line": 240, "path": "include/leveldb/db.h", "commit_id": "60bf2b7d4a78f2477ba2ecc231c0963080c5362d", "created_at": "2013-11-13T15:58:54Z", "updated_at": "2013-11-13T15:58:54Z", "author_association": "NONE", "body": "I'm not sure we are ready to deprecate GetLiveFiles() yet. Looking at GetLiveTableMetaData(), it misses the following:\n- CURRENT and MANIFEST file names (only sst files)\n- manifest file size\n- option to flush.\n\nI don't fully understand the implications but at least the first two items seem pretty important.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4589365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4590840", "html_url": "https://github.com/facebook/rocksdb/commit/60bf2b7d4a78f2477ba2ecc231c0963080c5362d#commitcomment-4590840", "id": 4590840, "user": {"login": "dhruba", "id": 155266, "avatar_url": "https://avatars2.githubusercontent.com/u/155266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhruba", "html_url": "https://github.com/dhruba", "followers_url": "https://api.github.com/users/dhruba/followers", "following_url": "https://api.github.com/users/dhruba/following{/other_user}", "gists_url": "https://api.github.com/users/dhruba/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhruba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhruba/subscriptions", "organizations_url": "https://api.github.com/users/dhruba/orgs", "repos_url": "https://api.github.com/users/dhruba/repos", "events_url": "https://api.github.com/users/dhruba/events{/privacy}", "received_events_url": "https://api.github.com/users/dhruba/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "60bf2b7d4a78f2477ba2ecc231c0963080c5362d", "created_at": "2013-11-13T18:00:51Z", "updated_at": "2013-11-13T18:00:51Z", "author_association": "CONTRIBUTOR", "body": "I think you are right \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4590840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4609110", "html_url": "https://github.com/facebook/rocksdb/commit/e0ad0f26b8cd54b7dce2d883f7d15068532f62e6#commitcomment-4609110", "id": 4609110, "user": {"login": "gubatron", "id": 163977, "avatar_url": "https://avatars3.githubusercontent.com/u/163977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gubatron", "html_url": "https://github.com/gubatron", "followers_url": "https://api.github.com/users/gubatron/followers", "following_url": "https://api.github.com/users/gubatron/following{/other_user}", "gists_url": "https://api.github.com/users/gubatron/gists{/gist_id}", "starred_url": "https://api.github.com/users/gubatron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gubatron/subscriptions", "organizations_url": "https://api.github.com/users/gubatron/orgs", "repos_url": "https://api.github.com/users/gubatron/repos", "events_url": "https://api.github.com/users/gubatron/events{/privacy}", "received_events_url": "https://api.github.com/users/gubatron/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e0ad0f26b8cd54b7dce2d883f7d15068532f62e6", "created_at": "2013-11-15T02:50:39Z", "updated_at": "2013-11-15T02:50:39Z", "author_association": "NONE", "body": "takes longer to write the commit message than the actual fix, what a nightmare working like that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4609110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4639997", "html_url": "https://github.com/facebook/rocksdb/commit/97d8e573a6f97cbf40b55744110c8268689d510d#commitcomment-4639997", "id": 4639997, "user": {"login": "juneng603", "id": 1412052, "avatar_url": "https://avatars0.githubusercontent.com/u/1412052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juneng603", "html_url": "https://github.com/juneng603", "followers_url": "https://api.github.com/users/juneng603/followers", "following_url": "https://api.github.com/users/juneng603/following{/other_user}", "gists_url": "https://api.github.com/users/juneng603/gists{/gist_id}", "starred_url": "https://api.github.com/users/juneng603/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juneng603/subscriptions", "organizations_url": "https://api.github.com/users/juneng603/orgs", "repos_url": "https://api.github.com/users/juneng603/repos", "events_url": "https://api.github.com/users/juneng603/events{/privacy}", "received_events_url": "https://api.github.com/users/juneng603/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "97d8e573a6f97cbf40b55744110c8268689d510d", "created_at": "2013-11-19T13:56:01Z", "updated_at": "2013-11-19T13:56:01Z", "author_association": "NONE", "body": "depending on your commits, posix_fadvice() or Fadvice will not be anything in Mac OS. Is this no side-effects for the performance on it?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4639997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643173", "html_url": "https://github.com/facebook/rocksdb/commit/97d8e573a6f97cbf40b55744110c8268689d510d#commitcomment-4643173", "id": 4643173, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "97d8e573a6f97cbf40b55744110c8268689d510d", "created_at": "2013-11-19T18:24:04Z", "updated_at": "2013-11-19T18:24:04Z", "author_association": "CONTRIBUTOR", "body": "As our primary production platform is Linux, We do not (or plan to) run any production workload on mac.\nWe made sure rocksdb can be compiled on OSX just for convenience :-)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643282", "html_url": "https://github.com/facebook/rocksdb/commit/97d8e573a6f97cbf40b55744110c8268689d510d#commitcomment-4643282", "id": 4643282, "user": {"login": "mdcallag", "id": 1641037, "avatar_url": "https://avatars0.githubusercontent.com/u/1641037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdcallag", "html_url": "https://github.com/mdcallag", "followers_url": "https://api.github.com/users/mdcallag/followers", "following_url": "https://api.github.com/users/mdcallag/following{/other_user}", "gists_url": "https://api.github.com/users/mdcallag/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdcallag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdcallag/subscriptions", "organizations_url": "https://api.github.com/users/mdcallag/orgs", "repos_url": "https://api.github.com/users/mdcallag/repos", "events_url": "https://api.github.com/users/mdcallag/events{/privacy}", "received_events_url": "https://api.github.com/users/mdcallag/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "97d8e573a6f97cbf40b55744110c8268689d510d", "created_at": "2013-11-19T18:31:50Z", "updated_at": "2013-11-19T18:31:50Z", "author_association": "CONTRIBUTOR", "body": "Do we make it clear anywhere that is the case? At some point in time InnoDB\nhad to do special things for OSX to make sure that fsync really forced data\nto disk. See\nhttp://dev.mysql.com/doc/refman/5.6/en/innodb-configuration.html or google\nfor more details.\n# if defined(HAVE_DARWIN_THREADS)\n# ifndef F_FULLFSYNC\n\n```\n    /* The following definition is from the Mac OS X 10.3 <sys/fcntl.h>\n```\n\n*/\n# define F_FULLFSYNC 51 /\\* fsync + ask the drive to flush to the media */\n# elif F_FULLFSYNC != 51\n# error \"F_FULLFSYNC != 51: ABI incompatibility with Mac OS X 10.3\"\n# endif\n\n```\n    /* Apple has disabled fsync() for internal disk drives in OS X. That\n    caused corruption for a user when he tested a power outage. Let us\n```\n\nin\n        OS X use a nonstandard flush method recommended by an Apple\n        engineer. */\n\n```\n    if (!srv_have_fullfsync) {\n            /* If we are not on an operating system that supports this,\n            then fall back to a plain fsync. */\n\n            ret = os_file_fsync(file);\n    } else {\n            ret = fcntl(file, F_FULLFSYNC, NULL);\n\n            if (ret) {\n                    /* If we are not on a file system that supports\n```\n\nthis,\n                        then fall back to a plain fsync. */\n                        ret = os_file_fsync(file);\n                }\n        }\n# else\n\nOn Tue, Nov 19, 2013 at 10:24 AM, Kai Liu notifications@github.com wrote:\n\n> As our primary production platform is Linux, We do not (or plan to) run\n> any production workload on mac.\n> We made sure rocksdb can be compiled on OSX just for convenience :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/commit/97d8e573a6f97cbf40b55744110c8268689d510d#commitcomment-4643173\n> .\n## \n\nMark Callaghan\nmdcallag@gmail.com\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4698738", "html_url": "https://github.com/facebook/rocksdb/commit/793fdd6731a8df7423f2b82e4f7ad35bad5cd7c0#commitcomment-4698738", "id": 4698738, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "793fdd6731a8df7423f2b82e4f7ad35bad5cd7c0", "created_at": "2013-11-26T00:10:28Z", "updated_at": "2013-11-26T00:10:28Z", "author_association": "CONTRIBUTOR", "body": "Igor, -fPIC will break the 3rd party release.\n\nWe'd enable -fPIC only when we are not in development environment. I'll come up with another diff to fix this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4698738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706583", "html_url": "https://github.com/facebook/rocksdb/commit/e60dde71c7a5a5922863b024f932b0c4f90b5050#commitcomment-4706583", "id": 4706583, "user": {"login": "Photonios", "id": 5777517, "avatar_url": "https://avatars2.githubusercontent.com/u/5777517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Photonios", "html_url": "https://github.com/Photonios", "followers_url": "https://api.github.com/users/Photonios/followers", "following_url": "https://api.github.com/users/Photonios/following{/other_user}", "gists_url": "https://api.github.com/users/Photonios/gists{/gist_id}", "starred_url": "https://api.github.com/users/Photonios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Photonios/subscriptions", "organizations_url": "https://api.github.com/users/Photonios/orgs", "repos_url": "https://api.github.com/users/Photonios/repos", "events_url": "https://api.github.com/users/Photonios/events{/privacy}", "received_events_url": "https://api.github.com/users/Photonios/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e60dde71c7a5a5922863b024f932b0c4f90b5050", "created_at": "2013-11-26T17:57:06Z", "updated_at": "2013-11-26T17:57:06Z", "author_association": "NONE", "body": "It should be noted that 'libgflags-dev' is not in all well-known repositories.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706610", "html_url": "https://github.com/facebook/rocksdb/commit/fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6#commitcomment-4706610", "id": 4706610, "user": {"login": "Photonios", "id": 5777517, "avatar_url": "https://avatars2.githubusercontent.com/u/5777517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Photonios", "html_url": "https://github.com/Photonios", "followers_url": "https://api.github.com/users/Photonios/followers", "following_url": "https://api.github.com/users/Photonios/following{/other_user}", "gists_url": "https://api.github.com/users/Photonios/gists{/gist_id}", "starred_url": "https://api.github.com/users/Photonios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Photonios/subscriptions", "organizations_url": "https://api.github.com/users/Photonios/orgs", "repos_url": "https://api.github.com/users/Photonios/repos", "events_url": "https://api.github.com/users/Photonios/events{/privacy}", "received_events_url": "https://api.github.com/users/Photonios/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6", "created_at": "2013-11-26T18:00:05Z", "updated_at": "2013-11-26T18:00:05Z", "author_association": "NONE", "body": "This is exactly my commit.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706659", "html_url": "https://github.com/facebook/rocksdb/commit/fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6#commitcomment-4706659", "id": 4706659, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6", "created_at": "2013-11-26T18:04:07Z", "updated_at": "2013-11-26T18:04:07Z", "author_association": "CONTRIBUTOR", "body": "Yes, the only difference is that we do that check only in non-FB environment - we have other requirements for FB environment.\n\nThanks for your contribution!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706692", "html_url": "https://github.com/facebook/rocksdb/commit/fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6#commitcomment-4706692", "id": 4706692, "user": {"login": "Photonios", "id": 5777517, "avatar_url": "https://avatars2.githubusercontent.com/u/5777517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Photonios", "html_url": "https://github.com/Photonios", "followers_url": "https://api.github.com/users/Photonios/followers", "following_url": "https://api.github.com/users/Photonios/following{/other_user}", "gists_url": "https://api.github.com/users/Photonios/gists{/gist_id}", "starred_url": "https://api.github.com/users/Photonios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Photonios/subscriptions", "organizations_url": "https://api.github.com/users/Photonios/orgs", "repos_url": "https://api.github.com/users/Photonios/repos", "events_url": "https://api.github.com/users/Photonios/events{/privacy}", "received_events_url": "https://api.github.com/users/Photonios/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6", "created_at": "2013-11-26T18:07:32Z", "updated_at": "2013-11-26T18:07:32Z", "author_association": "NONE", "body": "Maybe you would like to share, how and why it's different. I guess other people (including myself) would love to know what makes Facebook's environment different from everybody else... :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4724246", "html_url": "https://github.com/facebook/rocksdb/commit/fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6#commitcomment-4724246", "id": 4724246, "user": {"login": "dyu", "id": 79355, "avatar_url": "https://avatars2.githubusercontent.com/u/79355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyu", "html_url": "https://github.com/dyu", "followers_url": "https://api.github.com/users/dyu/followers", "following_url": "https://api.github.com/users/dyu/following{/other_user}", "gists_url": "https://api.github.com/users/dyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyu/subscriptions", "organizations_url": "https://api.github.com/users/dyu/orgs", "repos_url": "https://api.github.com/users/dyu/repos", "events_url": "https://api.github.com/users/dyu/events{/privacy}", "received_events_url": "https://api.github.com/users/dyu/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "fd4eca73e75282cf89b6de7f6f3bb4cf2b0acbc6", "created_at": "2013-11-28T08:10:40Z", "updated_at": "2013-11-28T08:10:40Z", "author_association": "CONTRIBUTOR", "body": "For one, they use an ancient version of the linux kernel (2.x with upstream patches).  I'm guessing its probably similar to google (as they have a lot of ex-googlers).\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4724246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967549", "html_url": "https://github.com/facebook/rocksdb/commit/5643ae1a3ffa2281eb84d63660d8830cb6f68baa#commitcomment-4967549", "id": 4967549, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5643ae1a3ffa2281eb84d63660d8830cb6f68baa", "created_at": "2014-01-02T08:36:58Z", "updated_at": "2014-01-02T08:36:58Z", "author_association": "CONTRIBUTOR", "body": "@liukai we also need to add -DROCKSDB_FALLOCATE_PRESENT to our fbcode build\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967903", "html_url": "https://github.com/facebook/rocksdb/commit/5643ae1a3ffa2281eb84d63660d8830cb6f68baa#commitcomment-4967903", "id": 4967903, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5643ae1a3ffa2281eb84d63660d8830cb6f68baa", "created_at": "2014-01-02T10:00:52Z", "updated_at": "2014-01-02T10:00:52Z", "author_association": "CONTRIBUTOR", "body": "https://github.com/facebook/rocksdb/commit/52ea1be90aeac4560a4993cda2c48b4dc084f2ce\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4971181", "html_url": "https://github.com/facebook/rocksdb/commit/5643ae1a3ffa2281eb84d63660d8830cb6f68baa#commitcomment-4971181", "id": 4971181, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "5643ae1a3ffa2281eb84d63660d8830cb6f68baa", "created_at": "2014-01-02T18:47:20Z", "updated_at": "2014-01-02T18:47:20Z", "author_association": "CONTRIBUTOR", "body": "@igorcanadi that's right, thank you!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4971181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017176", "html_url": "https://github.com/facebook/rocksdb/commit/774ed89c2405ee058086b099cbc8b29e243739cc#commitcomment-5017176", "id": 5017176, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "774ed89c2405ee058086b099cbc8b29e243739cc", "created_at": "2014-01-08T22:31:54Z", "updated_at": "2014-01-08T22:31:54Z", "author_association": "CONTRIBUTOR", "body": "I think it would be good to merge this diff into master. @liukai thoughts?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017237", "html_url": "https://github.com/facebook/rocksdb/commit/774ed89c2405ee058086b099cbc8b29e243739cc#commitcomment-5017237", "id": 5017237, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "774ed89c2405ee058086b099cbc8b29e243739cc", "created_at": "2014-01-08T22:39:47Z", "updated_at": "2014-01-08T22:39:47Z", "author_association": "CONTRIBUTOR", "body": "merging back might be a little bit difficult. Previous I made changes in performance since comparatively it's like a superset of master branch. Merging back to master will result in quite some conflicts.\n\nDo you have any task depend on this change? \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017275", "html_url": "https://github.com/facebook/rocksdb/commit/774ed89c2405ee058086b099cbc8b29e243739cc#commitcomment-5017275", "id": 5017275, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "774ed89c2405ee058086b099cbc8b29e243739cc", "created_at": "2014-01-08T22:44:31Z", "updated_at": "2014-01-08T22:44:31Z", "author_association": "CONTRIBUTOR", "body": "I wasn't thinking about merging this exact diff, but rather doing the same thing (replacing some vectors with autovectors) in master branch. But I have no blocked tasks, so don't worry about it :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103105", "html_url": "https://github.com/facebook/rocksdb/commit/481c77e526e59accf98ef9a5527ab7fb0e40104b#commitcomment-5103105", "id": 5103105, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "481c77e526e59accf98ef9a5527ab7fb0e40104b", "created_at": "2014-01-17T17:51:06Z", "updated_at": "2014-01-17T17:51:06Z", "author_association": "CONTRIBUTOR", "body": "I do `make release` when I do some regression/performance testing. Creating shared library is taking few minutes (?) and I don't really need it. Can we compile shared library outside of `make release`? Maybe `make librocks.so` or `make shared`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103191", "html_url": "https://github.com/facebook/rocksdb/commit/481c77e526e59accf98ef9a5527ab7fb0e40104b#commitcomment-5103191", "id": 5103191, "user": {"login": "dhruba", "id": 155266, "avatar_url": "https://avatars2.githubusercontent.com/u/155266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhruba", "html_url": "https://github.com/dhruba", "followers_url": "https://api.github.com/users/dhruba/followers", "following_url": "https://api.github.com/users/dhruba/following{/other_user}", "gists_url": "https://api.github.com/users/dhruba/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhruba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhruba/subscriptions", "organizations_url": "https://api.github.com/users/dhruba/orgs", "repos_url": "https://api.github.com/users/dhruba/repos", "events_url": "https://api.github.com/users/dhruba/events{/privacy}", "received_events_url": "https://api.github.com/users/dhruba/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "481c77e526e59accf98ef9a5527ab7fb0e40104b", "created_at": "2014-01-17T18:02:18Z", "updated_at": "2014-01-17T18:02:18Z", "author_association": "CONTRIBUTOR", "body": "igor: can you instead do\nmake OPT=-O2 -DNDEBUG librocksdb.a\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103654", "html_url": "https://github.com/facebook/rocksdb/commit/481c77e526e59accf98ef9a5527ab7fb0e40104b#commitcomment-5103654", "id": 5103654, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "481c77e526e59accf98ef9a5527ab7fb0e40104b", "created_at": "2014-01-17T18:51:20Z", "updated_at": "2014-01-17T18:51:20Z", "author_association": "CONTRIBUTOR", "body": "It does take a long time to compile.\n\nTo speed up our daily development, I'll separate that process to `make shared`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273584", "html_url": "https://github.com/facebook/rocksdb/commit/a82f42b76545c7e212e9bdb16f4c9fb769ffb127#commitcomment-5273584", "id": 5273584, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "a82f42b76545c7e212e9bdb16f4c9fb769ffb127", "created_at": "2014-02-04T20:47:04Z", "updated_at": "2014-02-04T20:47:04Z", "author_association": "CONTRIBUTOR", "body": "Can we remove this rename from the performance branch and then do the rename in master (after the performance is pushed)? Rename will make resolving merge conflicts a bit more difficult.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273945", "html_url": "https://github.com/facebook/rocksdb/commit/a82f42b76545c7e212e9bdb16f4c9fb769ffb127#commitcomment-5273945", "id": 5273945, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "a82f42b76545c7e212e9bdb16f4c9fb769ffb127", "created_at": "2014-02-04T21:20:05Z", "updated_at": "2014-02-04T21:20:05Z", "author_association": "CONTRIBUTOR", "body": "I actually fine with the change.\nWe've resolve this issue once. I think git merge, with all the commit history is smart to avoid doing the conflict resolution in next merge. Even if there's conflict, I think resolving it is very simple :-)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5274683", "html_url": "https://github.com/facebook/rocksdb/commit/a82f42b76545c7e212e9bdb16f4c9fb769ffb127#commitcomment-5274683", "id": 5274683, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "a82f42b76545c7e212e9bdb16f4c9fb769ffb127", "created_at": "2014-02-04T22:18:22Z", "updated_at": "2014-02-04T22:18:22Z", "author_association": "CONTRIBUTOR", "body": "aaah, great :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5274683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5341963", "html_url": "https://github.com/facebook/rocksdb/commit/d4b789fdeea1577a10c6b0de52286d43b7a3402f#commitcomment-5341963", "id": 5341963, "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 492, "path": "db/db_impl.cc", "commit_id": "d4b789fdeea1577a10c6b0de52286d43b7a3402f", "created_at": "2014-02-11T17:16:15Z", "updated_at": "2014-02-11T17:16:15Z", "author_association": "CONTRIBUTOR", "body": "yoeref? :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5341963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5342960", "html_url": "https://github.com/facebook/rocksdb/commit/d4b789fdeea1577a10c6b0de52286d43b7a3402f#commitcomment-5342960", "id": 5342960, "user": {"login": "liukai", "id": 685252, "avatar_url": "https://avatars2.githubusercontent.com/u/685252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liukai", "html_url": "https://github.com/liukai", "followers_url": "https://api.github.com/users/liukai/followers", "following_url": "https://api.github.com/users/liukai/following{/other_user}", "gists_url": "https://api.github.com/users/liukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liukai/subscriptions", "organizations_url": "https://api.github.com/users/liukai/orgs", "repos_url": "https://api.github.com/users/liukai/repos", "events_url": "https://api.github.com/users/liukai/events{/privacy}", "received_events_url": "https://api.github.com/users/liukai/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 492, "path": "db/db_impl.cc", "commit_id": "d4b789fdeea1577a10c6b0de52286d43b7a3402f", "created_at": "2014-02-11T18:34:27Z", "updated_at": "2014-02-11T18:34:27Z", "author_association": "CONTRIBUTOR", "body": "Good catch. Will change it my current diff\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5342960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6049155", "html_url": "https://github.com/facebook/rocksdb/commit/e37dd216f9384bfdabc6760fa296e8ee28c79d30#commitcomment-6049155", "id": 6049155, "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "e37dd216f9384bfdabc6760fa296e8ee28c79d30", "created_at": "2014-04-17T20:49:28Z", "updated_at": "2014-04-17T20:49:28Z", "author_association": "CONTRIBUTOR", "body": "@liukai , when you mention \"another team encountered an error\", which error do you mean?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6049155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6070753", "html_url": "https://github.com/facebook/rocksdb/commit/62551b1c4ed617d9ceaac845832b1e51026f86d1#commitcomment-6070753", "id": 6070753, "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "62551b1c4ed617d9ceaac845832b1e51026f86d1", "created_at": "2014-04-21T16:59:45Z", "updated_at": "2014-04-21T16:59:45Z", "author_association": "CONTRIBUTOR", "body": "This breaks the build if you try to compile tests with -DNDEBUG... maybe TEST(DBTest, TransactionLogIteratorRace) should be excluded by an ifdef in this case.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6070753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975285", "pull_request_review_id": null, "id": 8975285, "diff_hunk": "@@ -198,9 +221,9 @@ void Compaction::Summary(char* output, int len) {\n     return;\n   }\n \n-  char level_low_summary[100];\n+  char level_low_summary[1024];\n   InputSummary(inputs_[0], level_low_summary, sizeof(level_low_summary));\n-  char level_up_summary[100];\n+  char level_up_summary[1024];", "path": "db/compaction.cc", "position": null, "original_position": 49, "commit_id": "af7838de36fd54dd7bb02969a2e4b47215e9cb05", "original_commit_id": "5e3aeb5f8e029aafbf46b61e7345e8e25cb5dda1", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "This means lots of memcpy and it's all done inside of the mutex. Can you refactor the code such that InputSummary directly takes `char* output` (parameter of Summary) and returns the size (so that you can keep writing) (maybe Summary can also take `char **output` and advance the pointer automatically)? You can do similar thing with FileSizeSummary.\n", "created_at": "2014-01-17T18:38:44Z", "updated_at": "2014-01-25T22:13:54Z", "html_url": "https://github.com/facebook/rocksdb/pull/47#discussion_r8975285", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/47", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975285"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/47#discussion_r8975285"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/47"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975384", "pull_request_review_id": null, "id": 8975384, "diff_hunk": "@@ -2043,6 +2043,98 @@ static std::string Key(int i) {\n   }\n }\n \n+TEST(DBTest, UniversalCompactionStopStyleSimilarSize) {\n+  Options options = CurrentOptions();\n+  options.compaction_style = kCompactionStyleUniversal;\n+  options.write_buffer_size = 100<<10; //100KB\n+  // trigger compaction if there are >= 4 files\n+  options.level0_file_num_compaction_trigger = 4;\n+  options.compaction_options_universal.size_ratio = 10;\n+  options.compaction_options_universal.stop_style = kCompactionStopStyleSimilarSize;\n+  Reopen(&options);\n+\n+  Random rnd(301);\n+  int key_idx = 0;\n+\n+  // Stage 1:\n+  //   Generate a set of files at level 0, but don't trigger level-0\n+  //   compaction.\n+  for (int num = 0;\n+       num < options.level0_file_num_compaction_trigger-1;\n+       num++) {\n+    // Write 120KB (12 values, each 10K)\n+    for (int i = 0; i < 12; i++) {\n+      ASSERT_OK(Put(Key(key_idx), RandomString(&rnd, 10000)));\n+      key_idx++;\n+    }\n+    dbfull()->TEST_WaitForFlushMemTable();\n+    ASSERT_EQ(NumTableFilesAtLevel(0), num + 1);\n+  }\n+\n+  // Generate one more file at level-0, which should trigger level-0\n+  // compaction.\n+  for (int i = 0; i < 12; i++) {\n+    ASSERT_OK(Put(Key(key_idx), RandomString(&rnd, 10000)));\n+    key_idx++;\n+  }\n+  dbfull()->TEST_WaitForCompact();\n+  // Suppose each file flushed from mem table has size 1. Now we compact\n+  // (level0_file_num_compaction_trigger+1)=4 files and should have a big\n+  // file of size 4.\n+  ASSERT_EQ(NumTableFilesAtLevel(0), 1);\n+  for (int i = 1; i < options.num_levels ; i++) {\n+    ASSERT_EQ(NumTableFilesAtLevel(i), 0);\n+  }\n+\n+  // Stage 2:\n+  //   Now we have one file at level 0, with size 4. We also have some data in\n+  //   mem table. Let's continue generating new files at level 0, but don't\n+  //   trigger level-0 compaction.\n+  //   First, clean up memtable before inserting new data. This will generate\n+  //   a level-0 file, with size around 0.4 (according to previously written\n+  //   data amount).\n+  dbfull()->Flush(FlushOptions());\n+  for (int num = 0;\n+       num < options.level0_file_num_compaction_trigger-3;\n+       num++) {\n+    // Write 120KB (12 values, each 10K)\n+    for (int i = 0; i < 12; i++) {\n+      ASSERT_OK(Put(Key(key_idx), RandomString(&rnd, 10000)));\n+      key_idx++;\n+    }\n+    dbfull()->TEST_WaitForFlushMemTable();\n+    ASSERT_EQ(NumTableFilesAtLevel(0), num + 3);\n+  }\n+\n+  // Generate one more file at level-0, which should trigger level-0\n+  // compaction.\n+  for (int i = 0; i < 12; i++) {\n+    ASSERT_OK(Put(Key(key_idx), RandomString(&rnd, 10000)));\n+    key_idx++;\n+  }\n+  dbfull()->TEST_WaitForCompact();\n+  // Before compaction, we have 4 files at level 0, with size 4, 0.4, 1, 1.\n+  // After compaction, we should have 3 files, with size 4, 0.4, 2.\n+  ASSERT_EQ(NumTableFilesAtLevel(0), 3);\n+  for (int i = 1; i < options.num_levels ; i++) {\n+    ASSERT_EQ(NumTableFilesAtLevel(i), 0);\n+  }\n+\n+  // Stage 3:\n+  //   Now we have 3 files at level 0, with size 4, 0.4, 2. Generate one\n+  //   more file at level-0, which should trigger level-0 compaction.\n+  for (int i = 0; i < 12; i++) {\n+    ASSERT_OK(Put(Key(key_idx), RandomString(&rnd, 10000)));\n+    key_idx++;\n+  }\n+  dbfull()->TEST_WaitForCompact();\n+  // Level-0 compaction is triggered, but no file will be picked up.\n+  ASSERT_EQ(NumTableFilesAtLevel(0), 4);\n+  for (int i = 1; i < options.num_levels ; i++) {\n+    ASSERT_EQ(NumTableFilesAtLevel(i), 0);", "path": "db/db_test.cc", "position": null, "original_position": 92, "commit_id": "af7838de36fd54dd7bb02969a2e4b47215e9cb05", "original_commit_id": "5e3aeb5f8e029aafbf46b61e7345e8e25cb5dda1", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Take a look at DBTest::FilesPerLevel()\n", "created_at": "2014-01-17T18:41:05Z", "updated_at": "2014-01-25T22:13:54Z", "html_url": "https://github.com/facebook/rocksdb/pull/47#discussion_r8975384", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/47", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975384"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/47#discussion_r8975384"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/47"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9550978", "pull_request_review_id": null, "id": 9550978, "diff_hunk": "@@ -19,7 +19,8 @@\n #\n #       -DLEVELDB_PLATFORM_POSIX if cstdatomic is present\n #       -DLEVELDB_PLATFORM_NOATOMIC if it is not\n-#       -DSNAPPY                     if the Snappy library is present\n+#       -DSNAPPY                    if the Snappy library is present\n+#       -DLZ4 -DLZ4HC               if the LZ4 library is present", "path": "build_tools/build_detect_platform", "position": null, "original_position": 6, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Why do you need both defines? Is there a use case where only one will be present and rocksdb should work correctly/partially?\n", "created_at": "2014-02-07T19:16:55Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9550978", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9550978"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9550978"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9550978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551218", "pull_request_review_id": null, "id": 9551218, "diff_hunk": "@@ -1325,24 +1363,82 @@ class Benchmark {\n     }\n   }\n \n-  void SnappyUncompress(ThreadState* thread) {\n+  void Uncompress(ThreadState *thread) {\n     RandomGenerator gen;\n     Slice input = gen.Generate(Options().block_size);\n     std::string compressed;\n-    bool ok = port::Snappy_Compress(Options().compression_opts, input.data(),\n-                                    input.size(), &compressed);\n+\n+    bool ok;\n+    switch (FLAGS_compression_type_e) {\n+    case rocksdb::kSnappyCompression:\n+      ok = port::Snappy_Compress(Options().compression_opts, input.data(),\n+                                 input.size(), &compressed);\n+      break;\n+    case rocksdb::kZlibCompression:\n+      ok = port::Zlib_Compress(Options().compression_opts, input.data(),\n+                               input.size(), &compressed);\n+      break;\n+    case rocksdb::kBZip2Compression:\n+      ok = port::BZip2_Compress(Options().compression_opts, input.data(),\n+                                input.size(), &compressed);\n+      break;\n+    case rocksdb::kLZ4Compression:\n+      ok = port::LZ4_Compress(Options().compression_opts, input.data(),\n+                              input.size(), &compressed);\n+      break;\n+    case rocksdb::kLZ4HCCompression:\n+      ok = port::LZ4HC_Compress(Options().compression_opts, input.data(),\n+                                input.size(), &compressed);\n+      break;\n+    default:\n+      ok = false;\n+    }\n+\n     int64_t bytes = 0;\n-    char* uncompressed = new char[input.size()];\n-    while (ok && bytes < 1024 * 1048576) {  // Compress 1G\n-      ok =  port::Snappy_Uncompress(compressed.data(), compressed.size(),\n-                                    uncompressed);\n+    int decompress_size;\n+    while (ok && bytes < 1024 * 1048576) {\n+      char *uncompressed;\n+      switch (FLAGS_compression_type_e) {\n+      case rocksdb::kSnappyCompression:\n+        // allocate here to make comparison fair\n+        uncompressed = new char[input.size()];\n+        ok = port::Snappy_Uncompress(compressed.data(), compressed.size(),\n+                                     uncompressed);\n+        delete[] uncompressed;\n+        break;\n+      case rocksdb::kZlibCompression:\n+        uncompressed = port::Zlib_Uncompress(\n+            compressed.data(), compressed.size(), &decompress_size);\n+        ok = uncompressed != nullptr;\n+        delete[] uncompressed;\n+        break;\n+      case rocksdb::kBZip2Compression:\n+        uncompressed = port::BZip2_Uncompress(\n+            compressed.data(), compressed.size(), &decompress_size);\n+        ok = uncompressed != nullptr;\n+        delete[] uncompressed;\n+        break;\n+      case rocksdb::kLZ4Compression:\n+        uncompressed = port::LZ4_Uncompress(\n+            compressed.data(), compressed.size(), &decompress_size);\n+        ok = uncompressed != nullptr;\n+        delete[] uncompressed;\n+        break;\n+      case rocksdb::kLZ4HCCompression:\n+        uncompressed = port::LZ4_Uncompress(\n+            compressed.data(), compressed.size(), &decompress_size);\n+        ok = uncompressed != nullptr;\n+        delete[] uncompressed;", "path": "db/db_bench.cc", "position": null, "original_position": 241, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Can you just move all the delete[] uncompressed here outside of the switch? If uncompressed is null, delete is noop, so you're fine even in failure case.\n", "created_at": "2014-02-07T19:22:56Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551218", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551218"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551218"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551418", "pull_request_review_id": null, "id": 9551418, "diff_hunk": "@@ -354,8 +362,8 @@ inline bool BZip2_Compress(const CompressionOptions& opts, const char* input,\n   return false;\n }\n \n-inline char*  BZip2_Uncompress(const char* input_data, size_t input_length,\n-    int* decompress_size) {\n+inline char *BZip2_Uncompress(const char *input_data, size_t input_length,\n+                              int *decompress_size) {", "path": "port/port_posix.h", "position": null, "original_position": 22, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Is this what `make format` did? We keep the asterisks by the type, not the variable name, so: `int* decompress_size`.\n", "created_at": "2014-02-07T19:27:59Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551418", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551418"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551418"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551558", "pull_request_review_id": null, "id": 9551558, "diff_hunk": "@@ -233,8 +233,32 @@ void BlockBasedTableBuilder::WriteBlock(BlockBuilder* block,\n         type = kNoCompression;\n       }\n       break;\n-  }\n-  WriteRawBlock(block_contents, type, handle);\n+    case kLZ4Compression:\n+      if (port::LZ4_Compress(r->options.compression_opts, raw.data(),\n+                             raw.size(), compressed) &&\n+          GoodCompressionRatio(compressed->size(), raw.size())) {\n+        block_contents = *compressed;\n+      } else {\n+        // LZ4 not supported, or not good compression ratio, so just\n+        // store uncompressed form\n+        block_contents = raw;\n+        type = kNoCompression;\n+      }\n+      break;\n+    case kLZ4HCCompression:\n+      if (port::LZ4HC_Compress(r->options.compression_opts, raw.data(),\n+                               raw.size(), compressed) &&\n+          GoodCompressionRatio(compressed->size(), raw.size())) {\n+        block_contents = *compressed;\n+      } else {\n+        // LZ4 not supported, or not good compression ratio, so just\n+        // store uncompressed form\n+        block_contents = raw;\n+        type = kNoCompression;\n+      }\n+      break;\n+    }\n+    WriteRawBlock(block_contents, type, handle);", "path": "table/block_based_table_builder.cc", "position": null, "original_position": 31, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "The indent here seems off.\n", "created_at": "2014-02-07T19:31:07Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551558", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551558"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551558"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551637", "pull_request_review_id": null, "id": 9551637, "diff_hunk": "@@ -218,6 +218,28 @@ Status UncompressBlockContents(const char* data, size_t n,\n       result->heap_allocated = true;\n       result->cachable = true;\n       break;\n+    case kLZ4Compression:\n+      ubuf = port::LZ4_Uncompress(data, n, &decompress_size);\n+      static char lz4_corrupt_msg[] =\n+          \"LZ4 not supported or corrupted LZ4 compressed block contents\";\n+      if (!ubuf) {\n+        return Status::Corruption(lz4_corrupt_msg);\n+      }\n+      result->data = Slice(ubuf, decompress_size);\n+      result->heap_allocated = true;\n+      result->cachable = true;\n+      break;\n+    case kLZ4HCCompression:\n+      ubuf = port::LZ4_Uncompress(data, n, &decompress_size);", "path": "table/format.cc", "position": 16, "original_position": 16, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "I'm not familiar with LZ4 compression. Does LZ4HC get uncompressed by LZ4_Uncompress()?\n", "created_at": "2014-02-07T19:32:59Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551637", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551637"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551637"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551687", "pull_request_review_id": null, "id": 9551687, "diff_hunk": "@@ -483,30 +483,62 @@ class DBConstructor: public Constructor {\n };\n \n static bool SnappyCompressionSupported() {\n+#ifdef SNAPPY\n   std::string out;\n   Slice in = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n   return port::Snappy_Compress(Options().compression_opts,\n                                in.data(), in.size(),\n                                &out);\n+#else\n+  return false;\n+#endif\n }\n \n static bool ZlibCompressionSupported() {\n+#ifdef ZLIB\n   std::string out;\n   Slice in = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n   return port::Zlib_Compress(Options().compression_opts,\n                              in.data(), in.size(),\n                              &out);\n+#else\n+  return false;\n+#endif\n }\n \n-#ifdef BZIP2", "path": "table/table_test.cc", "position": 27, "original_position": 27, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Good catch :)\n", "created_at": "2014-02-07T19:34:03Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551687", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551687"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551687"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551724", "pull_request_review_id": null, "id": 9551724, "diff_hunk": "@@ -534,24 +566,22 @@ static std::vector<TestArgs> GenerateArgList() {\n   std::vector<int> restart_intervals = {16, 1, 1024};\n \n   // Only add compression if it is supported\n-  std::vector<CompressionType> compression_types = {kNoCompression};\n-#ifdef SNAPPY\n-  if (SnappyCompressionSupported()) {\n+  std::vector<CompressionType> compression_types;\n+  compression_types.push_back(kNoCompression);\n+  if (SnappyCompressionSupported())\n     compression_types.push_back(kSnappyCompression);\n-  }\n-#endif\n \n-#ifdef ZLIB\n-  if (ZlibCompressionSupported()) {\n+  if (ZlibCompressionSupported())\n     compression_types.push_back(kZlibCompression);\n-  }\n-#endif\n \n-#ifdef BZIP2\n-  if (BZip2CompressionSupported()) {\n+  if (BZip2CompressionSupported())", "path": "table/table_test.cc", "position": null, "original_position": 87, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "We have braces even in one-line ifs\n", "created_at": "2014-02-07T19:34:57Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551724", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551724"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9551724"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554876", "pull_request_review_id": null, "id": 9554876, "diff_hunk": "@@ -19,7 +19,8 @@\n #\n #       -DLEVELDB_PLATFORM_POSIX if cstdatomic is present\n #       -DLEVELDB_PLATFORM_NOATOMIC if it is not\n-#       -DSNAPPY                     if the Snappy library is present\n+#       -DSNAPPY                    if the Snappy library is present\n+#       -DLZ4 -DLZ4HC               if the LZ4 library is present", "path": "build_tools/build_detect_platform", "position": null, "original_position": 6, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "body": "Probably not. I'll get rid of the LZ4HC one.\n", "created_at": "2014-02-07T20:57:48Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554876", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554876"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554876"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554904", "pull_request_review_id": null, "id": 9554904, "diff_hunk": "@@ -354,8 +362,8 @@ inline bool BZip2_Compress(const CompressionOptions& opts, const char* input,\n   return false;\n }\n \n-inline char*  BZip2_Uncompress(const char* input_data, size_t input_length,\n-    int* decompress_size) {\n+inline char *BZip2_Uncompress(const char *input_data, size_t input_length,\n+                              int *decompress_size) {", "path": "port/port_posix.h", "position": null, "original_position": 22, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "body": "It would help me if you could make format the master branch before I retry this. make format doesn't seem to be idempotent.\n", "created_at": "2014-02-07T20:58:40Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554904", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554904"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554904"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554921", "pull_request_review_id": null, "id": 9554921, "diff_hunk": "@@ -233,8 +233,32 @@ void BlockBasedTableBuilder::WriteBlock(BlockBuilder* block,\n         type = kNoCompression;\n       }\n       break;\n-  }\n-  WriteRawBlock(block_contents, type, handle);\n+    case kLZ4Compression:\n+      if (port::LZ4_Compress(r->options.compression_opts, raw.data(),\n+                             raw.size(), compressed) &&\n+          GoodCompressionRatio(compressed->size(), raw.size())) {\n+        block_contents = *compressed;\n+      } else {\n+        // LZ4 not supported, or not good compression ratio, so just\n+        // store uncompressed form\n+        block_contents = raw;\n+        type = kNoCompression;\n+      }\n+      break;\n+    case kLZ4HCCompression:\n+      if (port::LZ4HC_Compress(r->options.compression_opts, raw.data(),\n+                               raw.size(), compressed) &&\n+          GoodCompressionRatio(compressed->size(), raw.size())) {\n+        block_contents = *compressed;\n+      } else {\n+        // LZ4 not supported, or not good compression ratio, so just\n+        // store uncompressed form\n+        block_contents = raw;\n+        type = kNoCompression;\n+      }\n+      break;\n+    }\n+    WriteRawBlock(block_contents, type, handle);", "path": "table/block_based_table_builder.cc", "position": null, "original_position": 31, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "body": "make format again...\n", "created_at": "2014-02-07T20:59:16Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554921", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554921"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554921"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554937", "pull_request_review_id": null, "id": 9554937, "diff_hunk": "@@ -218,6 +218,28 @@ Status UncompressBlockContents(const char* data, size_t n,\n       result->heap_allocated = true;\n       result->cachable = true;\n       break;\n+    case kLZ4Compression:\n+      ubuf = port::LZ4_Uncompress(data, n, &decompress_size);\n+      static char lz4_corrupt_msg[] =\n+          \"LZ4 not supported or corrupted LZ4 compressed block contents\";\n+      if (!ubuf) {\n+        return Status::Corruption(lz4_corrupt_msg);\n+      }\n+      result->data = Slice(ubuf, decompress_size);\n+      result->heap_allocated = true;\n+      result->cachable = true;\n+      break;\n+    case kLZ4HCCompression:\n+      ubuf = port::LZ4_Uncompress(data, n, &decompress_size);", "path": "table/format.cc", "position": 16, "original_position": 16, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "body": "Yep. Slower but better compression, but the same fast decompression.\n", "created_at": "2014-02-07T20:59:47Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554937", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554937"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554937"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554954", "pull_request_review_id": null, "id": 9554954, "diff_hunk": "@@ -534,24 +566,22 @@ static std::vector<TestArgs> GenerateArgList() {\n   std::vector<int> restart_intervals = {16, 1, 1024};\n \n   // Only add compression if it is supported\n-  std::vector<CompressionType> compression_types = {kNoCompression};\n-#ifdef SNAPPY\n-  if (SnappyCompressionSupported()) {\n+  std::vector<CompressionType> compression_types;\n+  compression_types.push_back(kNoCompression);\n+  if (SnappyCompressionSupported())\n     compression_types.push_back(kSnappyCompression);\n-  }\n-#endif\n \n-#ifdef ZLIB\n-  if (ZlibCompressionSupported()) {\n+  if (ZlibCompressionSupported())\n     compression_types.push_back(kZlibCompression);\n-  }\n-#endif\n \n-#ifdef BZIP2\n-  if (BZip2CompressionSupported()) {\n+  if (BZip2CompressionSupported())", "path": "table/table_test.cc", "position": null, "original_position": 87, "commit_id": "df2f92214ac834ac3c0790516cd05837173f48fe", "original_commit_id": "6fdc257f17f5761bd0671f2148d359e5679b793f", "user": {"login": "alberts", "id": 409689, "avatar_url": "https://avatars0.githubusercontent.com/u/409689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alberts", "html_url": "https://github.com/alberts", "followers_url": "https://api.github.com/users/alberts/followers", "following_url": "https://api.github.com/users/alberts/following{/other_user}", "gists_url": "https://api.github.com/users/alberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/alberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alberts/subscriptions", "organizations_url": "https://api.github.com/users/alberts/orgs", "repos_url": "https://api.github.com/users/alberts/repos", "events_url": "https://api.github.com/users/alberts/events{/privacy}", "received_events_url": "https://api.github.com/users/alberts/received_events", "type": "User", "site_admin": false}, "body": "Just following the style I found. Will fix.\n", "created_at": "2014-02-07T21:00:14Z", "updated_at": "2014-02-08T22:15:56Z", "html_url": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554954", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/74", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554954"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/74#discussion_r9554954"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/74"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836042", "pull_request_review_id": null, "id": 9836042, "diff_hunk": "@@ -131,16 +137,136 @@ struct rocksdb_filterpolicy_t : public FilterPolicy {\n   }\n };\n \n+struct rocksdb_mergeoperator_t : public MergeOperator {\n+  void* state_;\n+  void (*destructor_)(void*);\n+  const char* (*name_)(void*);\n+  char* (*full_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* existing_value, size_t existing_value_length,\n+      const char* const* operands_list, const size_t* operands_list_length,\n+      int num_operands,\n+      unsigned char* success, size_t* new_value_length);\n+  char* (*partial_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* left_operand, size_t left_operand_length,\n+      const char* right_operand, size_t right_operand_length,\n+      unsigned char* success, size_t* new_value_length);\n+\n+  virtual ~rocksdb_mergeoperator_t() {\n+    (*destructor_)(state_);\n+  }\n+\n+  virtual const char* Name() const {\n+    return (*name_)(state_);\n+  }\n+\n+  virtual bool FullMerge(\n+      const Slice& key,\n+      const Slice* existing_value,\n+      const std::deque<std::string>& operand_list,\n+      std::string* new_value,\n+      Logger* logger) const {\n+\n+    int n = operand_list.size();", "path": "db/c.cc", "position": null, "original_position": 113, "commit_id": "ce2b1f7b445e49e5a6a9fbeb18db2ec55ac031c5", "original_commit_id": "a928e688cc1b0bd8a3f43c2d06b4f3135df170ea", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "`size_t n = operand_list.size();`\n:)\n", "created_at": "2014-02-18T18:54:21Z", "updated_at": "2014-02-23T16:58:44Z", "html_url": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836042", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/82", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836042"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836042"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/82"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836049", "pull_request_review_id": null, "id": 9836049, "diff_hunk": "@@ -131,16 +137,136 @@ struct rocksdb_filterpolicy_t : public FilterPolicy {\n   }\n };\n \n+struct rocksdb_mergeoperator_t : public MergeOperator {\n+  void* state_;\n+  void (*destructor_)(void*);\n+  const char* (*name_)(void*);\n+  char* (*full_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* existing_value, size_t existing_value_length,\n+      const char* const* operands_list, const size_t* operands_list_length,\n+      int num_operands,\n+      unsigned char* success, size_t* new_value_length);\n+  char* (*partial_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* left_operand, size_t left_operand_length,\n+      const char* right_operand, size_t right_operand_length,\n+      unsigned char* success, size_t* new_value_length);\n+\n+  virtual ~rocksdb_mergeoperator_t() {\n+    (*destructor_)(state_);\n+  }\n+\n+  virtual const char* Name() const {\n+    return (*name_)(state_);\n+  }\n+\n+  virtual bool FullMerge(\n+      const Slice& key,\n+      const Slice* existing_value,\n+      const std::deque<std::string>& operand_list,\n+      std::string* new_value,\n+      Logger* logger) const {\n+\n+    int n = operand_list.size();\n+    std::vector<const char*> operand_pointers(n);\n+    std::vector<size_t> operand_sizes(n);\n+    for (int i = 0; i < n; i++) {", "path": "db/c.cc", "position": null, "original_position": 116, "commit_id": "ce2b1f7b445e49e5a6a9fbeb18db2ec55ac031c5", "original_commit_id": "a928e688cc1b0bd8a3f43c2d06b4f3135df170ea", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "size_t i\n", "created_at": "2014-02-18T18:54:29Z", "updated_at": "2014-02-23T16:58:44Z", "html_url": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836049", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/82", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836049"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836049"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/82"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836087", "pull_request_review_id": null, "id": 9836087, "diff_hunk": "@@ -131,16 +137,136 @@ struct rocksdb_filterpolicy_t : public FilterPolicy {\n   }\n };\n \n+struct rocksdb_mergeoperator_t : public MergeOperator {\n+  void* state_;\n+  void (*destructor_)(void*);\n+  const char* (*name_)(void*);\n+  char* (*full_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* existing_value, size_t existing_value_length,\n+      const char* const* operands_list, const size_t* operands_list_length,\n+      int num_operands,\n+      unsigned char* success, size_t* new_value_length);\n+  char* (*partial_merge_)(\n+      void*,\n+      const char* key, size_t key_length,\n+      const char* left_operand, size_t left_operand_length,\n+      const char* right_operand, size_t right_operand_length,\n+      unsigned char* success, size_t* new_value_length);\n+\n+  virtual ~rocksdb_mergeoperator_t() {\n+    (*destructor_)(state_);\n+  }\n+\n+  virtual const char* Name() const {\n+    return (*name_)(state_);\n+  }\n+\n+  virtual bool FullMerge(\n+      const Slice& key,\n+      const Slice* existing_value,\n+      const std::deque<std::string>& operand_list,\n+      std::string* new_value,\n+      Logger* logger) const {\n+\n+    int n = operand_list.size();\n+    std::vector<const char*> operand_pointers(n);\n+    std::vector<size_t> operand_sizes(n);\n+    for (int i = 0; i < n; i++) {\n+      Slice operand(operand_list[i]);\n+      operand_pointers[i] = operand.data();\n+      operand_sizes[i] = operand.size();\n+    }\n+\n+    const char* existing_value_data = nullptr;\n+    size_t existing_value_len = 0;\n+    if (existing_value != nullptr) {\n+        existing_value_data = existing_value->data();", "path": "db/c.cc", "position": null, "original_position": 125, "commit_id": "ce2b1f7b445e49e5a6a9fbeb18db2ec55ac031c5", "original_commit_id": "a928e688cc1b0bd8a3f43c2d06b4f3135df170ea", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Is this four space indent? We use two. You might be able to just run `make format` and have it fix all of this for you.\n", "created_at": "2014-02-18T18:55:13Z", "updated_at": "2014-02-23T16:58:44Z", "html_url": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836087", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/82", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836087"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/82#discussion_r9836087"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/82"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9837844", "pull_request_review_id": null, "id": 9837844, "diff_hunk": "@@ -122,7 +129,6 @@ struct rocksdb_filterpolicy_t : public FilterPolicy {\n     size_t len;\n     char* filter = (*create_)(state_, &key_pointers[0], &key_sizes[0], n, &len);\n     dst->append(filter, len);\n-    free(filter);", "path": "db/c.cc", "position": 82, "original_position": 72, "commit_id": "ce2b1f7b445e49e5a6a9fbeb18db2ec55ac031c5", "original_commit_id": "a928e688cc1b0bd8a3f43c2d06b4f3135df170ea", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Looks like this causes valgrind failures in c_test. Run the test with `valgrind --leak-check=full ./c_test`. Let me know if you can't repro.\n", "created_at": "2014-02-18T19:32:01Z", "updated_at": "2014-02-23T16:58:44Z", "html_url": "https://github.com/facebook/rocksdb/pull/82#discussion_r9837844", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/82", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9837844"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/82#discussion_r9837844"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/82"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9837844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631885", "pull_request_review_id": null, "id": 10631885, "diff_hunk": "@@ -296,18 +296,18 @@ bool IsUniqueIDValid(const std::string& s) {\n \n   struct stat f_stat;\n   stat(fname.c_str(), &f_stat);\n-  ASSERT_EQ(data.size(), f_stat.st_size);\n+  ASSERT_EQ((unsigned int)data.size(), f_stat.st_size);\n   // verify that blocks are preallocated\n-  ASSERT_EQ(kPreallocateSize / kBlockSize, f_stat.st_blocks);\n+  ASSERT_EQ((unsigned int)(kPreallocateSize / kBlockSize), f_stat.st_blocks);\n \n   // close the file, should deallocate the blocks\n   wfile.reset();\n \n   stat(fname.c_str(), &f_stat);\n-  ASSERT_EQ(data.size(), f_stat.st_size);\n+  ASSERT_EQ((unsigned int)data.size(), f_stat.st_size);\n   // verify that preallocated blocks were deallocated on file close\n   size_t data_blocks_pages = ((data.size() + kPageSize - 1) / kPageSize);\n-  ASSERT_EQ(data_blocks_pages * kPageSize / kBlockSize, f_stat.st_blocks);\n+  ASSERT_EQ((unsigned int)(data_blocks_pages * kPageSize / kBlockSize), f_stat.st_blocks);", "path": "util/env_test.cc", "position": 56, "original_position": 55, "commit_id": "f234dfd8fbebe483298ee015214dcf8fbcd28342", "original_commit_id": "b9c78d2db6cbd15c87146c915b27375a41495a7d", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Line is longer than 80 chars. Can you please run `make format`?\n", "created_at": "2014-03-15T00:12:58Z", "updated_at": "2014-03-15T00:40:42Z", "html_url": "https://github.com/facebook/rocksdb/pull/99#discussion_r10631885", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/99", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631885"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/99#discussion_r10631885"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/99"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10632283", "pull_request_review_id": null, "id": 10632283, "diff_hunk": "@@ -296,18 +296,18 @@ bool IsUniqueIDValid(const std::string& s) {\n \n   struct stat f_stat;\n   stat(fname.c_str(), &f_stat);\n-  ASSERT_EQ(data.size(), f_stat.st_size);\n+  ASSERT_EQ((unsigned int)data.size(), f_stat.st_size);\n   // verify that blocks are preallocated\n-  ASSERT_EQ(kPreallocateSize / kBlockSize, f_stat.st_blocks);\n+  ASSERT_EQ((unsigned int)(kPreallocateSize / kBlockSize), f_stat.st_blocks);\n \n   // close the file, should deallocate the blocks\n   wfile.reset();\n \n   stat(fname.c_str(), &f_stat);\n-  ASSERT_EQ(data.size(), f_stat.st_size);\n+  ASSERT_EQ((unsigned int)data.size(), f_stat.st_size);\n   // verify that preallocated blocks were deallocated on file close\n   size_t data_blocks_pages = ((data.size() + kPageSize - 1) / kPageSize);\n-  ASSERT_EQ(data_blocks_pages * kPageSize / kBlockSize, f_stat.st_blocks);\n+  ASSERT_EQ((unsigned int)(data_blocks_pages * kPageSize / kBlockSize), f_stat.st_blocks);", "path": "util/env_test.cc", "position": 56, "original_position": 55, "commit_id": "f234dfd8fbebe483298ee015214dcf8fbcd28342", "original_commit_id": "b9c78d2db6cbd15c87146c915b27375a41495a7d", "user": {"login": "caiosba", "id": 117518, "avatar_url": "https://avatars0.githubusercontent.com/u/117518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiosba", "html_url": "https://github.com/caiosba", "followers_url": "https://api.github.com/users/caiosba/followers", "following_url": "https://api.github.com/users/caiosba/following{/other_user}", "gists_url": "https://api.github.com/users/caiosba/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiosba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiosba/subscriptions", "organizations_url": "https://api.github.com/users/caiosba/orgs", "repos_url": "https://api.github.com/users/caiosba/repos", "events_url": "https://api.github.com/users/caiosba/events{/privacy}", "received_events_url": "https://api.github.com/users/caiosba/received_events", "type": "User", "site_admin": false}, "body": "Oh sorry, I ran `make format` before and it pointed nothing:\n\n$ make format\nbuild_tools/format-diff.sh\nNothing needs to be reformatted!\n\nBTW, I fixed it on hand and pushed.\n", "created_at": "2014-03-15T00:47:49Z", "updated_at": "2014-03-15T00:47:49Z", "html_url": "https://github.com/facebook/rocksdb/pull/99#discussion_r10632283", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/99", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10632283"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/99#discussion_r10632283"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/99"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10632283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631405", "pull_request_review_id": null, "id": 10631405, "diff_hunk": "@@ -73,13 +90,41 @@ Status Footer::DecodeFrom(Slice* input) {\n     set_table_magic_number(magic);\n   }\n \n+  if (legacy) {\n+    // Footer will always occupy exactly this many bytes.  It consists\n+    // of two block handles and a magic number.\n+    const uint32_t size = 2*BlockHandle::kMaxEncodedLength + kMagicNumberLengthByte;", "path": "table/format.cc", "position": null, "original_position": 67, "commit_id": "c6e7da250e3d06f1a88701648ed2d4bc5ec2a59e", "original_commit_id": "b896465f8aa5077bd6c36e578cfc5f5a7c41aaf8", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "body": "Please follow the coding convention. You can do \"make format\" and it will fix some code convention problems for you.\n", "created_at": "2014-03-14T23:43:45Z", "updated_at": "2014-03-17T22:21:58Z", "html_url": "https://github.com/facebook/rocksdb/pull/87#discussion_r10631405", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631405"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/87#discussion_r10631405"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631422", "pull_request_review_id": null, "id": 10631422, "diff_hunk": "@@ -40,27 +41,43 @@ Status BlockHandle::DecodeFrom(Slice* input) {\n const BlockHandle BlockHandle::kNullBlockHandle(0, 0);\n \n void Footer::EncodeTo(std::string* dst) const {\n-#ifndef NDEBUG\n   const size_t original_size = dst->size();\n-#endif\n+  PutVarint32(dst, kFooterVersion);\n+  PutVarint32(dst, static_cast<uint32_t>(checksum_));\n   metaindex_handle_.EncodeTo(dst);\n   index_handle_.EncodeTo(dst);\n-  dst->resize(2 * BlockHandle::kMaxEncodedLength);  // Padding\n+  if(dst->size() - original_size < kMinEncodedLength - 12)\n+    dst->resize(original_size + kMinEncodedLength - 12);\n+  // TODO - any reason to pad to a power of two?\n+  //dst->append((original_size - dst->size()) & 3, 0); // pad to a multiple of 4\n+  PutFixed32(dst, dst->size() - original_size + 12);\n   PutFixed32(dst, static_cast<uint32_t>(table_magic_number() & 0xffffffffu));\n   PutFixed32(dst, static_cast<uint32_t>(table_magic_number() >> 32));\n-  assert(dst->size() == original_size + kEncodedLength);\n }\n \n Status Footer::DecodeFrom(Slice* input) {\n   assert(input != nullptr);\n-  assert(input->size() >= kEncodedLength);\n+  assert(input->size() >= kMinEncodedLength);\n \n   const char* magic_ptr =\n-      input->data() + kEncodedLength - kMagicNumberLengthByte;\n+      input->data() + input->size() - kMagicNumberLengthByte;\n   const uint32_t magic_lo = DecodeFixed32(magic_ptr);\n   const uint32_t magic_hi = DecodeFixed32(magic_ptr + 4);\n-  const uint64_t magic = ((static_cast<uint64_t>(magic_hi) << 32) |\n-                          (static_cast<uint64_t>(magic_lo)));\n+  uint64_t magic = ((static_cast<uint64_t>(magic_hi) << 32) |\n+                    (static_cast<uint64_t>(magic_lo)));\n+\n+  // We check for legacy formats here and silently upconvert them\n+  bool legacy = false;\n+  if (magic == 0xdb4775248b80fb57ull) {\n+    legacy = true;\n+    extern uint64_t kBlockBasedTableMagicNumber;\n+    magic = kBlockBasedTableMagicNumber;\n+  }\n+  if (magic == 0x4f3418eb7a8f13b8ull) {", "path": "table/format.cc", "position": null, "original_position": 52, "commit_id": "c6e7da250e3d06f1a88701648ed2d4bc5ec2a59e", "original_commit_id": "b896465f8aa5077bd6c36e578cfc5f5a7c41aaf8", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "body": "nit: \"else if\" is more intuitive to read to me.\n", "created_at": "2014-03-14T23:44:46Z", "updated_at": "2014-03-17T22:21:58Z", "html_url": "https://github.com/facebook/rocksdb/pull/87#discussion_r10631422", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631422"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/87#discussion_r10631422"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10664575", "pull_request_review_id": null, "id": 10664575, "diff_hunk": "@@ -92,6 +101,11 @@ class Footer {\n \n   uint64_t table_magic_number() const { return table_magic_number_; }\n \n+  // The version of Footer we encode\n+  enum {\n+    kFooterVersion = 1", "path": "table/format.h", "position": null, "original_position": 24, "commit_id": "c6e7da250e3d06f1a88701648ed2d4bc5ec2a59e", "original_commit_id": "b896465f8aa5077bd6c36e578cfc5f5a7c41aaf8", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Can you document the format of different footer versions?\n", "created_at": "2014-03-17T16:28:24Z", "updated_at": "2014-03-17T22:21:58Z", "html_url": "https://github.com/facebook/rocksdb/pull/87#discussion_r10664575", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/87", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10664575"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/87#discussion_r10664575"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/87"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10664575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495910", "pull_request_review_id": null, "id": 12495910, "diff_hunk": "@@ -83,8 +83,15 @@ char* Arena::AllocateAligned(size_t bytes, size_t huge_page_tlb_size,\n     size_t reserved_size =\n         ((bytes - 1U) / huge_page_tlb_size + 1U) * huge_page_tlb_size;\n     assert(reserved_size >= bytes);\n+\n+#ifdef MAP_HUGETLB", "path": "util/arena.cc", "position": null, "original_position": 5, "commit_id": "557fbc9b3b5cee9bd53b4dcb481187cd71fbeefa", "original_commit_id": "deb89401fd0c3e59167c01182ba1fcfa23adc3f6", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "body": "Can we just replace line 79?\n", "created_at": "2014-05-09T20:59:49Z", "updated_at": "2014-05-11T14:23:10Z", "html_url": "https://github.com/facebook/rocksdb/pull/141#discussion_r12495910", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/141", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495910"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/141#discussion_r12495910"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/141"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495983", "pull_request_review_id": null, "id": 12495983, "diff_hunk": "@@ -83,8 +83,15 @@ char* Arena::AllocateAligned(size_t bytes, size_t huge_page_tlb_size,\n     size_t reserved_size =\n         ((bytes - 1U) / huge_page_tlb_size + 1U) * huge_page_tlb_size;\n     assert(reserved_size >= bytes);\n+\n+#ifdef MAP_HUGETLB", "path": "util/arena.cc", "position": null, "original_position": 5, "commit_id": "557fbc9b3b5cee9bd53b4dcb481187cd71fbeefa", "original_commit_id": "deb89401fd0c3e59167c01182ba1fcfa23adc3f6", "user": {"login": "siying", "id": 5334567, "avatar_url": "https://avatars3.githubusercontent.com/u/5334567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siying", "html_url": "https://github.com/siying", "followers_url": "https://api.github.com/users/siying/followers", "following_url": "https://api.github.com/users/siying/following{/other_user}", "gists_url": "https://api.github.com/users/siying/gists{/gist_id}", "starred_url": "https://api.github.com/users/siying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siying/subscriptions", "organizations_url": "https://api.github.com/users/siying/orgs", "repos_url": "https://api.github.com/users/siying/repos", "events_url": "https://api.github.com/users/siying/events{/privacy}", "received_events_url": "https://api.github.com/users/siying/received_events", "type": "User", "site_admin": false}, "body": "I mean guard MAP_HUGETLB in the same way as OS_LINUX in line 79.\n", "created_at": "2014-05-09T21:01:49Z", "updated_at": "2014-05-11T14:23:10Z", "html_url": "https://github.com/facebook/rocksdb/pull/141#discussion_r12495983", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/141", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495983"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/141#discussion_r12495983"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/141"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12509042", "pull_request_review_id": null, "id": 12509042, "diff_hunk": "@@ -83,8 +83,15 @@ char* Arena::AllocateAligned(size_t bytes, size_t huge_page_tlb_size,\n     size_t reserved_size =\n         ((bytes - 1U) / huge_page_tlb_size + 1U) * huge_page_tlb_size;\n     assert(reserved_size >= bytes);\n+\n+#ifdef MAP_HUGETLB", "path": "util/arena.cc", "position": null, "original_position": 5, "commit_id": "557fbc9b3b5cee9bd53b4dcb481187cd71fbeefa", "original_commit_id": "deb89401fd0c3e59167c01182ba1fcfa23adc3f6", "user": {"login": "dallasmarlow", "id": 344678, "avatar_url": "https://avatars1.githubusercontent.com/u/344678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dallasmarlow", "html_url": "https://github.com/dallasmarlow", "followers_url": "https://api.github.com/users/dallasmarlow/followers", "following_url": "https://api.github.com/users/dallasmarlow/following{/other_user}", "gists_url": "https://api.github.com/users/dallasmarlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/dallasmarlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dallasmarlow/subscriptions", "organizations_url": "https://api.github.com/users/dallasmarlow/orgs", "repos_url": "https://api.github.com/users/dallasmarlow/repos", "events_url": "https://api.github.com/users/dallasmarlow/events{/privacy}", "received_events_url": "https://api.github.com/users/dallasmarlow/received_events", "type": "User", "site_admin": false}, "body": "@siying looks like you're right, updating the pr now.\n", "created_at": "2014-05-11T14:21:18Z", "updated_at": "2014-05-11T14:23:10Z", "html_url": "https://github.com/facebook/rocksdb/pull/141#discussion_r12509042", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/141", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12509042"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/141#discussion_r12509042"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/141"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12509042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870024", "pull_request_review_id": null, "id": 12870024, "diff_hunk": "@@ -398,12 +398,40 @@ Status HdfsEnv::NewRandomRWFile(const std::string& fname,\n   return Status::NotSupported(\"NewRandomRWFile not supported on HdfsEnv\");\n }\n \n+class HdfsDirectory : public Directory {\n+ public:\n+  explicit HdfsDirectory(int fd) : fd_(fd) {}\n+  ~HdfsDirectory() {\n+    //close(fd_);\n+  }\n+\n+  virtual Status Fsync() {\n+    //if (fsync(fd_) == -1) {\n+    //  return IOError(\"directory\", errno);\n+   // }", "path": "util/env_hdfs.cc", "position": null, "original_position": 37, "commit_id": "591f71285c1349fc6b6d2a113b360d0d2da46cf6", "original_commit_id": "c2fda55cfe14918ac4f67f43c885ec2749dab88d", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Can you remove the comments here and in the destructor?\n", "created_at": "2014-05-20T21:42:11Z", "updated_at": "2014-05-21T11:58:32Z", "html_url": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870024", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/154", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870024"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870024"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/154"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870090", "pull_request_review_id": null, "id": 12870090, "diff_hunk": "@@ -398,12 +398,40 @@ Status HdfsEnv::NewRandomRWFile(const std::string& fname,\n   return Status::NotSupported(\"NewRandomRWFile not supported on HdfsEnv\");\n }\n \n+class HdfsDirectory : public Directory {\n+ public:\n+  explicit HdfsDirectory(int fd) : fd_(fd) {}\n+  ~HdfsDirectory() {\n+    //close(fd_);\n+  }\n+\n+  virtual Status Fsync() {\n+    //if (fsync(fd_) == -1) {\n+    //  return IOError(\"directory\", errno);\n+   // }\n+    return Status::OK();\n+  }\n+\n+ private:\n+  int fd_;\n+};\n+\n Status HdfsEnv::NewDirectory(const std::string& name,\n                              unique_ptr<Directory>* result) {\n-  return Status::NotSupported(\"NewDirectory not supported on HdfsEnv\");\n+\n+  int value = hdfsCreateDirectory(fileSys_, name.c_str());", "path": "util/env_hdfs.cc", "position": null, "original_position": 49, "commit_id": "591f71285c1349fc6b6d2a113b360d0d2da46cf6", "original_commit_id": "c2fda55cfe14918ac4f67f43c885ec2749dab88d", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "We don't create a new directory on a NewDirectory() call.\n\nHere are the comments from `include/rocksdb/env.h`:\n\n```\n// Create an object that represents a directory. Will fail if directory\n// doesn't exist. If the directory exists, it will open the directory\n// and create a new Directory object.\n```\n", "created_at": "2014-05-20T21:43:20Z", "updated_at": "2014-05-21T11:58:32Z", "html_url": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870090", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/154", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870090"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870090"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/154"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870125", "pull_request_review_id": null, "id": 12870125, "diff_hunk": "@@ -449,13 +477,13 @@ Status HdfsEnv::GetChildren(const std::string& path,\n   default:          // anything else should be an error\n     Log(mylog, \"GetChildren hdfsExists call failed\");\n     throw HdfsFatalException(\"hdfsExists call failed with error \" +\n-                             std::to_string(value) + \".\\n\");\n+                             std::to_string(value) + \" on path \" + path.c_str()  + \".\\n\");\n   }\n   return Status::OK();\n }\n \n Status HdfsEnv::DeleteFile(const std::string& fname) {\n-  if (hdfsDelete(fileSys_, fname.c_str()) == 0) {\n+  if (hdfsDelete(fileSys_, fname.c_str(),1) == 0) {", "path": "util/env_hdfs.cc", "position": null, "original_position": 88, "commit_id": "591f71285c1349fc6b6d2a113b360d0d2da46cf6", "original_commit_id": "c2fda55cfe14918ac4f67f43c885ec2749dab88d", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Style -- space after coma. Can you run `make format`?\n", "created_at": "2014-05-20T21:44:11Z", "updated_at": "2014-05-21T11:58:32Z", "html_url": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870125", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/154", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870125"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870125"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/154"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870143", "pull_request_review_id": null, "id": 12870143, "diff_hunk": "@@ -449,13 +477,13 @@ Status HdfsEnv::GetChildren(const std::string& path,\n   default:          // anything else should be an error\n     Log(mylog, \"GetChildren hdfsExists call failed\");\n     throw HdfsFatalException(\"hdfsExists call failed with error \" +\n-                             std::to_string(value) + \".\\n\");\n+                             std::to_string(value) + \" on path \" + path.c_str()  + \".\\n\");", "path": "util/env_hdfs.cc", "position": null, "original_position": 81, "commit_id": "591f71285c1349fc6b6d2a113b360d0d2da46cf6", "original_commit_id": "c2fda55cfe14918ac4f67f43c885ec2749dab88d", "user": {"login": "igorcanadi", "id": 1091023, "avatar_url": "https://avatars1.githubusercontent.com/u/1091023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorcanadi", "html_url": "https://github.com/igorcanadi", "followers_url": "https://api.github.com/users/igorcanadi/followers", "following_url": "https://api.github.com/users/igorcanadi/following{/other_user}", "gists_url": "https://api.github.com/users/igorcanadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorcanadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorcanadi/subscriptions", "organizations_url": "https://api.github.com/users/igorcanadi/orgs", "repos_url": "https://api.github.com/users/igorcanadi/repos", "events_url": "https://api.github.com/users/igorcanadi/events{/privacy}", "received_events_url": "https://api.github.com/users/igorcanadi/received_events", "type": "User", "site_admin": false}, "body": "Remove `.c_str()` call\n", "created_at": "2014-05-20T21:44:37Z", "updated_at": "2014-05-21T11:58:32Z", "html_url": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870143", "pull_request_url": "https://api.github.com/repos/facebook/rocksdb/pulls/154", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870143"}, "html": {"href": "https://github.com/facebook/rocksdb/pull/154#discussion_r12870143"}, "pull_request": {"href": "https://api.github.com/repos/facebook/rocksdb/pulls/154"}}, "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}