{"_default": {"1": {"jacobbednarz": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/379", "title": "`report-uri` sample rate", "body": "One thing about CSP that I've always found extremely dangerous is it's ability to generate an enormous amount of traffic for a reporting endpoint if you hit browser bugs or use a misconfigured policy. This was a very real issue for us and something we've mitigated using a patch to only send a percentage of the reports to the reporting endpoint. We tune this number up and down based on the risk when we roll out an updated policy.\r\n\r\nMy question to the other users of `secureheaders` is whether or not this configuration option would be valuable to you? If so, I'm happy to open a PR with our base implementation and we can expand on it from there. To give you a bit of an idea around the implementation:\r\n\r\n```rb\r\n# initializer\r\nconfig.csp_report_only = {\r\n  # .. snip\r\n  report_uri: %w(https://report-uri.io/example-csp-report-only)\r\n  sample_rate: 0.3 # only send 30% of violations\r\n}\r\n```\r\n\r\nThe above configuration would then result in the `report-uri` directive for the policy only being appended 30% of the time and the remaining 70% would not have the `report-uri` directive at all. ", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/379/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/23889703", "body": "Doesn't look like it was in alphabetical prior to this change so I'm \ud83e\udd37\ud83c\udffc\u200d\u2642\ufe0f but if you're interested in doing it, I'm sure a PR would be appreciated.\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/23889703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "tessereth": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/376", "title": "CSP sources are incorrectly removed when both wildcards and schemes are present", "body": "When I have the following as part of my csp header config:\r\n\r\n```ruby\r\n  config.csp = {\r\n    frame_ancestors: %w[*.foo.com http://www.foo.com],\r\n    preserve_schemes: true,\r\n    ...\r\n  }\r\n```\r\n\r\nand I'm serving my frame over https to be embedded on `http://www.foo.com`, the `http://www.foo.com` is required but is being removed by [minify_source_list](https://github.com/twitter/secureheaders/blob/2bb810a/lib/secure_headers/headers/content_security_policy.rb#L149-L162)\r\n\r\n### Expected outcome\r\n\r\nI expect to have `frame-ancestors *.foo.com http://www.foo.com` in my CSP header\r\n\r\n### Actual outcome\r\n\r\nThe CSP header had only `frame-ancestors *.foo.com`\r\n\r\n### Config\r\n\r\n```ruby\r\nSecureHeaders::Configuration.default do |config|\r\n  config.csp = {\r\n    default_src: %w['self'],\r\n    script_src: %w['self'],\r\n    frame_ancestors: %w[*.foo.com http://www.foo.com],\r\n    preserve_schemes: true\r\n  }\r\nend\r\n```\r\n\r\n### Generated headers\r\n\r\n`Content-Security-Policy: default-src 'self'; frame-ancestors *.foo.com; script-src 'self'`\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renchap": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/375", "title": "Discussion: integration with Rails 5.2 CSP feature", "body": "There have been several tentatives to merge this gem into Rails. CSP support has been merged and will be released in Rails 5.2: https://github.com/rails/rails/pull/31162\r\n\r\nI gave a quick look at it and it does not replace this gem, but it seems a good idea to get the two work together, and maybe use the Raisl API. Any thoughts?", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/358", "title": "Edge now supports CSP 2.0", "body": "MS Edge is now supporting CSP 2.0: https://blogs.windows.com/msedgedev/2017/01/10/edge-csp-2/\r\n\r\nEdge build 15002 (https://developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/15002/) has been released in january.\r\n\r\nThis is breaking our application when loading Webworkers from `blob:` as `secureheaders` is not sending `child-src` (but `frame-src`), so Edge defaults to `default-src`.\r\n\r\nI tried to change `EDGE_DIRECTIVES = DIRECTIVES_1_0` to `EDGE_DIRECTIVES = DIRECTIVES_2_0` and it solved the problem, but I guess a proper fix requires checking the Edge build number. I can do it if you confirm this is the correct fix.", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oreoshake": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/369", "title": "expect-ct is undocumented", "body": "", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/360", "title": "clear-site-data should not be available as a global config", "body": "Given some [recent](https://github.com/twitter/secureheaders/issues/355) and [totally understandable confusion](https://twitter.com/mikewest/status/911474048315609088), `clear-site-data` should not be a global config value and should only be available as a per-action override like https://github.com/twitter/secureheaders/pull/356 documents.\r\n\r\nThis would be a breaking change but I think it's fine to do this without a major release because copy/pasting the not-meant-to-be-an-example-but-clearly-perceived-that-way config is a breaking change to begin with!", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/323", "title": "Handle setting multiple headers of the same name (by using a comma-separate list)", "body": "# Feature Request\r\n\r\nRails does not allow you to set multiple headers with the same name, but CSP allows this. However, multiple headers that are comma separated can be used for the same effect.\r\n\r\nThis is an issue if you want to use [the upcoming hashes for external sources feature](https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/t2ai4lsHhWI) AND restrict to a host:\r\n\r\n`Content-Security-Policy: script-src 'sha256-abc', script-src my.cdn.com`\r\n\r\nIt will treat the `script-src` values as if they are separate policy, enforcing each individually.\r\n\r\nSee https://twitter.com/mikewest/status/852252789690556417\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/318", "title": "Dynamic referrer-policy headers", "body": "Just like CSP and XFO, referrer-policy needs to have per-action configurability.", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/280", "title": "Add a collaborator to this project", "body": "**Problem**: One person is running this project. Things have worked out well (I think), but they can probably be better.\n**Symptoms**: Code quality is probably suffering, domain knowledge may be too high for contributions. It has been a while since I've seen a refactor/cleanup PR.\n**Solution**: More people should be responsible for this project. That's how open source works for the most part. \n\n**Ideas**: stop merging my own PRs. Get explicit :+1: from someone. Have someone else :+1:/merge \"outside\" contributions.\n\nOne problem is that I no longer have admin rights to this repo, so it might involve a fork if I can't get in touch with someone from twitter.\n\nAnyone interested? :wave:\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/277", "title": "Add support for cookie-scope directive", "body": "## Adding a new CSP directive\n\n\"cookie-scope\" directive https://www.w3.org/TR/csp-cookies/\n\n> - Is the directive supported by any user agent? If so, which?\n\nUnknown\n\n> - What does it do?\n\nSets limitations on all cookies for a given origin.\n\n> - What are the valid values for the directive?\n\nThe directive has one of four values:\n- \"host\" allows \"host only\" cookies to be set, but will block setting cookies which set a domain attribute.\n- \"http\" allows cookies to be set via the Set-Cookie HTTP header, but not via document.cookie.\n- \"none\" blocks all cookies.\n- \"secure\" allows cookies to be set with a secure attribute, and will block setting any non-secure cookies.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/275", "title": "Add support for \"Feature Policy\" header", "body": "Add support for [Feature Policy](https://wicg.github.io/feature-policy/). Feature policy needs to have support for highly dynamic policies just like CSP.\n\nSee [Mike West's AppSec EU presentation @39:21](https://youtu.be/0qu9oFaHuY0?t=2361)\n\n> - Is the header supported by any user agent? If so, which?\n\nA prototype is in chrome (ship in Q4?)\n\n> - What does it do?\n\nEnables/disables features in web browsers/\n\n> - What are the valid values for the header?\n\nExamples:\n\n```\nFeature-Policy: {\"disable\":[\"geolocation\"], \"target\":[\"https://example.com\"]}\n\nFeature-Policy: {\"disable\":[\"webrtc\"], \"target\":[\"https://example.com\"]},\n        {\"enable\":[\"webrtc\"], \"target\":[\"https://other.com\"]}\n```\n\n> - Where does the specification live?\n\nhttps://wicg.github.io/feature-policy/\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/275/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/264", "title": "Add support for `require-sri-for` directive", "body": "Firefox nightly just landed support according to https://twitter.com/freddyb/status/738375472711634944\n\nA writeup: https://gist.github.com/mozfreddyb/f4b7e79ab629a3ecff663f33d9a56e82\n\nThe (proposed) spec: https://github.com/w3c/webappsec-subresource-integrity/pull/32/files\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/secureheaders/commits/c7fc44c3e574c5a4b125cf6c06f1aa6dc6b6aa77", "message": "bump to 5.0.4"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/83eddbd20fa7510664377fef2dd75c7719ba170d", "message": "Merge pull request #373 from paulfri/webpacker-stylesheet-nonced-tag\n\nAdd missing `nonced_stylesheet_pack_tag`"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/2d198d4f5ad6f06d0c702e650a9c0b6f7e284a14", "message": "Merge pull request #377 from twitter/rubocop-vuln-critical-sev0-breach\n\nupgrade some test dependencies because the GitHub UI said"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/c130007adf0edbe87df59e6ec73932da97c54b50", "message": "nope, gotta be specific :thinking_face:"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/08253208d37913aa943d61f7aa5b953d0fe8c231", "message": "will this use the current 2.4.2/2.3.5?"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/8a784a35e4ebd2760963554d21e77f318b3220a3", "message": "upgrade ruby while we're at it"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/17cd26c3e93540489f70ce0727ed3ef098ab5793", "message": "rubocop"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/2662fc48b53b6ef14aa2aa9598b0bdfeefb4c556", "message": "upgrade some test dependencies"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/dec5a793d87ac2a91925d4baa7ba943087cee377", "message": "Merge pull request #374 from ghiculescu/patch-1\n\nthe same URL is repeated twice in the gemspec"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/ec4b50e101e45bd0ecea6b9b210cc9e528493b8f", "message": "bump to 5.0.3"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/565b819af01ad415f56942e147ebfb8d7919d86e", "message": "Merge pull request #372 from steveh/nonced_include_tags\n\nAdd nonced versions of Rails link/include tags"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/d34fa279d4b43c9c6c0e4e3becb9db1db103caa7", "message": "bump to 5.0.2"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/1c13c9f4d294298b6339c802bea73cff755ea7aa", "message": "Merge pull request #371 from ptoomey3/master\n\nUpdate Referrer-Policy to support multiple token values"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/f738658585b94f10ecd32977644de80b80008b8b", "message": "Update README.md"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/92ba4c82a8c55adda65d6b4c36b3794be144cbde", "message": "remove hpkp from readme"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/e2115caa8f12138d859a52ee4e84b549e235d520", "message": "Delete HPKP.md"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/c9b2c7c511aa74b5593626cdb34984c815f49005", "message": "bump to 5.0.1"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/9357c7c2d86492d93cdfb6f2288cda5ecf372aa0", "message": "Merge pull request #367 from ptoomey3/master\n\nUpdate Expect-CT to use separator in spec"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/cc3d97b1da1a8b3f6d89e953f47bb01f8a4c2ecd", "message": "Bump to 5.0.0 and update docs with upgrade guide"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/271", "title": "add support for 'require-sri-for' CSP directive", "body": "Fixes #264\n## All PRs:\n- [x] Has tests\n- [x] Documentation updated\n## Adding a new CSP directive\n- Is the directive supported by any user agent? If so, which?\n  - Chrome vSomething, Firefox 50+\n- What does it do?\n  - Ensures that all assets (scripts and styles for now) loaded have a valid integrity attribute per SRI\n- What are the valid values for the directive?\n  - `script` and `style` for now (unquoted, right?)\n\nSee https://codereview.chromium.org/2056183002/ and https://frederik-braun.com/new-csp-directive-to-make-subresource-integrity-mandatory-require-sri-for.html and https://gist.github.com/mozfreddyb/f4b7e79ab629a3ecff663f33d9a56e82\n\n/cc https://github.com/w3c/webappsec-subresource-integrity/pull/32\n", "author_association": "COLLABORATOR"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689232", "body": "\"so that \"require secure_headers\" works outside of a Rails app\"\n\nWant. Hadn't tried. Thanks.\n\n@sikachu thanks, while renaming things sucks, not following conventions sucks more :poop: any other changes? Feel free to submit a pull request, or I'll get to it tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689259", "body": "Wat? totally a bug. :csp => false should mean no header is assigned at all. Thanks! Will fix tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689274", "body": "Just to be clear, did you set :csp => false in the controller or in a .configure block?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689310", "body": "Also escaped the hyphens. Thanks for the pull request!\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12689310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707222", "body": "@bmaland in my experience the lib is auto required by any call to `Bundler.require` which is standard in Rails 3 (in application.rb), but not 2. Am I failing on some other bundler logic somewhere? I usually require it in the initializer for Rails 2\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707542", "body": "Changing the name had no effect on this issue for me. I'm assuming the naming is unrelated to the issue? Your callon the PR, ideally I would want to support both with deprecation warnings until 1.0\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707641", "body": "Confirmed. It is supplying the default value so it thinks it's receiving nil as the value to :csp. \n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12728438", "body": "One last thing, I think it should be `secure_headers`, emphasis on the pluralization of \"header\" since we are applying multiple headers (in the majority of cases).\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12728438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766481", "body": "Not too familiar with sinatra, but you can use the set_x_header methods directly if included. I had a snippet, will post and add to the readme\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766512", "body": "``` ruby\nrequire 'rubygems'\nrequire 'sinatra'\nrequire 'haml'\nrequire 'secure_headers'\n\n::SecureHeaders::Configuration.configure do |config|\n  config.hsts = {:max_age => 99, :include_subdomains => true}\n  config.x_frame_options = 'DENY'\n  config.x_content_type_options = \"nosniff\"\n  config.x_xss_protection = {:value => '1', :mode => false}\n  config.csp = {\n    :default_src => \"https://* inline eval\",\n    # ALWAYS supply a full URL for report URIs\n    :report_uri => 'https://example.com/uri-directive',\n    :img_src => \"https://* data:\",\n    :frame_src => \"https://* http://*.twimg.com http://itunes.apple.com\"\n  }\nend\n\nclass Donkey < Sinatra::Application\n  include SecureHeaders\n  set :root, APP_ROOT\n\n  get '/' do\n    set_csp_header(request, nil)\n    haml :index\n  end\n\nend\n\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766531", "body": "Can you de-jank that and submit a PR? I'll add it to the readme, just don't wan to upset the sinatra users with my jank\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12766531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968241", "body": ":+1: \n\nDefinitely what I wanted to do. \n\nRE: browser_extensions, there's some debate as to whether this will be part of the spec (i.e. don't report on extension activities at all). It might be premature abstraction, which I'm not completely against. Likely the method to manipulate extensions across browsers will not be standardized very soon which justifies this entirely.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968397", "body": "Ha, thanks for the clarification.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968649", "body": "While you're at it, let me know if you figure out why #3 wasn't caught in tests? I thought I had tests for exactly that. Either they are invalid or missing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968942", "body": "fwiw that code is some jank. It's used in different contexts and for different purposes IIRC\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12972717", "body": "Not to put any pressure on you... but I was about to integrate the code to apply two headers (on that enforces, and an \"experimental\" one that only generates reports).\n\nWe will have a mega conflict, but I can easily resolve my conflicts with this change so I'll hold off until then.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12972717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12973827", "body": "Updating readme w/ this example\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12973827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12973984", "body": "Finished in 0.23764 seconds\n118 examples, 0 failures\n\nCoverage report generated for RSpec to /home/travis/build/twitter/secureheaders/coverage. 364 / 375 LOC (97.07%) covered.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12973984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/13023490", "body": "just fyi You can work around this by moving to a .configure block\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/13023490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/13052536", "body": "Woot. moar proper.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/13052536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/3719103", "body": "Fixed in https://github.com/twitter/secureheaders/commit/116330d91bf64e204d15cbb8c099dc6fccdc3e95\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/3719103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/6684305", "body": "Probably because my setup is outdated. That was just the output of the rvmrc -> ruby-version command. So no good reason :) \n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/6684305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8147244", "body": "Ha, probably explains why my tests are erroring out\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8147244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278412", "body": "Can you provide as much code/information as you can about your setup and the test?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/13825024", "body": "Ha, good eye.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/13825024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2851862", "body": "Got beef with this test?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2851862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2853155", "body": "I like.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2853155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2856303", "body": "honestly this whole condition isn't needed, which reduces the need for the browser ivar. I doubt firefox will drop support for \"allow\" anytime soon. @imelven?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2856303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938197", "body": "hmm in this case we should just remove the w3c reference\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938246", "body": "in this case, w3c is the correct thing to use\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938331", "body": "w3c/w3c -> WebKit/W3C\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938380", "body": "w3c -> WebKit/W3C\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938404", "body": "w3c -> webkit\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2938404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018257", "body": "This indicates my testing was incorrect or this block is never actually used. I suppose @secure_headers_options is always defined and superclass never responded to the invalid value? (no nil is not a valid value here)\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3104975", "body": "Nah, decided even though the effect is the same, a ? method returning a boolean made more sense to me. \n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3104975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3105140", "body": "tl;dr :forward_endpoint is used in the CSPController to forward the requests. FF_CSP_ENDPOINT represents the route to the CSPController\n\n`:forward_endpoint` is used in the controller that forwards the csp reports. The constant represents the route that the report should post to from the browser. This logic is meant to say:\n\nIf you are on a different domain than your `:report-uri`\\* or `:report_uri` only contains a path, and you're using firefox, send the report back to my app so it can be forwarded to the value in `:forward_endpoint`\n\nIf no `:forward_endpoint` is supplied, assume you know what you're doing and understand that you may lose some firefox reports unless you're using a path. \n\n<rant>\nIt's so effing confusing that at one point I questioned what that setting meant (and the mean has mos definitely changed). Yay for 0.x releases. I think that entire section in the README needs to be rewritten, by someone other than me so it's comprehensible to at least two people.\n</rant>\n- fwiw This part of the code may become an edge case with the upcoming Firefox releases. Currently, TLD+1/scheme/port have to match but that may be changing to only require TLD+1 to match\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3105140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3106490", "body": "sorry, the other branch is based off this one, so no conflict\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3106490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3292620", "body": "_by_ the server. \n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3292620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3292622", "body": "i hate this readme\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3292622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3555020", "body": "this should just take the header instance, not the individual values, relic of older code. some other time.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3555020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421773", "body": "yeah, using a static nonce is not something I would encourage :) in fact, I should rip out https://github.com/twitter/secureheaders/blob/master/lib/secure_headers/headers/content_security_policy.rb#L216 too\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}]}, "stve": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/368", "title": "Consider removal of support for HPKP?", "body": "https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/13807855", "body": "this seems accidental\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/13807855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "akkee": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/350", "title": "Implement strict-dynamic alongside URL whitelists", "body": "# Feature Requests\r\n\r\n## Adding a new CSP directive\r\n\r\nNow I'm not sure if it's a new directive\r\n\r\nI'm talking about implementing `strict-dynamic` in `script_src` alongside a list of known URLs. \r\nBasically using nonce-specified inline scripts from my own views, alongside few URLs like jsdelivr\r\n\r\nOf course using `strict-dynamic` blocks all external scripts.\r\n\r\nhttps://csp.withgoogle.com/docs/faq.html#strict-dynamic-with-whitelists suggests a way to do that, specifying two csp headers.\r\n\r\nNot sure how I'd replicate that in the initializer I use for SecureHeaders config.\r\nNeedless to say, setting `scripts_src` twice inside csp, generates a duplicate key warning", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "edwinv": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/349", "title": "Remove auto-insertion of middleware and force the manual insertion to avoid whacky bugs", "body": "We are using SecureHeaders 3.6.7 in a Rails 5.0.3 project and want to start using the `nonced_javascript_tag` helper to remove `unsafe-inline` from our CSP.\r\n\r\n### Expected outcome\r\n\r\nWhen using the `nonced_javascript_tag`, we expect two things:\r\n\r\n1. A `script` tag with a `nonce` attribute\r\n2. A `nonce-...` value in our CSP header\r\n\r\n### Actual outcome\r\n\r\n1. `script` tag is correct\r\n2. `nonce-...` value is missing from the CSP header\r\n\r\n### Config\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\n::SecureHeaders::Configuration.default do |config|\r\n  config.x_frame_options = \"DENY\"\r\n  config.x_content_type_options = \"nosniff\"\r\n  config.x_xss_protection = \"1; mode=block\"\r\n\r\n  config.csp = {\r\n    default_src: %w['none'],\r\n    connect_src: %w['self' www.project.nl],\r\n    child_src: [Rails.application.secrets.applications[\"storage_public_url\"]],\r\n    img_src: [\"'self'\", \"data:\", Rails.application.secrets.applications[\"storage_public_url\"], Rails.application.secrets.applications[\"assets\"]],\r\n    style_src: [\"'self'\", Rails.application.secrets.applications[\"assets\"], \"'unsafe-inline'\"],\r\n    font_src: [\"'self'\", Rails.application.secrets.applications[\"assets\"]],\r\n    script_src: [\"'unsafe-eval'\", Rails.application.secrets.applications[\"assets\"]],\r\n    object_src: %w['none'],\r\n    media_src: %w['none'],\r\n    frame_ancestors: %w['none'],\r\n    report_uri: %w[/csp_report]\r\n  }\r\n\r\n  config.hsts = SecureHeaders::OPT_OUT\r\nend\r\n```\r\n\r\n### Generated headers\r\n\r\n```\r\nCache-Control:no-cache, no-store, must-revalidate\r\nConnection:keep-alive\r\nContent-Length:35584\r\nContent-Security-Policy:default-src 'none'; child-src storage.project.dev app.project.dev; connect-src 'self' www.project.nl; font-src 'self' assets.project.dev; frame-ancestors 'none'; img-src 'self' data: storage.project.dev assets.project.dev; media-src 'none'; object-src *; script-src 'unsafe-eval' assets.project.dev 'self'; style-src 'self' assets.project.dev 'unsafe-inline'; report-uri /csp_report\r\nContent-Type:text/html; charset=utf-8\r\nDate:Wed, 16 Aug 2017 10:58:28 GMT\r\nExpires:0\r\nPragma:no-cache\r\nServer:nginx/1.4.6 (Ubuntu)\r\nX-Content-Type-Options:nosniff\r\nX-Download-Options:noopen\r\nX-Frame-Options:ALLOW-FROM https://app.project.dev\r\nX-Permitted-Cross-Domain-Policies:none\r\nX-Request-Id:d748d1d5-b6c3-42f6-8b41-6d088ee8283a\r\nX-XSS-Protection:1; mode=block\r\n```\r\n\r\n### Debugging\r\n\r\nI've done some debugging to find out if the problem was in another part of our software. I came to the following conclusions:\r\n\r\n1. Calling the `nonced_javascript_tag` helper, indeed sets the `nonce` in the SecureHelper configuration. \r\n2. This nonce is still present at the end of the request in Rails, tested by reading the `request.env['secure_headers_request_config']` in an `after_action` callback in the `ApplicationController`.\r\n3. When the SecureHeaders middleware kicks in, `env['secure_headers_request_config']` is nil, therefore a new default configuration is loaded from our configuration in `config/initializers/secure_headers.rb`. Somehow the configuration already stored in the `env` is neglected, therefore the nonce is missing and not added to the headers.\r\n\r\nI've disabled all custom middleware in our project to make sure our middleware isn't interfering with the `env` object, this didn't have any impact on the result.", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "n2liquid": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/348", "title": "Don't upgrade insecure requests when the page is served over HTTP", "body": "I want to set `upgrade_insecure_requests` only if the page is requested over HTTPS, because I don't use HTTPS when developing on localhost (i.e. when developing, I browse http://localhost, not https://localhost).\r\n\r\nRight now if I set `upgrade_insecure_requests`, I can't develop locally since all internal resource requests are upgraded, and since my local server doesn't support HTTPS, they fail.\r\n\r\nI think this should be a fairly typical scenario. Would this be considered a bug, or is there a work-around for it?\r\n\r\n### Relevant software versions\r\n\r\n* rack 1.6\r\n* secure_headers 3.6.7\r\n\r\n### Expected outcome\r\n\r\n1. I configure CSP to `upgrade_insecure_requests`.\r\n1. I browse http://localhost while developing.\r\n1. `upgrade_insecure_requests` header shouldn't be set, since it's pointless as the webpage itself is being insecurely served.\r\n\r\n### Actual outcome\r\n\r\n1. `upgrade_insecure_requests` header is set and all internal resources are broken.\r\n\r\n### Config\r\n\r\n```\r\n  SecureHeaders::Configuration.default do |config|\r\n    config.cookies = {\r\n      secure: true,\r\n      httponly: true,\r\n      samesite: {\r\n        lax: true\r\n      }\r\n    }\r\n    # Add \"; preload\" and submit the site to hstspreload.org for best protection.\r\n    config.hsts = \"max-age=#{20.years.to_i}; includeSubdomains\"\r\n    config.x_frame_options = \"DENY\"\r\n    config.x_content_type_options = \"nosniff\"\r\n    config.x_xss_protection = \"1; mode=block\"\r\n    config.x_download_options = \"noopen\"\r\n    config.x_permitted_cross_domain_policies = \"none\"\r\n    config.referrer_policy = \"same-origin\"\r\n    config.clear_site_data = [\r\n      \"cache\",\r\n      \"cookies\",\r\n      \"storage\",\r\n      \"executionContexts\"\r\n    ]\r\n    config.csp = {\r\n      # \"meta\" values. these will shaped the header, but the values are not included in the header.\r\n      # report_only: true,      # default: false [DEPRECATED from 3.5.0: instead, configure csp_report_only]\r\n      preserve_schemes: true, # default: false. Schemes are removed from host sources to save bytes and discourage mixed content.\r\n\r\n      # directive values: these values will directly translate into source directives\r\n      default_src: %w('self'),\r\n      base_uri: %w('self'),\r\n      #block_all_mixed_content: true, # see http://www.w3.org/TR/mixed-content/\r\n      child_src: %w('self'), # if child-src isn't supported, the value for frame-src will be set.\r\n      connect_src: %w(),\r\n      font_src: %w('self'),\r\n      form_action: %w('self'),\r\n      frame_ancestors: %w('none'),\r\n      img_src: %w('self' *),\r\n      manifest_src: %w('self'),\r\n      media_src: %w('self'),\r\n      object_src: %w('self'),\r\n      plugin_types: %w(),\r\n      script_src: %w('self' 'unsafe-inline' maps.googleapis.com),\r\n      style_src: %w('self' 'unsafe-inline'),\r\n      upgrade_insecure_requests: true, # see https://www.w3.org/TR/upgrade-insecure-requests/\r\n    }\r\n  end\r\n```\r\n\r\n### Generated headers\r\n\r\n```\r\n[...]\r\nContent-Security-Policy:default-src 'self'; base-uri 'self'; child-src 'self'; font-src 'self'; form-action 'self'; frame-ancestors 'none'; img-src *; manifest-src 'self'; media-src 'self'; object-src 'self'; script-src 'self' 'unsafe-inline' maps.googleapis.com; style-src 'self' 'unsafe-inline'; upgrade-insecure-requests\r\n[...]\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "somethingnew2-0": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/331", "title": "Cross-Origin Resource Sharing (CORS)", "body": "This is more of a question than a feature request, is there a historical reason the Cross-Origin Resource Sharing (CORS) headers aren't included in the list of headers configured by secureheaders?  Has it just not been implemented yet? Do you all recommend using [rack-cors](https://github.com/cyu/rack-cors) as a complement to secureheaders instead of including this feature directly? Just curious \ud83d\ude04 \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "belenko": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/317", "title": "Source Deduplication Doesn't Take Schemes into Account", "body": "`SecureHeaders` excessively deduplicates sources without taking schemes into account leading to removal of sources that shouldn't be removed.\r\n\r\nI think the problem is with [`dedup_source_list()`](https://github.com/twitter/secureheaders/blob/master/lib/secure_headers/headers/content_security_policy.rb#L151) which relies on filesystem-like matching.\r\n\r\n### Expected Header\r\n\r\n`Content-Security-Policy: default-src 'self' wss://ws.contoso.com *.contoso.com`\r\n\r\n### Actual Header\r\n\r\n`Content-Security-Policy: default-src 'self' *.contoso.com`\r\n\r\n### Config\r\n\r\n```ruby\r\nSecureHeaders::Configuration.default do |config|\r\n  config.csp = {\r\n    preserve_schemes: true, # this line doesn't matter, actually\r\n    default_src: %w('self' wss://ws.contoso.com *.contoso.com)\r\n  }\r\nend\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "csuhta": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/273", "title": "Add instructions for Rails 5 confusion? ", "body": "Rails 5.0 includes [several header options](http://api.rubyonrails.org/classes/ActionDispatch/SSL.html) that conflict with Secure Headers 3.3.2.\n\nFor example, here is my SecureHeaders config:\n\n``` ruby\nSecureHeaders::Configuration.default do |config|\n  config.cookies = {\n    secure: true,\n    httponly: true,\n  }\n  config.hsts = \"max-age=#{356.days}\"\n  config.x_frame_options = \"DENY\"\n  config.x_content_type_options = \"nosniff\"\n  config.x_download_options = \"noopen\"\n  config.x_permitted_cross_domain_policies = \"none\"\n  config.x_xss_protection = \"1; mode=block\"\n  config.referrer_policy = SecureHeaders::OPT_OUT\n  config.csp = SecureHeaders::OPT_OUT\nend\n```\n\nIf I set `force_ssl = true` in the Rails configuration, I get this when I boot a Rails 5.0 app:\n\n``` text\nDEPRECATION WARNING: In Rails 5.1, The `:subdomains` option of HSTS config will be treated as true if unspecified. \nSet `config.ssl_options = { hsts: { subdomains: false } }` to opt out of this behavior.\n```\n\nIt's unclear to the user (1) why they need to set it in both places (2) which one overrides the other. Also, should SecureHeaders be performing the Rails configuration for you?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "connorshea": {"issues": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/269", "title": "report-uri is deprecated in favor of report-to", "body": "I don't know if the gem should be modified based on drafts of the spec, but I figured it was worth noting that the latest draft of the CSP standard replaces `report-uri` with `report-to` ([Source](https://w3c.github.io/webappsec-csp/#directive-report-uri)).\n\nObviously `report-uri` shouldn't be removed, but `report-to` might want to be supported? I'm not particularly familiar with the W3C drafting process, so I'm not sure how much of this will be subject to significant change.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/269/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paulfri": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/secureheaders/commits/35a505df70b8a52fd87ecb85ead97117a5560027", "message": "Support multiple sources in asset tag helpers"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/ba575317780eca138829ab6855e38ea564ed8762", "message": "Add missing `nonced_stylesheet_pack_tag`\n\nEquivalents were added in 1e81a0a.\n\nThis also fixes a bug preventing passing any arguments to these\ntags. Tests were updated with a sample to reflect this."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghiculescu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/secureheaders/commits/3b43af51ed17d9473fef403789d0440be287e7bb", "message": "correct url"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/2b6519f8d964ff7dd519ea3b922622cf126f261d", "message": "the same URL is repeated twice in the gemspec"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "steveh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/secureheaders/commits/1e81a0a5635647618f5678123cefbb76baad0c6e", "message": "Add nonced versions of Rails link/include tags\n\nAdds support for nonced versions of Rails' CSS, JavaScript and Webpacker link/include tags.\n\n* nonced_stylesheet_link_tag\n* nonced_javascript_include_tag\n* nonced_javascript_pack_tag"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ptoomey3": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/secureheaders/commits/0474176a5bc0f4e5ffada1d9d83a9efd09cbabb4", "message": "Use consistent quotes throughout"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/9e04fa34d7d6f93b5cac5d727300347e3cbd2e98", "message": "Update example to use multiple config values"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/8447ec32c552034c48498fd782c382f1df3f0a6d", "message": "Update changelog"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/41e87d545cc823b32eb3b7651b28721ea257dd13", "message": "Add support for multiple policies"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/0190de96e3b1426a4819d1e9b788b1a7e54253bf", "message": "Updates CHANGELOG"}, {"url": "https://api.github.com/repos/twitter/secureheaders/commits/7c525e42382e262403292bd42232e0c90bb49804", "message": "Update Expect-CT to use separator in spec"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "s-gerber": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/370", "title": "small typo fix: a minimum \u2026 IS required", "body": "This PR fixes just a small typo.\r\n\r\nThank you for your work", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sikachu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12669261", "body": ":-1: ... I think we should fix something else, like make sure that this gem follow Ruby's convention.\n\nI think the gem name should be change to `secure_headers`, if the author really want to use SecureHeaders as a module name.\n\nor else, move all the files to `secure/headers.rb` ... but it doesn't make any sense here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12669261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707412", "body": "Yeah, I think just the Gem name fix would be fine. I think `secure_header` would be a great name for this, so that it would follow the convention.\n\nI could send a PR for gemspec change, but would still need you to do the `gem push` and `gem build` still. Do you want me to do that?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707666", "body": "Oh, it has some issue, since if your gem name is `secure_header`, the `require =>` fix in b2266ca is not required anymore. So if we change the gem's name, you don't need to merge in b2266ca.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12707666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12728462", "body": "Oh yes, `secure_headers`. I actually missed the pluralization there. :poop: \n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12728462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hellvinz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12693230", "body": "i've put \n\n```\nensure_security_headers hsts: {include_subdomains: true, x_frame_options: false}, x_frame_options: 'DENY', csp: false\n```\n\nin the controller\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12693230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bemurphy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12930745", "body": "I think you meant SecureHeaders::ContentSecurityPolicy class and not the controller?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12930745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12956054", "body": "I think there's some chrome specific stuff (like the extensions) that could be split out to webkit as well.  Maybe have a general `#browser_extensions` method or something that can handle that kind of thing?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12956054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12957856", "body": "BTW, here's my feature branch flogged on the file currently:\n\n180.2: flog total\n     7.5: flog/method average\n\nHere's master:\n   250.1: flog total\n     8.9: flog/method average\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12957856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968371", "body": "@oreoshake ok I'll keep trucking with it tonight then.  I think I can get it far enough it's worthy of master (it's pretty close already) and then we can keep pulling in features for little extractions here and there.\n\nI think the tests were pretty helpful btw (I hope!) because I've relied on them entirely for the refactoring so far.  I do need to do another sweep on them though to make sure nothing is breaking and stubs are lying to me or something...\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968723", "body": "@oreoshake hah, yeah that issue just caught my eye, too.  I'll check it out.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/issues/comments/12968723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2851890", "body": "I ripped `supports_standard?` from the other classes, it's only a private for FF now because that was the only place using it.  Does this make sense?\n\nIt was in commit 7a6cbd5f6e6c6c\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2851890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018579", "body": "+1 on that, was gonna say it was checking `:options` and not `:secure_headers_options`\n\nThe defined check would only be needed if you ever needed to set `@ivar` to nil, which is probably not the case here, so an `if @ivar` is fine.\n\nEDIT:  sorry if I just spammed a github user named ivar.  fixed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "reedloden": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/3163372", "body": "Update the comment, maybe?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/3163372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/3713679", "body": "For Django, you can use https://github.com/jsocol/commonware for most stuff and https://github.com/mozilla/django-csp for CSP\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/3713679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/4555206", "body": "Add hood as well for Node.js... https://github.com/seanmonstar/hood and http://seanmonstar.com/post/66383442331\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/4555206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/4560144", "body": "We link to the github site for everything else, so might as well use https://github.com/seanmonstar/hood -- thoughts?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/4560144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/5643019", "body": "Don't think you meant to do this, considering the next line...\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/5643019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/6673956", "body": "Why p484 and not latest 1.9.3 (p547)?\n\nhttps://www.ruby-lang.org/en/news/2014/05/16/ruby-1-9-3-p547-released/\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/6673956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8147233", "body": "Don't think you meant to commit this. :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8147233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12022398", "body": "Still have `:ruby_21` listed twice here. :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12022398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12023259", "body": ":)\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12023259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12416454", "body": "Actually, can you add https://github.com/ianheggie/hola-ianh/commit/cdfabafac0d56e45b08d22596d861f030fb84c1f as well? All Travis CI builds are failing right now because of the :ruby_22.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/12416454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16319052", "body": "Just noticed 'X-Permitted-Cross-Domain-Policies' and 'X-Content-Type-Options' are listed twice.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16319052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16334346", "body": "`X-Content-Type-Options` is listed twice as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16334346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16937187", "body": "Might be good to let people configure that somehow (but have a default).\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16937187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/17360610", "body": "invalid\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/17360610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/23886685", "body": "Shouldn't this be in alpha order?", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/23886685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421744", "body": "This seems like a typo... What's with the ']' just hanging there?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421750", "body": "Did you mean to remove this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/7421750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jarinudom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278361", "body": "I think this change may be causing `undefined local variable or method 'ensure_security_headers' for ApplicationController:Class (NameError)` when running rspec.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278504", "body": "Here's my stack trace. It might be possible that `inherited_resources` or `activeadmin` are causing problems. It works totally fine if I put `include SecureHeaders` at the top of `ApplicationController`.\n\n```\n/Users/jarinudom/projects/jmjmainframe/app/controllers/application_controller.rb:6:in `<class:ApplicationController>': undefined local variable or method `ensure_security_headers' for ApplicationController:Class (NameError)\n    from /Users/jarinudom/projects/jmjmainframe/app/controllers/application_controller.rb:1:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `block in require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:348:in `require_or_load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:480:in `load_missing_constant'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:180:in `const_missing'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/inherited_resources-1.4.1/app/controllers/inherited_resources/base.rb:11:in `<module:InheritedResources>'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/inherited_resources-1.4.1/app/controllers/inherited_resources/base.rb:1:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `block in require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:348:in `require_or_load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:480:in `load_missing_constant'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:180:in `const_missing'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin/base_controller/authorization.rb:2:in `<module:ActiveAdmin>'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin/base_controller/authorization.rb:1:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `block in require'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:247:in `require'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin/base_controller.rb:1:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin/application.rb:217:in `controllers_for_filters'\n    from /Users/jarinudom/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin/application.rb:210:in `block (2 levels) in <class:Application>'\n    from /Users/jarinudom/projects/jmjmainframe/config/initializers/active_admin.rb:11:in `block in <top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/bundler/gems/active_admin-b794f4b7550d/lib/active_admin.rb:71:in `setup'\n    from /Users/jarinudom/projects/jmjmainframe/config/initializers/active_admin.rb:1:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:241:in `load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:241:in `block in load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:232:in `load_dependency'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/dependencies.rb:241:in `load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/engine.rb:648:in `block in load_config_initializer'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/activesupport-4.1.6/lib/active_support/notifications.rb:161:in `instrument'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/engine.rb:647:in `load_config_initializer'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/engine.rb:612:in `block (2 levels) in <class:Engine>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/engine.rb:611:in `each'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/engine.rb:611:in `block in <class:Engine>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:30:in `instance_exec'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:30:in `run'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:55:in `block in run_initializers'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:150:in `block in tsort_each'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:183:in `block (2 levels) in each_strongly_connected_component'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:210:in `block (2 levels) in each_strongly_connected_component_from'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:219:in `each_strongly_connected_component_from'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:209:in `block in each_strongly_connected_component_from'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:44:in `each'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:44:in `tsort_each_child'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:203:in `each_strongly_connected_component_from'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:182:in `block in each_strongly_connected_component'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:180:in `each'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:180:in `each_strongly_connected_component'\n    from /Users/jarinudom/.rubies/ruby-2.0.0-p481/lib/ruby/2.0.0/tsort.rb:148:in `tsort_each'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/initializable.rb:54:in `run_initializers'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/railties-4.1.6/lib/rails/application.rb:300:in `initialize!'\n    from /Users/jarinudom/projects/jmjmainframe/config/environment.rb:5:in `<top (required)>'\n    from /Users/jarinudom/projects/jmjmainframe/spec/rails_helper.rb:4:in `require'\n    from /Users/jarinudom/projects/jmjmainframe/spec/rails_helper.rb:4:in `<top (required)>'\n    from /Users/jarinudom/projects/jmjmainframe/spec/controllers/home_controller_spec.rb:1:in `require'\n    from /Users/jarinudom/projects/jmjmainframe/spec/controllers/home_controller_spec.rb:1:in `<top (required)>'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/configuration.rb:1105:in `load'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/configuration.rb:1105:in `block in load_spec_files'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/configuration.rb:1105:in `each'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/configuration.rb:1105:in `load_spec_files'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/runner.rb:96:in `setup'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/runner.rb:84:in `run'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/runner.rb:69:in `run'\n    from /Users/jarinudom/Dropbox/Mackup/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/lib/rspec/core/runner.rb:37:in `invoke'\n    from /Users/jarinudom/.gem/ruby/2.0.0/gems/rspec-core-3.1.7/exe/rspec:4:in `<top (required)>'\n    from /Users/jarinudom/.gem/ruby/2.0.0/bin/rspec:23:in `load'\n    from /Users/jarinudom/.gem/ruby/2.0.0/bin/rspec:23:in `<main>'\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/8278504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bquorning": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/comments/16094355", "body": "Could you please push a v2.5.1 tag?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/comments/16094355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "imelven": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2879648", "body": "The tentative plan is to deprecate the old header (including the old syntax e.g 'allow') somewhere around Firefox 24 which is an ESR, but there's a lot of dependencies that need to be addressed first.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/2879648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "presidentbeef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018092", "body": "I think `defined?` is pretty heavy. Why not just `if @secure_headers_options` or `if not @secure_headers_options.nil?` ? Is `nil` a valid value?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3102674", "body": "So the value of `:forward_endpoint` doesn't matter?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3102674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3102704", "body": "Uh...is this a merge conflict with the other pull request?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3102704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3108491", "body": "Yeah, wow.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3108491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3289639", "body": "Sent _to_ the server or _by_ the server? (I suspect the latter?)\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3289639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3289665", "body": "Seems to contradict line 110?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3289665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/16012154", "body": "Was there a specific reason for this, or just hygiene?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/16012154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "codeferret": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018136", "body": "why not superclass.respond_to?(:secure_header_options) ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/3018136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/4711713", "body": "I always use kind_of? over is_a? but don't know if this is preferred.\n", "reactions": {"url": "https://api.github.com/repos/twitter/secureheaders/pulls/comments/4711713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}