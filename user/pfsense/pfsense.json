{"_default": {"1": {"sbeaver-netgate": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/b1c01d8051fc9d029f92a61a249a7af388d7f5c8", "message": "Merge pull request #6400 from loonylion/master"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/61b6c22a5082eb66b85a44739f3acc076a725e96", "message": "Merge pull request #3898 from alistair23/alistair/master"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/8dc334885b83aaed038f2afbf84408173cb9d25e", "message": "Merge pull request #3889 from kangtastic/master"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/f5d55ac6638a8b1f707d19c00178d3e45b82e0ca", "message": "Merge pull request #3899 from PiBa-NL/20180111-bootup-step-messages"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/0fc473ad6faefc3cdf7818551de9d103d2c050d0", "message": "Merge pull request #3900 from PiBa-NL/20180111-pf-busy"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/d23d1a0690fb28221a80dcfff3d193dc7d3d4ad5", "message": "Merge pull request #3901 from earlchew/issue-7357"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/af17dba166c9dda46a1974841a6cb0ad44af397c", "message": "Fixed #8268"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/016260fe433772839a06233d821992808d80f8cd", "message": "Fixed #8266 by removing JS alerts"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/48a6bb92724f7c682a8d543f2e4de2a1656776e0", "message": "Update language selections"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jim-p": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/4cad9a5bd1666c9bd5ce32b82f9b897dbbe5a5bf", "message": "Change sshd compression to 'delayed' to match current FreeBSD default. Fixes #8245"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/900663a44f41de0af780614df18cc432f8c9eaab", "message": "Add an update source control to RFC2136 dynamic DNS updates. Implements #8278"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/618faaf26212de6d2d44627bbe41f0a683f34bed", "message": "Add localhost to list of interfaces for packet capture. Implements #8257"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/163255d64c021508224140f08fb2c261265e465e", "message": "Add ospf6d to routing logs."}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/19a1cf348b07dbaf8fe4d81b8cfc8292b61fd8c3", "message": "Fix certificate SAN input validation so it does not improperly allow an IP address when FQDN is selected. Fixes #8275"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/498f7e20b630ae1429c1e6892402a0256e8859ba", "message": "Add an option to push a gatewy address to bridged tap clients. Implements #8267"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/2f7d3a1f3c9b00a815037e1f4b8a88c938a8f42d", "message": "Encode rangedescr before display in firewall_schedules.php. Fixes #8259"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/88be34ad801ca891bbda64d69af987f89ac28dd9", "message": "Fix foreach error on hosts that have no dyndns entries."}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/31bb3fb620b895e6feca6910b86f95f044df48bd", "message": "Merge pull request #3893 from JoeriCapens/ddns-rfc2136-algorithm-choice"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/e562fca2e6b7a2ffbbdfe748f769a8cde9e116dc", "message": "Change how SANs are generated from the CN, considering that not all CNs will produce a valid SAN. Fixes #8252"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/fbdf0a084da239ca785360106b3dd8d1390223cf", "message": "Do not make a bypasslan IPsec config block when it should be disable/empty. Fixes #8239"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1631760", "body": "Not sure why you need to modify upgrade_config.inc at all, that won't be touched for normal operations, only when upgrading from 1.2.3 to 2.0 and since LDAP+IPsec was not supported there, there is no need to make any consideration for that.\n\nThe racoon bits look ok, but you should have a test surrounding that code block that only writes them out if the user source is LDAP. As it is, it would put the LDAP config in every racoon config, even those not using LDAP. Also a sanity test to make sure that the referenced LDAP server exists would be useful.\n\nWould also be nice if the LDAP choice was hidden if no LDAP servers were defined, and if you have more than one LDAP server defined, there should be a way to choose between them. (the latter could wait, since this is going into 2.1, so long as a ticket was opened in redmine to remind someone to finish it off before 2.1 ships.)\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1631760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/1004985", "body": "True, syslogd does only resolve once when it starts, but anyone sending plaintext syslog messages over the Internet to a dyndns host deserves to run into a little trouble. :-)\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1004985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066625", "body": "It's in the pfSense module. Requires a new binary build to get it.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "earlchew": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/247f571945eda9663eee8122ab3c85c6f52f2eec", "message": "[services_dyndns_edit] Clarify use of @ for Cloudflare\n\nAdd GUI prompts corresponding to #7357 that allows users to\nenter @ for the hostname, and have it replaced with an empty hostname.\n\nSigned-off-by: Earl Chew <earl_chew@yahoo.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PiBa-NL": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/66e6198f4d069efc0fe979a34d6b4794b7e018c8", "message": "pf, device-busy, add another item DIOCADDRULE to the list of results to retry"}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/1da0c794434842fdd58c049ce4e69a90667f959c", "message": "bootup, add information about what bootup step is being done"}], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3895", "title": "openvpn, fix the ifconfig ip1 ip2 when subnet /31 is used", "body": "- [x] Redmine Issue: https://redmine.pfsense.org/issues/8261\r\n- [x] Ready for review", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3830", "title": "pppoe, allow configuring pppoe on a carp interface so its only active on the master", "body": "pppoe, allow configuring pppoe on a carp interface so its only active on the master\r\n\r\nhttps://redmine.pfsense.org/issues/8184", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3781", "title": "Gateways, allow for configuring a gatewaygroup as the default gateway.", "body": "Gateways, allow for configuring a gatewaygroup as the default gateway.\r\n-Avoid changing routes by just visiting a webgui page.\r\n-Avoid change some unneeded events when nothing changed.\r\n\r\nThere probably are still some improvements to be done.. Like using using the current checkboxes to set a default gateway, and converting the current config to the new selection box..\r\n\r\n@jim-p can you tell if this pullrequest as a whole is going 'in the right direction' ?\r\n\r\np.s. It should not yet be pulled in its current state (there is a little manual configuration needed).. but before putting more hours into this, i would like to know it has a good chance of getting pulled..\r\n  \r\n- [x] Redmine Issue: https://redmine.pfsense.org/issues/8187\r\n- [x] Ready for review", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3711", "title": "ipsec, allow configuration of multiple ike phase1 encryption ciphers", "body": "ipsec, allow configuration of multiple ike phase1 encryption ciphers (algo/bits/hash/dh)\r\n\r\nthis is useful for mobile users that need to connect with different operating systems. This way there is no need to find a single commonly supported weaker cipher.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alistair23": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/3048dd47ae31e0a00be09b713357c84f5aee4b04", "message": "upgrade_config.inc: Remove all restore_rrd() calls\n\nCommit 0869605131ba3e5d7e502af7a799e54f27d2e7f6 removed the\nrestore_rrd() function. To avoid errors when restoring older configs\nremove all callers to it.\n\nBug: https://redmine.pfsense.org/issues/8231\nSigned-off-by: Alistair Francis <alistair@alistair23.me>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "loonylion": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/87489e5cce8520ac4c240fec41f60301b38c59a3", "message": "re-adding changes made to fix bug#6400, includes fixes for bug#8222 and bug#8223 that were introduced with the initial commit of this code.\n\noriginal pull request was #3868"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "loos-br": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/5391d05cebfe588869c4caefd1d51d752d65c3f7", "message": "Sort package entries, remove unused packages (elinks, asterisk)."}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/51796ceda3d42267cfeabfb35ec5b8dd6d15bc5b", "message": "Small cosmetic fix."}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/b8f91b7c6bd16602d49f50c47f4ea28649404c97", "message": "Update the Copyright notice for pfSense."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JoeriCapens": {"issues": [], "commits": [{"url": "https://api.github.com/repos/pfsense/pfsense/commits/c0305bb85388499cddf9044dec406bbb57ad5c79", "message": "Add keyalgorithm input validation."}, {"url": "https://api.github.com/repos/pfsense/pfsense/commits/16f8df9a89ade7a898ecb8bfea72a054652975dd", "message": "Delete keytype field from config, remove unnecessary file cleanup."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "al-right": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3892", "title": "Fixes #7413: Some DHCPv6 leases are not displayed in the GUI", "body": ". Better handling/parsing of ISC dhcpv6 leases file and removal of unnecessary properties.\r\n. Experimental Pools/failover handling in the parsing of DHCPv6.\r\n. Cleanup on the Status DHCVPv6 Leases page.\r\n. Correction re. Mac address sent to 'Services' - 'Wake-on-LAN' - 'Edit' page when clicking the + button for 'Add WOL mapping' on the Status DHCPv6 Leases page.\r\n. IPv6 matcher/parser and unit testing of it.\r\n. Small debugging tool for inspecting lease file content.\r\n\r\nCorresponds to this commit\r\nhttps://github.com/al-right/pfSense-dhcpv6-gui-leases-patch/tree/5501616d5b9fc7bcad855b0dadd9d2fef8b4fa43\r\n\r\nPlease read parser/README.md and https://redmine.pfsense.org/issues/7413#note-11 for more notes about the changes.\r\n\r\n- [ ] Redmine Issue: https://redmine.pfsense.org/issues/7413\r\n- [ ] Ready for review", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scizzr": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3879", "title": "Widget refresh fix; minor widget UI tweaks", "body": "executewidget\r\n- Renamed function to executewidgets for grammar's sake\r\n- Moved ajaxspecs.length check out of the loop - if ajaxspecs.length isn't more than 0 at page load, there's no reason to keep checking it. can always move the check back into executewidgets function if there ever arises a case where widgets can be inserted into ajaxspecs dynamically.\r\n- Changed to a setInterval instead of a self-calling setTimeout - code is cleaner that way\r\n- Fixed logic in widget loop - previously, the setTimeout loop was only incrementing ajaxidx every time it was executed, which means that the function is only checking one single widget every second. If you have 6 widgets registered (my case, for example), that means that the loop only comes back around to a given widget (log.widget.php for example) every 6th run. So if you have your interval set to 1, it actually only refreshes every 6 seconds; if the interval is set to 2, it refreshes every 12 seconds. Changed ajaxidx to a for loop, checking each widget every setInterval execution.\r\n\r\nmake_ajax_call\r\n- Improved logic flow - should be doing your failure checks, then continuing if no failures are detected\r\n- Cleaned up unnecessary variable ajaxtimeout - don't need to capture this in a variable if it's not checked elsewhere\r\n- Cleaned up unnecessary variable ajaxmutex - you shouldn't use a global widget lock; see next point for replacement\r\n- Added a per-widget lock, which expires regardless of success or failure", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ssbarnea": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3877", "title": "Enable use of auth script for getting dynamic credentials on openvpn", "body": "Patch for enabling the ability to specify auth scripts that do generate user/password for the openvpn client, enabling OTP users to configure persistent VPNs.\r\n\r\nhttps://redmine.pfsense.org/issues/8122", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marjohn56": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3862", "title": "Set VLAN Priority on dhcp6c packets", "body": "Add VLAN tag to outgoing dhcp6c packets. Option setting in WAN dhcp6c section.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "luckman212": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3853", "title": "Small update to ip_change_kill_states", "body": "_this supersedes PR #3822 and is retargeted at master_\r\n\r\n- **ip_change_kill_states** preference was not actually getting saved properly, fixed\r\n- moved checkbox from System > Advanced > Network to Firewall (fits better with other state settings on the NAT tab)\r\n- slight update to the help text for clarity\r\n- capitalization\r\n\r\n_files changed:_\r\n/usr/local/www/system_advanced_firewall.php\r\n/usr/local/www/system_advanced_network.php\r\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3833", "title": "Some bikeshedding on the Notifications page", "body": "- added helptext to inform users that **multiple emails can be entered**\r\n- reduce the use of \"This is...\"\r\n- change \"E-Mail\" to \"Email\" or just \"Mail\" -- _more modern form_\r\n- moved SSL/TLS option right below Port, where it logically belongs\r\n- some other minor language & capitalization cleanups\r\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3832", "title": "Fix for dhcpleases dupes", "body": "Same as f0f56a7f4ea9b6636102c380d2d210983a08c996 just retargeted at master\r\n\r\nFixes duplicate blocks of dhcp lease entries getting added to /etc/hosts. Further discussion: https://forum.pfsense.org/index.php?topic=131554.0", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kfiducia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3843", "title": "Added Granularity for Firewall Logging Settings", "body": "Allows snort and virusprot table logs to be enabled independently from \"default\"\r\nIf \"Log Default Blocks\" is enabled the functionality is unchanged. If not set, a user can log snort/virusprot table blocks without all of the default blocks.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "colinligertwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3837", "title": "Improve flexibility of DHCPD configuration", "body": "- New checkbox \"Virtual IPs\" to allow dhcpd to use ipalias subnets\r\n- Allow creation of static mappings on ipalias subnets\r\n\r\nI've minimally tested this. It's mostly for comment at this point. \r\n\r\nThis is a very minimal effort to allow creation of dhcpd static host configurations on ipalias subnets. It is enabled by checking the \"Virtual IPs\" checkbox on the DHCPD service configuration view. Once enabled, the user will be able to create static mappings with addresses that match any subnet bound to the interface, including ipalias address subnets.\r\n\r\nIn order to facilitate this change, once enabled, the dhcpd.conf is modified to include all subnets of a given interface within a \"shared-network\" block named for the interface the subnets live on. No options are allowed within ipalias subnets.\r\n\r\nThis is as far as I'd like to go with this feature, but it could be expanded to allow for \"Additional Pools\" to be created within the ipalias subnets. I did some work towards this, but have stopped as it becomes very difficult to validate the new pools and all of their options without a major refactor if services_dhcp.php.\r\n\r\nKnow issues:\r\n- Once \"Virtual IPs\" is disabled, the out of subnet static mappings remain\r\n- dhcpd.conf indentation is inconsistent\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "watmin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3751", "title": "Update nsswitch when 'Disable DNS Forwarder'", "body": "tl;dr firewall services use /etc/hosts when it shouldn't\r\n\r\n[Edit: fixed the paragraph width and added replication example]\r\n\r\nServices on the firewall continue to use unbound for lookups when /etc/resolv.conf is configured for the forward resolvers.\r\n\r\nThis affected my OpenVPN client running on the firewall where my LAN has public hosts being overridden to the VPN IP addresses (including the VPN server). The OpenVPN client does a DNS lookup via /etc/hosts because of the /etc/nsswitch.conf config and tries to connect to the internal IP I configured in unbound for the LAN hosts, rather than public IP returned by the configured resolvers. This caused the VPN to fail to connect because it was trying to connect to the wrong IP. This also affected ntpd and likely every service as nsswitch was working as configured.\r\n\r\nReplication steps:\r\n\r\nVariables:\r\n\r\nPublic VPN Server IP: `123.45.67.89`\r\nPublic VPN Server hostname: `vpn.domain.tld`\r\nInternal VPN Server IP: `10.3.2.1/24`\r\nInternal VPN Serer hostname: `vpn.domain.tld`\r\n\r\npfSense configurations:\r\n\r\nServices / DNS Resolver / General Settings / Host Overrides\r\n`vpn.domain.tld`: `10.3.2.1`\r\n\r\nOn disk configuration:\r\n\r\n`/etc/resolv.conf`:\r\n```\r\nsearch domain.tld\r\nnameserver 8.8.8.8\r\nnameserver 8.8.4.4\r\n```\r\n\r\n`/etc/hosts`\r\n```\r\n10.3.2.1 vpn.domain.tld\r\n```\r\n\r\n`/etc/nsswitch.conf`\r\n```\r\n...\r\nhosts: files dns\r\n...\r\n```\r\n\r\nWhen OpenVPN attempts to connect to `\"vpn.domain.tld\"` it resolves this host to `\"10.3.2.1\"` and fails to connect because there it no route to host.\r\n\r\nThis is happening because `/etc/nsswitch` resolves `\"vpn.domain.tld\"` to the definition in `/etc/hosts` rather than doing a lookup against `8.8.8.8` (or `8.8.4.4`) as configured by the checkbox option.\r\n\r\nThe change swaps the `/etc/nsswitch.conf` host lookup order to use `/etc/resolv.conf` before checking `/etc/hosts` to resolve the hostname which is what I assumed the UI option would have done.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stilez": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3748", "title": "Rework on \"system_usermanager_settings\" and \"system_authservers\"", "body": "I refactored these two pages, although the underlying code isn't changed at all.\r\n\r\nThe session timeout in user manager settings hasn't got much to do with individual users or their permissions / authentication, it's a global timeout setting far closer to other admin security measures controlling security of logins on WebGUI sessions which are without exception all under **system -> advanced admin\"**. Long standing \"urgh\". The two pages have 3 other functions split between them which are very closely related - (1) view a list of auth servers, (2) select an auth server, and (3) edit auth servers. It seems very unhelpful to have (1) + (3) on the same page (via add/edit buttons) and (2) as a solo control on a different page, so I've put the GUI auth selection dropdown on the same page as the list of auth servers, which works nicely and makes logical sense.  That left nothing on usermanager_settings, which seems reasonable - it only had 2 controls, one related to admin access security and the other to selecting an auth server, neither was related to the user manager itself. Finally for code simplicity, I split **system_authservers.php** into two files, one for the table display and the other for entry editing, creating a new `system_authservers_edit.php` page from the existing code, because that function really is quite long and complex - basically it's exactly how it's done on other pages with a substantial edit page (such as firewall_rules.php + firewall_rules_edit.php).\r\n\r\n**tl;dr summary:**\r\n\r\n- `usermanager_settings.php` removed. There _weren't_ any settings for the user manager itself, it only had 2 controls, and both were very closely tied to other pages (one much more related to admin security but unhelpfully, not kept with other admin security functions, and the other related to how users authenticate rather than any settings of the usermanager). The controls moved with their code intact, one moved to `system->advanced admin`, the other to `system->user manager -> authentication servers`. They look a lot more at home there, and much easier for GUI users.  \r\n\r\n- `system_authservers.php` was very substantial because of all the auth settings for editing an auth server. In that regard it's closer to firewall rules, which have a separate settings page. It basically forked at `head.inc` to output both the main and edit pages. I split it into 2 pages the same way as firewall rules pages and others - a main page (containing the table and \"add\" button\", and an edit page.  This also let me be fairly sure that it wouldn't would cause issues, and kept the PR much simpler, by making it a direct copypaste with only minor changes.\r\n\r\n- I then added the `GUI login auth server selector` code to be above the table on authservers.\r\n\r\n- I deliberately avoided code change to the underlying code for ease of review.  It's basically copy-paste + minor glue. The only changes are as follows:  (1) Minor UI wording improvements on authserver.gui form, to be clearer what the selector is for, see screenshot, (2) Minor enhancements to validity checking on $_POST/$_REQUEST, (3) simplifying the args for the new `authservers_edit.php`:  it doesn't need `?act=new/edit` in its links now, and can be simplified like firewall_rules_edit.php: the presence of a valid `?id=` signifies edit, anything else signifies new. So I simplified that aspect and $act is set based on `id`.  (4) consequential edits to`help.php` + `priv.defs.inc` (because of the new page and removed page), and other user manager subpages (to remove the usermanager_settings tab),\r\n\r\nI don't use LDAP or other auth servers myself which limits checking, but I haven't modified the code knowingly other than peripheral as described, and the redone code looks good here from what I can see. Much more intuitive and simpler.\r\n\r\nScreenshot below.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3741", "title": "Convert bit-based error types to human readable E_* codes when reporting errors", "body": "error_get_last() includes a bit-based error type which corresponds to E_WARNING, E_DEPRECATED etc. Report the text tags rather than the numeric code if possible, as it makes more sense on reading notices.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3479", "title": "Convert ICMP subtypes selector control in fw_rules_edit.php as suggested, and refactor jscript a little", "body": "See PR #3328 for background.\r\n\r\nThis PR converts the new ICMP subtypes selector in `firewall_rules_edit.php` from a single multi-select list box to a double selector, as suggested by @jim-p, which leaves it clearer and more obvious which items are selected, without adding a list of checkboxes.\r\n\r\nIt does indeed improve the form. \r\n\r\nI hope no \"junk\" or merge conflicts have made it into this, I have worked from a copy-paste of the current code, but mistakes are always possible.\r\n\r\nI also refactored the javascript by collecting all functions and all on load activities together (\"like with like\") for convenience of devs in future. However all code except that directly controlling ICMP subtype selection should be unchanged.\r\n\r\nThe only functional change to the form is that it now returns icmptype as a comma separated string via a hidden control, rather than as an array of elements from the list box (as in the example suggested by @jim-p in the original PR). This made the code simpler, because the source data for the \"selected\" list box was already generated from a JS array anyhow, and the data in $config is in that format.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/2511", "title": "Add comprehensive high-level ip_compare() function", "body": "A lot of end code needs to do IP/range/subnet comparisons, and detect features such as overlap, disjoint (non-overlap), containment (full inclusion), as well as the more usual < = > != type of comparison. These need to work over agnostic IPs as well as sometimes restricted to IPv4 or IPv6 by calling code. So util.inc contains a proliferation of comparison functions. \n\nDespite this, we still don't have several comparisons that are often needed (for example, an equivalent to check_subnets_overlap() for testing range overlap, or range v subnet overlap). These are often needed when validating DHCP, VPN and other IP data.\n\nRather than create new functions for each of these, this PR creates a comprehensive but straightforward generic ip comparison function ip_compare() that handles in one go, all comparisons of ip/subnet/range/IPv4/IPv6 that are likely to be needed, and which is fast and efficient.\n\nFeatures:\n-     ip, range or subnet comparison\n-     handles input in string and factored form, so if a subnet is stored as ip/netmask already, or a range stored as start/end, it doesn't need to be converted to string only to convert back\n  -          subnet       '::fe80/64' evaluated same as array('subnet', '::fe80', 64)\n  -         range         '192.168.1.10-192.168.1.19' evaluated same as array('range', '192.168.1.10', '192.168.1.19')\n  -          if it would be useful to handle INT format IPv4 IPs, that's trivial to add.\n-    all common comparators handled (including overlap and inclusion); new ones are trivial to add\n-    easy human-readable and concise code (see below) for easy debugging and review\n-    IP agnostic by default, or restrict to IPv4/IPv6, as needed.\n-    all data validated and bad input detected\n-    no issues expected with x32/x64, uses hex strings for comparisons so same code copes with both IPv4/IPv6, avoiding all INT_SIZE issues and any duplicated code between IPv4/IPv6 handlers.\n- Code is a lot shorter, more 'generic', and easier to review than current approach (which tends to need 2 separate functions for IPv4/v6 and individual review of each for logic errors). The logic is very clean and trivial to enhance if a new data type, data format or comparison is later found to be useful.\n\nIt therefore provides in one function, back-end functionality of all existing ip_more/less_than, ip-in-subnet/range, and subnet/range-overlap/inclusion functions. Also, all input is validated, and IPv4/IPv6 agnostic (or restricted as desired).  So existing functions and high level code can use this as a high-level back end for comparison functions, simplifying use of high level IP functions.\n\nThe function is internally documented so here are examples of use as a back-end to other comparison functions:\n\n<pre>function ip_in_subnet_ipv4_or_ipv6($ip, $subnet) {\n   return ip_compare($ip, 'in', $subnet);\n}\n\nfunction ip_in_subnet_ipv4_only($ip, $subnet_ip, $subnet_bits) {\n   return ip_compare($ip, 'in', array('subnet', $subnet_ip, $subnet_bits), 4);\n}\n\nfunction ip1_less_than_ip2($ip1, $ip2) {\n   return ip_compare($ip1, '<', $ip2);\n}\n\nfunction ip1_less_than_ip2_ipv4_only($ip1, $ip2) {\n   return ip_compare($ip1, '<', $ip2, 4);\n}\n\nfunction subnets_overlap($sn1, $sn2) {\n   return ip_compare($sn1, 'overlaps', $sn2);\n}\n\nfunction range_disjoint_from_subnet($range_start, $range_end, $subnet_ip, $subnet_bits) {\n   return ip_compare(array('range', $range_start, $range_end), '!overlaps', array('subnet', $subnet_ip, $subnet_bits));\n}\n\nfunction subnet_in_subnet_ipv6_only($subnet1, $subnet2) {\n   return ip_compare($subnet1, 'included-in', $subnet2, 6);\n}\n\nfunction subnet_overlaps_range($subnet, $range) {\n   return ip_compare($subnet, 'overlaps', $range);\n}\n</pre>\n\n\nAnd some examples of actual code, taken from services_dhcp.php:\n\n<pre>\n(1)\n\nif (!ip_in_subnet($_POST['gateway'], gen_subnet($parent_ip, $parent_sn) . \"/\" . $parent_sn) ...\n\nEQUIVALENT:\n\nif (!ip_compare($_POST['gateway'], 'in', array('subnet', $parent_ip, $parent_sn), 4) ...\n</pre>\n\n\n<pre>\n(2)\n\n$subnet_start = ip2ulong(long2ip32(ip2long($ifcfgip) & gen_subnet_mask_long($ifcfgsn)));\n$subnet_end = ip2ulong(long2ip32(ip2long($ifcfgip) | (~gen_subnet_mask_long($ifcfgsn))));\nif (ip2ulong($_POST['range_from']) > ip2ulong($_POST['range_to'])) {\n    $input_errors[] = gettext(\"The range is invalid (first element higher than second element).\");\n}\nif (ip2ulong($_POST['range_from']) < $subnet_start || ip2ulong($_POST['range_to']) > $subnet_end) {\n    $input_errors[] = gettext(\"The specified range lies outside of the current subnet.\");\n}\n\nEQUIVALENT:\n\nif (!ip_compare(array('range', $_POST['range_from'], $_POST['range_to']), 'included-in', array('subnet', $ifcfgip, $ifcfgsn), 4)) {\n    $input_errors[] = gettext(\"The specified range is mis-ordered or not within the current subnet.\");\n}\n</pre>\n\n\n<pre>\n(3)\n\n$dynsubnet_start = ip2ulong($_POST['range_from']);\n$dynsubnet_end = ip2ulong($_POST['range_to']);\nif (is_array($a_maps)) {\n    foreach ($a_maps as $map) {\n        if (empty($map['ipaddr'])) {\n            continue;\n        }\n        if ((ip2ulong($map['ipaddr']) >= $dynsubnet_start) &&\n            (ip2ulong($map['ipaddr']) <= $dynsubnet_end)) {\n            $input_errors[] = sprintf(gettext(\"The DHCP range cannot overlap any static DHCP mappings.\"));\n            break;\n        }\n    }\n}\n            \nEQUIVALENT:\n\nif (is_array($a_maps)) {\n    foreach ($a_maps as $map) {\n        if (!empty($map['ipaddr']) && ip_compare($map['ipaddr'], 'in', array('range', $_POST['range_from'], $_POST['range_to']), 4) {\n            $input_errors[] = gettext(\"The DHCP range cannot overlap any static DHCP mappings.\");\n            break;\n        }\n    }\n}\n</pre>\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Augustin-FL": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3640", "title": "Redmine # 5112: Captive Portal - Use User Manager as Authentication source", "body": "The captive portal currently only supports local user database, RADIUS or voucher authentication.\r\n\r\nI added support for LDAP Authentication (using the User Manager, exactly like OpenVPN does). ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jskyboo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3562", "title": "Add to NTP support for ACTS ref clock", "body": "Add support for driver 18 ACTS ref clock.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "individual-it": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3551", "title": "UI Tests for PfSense", "body": "This implements UI tests for pfSense\r\nThe tests are based on phpunit and selenium and run on https://travis-ci.org and https://saucelabs.com\r\n\r\n1. travis-ci downloads and boots an image of pfsense in qemu\r\n2. pfsense is updated by `pfSense-upgrade -d -y` & `pfSsh.php playback gitsync master`\r\n3. tests are run against the upgraded pfsense using selenium on saucelabs\r\n\r\nHow to run this tests locally:\r\n\r\n1. download Selenium standalone server jar from http://docs.seleniumhq.org/download/\r\n2. download the chromedriver from: https://sites.google.com/a/chromium.org/chromedriver/ and place it in the same folder as the selenium server\r\n3. start selenium:`java -jar selenium-server-standalone-3.0.1.jar`\r\n4. set the 3 environment variables: SRV_HOST_NAME, SRV_HOST_URL and SRV_HOST_PORT to wherever your dev. environment runs e.g.:\r\n```\r\nexport SRV_HOST_NAME=localhost\r\nexport SRV_HOST_URL=pfsense\r\nexport SRV_HOST_PORT=80\r\n```\r\n5. install php composer:\r\n```\r\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\r\nphp -r \"if (hash_file('SHA384', 'composer-setup.php') === '55d6ead61b29c7bdee5cccfb50076874187bd9f21f65d8991d46ec5cc90518f447387fb9f76ebae1fbbacf329e583e30') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\r\nphp composer-setup.php\r\nphp -r \"unlink('composer-setup.php');\"\r\n```\r\n6. install composer dependencies: `php composer.phar install`\r\n7. run tests: `vendor/bin/phpunit -c tests/phpunit-selenium-autotest.xml`\r\n\r\ntest view on travis: https://travis-ci.org/individual-it/pfsense/builds/202541766\r\ntest view on saucelabs: https://saucelabs.com/beta/tests/b3085d9422cb49bdac8f19d0d3550581\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plumbeo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/3453", "title": "Captive portal: add support for setting traffic quotas", "body": "This patch series add support for traffic quotas to the captive portal.\r\n\r\nPatch 1 (\"always use the RADIUS-provided session timeout value if the option is enabled\") isn't directly related but fixes an issue where the RADIUS attribute could be ignored if there was a shorter hard timeout configured; now when the option is set the RADIUS attribute is always honored.\r\n\r\nPatch 2 (\"add a traffic quota option\") adds an option to set the maximum amount of traffic (sum of downloads and uploads) that a user is allowed to generate during a session. As it happens with the hard timeout setting, the client will still be able to reconnect immediately.\r\n\r\nPatch 3 (\"add option to retrieve the traffic quota value from RADIUS\") allows to get the value of the traffic quota from a RADIUS server. The value obtained is recorded in a new column in the active sessions' database, requiring some minor changes to use the right index to retrieve the radius context in other parts of the code. Since the feature uses a new vendor-specific attribute and I couldn't find a pfSense dictionary, I created a new one (see also the next patch), using Netgate's SMI Network Management Private Enterprise Code as per RFC. I defined 5 attributes, respectively to set upload quota, download quota, total quota, max upload bandwidth and max download bandwidth, even though only the total quota one is used in this patch series (I think the existing code should do the right thing for the bandwidth limits but I didn't test it). I hope this is OK.\r\n\r\nPatch 4 (\"Add RADIUS dictionary with definitions of the new pfSense vendor-specific attributes\") is the new FreeRADIUS compatible dictionary file for pfsense I was talking about earlier. The directory in which I placed it likely isn't the right place, in theory the dictionary, once approved, should be submitted to FreeRADIUS for inclusion and in the meantime added to the FreeRADIUS pkg available in pfSense. Till then tho it will have to be distributed in some other way to allow users who want to use the feature to manually add it to their FreeRADIUS server configuration.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ermal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1254411", "body": "Done.\n\nOn Sat, May 28, 2011 at 3:27 PM, EvgenyY\nreply@reply.github.com\nwrote:\n\n> A drop-down list added to gui allowing to select mediaopts for interfaces.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bsdperimeter/pfsense/pull/1\n\n## \n\nErmal\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1254411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1416494", "body": "I just made comments on this to your merge request.\nOverall it looks fine but some more error handling is  needed.\n\nOn Wed, Jun 22, 2011 at 7:12 AM, EvgenyY\nreply@reply.github.com\nwrote:\n\n> I did not push it as I'd like somebody to review the code of my last commit.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bsdperimeter/pfsense/pull/3\n\n## \n\nErmal\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1416494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1426629", "body": "Please commit directly both commits or a full diff with the error checking.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1426629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557405", "body": "This still needs some work and cannot be pushed like this.\nYou touch some critical paths in this request which i do not like.\nAlso fail script is totally bogus here and should never ever be here unless in a package.\n\nAlso you refer to IPv6 code which is not present!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1560663", "body": "rc.newwanip is the changes that should disappear from your diff since they cause regression.\n\nPlease remove the fail script as well.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1560663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1582745", "body": "Please remove even that ID thing since its wrong.\nIt will break the whole logic the time one entry above gets removed.\n\nAlso i do not understand the dnsRequestIF?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1582745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1658033", "body": "Can you make it display proper names as configured in authentication server configuration and use the right one choosen?\nThis is incomplete in this way.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1658033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/933017", "body": "Can we please stop dumping the route table!\nJust use route -n get if needed!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/944300", "body": "Yeah sorry for that a typo in there makes it do the wrong test!\nWill fix shortly.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/944300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1004872", "body": "Probably people will expect this to work with dyndns targets which is not true!\nJust wondering though.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1004872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/847341", "body": "This does not seem like php code, no?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/847341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/1927817", "body": "What should have been fixed here is not going through the gateways group array but rather through the $a_gatewaygroups return through the previous function call.\n\nThis way you do not miss any dynamic gateway!\nFor me this is a regression or converted bug\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/1927817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2164380", "body": "You change the meaning here.\nIt was \\* and now you make it the interface friendly name!\nWas this accidental?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2164380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2682041", "body": "Really is that necesary?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2682041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816019", "body": "Is the */ at the end intentional?\nIt seesm wrong!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816046", "body": "Also can you unset the classes after not needing them to free memory?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3507655", "body": "You have to put a grep -v grep here to be sure.\nAlso would recommend a wc -l here to do numeric comparison rather than string one.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3507655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3507659", "body": "Please use {} on the variables to be safe on the expanded value.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3507659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "EvgenyY": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1254418", "body": "Thanks.\n------Original Message------\nFrom: ermal\nTo: ey@tm-k.com\nSubject: Re: [pfsense] Speed/duplex select for interfaces (#1)\nSent: May 28, 2011 12:25 PM\n\nDone.\n\nOn Sat, May 28, 2011 at 3:27 PM, EvgenyY\nreply@reply.github.com\nwrote:\n\n> A drop-down list added to gui allowing to select mediaopts for interfaces.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bsdperimeter/pfsense/pull/1\n\n## \n\nErmal\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/bsdperimeter/pfsense/pull/1#issuecomment-1254411\n\nSent from BlackBerry\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1254418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1354838", "body": "Sorry, not sure I understand. You define PPPoE interface on one of physical interfaces (WAN) and you certainly can choose media/mediaopt for WAN. Please clarify what you mean.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1354838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1389881", "body": "Zebble,\njust got time to test this problem and actually I still do not fully understand your steps. Are you using pfSense 2.0? Because in 2.0 physical WAN and logical PPPoE interfaces have different pages to configure.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1389881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1419976", "body": "eri>Why create this temporary variables...\nI reused existing code. Now some removed.\neri>No error checking, please see below. I've done some error checking in Intermediate CA creation thread, if it is ok, I'll do the same in other place of cert manager.\neri>Can you create functions for kind of API get_ca_list() ....?\nwhat for? anyway I have to load every value into <select>...\n\nError checking implemented. Please take a look at https://github.com/EvgenyY/pfsense/commit/45a5628ca4978d91d36cd563e15fa4a1c8e9029e\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1419976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1429131", "body": "committed as https://github.com/bsdperimeter/pfsense/commit/95c8cf48f9bd72da5371aa01a03a070885411dbf\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1429131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "wagonza": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305121", "body": "For everybody's info - I logged a feature request on Redmine > http://redmine.pfsense.org/issues/1578\n@TheBlueMatt - if you could upload your patch to that issue so it doesn't get 'lost' somewhere down the line.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/999972", "body": "Have a look at 4b0e8c916b9dac14ee5131725ae503eb15369084 - i removed the need for the extra function and touch of a file.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/999972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "billm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305291", "body": "Updated ticket info at http://redmine.pfsense.org/issues/1241 ticket http://redmine.pfsense.org/issues/1578 was closed as a dupe.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "TheBlueMatt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305389", "body": "Updated to use filter_configure_sync() and rebased.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305390", "body": "Should I also remove fail script and fork it for my own usage, or just leave it?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1305390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557543", "body": "re: critical paths: which parts of the diff, exactly, are you referencing here?\n\nre: fail script: absolutely, that too is just something I need for my own purposes, that shouldn't ever go out.\n\n~~re: IPv6: Sorry, the IPv6 commit is just something I need for some odd reason (IP6 tunnel's states are causing IP6 tunneled traffic to have an incorrect source IP when going out after my IP changes due to PPPoE reset) was meaning to put in a bug report on that, but haven't gotten around to it.  Its in reference to IPv6 tunnel passthrough, not full pfsense IPv6 handling.~~ Appears to be http://redmine.pfsense.org/issues/1629 hadn't looked any further than simply writing a commit when I saw the bug...I need to pay more attention\n\nI hadn't bothered to redo the commit into one that is proper for upstream as I was told it wouldn't be merged till after 2.0 and stuff might very well change before then.  If you want a proper diff that is OK for upstream, I whip one up really quick.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557590", "body": "Oh, sorry didn't realize that,\n~~I need to quickly file some bug reports I hadn't gotten around to then...~~\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557770", "body": "@ermal Ok pushed an (IMO) acceptable commit.  What were you specifically referring to with the critical paths modifications?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1561882", "body": "Fail script already had been removed, I went ahead and reset the rc.newwanip.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1561882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1582865", "body": "ID is necessary as host is no longer unique for custom records, and one might have multiple DDNS records to one URL (though unlikely, it shouldn't break stuff for no reason).  Its deliberately coded to avoid breaking anything when an entry gets removed, its not smart, but it could easily be and its not a big deal to retrigger a DDNS update.\n\nThe request if is to request the URL from a different interface.  eg I have a server on the dmz interface of pfsense and need to call a URL on it, however, I need to use the WAN's IP Address.  Thus, I put the DDNS on the WAN (so that it gets updated when WAN IP changes) and then point the request IF to the dmz.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1582865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Zebble": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1353977", "body": "The ability to choose media/mediaopt does not show up for the network port connected to a PPPoE WAN interface.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1353977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1356236", "body": "Thanks EvgenyY.  After some additional testing, hopefully I can clarify...\nWhen configuring the WAN interface, the \"Advanced\" button for Speed/Duplex shows up.  After it's saved as PPPoE, it disappears and the only way to allow setting it again is to change it to a non-PPPoE connection, make the change, and then change it back to PPPoE.  However, these changes actually don't seem to make a difference as they don't get applied.  I have to manually apply them using the ifconfig command from the command line, and adding it to a script in /usr/local/etc/rc.d.\nI haven't testing with anything other than PPPoE, as it's my only internet connection.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1356236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sullrich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1363112", "body": "We will bring this in right after 2.0 goes out the door which is going to be relatively soon.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1363112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557558", "body": "2.0 has been branched so we are accepting patches again.  If you would like to get this in go ahead and please fixup Ermals needs and then we will pull it in\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1557558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1626978", "body": "It looks like a lot of gettext items where reversed.  We need to get that resolved and then work against the master branch and not 2.0 then we wil accept.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1626978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ninja76": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1627139", "body": "I saw that and then I closed it.  I am running 2.0 and pulled from the master branch.  \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1627139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1632039", "body": "I added checking to only add and show ldap if an ldap server is already configured.  Also I didn't do any ldap validation since I assume that would have been done when the ldap server was initially added as a system auth server. I modded upgrade_config.inc because I saw that system was a hard coded selection.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1632039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1663926", "body": "the patch will now display and can be used with all configured ldap auth servers.  And the saved user_source has the correct html \"selected\" tag\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/issues/comments/1663926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "robd003": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/585422", "body": "Congrats guys! This is awesome news.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/585422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/591790", "body": "How's the AMD64 build coming along? I'd love to test and report any bugs I find!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/591790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mikesamo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/587031", "body": "nice! :)\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/587031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/644544", "body": "it should be\n\n@@ -559,8 +559,10 @@ class XML_RPC_Base {\n\n```\n {\n\n     include_once 'PEAR.inc';\n\n     if (is_object(@$this)) {\n```\n- ```\n   log_error(get_class($this) . ': ' . $msg . \" {$code}\");\n  \n       return PEAR::raiseError(get_class($this) . ': ' . $msg, $code);\n  \n   } else {\n  ```\n- ```\n   log_error(\"XML_RPC: \" . ': ' . $msg . \" {$code}\");\n  \n       return PEAR::raiseError('XML_RPC: ' . $msg, $code);\n  \n   }\n  ```\n  \n   }\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/644544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "marcelloc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/587435", "body": "Nice work!! :)\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/587435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Podilarius": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/736280", "body": "Missing ; on line 57. on commit c377a90.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/736280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/738152", "body": "Ain't a thang. Just didn't know best way at the time of the comment. This newb has only submitted code once before through scott.\nThanks for all your hard work.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/738152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1075329", "body": "This broke my system ... The function \"pfSense_interface_listget();\" is now where to be found. I manually edited my files back to the original and they are still not working. I am hoping I typed something wrong ... \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1075329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "smos": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/736999", "body": "Oops, sorry. My bad.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/736999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933089", "body": "Because the route command can hang. Unless through some form of magic it's been fixed by the faries in freebsd 8 or 9.\n\nIt was a current issue on 1.2.3 with freebsd 7.\n\nIt blocked all filter reloads from that point on. \n\ntyped on a tiny touchscreen, why exactly?\n\nErmal Lu\u00e7i reply@reply.github.comschreef:\n\n> Can we please stop dumping the route table!\n> Just use route -n get if needed!\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bsdperimeter/pfsense/commit/1716682b1d1a6efa6e97bb0874e89e6132c55dfd#commitcomment-933017\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/990194", "body": "I'm sorry but this change is not acceptible. The SRCIP is required for the functionality.\nIt is required to specify the source for MultiWAN and IPsec tunnels.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/990194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "CinoNY": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/892979", "body": "not sure if you noticed or not, but status_graph.php hasn't worked 100% since your first set of changes i believe. Usually it would display the IP of the host with traffic measurement to the right, but it doesn't. It would with the original status_graph.php from an iso.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/892979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/943818", "body": "with this change, i'm unable to log into web interface. doesn't give an error, just refreshes the login page. removing the change allows me to login. I haven't had a chance to reboot my box to see if that makes a difference. \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/943818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/945086", "body": "its fix now, thank you!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/945086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cbuechler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/933593", "body": "I don't think that's an issue anymore, IIRC Ermal changed some other things over to not do that and it hasn't been an issue. We really can't dump the entire routing table, hosts with full BGP feeds will hang up for several minutes while doing so. Granted, they generally aren't running reflection, so it doesn't matter as much here, but still something that needs to be stayed away from. Ermal's done a lot of work taking out full route table dumps to make things work reasonably on hosts with full BGP routing tables, need to keep that working. \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "efonne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/933594", "body": "It is stored for access to it from further calls to this function so that it is only done once during the filter reload.  This revision also removes the irrelevant lines from the output during that one time instead of checking for it later so it has less work to do the next time it is called.\n\nIt is probably faster to do this than actually calling up an external command to check the routing table every time it has to check something (which could be many times in a large rule list).  If there is (or will be) some way to easily work off only the config, I wouldn't be against changing it to do so, though.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933607", "body": "OK, so that's what was being referred to before (we kind of posted at the same time, so I didn't see your message before clicking to post).  Unless it already exists or someone else wants to do it, I'll probably start writing a function to pull in all the information from the config and other sources that this function needs to work properly.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/933607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/943903", "body": "Confirmed and rebooting does not affect it.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/943903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1013195", "body": "Just looking at it again, it looks like the problem in the first place was that someone accidentally used += instead of .=\n\nWhat it was changed to looks cleaner anyway, though.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1013195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/483461", "body": "It would be appropriate to just leave this in $config['system']['disablebeep'] even if it is moved to the notifications tab.  Also, this commit is based on an older version of this change.  2 or 3 commits have made changes to it since the version from your previous pull request went in; among those changes, the setup_beep function was removed.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/483461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Joecowboy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/comments/981530", "body": "Please look at my last commit to fix the issue of the array_push($reqdfields, \"ssid\") missing the ; at the end of the line and yes I tested this code but when I added it to the commit over looked it.  SOOOOO PLEASE pull the fix.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/981530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1012008", "body": "Just FYI you wrote over the fix for mode error with this fix do to white space and explode function.  It throws an error when done the old way.  :( \nStarting at line 564:\n        $reqdfields = array(\"mode\");\n        if($_POST['mode'] == 'hostap') \n            array_push($reqdfields, \"ssid\");\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1012008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1012335", "body": "Very nice, glad you fixed that again.  For some reason the white space and explode function did not get along well with setting Mode type and would throw error just like you didn't set it.  \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1012335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066478", "body": "Fatal error: Call to undefined function pfSense_interface_listget() in /etc/inc/interfaces.inc on line 66\n\nI was wondering if anybody else is getting this error now?  Not sure where this function is located to make sure there is a require_once to include it?  \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066756", "body": "That's kewl.  Good to know development is coming along nicely.  Can't wait to try out the new module.  Keep up the great work!!!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/comments/1066756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "yakatz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/483469", "body": "It seems like if it is on the notifications page, it should be saved with the notification settings in the config...\nI will look at the other changes or someone else can take care of it.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/483469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "phil-davis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/556137", "body": "The functional change is really just this line and its matching \"}\" - the others are just tabbed in 1 more level.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/556137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ermalluci": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/633102", "body": "Hoepfully this was tested :) and not an April fool joke!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/633102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "bcyrill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2249494", "body": "You should not use variables in a gettext call as the variable is resolved first. Instead use sprintf() to format the string e.g. sprintf(gettext(\"%d entries in this table.\"), $count). Also I find it quite strange that the link is (was) on the 'all' keyword and not on 'Delete'.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2249494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2258586", "body": "The problem with this solution is that the order of the gettext string parts and the '$count' variable is fixed, which may not work with all languages, with sprintf the translator is free to change the word order. In fact, ideally the whole 'Delete all %d entries this table' should be contained in a single gettext. \n\nThere is a good introduction in how to 'Creating localizable web applications' in the Mozilla developer network.\nhttps://developer.mozilla.org/en-US/docs/Web_Localizability/Creating_localizable_web_applications\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2258586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2267880", "body": "Sure the original version is not ideal either and it was just meant as a suggestion how to improve it as it makes it easier and more flexible for a translator without having to look at the code.\n\n```\necho '<p/>' . sprintf(gettext('<a href=\"%1$s\">Delete all</a> <b>%2$d</b> entries in this table.'), 'diag_tables.php?deleteall=true&amp;type='.htmlspecialchars($tablename), $count);\n```\n\nOr one could even use ngettext to also handle the plural forms.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2267880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2364001", "body": "Even though the $tablesname variable will only have the values \"bogons\" or \"bogonsv6\" in this case, I still suggest using escapeshellarg for all user input shell arguments. Also instead of directly concatenating you might want to store the output in a meaningful variable this would make the code more readable.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2364001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2521950", "body": "Getting the MAC from an IP already exists with 'arp_get_mac_by_ip' in 'util.inc'.  Or even in the pfSense php module with 'pfSense_ip_to_mac'.\n\nEdit: Just noticed that that code has been taken from 'services_dhcp_edit.php'.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2521950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2634141", "body": "Spelling mistake\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2634141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2634169", "body": "One more.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2634169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2916705", "body": "\"\\n\\script => \"\\n<script, but is it really a good idea to make the output nicer in exchange for code readability?\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2916705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3072323", "body": "I would use an additional condition (source being an IPv6 address) instead of just combining both strings and relying on the fact that one of them is empty. Same applies below.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3072323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "NOYB": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2259863", "body": "Original is not ideal either, and is split into 3 gettext calls \u201cDelete\u201d, \u201call\u201d, and \u201centries in this table.\u201d   So those word orders cannot be change either.  This commit is not aimed at changing that, and keeps those same 3 gettext calls, adding only a table entries count with html bold tag.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2259863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2268963", "body": "I did look into sprintf and also ngettext for plural forms.  The full strings are not currently found by the translator though so the submitted string is returned instead.  For now I'd just stay with the existing translated substrings, they should be fine for this, and if someone wants a project to go through and update translations that would be good.\n\nThanks for your input.  I've learned a lot.  Though not as much as there is still to go.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2268963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "phildd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2502296", "body": "Note: $failovergroup (returned as a boolean) was not used anywhere.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2502296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2502309", "body": "This if test combines the previous \"if\" and \"elseif\" (which repeated the same code in each), plus adds the case when $int is passed in empty. When $int is empty, every dyndns interface will now be checked, so the cron job /etc/rc.dyndns.update will check all dyndns interfaces each day.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2502309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3603248", "body": "This line is part of pull request 499 - not sure what to do here, if 499 is accepted then this line will be in the main branch and the rest of this applies cleanly on top.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3603248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mdima": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816067", "body": "Ops, you're right! Since this change requires a modified qstats file (which requires a recompile of qstats.c), I uncommented that line just before committing. \nI will repost the file... thanks for checking!! \n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816327", "body": "Hi, well... about the white-space, on my editor the \"End Of Line\" character is \"Unix-style\" (only LF)... I don't know if the GitHub Windows Application converts it to CR+LF. I will repost it from the website, or I don't know if I fully understand your exception... \n\nAbout unsetting the classes, yes I added and tested a \"unset($child)\" at the end of the statsQueues function. \n\nThanks for checking and explaining!!\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/2816327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "miken32": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3024917", "body": "It's worth noting the default return type is SQLITE_BOTH so if there is something still using numeric array indices, it won't break.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3024917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xnk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3072517", "body": "I see your point. In this case we know that gen_subnet and gen_subnetv6 can never both return valid data, but maybe it would have been nicer to implement a gen_subnetv4 which does what my patched version does, and a generic gen_subnet function that return either a v4 or a v6 address?\n\nA similar problem is in the filters.inc file where I made a quick'n'dirty check for the presence of a ':' in the address to see whether it's a v4 or v6 address. I couldn't find a helper function that would be able to tell me the type of address...\n\n/wj\n\nOn Feb 19, 2013, at 3:21 PM, bcyrill notifications@github.com wrote:\n\n> In usr/local/www/firewall_nat_out_edit.php:\n> \n> > @@ -209,7 +209,7 @@\n> >     } else if(is_alias($_POST['source'])) {\n> >         $osn = $_POST['source'];\n> >     } else {\n> > -       $osn = gen_subnet($_POST['source'], $_POST['source_subnet']) . \"/\" . $_POST['source_subnet'];\n> > -       $osn = gen_subnet($_POST['source'], $_POST['source_subnet']) . gen_subnetv6($_POST['source'], $_POST['source_subnet']) . \"/\" . $_POST['source_subnet'];\n> >   I would use an additional condition (source being an IPv6 address) instead of just combining both strings and relying on the fact that one of them is empty.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/pfsense/pfsense/pulls/comments/3072517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}