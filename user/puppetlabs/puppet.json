{"_default": {"1": {"branan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/2edca5f2a043fbf7c505da6dd3f8de4b54d640b2", "message": "Merge remote-tracking branch 'origin/5.3.x'"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f224e8b849ecd569ebcf11d81f1fdb292b36e95", "message": "Merge remote-tracking branch 'origin/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/ab35a0c89226476e6bfa7698c096fcdeb8af1f8f", "message": "Merge pull request #6548 from joshcooper/ticket/4.10.x/webrick-part-deux\n\n(PUP-8297) Ensure we call SSLSocket#accept once"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6485", "title": "(maint) Allow numeric hostnames in hiera_in_templates test", "body": "This test creates a hash of hostname -> directory, and stores it in\r\nYAML for hiera to query. If the hostname happens to be purely numeric,\r\nthe key in the hash will be a number, rather than a string. Facter\r\nalways returns the `hostname` fact as a string. This causes the hash\r\nlookup in the puppet code to fail, and the manifest to fail to\r\ncompile.\r\n\r\nThe fix is to prepend a bit of non-numeric junk to the hostname, so\r\nthat the key in hiera is always string.\r\n  ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hlindberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/7d6318c212c595fa05662e08fbc474af2ea95663", "message": "Merge pull request #6542 from hlindberg/PUP-8343_let-rich-data-params-through-to-resources\n\n(PUP-8343) let rich data params through to resources"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshcooper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/70e54bbd921a81d0e392e0d0aa646c181c826473", "message": "Merge pull request #6448 from jtappa/PUP-7397-filebucket-use-replace_file-jtappa\n\n(PUP-7397) Atomically update filebucket contents files"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/f6ad87a097d8bc84f11f3c64855a4157934a9b0b", "message": "(PUP-8297) Ensure we call SSLSocket#accept once\n\nPreviously, our webrick code set the webrick option SSLStartImmediately to true\nand then called `SSLServer#start_immediately = false`, in that order. Ruby\nversions 2.3.6/2.4.3 and up will skip the call to SSLSocket#accept if the\nSSLStartImmediately option is false. However, older versions will skip the call\nif the SSLServer `@start_immediately` instance variable is false[1].\n\nPrior to commit a358d5ec0, newer ruby versions caused an error because\nSSLSocket#accept was called twice on the same socket, once by webrick and again\nby us.\n\nCommit a358d5ec0 fixed the newer ruby case, but regressed on the older ruby\ncase, since SSLSocket#accept was never being called.\n\nThis commit eliminates the call to `start_immediately = false`, and sets the\nconfiguration option to false. This works as far back as ruby 1.9.3, while\npreserving the intent of the original issue[2].\n\nPaired-with: Jacob Helwig <jacob@puppet.com>\n\n[1] https://github.com/ruby/ruby/commit/2e728d51e70\n[1] https://projects.puppetlabs.com/issues/2637"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8d66a8bd4776ff2976cf83f3e1e2b8e7a7e895b3", "message": "(maint) Don't stub out setup_logger and setup_ssl methods\n\nStop stubbing setup_logger and setup_ssl in the main example group so that we\nfull exercise the code we're trying to test. This commit moves the cert related\nstubs from one of the nested example groups to the main one."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/e451a274aad622f6bbb101b2a3b9a6e45ac20888", "message": "Merge pull request #6526 from gguillotte/DOCUMENT-777\n\n(docs)(DOCUMENT-777)(PUP-8211) Clarify managehome."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c1186b85ffb09c3ee62d8f077cb086e5a9162aaf", "message": "Merge pull request #6534 from pcarlisle/fix-crontab-spec\n\n(maint) Make crontab provider suitable in specs"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f160d70023e6310bbecf1e6d327f8f897f4fba4", "message": "Merge pull request #6543 from ploubser/PUP-8227_fix_test\n\n(PUP-8227) Update transaction tests"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790", "body": "rismoney can you change that to:\n\n<pre>\nerr = Puppet::Util::Windows::Error.new(\"Failed to get volume information\")\nputs \"LastError=#{err.code}\"\nraise err\n</pre>\n\n\nIt may be that that particular last error code is something we can ignore...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701", "body": "Ah, yes. I had originally added this when trying to fix this bug a different way. But after changing the implementation I forgot to remove the test. I'll fix that. \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598", "body": "After more research, both cygwin and vim strictly look at the FILE_PERSISTENT_ACLS flag when determining whether to get/set ACLs, ignoring the fstype. So while it's possible FILE_PERSISTENT_ACLS could be set while fstype is not NTFS, just checking the flag seems to be the right thing to do.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jtappa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c8213d117a17a2482d2c0f0b2813b256b8c366f3", "message": "Merge pull request #6522 from ericldelaney/task/5.3.x/PUP-8321/update_deprecation_warning_translations\n\n(PUP-8321) add translations for deprecation_warning messages"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0a70205a2c9e5c3854a2d961f4547f4f71f9ad08", "message": "Merge pull request #6530 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_4\n\n(PUP-8347) usr error_location for auth config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/61a9a1c2c14ab1f0917276a8f3d1e0674859d491", "message": "Merge pull request #6535 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_5\n\n(PUP-8347) use error_location for network device config file"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/97681bfab11cff145cf675d0b829f8f228e2303e", "message": "Merge pull request #6544 from melissa/maint/5.3.x/merge-4.10.x\n\nMaint/5.3.x/merge 4.10.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8430ac9b47cbe7b32557dc9e48143f75088725ed", "message": "Merge pull request #6524 from ericldelaney/task/5.3.x/PUP-8340/catalog_alias_to_use_error_location\n\n(PUP-8340) convert alias to use error_location"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "melissa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/378eb76d603685e870fd167bde3feddd4b50eecc", "message": "Merge pull request #6529 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_3\n\n(PUP-8347) add error_location to config file errors."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/3c09d97c69b965ea988bb45a89f8b2f2745e59bf", "message": "Merge pull request #6528 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_2\n\n(PUP-8347) use error_location in file_server config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/41c3b23553f353dc26f82c1e8fe8c5daea779444", "message": "Merge pull request #6540 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_6\n\n(PUP-8347) use error_location in Puppet::Pops::Issues"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/6edca29b9dacb688e9c7f2723f35ee4a4748af20", "message": "Merge remote-tracking branch 'upstream/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c40d1f25e0c6f708774f9f708e8349bd56093bc9", "message": "Merge pull request #6433 from suckatrash/PUP-7968\n\n(PUP-7968) [#puppethack] Add a default to present for the ensure param"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6545", "title": "(PUP-8268) aio setup should use new install method", "body": "This commit updates the aio setup steps to install puppet and\r\npuppetserver with new methods added to beaker. These install the\r\npackages based on data gathered from a yaml file, rather than trying to\r\nfigure out what the path to the artifact or repo file is.\r\n\r\nThis commit does not attempt to make the same change for the EC2 install\r\n(as it's dependent on external infrastructure and the new install\r\nmethods rely on internal-only infrastructure). Nor does this commit\r\nattempt to update the puppetserver nightly install. Nightlies is going\r\nto change soon, so it is not worth updating those methods currently.\r\n\r\nThis commit also updates beaker and beaker-hostgenerator versions. This\r\nchange depends on code available in these newer releases. It also adds\r\nbeaker-puppet to the Gemfile, as we should be explicit about this\r\ndependency since we are using methods that are specific to\r\nbeaker-puppet.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6477", "title": "(PUP-8268) Use new install methods", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ericldelaney": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/d012b2ea9b4d39d61d7b6510526914d3183f858c", "message": "(PUP-8347) usr error_location for auth config parsing\n\nUse the error_location() method when parsing network auth config files\nChanged invalid entry error message"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0753bfeae7259876c98a5ac0468a8c275962c9dc", "message": "(PUP-8347) use error_location for file_server config\n\nUse error_location() in the file_server config file parser code\nUpdated invalid entry string"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/703a099700635eed9cce962c3a84b63eb1b4bb63", "message": "(PUP-8347) use error_location for network device config file\n\nUse the error_location() to tell the error location when processing\nthe network device config file\nRefactored the code to be more understandable\nChanged invalid entry error string"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6549", "title": "(maint) update error_location() to prefer nil and documentation", "body": "Updated error_location() to be called with nil when something is not known\r\nbut understand empty string too. Along with documentation updates", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6527", "title": "(PUP-8347) add use error_location for parser/scope.rb", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6349", "title": "(PUP-8080) Add tests for i18n, puppet, and modules", "body": "This is an initial set of tests for testing i18n and modules\r\nThe puppet_agent_with_module.rb test fails based on the current agent\r\nAdded puppet resource translation test\r\nAdded puppet application/face translation test", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thallgren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/60f5a5137863625db6f178c4e8e276d08b4cd273", "message": "Merge pull request #6533 from nicklewis/PUP-8357-correctly-match-task-files\n\n(PUP-8357) Correctly match files for tasks"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6118", "title": "(PUP-7834) Replace all calls to YAML.load with YAML.safe_load", "body": "This commit replaces all calls to the unsafe `YAML.load` method with\r\ncalls to `YAML.safe_load` to gain control over exactly what classes that\r\nare permitted to create instances during the load.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicklewis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/1c262644f8a91b1281466c996b941e3c6e127124", "message": "(PUP-8357) Correctly match files for tasks\n\nPreviously, the existing_paths method for the FileBased loader was using\nnaive string matching to determine which files were associated with a\nparticular task. This resulted in the wrong set of files being found for\na task, in the case where the name of one task was a prefix of the name\nof an adjacent task. For example, task `foo` would match both `foo.py`\nand `foobar.py`. The desired behavior is that filenames need to match\nall the way up to the file extension, in order to be associated with a\nparticular task.\n\nThis commit changes the existing_paths method to compare basenames\nexactly, excluding file extensions."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937", "body": "Hi,\n\nWe don't use GitHub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks,\nNick Lewis\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jhelwig": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/9d49cd92cf3e0f15613a0bf46e0ebb576ae36d03", "message": "Merge pull request #6510 from kris-bosland/fix/master/pup-8342\n\n(PUP-8342) Update report schema to include transaction_completed"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178", "body": "As noted in [the Redmine ticket](https://projects.puppetlabs.com/issues/8677), vcsrepo shouldn't have been merged into core, and has since been removed.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043", "body": "Haven't really looked at the changes yet, but the tests and the implementation should be squashed into one commit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492", "body": "This isn't quite ready.  While it fixes the problem for that specific ordering, there is still cache_class leakage.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201", "body": "Lost a few necessary changes in the original commit, which are now included in the updated version.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628", "body": "So, I'm a little confused as to what this is actually testing.  It looks like it would belong in the type instead of the provider, if anywhere, though I'm not sure it's actually testing anything specific to the package type, or msi provider.  Looks like it's testing the generic behavior of types (that parameters/properties set with new are available from the resource via the hash accessor method).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206", "body": "Stale debugging statement?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152", "body": "There's introduced trailing whitespace on this line.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159", "body": "More trailing whitespace introduced here.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161", "body": "It's not always <= 500.  The number is configurable by the end-user, and it isn't the same on all distributions.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168", "body": "It may be better to state that it's an artifact of the internal implementation of Puppet rather than making any claims as to its permanence since there are not definite plans to do anything with/to it, even though there are some objections to its existence.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192", "body": "It's a system level configuration, and I'm pretty sure the providers just let the system tools take care of it.  On Linux (Ubuntu) it's in `/etc/login.defs` defined by `SYS_UID_MIN` and `SYS_UID_MAX`.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593", "body": "Talking things through with Josh, it doesn't seem like this check is actually sufficient to limit to filesystems that will behave properly with setting the ACLs.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541", "body": "Talking with Josh, it sounds like this comment is a left-over from a previous version of this test, and should go away.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442", "body": "So, what's the reason for switching `PKG_PATH` to a string from the original symbol?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446", "body": "I'd be really good to have the double chomp explained in the commit message (and even better if there was a comment added explaining it in the code).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "justinstoller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6547", "title": "(PUP-8363) Do not use system_uptime fact on windows", "body": "Previously, we used the system_uptime fact as a form of randomness when\r\ntesting that topscope variables (ie, return values from pure puppet functions\r\nthat do not enter ruby land) were refreshed when environment_timeout was\r\nunlimited.\r\n\r\nUnfortunately, facter's system_uptime may not return a valid value on\r\nWindows (see FACT-1504 for details).\r\n\r\nTo avoid using Ruby on the server, while still having a constantly\r\nchanging variable, we continue to use the agents under test to provide a\r\nvalue (fact) but now move from using system_uptime to an external fact.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gguillotte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6539", "title": "(docs) Update README links.", "body": "Update links to the docs site in the README, and point relative\r\ndeveloper docs links to absolute GitHub URLs in order to resolve issues\r\nwith YARD-generated docs and the Puppet docs site.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pcarlisle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6536", "title": "(maint) Pass through text domain when loading translations", "body": "If this isn't passed through the tests can fail sometimes depending on\r\nthe order in which they're run. I don't think this is ever a problem in\r\nproduction but adding an argument with a default makes it a little more\r\nrobust.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsane": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6532", "title": "(PUP-8356) Base fips specific behaviors without using facts", "body": "We need to adjust some settings based on whether fips mode is enabled\r\nor not for FIPS compliance. Till now the later was done using a fact (PUP-8141).\r\nHowever that created a dependency in puppetserver which cannot load facts in certain configurations like dev testing and running from sources.\r\nThis change implements fips mode detection using a local method instead of facter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6508", "title": "(PUP-4963) Puppet module build fails on FIPS enabled system", "body": "We now disallow the module tool operations of install, uninstall, and upgrade\r\nbesides building to be able to provide an appropriate error message instead\r\nof the operations getting aborted due to FIPS preventing use of any\r\nunapproved algorithms/operations like MD5.\r\nModule checksums use MD5 and cannot be changed easily without requiring a\r\nlarge number of design changes throughout.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5855", "title": "(PUP-7519) Enabling rubocop securitycop scans", "body": "Background: Rubocop scans were not running as the various cops in .rubocop.yml were not kept uptodate with the latest definitions. This will enable only SecurityCop/YAMLLoad as a start to revive the scans in an effort to flag any inadvertent usages.  Additional security or other cop rules can/would be added in future.   \r\nRubocop do not have support for flagging YAML.load_file which would have been desirable. Likewise it is not necessary to mark the known instance of Yaml.load_file in Puppet::Util::Yaml to be ignored.\r\n\r\nNote that there are a couple of other YAML.load instances elsewhere so this may generate violations. If that is not desired this PR be merged after all these have been resolved/changed appropriately. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wiccan2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6525", "title": "(PUP-3802) Fix yaourt on Arch linux.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Iristyle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6513", "title": "(PUP-8337) Change Windows symlink? check behavior", "body": " - Previously, any file that returned FILE_ATTRIBUTE_REPARSE_POINT\r\n   in a call to GetFileAttributes would be considered a \"symlink\" for\r\n   Puppets purpose. This is relevant specifically to file resources.\r\n\r\n   However, Puppet cannot resolve the destination location for many of\r\n   the reparse point types, namely the following (some of which may\r\n   not actually resolve to a different path):\r\n\r\n   IO_REPARSE_TAG_HSM\r\n   IO_REPARSE_TAG_HSM2\r\n   IO_REPARSE_TAG_SIS\r\n   IO_REPARSE_TAG_WIM\r\n   IO_REPARSE_TAG_CSV\r\n   IO_REPARSE_TAG_DFS\r\n   IO_REPARSE_TAG_DFSR\r\n   IO_REPARSE_TAG_DEDUP\r\n   IO_REPARSE_TAG_NFS\r\n\r\n - Modify the behavior of symlink? such that Puppet only considers\r\n   reparse points IO_REPARSE_TAG_MOUNT_POINT, IO_REPARSE_TAG_SYMLINK\r\n   as resolvable symlinks.\r\n\r\n   The others will continue to be treated as regular files /\r\n   directories.\r\n\r\n - Existing symlink? behavior has been factored out to a reparse_point?\r\n   method responsible for only validating the file attribute contains\r\n   the reparse attribute.\r\n\r\n - This introduces some additional work once a path is determined as a\r\n   reparse point, but this should not happen regularly as reparse\r\n   points are typically fairly rare on Windows systems.\r\n\r\n - Change the behavior of exist? to function similarly to symlink? in that\r\n   only understandable symlinks will be followed. exist? will return true\r\n   for reparse points that are not mount or symlink reparse points", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6298", "title": "(PUP-7019) Map Windows codepages to Ruby encodings", "body": " - INCOMPLETE\r\n   includes some WIP .rb files that can be trashed once they're fully\r\n   integrated into the existing Puppet code in this PR\r\n\r\n - Make tests more dynamically understand how Windows codepages map to\r\n   Ruby encodings.\r\n\r\n   Ruby carries a bucket of different Encodings, some of which appear\r\n   to be pretty platform specific.\r\n\r\n   This can impact some tests.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5988", "title": "(WIP) ci:test:git for SLES11", "body": "", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5971", "title": "(PUP-7648) Fix ci:test:git pre-suite on OSX 10.11", "body": "- A number of problems prevented ci:test:git from executing properly\r\n   on OSX 10.11:\r\n\r\n   * When performing a `gem install bundler`, system Ruby places the\r\n     binstub in /usr/local/bin. However, the SSH environment is not\r\n     configured with /usr/local/bin in PATH. There are multiple\r\n     solutions to this problem:\r\n\r\n      - Add /usr/local/bin to ~/.ssh/environment in Beaker - covered\r\n        in BKR-1139. This allows any additional binaries that might\r\n        be installed (homebrew, git, other Ruby gems with binstubs\r\n        such as puppet and facter) to be available. This is the most\r\n        effective universal solution but requires a Beaker release.\r\n\r\n        A workaround is in place to do this in 000_EnvSetup of the\r\n        pre-suite until Beaker changes land.\r\n\r\n      - Add to the host[:host_env] hash of environment variables via\r\n        a Beaker options file, so that PATH is augmented with\r\n        /usr/local/bin. Unfortunately this requires setting additional\r\n        hosts / options files on disk prior to any code running in\r\n        the Puppet pre-suite, to be picked up during Beakers host\r\n        initialization and injected into ~/.ssh/environment correctly.\r\n        Otherwise, the PATH would have to be manipulated in each new\r\n        SSH command. Due to beaker-hostgenerator commonly being used\r\n        to execute, its simpler to avoid this option.\r\n\r\n        Note that beaker-hostgenerator should also allow arbitrary\r\n        settings injection using {} syntax, but this doesn't appear to\r\n        work properly with ci:test:git and it's uncertain if it\r\n        properly handles the :host_env hash when writing to YAML.\r\n\r\n   * When performing `bundle install`, ensure Ruby is configured to\r\n     use OSX platform specific gems where possible. This impacts\r\n     the inclusion of CFPropertyList.\r\n\r\n   * Due to OSX SIP (System Integrity Protection) /usr/bin is not\r\n     writable and /usr/local/bin should be used instead. Override\r\n     Beakers default puppetbindir setting to /usr/local/bin and use\r\n     that as the --binstub directory when installing the Puppet source\r\n     with Bundler. binstubs should continue to use /usr/bin/ruby as\r\n     the interpreter.\r\n\r\n   * Similarly, when calling install.rb, provide --bindir as the same\r\n     /usr/local/bin as the system Ruby binstub dir is not otherwise\r\n     writable. Beaker helpers will fully qualify the path to puppet\r\n     using the puppetbindir setting already.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5780", "title": "(DO NOT MERGE)(maint) Set BUNDLE_SPECIFIC_PLATFORM=true", "body": "**This might be one to outright close, but note that without it we're not using platform-specific Facter which depends on CFPropertyList**\r\n\r\n - Bundler, under some circumstances, may not install platform-specific\r\n   gems.  For instance, using a bundle install of the Puppet Gemfile\r\n   will not install the universal-darwin version of Facter.\r\n\r\n - Set the environment variable BUNDLE_SPECIFIC_PLATFORM also\r\n   had to be set to properly use platform-specific versions of any\r\n   gems that have been referenced.  This will be the default behavior\r\n   in Bundler 2, and given platform-specific versions of Facter are\r\n   shipped - should always be the case for Puppet. Without setting\r\n   this Bundler will raise a warning during installation.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gdubicki": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6476", "title": "(PUP-4678) Allow yumrepo priority below the default", "body": "The default priority is 99 so limiting it with puppet to\r\n99 too made it impossible to add a repository with a lower\r\npriority to protect system packages. This change removes\r\nthis limitation.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucywyman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6475", "title": "(PUP-8298) Add invalid task error", "body": "Adds invalid task name issue type so that when an invalid task name is called from a plan there's an appropriate error type and message for it.  Relates to BOLT-261.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ekohl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6438", "title": "[WIP] PUP-7474: Always generate the subjectAltNames per RFC2818", "body": "This ensures the there is always a subjectAltNames in a CSR with the common name. The allow_dns_alt_names option is changed to ignore the CN matching the subjectAltNames.\n\nCurrently it's untested hence the WIP flag.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharpie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6434", "title": "(PUP 7779) [#puppethack] Resurrect puppet facts upload", "body": "This changeset reverts pieces of [PUP-2560](https://tickets.puppetlabs.com/browse/PUP-2560) in order to re-add the ability to upload facts outside of a catalog request. Specifically, this patch re-adds the following functionality:\r\n\r\n  - The `puppet facts upload` command.\r\n\r\n  - The Puppet::Node::Facts::Rest terminus for saving facts to Puppet Servers.\r\n\r\n  - The ability to handle requests for the `/puppet/v3/facts` endpoint.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203", "body": "This check will never get exercised if `current_path` contains no directories as the `next` statements on lines 140 and 141 will keep skipping to the next iteration.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "mwaggett": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6414", "title": "(maint) Ensure projects can handle fedora without the f prefix", "body": "This commit removes the 'fedora-prefix' from the filename in acceptance tests.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "treydock": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6411", "title": "(PUP-8223) Improve user and group forcelocal support", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrwahl2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6333", "title": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider", "body": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider\r\n\r\nWithout this patch applied, the redhat service provider is not idempotent\r\nin enabling SLES 11 boot services. These are special Sys V services beginning\r\nwith the string 'boot.'. When `chkconfig` is run against them, they print\r\n'<name>  B' instead of '<name>  on', so the existing regex does not match them.\r\nThus the redhat provider always sees them as disabled, and tries to enable\r\nthem on each agent run.\r\n\r\nThis patch adds the '<name>  B' condition to the regex.\r\n\r\n```\r\n$ chkconfig boot.kdump\r\nboot.kdump  B\r\n```\r\n\r\nBefore:\r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\nNotice: /Stage[main]/Kdump/Service[kdump]/enable: enable changed 'false' to 'true'\r\n```\r\n\r\nAfter: \r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukebigum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6317", "title": "(PUP-8098) adding 'acltype' as a valid property for a ZFS file system", "body": "Adds property 'acltype' to the accepted list of ZFS properties.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkishel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6275", "title": "(PUP-8041) replace FACTER_url with target for puppet resource", "body": "Prior to this commit, it was necessary to set FACTER_url when using\r\npuppet resource with a device.\r\n\r\nThis commit implements a device method in network_device/config.rb,\r\nand uses it in application/device.rb and application/resource.rb.\r\n\r\n`puppet resource --target bigip.example.com f5_virtualserver`\r\n\r\nThis method is also available/useful for device module tasks\r\nthat need to target a device.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5814", "title": "(PUP-6134) Explicitly locate gemcmd windows", "body": "On Windows:\r\n\r\nPuppet is unable to install a ruby gem anywhere other than Puppet's ruby.\r\nCaused by Puppet prepending its paths (including our gem) to PATH.\r\nThis fix removes Puppet's paths from PATH when setting :gemcmd.\r\n\r\n(A larger-scale solution would involve a path/target parameter to Package.)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barriserloth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6175", "title": "(PUP-8015) Add a `puppet ssl` face for generating csrs without needing to connect to a master", "body": "This commit moves the puppet-agent-bootstrap code created by Adrien\r\nThebo (https://github.com/adrienthebo/puppet-agent-bootstrap/) to the\r\npuppetlabs github space, and adds rspec tests to go along with the\r\nbootstrap changes.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamtur01": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556", "body": "Simon\n\nCan you log a ticket with your commit please?\n\nhttp://projects.puppetlabs.com/projects/puppet\n\nGood catch and thanks btw!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676", "body": "Bryan - we're trying to standardize on the following workflow:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nCould you please send the commit to the list too?\n\nThanks for this!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204", "body": "Hi Keymon \n\nWe don't use GitHiub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks!\n\nJames Turnbull\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644", "body": "Closed in Redmine.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235", "body": "Hi - we don't use GitHub's pull requests for merging code.\n\nYou can see our process at:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nBut in summary we'd like you:\n1. To open a ticket in Redmine (http://projects.puppetlabs.com/projects/puppet/issues/new)\n2. Sign a CLA\n3. Send your code to our -dev list for comment!\n\nThanks for your commit!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489", "body": "I frankly welcome our new cybernetic insect overlords...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Savar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601", "body": "See:\n\nhttp://projects.puppetlabs.com/issues/4860\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mmrobins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391", "body": "Hi rodjek,  Thanks for the patch.  I know it's a small change, but if you could follow our dev process for submitting code it would be helpful to us:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThis allows us to keep track of what we need to do, prioritize it, and communicate changes to our community better.  We are also asking contributors to sign a CLA to avoid licensing issues with the code base.\nThanks\nMatt Robinson\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396", "body": "rodjek,\nSame comment about the dev process for this pull request as the last one.  We wish there was a way to turn github pull requests off to avoid this confusion, but there doesn't appear to be.\nMatt\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432", "body": "eloyesp, we **are** collaborating, we just ask that patches not be submitted using Github pull requests.  As I mentioned to rodjek in another pull request, we outline the process for submitting code to Puppet here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nWe get a lot of code submissions and have a lot of tickets to keep track of, so following that process makes it easier for us to track and manage all that change than the Github interface does.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221", "body": "Thanks for the patch, but the tests need to pass (http://projects.puppetlabs.com/projects/puppet/wiki/Development_Writing_Tests#Running+Tests) before we can accept it (currently 1 failure in the specs with your change that should be easy to fix), and we generally don't take pull requests from Github.  Part of the reason for that is that we need Community License Agreements signed before we accept contributions.  \n\nSee our Development Lifecycle Wiki for more info if you'd like to contribute: http://projects.puppetlabs.com/projects/puppet/wiki/Development_Development_Lifecycle\n\nWe're definitely looking for help on Ruby 1.9 compatibility, so it would be great if you continued to work on that.  Currently not all the tests pass under Ruby 1.9, but we need them to continue passing under 1.8.5 and greater.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260", "body": "Great, thanks.  Let us know if you need help.\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/IRC_Channel\nhttps://groups.google.com/group/puppet-dev\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427", "body": "Thanks for bringing this up.  Our support for Ruby versions is actually a little more complicated and the README and our docs need to be updated with this information.  Ruby 1.9.2 is supported for our 2.7.x code, which is still in RC and should be released in the near future.  More info here:\n\nhttp://projects.puppetlabs.com/issues/7506\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eloyesp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814", "body": "so you are **not** collaborating?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aredridel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251", "body": "Alright. I can do that.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bodepd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367", "body": "+1 from me\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nanliu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706", "body": "Squashed into a single commit. Originally split in two because spec test still needed some work.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464", "body": "You can configure this for apply/agent, perhaps we need an [apply] section:\n\n[main]\n  classfile = $vardir/state/apply_classes.txt\n\n[agent]\n  classfile = $vardir/state/classes.txt\n\nI agree this should be clearly spelled out in release documentation.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "slippycheeze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274", "body": "Puppet apply can be used for any number of things, including one-shot modifications to a system.  Dropping all the data from regular runs just because someone ran something through it seems risky: your database server would stop being a database server until the next full run, which is probably not what you want.\n\nI am pretty sure this is an unresolvable problem, because we have a single piece of data (classes.txt) that is trying to represent something much more dynamic, the set of applicable classes (or, perhaps, successfully applied classes) of the machine at a point in time.\n\nMaking this optional, or writing to a separate file, would be much more acceptable.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171", "body": "I don't think this is the right strategy: it seems that you are patching the individual test scripts that show errors, rather than addressing this globally.  To me, if feels very much like that would be the right solution: then, _all_ tests that have ordering dependencies will work, or fail, on their own merits.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408", "body": "After discussion, the global behaviour is correct but too slow (2x to 3x slower) to want to do all the time.  \n\nhttp://projects.puppetlabs.com/issues/9026 captures the desire to have a mode where CI can run the expensive operations (and reveal our failures) without having to pay that when _most_ of the time it isn't bringing any huge benefit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391", "body": "That won't work on Windows; see https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util.rb#L193 for a better way to handle this.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333", "body": "Hey.  Thanks for the contribution; we probably need to fill out that test before merging.  Otherwise it would be all too easy to revert the behaviour. :)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350", "body": "I ended up taking a closer look at the testing code, and I got nothing.  The obvious choice, of ginning up a report in the right state, and testing that the function returns, wouldn't add much value without a negative `expects`; mostly, it looks like the code should go in without the test being filled out at this time.\n\nI am going to leave this open for a bit longer and see if anyone else has a brilliant idea, though...\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481", "body": "I believe this is wrong for Win32 support, and `root?` knows more about that platform.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489", "body": "I think that this should delegate caching to the underlying layer, since this release will have a Facter release that handles that effectively nearby.\n\nAt the very least it should detect if it should delegate caching to the indirection, which allows the endpoint to determine the most appropriate TTL, etc, for a fact value.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490", "body": "Shouldn't this happen implicitly, rather than by extending the ABI of the terminus in a non-standard way?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491", "body": "Should this code even be doing that by hand?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495", "body": "....sooo.  Now the testing that we can load facts from disk doesn't actually load facts from disk.  That doesn't fill me with comfort that these tests are worth anything.\n\nIf they really are too slow to use, we should probably just delete them entirely rather than stubbing out fundamental parts of them.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jeffmccune": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928", "body": "Daniel,\n\nI'm in agreement with Nan.\n\nWe do make claims that puppet apply is a \"first class citizen\" and community members like Jordan Sissel heavily rely on puppet apply being feature complete with puppet agent.\n\nFurthermore, puppet apply is more suitable for situations like Vagrant where a full master is not avaialable or necessary.\n\nFinally, as we integrate more with MCollective, the classes.txt file becomes ever more important for filtering.\n\nFor these reasons I think we should still write the file and we should write it to the same file the agent writes to by default.\n\nIf the end user desires, we support writing to multiple files as Nan illustrated above.\n\nI'll re-open this once.  If you still disagree, please feel free to close the pull request and I won't re-open it.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774", "body": "On Wednesday, July 18, 2012, vojtekb wrote:\n\n> why is '/' illegal?\n\n/ is not illegal.  Puppet behaving as if / is illegal is a bug and we will\nfix it as soon as possible.\n\nWhat version of puppet are you using?\n\nWe are using  externally signed certificates for our puppet setup. Before\n\n> this change it works perfectly, with this change we get the following error:\n> \n> err: /File[/var/lib/puppet/lib]: Failed to generate additional resources\n> using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some\n> company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.comjavascript:;\"\n> must not contain unprintable or non-ASCII characters\n> \n> There are indeed slashes in the name but they were added by legitimate\n> openssl operations.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/puppetlabs/puppet/commit/bd2820ec6ee8a45f57fcc57f79dddde0062cdca7#commitcomment-1598592\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058", "body": "@vojtekb Please watch [#15561](http://projects.puppetlabs.com/issues/show/15561) to receive notifications of our progress on fixing this issue.  Please also add any impact data about this issue in your site to the ticket.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773", "body": "On Sat, Jul 21, 2012 at 9:12 PM, R. Tyler Croy <\nreply@reply.github.com\n\n> wrote:\n> \n> I has a sad. The Gemfile took me easily 30-45 minutes of\n> guess-and-check-rspec work to get right, I really do think it should be\n> added back in\n\nI'm sure we'll add this back in, it was just really bad timing last week.\n The reason Andy and I decided to pull it out right now are two fold.\n First, it was merged into the wrong branch.  We should merge it into 3.x.\n Second, we're not sure of the implications this has with #7788, the\nunmaintained cucumber-puppet project, and if Puppet is compatible with\nbundler from a, \"can we support and maintain this?\" perspective.\n\n> I don't remember why I added cucumber in there, that might have been just\n> force of habit on my part (oops).\n\nR Tyler, would you mind simply re-submitting this against 3.x and remove\nthe cucumber dependency?  There's a good chance we can look at it this week\nif the pull request is in by Monday morning PT.\n\nPlease also include a paragraph in the README describing how the gemfile is\nintended to be used.\n\nThanks,\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038", "body": "> Please could you update line 112 to: if pathname = which('pip') or which('pip-python') then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n\nThis sounds like a good improvement, @wilas would you mind submitting a pull request?  It's pretty easy to to contribute to Puppet, please see our [CONTRIBUTING](https://github.com/puppetlabs/puppet/blob/master/CONTRIBUTING.md).  Please file a bug at projects.puppetlabs.com otherwise, and I'll be happy to add this issue to our backlog.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166", "body": "@masterzen, when I run the rspec tests I'm getting:\n\n```\nFailures:\n\n  1) Puppet::SSL::Host should allow to reset localhost\n     Failure/Error: previous_host = Puppet::SSL::Host.localhost\n     Puppet::Error:\n       Cannot save maynard.lan; parent directory /var/folders/hq/hhqxfhws68bc_s23f2ktyx0m0000gp/T/ssl_host_testing20110914-2703-fzokxv-0/ssl/private_keys does not exist\n     # ./lib/puppet/indirector/ssl_file.rb:95:in `save'\n     # ./lib/puppet/indirector/key/file.rb:34:in `save'\n     # ./lib/puppet/indirector/indirection.rb:265:in `save'\n     # ./lib/puppet/ssl/host.rb:147:in `generate_key'\n     # ./lib/puppet/ssl/host.rb:176:in `certificate'\n     # ./lib/puppet/ssl/host.rb:32:in `localhost'\n     # ./spec/unit/ssl/host_spec.rb:69\n\nFinished in 86.56 seconds\n13046 examples, 1 failure, 90 pending\n\nFailed examples:\n\nrspec ./spec/unit/ssl/host_spec.rb:68 # Puppet::SSL::Host should allow to reset localhost\nrspec spec/**/*_spec.rb  80.95s user 7.84s system 97% cpu 1:31.54 total\n```\n\nDo you have any idea of how to make this more robust?  Unfortunately none jump out at me at the moment.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dingus9": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964", "body": "File added in /ext/kate/puppet.xml\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333", "body": "Works for me.\n\nAnd this is actually just a TextMate thing - it does it automatically to all created files, and I didn't bother turning it off.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735", "body": "Yeah, when I rebased this I knew it would conflict - I think the right approach is to move SUIDmanager.root? into the feature - the reason I made this change here is that without it you have pretty ugly loading issues, and there's no fundamental reason why SUIDmanager should have the 'root?' method.d\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741", "body": "This is probably the thing I'm least happy with.\n\nMy first version didn't do any caching but had a noticeable (at least when running the tests) cost, because we were retrieving all facts every time someone asked for a fact.\n\nI also considered making it easy to retrieve a single fact from the backing terminus, but this approach seemed much less evil.\n\nI'm a touch uncomfortable relying on Facter for caching, because it essentially assumes that Facter's caching priorities will always match Puppet's, which isn't necessarily the case.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749", "body": "How would you do that?  This is the other area that's obviously questionable, but I couldn't come up with a better option, and if I had to choose between hard-coding Facter into the system and having a non-standard API for this, it was an easy choice.  It actually made me wonder if 'load' shouldn't become a standard part of the indirector - I could see other terminus types needing some kind of initialization method.\n\nThere are unfortunately a few places that need to explicitly cause facts to get loaded (e.g., after they're downloaded as part of pluginsync).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752", "body": "I doubt it, but rather than judge that I decided to retain existing behavior.\n\nI believe I looked closely at the tests and it was impossible to determine \"right\" behavior, so I stuck with existing behavior.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755", "body": "Hmm, that's probably true.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "schwern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288", "body": "Why 6.2 seconds?  Oddly specific, and well beyond the orbit of the moon.  6.2 light seconds is about 1,860,000km which is suspiciously close to the distance to the Sun-Earth L1 point.  Is that the range to your REAPER INVASION FLEET waiting in the glare of the sun to wipe out humanity? Is Puppet actually a plan to develop an EMERGENT ARTIFICIAL INTELLIGENCE of the world's computer systems? Are you planning on handing control of the world's infrastructure over to your CYBERNETIC MASTERS at the critical moment of invasion in the hopes of gaining their favor and making you their fleshy avatar?!\n\nOr have I been playing too much Mass Effect?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pfig": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297", "body": "They're clearly building Dyson spheres.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wfarr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527", "body": "So this change looks to have never been merged to `2.7.x` release branch so even though this was supposed to be in 2.7.10 some months ago, it's still not in even 2.7.14.\n\nDefinitely need this STDIN support \u2014 could we get this rolled into a 2.7.15 release and pushed out _relatively soon_?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "vojtekb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592", "body": "why is '/' illegal?\n\nWe are using  externally signed certificates for our puppet setup. Before this change it works perfectly, with this change we get the following error:\n\nerr: /File[/var/lib/puppet/lib]: Failed to generate additional resources using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.com\" must not contain unprintable or non-ASCII characters\n\nThere are indeed slashes in the name but they were added by legitimate openssl operations.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593", "body": "BTW. the error message does not mention that '/' is not allowed so users will go and look for really unprintable characters\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600", "body": "@jeffmccune \nversion 2.7.13 <- worked fine\nversion 2.7.18 <- not\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "garethr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573", "body": "Running the test suite from master has the following in the output. Not sure if that was why rack was in the Gemfile.\n\n```\nFailed to load feature test for rack: no such file to load -- rack\n```\n\nIt would definitely be _a good think_ to get a supported version of this available, I nearly created it myself before finding the original pull request.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rtyler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171", "body": "I has a sad. The Gemfile took me easily 30-45 minutes of guess-and-check-rspec work to get right, I really do think it should be added back in\n\nI don't remember why I added cucumber in there, that might have been just force of habit on my part (oops).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531", "body": "This has no effect on cucumber-puppet whatsoever. New pull request explicitly against 3.x is [here](https://github.com/puppetlabs/puppet/pull/959)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "adrienthebo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545", "body": "The lack of banana actions disappoints me.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "zaphod42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402", "body": "I was saddened too. But we must go on and live our lives without banana actions! Persevere @adrienthebo! \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "djmitche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767", "body": "c.f. gh-1101 for a proposed fix\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260", "body": "Sounds good - thanks!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "blogbasti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410", "body": "Hi Josh,\n\n> The `windows` service provider no longer implements the `restart` method\n> directly as its parent `service` provider handles this correctly.\n\nSince an update from 2.7.18 to 2.7.19 puppet on windows is unable to handle service refresh:\n\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Could not evaluate: Could not find init script for 'nscp'\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Failed to call refresh: Could not find init script for 'nscp'\n\nI think there is maybe something wrong with this update. In Version 2.7.18 everything works fine with my definition.\n\nWhat do you think, Josh?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ruworuro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720", "body": "Works in puppet 2.7\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rismoney": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681", "body": "on a particular server I am getting this error.  I am not certain what assumptions are being made here...\nOn the local disk (hardware RAID1), there is a system reserved partition (no drive letter), a C: drive with the OS installed, and an unallocated rest of the disk... When I formatted the unallocated space on the rest of the disk, it passed...  It should have succeeded imho...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wilas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269", "body": "Centos/RHEL/Fedora all use pip-python instead of pip -> It depend how you install pip. If you use `yum install python-pip` and install pip from epel then it is true. But if you install pip by easy_install `easy_install pip` then command is pip. Actual pip version from epel is 0.8, but using easy_install you are able use pip in version 1.2.1. \n\nPersonally I prefer easy_install version. Right now I have to use pip-python on RHEL boxes because for RedHat osfamily puppet pip provider require pip-python command (I know I can make symlink pip to pip-python but it is dirty solution). \n\nPlease could you update line 112 to: `if pathname = which('pip') or which('pip-python')` then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173", "body": "Hi Jeff,\n\nI will try contribute to Puppet. Thx for links.\n\nCheers,\nKamil\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016", "body": "I've made needed changes. My pull request: https://github.com/puppetlabs/puppet/pull/1486\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "yom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756", "body": "Hi, this regex should either be case-insensitive or start with a lowercase n, otherwise it won't match.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jpartlow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840", "body": "Thanks very much for catching this.  The dpkg-query output changes in later Debian versions which weren't in our acceptance matrix.  there is a new PR 1960 addressing the warning change.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fiddyspence": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312", "body": "Sorry - this doesn't actually fix the advertised problem of providing a validated data item unless I've missed something.  $::clientcert is provided by\n\npuppet/node/facts.rb:    values[\"clientcert\"] = Puppet.settings[:certname]\n\nSo, trusting it here is misleading and wrong\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "masterzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358", "body": "Yes, my bad. The test passes fine when run isolated but combined in the whole suite it fails. Something prevents the directory to be created apparently.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590", "body": "In the light of bug #10727 (http://projects.puppetlabs.com/issues/10727), you might need to change this to\n\n```\nancestors = Pathname.new(self[:path]).enum_for(:ascend).map(&:to_s)\n```\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nfagerlund": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166", "body": "Oh! Thanks for catching that. (Also, I will now stop force-pushing until you're done reviewing.) \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167", "body": "Where does this get configured? Is it hard-coded in each provider? \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"branan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/2edca5f2a043fbf7c505da6dd3f8de4b54d640b2", "message": "Merge remote-tracking branch 'origin/5.3.x'"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f224e8b849ecd569ebcf11d81f1fdb292b36e95", "message": "Merge remote-tracking branch 'origin/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/ab35a0c89226476e6bfa7698c096fcdeb8af1f8f", "message": "Merge pull request #6548 from joshcooper/ticket/4.10.x/webrick-part-deux\n\n(PUP-8297) Ensure we call SSLSocket#accept once"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6485", "title": "(maint) Allow numeric hostnames in hiera_in_templates test", "body": "This test creates a hash of hostname -> directory, and stores it in\r\nYAML for hiera to query. If the hostname happens to be purely numeric,\r\nthe key in the hash will be a number, rather than a string. Facter\r\nalways returns the `hostname` fact as a string. This causes the hash\r\nlookup in the puppet code to fail, and the manifest to fail to\r\ncompile.\r\n\r\nThe fix is to prepend a bit of non-numeric junk to the hostname, so\r\nthat the key in hiera is always string.\r\n  ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hlindberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/7d6318c212c595fa05662e08fbc474af2ea95663", "message": "Merge pull request #6542 from hlindberg/PUP-8343_let-rich-data-params-through-to-resources\n\n(PUP-8343) let rich data params through to resources"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshcooper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/70e54bbd921a81d0e392e0d0aa646c181c826473", "message": "Merge pull request #6448 from jtappa/PUP-7397-filebucket-use-replace_file-jtappa\n\n(PUP-7397) Atomically update filebucket contents files"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/f6ad87a097d8bc84f11f3c64855a4157934a9b0b", "message": "(PUP-8297) Ensure we call SSLSocket#accept once\n\nPreviously, our webrick code set the webrick option SSLStartImmediately to true\nand then called `SSLServer#start_immediately = false`, in that order. Ruby\nversions 2.3.6/2.4.3 and up will skip the call to SSLSocket#accept if the\nSSLStartImmediately option is false. However, older versions will skip the call\nif the SSLServer `@start_immediately` instance variable is false[1].\n\nPrior to commit a358d5ec0, newer ruby versions caused an error because\nSSLSocket#accept was called twice on the same socket, once by webrick and again\nby us.\n\nCommit a358d5ec0 fixed the newer ruby case, but regressed on the older ruby\ncase, since SSLSocket#accept was never being called.\n\nThis commit eliminates the call to `start_immediately = false`, and sets the\nconfiguration option to false. This works as far back as ruby 1.9.3, while\npreserving the intent of the original issue[2].\n\nPaired-with: Jacob Helwig <jacob@puppet.com>\n\n[1] https://github.com/ruby/ruby/commit/2e728d51e70\n[1] https://projects.puppetlabs.com/issues/2637"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8d66a8bd4776ff2976cf83f3e1e2b8e7a7e895b3", "message": "(maint) Don't stub out setup_logger and setup_ssl methods\n\nStop stubbing setup_logger and setup_ssl in the main example group so that we\nfull exercise the code we're trying to test. This commit moves the cert related\nstubs from one of the nested example groups to the main one."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/e451a274aad622f6bbb101b2a3b9a6e45ac20888", "message": "Merge pull request #6526 from gguillotte/DOCUMENT-777\n\n(docs)(DOCUMENT-777)(PUP-8211) Clarify managehome."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c1186b85ffb09c3ee62d8f077cb086e5a9162aaf", "message": "Merge pull request #6534 from pcarlisle/fix-crontab-spec\n\n(maint) Make crontab provider suitable in specs"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f160d70023e6310bbecf1e6d327f8f897f4fba4", "message": "Merge pull request #6543 from ploubser/PUP-8227_fix_test\n\n(PUP-8227) Update transaction tests"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790", "body": "rismoney can you change that to:\n\n<pre>\nerr = Puppet::Util::Windows::Error.new(\"Failed to get volume information\")\nputs \"LastError=#{err.code}\"\nraise err\n</pre>\n\n\nIt may be that that particular last error code is something we can ignore...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701", "body": "Ah, yes. I had originally added this when trying to fix this bug a different way. But after changing the implementation I forgot to remove the test. I'll fix that. \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598", "body": "After more research, both cygwin and vim strictly look at the FILE_PERSISTENT_ACLS flag when determining whether to get/set ACLs, ignoring the fstype. So while it's possible FILE_PERSISTENT_ACLS could be set while fstype is not NTFS, just checking the flag seems to be the right thing to do.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jtappa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c8213d117a17a2482d2c0f0b2813b256b8c366f3", "message": "Merge pull request #6522 from ericldelaney/task/5.3.x/PUP-8321/update_deprecation_warning_translations\n\n(PUP-8321) add translations for deprecation_warning messages"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0a70205a2c9e5c3854a2d961f4547f4f71f9ad08", "message": "Merge pull request #6530 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_4\n\n(PUP-8347) usr error_location for auth config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/61a9a1c2c14ab1f0917276a8f3d1e0674859d491", "message": "Merge pull request #6535 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_5\n\n(PUP-8347) use error_location for network device config file"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/97681bfab11cff145cf675d0b829f8f228e2303e", "message": "Merge pull request #6544 from melissa/maint/5.3.x/merge-4.10.x\n\nMaint/5.3.x/merge 4.10.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8430ac9b47cbe7b32557dc9e48143f75088725ed", "message": "Merge pull request #6524 from ericldelaney/task/5.3.x/PUP-8340/catalog_alias_to_use_error_location\n\n(PUP-8340) convert alias to use error_location"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "melissa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/378eb76d603685e870fd167bde3feddd4b50eecc", "message": "Merge pull request #6529 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_3\n\n(PUP-8347) add error_location to config file errors."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/3c09d97c69b965ea988bb45a89f8b2f2745e59bf", "message": "Merge pull request #6528 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_2\n\n(PUP-8347) use error_location in file_server config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/41c3b23553f353dc26f82c1e8fe8c5daea779444", "message": "Merge pull request #6540 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_6\n\n(PUP-8347) use error_location in Puppet::Pops::Issues"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/6edca29b9dacb688e9c7f2723f35ee4a4748af20", "message": "Merge remote-tracking branch 'upstream/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c40d1f25e0c6f708774f9f708e8349bd56093bc9", "message": "Merge pull request #6433 from suckatrash/PUP-7968\n\n(PUP-7968) [#puppethack] Add a default to present for the ensure param"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6545", "title": "(PUP-8268) aio setup should use new install method", "body": "This commit updates the aio setup steps to install puppet and\r\npuppetserver with new methods added to beaker. These install the\r\npackages based on data gathered from a yaml file, rather than trying to\r\nfigure out what the path to the artifact or repo file is.\r\n\r\nThis commit does not attempt to make the same change for the EC2 install\r\n(as it's dependent on external infrastructure and the new install\r\nmethods rely on internal-only infrastructure). Nor does this commit\r\nattempt to update the puppetserver nightly install. Nightlies is going\r\nto change soon, so it is not worth updating those methods currently.\r\n\r\nThis commit also updates beaker and beaker-hostgenerator versions. This\r\nchange depends on code available in these newer releases. It also adds\r\nbeaker-puppet to the Gemfile, as we should be explicit about this\r\ndependency since we are using methods that are specific to\r\nbeaker-puppet.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6477", "title": "(PUP-8268) Use new install methods", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ericldelaney": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/d012b2ea9b4d39d61d7b6510526914d3183f858c", "message": "(PUP-8347) usr error_location for auth config parsing\n\nUse the error_location() method when parsing network auth config files\nChanged invalid entry error message"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0753bfeae7259876c98a5ac0468a8c275962c9dc", "message": "(PUP-8347) use error_location for file_server config\n\nUse error_location() in the file_server config file parser code\nUpdated invalid entry string"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/703a099700635eed9cce962c3a84b63eb1b4bb63", "message": "(PUP-8347) use error_location for network device config file\n\nUse the error_location() to tell the error location when processing\nthe network device config file\nRefactored the code to be more understandable\nChanged invalid entry error string"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6549", "title": "(maint) update error_location() to prefer nil and documentation", "body": "Updated error_location() to be called with nil when something is not known\r\nbut understand empty string too. Along with documentation updates", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6527", "title": "(PUP-8347) add use error_location for parser/scope.rb", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6349", "title": "(PUP-8080) Add tests for i18n, puppet, and modules", "body": "This is an initial set of tests for testing i18n and modules\r\nThe puppet_agent_with_module.rb test fails based on the current agent\r\nAdded puppet resource translation test\r\nAdded puppet application/face translation test", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thallgren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/60f5a5137863625db6f178c4e8e276d08b4cd273", "message": "Merge pull request #6533 from nicklewis/PUP-8357-correctly-match-task-files\n\n(PUP-8357) Correctly match files for tasks"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6118", "title": "(PUP-7834) Replace all calls to YAML.load with YAML.safe_load", "body": "This commit replaces all calls to the unsafe `YAML.load` method with\r\ncalls to `YAML.safe_load` to gain control over exactly what classes that\r\nare permitted to create instances during the load.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicklewis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/1c262644f8a91b1281466c996b941e3c6e127124", "message": "(PUP-8357) Correctly match files for tasks\n\nPreviously, the existing_paths method for the FileBased loader was using\nnaive string matching to determine which files were associated with a\nparticular task. This resulted in the wrong set of files being found for\na task, in the case where the name of one task was a prefix of the name\nof an adjacent task. For example, task `foo` would match both `foo.py`\nand `foobar.py`. The desired behavior is that filenames need to match\nall the way up to the file extension, in order to be associated with a\nparticular task.\n\nThis commit changes the existing_paths method to compare basenames\nexactly, excluding file extensions."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937", "body": "Hi,\n\nWe don't use GitHub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks,\nNick Lewis\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jhelwig": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/9d49cd92cf3e0f15613a0bf46e0ebb576ae36d03", "message": "Merge pull request #6510 from kris-bosland/fix/master/pup-8342\n\n(PUP-8342) Update report schema to include transaction_completed"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178", "body": "As noted in [the Redmine ticket](https://projects.puppetlabs.com/issues/8677), vcsrepo shouldn't have been merged into core, and has since been removed.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043", "body": "Haven't really looked at the changes yet, but the tests and the implementation should be squashed into one commit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492", "body": "This isn't quite ready.  While it fixes the problem for that specific ordering, there is still cache_class leakage.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201", "body": "Lost a few necessary changes in the original commit, which are now included in the updated version.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628", "body": "So, I'm a little confused as to what this is actually testing.  It looks like it would belong in the type instead of the provider, if anywhere, though I'm not sure it's actually testing anything specific to the package type, or msi provider.  Looks like it's testing the generic behavior of types (that parameters/properties set with new are available from the resource via the hash accessor method).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206", "body": "Stale debugging statement?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152", "body": "There's introduced trailing whitespace on this line.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159", "body": "More trailing whitespace introduced here.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161", "body": "It's not always <= 500.  The number is configurable by the end-user, and it isn't the same on all distributions.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168", "body": "It may be better to state that it's an artifact of the internal implementation of Puppet rather than making any claims as to its permanence since there are not definite plans to do anything with/to it, even though there are some objections to its existence.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192", "body": "It's a system level configuration, and I'm pretty sure the providers just let the system tools take care of it.  On Linux (Ubuntu) it's in `/etc/login.defs` defined by `SYS_UID_MIN` and `SYS_UID_MAX`.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593", "body": "Talking things through with Josh, it doesn't seem like this check is actually sufficient to limit to filesystems that will behave properly with setting the ACLs.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541", "body": "Talking with Josh, it sounds like this comment is a left-over from a previous version of this test, and should go away.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442", "body": "So, what's the reason for switching `PKG_PATH` to a string from the original symbol?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446", "body": "I'd be really good to have the double chomp explained in the commit message (and even better if there was a comment added explaining it in the code).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "justinstoller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6547", "title": "(PUP-8363) Do not use system_uptime fact on windows", "body": "Previously, we used the system_uptime fact as a form of randomness when\r\ntesting that topscope variables (ie, return values from pure puppet functions\r\nthat do not enter ruby land) were refreshed when environment_timeout was\r\nunlimited.\r\n\r\nUnfortunately, facter's system_uptime may not return a valid value on\r\nWindows (see FACT-1504 for details).\r\n\r\nTo avoid using Ruby on the server, while still having a constantly\r\nchanging variable, we continue to use the agents under test to provide a\r\nvalue (fact) but now move from using system_uptime to an external fact.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gguillotte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6539", "title": "(docs) Update README links.", "body": "Update links to the docs site in the README, and point relative\r\ndeveloper docs links to absolute GitHub URLs in order to resolve issues\r\nwith YARD-generated docs and the Puppet docs site.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pcarlisle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6536", "title": "(maint) Pass through text domain when loading translations", "body": "If this isn't passed through the tests can fail sometimes depending on\r\nthe order in which they're run. I don't think this is ever a problem in\r\nproduction but adding an argument with a default makes it a little more\r\nrobust.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsane": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6532", "title": "(PUP-8356) Base fips specific behaviors without using facts", "body": "We need to adjust some settings based on whether fips mode is enabled\r\nor not for FIPS compliance. Till now the later was done using a fact (PUP-8141).\r\nHowever that created a dependency in puppetserver which cannot load facts in certain configurations like dev testing and running from sources.\r\nThis change implements fips mode detection using a local method instead of facter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6508", "title": "(PUP-4963) Puppet module build fails on FIPS enabled system", "body": "We now disallow the module tool operations of install, uninstall, and upgrade\r\nbesides building to be able to provide an appropriate error message instead\r\nof the operations getting aborted due to FIPS preventing use of any\r\nunapproved algorithms/operations like MD5.\r\nModule checksums use MD5 and cannot be changed easily without requiring a\r\nlarge number of design changes throughout.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5855", "title": "(PUP-7519) Enabling rubocop securitycop scans", "body": "Background: Rubocop scans were not running as the various cops in .rubocop.yml were not kept uptodate with the latest definitions. This will enable only SecurityCop/YAMLLoad as a start to revive the scans in an effort to flag any inadvertent usages.  Additional security or other cop rules can/would be added in future.   \r\nRubocop do not have support for flagging YAML.load_file which would have been desirable. Likewise it is not necessary to mark the known instance of Yaml.load_file in Puppet::Util::Yaml to be ignored.\r\n\r\nNote that there are a couple of other YAML.load instances elsewhere so this may generate violations. If that is not desired this PR be merged after all these have been resolved/changed appropriately. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wiccan2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6525", "title": "(PUP-3802) Fix yaourt on Arch linux.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Iristyle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6513", "title": "(PUP-8337) Change Windows symlink? check behavior", "body": " - Previously, any file that returned FILE_ATTRIBUTE_REPARSE_POINT\r\n   in a call to GetFileAttributes would be considered a \"symlink\" for\r\n   Puppets purpose. This is relevant specifically to file resources.\r\n\r\n   However, Puppet cannot resolve the destination location for many of\r\n   the reparse point types, namely the following (some of which may\r\n   not actually resolve to a different path):\r\n\r\n   IO_REPARSE_TAG_HSM\r\n   IO_REPARSE_TAG_HSM2\r\n   IO_REPARSE_TAG_SIS\r\n   IO_REPARSE_TAG_WIM\r\n   IO_REPARSE_TAG_CSV\r\n   IO_REPARSE_TAG_DFS\r\n   IO_REPARSE_TAG_DFSR\r\n   IO_REPARSE_TAG_DEDUP\r\n   IO_REPARSE_TAG_NFS\r\n\r\n - Modify the behavior of symlink? such that Puppet only considers\r\n   reparse points IO_REPARSE_TAG_MOUNT_POINT, IO_REPARSE_TAG_SYMLINK\r\n   as resolvable symlinks.\r\n\r\n   The others will continue to be treated as regular files /\r\n   directories.\r\n\r\n - Existing symlink? behavior has been factored out to a reparse_point?\r\n   method responsible for only validating the file attribute contains\r\n   the reparse attribute.\r\n\r\n - This introduces some additional work once a path is determined as a\r\n   reparse point, but this should not happen regularly as reparse\r\n   points are typically fairly rare on Windows systems.\r\n\r\n - Change the behavior of exist? to function similarly to symlink? in that\r\n   only understandable symlinks will be followed. exist? will return true\r\n   for reparse points that are not mount or symlink reparse points", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6298", "title": "(PUP-7019) Map Windows codepages to Ruby encodings", "body": " - INCOMPLETE\r\n   includes some WIP .rb files that can be trashed once they're fully\r\n   integrated into the existing Puppet code in this PR\r\n\r\n - Make tests more dynamically understand how Windows codepages map to\r\n   Ruby encodings.\r\n\r\n   Ruby carries a bucket of different Encodings, some of which appear\r\n   to be pretty platform specific.\r\n\r\n   This can impact some tests.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5988", "title": "(WIP) ci:test:git for SLES11", "body": "", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5971", "title": "(PUP-7648) Fix ci:test:git pre-suite on OSX 10.11", "body": "- A number of problems prevented ci:test:git from executing properly\r\n   on OSX 10.11:\r\n\r\n   * When performing a `gem install bundler`, system Ruby places the\r\n     binstub in /usr/local/bin. However, the SSH environment is not\r\n     configured with /usr/local/bin in PATH. There are multiple\r\n     solutions to this problem:\r\n\r\n      - Add /usr/local/bin to ~/.ssh/environment in Beaker - covered\r\n        in BKR-1139. This allows any additional binaries that might\r\n        be installed (homebrew, git, other Ruby gems with binstubs\r\n        such as puppet and facter) to be available. This is the most\r\n        effective universal solution but requires a Beaker release.\r\n\r\n        A workaround is in place to do this in 000_EnvSetup of the\r\n        pre-suite until Beaker changes land.\r\n\r\n      - Add to the host[:host_env] hash of environment variables via\r\n        a Beaker options file, so that PATH is augmented with\r\n        /usr/local/bin. Unfortunately this requires setting additional\r\n        hosts / options files on disk prior to any code running in\r\n        the Puppet pre-suite, to be picked up during Beakers host\r\n        initialization and injected into ~/.ssh/environment correctly.\r\n        Otherwise, the PATH would have to be manipulated in each new\r\n        SSH command. Due to beaker-hostgenerator commonly being used\r\n        to execute, its simpler to avoid this option.\r\n\r\n        Note that beaker-hostgenerator should also allow arbitrary\r\n        settings injection using {} syntax, but this doesn't appear to\r\n        work properly with ci:test:git and it's uncertain if it\r\n        properly handles the :host_env hash when writing to YAML.\r\n\r\n   * When performing `bundle install`, ensure Ruby is configured to\r\n     use OSX platform specific gems where possible. This impacts\r\n     the inclusion of CFPropertyList.\r\n\r\n   * Due to OSX SIP (System Integrity Protection) /usr/bin is not\r\n     writable and /usr/local/bin should be used instead. Override\r\n     Beakers default puppetbindir setting to /usr/local/bin and use\r\n     that as the --binstub directory when installing the Puppet source\r\n     with Bundler. binstubs should continue to use /usr/bin/ruby as\r\n     the interpreter.\r\n\r\n   * Similarly, when calling install.rb, provide --bindir as the same\r\n     /usr/local/bin as the system Ruby binstub dir is not otherwise\r\n     writable. Beaker helpers will fully qualify the path to puppet\r\n     using the puppetbindir setting already.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5780", "title": "(DO NOT MERGE)(maint) Set BUNDLE_SPECIFIC_PLATFORM=true", "body": "**This might be one to outright close, but note that without it we're not using platform-specific Facter which depends on CFPropertyList**\r\n\r\n - Bundler, under some circumstances, may not install platform-specific\r\n   gems.  For instance, using a bundle install of the Puppet Gemfile\r\n   will not install the universal-darwin version of Facter.\r\n\r\n - Set the environment variable BUNDLE_SPECIFIC_PLATFORM also\r\n   had to be set to properly use platform-specific versions of any\r\n   gems that have been referenced.  This will be the default behavior\r\n   in Bundler 2, and given platform-specific versions of Facter are\r\n   shipped - should always be the case for Puppet. Without setting\r\n   this Bundler will raise a warning during installation.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gdubicki": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6476", "title": "(PUP-4678) Allow yumrepo priority below the default", "body": "The default priority is 99 so limiting it with puppet to\r\n99 too made it impossible to add a repository with a lower\r\npriority to protect system packages. This change removes\r\nthis limitation.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucywyman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6475", "title": "(PUP-8298) Add invalid task error", "body": "Adds invalid task name issue type so that when an invalid task name is called from a plan there's an appropriate error type and message for it.  Relates to BOLT-261.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ekohl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6438", "title": "[WIP] PUP-7474: Always generate the subjectAltNames per RFC2818", "body": "This ensures the there is always a subjectAltNames in a CSR with the common name. The allow_dns_alt_names option is changed to ignore the CN matching the subjectAltNames.\n\nCurrently it's untested hence the WIP flag.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharpie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6434", "title": "(PUP 7779) [#puppethack] Resurrect puppet facts upload", "body": "This changeset reverts pieces of [PUP-2560](https://tickets.puppetlabs.com/browse/PUP-2560) in order to re-add the ability to upload facts outside of a catalog request. Specifically, this patch re-adds the following functionality:\r\n\r\n  - The `puppet facts upload` command.\r\n\r\n  - The Puppet::Node::Facts::Rest terminus for saving facts to Puppet Servers.\r\n\r\n  - The ability to handle requests for the `/puppet/v3/facts` endpoint.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203", "body": "This check will never get exercised if `current_path` contains no directories as the `next` statements on lines 140 and 141 will keep skipping to the next iteration.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "mwaggett": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6414", "title": "(maint) Ensure projects can handle fedora without the f prefix", "body": "This commit removes the 'fedora-prefix' from the filename in acceptance tests.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "treydock": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6411", "title": "(PUP-8223) Improve user and group forcelocal support", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrwahl2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6333", "title": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider", "body": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider\r\n\r\nWithout this patch applied, the redhat service provider is not idempotent\r\nin enabling SLES 11 boot services. These are special Sys V services beginning\r\nwith the string 'boot.'. When `chkconfig` is run against them, they print\r\n'<name>  B' instead of '<name>  on', so the existing regex does not match them.\r\nThus the redhat provider always sees them as disabled, and tries to enable\r\nthem on each agent run.\r\n\r\nThis patch adds the '<name>  B' condition to the regex.\r\n\r\n```\r\n$ chkconfig boot.kdump\r\nboot.kdump  B\r\n```\r\n\r\nBefore:\r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\nNotice: /Stage[main]/Kdump/Service[kdump]/enable: enable changed 'false' to 'true'\r\n```\r\n\r\nAfter: \r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukebigum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6317", "title": "(PUP-8098) adding 'acltype' as a valid property for a ZFS file system", "body": "Adds property 'acltype' to the accepted list of ZFS properties.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkishel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6275", "title": "(PUP-8041) replace FACTER_url with target for puppet resource", "body": "Prior to this commit, it was necessary to set FACTER_url when using\r\npuppet resource with a device.\r\n\r\nThis commit implements a device method in network_device/config.rb,\r\nand uses it in application/device.rb and application/resource.rb.\r\n\r\n`puppet resource --target bigip.example.com f5_virtualserver`\r\n\r\nThis method is also available/useful for device module tasks\r\nthat need to target a device.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5814", "title": "(PUP-6134) Explicitly locate gemcmd windows", "body": "On Windows:\r\n\r\nPuppet is unable to install a ruby gem anywhere other than Puppet's ruby.\r\nCaused by Puppet prepending its paths (including our gem) to PATH.\r\nThis fix removes Puppet's paths from PATH when setting :gemcmd.\r\n\r\n(A larger-scale solution would involve a path/target parameter to Package.)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barriserloth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6175", "title": "(PUP-8015) Add a `puppet ssl` face for generating csrs without needing to connect to a master", "body": "This commit moves the puppet-agent-bootstrap code created by Adrien\r\nThebo (https://github.com/adrienthebo/puppet-agent-bootstrap/) to the\r\npuppetlabs github space, and adds rspec tests to go along with the\r\nbootstrap changes.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamtur01": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556", "body": "Simon\n\nCan you log a ticket with your commit please?\n\nhttp://projects.puppetlabs.com/projects/puppet\n\nGood catch and thanks btw!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676", "body": "Bryan - we're trying to standardize on the following workflow:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nCould you please send the commit to the list too?\n\nThanks for this!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204", "body": "Hi Keymon \n\nWe don't use GitHiub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks!\n\nJames Turnbull\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644", "body": "Closed in Redmine.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235", "body": "Hi - we don't use GitHub's pull requests for merging code.\n\nYou can see our process at:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nBut in summary we'd like you:\n1. To open a ticket in Redmine (http://projects.puppetlabs.com/projects/puppet/issues/new)\n2. Sign a CLA\n3. Send your code to our -dev list for comment!\n\nThanks for your commit!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489", "body": "I frankly welcome our new cybernetic insect overlords...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Savar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601", "body": "See:\n\nhttp://projects.puppetlabs.com/issues/4860\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mmrobins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391", "body": "Hi rodjek,  Thanks for the patch.  I know it's a small change, but if you could follow our dev process for submitting code it would be helpful to us:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThis allows us to keep track of what we need to do, prioritize it, and communicate changes to our community better.  We are also asking contributors to sign a CLA to avoid licensing issues with the code base.\nThanks\nMatt Robinson\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396", "body": "rodjek,\nSame comment about the dev process for this pull request as the last one.  We wish there was a way to turn github pull requests off to avoid this confusion, but there doesn't appear to be.\nMatt\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432", "body": "eloyesp, we **are** collaborating, we just ask that patches not be submitted using Github pull requests.  As I mentioned to rodjek in another pull request, we outline the process for submitting code to Puppet here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nWe get a lot of code submissions and have a lot of tickets to keep track of, so following that process makes it easier for us to track and manage all that change than the Github interface does.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221", "body": "Thanks for the patch, but the tests need to pass (http://projects.puppetlabs.com/projects/puppet/wiki/Development_Writing_Tests#Running+Tests) before we can accept it (currently 1 failure in the specs with your change that should be easy to fix), and we generally don't take pull requests from Github.  Part of the reason for that is that we need Community License Agreements signed before we accept contributions.  \n\nSee our Development Lifecycle Wiki for more info if you'd like to contribute: http://projects.puppetlabs.com/projects/puppet/wiki/Development_Development_Lifecycle\n\nWe're definitely looking for help on Ruby 1.9 compatibility, so it would be great if you continued to work on that.  Currently not all the tests pass under Ruby 1.9, but we need them to continue passing under 1.8.5 and greater.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260", "body": "Great, thanks.  Let us know if you need help.\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/IRC_Channel\nhttps://groups.google.com/group/puppet-dev\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427", "body": "Thanks for bringing this up.  Our support for Ruby versions is actually a little more complicated and the README and our docs need to be updated with this information.  Ruby 1.9.2 is supported for our 2.7.x code, which is still in RC and should be released in the near future.  More info here:\n\nhttp://projects.puppetlabs.com/issues/7506\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eloyesp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814", "body": "so you are **not** collaborating?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aredridel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251", "body": "Alright. I can do that.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bodepd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367", "body": "+1 from me\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nanliu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706", "body": "Squashed into a single commit. Originally split in two because spec test still needed some work.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464", "body": "You can configure this for apply/agent, perhaps we need an [apply] section:\n\n[main]\n  classfile = $vardir/state/apply_classes.txt\n\n[agent]\n  classfile = $vardir/state/classes.txt\n\nI agree this should be clearly spelled out in release documentation.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "slippycheeze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274", "body": "Puppet apply can be used for any number of things, including one-shot modifications to a system.  Dropping all the data from regular runs just because someone ran something through it seems risky: your database server would stop being a database server until the next full run, which is probably not what you want.\n\nI am pretty sure this is an unresolvable problem, because we have a single piece of data (classes.txt) that is trying to represent something much more dynamic, the set of applicable classes (or, perhaps, successfully applied classes) of the machine at a point in time.\n\nMaking this optional, or writing to a separate file, would be much more acceptable.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171", "body": "I don't think this is the right strategy: it seems that you are patching the individual test scripts that show errors, rather than addressing this globally.  To me, if feels very much like that would be the right solution: then, _all_ tests that have ordering dependencies will work, or fail, on their own merits.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408", "body": "After discussion, the global behaviour is correct but too slow (2x to 3x slower) to want to do all the time.  \n\nhttp://projects.puppetlabs.com/issues/9026 captures the desire to have a mode where CI can run the expensive operations (and reveal our failures) without having to pay that when _most_ of the time it isn't bringing any huge benefit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391", "body": "That won't work on Windows; see https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util.rb#L193 for a better way to handle this.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333", "body": "Hey.  Thanks for the contribution; we probably need to fill out that test before merging.  Otherwise it would be all too easy to revert the behaviour. :)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350", "body": "I ended up taking a closer look at the testing code, and I got nothing.  The obvious choice, of ginning up a report in the right state, and testing that the function returns, wouldn't add much value without a negative `expects`; mostly, it looks like the code should go in without the test being filled out at this time.\n\nI am going to leave this open for a bit longer and see if anyone else has a brilliant idea, though...\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481", "body": "I believe this is wrong for Win32 support, and `root?` knows more about that platform.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489", "body": "I think that this should delegate caching to the underlying layer, since this release will have a Facter release that handles that effectively nearby.\n\nAt the very least it should detect if it should delegate caching to the indirection, which allows the endpoint to determine the most appropriate TTL, etc, for a fact value.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490", "body": "Shouldn't this happen implicitly, rather than by extending the ABI of the terminus in a non-standard way?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491", "body": "Should this code even be doing that by hand?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495", "body": "....sooo.  Now the testing that we can load facts from disk doesn't actually load facts from disk.  That doesn't fill me with comfort that these tests are worth anything.\n\nIf they really are too slow to use, we should probably just delete them entirely rather than stubbing out fundamental parts of them.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jeffmccune": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928", "body": "Daniel,\n\nI'm in agreement with Nan.\n\nWe do make claims that puppet apply is a \"first class citizen\" and community members like Jordan Sissel heavily rely on puppet apply being feature complete with puppet agent.\n\nFurthermore, puppet apply is more suitable for situations like Vagrant where a full master is not avaialable or necessary.\n\nFinally, as we integrate more with MCollective, the classes.txt file becomes ever more important for filtering.\n\nFor these reasons I think we should still write the file and we should write it to the same file the agent writes to by default.\n\nIf the end user desires, we support writing to multiple files as Nan illustrated above.\n\nI'll re-open this once.  If you still disagree, please feel free to close the pull request and I won't re-open it.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774", "body": "On Wednesday, July 18, 2012, vojtekb wrote:\n\n> why is '/' illegal?\n\n/ is not illegal.  Puppet behaving as if / is illegal is a bug and we will\nfix it as soon as possible.\n\nWhat version of puppet are you using?\n\nWe are using  externally signed certificates for our puppet setup. Before\n\n> this change it works perfectly, with this change we get the following error:\n> \n> err: /File[/var/lib/puppet/lib]: Failed to generate additional resources\n> using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some\n> company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.comjavascript:;\"\n> must not contain unprintable or non-ASCII characters\n> \n> There are indeed slashes in the name but they were added by legitimate\n> openssl operations.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/puppetlabs/puppet/commit/bd2820ec6ee8a45f57fcc57f79dddde0062cdca7#commitcomment-1598592\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058", "body": "@vojtekb Please watch [#15561](http://projects.puppetlabs.com/issues/show/15561) to receive notifications of our progress on fixing this issue.  Please also add any impact data about this issue in your site to the ticket.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773", "body": "On Sat, Jul 21, 2012 at 9:12 PM, R. Tyler Croy <\nreply@reply.github.com\n\n> wrote:\n> \n> I has a sad. The Gemfile took me easily 30-45 minutes of\n> guess-and-check-rspec work to get right, I really do think it should be\n> added back in\n\nI'm sure we'll add this back in, it was just really bad timing last week.\n The reason Andy and I decided to pull it out right now are two fold.\n First, it was merged into the wrong branch.  We should merge it into 3.x.\n Second, we're not sure of the implications this has with #7788, the\nunmaintained cucumber-puppet project, and if Puppet is compatible with\nbundler from a, \"can we support and maintain this?\" perspective.\n\n> I don't remember why I added cucumber in there, that might have been just\n> force of habit on my part (oops).\n\nR Tyler, would you mind simply re-submitting this against 3.x and remove\nthe cucumber dependency?  There's a good chance we can look at it this week\nif the pull request is in by Monday morning PT.\n\nPlease also include a paragraph in the README describing how the gemfile is\nintended to be used.\n\nThanks,\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038", "body": "> Please could you update line 112 to: if pathname = which('pip') or which('pip-python') then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n\nThis sounds like a good improvement, @wilas would you mind submitting a pull request?  It's pretty easy to to contribute to Puppet, please see our [CONTRIBUTING](https://github.com/puppetlabs/puppet/blob/master/CONTRIBUTING.md).  Please file a bug at projects.puppetlabs.com otherwise, and I'll be happy to add this issue to our backlog.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166", "body": "@masterzen, when I run the rspec tests I'm getting:\n\n```\nFailures:\n\n  1) Puppet::SSL::Host should allow to reset localhost\n     Failure/Error: previous_host = Puppet::SSL::Host.localhost\n     Puppet::Error:\n       Cannot save maynard.lan; parent directory /var/folders/hq/hhqxfhws68bc_s23f2ktyx0m0000gp/T/ssl_host_testing20110914-2703-fzokxv-0/ssl/private_keys does not exist\n     # ./lib/puppet/indirector/ssl_file.rb:95:in `save'\n     # ./lib/puppet/indirector/key/file.rb:34:in `save'\n     # ./lib/puppet/indirector/indirection.rb:265:in `save'\n     # ./lib/puppet/ssl/host.rb:147:in `generate_key'\n     # ./lib/puppet/ssl/host.rb:176:in `certificate'\n     # ./lib/puppet/ssl/host.rb:32:in `localhost'\n     # ./spec/unit/ssl/host_spec.rb:69\n\nFinished in 86.56 seconds\n13046 examples, 1 failure, 90 pending\n\nFailed examples:\n\nrspec ./spec/unit/ssl/host_spec.rb:68 # Puppet::SSL::Host should allow to reset localhost\nrspec spec/**/*_spec.rb  80.95s user 7.84s system 97% cpu 1:31.54 total\n```\n\nDo you have any idea of how to make this more robust?  Unfortunately none jump out at me at the moment.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dingus9": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964", "body": "File added in /ext/kate/puppet.xml\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333", "body": "Works for me.\n\nAnd this is actually just a TextMate thing - it does it automatically to all created files, and I didn't bother turning it off.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735", "body": "Yeah, when I rebased this I knew it would conflict - I think the right approach is to move SUIDmanager.root? into the feature - the reason I made this change here is that without it you have pretty ugly loading issues, and there's no fundamental reason why SUIDmanager should have the 'root?' method.d\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741", "body": "This is probably the thing I'm least happy with.\n\nMy first version didn't do any caching but had a noticeable (at least when running the tests) cost, because we were retrieving all facts every time someone asked for a fact.\n\nI also considered making it easy to retrieve a single fact from the backing terminus, but this approach seemed much less evil.\n\nI'm a touch uncomfortable relying on Facter for caching, because it essentially assumes that Facter's caching priorities will always match Puppet's, which isn't necessarily the case.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749", "body": "How would you do that?  This is the other area that's obviously questionable, but I couldn't come up with a better option, and if I had to choose between hard-coding Facter into the system and having a non-standard API for this, it was an easy choice.  It actually made me wonder if 'load' shouldn't become a standard part of the indirector - I could see other terminus types needing some kind of initialization method.\n\nThere are unfortunately a few places that need to explicitly cause facts to get loaded (e.g., after they're downloaded as part of pluginsync).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752", "body": "I doubt it, but rather than judge that I decided to retain existing behavior.\n\nI believe I looked closely at the tests and it was impossible to determine \"right\" behavior, so I stuck with existing behavior.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755", "body": "Hmm, that's probably true.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "schwern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288", "body": "Why 6.2 seconds?  Oddly specific, and well beyond the orbit of the moon.  6.2 light seconds is about 1,860,000km which is suspiciously close to the distance to the Sun-Earth L1 point.  Is that the range to your REAPER INVASION FLEET waiting in the glare of the sun to wipe out humanity? Is Puppet actually a plan to develop an EMERGENT ARTIFICIAL INTELLIGENCE of the world's computer systems? Are you planning on handing control of the world's infrastructure over to your CYBERNETIC MASTERS at the critical moment of invasion in the hopes of gaining their favor and making you their fleshy avatar?!\n\nOr have I been playing too much Mass Effect?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pfig": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297", "body": "They're clearly building Dyson spheres.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wfarr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527", "body": "So this change looks to have never been merged to `2.7.x` release branch so even though this was supposed to be in 2.7.10 some months ago, it's still not in even 2.7.14.\n\nDefinitely need this STDIN support \u2014 could we get this rolled into a 2.7.15 release and pushed out _relatively soon_?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "vojtekb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592", "body": "why is '/' illegal?\n\nWe are using  externally signed certificates for our puppet setup. Before this change it works perfectly, with this change we get the following error:\n\nerr: /File[/var/lib/puppet/lib]: Failed to generate additional resources using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.com\" must not contain unprintable or non-ASCII characters\n\nThere are indeed slashes in the name but they were added by legitimate openssl operations.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593", "body": "BTW. the error message does not mention that '/' is not allowed so users will go and look for really unprintable characters\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600", "body": "@jeffmccune \nversion 2.7.13 <- worked fine\nversion 2.7.18 <- not\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "garethr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573", "body": "Running the test suite from master has the following in the output. Not sure if that was why rack was in the Gemfile.\n\n```\nFailed to load feature test for rack: no such file to load -- rack\n```\n\nIt would definitely be _a good think_ to get a supported version of this available, I nearly created it myself before finding the original pull request.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rtyler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171", "body": "I has a sad. The Gemfile took me easily 30-45 minutes of guess-and-check-rspec work to get right, I really do think it should be added back in\n\nI don't remember why I added cucumber in there, that might have been just force of habit on my part (oops).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531", "body": "This has no effect on cucumber-puppet whatsoever. New pull request explicitly against 3.x is [here](https://github.com/puppetlabs/puppet/pull/959)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "adrienthebo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545", "body": "The lack of banana actions disappoints me.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "zaphod42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402", "body": "I was saddened too. But we must go on and live our lives without banana actions! Persevere @adrienthebo! \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "djmitche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767", "body": "c.f. gh-1101 for a proposed fix\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260", "body": "Sounds good - thanks!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "blogbasti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410", "body": "Hi Josh,\n\n> The `windows` service provider no longer implements the `restart` method\n> directly as its parent `service` provider handles this correctly.\n\nSince an update from 2.7.18 to 2.7.19 puppet on windows is unable to handle service refresh:\n\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Could not evaluate: Could not find init script for 'nscp'\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Failed to call refresh: Could not find init script for 'nscp'\n\nI think there is maybe something wrong with this update. In Version 2.7.18 everything works fine with my definition.\n\nWhat do you think, Josh?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ruworuro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720", "body": "Works in puppet 2.7\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rismoney": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681", "body": "on a particular server I am getting this error.  I am not certain what assumptions are being made here...\nOn the local disk (hardware RAID1), there is a system reserved partition (no drive letter), a C: drive with the OS installed, and an unallocated rest of the disk... When I formatted the unallocated space on the rest of the disk, it passed...  It should have succeeded imho...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wilas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269", "body": "Centos/RHEL/Fedora all use pip-python instead of pip -> It depend how you install pip. If you use `yum install python-pip` and install pip from epel then it is true. But if you install pip by easy_install `easy_install pip` then command is pip. Actual pip version from epel is 0.8, but using easy_install you are able use pip in version 1.2.1. \n\nPersonally I prefer easy_install version. Right now I have to use pip-python on RHEL boxes because for RedHat osfamily puppet pip provider require pip-python command (I know I can make symlink pip to pip-python but it is dirty solution). \n\nPlease could you update line 112 to: `if pathname = which('pip') or which('pip-python')` then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173", "body": "Hi Jeff,\n\nI will try contribute to Puppet. Thx for links.\n\nCheers,\nKamil\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016", "body": "I've made needed changes. My pull request: https://github.com/puppetlabs/puppet/pull/1486\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "yom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756", "body": "Hi, this regex should either be case-insensitive or start with a lowercase n, otherwise it won't match.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jpartlow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840", "body": "Thanks very much for catching this.  The dpkg-query output changes in later Debian versions which weren't in our acceptance matrix.  there is a new PR 1960 addressing the warning change.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fiddyspence": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312", "body": "Sorry - this doesn't actually fix the advertised problem of providing a validated data item unless I've missed something.  $::clientcert is provided by\n\npuppet/node/facts.rb:    values[\"clientcert\"] = Puppet.settings[:certname]\n\nSo, trusting it here is misleading and wrong\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "masterzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358", "body": "Yes, my bad. The test passes fine when run isolated but combined in the whole suite it fails. Something prevents the directory to be created apparently.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590", "body": "In the light of bug #10727 (http://projects.puppetlabs.com/issues/10727), you might need to change this to\n\n```\nancestors = Pathname.new(self[:path]).enum_for(:ascend).map(&:to_s)\n```\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nfagerlund": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166", "body": "Oh! Thanks for catching that. (Also, I will now stop force-pushing until you're done reviewing.) \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167", "body": "Where does this get configured? Is it hard-coded in each provider? \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "3": {"branan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/2edca5f2a043fbf7c505da6dd3f8de4b54d640b2", "message": "Merge remote-tracking branch 'origin/5.3.x'"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f224e8b849ecd569ebcf11d81f1fdb292b36e95", "message": "Merge remote-tracking branch 'origin/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/ab35a0c89226476e6bfa7698c096fcdeb8af1f8f", "message": "Merge pull request #6548 from joshcooper/ticket/4.10.x/webrick-part-deux\n\n(PUP-8297) Ensure we call SSLSocket#accept once"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6485", "title": "(maint) Allow numeric hostnames in hiera_in_templates test", "body": "This test creates a hash of hostname -> directory, and stores it in\r\nYAML for hiera to query. If the hostname happens to be purely numeric,\r\nthe key in the hash will be a number, rather than a string. Facter\r\nalways returns the `hostname` fact as a string. This causes the hash\r\nlookup in the puppet code to fail, and the manifest to fail to\r\ncompile.\r\n\r\nThe fix is to prepend a bit of non-numeric junk to the hostname, so\r\nthat the key in hiera is always string.\r\n  ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hlindberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/7d6318c212c595fa05662e08fbc474af2ea95663", "message": "Merge pull request #6542 from hlindberg/PUP-8343_let-rich-data-params-through-to-resources\n\n(PUP-8343) let rich data params through to resources"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshcooper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/70e54bbd921a81d0e392e0d0aa646c181c826473", "message": "Merge pull request #6448 from jtappa/PUP-7397-filebucket-use-replace_file-jtappa\n\n(PUP-7397) Atomically update filebucket contents files"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/f6ad87a097d8bc84f11f3c64855a4157934a9b0b", "message": "(PUP-8297) Ensure we call SSLSocket#accept once\n\nPreviously, our webrick code set the webrick option SSLStartImmediately to true\nand then called `SSLServer#start_immediately = false`, in that order. Ruby\nversions 2.3.6/2.4.3 and up will skip the call to SSLSocket#accept if the\nSSLStartImmediately option is false. However, older versions will skip the call\nif the SSLServer `@start_immediately` instance variable is false[1].\n\nPrior to commit a358d5ec0, newer ruby versions caused an error because\nSSLSocket#accept was called twice on the same socket, once by webrick and again\nby us.\n\nCommit a358d5ec0 fixed the newer ruby case, but regressed on the older ruby\ncase, since SSLSocket#accept was never being called.\n\nThis commit eliminates the call to `start_immediately = false`, and sets the\nconfiguration option to false. This works as far back as ruby 1.9.3, while\npreserving the intent of the original issue[2].\n\nPaired-with: Jacob Helwig <jacob@puppet.com>\n\n[1] https://github.com/ruby/ruby/commit/2e728d51e70\n[1] https://projects.puppetlabs.com/issues/2637"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8d66a8bd4776ff2976cf83f3e1e2b8e7a7e895b3", "message": "(maint) Don't stub out setup_logger and setup_ssl methods\n\nStop stubbing setup_logger and setup_ssl in the main example group so that we\nfull exercise the code we're trying to test. This commit moves the cert related\nstubs from one of the nested example groups to the main one."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/e451a274aad622f6bbb101b2a3b9a6e45ac20888", "message": "Merge pull request #6526 from gguillotte/DOCUMENT-777\n\n(docs)(DOCUMENT-777)(PUP-8211) Clarify managehome."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c1186b85ffb09c3ee62d8f077cb086e5a9162aaf", "message": "Merge pull request #6534 from pcarlisle/fix-crontab-spec\n\n(maint) Make crontab provider suitable in specs"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f160d70023e6310bbecf1e6d327f8f897f4fba4", "message": "Merge pull request #6543 from ploubser/PUP-8227_fix_test\n\n(PUP-8227) Update transaction tests"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701", "body": "Ah, yes. I had originally added this when trying to fix this bug a different way. But after changing the implementation I forgot to remove the test. I'll fix that. \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598", "body": "After more research, both cygwin and vim strictly look at the FILE_PERSISTENT_ACLS flag when determining whether to get/set ACLs, ignoring the fstype. So while it's possible FILE_PERSISTENT_ACLS could be set while fstype is not NTFS, just checking the flag seems to be the right thing to do.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jtappa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c8213d117a17a2482d2c0f0b2813b256b8c366f3", "message": "Merge pull request #6522 from ericldelaney/task/5.3.x/PUP-8321/update_deprecation_warning_translations\n\n(PUP-8321) add translations for deprecation_warning messages"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0a70205a2c9e5c3854a2d961f4547f4f71f9ad08", "message": "Merge pull request #6530 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_4\n\n(PUP-8347) usr error_location for auth config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/61a9a1c2c14ab1f0917276a8f3d1e0674859d491", "message": "Merge pull request #6535 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_5\n\n(PUP-8347) use error_location for network device config file"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/97681bfab11cff145cf675d0b829f8f228e2303e", "message": "Merge pull request #6544 from melissa/maint/5.3.x/merge-4.10.x\n\nMaint/5.3.x/merge 4.10.x"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "melissa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/378eb76d603685e870fd167bde3feddd4b50eecc", "message": "Merge pull request #6529 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_3\n\n(PUP-8347) add error_location to config file errors."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/3c09d97c69b965ea988bb45a89f8b2f2745e59bf", "message": "Merge pull request #6528 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_2\n\n(PUP-8347) use error_location in file_server config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/41c3b23553f353dc26f82c1e8fe8c5daea779444", "message": "Merge pull request #6540 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_6\n\n(PUP-8347) use error_location in Puppet::Pops::Issues"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/6edca29b9dacb688e9c7f2723f35ee4a4748af20", "message": "Merge remote-tracking branch 'upstream/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c40d1f25e0c6f708774f9f708e8349bd56093bc9", "message": "Merge pull request #6433 from suckatrash/PUP-7968\n\n(PUP-7968) [#puppethack] Add a default to present for the ensure param"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6545", "title": "(PUP-8268) aio setup should use new install method", "body": "This commit updates the aio setup steps to install puppet and\r\npuppetserver with new methods added to beaker. These install the\r\npackages based on data gathered from a yaml file, rather than trying to\r\nfigure out what the path to the artifact or repo file is.\r\n\r\nThis commit does not attempt to make the same change for the EC2 install\r\n(as it's dependent on external infrastructure and the new install\r\nmethods rely on internal-only infrastructure). Nor does this commit\r\nattempt to update the puppetserver nightly install. Nightlies is going\r\nto change soon, so it is not worth updating those methods currently.\r\n\r\nThis commit also updates beaker and beaker-hostgenerator versions. This\r\nchange depends on code available in these newer releases. It also adds\r\nbeaker-puppet to the Gemfile, as we should be explicit about this\r\ndependency since we are using methods that are specific to\r\nbeaker-puppet.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6477", "title": "(PUP-8268) Use new install methods", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ericldelaney": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/d012b2ea9b4d39d61d7b6510526914d3183f858c", "message": "(PUP-8347) usr error_location for auth config parsing\n\nUse the error_location() method when parsing network auth config files\nChanged invalid entry error message"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0753bfeae7259876c98a5ac0468a8c275962c9dc", "message": "(PUP-8347) use error_location for file_server config\n\nUse error_location() in the file_server config file parser code\nUpdated invalid entry string"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/703a099700635eed9cce962c3a84b63eb1b4bb63", "message": "(PUP-8347) use error_location for network device config file\n\nUse the error_location() to tell the error location when processing\nthe network device config file\nRefactored the code to be more understandable\nChanged invalid entry error string"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6549", "title": "(maint) update error_location() to prefer nil and documentation", "body": "Updated error_location() to be called with nil when something is not known\r\nbut understand empty string too. Along with documentation updates", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6527", "title": "(PUP-8347) add use error_location for parser/scope.rb", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6349", "title": "(PUP-8080) Add tests for i18n, puppet, and modules", "body": "This is an initial set of tests for testing i18n and modules\r\nThe puppet_agent_with_module.rb test fails based on the current agent\r\nAdded puppet resource translation test\r\nAdded puppet application/face translation test", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thallgren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/60f5a5137863625db6f178c4e8e276d08b4cd273", "message": "Merge pull request #6533 from nicklewis/PUP-8357-correctly-match-task-files\n\n(PUP-8357) Correctly match files for tasks"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6118", "title": "(PUP-7834) Replace all calls to YAML.load with YAML.safe_load", "body": "This commit replaces all calls to the unsafe `YAML.load` method with\r\ncalls to `YAML.safe_load` to gain control over exactly what classes that\r\nare permitted to create instances during the load.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicklewis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/1c262644f8a91b1281466c996b941e3c6e127124", "message": "(PUP-8357) Correctly match files for tasks\n\nPreviously, the existing_paths method for the FileBased loader was using\nnaive string matching to determine which files were associated with a\nparticular task. This resulted in the wrong set of files being found for\na task, in the case where the name of one task was a prefix of the name\nof an adjacent task. For example, task `foo` would match both `foo.py`\nand `foobar.py`. The desired behavior is that filenames need to match\nall the way up to the file extension, in order to be associated with a\nparticular task.\n\nThis commit changes the existing_paths method to compare basenames\nexactly, excluding file extensions."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937", "body": "Hi,\n\nWe don't use GitHub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks,\nNick Lewis\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jhelwig": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/9d49cd92cf3e0f15613a0bf46e0ebb576ae36d03", "message": "Merge pull request #6510 from kris-bosland/fix/master/pup-8342\n\n(PUP-8342) Update report schema to include transaction_completed"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178", "body": "As noted in [the Redmine ticket](https://projects.puppetlabs.com/issues/8677), vcsrepo shouldn't have been merged into core, and has since been removed.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043", "body": "Haven't really looked at the changes yet, but the tests and the implementation should be squashed into one commit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492", "body": "This isn't quite ready.  While it fixes the problem for that specific ordering, there is still cache_class leakage.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201", "body": "Lost a few necessary changes in the original commit, which are now included in the updated version.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628", "body": "So, I'm a little confused as to what this is actually testing.  It looks like it would belong in the type instead of the provider, if anywhere, though I'm not sure it's actually testing anything specific to the package type, or msi provider.  Looks like it's testing the generic behavior of types (that parameters/properties set with new are available from the resource via the hash accessor method).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206", "body": "Stale debugging statement?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152", "body": "There's introduced trailing whitespace on this line.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159", "body": "More trailing whitespace introduced here.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161", "body": "It's not always <= 500.  The number is configurable by the end-user, and it isn't the same on all distributions.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168", "body": "It may be better to state that it's an artifact of the internal implementation of Puppet rather than making any claims as to its permanence since there are not definite plans to do anything with/to it, even though there are some objections to its existence.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192", "body": "It's a system level configuration, and I'm pretty sure the providers just let the system tools take care of it.  On Linux (Ubuntu) it's in `/etc/login.defs` defined by `SYS_UID_MIN` and `SYS_UID_MAX`.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593", "body": "Talking things through with Josh, it doesn't seem like this check is actually sufficient to limit to filesystems that will behave properly with setting the ACLs.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541", "body": "Talking with Josh, it sounds like this comment is a left-over from a previous version of this test, and should go away.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442", "body": "So, what's the reason for switching `PKG_PATH` to a string from the original symbol?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446", "body": "I'd be really good to have the double chomp explained in the commit message (and even better if there was a comment added explaining it in the code).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "justinstoller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6547", "title": "(PUP-8363) Do not use system_uptime fact on windows", "body": "Previously, we used the system_uptime fact as a form of randomness when\r\ntesting that topscope variables (ie, return values from pure puppet functions\r\nthat do not enter ruby land) were refreshed when environment_timeout was\r\nunlimited.\r\n\r\nUnfortunately, facter's system_uptime may not return a valid value on\r\nWindows (see FACT-1504 for details).\r\n\r\nTo avoid using Ruby on the server, while still having a constantly\r\nchanging variable, we continue to use the agents under test to provide a\r\nvalue (fact) but now move from using system_uptime to an external fact.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gguillotte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6539", "title": "(docs) Update README links.", "body": "Update links to the docs site in the README, and point relative\r\ndeveloper docs links to absolute GitHub URLs in order to resolve issues\r\nwith YARD-generated docs and the Puppet docs site.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pcarlisle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6536", "title": "(maint) Pass through text domain when loading translations", "body": "If this isn't passed through the tests can fail sometimes depending on\r\nthe order in which they're run. I don't think this is ever a problem in\r\nproduction but adding an argument with a default makes it a little more\r\nrobust.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsane": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6532", "title": "(PUP-8356) Base fips specific behaviors without using facts", "body": "We need to adjust some settings based on whether fips mode is enabled\r\nor not for FIPS compliance. Till now the later was done using a fact (PUP-8141).\r\nHowever that created a dependency in puppetserver which cannot load facts in certain configurations like dev testing and running from sources.\r\nThis change implements fips mode detection using a local method instead of facter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6508", "title": "(PUP-4963) Puppet module build fails on FIPS enabled system", "body": "We now disallow the module tool operations of install, uninstall, and upgrade\r\nbesides building to be able to provide an appropriate error message instead\r\nof the operations getting aborted due to FIPS preventing use of any\r\nunapproved algorithms/operations like MD5.\r\nModule checksums use MD5 and cannot be changed easily without requiring a\r\nlarge number of design changes throughout.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5855", "title": "(PUP-7519) Enabling rubocop securitycop scans", "body": "Background: Rubocop scans were not running as the various cops in .rubocop.yml were not kept uptodate with the latest definitions. This will enable only SecurityCop/YAMLLoad as a start to revive the scans in an effort to flag any inadvertent usages.  Additional security or other cop rules can/would be added in future.   \r\nRubocop do not have support for flagging YAML.load_file which would have been desirable. Likewise it is not necessary to mark the known instance of Yaml.load_file in Puppet::Util::Yaml to be ignored.\r\n\r\nNote that there are a couple of other YAML.load instances elsewhere so this may generate violations. If that is not desired this PR be merged after all these have been resolved/changed appropriately. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wiccan2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6525", "title": "(PUP-3802) Fix yaourt on Arch linux.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Iristyle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6513", "title": "(PUP-8337) Change Windows symlink? check behavior", "body": " - Previously, any file that returned FILE_ATTRIBUTE_REPARSE_POINT\r\n   in a call to GetFileAttributes would be considered a \"symlink\" for\r\n   Puppets purpose. This is relevant specifically to file resources.\r\n\r\n   However, Puppet cannot resolve the destination location for many of\r\n   the reparse point types, namely the following (some of which may\r\n   not actually resolve to a different path):\r\n\r\n   IO_REPARSE_TAG_HSM\r\n   IO_REPARSE_TAG_HSM2\r\n   IO_REPARSE_TAG_SIS\r\n   IO_REPARSE_TAG_WIM\r\n   IO_REPARSE_TAG_CSV\r\n   IO_REPARSE_TAG_DFS\r\n   IO_REPARSE_TAG_DFSR\r\n   IO_REPARSE_TAG_DEDUP\r\n   IO_REPARSE_TAG_NFS\r\n\r\n - Modify the behavior of symlink? such that Puppet only considers\r\n   reparse points IO_REPARSE_TAG_MOUNT_POINT, IO_REPARSE_TAG_SYMLINK\r\n   as resolvable symlinks.\r\n\r\n   The others will continue to be treated as regular files /\r\n   directories.\r\n\r\n - Existing symlink? behavior has been factored out to a reparse_point?\r\n   method responsible for only validating the file attribute contains\r\n   the reparse attribute.\r\n\r\n - This introduces some additional work once a path is determined as a\r\n   reparse point, but this should not happen regularly as reparse\r\n   points are typically fairly rare on Windows systems.\r\n\r\n - Change the behavior of exist? to function similarly to symlink? in that\r\n   only understandable symlinks will be followed. exist? will return true\r\n   for reparse points that are not mount or symlink reparse points", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6298", "title": "(PUP-7019) Map Windows codepages to Ruby encodings", "body": " - INCOMPLETE\r\n   includes some WIP .rb files that can be trashed once they're fully\r\n   integrated into the existing Puppet code in this PR\r\n\r\n - Make tests more dynamically understand how Windows codepages map to\r\n   Ruby encodings.\r\n\r\n   Ruby carries a bucket of different Encodings, some of which appear\r\n   to be pretty platform specific.\r\n\r\n   This can impact some tests.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5988", "title": "(WIP) ci:test:git for SLES11", "body": "", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5971", "title": "(PUP-7648) Fix ci:test:git pre-suite on OSX 10.11", "body": "- A number of problems prevented ci:test:git from executing properly\r\n   on OSX 10.11:\r\n\r\n   * When performing a `gem install bundler`, system Ruby places the\r\n     binstub in /usr/local/bin. However, the SSH environment is not\r\n     configured with /usr/local/bin in PATH. There are multiple\r\n     solutions to this problem:\r\n\r\n      - Add /usr/local/bin to ~/.ssh/environment in Beaker - covered\r\n        in BKR-1139. This allows any additional binaries that might\r\n        be installed (homebrew, git, other Ruby gems with binstubs\r\n        such as puppet and facter) to be available. This is the most\r\n        effective universal solution but requires a Beaker release.\r\n\r\n        A workaround is in place to do this in 000_EnvSetup of the\r\n        pre-suite until Beaker changes land.\r\n\r\n      - Add to the host[:host_env] hash of environment variables via\r\n        a Beaker options file, so that PATH is augmented with\r\n        /usr/local/bin. Unfortunately this requires setting additional\r\n        hosts / options files on disk prior to any code running in\r\n        the Puppet pre-suite, to be picked up during Beakers host\r\n        initialization and injected into ~/.ssh/environment correctly.\r\n        Otherwise, the PATH would have to be manipulated in each new\r\n        SSH command. Due to beaker-hostgenerator commonly being used\r\n        to execute, its simpler to avoid this option.\r\n\r\n        Note that beaker-hostgenerator should also allow arbitrary\r\n        settings injection using {} syntax, but this doesn't appear to\r\n        work properly with ci:test:git and it's uncertain if it\r\n        properly handles the :host_env hash when writing to YAML.\r\n\r\n   * When performing `bundle install`, ensure Ruby is configured to\r\n     use OSX platform specific gems where possible. This impacts\r\n     the inclusion of CFPropertyList.\r\n\r\n   * Due to OSX SIP (System Integrity Protection) /usr/bin is not\r\n     writable and /usr/local/bin should be used instead. Override\r\n     Beakers default puppetbindir setting to /usr/local/bin and use\r\n     that as the --binstub directory when installing the Puppet source\r\n     with Bundler. binstubs should continue to use /usr/bin/ruby as\r\n     the interpreter.\r\n\r\n   * Similarly, when calling install.rb, provide --bindir as the same\r\n     /usr/local/bin as the system Ruby binstub dir is not otherwise\r\n     writable. Beaker helpers will fully qualify the path to puppet\r\n     using the puppetbindir setting already.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5780", "title": "(DO NOT MERGE)(maint) Set BUNDLE_SPECIFIC_PLATFORM=true", "body": "**This might be one to outright close, but note that without it we're not using platform-specific Facter which depends on CFPropertyList**\r\n\r\n - Bundler, under some circumstances, may not install platform-specific\r\n   gems.  For instance, using a bundle install of the Puppet Gemfile\r\n   will not install the universal-darwin version of Facter.\r\n\r\n - Set the environment variable BUNDLE_SPECIFIC_PLATFORM also\r\n   had to be set to properly use platform-specific versions of any\r\n   gems that have been referenced.  This will be the default behavior\r\n   in Bundler 2, and given platform-specific versions of Facter are\r\n   shipped - should always be the case for Puppet. Without setting\r\n   this Bundler will raise a warning during installation.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5717", "title": "(maint) Address incorrect argument passing within Puppet", "body": "These were discovered with the aid of RubyMines `Incorrect call argument count` inspection, which is just one of many inspections it supports in code analysis..  There were a lot of false positives that turned up, but these seem legit.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gdubicki": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6476", "title": "(PUP-4678) Allow yumrepo priority below the default", "body": "The default priority is 99 so limiting it with puppet to\r\n99 too made it impossible to add a repository with a lower\r\npriority to protect system packages. This change removes\r\nthis limitation.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucywyman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6475", "title": "(PUP-8298) Add invalid task error", "body": "Adds invalid task name issue type so that when an invalid task name is called from a plan there's an appropriate error type and message for it.  Relates to BOLT-261.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ekohl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6438", "title": "[WIP] PUP-7474: Always generate the subjectAltNames per RFC2818", "body": "This ensures the there is always a subjectAltNames in a CSR with the common name. The allow_dns_alt_names option is changed to ignore the CN matching the subjectAltNames.\n\nCurrently it's untested hence the WIP flag.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharpie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6434", "title": "(PUP 7779) [#puppethack] Resurrect puppet facts upload", "body": "This changeset reverts pieces of [PUP-2560](https://tickets.puppetlabs.com/browse/PUP-2560) in order to re-add the ability to upload facts outside of a catalog request. Specifically, this patch re-adds the following functionality:\r\n\r\n  - The `puppet facts upload` command.\r\n\r\n  - The Puppet::Node::Facts::Rest terminus for saving facts to Puppet Servers.\r\n\r\n  - The ability to handle requests for the `/puppet/v3/facts` endpoint.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mwaggett": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6414", "title": "(maint) Ensure projects can handle fedora without the f prefix", "body": "This commit removes the 'fedora-prefix' from the filename in acceptance tests.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "treydock": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6411", "title": "(PUP-8223) Improve user and group forcelocal support", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrwahl2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6333", "title": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider", "body": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider\r\n\r\nWithout this patch applied, the redhat service provider is not idempotent\r\nin enabling SLES 11 boot services. These are special Sys V services beginning\r\nwith the string 'boot.'. When `chkconfig` is run against them, they print\r\n'<name>  B' instead of '<name>  on', so the existing regex does not match them.\r\nThus the redhat provider always sees them as disabled, and tries to enable\r\nthem on each agent run.\r\n\r\nThis patch adds the '<name>  B' condition to the regex.\r\n\r\n```\r\n$ chkconfig boot.kdump\r\nboot.kdump  B\r\n```\r\n\r\nBefore:\r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\nNotice: /Stage[main]/Kdump/Service[kdump]/enable: enable changed 'false' to 'true'\r\n```\r\n\r\nAfter: \r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukebigum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6317", "title": "(PUP-8098) adding 'acltype' as a valid property for a ZFS file system", "body": "Adds property 'acltype' to the accepted list of ZFS properties.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barriserloth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6175", "title": "(PUP-8015) Add a `puppet ssl` face for generating csrs without needing to connect to a master", "body": "This commit moves the puppet-agent-bootstrap code created by Adrien\r\nThebo (https://github.com/adrienthebo/puppet-agent-bootstrap/) to the\r\npuppetlabs github space, and adds rspec tests to go along with the\r\nbootstrap changes.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkishel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5814", "title": "(PUP-6134) Explicitly locate gemcmd windows", "body": "On Windows:\r\n\r\nPuppet is unable to install a ruby gem anywhere other than Puppet's ruby.\r\nCaused by Puppet prepending its paths (including our gem) to PATH.\r\nThis fix removes Puppet's paths from PATH when setting :gemcmd.\r\n\r\n(A larger-scale solution would involve a path/target parameter to Package.)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamtur01": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556", "body": "Simon\n\nCan you log a ticket with your commit please?\n\nhttp://projects.puppetlabs.com/projects/puppet\n\nGood catch and thanks btw!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676", "body": "Bryan - we're trying to standardize on the following workflow:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nCould you please send the commit to the list too?\n\nThanks for this!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204", "body": "Hi Keymon \n\nWe don't use GitHiub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks!\n\nJames Turnbull\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644", "body": "Closed in Redmine.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235", "body": "Hi - we don't use GitHub's pull requests for merging code.\n\nYou can see our process at:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nBut in summary we'd like you:\n1. To open a ticket in Redmine (http://projects.puppetlabs.com/projects/puppet/issues/new)\n2. Sign a CLA\n3. Send your code to our -dev list for comment!\n\nThanks for your commit!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Savar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601", "body": "See:\n\nhttp://projects.puppetlabs.com/issues/4860\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mmrobins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391", "body": "Hi rodjek,  Thanks for the patch.  I know it's a small change, but if you could follow our dev process for submitting code it would be helpful to us:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThis allows us to keep track of what we need to do, prioritize it, and communicate changes to our community better.  We are also asking contributors to sign a CLA to avoid licensing issues with the code base.\nThanks\nMatt Robinson\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396", "body": "rodjek,\nSame comment about the dev process for this pull request as the last one.  We wish there was a way to turn github pull requests off to avoid this confusion, but there doesn't appear to be.\nMatt\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432", "body": "eloyesp, we **are** collaborating, we just ask that patches not be submitted using Github pull requests.  As I mentioned to rodjek in another pull request, we outline the process for submitting code to Puppet here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nWe get a lot of code submissions and have a lot of tickets to keep track of, so following that process makes it easier for us to track and manage all that change than the Github interface does.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221", "body": "Thanks for the patch, but the tests need to pass (http://projects.puppetlabs.com/projects/puppet/wiki/Development_Writing_Tests#Running+Tests) before we can accept it (currently 1 failure in the specs with your change that should be easy to fix), and we generally don't take pull requests from Github.  Part of the reason for that is that we need Community License Agreements signed before we accept contributions.  \n\nSee our Development Lifecycle Wiki for more info if you'd like to contribute: http://projects.puppetlabs.com/projects/puppet/wiki/Development_Development_Lifecycle\n\nWe're definitely looking for help on Ruby 1.9 compatibility, so it would be great if you continued to work on that.  Currently not all the tests pass under Ruby 1.9, but we need them to continue passing under 1.8.5 and greater.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260", "body": "Great, thanks.  Let us know if you need help.\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/IRC_Channel\nhttps://groups.google.com/group/puppet-dev\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427", "body": "Thanks for bringing this up.  Our support for Ruby versions is actually a little more complicated and the README and our docs need to be updated with this information.  Ruby 1.9.2 is supported for our 2.7.x code, which is still in RC and should be released in the near future.  More info here:\n\nhttp://projects.puppetlabs.com/issues/7506\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eloyesp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814", "body": "so you are **not** collaborating?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aredridel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251", "body": "Alright. I can do that.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bodepd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367", "body": "+1 from me\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nanliu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706", "body": "Squashed into a single commit. Originally split in two because spec test still needed some work.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464", "body": "You can configure this for apply/agent, perhaps we need an [apply] section:\n\n[main]\n  classfile = $vardir/state/apply_classes.txt\n\n[agent]\n  classfile = $vardir/state/classes.txt\n\nI agree this should be clearly spelled out in release documentation.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "slippycheeze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274", "body": "Puppet apply can be used for any number of things, including one-shot modifications to a system.  Dropping all the data from regular runs just because someone ran something through it seems risky: your database server would stop being a database server until the next full run, which is probably not what you want.\n\nI am pretty sure this is an unresolvable problem, because we have a single piece of data (classes.txt) that is trying to represent something much more dynamic, the set of applicable classes (or, perhaps, successfully applied classes) of the machine at a point in time.\n\nMaking this optional, or writing to a separate file, would be much more acceptable.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171", "body": "I don't think this is the right strategy: it seems that you are patching the individual test scripts that show errors, rather than addressing this globally.  To me, if feels very much like that would be the right solution: then, _all_ tests that have ordering dependencies will work, or fail, on their own merits.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408", "body": "After discussion, the global behaviour is correct but too slow (2x to 3x slower) to want to do all the time.  \n\nhttp://projects.puppetlabs.com/issues/9026 captures the desire to have a mode where CI can run the expensive operations (and reveal our failures) without having to pay that when _most_ of the time it isn't bringing any huge benefit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333", "body": "Hey.  Thanks for the contribution; we probably need to fill out that test before merging.  Otherwise it would be all too easy to revert the behaviour. :)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350", "body": "I ended up taking a closer look at the testing code, and I got nothing.  The obvious choice, of ginning up a report in the right state, and testing that the function returns, wouldn't add much value without a negative `expects`; mostly, it looks like the code should go in without the test being filled out at this time.\n\nI am going to leave this open for a bit longer and see if anyone else has a brilliant idea, though...\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481", "body": "I believe this is wrong for Win32 support, and `root?` knows more about that platform.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489", "body": "I think that this should delegate caching to the underlying layer, since this release will have a Facter release that handles that effectively nearby.\n\nAt the very least it should detect if it should delegate caching to the indirection, which allows the endpoint to determine the most appropriate TTL, etc, for a fact value.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490", "body": "Shouldn't this happen implicitly, rather than by extending the ABI of the terminus in a non-standard way?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491", "body": "Should this code even be doing that by hand?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495", "body": "....sooo.  Now the testing that we can load facts from disk doesn't actually load facts from disk.  That doesn't fill me with comfort that these tests are worth anything.\n\nIf they really are too slow to use, we should probably just delete them entirely rather than stubbing out fundamental parts of them.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jeffmccune": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928", "body": "Daniel,\n\nI'm in agreement with Nan.\n\nWe do make claims that puppet apply is a \"first class citizen\" and community members like Jordan Sissel heavily rely on puppet apply being feature complete with puppet agent.\n\nFurthermore, puppet apply is more suitable for situations like Vagrant where a full master is not avaialable or necessary.\n\nFinally, as we integrate more with MCollective, the classes.txt file becomes ever more important for filtering.\n\nFor these reasons I think we should still write the file and we should write it to the same file the agent writes to by default.\n\nIf the end user desires, we support writing to multiple files as Nan illustrated above.\n\nI'll re-open this once.  If you still disagree, please feel free to close the pull request and I won't re-open it.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166", "body": "@masterzen, when I run the rspec tests I'm getting:\n\n```\nFailures:\n\n  1) Puppet::SSL::Host should allow to reset localhost\n     Failure/Error: previous_host = Puppet::SSL::Host.localhost\n     Puppet::Error:\n       Cannot save maynard.lan; parent directory /var/folders/hq/hhqxfhws68bc_s23f2ktyx0m0000gp/T/ssl_host_testing20110914-2703-fzokxv-0/ssl/private_keys does not exist\n     # ./lib/puppet/indirector/ssl_file.rb:95:in `save'\n     # ./lib/puppet/indirector/key/file.rb:34:in `save'\n     # ./lib/puppet/indirector/indirection.rb:265:in `save'\n     # ./lib/puppet/ssl/host.rb:147:in `generate_key'\n     # ./lib/puppet/ssl/host.rb:176:in `certificate'\n     # ./lib/puppet/ssl/host.rb:32:in `localhost'\n     # ./spec/unit/ssl/host_spec.rb:69\n\nFinished in 86.56 seconds\n13046 examples, 1 failure, 90 pending\n\nFailed examples:\n\nrspec ./spec/unit/ssl/host_spec.rb:68 # Puppet::SSL::Host should allow to reset localhost\nrspec spec/**/*_spec.rb  80.95s user 7.84s system 97% cpu 1:31.54 total\n```\n\nDo you have any idea of how to make this more robust?  Unfortunately none jump out at me at the moment.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dingus9": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964", "body": "File added in /ext/kate/puppet.xml\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333", "body": "Works for me.\n\nAnd this is actually just a TextMate thing - it does it automatically to all created files, and I didn't bother turning it off.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735", "body": "Yeah, when I rebased this I knew it would conflict - I think the right approach is to move SUIDmanager.root? into the feature - the reason I made this change here is that without it you have pretty ugly loading issues, and there's no fundamental reason why SUIDmanager should have the 'root?' method.d\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741", "body": "This is probably the thing I'm least happy with.\n\nMy first version didn't do any caching but had a noticeable (at least when running the tests) cost, because we were retrieving all facts every time someone asked for a fact.\n\nI also considered making it easy to retrieve a single fact from the backing terminus, but this approach seemed much less evil.\n\nI'm a touch uncomfortable relying on Facter for caching, because it essentially assumes that Facter's caching priorities will always match Puppet's, which isn't necessarily the case.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749", "body": "How would you do that?  This is the other area that's obviously questionable, but I couldn't come up with a better option, and if I had to choose between hard-coding Facter into the system and having a non-standard API for this, it was an easy choice.  It actually made me wonder if 'load' shouldn't become a standard part of the indirector - I could see other terminus types needing some kind of initialization method.\n\nThere are unfortunately a few places that need to explicitly cause facts to get loaded (e.g., after they're downloaded as part of pluginsync).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752", "body": "I doubt it, but rather than judge that I decided to retain existing behavior.\n\nI believe I looked closely at the tests and it was impossible to determine \"right\" behavior, so I stuck with existing behavior.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755", "body": "Hmm, that's probably true.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "masterzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358", "body": "Yes, my bad. The test passes fine when run isolated but combined in the whole suite it fails. Something prevents the directory to be created apparently.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590", "body": "In the light of bug #10727 (http://projects.puppetlabs.com/issues/10727), you might need to change this to\n\n```\nancestors = Pathname.new(self[:path]).enum_for(:ascend).map(&:to_s)\n```\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nfagerlund": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166", "body": "Oh! Thanks for catching that. (Also, I will now stop force-pushing until you're done reviewing.) \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167", "body": "Where does this get configured? Is it hard-coded in each provider? \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "4": {"branan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/2edca5f2a043fbf7c505da6dd3f8de4b54d640b2", "message": "Merge remote-tracking branch 'origin/5.3.x'"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f224e8b849ecd569ebcf11d81f1fdb292b36e95", "message": "Merge remote-tracking branch 'origin/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/ab35a0c89226476e6bfa7698c096fcdeb8af1f8f", "message": "Merge pull request #6548 from joshcooper/ticket/4.10.x/webrick-part-deux\n\n(PUP-8297) Ensure we call SSLSocket#accept once"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6485", "title": "(maint) Allow numeric hostnames in hiera_in_templates test", "body": "This test creates a hash of hostname -> directory, and stores it in\r\nYAML for hiera to query. If the hostname happens to be purely numeric,\r\nthe key in the hash will be a number, rather than a string. Facter\r\nalways returns the `hostname` fact as a string. This causes the hash\r\nlookup in the puppet code to fail, and the manifest to fail to\r\ncompile.\r\n\r\nThe fix is to prepend a bit of non-numeric junk to the hostname, so\r\nthat the key in hiera is always string.\r\n  ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hlindberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/7d6318c212c595fa05662e08fbc474af2ea95663", "message": "Merge pull request #6542 from hlindberg/PUP-8343_let-rich-data-params-through-to-resources\n\n(PUP-8343) let rich data params through to resources"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshcooper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/70e54bbd921a81d0e392e0d0aa646c181c826473", "message": "Merge pull request #6448 from jtappa/PUP-7397-filebucket-use-replace_file-jtappa\n\n(PUP-7397) Atomically update filebucket contents files"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/f6ad87a097d8bc84f11f3c64855a4157934a9b0b", "message": "(PUP-8297) Ensure we call SSLSocket#accept once\n\nPreviously, our webrick code set the webrick option SSLStartImmediately to true\nand then called `SSLServer#start_immediately = false`, in that order. Ruby\nversions 2.3.6/2.4.3 and up will skip the call to SSLSocket#accept if the\nSSLStartImmediately option is false. However, older versions will skip the call\nif the SSLServer `@start_immediately` instance variable is false[1].\n\nPrior to commit a358d5ec0, newer ruby versions caused an error because\nSSLSocket#accept was called twice on the same socket, once by webrick and again\nby us.\n\nCommit a358d5ec0 fixed the newer ruby case, but regressed on the older ruby\ncase, since SSLSocket#accept was never being called.\n\nThis commit eliminates the call to `start_immediately = false`, and sets the\nconfiguration option to false. This works as far back as ruby 1.9.3, while\npreserving the intent of the original issue[2].\n\nPaired-with: Jacob Helwig <jacob@puppet.com>\n\n[1] https://github.com/ruby/ruby/commit/2e728d51e70\n[1] https://projects.puppetlabs.com/issues/2637"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/8d66a8bd4776ff2976cf83f3e1e2b8e7a7e895b3", "message": "(maint) Don't stub out setup_logger and setup_ssl methods\n\nStop stubbing setup_logger and setup_ssl in the main example group so that we\nfull exercise the code we're trying to test. This commit moves the cert related\nstubs from one of the nested example groups to the main one."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/e451a274aad622f6bbb101b2a3b9a6e45ac20888", "message": "Merge pull request #6526 from gguillotte/DOCUMENT-777\n\n(docs)(DOCUMENT-777)(PUP-8211) Clarify managehome."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c1186b85ffb09c3ee62d8f077cb086e5a9162aaf", "message": "Merge pull request #6534 from pcarlisle/fix-crontab-spec\n\n(maint) Make crontab provider suitable in specs"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/4f160d70023e6310bbecf1e6d327f8f897f4fba4", "message": "Merge pull request #6543 from ploubser/PUP-8227_fix_test\n\n(PUP-8227) Update transaction tests"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790", "body": "rismoney can you change that to:\n\n<pre>\nerr = Puppet::Util::Windows::Error.new(\"Failed to get volume information\")\nputs \"LastError=#{err.code}\"\nraise err\n</pre>\n\n\nIt may be that that particular last error code is something we can ignore...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2304790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701", "body": "Ah, yes. I had originally added this when trying to fix this bug a different way. But after changing the implementation I forgot to remove the test. I'll fix that. \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598", "body": "After more research, both cygwin and vim strictly look at the FILE_PERSISTENT_ACLS flag when determining whether to get/set ACLs, ignoring the fstype. So while it's possible FILE_PERSISTENT_ACLS could be set while fstype is not NTFS, just checking the flag seems to be the right thing to do.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/222598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jtappa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c8213d117a17a2482d2c0f0b2813b256b8c366f3", "message": "Merge pull request #6522 from ericldelaney/task/5.3.x/PUP-8321/update_deprecation_warning_translations\n\n(PUP-8321) add translations for deprecation_warning messages"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0a70205a2c9e5c3854a2d961f4547f4f71f9ad08", "message": "Merge pull request #6530 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_4\n\n(PUP-8347) usr error_location for auth config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/61a9a1c2c14ab1f0917276a8f3d1e0674859d491", "message": "Merge pull request #6535 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_5\n\n(PUP-8347) use error_location for network device config file"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/97681bfab11cff145cf675d0b829f8f228e2303e", "message": "Merge pull request #6544 from melissa/maint/5.3.x/merge-4.10.x\n\nMaint/5.3.x/merge 4.10.x"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "melissa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/378eb76d603685e870fd167bde3feddd4b50eecc", "message": "Merge pull request #6529 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_3\n\n(PUP-8347) add error_location to config file errors."}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/3c09d97c69b965ea988bb45a89f8b2f2745e59bf", "message": "Merge pull request #6528 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_2\n\n(PUP-8347) use error_location in file_server config parsing"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/41c3b23553f353dc26f82c1e8fe8c5daea779444", "message": "Merge pull request #6540 from ericldelaney/task/5.3.x/PUP-8347/use_error_location_to_report_where_in_a_file_part_6\n\n(PUP-8347) use error_location in Puppet::Pops::Issues"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/6edca29b9dacb688e9c7f2723f35ee4a4748af20", "message": "Merge remote-tracking branch 'upstream/4.10.x' into 5.3.x"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/c40d1f25e0c6f708774f9f708e8349bd56093bc9", "message": "Merge pull request #6433 from suckatrash/PUP-7968\n\n(PUP-7968) [#puppethack] Add a default to present for the ensure param"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6545", "title": "(PUP-8268) aio setup should use new install method", "body": "This commit updates the aio setup steps to install puppet and\r\npuppetserver with new methods added to beaker. These install the\r\npackages based on data gathered from a yaml file, rather than trying to\r\nfigure out what the path to the artifact or repo file is.\r\n\r\nThis commit does not attempt to make the same change for the EC2 install\r\n(as it's dependent on external infrastructure and the new install\r\nmethods rely on internal-only infrastructure). Nor does this commit\r\nattempt to update the puppetserver nightly install. Nightlies is going\r\nto change soon, so it is not worth updating those methods currently.\r\n\r\nThis commit also updates beaker and beaker-hostgenerator versions. This\r\nchange depends on code available in these newer releases. It also adds\r\nbeaker-puppet to the Gemfile, as we should be explicit about this\r\ndependency since we are using methods that are specific to\r\nbeaker-puppet.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6477", "title": "(PUP-8268) Use new install methods", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ericldelaney": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/d012b2ea9b4d39d61d7b6510526914d3183f858c", "message": "(PUP-8347) usr error_location for auth config parsing\n\nUse the error_location() method when parsing network auth config files\nChanged invalid entry error message"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/0753bfeae7259876c98a5ac0468a8c275962c9dc", "message": "(PUP-8347) use error_location for file_server config\n\nUse error_location() in the file_server config file parser code\nUpdated invalid entry string"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/commits/703a099700635eed9cce962c3a84b63eb1b4bb63", "message": "(PUP-8347) use error_location for network device config file\n\nUse the error_location() to tell the error location when processing\nthe network device config file\nRefactored the code to be more understandable\nChanged invalid entry error string"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6549", "title": "(maint) update error_location() to prefer nil and documentation", "body": "Updated error_location() to be called with nil when something is not known\r\nbut understand empty string too. Along with documentation updates", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6527", "title": "(PUP-8347) add use error_location for parser/scope.rb", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6349", "title": "(PUP-8080) Add tests for i18n, puppet, and modules", "body": "This is an initial set of tests for testing i18n and modules\r\nThe puppet_agent_with_module.rb test fails based on the current agent\r\nAdded puppet resource translation test\r\nAdded puppet application/face translation test", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thallgren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/60f5a5137863625db6f178c4e8e276d08b4cd273", "message": "Merge pull request #6533 from nicklewis/PUP-8357-correctly-match-task-files\n\n(PUP-8357) Correctly match files for tasks"}], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6118", "title": "(PUP-7834) Replace all calls to YAML.load with YAML.safe_load", "body": "This commit replaces all calls to the unsafe `YAML.load` method with\r\ncalls to `YAML.safe_load` to gain control over exactly what classes that\r\nare permitted to create instances during the load.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicklewis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/1c262644f8a91b1281466c996b941e3c6e127124", "message": "(PUP-8357) Correctly match files for tasks\n\nPreviously, the existing_paths method for the FileBased loader was using\nnaive string matching to determine which files were associated with a\nparticular task. This resulted in the wrong set of files being found for\na task, in the case where the name of one task was a prefix of the name\nof an adjacent task. For example, task `foo` would match both `foo.py`\nand `foobar.py`. The desired behavior is that filenames need to match\nall the way up to the file extension, in order to be associated with a\nparticular task.\n\nThis commit changes the existing_paths method to compare basenames\nexactly, excluding file extensions."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937", "body": "Hi,\n\nWe don't use GitHub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks,\nNick Lewis\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/611937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jhelwig": {"issues": [], "commits": [{"url": "https://api.github.com/repos/puppetlabs/puppet/commits/9d49cd92cf3e0f15613a0bf46e0ebb576ae36d03", "message": "Merge pull request #6510 from kris-bosland/fix/master/pup-8342\n\n(PUP-8342) Update report schema to include transaction_completed"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/822946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243", "body": "Unfortunately, we don't use pull requests for the Puppet Labs projects.  The [Development Lifecycle wiki page](http://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle) has the preferred method of submitting patches.  Thanks for doing the work on this!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/910243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178", "body": "As noted in [the Redmine ticket](https://projects.puppetlabs.com/issues/8677), vcsrepo shouldn't have been merged into core, and has since been removed.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1714178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043", "body": "Haven't really looked at the changes yet, but the tests and the implementation should be squashed into one commit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1721043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492", "body": "This isn't quite ready.  While it fixes the problem for that specific ordering, there is still cache_class leakage.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1812492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201", "body": "Lost a few necessary changes in the original commit, which are now included in the updated version.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1813201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628", "body": "So, I'm a little confused as to what this is actually testing.  It looks like it would belong in the type instead of the provider, if anywhere, though I'm not sure it's actually testing anything specific to the package type, or msi provider.  Looks like it's testing the generic behavior of types (that parameters/properties set with new are available from the resource via the hash accessor method).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206", "body": "Stale debugging statement?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/160206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152", "body": "There's introduced trailing whitespace on this line.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159", "body": "More trailing whitespace introduced here.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161", "body": "It's not always <= 500.  The number is configurable by the end-user, and it isn't the same on all distributions.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168", "body": "It may be better to state that it's an artifact of the internal implementation of Puppet rather than making any claims as to its permanence since there are not definite plans to do anything with/to it, even though there are some objections to its existence.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192", "body": "It's a system level configuration, and I'm pretty sure the providers just let the system tools take care of it.  On Linux (Ubuntu) it's in `/etc/login.defs` defined by `SYS_UID_MIN` and `SYS_UID_MAX`.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593", "body": "Talking things through with Josh, it doesn't seem like this check is actually sufficient to limit to filesystems that will behave properly with setting the ACLs.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/219593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541", "body": "Talking with Josh, it sounds like this comment is a left-over from a previous version of this test, and should go away.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442", "body": "So, what's the reason for switching `PKG_PATH` to a string from the original symbol?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446", "body": "I'd be really good to have the double chomp explained in the commit message (and even better if there was a comment added explaining it in the code).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/237446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "justinstoller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6547", "title": "(PUP-8363) Do not use system_uptime fact on windows", "body": "Previously, we used the system_uptime fact as a form of randomness when\r\ntesting that topscope variables (ie, return values from pure puppet functions\r\nthat do not enter ruby land) were refreshed when environment_timeout was\r\nunlimited.\r\n\r\nUnfortunately, facter's system_uptime may not return a valid value on\r\nWindows (see FACT-1504 for details).\r\n\r\nTo avoid using Ruby on the server, while still having a constantly\r\nchanging variable, we continue to use the agents under test to provide a\r\nvalue (fact) but now move from using system_uptime to an external fact.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gguillotte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6539", "title": "(docs) Update README links.", "body": "Update links to the docs site in the README, and point relative\r\ndeveloper docs links to absolute GitHub URLs in order to resolve issues\r\nwith YARD-generated docs and the Puppet docs site.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pcarlisle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6536", "title": "(maint) Pass through text domain when loading translations", "body": "If this isn't passed through the tests can fail sometimes depending on\r\nthe order in which they're run. I don't think this is ever a problem in\r\nproduction but adding an argument with a default makes it a little more\r\nrobust.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsane": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6532", "title": "(PUP-8356) Base fips specific behaviors without using facts", "body": "We need to adjust some settings based on whether fips mode is enabled\r\nor not for FIPS compliance. Till now the later was done using a fact (PUP-8141).\r\nHowever that created a dependency in puppetserver which cannot load facts in certain configurations like dev testing and running from sources.\r\nThis change implements fips mode detection using a local method instead of facter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6508", "title": "(PUP-4963) Puppet module build fails on FIPS enabled system", "body": "We now disallow the module tool operations of install, uninstall, and upgrade\r\nbesides building to be able to provide an appropriate error message instead\r\nof the operations getting aborted due to FIPS preventing use of any\r\nunapproved algorithms/operations like MD5.\r\nModule checksums use MD5 and cannot be changed easily without requiring a\r\nlarge number of design changes throughout.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5855", "title": "(PUP-7519) Enabling rubocop securitycop scans", "body": "Background: Rubocop scans were not running as the various cops in .rubocop.yml were not kept uptodate with the latest definitions. This will enable only SecurityCop/YAMLLoad as a start to revive the scans in an effort to flag any inadvertent usages.  Additional security or other cop rules can/would be added in future.   \r\nRubocop do not have support for flagging YAML.load_file which would have been desirable. Likewise it is not necessary to mark the known instance of Yaml.load_file in Puppet::Util::Yaml to be ignored.\r\n\r\nNote that there are a couple of other YAML.load instances elsewhere so this may generate violations. If that is not desired this PR be merged after all these have been resolved/changed appropriately. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wiccan2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6525", "title": "(PUP-3802) Fix yaourt on Arch linux.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Iristyle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6513", "title": "(PUP-8337) Change Windows symlink? check behavior", "body": " - Previously, any file that returned FILE_ATTRIBUTE_REPARSE_POINT\r\n   in a call to GetFileAttributes would be considered a \"symlink\" for\r\n   Puppets purpose. This is relevant specifically to file resources.\r\n\r\n   However, Puppet cannot resolve the destination location for many of\r\n   the reparse point types, namely the following (some of which may\r\n   not actually resolve to a different path):\r\n\r\n   IO_REPARSE_TAG_HSM\r\n   IO_REPARSE_TAG_HSM2\r\n   IO_REPARSE_TAG_SIS\r\n   IO_REPARSE_TAG_WIM\r\n   IO_REPARSE_TAG_CSV\r\n   IO_REPARSE_TAG_DFS\r\n   IO_REPARSE_TAG_DFSR\r\n   IO_REPARSE_TAG_DEDUP\r\n   IO_REPARSE_TAG_NFS\r\n\r\n - Modify the behavior of symlink? such that Puppet only considers\r\n   reparse points IO_REPARSE_TAG_MOUNT_POINT, IO_REPARSE_TAG_SYMLINK\r\n   as resolvable symlinks.\r\n\r\n   The others will continue to be treated as regular files /\r\n   directories.\r\n\r\n - Existing symlink? behavior has been factored out to a reparse_point?\r\n   method responsible for only validating the file attribute contains\r\n   the reparse attribute.\r\n\r\n - This introduces some additional work once a path is determined as a\r\n   reparse point, but this should not happen regularly as reparse\r\n   points are typically fairly rare on Windows systems.\r\n\r\n - Change the behavior of exist? to function similarly to symlink? in that\r\n   only understandable symlinks will be followed. exist? will return true\r\n   for reparse points that are not mount or symlink reparse points", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6298", "title": "(PUP-7019) Map Windows codepages to Ruby encodings", "body": " - INCOMPLETE\r\n   includes some WIP .rb files that can be trashed once they're fully\r\n   integrated into the existing Puppet code in this PR\r\n\r\n - Make tests more dynamically understand how Windows codepages map to\r\n   Ruby encodings.\r\n\r\n   Ruby carries a bucket of different Encodings, some of which appear\r\n   to be pretty platform specific.\r\n\r\n   This can impact some tests.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5988", "title": "(WIP) ci:test:git for SLES11", "body": "", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5971", "title": "(PUP-7648) Fix ci:test:git pre-suite on OSX 10.11", "body": "- A number of problems prevented ci:test:git from executing properly\r\n   on OSX 10.11:\r\n\r\n   * When performing a `gem install bundler`, system Ruby places the\r\n     binstub in /usr/local/bin. However, the SSH environment is not\r\n     configured with /usr/local/bin in PATH. There are multiple\r\n     solutions to this problem:\r\n\r\n      - Add /usr/local/bin to ~/.ssh/environment in Beaker - covered\r\n        in BKR-1139. This allows any additional binaries that might\r\n        be installed (homebrew, git, other Ruby gems with binstubs\r\n        such as puppet and facter) to be available. This is the most\r\n        effective universal solution but requires a Beaker release.\r\n\r\n        A workaround is in place to do this in 000_EnvSetup of the\r\n        pre-suite until Beaker changes land.\r\n\r\n      - Add to the host[:host_env] hash of environment variables via\r\n        a Beaker options file, so that PATH is augmented with\r\n        /usr/local/bin. Unfortunately this requires setting additional\r\n        hosts / options files on disk prior to any code running in\r\n        the Puppet pre-suite, to be picked up during Beakers host\r\n        initialization and injected into ~/.ssh/environment correctly.\r\n        Otherwise, the PATH would have to be manipulated in each new\r\n        SSH command. Due to beaker-hostgenerator commonly being used\r\n        to execute, its simpler to avoid this option.\r\n\r\n        Note that beaker-hostgenerator should also allow arbitrary\r\n        settings injection using {} syntax, but this doesn't appear to\r\n        work properly with ci:test:git and it's uncertain if it\r\n        properly handles the :host_env hash when writing to YAML.\r\n\r\n   * When performing `bundle install`, ensure Ruby is configured to\r\n     use OSX platform specific gems where possible. This impacts\r\n     the inclusion of CFPropertyList.\r\n\r\n   * Due to OSX SIP (System Integrity Protection) /usr/bin is not\r\n     writable and /usr/local/bin should be used instead. Override\r\n     Beakers default puppetbindir setting to /usr/local/bin and use\r\n     that as the --binstub directory when installing the Puppet source\r\n     with Bundler. binstubs should continue to use /usr/bin/ruby as\r\n     the interpreter.\r\n\r\n   * Similarly, when calling install.rb, provide --bindir as the same\r\n     /usr/local/bin as the system Ruby binstub dir is not otherwise\r\n     writable. Beaker helpers will fully qualify the path to puppet\r\n     using the puppetbindir setting already.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5780", "title": "(DO NOT MERGE)(maint) Set BUNDLE_SPECIFIC_PLATFORM=true", "body": "**This might be one to outright close, but note that without it we're not using platform-specific Facter which depends on CFPropertyList**\r\n\r\n - Bundler, under some circumstances, may not install platform-specific\r\n   gems.  For instance, using a bundle install of the Puppet Gemfile\r\n   will not install the universal-darwin version of Facter.\r\n\r\n - Set the environment variable BUNDLE_SPECIFIC_PLATFORM also\r\n   had to be set to properly use platform-specific versions of any\r\n   gems that have been referenced.  This will be the default behavior\r\n   in Bundler 2, and given platform-specific versions of Facter are\r\n   shipped - should always be the case for Puppet. Without setting\r\n   this Bundler will raise a warning during installation.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5717", "title": "(maint) Address incorrect argument passing within Puppet", "body": "These were discovered with the aid of RubyMines `Incorrect call argument count` inspection, which is just one of many inspections it supports in code analysis..  There were a lot of false positives that turned up, but these seem legit.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gdubicki": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6476", "title": "(PUP-4678) Allow yumrepo priority below the default", "body": "The default priority is 99 so limiting it with puppet to\r\n99 too made it impossible to add a repository with a lower\r\npriority to protect system packages. This change removes\r\nthis limitation.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucywyman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6475", "title": "(PUP-8298) Add invalid task error", "body": "Adds invalid task name issue type so that when an invalid task name is called from a plan there's an appropriate error type and message for it.  Relates to BOLT-261.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ekohl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6438", "title": "[WIP] PUP-7474: Always generate the subjectAltNames per RFC2818", "body": "This ensures the there is always a subjectAltNames in a CSR with the common name. The allow_dns_alt_names option is changed to ignore the CN matching the subjectAltNames.\n\nCurrently it's untested hence the WIP flag.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharpie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6434", "title": "(PUP 7779) [#puppethack] Resurrect puppet facts upload", "body": "This changeset reverts pieces of [PUP-2560](https://tickets.puppetlabs.com/browse/PUP-2560) in order to re-add the ability to upload facts outside of a catalog request. Specifically, this patch re-adds the following functionality:\r\n\r\n  - The `puppet facts upload` command.\r\n\r\n  - The Puppet::Node::Facts::Rest terminus for saving facts to Puppet Servers.\r\n\r\n  - The ability to handle requests for the `/puppet/v3/facts` endpoint.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203", "body": "This check will never get exercised if `current_path` contains no directories as the `next` statements on lines 140 and 141 will keep skipping to the next iteration.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3062203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "mwaggett": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6414", "title": "(maint) Ensure projects can handle fedora without the f prefix", "body": "This commit removes the 'fedora-prefix' from the filename in acceptance tests.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "treydock": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6411", "title": "(PUP-8223) Improve user and group forcelocal support", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrwahl2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6333", "title": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider", "body": "(PUP-8114) Make enabled state check accurate for SLES 11 boot services in redhat service provider\r\n\r\nWithout this patch applied, the redhat service provider is not idempotent\r\nin enabling SLES 11 boot services. These are special Sys V services beginning\r\nwith the string 'boot.'. When `chkconfig` is run against them, they print\r\n'<name>  B' instead of '<name>  on', so the existing regex does not match them.\r\nThus the redhat provider always sees them as disabled, and tries to enable\r\nthem on each agent run.\r\n\r\nThis patch adds the '<name>  B' condition to the regex.\r\n\r\n```\r\n$ chkconfig boot.kdump\r\nboot.kdump  B\r\n```\r\n\r\nBefore:\r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\nNotice: /Stage[main]/Kdump/Service[kdump]/enable: enable changed 'false' to 'true'\r\n```\r\n\r\nAfter: \r\n```\r\n$ puppet agent -t --debug 2>&1 | grep -i kdump | grep -i enable\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukebigum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6317", "title": "(PUP-8098) adding 'acltype' as a valid property for a ZFS file system", "body": "Adds property 'acltype' to the accepted list of ZFS properties.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barriserloth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/6175", "title": "(PUP-8015) Add a `puppet ssl` face for generating csrs without needing to connect to a master", "body": "This commit moves the puppet-agent-bootstrap code created by Adrien\r\nThebo (https://github.com/adrienthebo/puppet-agent-bootstrap/) to the\r\npuppetlabs github space, and adds rspec tests to go along with the\r\nbootstrap changes.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkishel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/5814", "title": "(PUP-6134) Explicitly locate gemcmd windows", "body": "On Windows:\r\n\r\nPuppet is unable to install a ruby gem anywhere other than Puppet's ruby.\r\nCaused by Puppet prepending its paths (including our gem) to PATH.\r\nThis fix removes Puppet's paths from PATH when setting :gemcmd.\r\n\r\n(A larger-scale solution would involve a path/target parameter to Package.)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamtur01": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556", "body": "Simon\n\nCan you log a ticket with your commit please?\n\nhttp://projects.puppetlabs.com/projects/puppet\n\nGood catch and thanks btw!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676", "body": "Bryan - we're trying to standardize on the following workflow:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nCould you please send the commit to the list too?\n\nThanks for this!\n\nJames\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/559676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204", "body": "Hi Keymon \n\nWe don't use GitHiub for patch submission - our process is documented here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThanks!\n\nJames Turnbull\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/578204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644", "body": "Closed in Redmine.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/579644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235", "body": "Hi - we don't use GitHub's pull requests for merging code.\n\nYou can see our process at:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nBut in summary we'd like you:\n1. To open a ticket in Redmine (http://projects.puppetlabs.com/projects/puppet/issues/new)\n2. Sign a CLA\n3. Send your code to our -dev list for comment!\n\nThanks for your commit!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/636235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489", "body": "I frankly welcome our new cybernetic insect overlords...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Savar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601", "body": "See:\n\nhttp://projects.puppetlabs.com/issues/4860\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/434601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mmrobins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391", "body": "Hi rodjek,  Thanks for the patch.  I know it's a small change, but if you could follow our dev process for submitting code it would be helpful to us:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nThis allows us to keep track of what we need to do, prioritize it, and communicate changes to our community better.  We are also asking contributors to sign a CLA to avoid licensing issues with the code base.\nThanks\nMatt Robinson\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396", "body": "rodjek,\nSame comment about the dev process for this pull request as the last one.  We wish there was a way to turn github pull requests off to avoid this confusion, but there doesn't appear to be.\nMatt\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/656396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432", "body": "eloyesp, we **are** collaborating, we just ask that patches not be submitted using Github pull requests.  As I mentioned to rodjek in another pull request, we outline the process for submitting code to Puppet here:\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/Development_Lifecycle\n\nWe get a lot of code submissions and have a lot of tickets to keep track of, so following that process makes it easier for us to track and manage all that change than the Github interface does.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/782432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221", "body": "Thanks for the patch, but the tests need to pass (http://projects.puppetlabs.com/projects/puppet/wiki/Development_Writing_Tests#Running+Tests) before we can accept it (currently 1 failure in the specs with your change that should be easy to fix), and we generally don't take pull requests from Github.  Part of the reason for that is that we need Community License Agreements signed before we accept contributions.  \n\nSee our Development Lifecycle Wiki for more info if you'd like to contribute: http://projects.puppetlabs.com/projects/puppet/wiki/Development_Development_Lifecycle\n\nWe're definitely looking for help on Ruby 1.9 compatibility, so it would be great if you continued to work on that.  Currently not all the tests pass under Ruby 1.9, but we need them to continue passing under 1.8.5 and greater.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260", "body": "Great, thanks.  Let us know if you need help.\n\nhttp://projects.puppetlabs.com/projects/puppet/wiki/IRC_Channel\nhttps://groups.google.com/group/puppet-dev\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427", "body": "Thanks for bringing this up.  Our support for Ruby versions is actually a little more complicated and the README and our docs need to be updated with this information.  Ruby 1.9.2 is supported for our 2.7.x code, which is still in RC and should be released in the near future.  More info here:\n\nhttp://projects.puppetlabs.com/issues/7506\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1156427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eloyesp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814", "body": "so you are **not** collaborating?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/781814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aredridel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251", "body": "Alright. I can do that.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1078251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bodepd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367", "body": "+1 from me\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1415367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "nanliu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706", "body": "Squashed into a single commit. Originally split in two because spec test still needed some work.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1728706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464", "body": "You can configure this for apply/agent, perhaps we need an [apply] section:\n\n[main]\n  classfile = $vardir/state/apply_classes.txt\n\n[agent]\n  classfile = $vardir/state/classes.txt\n\nI agree this should be clearly spelled out in release documentation.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "slippycheeze": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274", "body": "Puppet apply can be used for any number of things, including one-shot modifications to a system.  Dropping all the data from regular runs just because someone ran something through it seems risky: your database server would stop being a database server until the next full run, which is probably not what you want.\n\nI am pretty sure this is an unresolvable problem, because we have a single piece of data (classes.txt) that is trying to represent something much more dynamic, the set of applicable classes (or, perhaps, successfully applied classes) of the machine at a point in time.\n\nMaking this optional, or writing to a separate file, would be much more acceptable.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1791274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171", "body": "I don't think this is the right strategy: it seems that you are patching the individual test scripts that show errors, rather than addressing this globally.  To me, if feels very much like that would be the right solution: then, _all_ tests that have ordering dependencies will work, or fail, on their own merits.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408", "body": "After discussion, the global behaviour is correct but too slow (2x to 3x slower) to want to do all the time.  \n\nhttp://projects.puppetlabs.com/issues/9026 captures the desire to have a mode where CI can run the expensive operations (and reveal our failures) without having to pay that when _most_ of the time it isn't bringing any huge benefit.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1818408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391", "body": "That won't work on Windows; see https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util.rb#L193 for a better way to handle this.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1777391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333", "body": "Hey.  Thanks for the contribution; we probably need to fill out that test before merging.  Otherwise it would be all too easy to revert the behaviour. :)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350", "body": "I ended up taking a closer look at the testing code, and I got nothing.  The obvious choice, of ginning up a report in the right state, and testing that the function returns, wouldn't add much value without a negative `expects`; mostly, it looks like the code should go in without the test being filled out at this time.\n\nI am going to leave this open for a bit longer and see if anyone else has a brilliant idea, though...\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/102350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481", "body": "I believe this is wrong for Win32 support, and `root?` knows more about that platform.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489", "body": "I think that this should delegate caching to the underlying layer, since this release will have a Facter release that handles that effectively nearby.\n\nAt the very least it should detect if it should delegate caching to the indirection, which allows the endpoint to determine the most appropriate TTL, etc, for a fact value.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490", "body": "Shouldn't this happen implicitly, rather than by extending the ABI of the terminus in a non-standard way?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491", "body": "Should this code even be doing that by hand?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495", "body": "....sooo.  Now the testing that we can load facts from disk doesn't actually load facts from disk.  That doesn't fill me with comfort that these tests are worth anything.\n\nIf they really are too slow to use, we should probably just delete them entirely rather than stubbing out fundamental parts of them.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jeffmccune": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928", "body": "Daniel,\n\nI'm in agreement with Nan.\n\nWe do make claims that puppet apply is a \"first class citizen\" and community members like Jordan Sissel heavily rely on puppet apply being feature complete with puppet agent.\n\nFurthermore, puppet apply is more suitable for situations like Vagrant where a full master is not avaialable or necessary.\n\nFinally, as we integrate more with MCollective, the classes.txt file becomes ever more important for filtering.\n\nFor these reasons I think we should still write the file and we should write it to the same file the agent writes to by default.\n\nIf the end user desires, we support writing to multiple files as Nan illustrated above.\n\nI'll re-open this once.  If you still disagree, please feel free to close the pull request and I won't re-open it.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1792928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774", "body": "On Wednesday, July 18, 2012, vojtekb wrote:\n\n> why is '/' illegal?\n\n/ is not illegal.  Puppet behaving as if / is illegal is a bug and we will\nfix it as soon as possible.\n\nWhat version of puppet are you using?\n\nWe are using  externally signed certificates for our puppet setup. Before\n\n> this change it works perfectly, with this change we get the following error:\n> \n> err: /File[/var/lib/puppet/lib]: Failed to generate additional resources\n> using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some\n> company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.comjavascript:;\"\n> must not contain unprintable or non-ASCII characters\n> \n> There are indeed slashes in the name but they were added by legitimate\n> openssl operations.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/puppetlabs/puppet/commit/bd2820ec6ee8a45f57fcc57f79dddde0062cdca7#commitcomment-1598592\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058", "body": "@vojtekb Please watch [#15561](http://projects.puppetlabs.com/issues/show/15561) to receive notifications of our progress on fixing this issue.  Please also add any impact data about this issue in your site to the ticket.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1599058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773", "body": "On Sat, Jul 21, 2012 at 9:12 PM, R. Tyler Croy <\nreply@reply.github.com\n\n> wrote:\n> \n> I has a sad. The Gemfile took me easily 30-45 minutes of\n> guess-and-check-rspec work to get right, I really do think it should be\n> added back in\n\nI'm sure we'll add this back in, it was just really bad timing last week.\n The reason Andy and I decided to pull it out right now are two fold.\n First, it was merged into the wrong branch.  We should merge it into 3.x.\n Second, we're not sure of the implications this has with #7788, the\nunmaintained cucumber-puppet project, and if Puppet is compatible with\nbundler from a, \"can we support and maintain this?\" perspective.\n\n> I don't remember why I added cucumber in there, that might have been just\n> force of habit on my part (oops).\n\nR Tyler, would you mind simply re-submitting this against 3.x and remove\nthe cucumber dependency?  There's a good chance we can look at it this week\nif the pull request is in by Monday morning PT.\n\nPlease also include a paragraph in the README describing how the gemfile is\nintended to be used.\n\nThanks,\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038", "body": "> Please could you update line 112 to: if pathname = which('pip') or which('pip-python') then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n\nThis sounds like a good improvement, @wilas would you mind submitting a pull request?  It's pretty easy to to contribute to Puppet, please see our [CONTRIBUTING](https://github.com/puppetlabs/puppet/blob/master/CONTRIBUTING.md).  Please file a bug at projects.puppetlabs.com otherwise, and I'll be happy to add this issue to our backlog.\n\n-Jeff\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166", "body": "@masterzen, when I run the rspec tests I'm getting:\n\n```\nFailures:\n\n  1) Puppet::SSL::Host should allow to reset localhost\n     Failure/Error: previous_host = Puppet::SSL::Host.localhost\n     Puppet::Error:\n       Cannot save maynard.lan; parent directory /var/folders/hq/hhqxfhws68bc_s23f2ktyx0m0000gp/T/ssl_host_testing20110914-2703-fzokxv-0/ssl/private_keys does not exist\n     # ./lib/puppet/indirector/ssl_file.rb:95:in `save'\n     # ./lib/puppet/indirector/key/file.rb:34:in `save'\n     # ./lib/puppet/indirector/indirection.rb:265:in `save'\n     # ./lib/puppet/ssl/host.rb:147:in `generate_key'\n     # ./lib/puppet/ssl/host.rb:176:in `certificate'\n     # ./lib/puppet/ssl/host.rb:32:in `localhost'\n     # ./spec/unit/ssl/host_spec.rb:69\n\nFinished in 86.56 seconds\n13046 examples, 1 failure, 90 pending\n\nFailed examples:\n\nrspec ./spec/unit/ssl/host_spec.rb:68 # Puppet::SSL::Host should allow to reset localhost\nrspec spec/**/*_spec.rb  80.95s user 7.84s system 97% cpu 1:31.54 total\n```\n\nDo you have any idea of how to make this more robust?  Unfortunately none jump out at me at the moment.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dingus9": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964", "body": "File added in /ext/kate/puppet.xml\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1810964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333", "body": "Works for me.\n\nAnd this is actually just a TextMate thing - it does it automatically to all created files, and I didn't bother turning it off.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/issues/comments/1842333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735", "body": "Yeah, when I rebased this I knew it would conflict - I think the right approach is to move SUIDmanager.root? into the feature - the reason I made this change here is that without it you have pretty ugly loading issues, and there's no fundamental reason why SUIDmanager should have the 'root?' method.d\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741", "body": "This is probably the thing I'm least happy with.\n\nMy first version didn't do any caching but had a noticeable (at least when running the tests) cost, because we were retrieving all facts every time someone asked for a fact.\n\nI also considered making it easy to retrieve a single fact from the backing terminus, but this approach seemed much less evil.\n\nI'm a touch uncomfortable relying on Facter for caching, because it essentially assumes that Facter's caching priorities will always match Puppet's, which isn't necessarily the case.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749", "body": "How would you do that?  This is the other area that's obviously questionable, but I couldn't come up with a better option, and if I had to choose between hard-coding Facter into the system and having a non-standard API for this, it was an easy choice.  It actually made me wonder if 'load' shouldn't become a standard part of the indirector - I could see other terminus types needing some kind of initialization method.\n\nThere are unfortunately a few places that need to explicitly cause facts to get loaded (e.g., after they're downloaded as part of pluginsync).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752", "body": "I doubt it, but rather than judge that I decided to retain existing behavior.\n\nI believe I looked closely at the tests and it was impossible to determine \"right\" behavior, so I stuck with existing behavior.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755", "body": "Hmm, that's probably true.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/158755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "schwern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288", "body": "Why 6.2 seconds?  Oddly specific, and well beyond the orbit of the moon.  6.2 light seconds is about 1,860,000km which is suspiciously close to the distance to the Sun-Earth L1 point.  Is that the range to your REAPER INVASION FLEET waiting in the glare of the sun to wipe out humanity? Is Puppet actually a plan to develop an EMERGENT ARTIFICIAL INTELLIGENCE of the world's computer systems? Are you planning on handing control of the world's infrastructure over to your CYBERNETIC MASTERS at the critical moment of invasion in the hopes of gaining their favor and making you their fleshy avatar?!\n\nOr have I been playing too much Mass Effect?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pfig": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297", "body": "They're clearly building Dyson spheres.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/517297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wfarr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527", "body": "So this change looks to have never been merged to `2.7.x` release branch so even though this was supposed to be in 2.7.10 some months ago, it's still not in even 2.7.14.\n\nDefinitely need this STDIN support \u2014 could we get this rolled into a 2.7.15 release and pushed out _relatively soon_?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1467527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "vojtekb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592", "body": "why is '/' illegal?\n\nWe are using  externally signed certificates for our puppet setup. Before this change it works perfectly, with this change we get the following error:\n\nerr: /File[/var/lib/puppet/lib]: Failed to generate additional resources using 'eval_generate: Certname \"/c=nl/st=noordholland/l=amsterdam/o=some company/ou=tech ca0 (root ca)/emailaddress=tech@somecompany.com\" must not contain unprintable or non-ASCII characters\n\nThere are indeed slashes in the name but they were added by legitimate openssl operations.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593", "body": "BTW. the error message does not mention that '/' is not allowed so users will go and look for really unprintable characters\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1598593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600", "body": "@jeffmccune \nversion 2.7.13 <- worked fine\nversion 2.7.18 <- not\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1608600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "garethr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573", "body": "Running the test suite from master has the following in the output. Not sure if that was why rack was in the Gemfile.\n\n```\nFailed to load feature test for rack: no such file to load -- rack\n```\n\nIt would definitely be _a good think_ to get a supported version of this available, I nearly created it myself before finding the original pull request.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1605573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rtyler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171", "body": "I has a sad. The Gemfile took me easily 30-45 minutes of guess-and-check-rspec work to get right, I really do think it should be added back in\n\nI don't remember why I added cucumber in there, that might have been just force of habit on my part (oops).\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1613171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531", "body": "This has no effect on cucumber-puppet whatsoever. New pull request explicitly against 3.x is [here](https://github.com/puppetlabs/puppet/pull/959)\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1618531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "adrienthebo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545", "body": "The lack of banana actions disappoints me.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1759545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "zaphod42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402", "body": "I was saddened too. But we must go on and live our lives without banana actions! Persevere @adrienthebo! \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1762402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "djmitche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767", "body": "c.f. gh-1101 for a proposed fix\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1795767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260", "body": "Sounds good - thanks!\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/3016260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "blogbasti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410", "body": "Hi Josh,\n\n> The `windows` service provider no longer implements the `restart` method\n> directly as its parent `service` provider handles this correctly.\n\nSince an update from 2.7.18 to 2.7.19 puppet on windows is unable to handle service refresh:\n\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Could not evaluate: Could not find init script for 'nscp'\nThu Sep 27 08:08:26 +0200 2012 /Service[nscp](err): Failed to call refresh: Could not find init script for 'nscp'\n\nI think there is maybe something wrong with this update. In Version 2.7.18 everything works fine with my definition.\n\nWhat do you think, Josh?\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/1912410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ruworuro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720", "body": "Works in puppet 2.7\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2129720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rismoney": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681", "body": "on a particular server I am getting this error.  I am not certain what assumptions are being made here...\nOn the local disk (hardware RAID1), there is a system reserved partition (no drive letter), a C: drive with the OS installed, and an unallocated rest of the disk... When I formatted the unallocated space on the rest of the disk, it passed...  It should have succeeded imho...\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2303681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wilas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269", "body": "Centos/RHEL/Fedora all use pip-python instead of pip -> It depend how you install pip. If you use `yum install python-pip` and install pip from epel then it is true. But if you install pip by easy_install `easy_install pip` then command is pip. Actual pip version from epel is 0.8, but using easy_install you are able use pip in version 1.2.1. \n\nPersonally I prefer easy_install version. Right now I have to use pip-python on RHEL boxes because for RedHat osfamily puppet pip provider require pip-python command (I know I can make symlink pip to pip-python but it is dirty solution). \n\nPlease could you update line 112 to: `if pathname = which('pip') or which('pip-python')` then self.class.cmd is not needed more and if someone install pip by easy_install then that solution is promoted.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2635269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173", "body": "Hi Jeff,\n\nI will try contribute to Puppet. Thx for links.\n\nCheers,\nKamil\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2638173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016", "body": "I've made needed changes. My pull request: https://github.com/puppetlabs/puppet/pull/1486\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/2639016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "yom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756", "body": "Hi, this regex should either be case-insensitive or start with a lowercase n, otherwise it won't match.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4210756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jpartlow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840", "body": "Thanks very much for catching this.  The dpkg-query output changes in later Debian versions which weren't in our acceptance matrix.  there is a new PR 1960 addressing the warning change.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4226840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fiddyspence": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312", "body": "Sorry - this doesn't actually fix the advertised problem of providing a validated data item unless I've missed something.  $::clientcert is provided by\n\npuppet/node/facts.rb:    values[\"clientcert\"] = Puppet.settings[:certname]\n\nSo, trusting it here is misleading and wrong\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/comments/4318312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "masterzen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358", "body": "Yes, my bad. The test passes fine when run isolated but combined in the whole suite it fails. Something prevents the directory to be created apparently.\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/126358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590", "body": "In the light of bug #10727 (http://projects.puppetlabs.com/issues/10727), you might need to change this to\n\n```\nancestors = Pathname.new(self[:path]).enum_for(:ascend).map(&:to_s)\n```\n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/224590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nfagerlund": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166", "body": "Oh! Thanks for catching that. (Also, I will now stop force-pushing until you're done reviewing.) \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167", "body": "Where does this get configured? Is it hard-coded in each provider? \n", "reactions": {"url": "https://api.github.com/repos/puppetlabs/puppet/pulls/comments/195167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}