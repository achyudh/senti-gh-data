{"_default": {"1": {"JonHanna": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/268", "title": "Formatting of generic types in C#7 out declarations", "body": "Given the line\r\n\r\n```C#\r\nif (!_data.TryGetValue(key, out Stack<TValue> stack))\r\n```\r\n\r\nThe formatter produces\r\n```\r\nif (!_data.TryGetValue(key, out Stack < TValue > stack))\r\n```\r\n\r\nSeeming to take the `<` and `>` as operators rather than part of the generic type.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/268/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kierenj": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/267", "title": "Still in use / relevant?", "body": "Hi - just checking if this project is a good one to adopt for projects moving forward?  Is there a roadmap for .NET Core support, etc?  Thanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/267/reactions", "total_count": 15, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "philwindsor": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/266", "title": "XUnitConverter not working", "body": "I've had nothing but trouble trying to get this to work and have hit yet another issue.\r\n\r\n```\r\n SemanticModel semanticModel = await document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\r\n\r\n            List<UsingDirectiveSyntax> newUsings = new List<UsingDirectiveSyntax>();\r\n            bool needsChanges = false;\r\n\r\n            foreach (var usingSyntax in root.Usings)\r\n            {\r\n                var symbolInfo = semanticModel.GetSymbolInfo(usingSyntax.Name);\r\n                if (symbolInfo.Symbol != null)\r\n                {\r\n                    string namespaceDocID = symbolInfo.Symbol.GetDocumentationCommentId();\r\n                    if (s_mstestNamespaces.Contains(namespaceDocID))\r\n                    {\r\n                        needsChanges = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        newUsings.Add(RemoveLeadingAndTrailingCompilerDirectives(usingSyntax));\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    newUsings.Add(RemoveLeadingAndTrailingCompilerDirectives(usingSyntax));\r\n                }\r\n            }\r\n\r\n            if (!needsChanges)\r\n            {\r\n                return document.Project.Solution;\r\n            }\r\n```\r\n\r\nThe above code is from MSTestToXUnitConverter.cs. The issue is when it gets to the using statement for Microsoft.VisualStudio.TestTools.UnitTesting **symbolInfo.Symbol** is null so it doesn't hit the code inside the if statement\r\n\r\nDoes anyone know why this is and how to fix it? I'm using visual studio 2017", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamesqo": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/264", "title": "Improve experience when the user passes --help, -help, -?, /?, or /help", "body": "I didn't read the README thoroughly and tried the above switches to get the usage. Each one of them generates an exception:\r\n\r\n```\r\nC:\\cygwin64\\home\\james>CodeFormatter /?\r\n?\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Invalid project file path: '/?'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter --help\r\n--help\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Project file not found: 'C:\\cygwin64\\home\\james\\--help'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter -?\r\n-?\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Invalid project file path: '-?'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter -help\r\n-help\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Project file not found: 'C:\\cygwin64\\home\\james\\-help'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>\r\n```\r\n\r\nConsider ignoring all other args and dumping the help if any of the args match `/?`, `-?`, `-help`, `--help`, or `/help`.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ohadschn": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/262", "title": "Microsoft.Build.Exceptions.InvalidProjectFileException: The tools version \"14.0\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\". ", "body": "I'm getting the following exception. The funny thing is, when I open the csproj it says `ToolsVersion=\"12.0\"` (and not `14.0` as the error below states).\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The tools version \"14.0\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\".  G:\\Development\\Foo\\Bar.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Evaluation.Project.Data.InitializeForEvaluation(IToolsetProvider toolsetProvider)\r\n   at Microsoft.Build.Evaluation.Evaluator`4..ctor(IEvaluatorData`4 data, ProjectRootElement projectRootElement, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(ProjectRootElement xml, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectFileAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 126\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kzu": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/261", "title": "Add support for MSBuild 15 item metadata attribute notation", "body": "If your projects use, say:\r\n\r\n```\r\n<PackageReference Include=\"Moq\" Version=\"*\" />\r\n```\r\n\r\nWhich is totally valid MSBuild 15+ notation, the tool fails with:\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The attribute \"Version\" in element <PackageReference> is unrecognized.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n```\r\n\r\nMost likely because it's referencing MSBuild 14 or prior. \r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/261/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "uioporqwerty": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/259", "title": "Ignoring auto-generated files", "body": "With CodeFormatter, how can you tell it to ignore certain files like Reference.cs which are autogenerated files? These take a long time to parse; in our case it takes 2-5 seconds for some files.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/259/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pgrm": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/258", "title": "Add support for C# 7 tuples ", "body": "The codeformatter can't deal with the new way of defining tuples in C# 7 (https://docs.microsoft.com/en-us/dotnet/articles/csharp/csharp-7#tuples) \r\n\r\nWhen having the rule active to prefix fields with _ it also prefixes the field names used in the tuple.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/258/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dhoehna": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/257", "title": "Does not convert all upper case const fields to PascalCase", "body": "My private const fields were not converted from MY_CONSTANT to MyConstant (All uppercase to Pascal Case).  I also did not find a rule that did this.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "basoundr": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/256", "title": "Add support for SDK based Projects(.Net Core Project format)", "body": "I get the below exception when running CodeFormatter for [Roslyn Project System](https://github.com/dotnet/roslyn-project-system), which has been converted into a SDK based project. The new project format does contain XML namespace. \r\n\r\n```CodeFormatter.exe \"C:\\repos\\roslyn-project-system\\src\\ProjectSystem.sln\"\r\nProjectSystem.sln\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The default XML namespace of the project must be the MSBuild XML namespace. If the project is authored in the MSBuild 2003 format, please add xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" to the <Project> element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Construction.ProjectParser.Parse()\r\n   at Microsoft.Build.Construction.ProjectParser.Parse(XmlDocumentWithLocation document, ProjectRootElement projectRootElement)\r\n   at Microsoft.Build.Construction.ProjectRootElement..ctor(XmlReader xmlReader, ProjectRootElementCache projectRootElementCache, Boolean isExplicitlyLoaded)\r\n   at Microsoft.Build.Construction.ProjectRootElement.Create(XmlReader xmlReader, ProjectCollection projectCollection)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectFileAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 126\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/256/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stuartleeks": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/255", "title": "Add support for .NET 4.6/", "body": "On a machine with just VS2017 installed, .NET 4.5.2 isn't installed and I get the error below.\r\n\r\nIs it possible to create a version that supports .NET 4.6?\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n   at Microsoft.Build.Execution.BuildManager.BeginBuild(BuildParameters parameters)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.BuildAsync(BuildManager buildManager, BuildParameters parameters, BuildRequestData requestData, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.<BuildAsync>d__12.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.<BuildAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpProjectFileLoader.CSharpProjectFile.<GetProjectFileInfoAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/255/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tinchou": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/252", "title": "Running on folders without projects/solutions", "body": "Hi,\r\n\r\nI'm trying to run the tool on a bunch of `.cs` files for https://github.com/dotnet/corefx/pull/15477 but it doesn't seem to be able to run on loose files.\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/252/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wahmedswl": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/250", "title": "Nightly Build", "body": "Hi,\r\n   Isn't there anyway to download nightly build. Eg: AppVeyor automated build.\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/251", "title": "AppVeyor Build", "body": "Hi,\r\n   This will add AppVeyor build with Artifacts to download latest available Build. And it also fixes #250 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanswolff": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/248", "title": "CodeFormatter returns with exit code 0 on error", "body": "Whenever an error occurs while formatting the CodeFormatter command line returns with exit code 0. In a batch script there is no easy way to find out if the formatting operation has failed. Please fix!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "message": "Fix for issue #248: CodeFormatter returns with exit code 0 on error"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tiesmaster": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/247", "title": "XUnitConverter: Add support for converting TestInitialize and TestCleanup attributes to xUnit equivalent", "body": "I used the converter to successfully convert our MSTest projects to xUnit, except that I noticed that `TestInitialize` and `TestCleanup` attributes were not converted, so I've added that in my own branch ([here](https://github.com/tiesmaster/codeformatter/tree/dev)).\r\n\r\nI think it would be a good addition to the converter, are you guys willing to merge that in? I think the branch requires some work to get it up to PR level, but I don't want to do that if it's not going to be merged ;)", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SuperJMN": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/246", "title": "xUnit converter doesn't work for me", "body": "I've used the tool over a .csproj project and nothing happened. I haven't found any documentation about how to use it. Could you please upload a mini how-to to teach us?\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "r1z1": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/242", "title": "Save file only if needed", "body": "I configured in the pre-build step the execution of codeformatter on all projects. It works fine but I have unnecessary recompilations. Even if the format was already done and when I execute the tool on a file, the file is always saved so it implies a recompilation.\nDo you have any plan to fix that?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lzybkr": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/241", "title": "Need to update xml comments when renaming fields", "body": "When renaming a private field, xml comments need to be updated as well, e.g.:\n\n``` C#\n        private bool streamObjects;\n\n        /// <summary>\n        /// A collection in which objects that are written using the WriteError\n        /// method are accumulated if <see cref=\"streamObjects\" /> is false.\n        /// </summary>\n        ...\n```\n\nThe formatter renamed the field, but did not change the comment.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tigerclawn82": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/240", "title": "Reflection, semantic changes", "body": "Hi, i detected unusual behavior while testing code formatter.\n\nOriginal Code\n\n```\nclass A\n        {\n            public int F1;\n            private int F2;\n            protected int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            private int P2 { get; set; }\n            static int SP { get; set; }\n\n            public A()\n            {\n                F2 = 2;\n                F3 = 3;\n            }\n        }\n\n        class B\n        {\n            public int F1;\n            public int F2;\n            public int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            public int P2 { get; set; }\n            public int P3 { get; set; }\n            static int SP { get; set; }\n        }\n\n        [Fact]\n        public void Test_Extensions_Generic_Map()\n        {\n            var A = new A\n            {\n                F1 = 1,\n                P1 = 1\n            };\n            A.SF = 4;\n            var B = A.Map<A, B>();\n            Assert.Equal(1, B.F1);\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(1, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n\n            B = new B\n            {\n                F1 = 2,\n                F2 = 1\n            };\n            B.Map(A, \"F1\", \"p1\");\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(0, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n        }\n```\n\nFormatted Code\n\n```\nprivate class A\n        {\n            public int F1;\n            private int _F2;\n            protected int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            private int P2 { get; set; }\n            private static int SP { get; set; }\n\n            public A()\n            {\n                _F2 = 2;\n                F3 = 3;\n            }\n        }\n\n        private class B\n        {\n            public int F1;\n            public int F2;\n            public int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            public int P2 { get; set; }\n            public int P3 { get; set; }\n            private static int SP { get; set; }\n        }\n\n        [Fact]\n        public void Test_Extensions_Generic_Map()\n        {\n            var A = new A\n            {\n                F1 = 1,\n                P1 = 1\n            };\n            A.SF = 4;\n            var B = A.Map<A, B>();\n            Assert.Equal(1, B.F1);\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(1, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n\n            B = new B\n            {\n                F1 = 2,\n                F2 = 1\n            };\n            B.Map(A, \"F1\", \"p1\");\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(0, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n        }\n```\n\nBasically code semantic been changed, reflection based usage will break things up. Is there anything that can be configured to skip this kinda behavior?\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/239", "title": "Stuck on format", "body": "Hi, i am new to codeformatter and just downloaded release build Code Formatter 1.0.0-alpha6. After extracting the zip, i run codeformatter.exe on a solution file and it get stuck on \n\n```\nC:\\Users\\Administrator\\Downloads\\CodeFormatter\\CodeFormatter>CodeFormatter.exe \"\nD:\\Development\\Production-WS\\Infrastructure\\Infrastructure.sln\"\nInfrastructure.sln\n        Syntax Pass\n        Local Semantic Pass\n        Global Semantic Pass\n```\n\nis there any way i can know that it is really working cuz i waited for long or is there anything i am missing.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ILMTitan": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/236", "title": "Changing copyright header creates duplicate lines.", "body": "Changing the copyright header from\n\n```\n// Copyright 2015 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n```\n\nto\n\n```\n// Copyright 2016 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n```\n\nresults in \n\n```\n// Copyright 2016 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n\n// Licensed under the Apache License Version 2.0.\n```\n\non preexisting files.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mrchief": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/235", "title": "NewLineAbove inserts empty newline when no usings are present", "body": "I assume this rule ensures that there is a newline between usings and namespace declaration. However, it should not insert an empty newline if there are no usings like in the below example.\n\n``` cs\nnamespace abc\n{\n    public enum Term\n    {\n        First,\n        Second,\n        Third,\n        Fourth,\n        Fifth,\n        Sixth,\n        Seventh,\n        Eighth,\n        Ninth,\n        Tenth,\n        Eleventh,\n        Twelfth\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/235/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gabrielweyer": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/232", "title": "XUnitConverter: MSTestNamespaces.txt should be copied to output directory", "body": "`MSTestNamespaces.txt` should be copied to output directory if we want to use the tool from command line.\n\nRight now if we call `\\bin\\XUnitConverter\\Debug\\XUnitConverter.exe <project>` we get a lot of `The MSTestNamespaces.txt file was not found.`.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/233", "title": "Fix missing MSTestNamespaces.txt in output dir", "body": "MSTestNamespaces.txt should be copied to output directory if we want to use the tool from command line.\n\nFix #232 \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jaredpar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea592c208dc7117b9b1d61c2c592202cb4362369", "message": "Merge pull request #249 from hanswolff/master\n\nFix for issue #248: CodeFormatter returns with exit code 0 on error"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f", "message": "Merge pull request #245 from alexsorokoletov/run-on-mono\n\nallow CodeFormatter to run on Mono"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043686", "body": "@stephentoub That link is in the change.  Are you wanting me to put it in there in expanded form?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107013", "body": "+1 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108031", "body": "@Priya91 yes.  The guideline is meant for all members and types.  I expanded on the existing implementation to include all members. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108157", "body": "@ellismg the only change i have in flight ATM is the PR.  So if you approve / merge that then this could be changed with 0 interference ;) \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109036", "body": "@Priya91 nice.  Didn't realize the Roslyn formatter actually did that.  \n\nTook a quick look at the tests and there were a couple of scenarios that I wanted to add coverage for.  Will keep this issue open to cover those tests. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109128", "body": "@Priya91 neat!  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110657", "body": "Having Dev14 installed is not a requirement.  The only requirement is having the Dev14 build tools installed (added to readme this morning).  \n\nI've been developing this project all morning on a machine with only 2013 installed.  If build.cmd forces Dev14 to be installed we should fix that.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110917", "body": "@Priya91 sorry, my last message was confusing. \n\nI have no intention of changing the existing rule right now.  I was only going to add test cases for the other scenarios.  If any gaps show up I will file the appropriate bugs to track it down. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113562", "body": "Thanks for the review everyone! \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113727", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115848", "body": "Hmm, thought I had done that correctly.  Used the following:\n\n```\ngit commit --author \"beep boop <dotnet-bot@microsoft.com>\"\n```\n\nIs there a better command line to use?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9320226", "body": "@terrajobst agreed.  Can't be printing directly to the console from the rule implementations.  This is a layer that can be hosted else where. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9320226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367361", "body": "Interesting.  Didn't know that. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624331", "body": "Always great to have style violations in the style formatting tool :) \n\nFixed\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625750", "body": "Need explicit visibility\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625765", "body": "Nice trick to avoid the formatter from formatting away your tests :) \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625815", "body": "Not sure how to handle this but C# 6.0 will be introducing interpolated strings.  Once that API comes on line this code will need to be updated to account for that.  Should we file an issue to be done in the future?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625850", "body": "Why do we not also convert ValueText here?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625960", "body": "@ellismg definitely don't block on this.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626265", "body": "@ellismg no problem. Many of the Roslyn APIs are still very new to me and I was just curious if there was a reason.  Seems like you are doing the right thing here. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697201", "body": "Do we actually depend on this?  Thought this was C# only ATM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697432", "body": "Interesting.  I wouldn't expect that because we don't load any Visual Basic code in this scenario.\n\n@jasonmalinowski is this behavior expected? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22977171", "body": "StringComparer.OrdinalIgnoreCase.Equals(extension, \".sln\")\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22977171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272160", "body": "The previous code had an exception for `const`.  I agree it doesn't seem to make sense.  I will change it.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272167", "body": "Paranoia.  It's a wonderful thing. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272230", "body": "Actually, going to leave it for now.  Want to get feedback from the corefx team as to why they had that exception. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "alexsorokoletov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "message": "allow CodeFormatter to run on Mono"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mmitche": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "message": "Merge pull request #243 from dotnet/mmitche-patch-1\n\nUpdate badges to point to new server"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "message": "Update badges to point to new server"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "message": "Merge pull request #226 from mmitche/update-badges\n\nUpdate badges"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/084e4e5037084f0dcb67fa26d34ac935dab673ef", "message": "Generate the job report"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "message": "Update badge locations"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/1e76a2f1dbd15e8f251e762555f538a768a86052", "message": "Merge pull request #224 from mmitche/branchify\n\nBranchify and move away from the static labels"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/0502e593d5eec7d17c153cd98ce70518f8c72400", "message": "Branchify and move away from the static labels"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "message": "Merge pull request #187 from mmitche/simplify-creation\n\nSimplify job creation using new utility functionality"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "message": "Simplify job creation using new utility functionality"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fb92f523cda163c1a7a00eb69636159080a0c66", "message": "Merge pull request #182 from mmitche/update-badges\n\nUpdate badges to new job location"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/63f0fd59f14eae44b96e87aa64e110f71e02e27a", "message": "Update badges to new job location"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davkean": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fd15554b0b513c33228877abffb5311409fa39b", "message": "Merge pull request #219 from davkean/Switches\n\nSupport for /help and better error for unrecognized switches"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "message": "Added support for /help (short form: /?) switch"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "message": "Do not treat unrecognized switches as formatting targets"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/72be10ad41856b41158780c4fcfd47c5adaa36e2", "message": "Fixed default visibility of VB delegates\n\nThey were defaulting to always public."}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "message": "Handle removing \"ts_\" prefix from fields\n\nSome .NET code that I ported uses the \"ts_\" prefix for thread static, added support for removing it."}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/819f3a8176e2505adf279b256054d396eadeec4d", "message": "Turned copyright header off by default\n\nBefore my change there were two options, specifying /nocopyright, or specifying /copyright:foo.txt. If we switched the header off by default, there was no way to opt into the default, therefore, I added enable/disable options to the copyright switch similar to /rule:\n\nTo turn on default copyright, you do:\n\ncodeformatter test.proj /copyright\ncodeformatter test.proj /copyright+\n\nTo turn off default copyright, you do:\n\ncodeformatter test.proj\ncodeformatter test.proj /copyright-\ncodeformatter test.proj /nocopyright (for backwards compat - not doc'd)\n\nAnd like before you can specify a file:\ncodeformatter test.proj /copyright:copyright.txt"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/1937b9afad2a465a21e90043df336230b5bcdaf6", "message": "Reorder copyright and nocopyright together\n\nThis is in preparation for fixing #151."}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/da1903d54a609d20f16ccf92a8e20895379a3d85", "message": "Opt remaining switch comparisons into using local comparer"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "message": "Merge pull request #218 from davkean/PrivateFieldNamingRule\n\nNo longer crash when PrivateFieldNamingRule encounters WithEvents"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/f174ac403bdc66cc1fa0f7f3674978d6366337dc", "message": "No longer crash when PrivateFieldNamingRule encounters WithEvents\n\nFixes: #216"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69062197", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69062197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "Priya91": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/48ab78fbcf1f218f18d118898b2e7298440eab60", "message": "Merge pull request #221 from davkean/NoCopyright\n\nTurned copyright header off by default"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/fe6f6c8eb806500bbc597f4a643812803e7c8b39", "message": "Merge pull request #222 from davkean/TS\n\nHandle removing \"ts_\" prefix from fields"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/commits/13cc3925c639a6baa67d6950cd16b42e709a9e0f", "message": "Merge pull request #223 from davkean/Delegates\n\nFixed default visibility of VB delegates"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107466", "body": "This is already enforced by the Roslyn Formatter API. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107667", "body": "This is already enforced for private fields to explicitly mention if they are private. Is this issue supposed to track this on types and methods as well?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107850", "body": "All the default VS formatting rules, are enforced by running the RoslynFormatter. Thats the last rule on the tool, IsFormattedFormattingRule..\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110740", "body": "@jaredpar : Before adding custom format code for this, i would suggest to write those additional testcases and run through the existing rule, to ensure there's no redundancy. Also note, not all the rules are tested, the rules that just use the roslyn apis are not tested, as it should be tested by the roslyn team. The tests that exist are only for rules implemented on top of roslyn formatter.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111375", "body": "@jaredpar :+1:  Changing the title to reflect the work to be done :)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113218", "body": ":+1: looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113515", "body": ":+1: looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115640", "body": "The commit username and author username are different.. You should amend the commit author info to dotnet-bot.. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118104", "body": "you need to amend your previous commit.. the log shows dotnet-bot as author, but jaredpar committed the change.. so \n1. git config --global --replace-all user.name dotnet-bot\n2. git config --global --replace-all user.email dotnet-bot@microsoft.com\n3. git commit --amend --reset-author\n\nwill change the committer info to dotnet-bot\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207791", "body": "@ellismg why not make this enum instead of static class?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/11492536", "body": "this link has been changed again and dupe of #107 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/11492536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697358", "body": "Yes.. during runtime, i got load exception.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22740711", "body": "Hmm, i'll verify this again.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22740711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "Petermarcu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "message": "Merge pull request #206 from stephentoub/licensing_headers\n\nUpdate licensing headers"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dotnet-bot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c23f29098953dc05665797c292a4b3a4562e886", "message": "Update licensing headers"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "japj": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/270", "title": "Fix corefx contribution process link", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexperovich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/254", "title": "Update to latest roslyn and fix issue in UsingLocationRule", "body": "", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "richardstanton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/244", "title": "Add MemberThis rule. Rule explicitly adds 'this.' before local member\u2026", "body": "\u2026 access.\r\n\r\nSome projects use a different naming convention for member access. In an alternative convention in order to easily tell if a variable is a local member the \"this.\" operator is always used. This convention takes a different approach from the existing PrivateFieldNaming rule that adds an underscore on members.\r\n\r\nThis change adds a MemberThis rule that is turned off by default. This would allow an alternative convention to be used by a project that wanted to use the codeformatter.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danquirk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/238", "title": "Diagnostic logging fixes", "body": "SARIF logs were being incorrectly generated since each error class (syntactic/semantic/etc) was calling LogDiagnostics upon completion. Now all Diagnostics are aggregated together at the end of analysis and then logged, producing a proper JSON output.\n\nI'd merged the 1.3 Roslyn upgrade branch (PR here https://github.com/dotnet/codeformatter/pull/237) from my machine in here to make sure these changes still worked with the new SARIF format. I recommend just browsing the .cs changes or going commit by commit and just looking at the first 2 commits.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/237", "title": "Upgrade Codeformatter to Roslyn 1.3-beta1", "body": "Need to upgrade so that we can use the latest ErrorLogger from Roslyn which meets the 1.0 SARIF spec requirements.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michalhosala": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/229", "title": "Add ability to use tabs", "body": "Added functionality which addresses issue #174, i.e. ability to use tabs instead of spaces during formatting. New command line switch /usetabs was introduced for this purpose.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jakesays": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/194", "title": "Added a rule to remove #region/#endregion directives.", "body": "Rule to remove regions.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michha": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/186", "title": "code cleanup in XUnitConverter", "body": "- using statements\n- static methods when possible\n- ...\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dsplaisted": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/127", "title": "Add code formatting rule to add newlines at the end of code files", "body": "@stephentoub has [pointed out](https://github.com/dotnet/corefx/pull/1851#discussion_r31315254) that text files should end with a newline.  This PR adds a code formatting rule to do this for C# source code files.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "david-mitchell": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/101", "title": "Add rule to remove unused usings.", "body": "This pull request adds a rule to remove unused using directives from the beginning of source files. It addresses issue #79.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AlekseyTs": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "title": "Add an option to run CodeFormatter on all projects/solutions within a directory.", "body": "Allow to specify a directory instead of a project/solution. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "terrajobst": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "title": "Add rules for formatting attributes", "body": "This adds two additional rules for dealing with attributes:\n### Removing superfluous parentheses\n\nIt's conventional to omit parentheses when the attribute doesn't take any arguments, for example:\n\n``` CSharp\n[target: SomeAtt()]\n```\n\nbecomes\n\n``` CSharp\n[target: SomeAtt]\n```\n### Separating attribute lists\n\nMost folks only use a single attribute in an attribute list, although the syntax supports multiple attributes. In most cases, putting attributes in separate lists is beneficial because it improves readability and allows better diffs.\n\nThis changes code like this:\n\n``` CSharp\n[Serializable, Category(\"Catagory\"), DefaultValue(1)]\n```\n\nto \n\n``` CSharp\n[Serializable]\n[Category(\"Catagory\")]\n[DefaultValue(1)]\n```\n\nThe only exception are attributes for parameters. In interop code, it's quite common to mark parameters with `[In]` and `[Out]`. Since the attributes are usually written inline, i.e. not on separate lines, it's actually beneficial to no split them into separate lists.\n\nThis means that code like this is left as-is:\n\n``` CSharp\nvoid NativeFun([In, Out] int* target)\n```\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308461", "body": "I don't think we should print to the console from the library at all. If we want to support warnings, we should expose the concept in the API layer. If we ever want to host the rules in some other environment (such as VS) printing to the raw console is less than ideal.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308472", "body": "Filed #25 to capture this.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "stephentoub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043373", "body": "LGTM.  But maybe add a link (e.g. http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs.aspx) for VS2015 Preview so that folks can easily download it if desired?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043582", "body": "Very meta :smile: LGTM.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043698", "body": "Ugh, nevermind, you already have one :smile:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043814", "body": "@jaredpar, nope, sorry, I completely missed it... I didn't read carefully enough and thought the link was just for the tools, not for all of VS.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ellismg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107112", "body": "@jaredpar I will do this, if you'd like.  I suspect you're the only other one with stuff in flight right now that would need to deal with merges.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111200", "body": "Thanks.  Installing the tools does work.  I was tripped up by the fact that the unit tests actually run if you don't have this set of tools installed.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207876", "body": "In that case, we would need to update RuleOrderAttribute to accept RuleOrder instead of int.  In that case, it wasn't clear to me how it would interact with the [DefaultValue] attribute we have on the Order property.  I can play around with that if you'd prefer? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9291380", "body": "Part of me wonders if you should write this to Console.Error instead, but it's not clear.  LGTM otherwise.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9291380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9559163", "body": "Can you please add a description about the copyrught switch to the detailed help text?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9559163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624158", "body": "I think our guidelines say we don't use var here ;-).\n\nThere are other instances in this file of this as well.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624472", "body": "I will be the first to admit that I don't fully grok the Roslyn Syntax Object Model.  Why do we not care about flowing trailing trivia?  Is it that there will never be any?  Can we add an assert to that effect?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625866", "body": "I was pretty pleased with myself.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625915", "body": "Good call, I will file an issue.  I would prefer that we don't block this on that, since we don't currently use C# 6.0 features.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626040", "body": "Based on my playing around in the debugger, even when you have have unicode excape sequences,  ValueText has the actual Unicode characters, instead of the escape sequences.  So I keep the existing ValueText, since this transformation doesn't impact it.\n\nI could be off base with my understanding of ValueText.  IIRC the docs were not super enlightening to me at the time.  Do you think there's a problem doing this? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "FiveTimesTheFun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107125", "body": "Concur.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "krwq": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69116121", "body": "We usually use git config to set the author although I think that looks good too.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69116121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118464", "body": "The only reason we do that is to make sure that git blame will show dotnet-bot and not the person who only moved the code. Git blame is working fine in this case. I would rather make other people do the same instead of changing the person who commited. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9208547", "body": "I agree with Priya that enum would be better although in this case your solution is more intuitive and I personally prefer it. Unless you can change RuleOrderAttribute class then I would rather change it. Not sure if this is Roslyn type or type from this project\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9208547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "jasonmalinowski": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367328", "body": "Why not just use the simplification engine to do this?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367353", "body": "Don't forget about structured trivia -- you may still have to descend further. (Scenario: cref referenced a field that was renamed.)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22698495", "body": "I suspect @davidfowl is correct -- we'll do a first-chance attempt to load the assembly in MefHostServices.TryLoadNearbyAssembly, but if it fails we'll just gracefully fall back.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22698495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272106", "body": "Why const? That doesn't change visibility AFAIK.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272142", "body": "ID is unchanged, not sure why you're holding onto it explicitly.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272169", "body": "Is this to enforce m_ or s_? Better hope they didn't do something else.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272193", "body": "Not sure if we short-circuit the rename being a no-op.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272233", "body": "A name of \"x_\" will end in an empty string.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347153", "body": "Rather than having to have the stateful flag, just check if newNode != syntaxNode. If the nodes are reference equal, then that means the rewriter did nothing.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347224", "body": "Is the policy no \"this.\" qualification for fields specifically, or no unnecessary qualification anywhere?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "nslottow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9451919", "body": "I meant to get around to this myself at some point last week.  Thanks for doing this.\n\nThe one thing that I would point out is, there is currently no way to format code inside literal `#if false` regions because a `false` literal is not a preprocessor symbol.  I'm not really sure of a good solution to this problem.  We could temporarily replace #if false directives with #if __CODE_FORMATTER_FALSE_PLACEHOLDER, set that symbol to true, format, then revert the symbol change...\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9451919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272711", "body": "This enforces the s_ prefix for static fields and the _ prefix for private fields.  See https://github.com/dotnet/corefx/wiki/Contributing#c-coding-style\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "davidfowl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697625", "body": "Are you sure it isn't a first chance exception? The workspaces assembly is missing a dependency on MEF but leaving out VB should work (I believe).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}