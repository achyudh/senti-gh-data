{"_default": {"1": {"rterwedo": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3087", "title": "aws s3 cp --recursive not downloading all small files, when it says it does", "body": "We are in the process of writing a few thousand ~500 byte files to an s3 bucket/folder.  \r\n\r\nCurrently In the console it shows 280 files (we assume this is correct as we have not wrote them all yet) in the folder.\r\n\r\n`aws s3 ls bucket/folder/ --recursive` shows 280 files.\r\n\r\n`aws s3 cp bucket/folder/ ./ --recursive`  shows its copied 280 files on the command line.  You can read the number explicitly and I counted lines of \"copied file\" output in console.\r\n\r\nHowever in mac os (right click get info) it shows 211 files.  \r\n\r\nAdditionally a     `ls . | wc -l ` shows 211 files.\r\n\r\nI have tried reducing number of concurrent to 1.  Cannot understand why it would show completed when the file doesn't exist on the local.  This is over wifi btw, so if there is no checking if a file was downloaded correctly, maybe thats it?  Unsure where to look next\r\n\r\nUPDATE:  We put together a hack to get around this bug...  basically, if you run:\r\n\r\n`aws s3 ls bucket/folder/ --recursive --dryrun >> filestodownload.txt` \r\n\r\nIt shows all the files you want to download, and saves it in a text file thats easy to parse.  We then parsed it, and did a separate aws s3 cp command for each individual file.  All downloaded successfully, albeit it was slow... so now working on concurrency...  but files are still MIA (even though we have local checks after download the file size > 0 and all succeed.\r\n\r\nReally confusing...\r\n\r\nUPDATE 2:  We spun up a AWS AMI and repeated process above.  It worked as expected.  IDK, seems to be related to Mac?  I am on 10.12.4 Sierra.", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3087/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peco8": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3085", "title": "\"ConnectionRefusedError: [Errno 61] Connection refused\" --endpoint-url with s3  with zsh", "body": "When I run `aws s3api --endpoint-url https://xxx.com list-buckets` there' s no problems and succeeded to list all the buckets \r\nHowever when I run `aws s3 --endpoint-url http://xxx.com ls`in zsh, it comes out with error `('Connection aborted.', ConnectionRefusedError(61, 'Connection refused'))`\r\n\r\nThe detail is \r\n```\u279c  ~ aws s3 --endpoint-url http://xxx.com --debug ls\r\n2018-01-16 17:51:31,867 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.14.24 Python/3.6.1 Darwin/16.7.0 botocore/1.8.28\r\n2018-01-16 17:51:31,868 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['s3', '--endpoint-url', 'http://xxx.com', '--debug', 'ls']\r\n2018-01-16 17:51:31,868 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function add_scalar_parsers at 0x1040489d8>\r\n2018-01-16 17:51:31,868 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,868 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function inject_assume_role_provider_cache at 0x103b3f268>\r\n2018-01-16 17:51:31,868 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable credentials_file from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable config_file from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable metadata_service_timeout from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable metadata_service_num_attempts from defaults.\r\n2018-01-16 17:51:31,869 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,870 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function attach_history_handler at 0x103f370d0>\r\n2018-01-16 17:51:31,870 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,870 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler <function add_waiters at 0x10404fbf8>\r\n2018-01-16 17:51:31,871 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,871 - MainThread - botocore.hooks - DEBUG - Event building-command-table.ls: calling handler <function add_waiters at 0x10404fbf8>\r\n2018-01-16 17:51:31,871 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.paths: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,871 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.anonymous: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.page-size: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.human-readable: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.ls: calling handler <awscli.argprocess.ParamShorthandParser object at 0x103b181d0>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.summarize: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.ls: calling handler <awscli.argprocess.ParamShorthandParser object at 0x103b181d0>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.ls.request-payer: calling handler <function uri_param at 0x103ad67b8>\r\n2018-01-16 17:51:31,872 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,872 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.session - DEBUG - Loading variable region from config file with value 'us-east-1'.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.session - DEBUG - Loading variable ca_bundle from defaults.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.session - DEBUG - Loading variable api_versions from defaults.\r\n2018-01-16 17:51:31,873 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env\r\n2018-01-16 17:51:31,873 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role\r\n2018-01-16 17:51:31,873 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file\r\n2018-01-16 17:51:31,874 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\r\n2018-01-16 17:51:31,874 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/data/endpoints.json\r\n2018-01-16 17:51:31,877 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-16 17:51:31,877 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler <function handle_service_name_alias at 0x103697730>\r\n2018-01-16 17:51:31,877 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n2018-01-16 17:51:31,886 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10366f400>\r\n2018-01-16 17:51:31,886 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10366f1e0>\r\n2018-01-16 17:51:31,887 - MainThread - botocore.args - DEBUG - The s3 config key is not a dictionary type, ignoring its value of: None\r\n2018-01-16 17:51:31,899 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)\r\n2018-01-16 17:51:31,900 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3\r\n2018-01-16 17:51:31,901 - MainThread - botocore.client - DEBUG - Using S3 path style addressing.\r\n2018-01-16 17:51:31,901 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.ListBuckets: calling handler <function validate_bucket_name at 0x1036acea0>\r\n2018-01-16 17:51:31,901 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.ListBuckets: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x1043e0048>>\r\n2018-01-16 17:51:31,901 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.ListBuckets: calling handler <function generate_idempotent_uuid at 0x1036acae8>\r\n2018-01-16 17:51:31,901 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.ListBuckets: calling handler <function add_expect_header at 0x1036ae400>\r\n2018-01-16 17:51:31,901 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.ListBuckets: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x1043e0048>>\r\n2018-01-16 17:51:31,954 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=ListBuckets) (verify_ssl=True) with params: {'url_path': '/', 'query_string': '', 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.14.24 Python/3.6.1 Darwin/16.7.0 botocore/1.8.28'}, 'body': b'', 'url': 'http://xxx.com/', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x104395898>, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': None}}}\r\n2018-01-16 17:51:31,955 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.ListBuckets: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x1043957b8>>\r\n2018-01-16 17:51:31,955 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.ListBuckets: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1041089b0>>\r\n2018-01-16 17:51:31,955 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.ListBuckets: calling handler <function set_operation_specific_signer at 0x1036ac9d8>\r\n2018-01-16 17:51:31,956 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.\r\n2018-01-16 17:51:31,956 - MainThread - botocore.auth - DEBUG - CanonicalRequest:\r\nGET\r\n/\r\n\r\nhost:xxx.com\r\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\nx-amz-date:20180116T085131Z\r\n\r\nhost;x-amz-content-sha256;x-amz-date\r\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\n2018-01-16 17:51:31,956 - MainThread - botocore.auth - DEBUG - StringToSign:\r\nAWS4-HMAC-SHA256\r\n20180116T085131Z\r\n20180116/us-east-1/s3/aws4_request\r\nebf54bbb4184d6a2907a75d597eb61affa3c57eb3a9e2f578c4298abdbc14b39\r\n2018-01-16 17:51:31,956 - MainThread - botocore.auth - DEBUG - Signature:\r\n456f5f93be4312b2ef44f64a32cb6621cc097a93cfd8f4ea4e0be22218afb212\r\n2018-01-16 17:51:31,958 - MainThread - botocore.endpoint - DEBUG - Sending http request: <PreparedRequest [GET]>\r\n2018-01-16 17:51:31,959 - MainThread - botocore.vendored.requests.packages.urllib3.connectionpool - INFO - Starting new HTTP connection (1): xxx.com\r\n2018-01-16 17:51:55,946 - MainThread - botocore.endpoint - DEBUG - ConnectionError received when sending HTTP request.\r\nTraceback (most recent call last):\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 349, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 130, in _send_request\r\n    self, method, url, body, headers, *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 157, in _send_output\r\n    self.send(msg)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 242, in send\r\n    return HTTPConnection.send(self, str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 155, in connect\r\n    conn = self._new_conn()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 134, in _new_conn\r\n    (self.host, self.port), self.timeout, **extra_kw)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 88, in create_connection\r\n    raise err\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 78, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 61] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 597, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/retry.py\", line 245, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/packages/six.py\", line 309, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 349, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 130, in _send_request\r\n    self, method, url, body, headers, *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 157, in _send_output\r\n    self.send(msg)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 242, in send\r\n    return HTTPConnection.send(self, str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 155, in connect\r\n    conn = self._new_conn()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 134, in _new_conn\r\n    (self.host, self.port), self.timeout, **extra_kw)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 88, in create_connection\r\n    raise err\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 78, in create_connection\r\n    sock.connect(sa)\r\nbotocore.vendored.requests.packages.urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionRefusedError(61, 'Connection refused'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/endpoint.py\", line 213, in _get_response\r\n    proxies=self.proxies, timeout=self.timeout)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/adapters.py\", line 415, in send\r\n    raise ConnectionError(err, request=request)\r\nbotocore.vendored.requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionRefusedError(61, 'Connection refused'))\r\n2018-01-16 17:51:55,949 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.ListBuckets: calling handler <botocore.retryhandler.RetryHandler object at 0x104395d30>\r\n2018-01-16 17:51:55,949 - MainThread - botocore.retryhandler - DEBUG - retry needed, retryable exception caught: ('Connection aborted.', ConnectionRefusedError(61, 'Connection refused'))\r\nTraceback (most recent call last):\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 349, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 130, in _send_request\r\n    self, method, url, body, headers, *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 157, in _send_output\r\n    self.send(msg)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/awsrequest.py\", line 242, in send\r\n    return HTTPConnection.send(self, str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 155, in connect\r\n    conn = self._new_conn()\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 134, in _new_conn\r\n    (self.host, self.port), self.timeout, **extra_kw)\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 88, in create_connection\r\n    raise err\r\n  File \"/Users/toshiki.inami/Library/Python/3.6/lib/python/site-packages/botocore/vendored/requests/packages/urllib3/util/connection.py\", line 78, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 61] Connection refused\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbendick": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3083", "title": "cloudformation package should append profile name to deploy command", "body": "If the user uses the `--profile` flag during the package command, that flag should be echoed in the resulting `deploy` command that is issued. For example:\r\n```\r\naws cloudformation package --template-file cloudformation/sam.yaml --output-template-file b.yaml --s3-bucket sam-bucket --s3-prefix sam --profile sam-app\r\n```\r\nshould produce\r\n```\r\nSuccessfully packaged artifacts and wrote output template to file b.yaml.\r\nExecute the following command to deploy the packaged template\r\naws cloudformation deploy --template-file b.yaml --profile sam-app --stack-name <YOUR STACK NAME>\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sstarcher": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3079", "title": "download-db-log-file-portion with starting token of 0 not working as documented", "body": "From the documentation for `aws rds download-db-log-file-portion`\r\n```       \r\nIn  order  to  download  the  entire  file, you need --starting-token 0\r\n       parameter:\r\n\r\n          aws rds download-db-log-file-portion --db-instance-identifier myinstance \\\r\n          --log-file-name log.txt --starting-token 0 --output text > full.txt```\r\n\r\ncommand: `aws rds download-db-log-file-portion --db-instance-identifier instance --log-file-name error/log_file --starting-token 0`  This file is over 700mb in size.  According to the documentation I should get the entire file, but instead the file is truncated.\r\n```\r\n\r\nActual results show the data is being truncated.\r\n```\r\n{\r\n    \"LogFileData\": \"2018-01-09 15:00:00...\r\n...\\n [Your log message was truncated]\\n\"\r\n}\r\n```\r\n\r\nCLI Version\r\n```\r\naws --version                                                                                                      \r\naws-cli/1.14.20 Python/3.6.4 Darwin/17.3.0 botocore/1.8.24\r\n```\r\n\r\nRelated issues: \r\nhttps://github.com/aws/aws-cli/issues/2745\r\nhttps://github.com/aws/aws-cli/issues/2268\r\n\r\nDebug output with log information stripped\r\n\r\naws rds download-db-log-file-portion --db-instance-identifier xxxx --log-file-name error/xxxx --starting-token 0  --debug 2> out \r\n\r\n```\r\n2018-01-10 09:34:10,630 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.14.20 Python/3.6.4 Darwin/17.3.0 botocore/1.8.24\r\n2018-01-10 09:34:10,630 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['rds', 'download-db-log-file-portion', '--db-instance-identifier', 'db-instance', '--log-file-name', 'error/logfile', '--starting-token', '0', '--debug']\r\n2018-01-10 09:34:10,631 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function add_scalar_parsers at 0x109c11840>\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function inject_assume_role_provider_cache at 0x10970ba60>\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable credentials_file from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable config_file from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable metadata_service_timeout from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,631 - MainThread - botocore.session - DEBUG - Loading variable metadata_service_num_attempts from defaults.\r\n2018-01-10 09:34:10,632 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,632 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function attach_history_handler at 0x1099bae18>\r\n2018-01-10 09:34:10,632 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,632 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,632 - MainThread - botocore.session - DEBUG - Loading variable api_versions from defaults.\r\n2018-01-10 09:34:10,633 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/Cellar/awscli/1.14.20/libexec/lib/python3.6/site-packages/botocore/data/rds/2014-10-31/service-2.json\r\n2018-01-10 09:34:10,641 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/Cellar/awscli/1.14.20/libexec/lib/python3.6/site-packages/botocore/data/rds/2014-10-31/service-2.sdk-extras.json\r\n2018-01-10 09:34:10,641 - MainThread - botocore.hooks - DEBUG - Event service-data-loaded.rds: calling handler <function register_retries_for_service at 0x1092ae268>\r\n2018-01-10 09:34:10,642 - MainThread - botocore.handlers - DEBUG - Registering retry handlers for service: rds\r\n2018-01-10 09:34:10,644 - MainThread - botocore.hooks - DEBUG - Event building-command-table.rds: calling handler <function _building_command_table at 0x109b98f28>\r\n2018-01-10 09:34:10,644 - MainThread - botocore.hooks - DEBUG - Event service-data-loaded.rds: calling handler <function register_retries_for_service at 0x1092ae268>\r\n2018-01-10 09:34:10,644 - MainThread - botocore.handlers - DEBUG - Registering retry handlers for service: rds\r\n2018-01-10 09:34:10,644 - MainThread - botocore.hooks - DEBUG - Event building-command-table.rds: calling handler <function _add_generate_db_auth_token at 0x109b98d90>\r\n2018-01-10 09:34:10,645 - MainThread - botocore.hooks - DEBUG - Event building-command-table.rds: calling handler <function add_waiters at 0x109c16a60>\r\n2018-01-10 09:34:10,650 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/Cellar/awscli/1.14.20/libexec/lib/python3.6/site-packages/botocore/data/rds/2014-10-31/waiters-2.json\r\n2018-01-10 09:34:10,651 - MainThread - awscli.clidriver - DEBUG - OrderedDict([('db-instance-identifier', <awscli.arguments.CLIArgument object at 0x109f1dd30>), ('log-file-name', <awscli.arguments.CLIArgument object at 0x109f1dd68>), ('marker', <awscli.arguments.CLIArgument object at 0x109f1ddd8>), ('number-of-lines', <awscli.arguments.CLIArgument object at 0x109f1de10>)])\r\n2018-01-10 09:34:10,651 - MainThread - botocore.hooks - DEBUG - Event building-argument-table.rds.download-db-log-file-portion: calling handler <function add_streaming_output_arg at 0x109c11ae8>\r\n2018-01-10 09:34:10,651 - MainThread - botocore.hooks - DEBUG - Event building-argument-table.rds.download-db-log-file-portion: calling handler <function add_cli_input_json at 0x10970bea0>\r\n2018-01-10 09:34:10,652 - MainThread - botocore.hooks - DEBUG - Event building-argument-table.rds.download-db-log-file-portion: calling handler <function unify_paging_params at 0x109b8f510>\r\n2018-01-10 09:34:10,658 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/Cellar/awscli/1.14.20/libexec/lib/python3.6/site-packages/botocore/data/rds/2014-10-31/paginators-1.json\r\n2018-01-10 09:34:10,658 - MainThread - awscli.customizations.paginate - DEBUG - Modifying paging parameters for operation: DownloadDBLogFilePortion\r\n2018-01-10 09:34:10,658 - MainThread - botocore.hooks - DEBUG - Event building-argument-table.rds.download-db-log-file-portion: calling handler <function add_generate_skeleton at 0x109b73d90>\r\n2018-01-10 09:34:10,658 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.rds.download-db-log-file-portion: calling handler <bound method OverrideRequiredArgsArgument.override_required_args of <awscli.customizations.cliinputjson.CliInputJSONArgument object at 0x109f1de80>>\r\n2018-01-10 09:34:10,658 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.rds.download-db-log-file-portion: calling handler <bound method GenerateCliSkeletonArgument.override_required_args of <awscli.customizations.generatecliskeleton.GenerateCliSkeletonArgument object at 0x109f2e4e0>>\r\n2018-01-10 09:34:10,659 - MainThread - botocore.hooks - DEBUG - Event operation-args-parsed.rds.download-db-log-file-portion: calling handler functools.partial(<function check_should_enable_pagination at 0x109b8f620>, ['marker', 'number-of-lines'], {}, OrderedDict([('db-instance-identifier', <awscli.arguments.CLIArgument object at 0x109f1dd30>), ('log-file-name', <awscli.arguments.CLIArgument object at 0x109f1dd68>), ('marker', <awscli.arguments.CLIArgument object at 0x109f1ddd8>), ('number-of-lines', <awscli.arguments.CLIArgument object at 0x109f1de10>), ('cli-input-json', <awscli.customizations.cliinputjson.CliInputJSONArgument object at 0x109f1de80>), ('starting-token', <awscli.customizations.paginate.PageArgument object at 0x109f1deb8>), ('page-size', <awscli.customizations.paginate.PageArgument object at 0x109f2e390>), ('max-items', <awscli.customizations.paginate.PageArgument object at 0x109f2e438>), ('generate-cli-skeleton', <awscli.customizations.generatecliskeleton.GenerateCliSkeletonArgument object at 0x109f2e4e0>)]))\r\n2018-01-10 09:34:10,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.db-instance-identifier: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.rds.download-db-log-file-portion: calling handler <awscli.argprocess.ParamShorthandParser object at 0x1096b3fd0>\r\n2018-01-10 09:34:10,660 - MainThread - awscli.arguments - DEBUG - Unpacked value of 'db-instance' for parameter \"db_instance_identifier\": 'db-instance'\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.log-file-name: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.rds.download-db-log-file-portion: calling handler <awscli.argprocess.ParamShorthandParser object at 0x1096b3fd0>\r\n2018-01-10 09:34:10,660 - MainThread - awscli.arguments - DEBUG - Unpacked value of 'error/logfile' for parameter \"log_file_name\": 'error/logfile'\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.marker: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.number-of-lines: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.cli-input-json: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.starting-token: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.page-size: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.max-items: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.rds.download-db-log-file-portion.generate-cli-skeleton: calling handler <function uri_param at 0x10969b9d8>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event calling-command.rds.download-db-log-file-portion: calling handler <bound method CliInputJSONArgument.add_to_call_parameters of <awscli.customizations.cliinputjson.CliInputJSONArgument object at 0x109f1de80>>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.hooks - DEBUG - Event calling-command.rds.download-db-log-file-portion: calling handler <bound method GenerateCliSkeletonArgument.generate_json_skeleton of <awscli.customizations.generatecliskeleton.GenerateCliSkeletonArgument object at 0x109f2e4e0>>\r\n2018-01-10 09:34:10,660 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable region from config file with value 'aws-region'.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable ca_bundle from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.session - DEBUG - Loading variable api_versions from defaults.\r\n2018-01-10 09:34:10,661 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env\r\n2018-01-10 09:34:10,661 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role\r\n2018-01-10 09:34:10,661 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file\r\n2018-01-10 09:34:10,662 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\r\n2018-01-10 09:34:10,663 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/Cellar/awscli/1.14.20/libexec/lib/python3.6/site-packages/botocore/data/endpoints.json\r\n2018-01-10 09:34:10,665 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,665 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler <function handle_service_name_alias at 0x109298840>\r\n2018-01-10 09:34:10,668 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.rds: calling handler <function add_generate_db_auth_token at 0x109232bf8>\r\n2018-01-10 09:34:10,668 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.rds: calling handler <function add_generate_presigned_url at 0x109239510>\r\n2018-01-10 09:34:10,668 - MainThread - botocore.args - DEBUG - The s3 config key is not a dictionary type, ignoring its value of: None\r\n2018-01-10 09:34:10,677 - MainThread - botocore.endpoint - DEBUG - Setting rds timeout as (60, 60)\r\n2018-01-10 09:34:10,678 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: rds\r\n2018-01-10 09:34:10,678 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,678 - MainThread - botocore.session - DEBUG - Loading variable profile from defaults.\r\n2018-01-10 09:34:10,678 - MainThread - botocore.session - DEBUG - Loading variable output from config file with value 'json'.\r\n2018-01-10 09:34:10,678 - MainThread - botocore.paginate - DEBUG - Attempting to fall back to old starting token parser. For token: 0\r\n2018-01-10 09:34:10,678 - MainThread - botocore.paginate - DEBUG - Attempting to fall back to old starting token parser. For token: 0\r\n2018-01-10 09:34:10,679 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.rds.DownloadDBLogFilePortion: calling handler <function generate_idempotent_uuid at 0x1092acb70>\r\n2018-01-10 09:34:10,679 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=DownloadDBLogFilePortion) (verify_ssl=True) with params: {'url_path': '/', 'query_string': '', 'method': 'POST', 'headers': {'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8', 'User-Agent': 'aws-cli/1.14.20 Python/3.6.4 Darwin/17.3.0 botocore/1.8.24'}, 'body': {'Action': 'DownloadDBLogFilePortion', 'Version': '2014-10-31', 'DBInstanceIdentifier': 'db-instance', 'LogFileName': 'error/logfile', 'Marker': '0'}, 'url': 'https://rds.aws-region.amazonaws.com/', 'context': {'client_region': 'aws-region', 'client_config': <botocore.config.Config object at 0x10a000668>, 'has_streaming_input': False, 'auth_type': None}}\r\n2018-01-10 09:34:10,679 - MainThread - botocore.hooks - DEBUG - Event request-created.rds.DownloadDBLogFilePortion: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10a000588>>\r\n2018-01-10 09:34:10,679 - MainThread - botocore.hooks - DEBUG - Event choose-signer.rds.DownloadDBLogFilePortion: calling handler <function set_operation_specific_signer at 0x1092aca60>\r\n2018-01-10 09:34:10,680 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.\r\n2018-01-10 09:34:10,680 - MainThread - botocore.auth - DEBUG - CanonicalRequest:\r\nPOST\r\n/\r\n\r\ncontent-type:application/x-www-form-urlencoded; charset=utf-8\r\nhost:rds.aws-region.amazonaws.com\r\nx-amz-date:20180110T143410Z\r\n\r\ncontent-type;host;x-amz-date\r\n24e7f0dc1243da7337fe4b71cd1b33ba341789e2e37bd44654fd29269d4ef8ce\r\n2018-01-10 09:34:10,680 - MainThread - botocore.auth - DEBUG - StringToSign:\r\nAWS4-HMAC-SHA256\r\n20180110T143410Z\r\n20180110/aws-region/rds/aws4_request\r\nc778a189e211e2e7d0f114ca6ff5bfc0470fe944d0c3bdfc916bc2e840da4bbc\r\n2018-01-10 09:34:10,680 - MainThread - botocore.auth - DEBUG - Signature:\r\n13ab07cfdb95d82d66c3aa650e44840be243229b692ba3c52bce4a748bd62d1b\r\n2018-01-10 09:34:10,682 - MainThread - botocore.endpoint - DEBUG - Sending http request: <PreparedRequest [POST]>\r\n2018-01-10 09:34:10,683 - MainThread - botocore.vendored.requests.packages.urllib3.connectionpool - INFO - Starting new HTTPS connection (1): rds.aws-region.amazonaws.com\r\n2018-01-10 09:34:11,339 - MainThread - botocore.vendored.requests.packages.urllib3.connectionpool - DEBUG - \"POST / HTTP/1.1\" 200 1069820\r\n2018-01-10 09:34:13,178 - MainThread - botocore.parsers - DEBUG - Response headers: {'x-amzn-requestid': '968aebba-1ba8-4adf-bb78-c9c7b136cca1', 'content-type': 'text/xml', 'content-length': '1069820', 'vary': 'Accept-Encoding', 'date': 'Wed, 10 Jan 2018 14:34:10 GMT'}\r\n2018-01-10 09:34:13,178 - MainThread - botocore.parsers - DEBUG - Response body:\r\nb'<DownloadDBLogFilePortionResponse xmlns=\"http://rds.amazonaws.com/doc/2014-10-31/\">\\n  <DownloadDBLogFilePortionResult>\\n    <AdditionalDataPending>false</AdditionalDataPending>\\n    <Marker>15:1048577</Marker>\\n    <LogFileData>....\\n [Your log message was truncated]\\n</LogFileData>\\n  </DownloadDBLogFilePortionResult>\\n  <ResponseMetadata>\\n    <RequestId>968aebba-1ba8-4adf-bb78-c9c7b136cca1</RequestId>\\n  </ResponseMetadata>\\n</DownloadDBLogFilePortionResponse>\\n'\r\n2018-01-10 09:34:13,198 - MainThread - botocore.hooks - DEBUG - Event needs-retry.rds.DownloadDBLogFilePortion: calling handler <botocore.retryhandler.RetryHandler object at 0x109cd4f98>\r\n2018-01-10 09:34:13,198 - MainThread - botocore.retryhandler - DEBUG - No retry needed.\r\n2018-01-10 09:34:13,198 - MainThread - botocore.paginate - DEBUG - Attempting to fall back to old starting token parser. For token: 0\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "otanner": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3076", "title": "ssm put-parameter fetches external URLs if value is URL", "body": "Hi,\r\n\r\nWhen the value of the parameter contains URL, aws-cli fetches the URL and tries to insert the source code as the value. When setting the same value via console it can be stored as is.\r\n\r\nExample:\r\n`aws ssm put-parameter --type 'SecureString' --key-id 'alias/mykey' --name '/myservice/url' --value 'https://google.com/'` returns the source code of https://google.com/ and an error `failed to satisfy constraint: Member must have length less than or equal to 4096`.\r\n\r\nIs this a bug or a feature with missing documentation? Is there a possibility to put raw values containing URLs without this magic?\r\n\r\nVersion information:\r\n`aws-cli/1.14.19 Python/2.7.10 Darwin/16.7.0 botocore/1.8.23`", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hoegertn": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3050", "title": "Please support generation of pre-signed URLs for S3 other than GET", "body": "Support other methods and extra parameters for the generation of pre-signed URLs", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmcgough": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3037", "title": "Stop skipping FIFOs now that streams with STDIN/OUT are working with s3 cp.", "body": "We would very much like to use named pipes in AWS Batch to set up data streams from S3 for user jobs. It is exciting that AWS CLI supports STDIN/OUT at this time, but not all command line tools our users want can work with STDIN/OUT. Named pipes would let us use data streams with tools that do not directly support STDIN/OUT.\r\n\r\nIt looks like is_special_file() in filegenerator.py checks stat.S_ISFIFO. That made sense when streams were not supported, but now that they are, I think it is just that check that is stopping us from uploading to S3 from our AWS Batch containers (download works, which makes sense as no local file would need to be stated).", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MrHaCkEr": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3035", "title": "unknown encoding: cp65001", "body": "Retrieving a string from DynamoDB that contain Unicode chars, requieres to change the codepage from cp850(ibm850) to cp65001(UTF-8) to prevent an encoding error.\r\n\r\nBut doing so results in `LookupError: unknown encoding: cp65001`.\r\n\r\nCommand used: `aws dynamodb scan --table-name NovelupdateInfo --region eu-west-1 --endpoint-url http://localhost:8000`\r\n\r\nWindows 10", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamchainz": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3027", "title": "'configservice get-resource-config-history' really slow", "body": "```sh\r\n$ time aws configservice get-resource-config-history --resource-type AWS::EC2::Instance --resource-id i-redacted\r\n<output redacted>\r\naws configservice get-resource-config-history --resource-type  --resource-id   0.61s user 0.08s system 4% cpu 14.075 total\r\n```\r\n\r\nbut it's not the service, as in ipython it takes milliseconds:\r\n\r\n\r\n```py\r\nIn [1]: import boto3\r\n\r\nIn [2]: %timeit boto3.client('config').get_resource_config_history(resourceType='AWS::EC2::Instance', resourceId='i-redacted')\r\n1 loop, best of 3: 122 ms per loop\r\n```\r\n\r\nI reran with the same instance repeatedly in case there's caching in the service too, but it doesn't appear so.\r\n\r\nIt's only this one command in `configservice` I've found slow, other things work at normal speed, e.g.\r\n\r\n```sh\r\n$ time aws s3api list-buckets\r\n<output redacted>\r\naws s3api list-buckets  0.30s user 0.07s system 59% cpu 0.630 total\r\n$ time aws configservice describe-delivery-channels                       \u272d\r\n<output redacted>\r\naws configservice describe-delivery-channels  0.29s user 0.07s system 74% cpu 0.482 total\r\n```\r\n\r\nUsing latest CLI, boto3, botocore, etc.", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hjma29": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3011", "title": "output table format disable column name sorting", "body": "Hello, I'd like to arrange column name and sequence in query string and have table output show the same column sequence. Can output table disable auto column name alphabetic sorting?", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fhewitt": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/3002", "title": "cloudformation deploy should handle throttling.", "body": "**Bug description**\r\nWe have a cloudformation which describe our DynamoDB tables: 6 tables, all with their global secondary indexes, scaling policies, scalable target + a shared access and scalling roles.\r\n\r\nTrying to deploy the configuration we hit an error:\r\nUnable to create alarms for scaling policy ReadAutoScalingPolicy-Session-Primary-dev due to reason: Rate exceeded (Service: AmazonCloudWatch; Status Code: 400; Error Code: Throttling; Request ID: 1f0a35b7-d542-11e7-83ca-0d260ce2adf0)\r\n\r\nCloudFormation should handle itself the throttling automatically, just taking longer before completion.\r\n\r\n**Workaround**\r\nWhat is the temporary solution for now?\r\n\r\nI've though about pushing table by table, handling myself the throttling, but this raised multiple issues:\r\n\r\n1. References: I don't want to define a different scaling role for each table, but the scaling role must be defined in the same CloudFormation definition to be referenced.\r\n2. This explode the number of stacks, increasing solution complexity and creating a maintenance issue.\r\n3. This broke ability to ensure an atomic update, if the thirds stack fail, we got stuck with a broken state, partially updated and that's really not good.\r\n\r\nTherefore, it doesn't seem to be a correct solution.", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/3002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "karimtabet": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2999", "title": "clidriver in version 1.13.0 is broken", "body": "After pip installing `awscli==1.13.0` in a Docker container based from python:3.6.2, running any aws commands returns\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/aws\", line 19, in <module>\r\n    import awscli.clidriver\r\n  File \"/usr/local/lib/python3.6/site-packages/awscli/clidriver.py\", line 24, in <module>\r\n    from botocore.history import get_global_history_recorder\r\nModuleNotFoundError: No module named 'botocore.history'\r\n```\r\n\r\nReverted to `awscli==1.12.0` and everything works fine.", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2999/reactions", "total_count": 6, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 6, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "J00MZ": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2996", "title": "Adding new profile should add newline before", "body": "Have multiple IAM users configured in `~/.aws/credentials`\r\n\r\nAdded IAM user as follows:\r\n`aws configure --profile NEW_PROFILE_NAME`\r\nCompleted sucessfully as expected.\r\n\r\nHowever, next step of running a command resulted in error: \r\n```\r\nPS C:\\WINDOWS\\system32> aws --profile NEW_PROFILE_NAME s3 ls\r\nUnable to locate credentials. You can configure credentials by running \"aws configure\".\r\n```\r\nChecking `~/.aws/credentials` file showed new creds were appended to file without newline as follows:\r\n```\r\n[OLD_PROFILE_NAME]\r\naws_access_key_id = AAAAAAAAAAAAAAAAAAAA\r\naws_secret_access_key = KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK\r\nregion=XX-east-X\r\ntoolkit_artifact_guid=11111111-1111-1111-1111-111111111111[NEW_PROFILE_NAME]\r\naws_access_key_id = BBBBBBBBBBBBBBBBBBBB\r\naws_secret_access_key = JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\r\n```\r\n\r\nIMHO this is easily fixable by adding a newline echo before the new creds\r\n\r\nCLI version: `aws-cli/1.12.2 Python/2.7.14 Windows/10 botocore/1.8.2`", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "limbo127": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2994", "title": "https_proxy / http_proxy  ipv6 does not work", "body": "Hello, \r\nusing ipv6 http/s proxy seems to not work.\r\n\r\nTest with http(s)_proxy on localhost ipv4 : aws cli is working\r\nTest with http(s)_proxy with ipv6 adddress : export https_proxy=\"http://[xxxx:xxxx:xxxx]:8080\" does not work.\r\n (Caused by ProxyError('Cannot connect to proxy.', gaierror(-2, 'Name or service not known')))\r\n\r\n\r\n[WSO-ROSAPARKS-3b714fa2-f497-ce7d-eb15-b8aeedea2f3c]aws --version\r\naws-cli/1.12.2 Python/2.7.9 Linux/4.9.23 botocore/1.8.2\r\n\r\nRegards, \r\nNicolas Prochazka\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamantnz": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2982", "title": "feature request: `aws s3 cat` command", "body": "Hi team. It'd be great to have an `aws s3 cat` command to preview text files via the aws cli. I often have to `COPY` data into Redshift from S3 and having the ability to see the first few rows would be super handy for seeing whether there is a header, what data types I would need in my schema, what delimiter has been used etc.\r\n\r\nThanks!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2982/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "batmat": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2977", "title": "--tag-specifications option seems to be a new option, but cannot find it in the changelog", "body": "Hello!\r\n\r\nI spent a bit of time trying to understand why my previously working command was failing:\r\n\r\n```\r\n$ aws ec2 run-instances \\\r\n          --image-id  ami-524eab28 \\\r\n          --count 1 \\\r\n          --instance-type r4.large \\\r\n          --key-name the-key \\\r\n          ...\r\n          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=windows-agent}]' \\\r\n          --block-device-mapping '[ { \"DeviceName\": \"/dev/sda1\", \"Ebs\": { \"VolumeSize\": 100 } } ]'\r\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\r\nTo see help text, you can run:\r\n\r\n  aws help\r\n  aws <command> help\r\n  aws <command> <subcommand> help\r\n\r\nUnknown options: --tag-specifications, ResourceType=instance,Tags=[{Key=Name,Value=windos-agent}]\r\n```\r\n\r\nApparently, this works on `aws-cli/1.12.0 Python/2.7.14 Linux/4.13.12-200.fc26.x86_64 botocore/1.8.0` but does not aws cli 1.12, but does not on some older version (sorry, unfortunately don't have that data anymore since I twiddled in the meantime and didn't store it :-().\r\n\r\nAnyway, no big deal because I'm now up and running, but could you please update the changelog so that one finds when it was introduced?\r\n\r\nGrepping https://github.com/aws/aws-cli/blob/develop/CHANGELOG.rst for \"tag-specifications\" does not yield anything.\r\n\r\nThank you!", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dictcp": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2976", "title": "ruby-2.0 won't work for recent ubuntu", "body": "https://github.com/aws/aws-cli/blob/59e30779bc290a2f4f4d124c79144b8b77464700/awscli/customizations/codedeploy/systems.py#L216\r\n\r\nwe should not hardcode to install a ruby 2.0 while ignoring ruby >2.0, eg ruby2.3\r\n\r\nRef: \r\nhttps://github.com/aws/aws-codedeploy-agent/issues/61", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KrzysztofWilczek": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2965", "title": "Cannot get all version of lambda function using lambda list-versions-by-function", "body": "It appears that when I run \r\n`aws lambda list-versions-by-function --function-name xyz`\r\nI cannot get more than 50 version of my lambda (while I have right now over 60) \r\nI found parameter for this method like --max-items and I've set it to 100. And still only 50 version are in response. So I'm unable to get all version of my lambda function.\r\nWhat's more, this limitation for 50 elements isn't described on http://docs.aws.amazon.com/cli/latest/reference/lambda/list-versions-by-function.html\r\n\r\nCan you please assist on this issue?\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carlnordenfelt": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2962", "title": "elbv2 wait commands", "body": "Hi,\r\n\r\nI am wondering if there are plans to add elbv2 wait commands for registering and de-registering Targets in Target Groups?\r\n\r\n/ Carl", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dastbe": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2958", "title": "DynamoDB Consumed Capacity is incorrect when CLI makes multiple requests", "body": "Hi!\r\n\r\nWe've noticed that when we perform a ddb count query from the CLI and have it return consumed capacity, the CLI is internally making multiple requests and aggregating the counts across queries. However, it's not also aggregating the consumed capacity. This leads to some odd results like counting 40,000 4kb records and only using 126.5 capacity units.\r\n\r\nLooking into it a bit more, it looks like [this](https://github.com/boto/botocore/blob/develop/botocore/data/dynamodb/2012-08-10/paginators-1.json) is where the issue is (not assuming its as simple as removing ConsumedCapacity from non-aggregate keys =D).\r\n\r\ncli version: 1.11.160", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "etsangsplk": {"issues": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/2957", "title": "Support for querying what region a service support or what services a region support", "body": "We have this table:\r\nhttps://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/\r\n\r\nIt is highly useful to add query to do this on the cli level.\r\n\r\ne.g I want to see what regions support EFS ...", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/2957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "awstools": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-cli/commits/9cdd69c852c857f19b0e8f40caca1912e92a7675", "message": "Merge branch 'release-1.14.28' into develop\n\n* release-1.14.28:\n  Bumping version to 1.14.28\n  Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/434058b8078c49d603026565588f4bf7bbf5b76c", "message": "Bumping version to 1.14.28"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/16c8ae91b7d727d76d7c51975890272ceff0fd5f", "message": "Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/0841e1e64dcff090473ec808dfe07b78e27a7631", "message": "Merge branch 'release-1.14.27' into develop\n\n* release-1.14.27:\n  Bumping version to 1.14.27\n  Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/98738828e16e0223ce801242ccbd3c9f1411af44", "message": "Bumping version to 1.14.27"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/c293166edc3d40cbea5cac3317854e21ada00b43", "message": "Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/c41580d9ea69fe29b2ad570359fe004d52712983", "message": "Merge branch 'release-1.14.26' into develop\n\n* release-1.14.26:\n  Bumping version to 1.14.26\n  Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/2bbb875c84759d6e8e4d8e193e5e9f46d818877a", "message": "Bumping version to 1.14.26"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/633ea3dc0beba74d2493fef2d8c58adfc2a6f899", "message": "Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/ac98af3b432be05bd6bfde0b78e4e843c5c80c28", "message": "Merge branch 'release-1.14.25' into develop\n\n* release-1.14.25:\n  Bumping version to 1.14.25\n  Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/f32f767e53ab02c3769678b6c1ed8c3e30336ab7", "message": "Bumping version to 1.14.25"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/5fc7a6fa3831001c65b504a0b035fb6bb419d050", "message": "Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/1c2c593cdd2b82aadb6973e88ac044a1349d1b94", "message": "Merge branch 'release-1.14.24' into develop\n\n* release-1.14.24:\n  Bumping version to 1.14.24\n  Update changelog based on model updates"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/bd59267d9f022b4ad0c092b8fdc9d66be0a62a1f", "message": "Bumping version to 1.14.24"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JordonPhillips": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-cli/commits/4851c13b4e54ebc5aee5e02df2f3c4301d879f01", "message": "Merge pull request #2922 from JordonPhillips/zero-rc-deploy\n\nAdd option to return zero rc for empty deploy changeset"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/007e8cac9fbfc17f07d311fe472fd2b76822b33d", "message": "Unify error writing logic"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/62bb76d585a1c07ffcc0f0cb8572fdbe5c35ed19", "message": "Add flag to set rc for empty deploy changeset"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/4e4d88a2ed03e80a83648416a8f1dd4685faca28", "message": "Merge pull request #3047 from JordonPhillips/log-tests\n\nWait for created buckets to exist in integ tests"}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3062", "title": "Add reference to the universal param docs", "body": "This adds a reference to the main doc page for the cli which\r\ndocuments all the universal parameters.\r\n\r\nThis depends on boto/botocore#1350\r\n\r\nHere's what the html docs will look like:\r\n\r\n![help](https://user-images.githubusercontent.com/2643092/34419236-8530b45e-ebb7-11e7-8e95-5dbd6a8b31c4.png)\r\n\r\nThat link will take you [here](http://docs.aws.amazon.com/cli/latest/reference/).\r\n\r\nHere's what the help pages will look like:\r\n\r\n![screen shot 2017-12-28 at 10 08 41 am](https://user-images.githubusercontent.com/2643092/34419243-8e42b9e8-ebb7-11e7-8120-b131d464a21b.png)\r\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/16753320", "body": "I just tried it out, getting the same result on `develop`.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/16753320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "stan3": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-cli/commits/2701428f1b07781402f8bf2ceaccf4a97477c098", "message": "don't return non zero with no stack change"}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2659", "title": "don't set UsePreviousValue if parameters doesn't exist (fixes #2599)", "body": "fixes #2599", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stealthycoin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-cli/commits/6ddda5ccaeaaeafb93ddeb790916b8664b7348d4", "message": "Revert \"Merge pull request #2778 from pwrmiller/develop\"\n\nThis reverts commit 99ba5e65ece916d63826449a58c624e5d6ce436d, reversing\nchanges made to 3f8f12ceb4f529a2798b011f887f1dac4eeabba1."}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/99ba5e65ece916d63826449a58c624e5d6ce436d", "message": "Merge pull request #2778 from pwrmiller/develop\n\naws cloudformation deploy large template support"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/3f8f12ceb4f529a2798b011f887f1dac4eeabba1", "message": "Merge pull request #3086 from stealthycoin/fix-http-link\n\nChange github button link from http to https"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/a00f43d7c9549da17449c77d721b6c56af52a809", "message": "Change github button link from http to https"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/0c20ec9ca93942ecb592561e5d9fd65e37acf7f8", "message": "Merge pull request #3068 from jeremywiebe/patch-1\n\nEnsure the full pattern type is logged"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/7b726d3385125e7818ae5108dbeb2f71a72cbf52", "message": "Merge pull request #2926 from stealthycoin/integ-test-respect-env-region\n\nMake test runner use AWS_DEFAULT_REGION instead of override it"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/1fe52d13b8b6f23d02f5e48f1d130dc66971a769", "message": "Merge pull request #3080 from rdp-cloud/patch-1\n\nUpdated with --range example"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/edd6b8f2565af0fab7cd013d1ac53fdfabcdeaa8", "message": "Merge pull request #3055 from awsdocs/ec2-examples\n\nnew and updated EC2 examples"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/6792a2ff423e444639af82e6a21ee8513c526369", "message": "Merge pull request #3054 from awsdocs/organizations-examples\n\nupdated organizations example"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/f25b9528e4db2d37230f45e8d4b9fa1db166674d", "message": "Merge pull request #3053 from awsdocs/acm-examples\n\nupdated ACM examples"}, {"url": "https://api.github.com/repos/aws/aws-cli/commits/350cbf19b529de6cbe08d10609d7fca13fb17db6", "message": "Merge pull request #3052 from awsdocs/cloudwatch-examples\n\nupdated cloudwatch example"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sanathkr": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3088", "title": "Taking over #2778 - aws cloudformation deploy large template support", "body": "Pull Request #2778 broke the tests because it had a bad import statement (`S3Uploader`) in deploy.py. Fixing this and submitting a new PR", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oalbrigt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3078", "title": "Use FIPS 140-2 compliant RSA library", "body": "This library doesnt leak information when raising exceptions, so I removed that comment as well.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iansltx": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3071", "title": "Add --preserve-symlinks option for \"deploy push\" command", "body": "By default, symlinks are materialized into their targets when they are zipped for deploy. Some applications, e.g. PHP's Doctrine ORM vendor/bin scripts, rely on symlinks to be preserved to work, and are thus broken by the default deploy behavior if your PHP project's deployment archive includes its vendor directory (which it should).\r\n\r\nThis commit adds an option (default off for BC reasons) to preserve symlinks when creating the deployment archive. Used --ignore-hidden-files as a template for parameter implementation.\r\n\r\nTests have been updated with the extra argument, including asserting that you can't specify to both preserve and not preserve symlinks simultaneously. However, while I've confirmed that behavior works as expected in the scenario for which I needed this functionality, there isn't an automated test to that effect, partially because I'm not sure how that test would fare across all environments.\r\n\r\nReferences:\r\nhttps://gist.github.com/kgn/610907\r\nhttp://www.mail-archive.com/python-list@python.org/msg34223.html", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jean": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3058", "title": "Some editing and formatting (mostly literals).", "body": "Global installation isn't necessary if not using a venv.\n\"tandem\" is for two things, not multiple.\nHeadings create implicit anchors, so you can link to them\n(Installation_).\nDelete stray word (\"pass\").", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "heitorlessa": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3040", "title": "[SAM] Makes S3 Bucket parameter optional and creates bucket automatically in the deployment region", "body": "Hi everyone,\r\n\r\n This PR makes it possible to omit `--s3-bucket` and AWS CLI will create a S3 bucket in the deployment region specified - This makes the following possible:\r\n\r\n* Ability to launch the same SAM template in multiple regions\r\n* Error out earlier if S3 Bucket and Deployment region differs instead of waiting for Cloudformation to be deployed and fail\r\n* Ability to automatically create S3 Bucket if no `--s3-bucket` was passed\r\n\r\n This is a non-breaking change and those who are currently using `--s3-bucket` should continue to work just fine.\r\n\r\n**Usage: Deploy SAM stack in Ireland region without specifying the bucket**\r\n\r\n```bash\r\naws cloudformation package \\\r\n    --template-file template.yaml \\\r\n    --output-template-file packaged.yaml \\\r\n    --region eu-west-1 \r\n\r\naws cloudformation deploy \\\r\n    --template-file template.yaml \\\r\n    --stack-name test-sam \\\r\n    --region eu-west-1 \\\r\n    --capabilities CAPABILITY_IAM \r\n```\r\n\r\n> **This will create a bucket named `sam-<region>-<accountId>`**\r\n\r\ncc'ing contributors @sthulb @igngar", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sp-niemand": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3016", "title": "Add request_payer parameter to sync, cp, and rm subcommands", "body": "Adds support for [Requester Pays buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) to some `aws s3` subcommands.\r\n\r\nAddresses several related issues:\r\nhttps://github.com/aws/aws-cli/issues/2845\r\nhttps://github.com/aws/aws-cli/issues/2557\r\n\r\nAlso this (?):\r\nhttps://github.com/aws/aws-cli/issues/797", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "teppeis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/3012", "title": "[Doc] Fix broken nested list in config-vars.rst", "body": "fix only format: http://docs.aws.amazon.com/cli/latest/topic/config-vars.html#using-aws-iam-roles", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davejamesmiller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2955", "title": "Fix incorrect completions when using 'menu-complete' in Bash", "body": "Fixes both issues raised in #2947 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "powersjcb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2949", "title": "issues/2948: use variable waiter_config", "body": "helps to alleviate #2948 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "btisdall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2943", "title": "Add --no-reuse-parameters option to `cloudformation deploy`", "body": "Hi, this PR adds the ability to handle parameters in \"strict\" fashion as requested in #2940 .", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Pelto": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2901", "title": "aws cloudformation package: follow symlinks when packging", "body": "When we run `aws cloudformation package` and have specified a directory\r\nin our Uri the make_zip function will zip the files using `os.walk`.\r\nHowever by default `os.walk` will not follow symlinks unless the flag\r\n`followlinks` is set to True.\r\n\r\nRelates to #2900", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zyv": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2892", "title": "Support use of colorama up to 0.3.9 (closes #2666)", "body": "Colorama bugfix release 0.3.9 is available and contains no incompatible changes. There is no need to restrict use to less or equal 0.3.7. Supersedes PR #2666.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DennisTT": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2890", "title": "Add tagging functionality during S3 upload", "body": "Add the ability to set tags on S3 uploads, moves, copies, similar to the existing metadata parameter.\r\n\r\nIssue: https://github.com/aws/aws-cli/issues/2458\r\nDepends on: https://github.com/boto/s3transfer/pull/96", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "boone": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2889", "title": "Fix typos.", "body": null, "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gms-ta-koge": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2861", "title": "[Doc]Fix class of SecurityGroups value", "body": "I encounted error when I execute ec2 run-instances sample.\r\nSo I think this is wrong of example.\r\n\r\n### procedure\r\ntest.json\r\n```\r\n...\r\n            \"SecurityGroups\": [\r\n                {\r\n                    \"GroupName\": \"MySecurityGroup\",\r\n                    \"GroupId\": \"sg-903004f8\"\r\n                }\r\n            ],\r\n...\r\n```\r\n\r\n`$ aws ec2 run-instances --cli-input-json file://test.json`\r\n\r\nreturn \r\n```\r\nInvalid type for parameter SecurityGroups[0], value: {'GroupId': 'MySecurityGroup', 'GroupName': 'sg-903004f8'}, type: <class 'dict'>, valid types: <class 'str'>\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mwunderl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2853", "title": "Update waiters.py", "body": "clarify wait parent command description.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/16753245", "body": "Have you updated to 1.10.13? This service was added just two days ago.\n-Michael\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/16753245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/16754153", "body": "Built without error for me. Try upgrading the CLI/boto3 and reinstall requirements\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/16754153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "chrisdr": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2851", "title": "Update putmetricdata.py", "body": "Adding storage-resolution parameter", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dstufft": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2844", "title": "Revert \"Merge pull request #2581 from aws/revert-2562-use-setuptools\"", "body": "This reverts commit d6c994b56d970f87c9f9d73d88b9b61a97392683, reversing\r\nchanges made to 68b63f0b006833ecd4711d5d1b1e01b2c45bffa5.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "katerini": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2805", "title": "EC2 examples and fix", "body": "A few fixes and some new CLI examples for EC2", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cwgem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2793", "title": "Documentation of service data files", "body": "This is taking a stab at the documentation of working with service data files. This includes the purpose, search paths, and required structure. It's mostly pulled from the `botocore/loaders.py` module documentation. Addresses Issue #2790 . ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lucioveloso": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2752", "title": "Adding YAML support to aws-cli arguments", "body": "#2275 Proposing this new version to add YAML support to the aws-cli.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ASayre": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2737", "title": "Update README.rst to include link to UserVoice.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "loopingz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2710", "title": "Add rotate-access-key command", "body": "To simplify rotating AccessKey to respect the 90 days principal i added a command to rotate the access key.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "indrajitr": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2708", "title": "Update zsh auto-complete docs and narrow `_bash_complete()` scope", "body": "Changes:\r\n- Make this auto-loadable when present in zsh `$fpath`\r\n- Update docs suggesting alternate way of including completion using 'fpath'\r\n  convention\r\n- Narrow down the scope of `_bash_complete()` override, this is not necessary\r\n  for zsh 5.0.3+, so override conditionally\r\n\r\n_Edit: Updated to accommodate the fine set of feedback from @zmwangx that was provided [here](https://github.com/Homebrew/homebrew-core/pull/15727#issuecomment-317857731)._", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sekido": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2674", "title": "UTF-8 is default file encoding to read", "body": "## My Environment\r\n\r\n* Windows 7 Pro, Japanese (CP932)\r\n* git bash 2.13.0\r\n* AWS CLI via pip (aws-cli/1.11.109 Python/3.6.1 Windows/7 botocore/1.5.72)\r\n\r\n## Problem\r\n\r\n`aws cloudformation create-stack --template-body 'file://template.yml' --debug` raises an error.\r\ntemplate.yml is UTF-8 encoding.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"...\\python36\\lib\\site-packages\\awscli\\paramfile.py\", line 120, in get_file\r\n    return f.read()\r\nUnicodeDecodeError: 'cp932' codec can't decode byte 0x83 in position 68: illegal multibyte sequence\r\n```\r\n\r\n`get_file` calls `compat_open`, and `compat_open` opens file with platform dependent encoding, 'cp932' in Japanese environment, although the file is UTF-8 encoding.\r\n\r\n```\r\n$ python -i\r\nPython 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import locale\r\n>>> locale.getpreferredencoding()\r\n'cp932'\r\n```\r\n\r\n## How to fix\r\n\r\n1. UTF-8 is default file encoding to read in `get_file`\r\n2. Try to read the file with platform default encoding again if the file cannot read with UTF-8 encoding\r\n3. Clear encoding parameter in `compat_open` because `open` doesn't receive \"encoding\" parameter in binary mode", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DiegoPomares": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2646", "title": "Use writestr to zip files with mtime before 1980", "body": "Related: https://github.com/aws/aws-cli/issues/2639", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abn": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2636", "title": "Add configure mfa command", "body": "* generate/refresh and persist temporary session credentials\r\n* accept duration/serial/token as parameters\r\n* introduce `aws_access_key_id_saved` and `aws_secret_access_key_saved`\r\n  in credential file as a mechanism to keep non-temporary credentials\r\n  for refreshing temporary ones\r\n\r\nCreating this PR so as to start a discussion around this topic. This may touch on requests covered in #1985.\r\n\r\nThis implementation follows the procedure outlined by the knowledge center article \"[How do I use an MFA token to authenticate access to my AWS resources through the AWS CLI?](https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/)\". \r\n\r\nNote that I am unfamiliar with this code base and have made best-effort guesses at a lot of places, so feedback welcome on changes required. I have not written up any test at the moment due to time constraints and would rather do that once I get an okay for the idea.\r\n\r\nAt the end of the day, if this is merged one can expect end users to do the following to get up and running;\r\n```sh\r\naws configure\r\naws configure mfa\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ajacoutot": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/2635", "title": "add support for mandoc", "body": "Hi.\r\n\r\nThis will allow Linux distros and BSDs systems that use mandoc instead of groff to display 'help' without the need to install additional software. More information about the mandoc formatter is available at: http://mdocml.bsd.lv/\r\nThanks.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "garnaat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11637446", "body": "Hi -\n\nWe are absolutely accepting contributions.  Small bug fixes or doc changes don't require any contributors agreement.  Larger changes probably do.  I know that's pretty fuzzy.\n\nI will find and link to a contributor's agreement and create a wiki page that describes the contribution process.  In the meantime, if you have pull requests, please send them!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11637446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11653243", "body": "Thanks.  My testing didn't surface this problem.  Eventually, I will pin this to requests 1.0.x but quite a few things changed in the move to 1.0 and I have some work to do to get things working there.  I will test with 0.14.1.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11653243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11687214", "body": "This was actually a botocore issue.  Fixed in e17b6866529b2cf528cdeb88b46412ab46f4a364\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11687214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11710204", "body": "This should be fixed in https://github.com/boto/botocore/commit/22d0db0efadb4e86af190244eab3131fa66f399f\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11710204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11710246", "body": "Thanks for the report.  I'm firing up an ec2 instance with a role to try to reproduce this now.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11710246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11711815", "body": "Fixed in https://github.com/boto/botocore/commit/4c0ff7c4a7b2c67d96981372748121fa24e61f68\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11711815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11843991", "body": "Today.  I'm decided to bundle a bunch of fixes and feature requests into a\nlarger 0.5.0 release.\n\nOn Wed, Jan 2, 2013 at 6:49 PM, tingletech notifications@github.com wrote:\n\n> Any idea when botocore 0.4.1 is likely to hit pypi?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aws/aws-cli/issues/12#issuecomment-11833569.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11843991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11844967", "body": "@satotech - aws-cli does support VPC but all of the VPC functionality is really part of EC2.  There is not a separate API or endpoint.  However, I will update the README.md to make it clear that VPC support is included.\n\nAlso, as @jdub comments, there are a number of cases where the parameter name is getting sent to the service with incorrect case.  I will have a new release out today that addresses these issues as well as some others.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11844967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11856040", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11856040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11864182", "body": "You should be able to specify them as:\n\n```\n--availability-zones us-east-1a us-east-1b\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11864182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865613", "body": "This feature is now available in the 0.4.5 release and in the develop branch.  The name of the variable is `AWS_DEFAULT_REGION`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865700", "body": "The 0.4.5 release and the develop branch code now specifies version <= 0.14.1.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865730", "body": "The latest 0.4.5 release and the develop branch now support this via `AWS_DEFAULT_PROFILE`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865744", "body": "This should be fixed in the 0.4.5 release and in the develop branch.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865763", "body": "This should now be fixed in the 0.4.5 release and the develop branch.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865787", "body": "This should now be fixed in the 0.4.5 release and the develop branch.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865804", "body": "This should now be fixed in the 0.4.5 release and the develop branch.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11865804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/3243404", "body": "thanks, fixed in c6a6ee462102d8c412eb584929709a13b33ccb89\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/3243404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/3744136", "body": "This should be:\n\n```\nif cli_name:\n    del argument_table[cli_name]\n```\n\nSince `_get_cli_name` doesn't always return a value that needs to be removed.  This is causing `make html` to break for me.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/3744136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291963", "body": "Is there a circular dependency here?  Curious why you moved the import.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291966", "body": "Shouldn't this be `--ip-permissions file://path/to/port22.json`?  Looks like it was wrong in the previous versions, too.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291971", "body": "Actually, I think that section should just be removed since it's really explained below.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4291971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4295422", "body": "If we are going to do rstgen in-process, maybe we should change it so `main()` takes a session param. Then we can avoid the circular reference.  And we can just get rid of `bin/rstgen`?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4295422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4295617", "body": "Or, just get rid of `main()`, really.  It's no longer being called.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4295617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/2552586", "body": "What happens if the JSON lexer is not installed?  Does `get_lexer_by_name` throw an ImportError?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/2552586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "scalp42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11643221", "body": "@a8 would be awesome. Thanks for the #protip\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11643221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "michaelhood": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644642", "body": "+1 - was going to do a pull request for this but wasn't sure what variable name would be preferred. I've seen some third party projects use `AWS_EC2_REGION`, but I realize you may want a non-service specific nomenclature.\n\n[flippath/ec2-cli-tools](https://github.com/FlipPath/ec2-cli-tools/blob/master/bin/ec2host#L60) - `AWS_EC2_REGION`\n\n[netflix/asgard](https://github.com/Netflix/asgard/blob/master/src/groovy/com/netflix/asgard/DefaultUserDataProvider.groovy#L41) - `EC2_REGION`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644739", "body": "agreed\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lsegal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644709", "body": "IMO the region setting should not be service specific. I could see how this might be useful in the above mentioned projects, but It makes less sense in a CLI tool where you're only targeting one service per execution.\n\nI would go with a simple `AWS_REGION`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11644709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jimbrowne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11652445", "body": "`includeAllInstances` should be `IncludeAllInstances` at https://github.com/boto/botocore/blob/develop/botocore/data/aws/ec2.json#L6536\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11652445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aisipos": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11653899", "body": "Slight update to ensure pygments has json support before using it. Older versions of pygments didn't have json support until https://github.com/orb/pygments-json was merged.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11653899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/2573624", "body": "Good point, indeed you are right.  get_lexer_by_name throws a pygments.util.ClassNotFound when the given lexer is not found (see http://pygments.org/docs/api/). \n\nI updated the PR to catch any exception when trying to use pygments, falling back to the straight JSONFormatter if anything exception arise.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/2573624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jdub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11697706", "body": "Final detail:\n\n```\nubuntu@ip-10-128-3-5:~$ aws --version\naws-cli/0.4.1 Python/2.7.3 Linux/3.2.0-32-virtual\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11697706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11701003", "body": "Adding --debug indicates that camelCase parameters are used, rather than InitialCamelCase.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11701003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11795016", "body": "Hmm, based on #13, I suspect there's a bunch of camelCase to InitialCamelCase fixes to be made throughout the VPC API support.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11795016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "toyg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11719916", "body": "If it can help, this was reproduced in a virtualenv, and I don't use the python from homebrew.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11719916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "satotech": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11751025", "body": "[This page](http://aws.amazon.com/cli/) shows aws-cli support for Amazon VPC, but Amazon VPC is not included in README.md. Which is correct?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11751025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tingletech": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11833569", "body": "Any idea when botocore 0.4.1 is likely to hit pypi?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11833569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "a8": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11922511", "body": "I made the zsh completion work for zsh using the bash compatibility mode of zsh. It's [here](https://github.com/a8/aws-cli/commit/c0ac1993b2e153866110af72e82e1aac3bb4dfc6). I tested the Mac Mountain Lion shipped zsh, upstream zsh 5.0.2 and zsh 4.3.17 Ubuntu 12.04. In order to work around the issue described above I copied the just applied [zsh fix](http://zsh.cvs.sourceforge.net/viewvc/zsh/zsh/Completion/bashcompinit?r1=1.5&r2=1.6) or [on the github clone](https://github.com/zsh-users/zsh/commit/edab1d3dbe61da7efe5f1ac0e40444b2ec9b9570).\n\nIt works. To make use of the greatness of zsh I will try to write a proper zsh compdef function in the next weeks. First I have to learn a little more about zsh ;-)\n\nI'm not sure if it is worth to send a pull request for that one here.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/issues/comments/11922511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "simonwhitaker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/2682315", "body": "Nice, thanks! :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/2682315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jeubanks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/2708378", "body": "The file name in the commit is wrong.  The file name is bin/aws_zsh_completer.sh\n\nThis is still causing an install error.  Rename the file or the statement to match each other\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/2708378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tedder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/3242660", "body": "the style of this link is appropriate for markdown, but not RST. [Here's the format style for a RST link](http://docutils.sourceforge.net/docs/user/rst/quickref.html#hyperlink-targets).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/3242660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jamesls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/3744148", "body": "This is fixed in https://github.com/boto/botocore/pull/92  .  The issue is with invalid paginator configs.  If anything we should probably be raising an exception on invalid page configs as this is likely to just break in some subtle way later on (though boto/botocore#92 should fix all of these).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/3744148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/6561625", "body": "Yes, we haven't been doing the last few releases, but we've added release notes for 1.3.15:  http://aws.amazon.com/releasenotes/7627517067382553\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/6561625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4292060", "body": "Yeah, it was because of a circular depenency when the doc generation was moved in-process (dfee06bb17291878a7b9733c9ccac33a201f4d39).  clidriver->argparser->help->rstgen->clidriver\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4292060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624035", "body": "Agreed, that's actually copied from the [original version](https://github.com/aws/aws-cli/blob/develop/awscli/clidriver.py#L156) but I'll pull these up to instance vars.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624043", "body": "Sounds good, will update.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624063", "body": "No, not with the included classes.  You could subclass and provide your own implementation that could support that though.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624392", "body": "Updated to default to str.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4624392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "danielgtaylor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/5873724", "body": "Great find, and thanks for the fix. I should have caught it before merging.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/5873724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/15513531", "body": "@artburkart I'm not sure - you'd be better off asking in a new GitHub issue or somewhere like StackOverflow, since commit comments can easily be missed. I'm no longer working on this project, but the current devs can probably answer! :smile:\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/15513531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "evgeny-goldin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/6561612", "body": "Hi, I've noticed https://aws.amazon.com/releasenotes/CLI are not updated recently. Will they be maintained in the future? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/6561612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/6561685", "body": "Awesome, thanks!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/6561685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kyleknap": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/10152538", "body": "I was hoping that you could assert the policy you are passing to botocore is the custom policy.  Here is an s3 example: https://github.com/aws/aws-cli/blob/develop/tests/unit/customizations/s3/test_cp_command.py#L42\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/10152538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "inandoutyouno": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/15146311", "body": " The best site ever \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/15146311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "artburkart": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/15476535", "body": "Question - in the AWS console, I can make a query that looks this: \n![aws search bar](http://i.imgur.com/y1AYMmF.png)\nDoes this 'anonymous' bit mean we can't send similar queries?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/15476535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nrdlngr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/16750276", "body": "This commit breaks the HTML doc generation process for me.\n\n```\n$ make html\nsphinx-build -b html -d build/doctrees   source build/html\nMaking output directory...\nRunning Sphinx v1.1.3\nGenerating ReST documents for all services...\nWriting topics:\n...s3-config\n...s3-faq\n...config-vars\n...return-codes\n\nWriting service references\n...acm\n...apigateway\n...autoscaling\n...cloudformation\n...cloudfront\n...cloudhsm\n...cloudsearch\n...cloudsearchdomain\n...cloudtrail\n...cloudwatch\n...codecommit\n...codepipeline\n...cognito-identity\n...cognito-sync\n...configservice\n...configure\n...datapipeline\n...deploy\n...devicefarm\n...directconnect\n...dms\nTraceback (most recent call last):\n  File \"/Users/ericn/github/aws-cli/doc/source/htmlgen\", line 144, in <module>\n    do_provider(driver)\n  File \"/Users/ericn/github/aws-cli/doc/source/htmlgen\", line 100, in do_provider\n    do_service(driver, REF_PATH, service_name, service_command)\n  File \"/Users/ericn/github/aws-cli/doc/source/htmlgen\", line 65, in do_service\n    operation_command)\n  File \"/Users/ericn/github/aws-cli/doc/source/htmlgen\", line 34, in do_operation\n    help_command(None, None)\n  File \"/Users/ericn/github/aws-cli/awscli/help.py\", line 264, in __call__\n    self.renderer.render(self.doc.getvalue())\n  File \"/Users/ericn/github/botocore/botocore/docs/bcdoc/restdoc.py\", line 78, in getvalue\n    return ''.join(self._writes).encode('utf-8')\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 23: ordinal not in range(128)\nFailed to generate documentation!\nmake: *** [html] Error 2\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/16750276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-cli/comments/16766952", "body": "I found it. Non-ASCII quotes in `create-replication-task.rst`.\n\n```\ndiff --git a/awscli/examples/dms/create-replication-task.rst b/awscli/examples/d\nindex 56978b7..cd77cba 100644\n--- a/awscli/examples/dms/create-replication-task.rst\n+++ b/awscli/examples/dms/create-replication-task.rst\n@@ -9,22 +9,22 @@ The file ``table-mappings.json`` is a JSON document in the cur\n       {\n         \"Type\": \"Include\",\n         \"SourceSchema\": \"company\",\n-        \"SourceTable\": \u201cemp%\"\n+        \"SourceTable\": \"emp%\"\n       },\n       {\n         \"Type\": \"Include\",\n-        \"SourceSchema\": \u201cemployees\",\n-        \"SourceTable\": \u201c%\"\n+        \"SourceSchema\": \"employees\",\n+        \"SourceTable\": \"%\"\n       },\n       {\n         \"Type\": \"Exclude\",\n-        \"SourceSchema\": \u201csource101\",\n-        \"SourceTable\": \u201cdep%\"\n+        \"SourceSchema\": \"source101\",\n+        \"SourceTable\": \"dep%\"\n       },\n       {\n         \"Type\": \"Exclude\",\n-        \"SourceSchema\": \u201csource102\",\n-        \"SourceTable\": \u201c%\"\n+        \"SourceSchema\": \"source102\",\n+        \"SourceTable\": \"%\"\n       },\n       {\n         \"Type\": \"Explicit\",\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/16766952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Betticolucci18": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/17594064", "body": "![icon_3_pdf_x16](https://cloud.githubusercontent.com/assets/19538993/15504031/d4ffe962-2171-11e6-98da-bde9f6c91190.png)\n![icon_3_pdf_x16](https://cloud.githubusercontent.com/assets/19538993/15504033/d78b1db4-2171-11e6-9370-bb9340490f37.png)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/17594064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "allie1988": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/21846364", "body": "Changelog", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/21846364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shatil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/comments/22275998", "body": "Do you have any data on how many of your customers use the archaic version of `docker login`, which _requires_ `--email`, versus how many use a Docker version that warns of its deprecation?\r\n\r\n(I stick with whatever's latest, so wherever I'm using `aws ecr get-login`,  I now must update scripts to add an additional flag... to remove an option that Docker itself has not supported for over a year.)", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/comments/22275998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "toastdriven": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622021", "body": "Some explanation here about what needs refactoring might be nice.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622179", "body": "Why is this hard-coded & where does the number come from? Feels like something that should maybe be an instance variable for (optional) tweaking.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622274", "body": "I presume this is the error code to be emitted? I'd make it a class/instance-level variable. Also, since you're not calling `sys.exit(...)` here, a comment about how this should eventually make it back to the shell would be nice.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622336", "body": "This could just be `return ...`, allowing the next line to be removed.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622356", "body": "Some kwargs here might be nice, since there's a lot going on.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622403", "body": "Should this not be calling `super(ServiceHelpCommand, self).__init__(...)` here? I don't know what `CLICommand` does, but if it needs to do any setup in the future, this won't run it, leading to potential bugs.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622429", "body": "What if the name is a single dashed arg? (i.e. `-n`). Is that possible?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622454", "body": "Should this fail with a `KeyError` if the type isn't present? Or would a different exception (or perhaps a fallback) be preferable?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622522", "body": "A comment explaining what's going on here would be nice. I think I get it, but only because I have additional context.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4622522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623239", "body": "Why are you accessing `.__dict__...` here? Seems kinda poor-form.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623286", "body": "\"get_paramter()\" -> \"get_parameter()\"\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623313", "body": "Feel like maybe this ought to be in the `formatter` itself, since this method isn't doing an I/O itself?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623330", "body": "This comment ought to be copied to the above method if it still applies.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623389", "body": "I hate to be that guy, but I feel like maybe some assumptions in other places could be caught by using a non-classic region here.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623508", "body": "Do we really want to assert there are double-spaces around \"AWS\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623534", "body": "I understand it's a smoke test, but this feels like it's not really checking the shorthand params. The command could be doing something completely wrong but as long as it's not exiting with an error code, this will pass.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623550", "body": "Does this `return` cause the test method to pass without running the assertions inside?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623643", "body": "If other people want to run this test case, won't this fall down for them?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-cli/pulls/comments/4623643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}