{"_default": {"1": {"vanguard737": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1692", "title": "No valid waiter names for SSM API", "body": "In the v2 SDK, it appears that SSMs don't expose any valid waiters.  If I throw a bogus waiter at (for example) the CloudFormation client, I get a well-formed exception with the list of valid CFN waiter names.  However, when I do the same to the SSM client, I don't get any waiter names back.\r\n\r\n[This](https://github.com/aws/aws-sdk-ruby/issues/1185) issue may be relevant.  Perhaps this has been implemented for SSM in the latest v3 SDK (and not v2)?\r\n\r\nGem:  aws-sdk, 2.9.26.\r\nEnvironment:  Ruby 2.4.1, Windows 10.\r\n\r\nCode, run from irb:\r\n```\r\nrequire 'aws-sdk'\r\nAws.config.update({\r\n    region: 'us-west-2',\r\n    credentials: Aws::Credentials.new('AKIAid', 'secret')\r\n})\r\n\r\ncfn = Aws::CloudFormation::Client.new\r\ncfn.wait_until(:bogus)\r\n\r\nssm = Aws::SSM::Client.new\r\nssm.wait_until(:bogus)\r\n```\r\n\r\nThe respective exceptions:\r\n\r\nCFN:\r\n```\r\nAws::Waiters::Errors::NoSuchWaiterError: no such waiter :bogus; valid waiter names are: :stack_exists, :stack_create_complete, :stack_delete_complete, :stack_update_complete, :change_set_create_complete\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/waiters/provider.rb:29:in `waiter'\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/client_waiters.rb:108:in `wait_until'\r\n        from (irb):7\r\n        from C:/tools/ruby24/bin/irb.cmd:19:in `<main>'\r\n```\r\n\r\nSSM:\r\n```\r\nAws::Waiters::Errors::NoSuchWaiterError: no such waiter :bogus; valid waiter names are:\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/waiters/provider.rb:29:in `waiter'\r\n        from C:/tools/ruby24/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.9.26/lib/aws-sdk-core/client_waiters.rb:108:in `wait_until'\r\n        from (irb):9\r\n        from C:/tools/ruby24/bin/irb.cmd:19:in `<main>'\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "comjf": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1685", "title": "ECS register_task_definition validation bug (log_driver)", "body": "### Issue description\r\nI'm taking an existing valid task definition in json format, converting it to the proper casing and then resubmitting via the SDK. Only 1 validation error on submission: \r\n```\r\n2017-12-29T15:34:58.285Z 79621 TID-oumh4as1o WARN: ArgumentError: missing required parameter params[:container_definitions][0][\"log_configuration\"][:log_driver]\r\n```\r\n\r\nI can hack around this by either doing ```task['container_definitions'].first['log_configuration'][:log_driver] = 'awslogs'``` to explicitly set the log_driver to be a symbol or it also works if I disable validation entirely ``` Aws::ECS::Client.new(region: 'us-east-1', validate_params: false)```\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n```\r\n    aws-sdk (2.10.105)\r\n      aws-sdk-resources (= 2.10.105)\r\n    aws-sdk-core (2.10.105)\r\n      aws-sigv4 (~> 1.0)\r\n      jmespath (~> 1.0)\r\n    aws-sdk-resources (2.10.105)\r\n      aws-sdk-core (= 2.10.105)\r\n    aws-sigv4 (1.0.2)\r\n```\r\n### Version of Ruby, OS environment\r\n2.3.1  on OSX \r\n### Code snippets / steps to reproduce\r\n- Logging definition in json\r\n```\r\n      \"logConfiguration\": {\r\n        \"logDriver\": \"awslogs\",\r\n        \"options\": {\r\n          \"awslogs-group\": \"awslogs-some-service\",\r\n          \"awslogs-region\": \"us-east-1\",\r\n          \"awslogs-stream-prefix\": \"some-service\"\r\n        }\r\n      },\r\n```\r\n- Main code body\r\n```\r\n    ecs = Aws::ECS::Client.new(region: 'us-east-1')\r\n    task = JSON.parse(File.read(task_file))\r\n    task['containerDefinitions'].first['image'] = publish_image\r\n\r\n    skip_transform = task['containerDefinitions'].first['logConfiguration'].delete('options')\r\n    task.deep_transform_keys!(&:underscore).with_indifferent_access\r\n    task['container_definitions'].first['log_configuration']['options'] = skip_transform\r\n   \r\n    task_revision = ecs.register_task_definition(\r\n        {container_definitions: task['container_definitions'], family: task['family'], task_role_arn: task['task_role_arn']}\r\n    )['task_definition']['revision']\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brettburley": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1683", "title": "Message verifier for SNS does not use configured http_proxy", "body": "### Issue description\r\nThe aws-sdk-sns gem's `MessageVerifier` does not use the `http_proxy` configured in `Aws.config`. Since it's using `Net::HTTP` directly, it will use any `ENV` variables, but there doesn't appear to be any other way to configure a proxy for it to use otherwise.\r\n\r\nSee: https://github.com/aws/aws-sdk-ruby/blob/master/gems/aws-sdk-sns/lib/aws-sdk-sns/message_verifier.rb\r\n\r\nI think I would expect the  the `Aws.config.http_proxy` option to apply to all network requests made.\r\n\r\n### Gem name\r\naws-sdk-sns 1.1.0", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "llibicpep": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1677", "title": "Support credential_source from shared profile", "body": "### Issue description\r\n\r\n`credential_source` currently is not supported.\r\n\r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\n\r\naws-sdk-core 2.10.104\r\n\r\n### Version of Ruby, OS environment\r\n\r\nMac OS, Debian, ruby v2.4.2\r\n\r\n### Code snippets / steps to reproduce\r\n\r\nThe following config:\r\n\r\n```bash\r\nAWS=\"aws --profile ${PROFILE_NAME}\"\r\n${AWS} configure set role_arn \"${ROLE_ARN}\"\r\n${AWS} configure set credential_source \"${CREDENTIALS_SOURCE}\"\r\n```\r\n\r\nWill produce error:\r\n\r\n```\r\n/opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/shared_config.rb:156:in `assume_role_from_profile': Profile jarvis has a role_arn, but no source_profile. (Aws::Errors::NoSourceProfileError)\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/shared_config.rb:111:in `assume_role_credentials_from_config'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:95:in `assume_role_with_profile'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:78:in `assume_role_credentials'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:12:in `block in resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:11:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/credential_provider_chain.rb:11:in `resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/aws-sdk-core/plugins/request_signer.rb:37:in `block in <class:RequestSigner>'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:70:in `call'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:205:in `block in resolve_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:57:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:57:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:204:in `resolve_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:200:in `value_at'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:189:in `block in resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/2.4.0/set.rb:324:in `each_key'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/2.4.0/set.rb:324:in `each'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:189:in `resolve'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:177:in `apply_defaults'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/configuration.rb:150:in `build!'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:68:in `build_config'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:19:in `initialize'\r\n\tfrom /opt/chefdk/embedded/lib/ruby/gems/2.4.0/gems/aws-sdk-core-2.10.90/lib/seahorse/client/base.rb:105:in `new'\r\n\tfrom /home/jenkins/workspace/test@tmp/durable-7147b3d0/script.sh:4:in `<main>'\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oyeanuj": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1666", "title": "More detailed changelog entries?", "body": "Hi folks! Firstly, thank you for all of your work in these gems. One suggestion - would it be possible to add more details to the changelog in the individual gems so that developers know what to expect?\r\n\r\nRight now, most entries look like this:\r\n> Feature - API update.\r\n\r\nThis doesn't give enough information on what to expect, thus creating uncertainty and needing a developer to first look through commits in history, narrow down to the gem in question and go file by file.\r\n\r\nI am sure there is already a lot on your plate, but this would really help the DX a lot.\r\n\r\nThank you!", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lwoggardner": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1649", "title": "Where are Client options described in V3 documentation?", "body": "\r\n### Issue description\r\nIn V2 docs the available options for a client are enumerated on the Client initialize() method documentation.\r\n\r\nhttp://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFormation/Client.html#initialize-instance_method\r\n \r\nIn V3 I cannot find the client options documented anywhere.\r\n\r\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Client.html#initialize-instance_method\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1649/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1646", "title": "Aws::CloudFormation::Stack.stack_name regression", "body": "### Issue description\r\nIn version 2 Aws::CloudFormation::Stack.new(<stack_id>).stack_name would invoke DescribeStack api and return just the stack name.\r\n\r\nIn version 3 it is just an alias to #name, and thus returns whatever was passed into the constructor, which might have been a full stack id arn.\r\n\r\n\r\n### Gem name \r\naws-sdk-cloudformation 1.2.0\r\n\r\n### Version of Ruby, OS environment\r\nruby 2.3 windows and linux\r\n\r\n### Code snippets / steps to reproduce\r\n```ruby\r\ncfnr = Aws::CloudFormation::Resource.new()\r\nstack_id = 'arn:aws:cloudformation:ap-southeast-2:<redacted>:stack/AStackName/<uuid>'\r\ncfnr.stack(stack_id).stack_name\r\n# expect 'AStackName', get 'arn:aws:cloudformation....'\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1419", "title": "How do I get a DBClusterSnapshot using just the db_cluster_snapshot_identifier?", "body": "For non-Aurora RDS snapshots I can do this..\r\n\r\n```ruby\r\nr = Aws::RDS::Resource.new(**client_args)\r\nr.db_snapshots(db_snapshot_identifier: db_snapshot_identifier).first\r\n```\r\n\r\nbut there seems no equivalent for Aurora cluster snapshots.\r\n\r\nThe only method to get a DBClusterSnapshot requires knowing the cluster_id, which for instance is not embedded DBClusterSnapshot.db_cluster_snapshot_arn\r\n\r\nNote that ideally there would also be a method directly on RDS::Resource\r\n\r\n```ruby\r\nr = Aws::RDS::Resource.new(**client_args)\r\naurora_snapshot = r.db_cluster_snapshot(db_cluster_snapshot_identifier)\r\ndb_snapshot = r.db_snapshot(db_snapshot_identifier)\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1407", "title": "More flexible backoff strategies  #1336", "body": "Added  jitter functions, max delay cap, configurable base delay\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amalagaura": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1624", "title": "Explicitly deleting tempfile after closing to save disk space", "body": "### Issue description\r\nWe upload large encrypted files and have limited disk space. Tempfile are created to encrypt but they are not cleaned up after the file is uploaded.\r\n  \r\n### Gem name ('aws-sdk', 'aws-sdk-resources' or service gems like 'aws-sdk-s3') and its version\r\naws-sdk-s3\r\n\r\n### Version of Ruby, OS environment\r\nRuby 2.3\r\n\r\n### Code snippets / steps to reproduce\r\nhttps://github.com/aws/aws-sdk-ruby/blob/9ea447b7e9e57e27bb7924aca40a5bf0c3265a94/gems/aws-sdk-s3/lib/aws-sdk-s3/encryption/io_encrypter.rb#L42 Closes the tempfile but does not `unlink` it. This leaves large files on disk which only get cleaned up when the process exits. This is not suitable for large running processes which upload large files. Can we add an `unlink` to this?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "route": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1572", "title": "Seahorse::Client::NetworkingError: Connection reset by peer - SSL_connect", "body": "I'm seeing an intermittent error like this sometimes in my long running process. So it all works but all of a sudden sometimes this start happening when I want to send a message to SQS with:\r\n\r\n`sqs.send_message(queue_url: queue_url, message_body: message.to_json, message_group_id: bla)`\r\n\r\n```\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:933:in `connect_nonblock'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:933:in `connect'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:863:in `do_start'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/http.rb:858:in `start'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/2.3.0/delegate.rb:83:in `method_missing'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/connection_pool.rb:285:in `start_session'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/connection_pool.rb:92:in `session_for'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:119:in `session'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:71:in `transmit'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/net_http/handler.rb:45:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/content_length.rb:12:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/xml/error_handler.rb:8:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/request_signer.rb:88:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/helpful_socket_errors.rb:10:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:89:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:120:in `retry_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:103:in `retry_if_possible'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/retry_errors.rb:91:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/sqs_queue_urls.rb:13:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/query/handler.rb:27:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/user_agent.rb:12:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/endpoint.rb:41:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/sqs_md5s.rb:17:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/param_validator.rb:21:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/raise_response_errors.rb:14:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/jsonvalue_converter.rb:20:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/idempotency_token.rb:18:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/aws-sdk-core/plugins/param_converter.rb:20:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/plugins/response_target.rb:21:in `call'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/request.rb:70:in `send_request'\r\n/home/deploy/.rbenv/versions/2.3.3/lib/ruby/gems/2.3.0/gems/aws-sdk-core-2.10.21/lib/seahorse/client/base.rb:207:in `block (2 levels) in define_operation_methods'\r\n```\r\n\r\nThen boom after a few more tries it works again which gives me an idea it's unlikely an issue in my code. I wonder why this happens.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pchaganti": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1454", "title": "No way to add CloudTrail permission to SNS topic", "body": "Sometime recently, AWS changed the way you add permissions to SNS topic to enable CloudTrail notifications. In the earlier version, you could add AWS account ids of the principals (which were accounts provided by the AWS docs).\r\n\r\nNow that has changed, and you need to specify the service **_cloudtrail.amazonaws.com_** as the principal.\r\n\r\nThe SNS client does not seem to have a way to do this. If I use the **add_permission** method, it is looking for account ids. How can I add a permission like below to a topic?\r\n\r\n```\r\n{\r\n\t\"Version\": \"2012-10-17\",\r\n\t\"Statement\": [{   \r\n\t\t\"Sid\": \"AWSCloudTrailSNSPolicy20131101\",\r\n\t\t\"Effect\": \"Allow\",   \r\n\t\t\"Principal\": {\r\n\t\t\t\"Service\": \"cloudtrail.amazonaws.com\"\r\n\t\t},\r\n\t\t\"Action\": \"SNS:Publish\",   \r\n\t\t\"Resource\": \"arn:aws:sns:Region:SNSTopicOwnerAccountId:SNSTopicName\"\r\n\t}]\r\n}\r\n```\r\n\r\nthanks\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wjordan": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1331", "title": "RuntimeError: can't add a new key into hash during iteration", "body": "On our production application we are receiving intermittent stack traces on S3 requests- the errors arrive in bursts of a couple hundred over an hour or two, then nothing for a few days, then another burst (6 over the last 30 days). I suspect this might be some sort of concurrency issue related to network-error retries somewhere deep in the `seahorse` stack, but could use some help figuring out what exactly is going on and how to fix.\r\n\r\n Using [`aws-sdk-core` 2.6.1](https://github.com/aws/aws-sdk-ruby/tree/v2.6.1/aws-sdk-core/lib).\r\n\r\nRelevant part of the stack trace (`net_http`):\r\n\r\n- [lib/seahorse/client/net_http/connection_pool.rb:40 :in `block in initialize`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L40)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:89 :in `yield`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L89)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:89 :in `block in session_for`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L89)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:87 :in `synchronize`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L87)\r\n- [lib/seahorse/client/net_http/connection_pool.rb:87 :in `session_for`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/connection_pool.rb#L87)\r\n- [lib/seahorse/client/net_http/handler.rb:116 :in `session`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L116)\r\n- [lib/seahorse/client/net_http/handler.rb:68 :in `transmit`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L68)\r\n- [lib/seahorse/client/net_http/handler.rb:42 :in `call`](https://github.com/aws/aws-sdk-ruby/blob/v2.6.1/aws-sdk-core/lib/seahorse/client/net_http/handler.rb#L42)\r\n\r\nFull `aws-sdk` stack trace with all handlers:\r\n\r\n```\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:40 :in `block in initialize`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:89 :in `yield`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:89 :in `block in session_for`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:87 :in `synchronize`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/connection_pool.rb:87 :in `session_for`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:116 :in `session`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:68 :in `transmit`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/net_http/handler.rb:42 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/content_length.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:88 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:23 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/xml/error_handler.rb:8 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/helpful_socket_errors.rb:10 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_request_signer.rb:65 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_redirects.rb:15 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/retry_errors.rb:87 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_dualstack.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_accelerate.rb:42 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_md5s.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_expect_100_continue.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_bucket_name_restrictions.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_bucket_dns.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/rest/handler.rb:7 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/user_agent.rb:12 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/endpoint.rb:41 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_url_encoded_keys.rb:39 :in `manage_keys`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_url_encoded_keys.rb:31 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/param_validator.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/raise_response_errors.rb:14 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_sse_cpk.rb:19 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_dualstack.rb:23 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/s3_accelerate.rb:33 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/param_converter.rb:20 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/aws-sdk-core/plugins/response_paging.rb:26 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/plugins/response_target.rb:21 :in `call`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/request.rb:70 :in `send_request`\r\n[GEM_ROOT]/gems/aws-sdk-core-2.6.1/lib/seahorse/client/base.rb:207 :in `block (2 levels) in define_operation_methods`\r\n[...Application code stacktrace...]\r\n```\r\n\r\nReproducing the issue with debug logging would be challenging (since the issue only occurs intermittently in production), so I'm hoping to track this down by inspecting the codebase directly.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bittrance": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1324", "title": "S3 API assumes IO object is seekable beacause it has #rewind", "body": "Consider this streamed download of S3 object:\n\n```\nrequire 'aws-sdk'\nrequire 'csv'\n\ndef s3_reader(region, bucket, file)\n  bucket = Aws::S3::Resource.new(region: region).bucket(bucket)\n  reader, writer = IO.pipe\n  t = Thread.new do\n    bucket.object(file).get(response_target: writer)\n    writer.close\n  end\n  t.abort_on_exception = true\n\n  CSV.new(reader, headers: true).each_with_index do |_, n|\n    print '.' if (n % 1000).zero?\n  end\nend\n```\n\nThis fails with ESPIPE because pipes are not searchable:\n\n```\n./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:103:in `rewind': Illegal seek (Errno::ESPIPE)\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:103:in `signal_done'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/http/response.rb:116:in `signal_error'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:90:in `rescue in transmit'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:68:in `transmit'\nfrom ./vendor/bundle/ruby/2.3.0/gems/aws-sdk-core-2.6.12/lib/seahorse/client/net_http/handler.rb:42:in `call'\n```\n\nhttps://github.com/aws/aws-sdk-ruby/blob/master/aws-sdk-core/lib/seahorse/client/http/response.rb#L103:\n\n``` ruby\n          elsif options.empty?\n            @body.rewind if @body.respond_to?(:rewind)\n            @done = true\n            emit(:done)\n          else\n```\n\nIO.pipe, filesystem fifos (and BSD sockets?) all have rewind() but can't be seek'd. \n\nMy opinion would be that the API should not assume that you want the IO object rewound even if that is possible, but I suppose that that would be a breaking change. The next best thing might be to eat seek errors?\n\n(For those who are landed here by Google, you can work around this issue by `writer.instance_eval('undef :rewind')`.)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/1324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjyclaire": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ac835306cc3e7b86d89f5a86b3c64199af881145", "message": "update customer service gem dependency (#1694)\n\n* update customer service gem dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/795f391a26181f0f99ec58bdb1b6b2b0a20e1fbf", "message": "Update custom service plugin"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/879275e23e153842be7dab0a5987281920f1efdc", "message": "fix typo"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/91c0fca3e01d242ab96de4952f7c259e420364b8", "message": "Update yard dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/324435c0097558e40aa00b8a62158dbe8053b940", "message": "Update APIG User-Agent to Prefix (#1679)\n\n* separate user agent plugin"}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1680", "title": "Add more Rest-Json Protocol tests", "body": "Support `timestampFormat` at metadata.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1631", "title": "Add support for custom plugins", "body": "Adds support for adding custom plugins to generated service clients.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1477", "title": "Add enhanced presign request feature", "body": "This PR adds support for `Aws::S3::PresignedRequest` that allows more flexible and customized presigned behaviors, refractored based on `aws-sigv4` gem and provides helpful `#headers` for bucket policy work arounds etc..\r\n\r\nDocumentations and tests(rspec & smoke) both have been addressed in the PR, here is a sample usage:\r\n``` ruby\r\nreq = Aws::S3::PresignedRequest.new(:put_object,\r\n  bucket: 'bktname',\r\n  key: 'key',\r\n  acl: 'private',\r\n  cache_control: 'max-age=20000'\r\n  headers: {\r\n    'foo' => 'bar',\r\n    'cache_control' => 'max-age=20000'\r\n  }\r\n)\r\n\r\nreq.uri\r\n# => #<URI::HTTPS https://bktname. ... .&X-Amz-SignedHeaders=host%3Bx-amz-acl%3Bx-amz-canche-control%3Bx-amz-foo...\r\n\r\nreq.headers\r\n# => {\"x-amz-acl\"=>\"private\", \"x-amz-canche-control\" => \"max-age=20000\", \"x-amz-foo\"=>\"bar\"}\r\n```\r\n\r\nRelated issues, PRs and feature requests:\r\nhttps://github.com/aws/aws-sdk-ruby/issues/874, https://github.com/aws/aws-sdk-ruby/issues/1152, https://github.com/aws/aws-sdk-ruby/issues/1384\r\nhttps://github.com/aws/aws-sdk-ruby/pull/1228, https://github.com/aws/aws-sdk-ruby/pull/1403 ( https://github.com/aws/aws-sdk-ruby/issues/1400, https://github.com/aws/aws-sdk-ruby/issues/1401)\r\n\r\ncc:\\ @awood45 @trevorrowe ", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "awood45": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/065adedc1eb698a55bbe0bcbb60d90ac8a533e3c", "message": "Merge pull request #1693 from aws/apig\n\nUpdate custom service plugin"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ebdf2a90d2e530ebecb0ed74caf6d1db087c1efa", "message": "Add CHANGELOG Entries for Ruby 2.5 PR\n\nWill allow these updates to be published."}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/ca67b76bf96b705532bfcc3a31d43c611e18f393", "message": "Merge pull request #1690 from utilum/assigned_but_unused_variable\n\nAssigned but ununsed variable"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/5bb9a159a9ae3f5b430d626430afb079470bc295", "message": "Fix Custom Service Plugins"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/c98164d1c8828a0bc1ec83355b274f916583b4b7", "message": "Merge pull request #1684 from aws/update-yard\n\nUpdate yard dependency"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/fd0373ea9765e03a64697785b8b1c2229d66ec67", "message": "Merge pull request #1681 from aws/credential-source\n\nAdd credential_source Support"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/db10eb9b1d82bd474a7980935991bcb9bd21e205", "message": "Merge branch 'master' into credential-source"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/14fbac9594e93d5357988c22506c35823b98521b", "message": "Add CHANGELOG for credential_source Change"}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1687", "title": "Assume Role Chaining Support", "body": "Current drawback is that it is required to specify a profile region in\r\ninner roles, if AWS_REGION env variable is not set. This will likely be\r\nchanged before shipping.\r\n\r\nSee related GitHub issue #1677", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1420", "title": "Add DBClusterSnapshot to Aws::RDS::Resource", "body": "Related to issue #1419\r\n\r\nStill need to look at options for direct creation of a snapshot object.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44962035", "body": "This is a fairly lengthy retry period, I'd like to see this start with a tighter default (like 3), with an option that can be passed in to set your own retry period.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44962035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/45105589", "body": "Add a comment around this to explain the magic number, at least. That way, it's a less confusing failure if the defaults are changed later. Or, move out to variables that are grouped together.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/45105589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989056", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989068", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989079", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989089", "body": "s/Status/State\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/48989089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49672024", "body": "I understand what `&unhandled_callback` is for because of the full context of the change, but it could be hard to remember or not intuitive to someone reading. Can we add this to the docs above?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49672024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49654043", "body": "Optional: Could we output the actual type we received in this case?\n\n``` ruby\nmsg = \"Only list of strings supported, was: #{member.shape.member.shape}\"\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/49654043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/50046392", "body": "Let's take out any TODO comments, as a style matter - I agree we should add this (although that isn't a blocker to me for accepting this PR, given the bug related to this), but we can handle that via other means.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/50046392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55859368", "body": "This if statement will _always_ return true. You would instead write something similar to:\n\n``` ruby\nstatus_code = context.http_response.status_code\nif status_code == 307 || status_code == 303\n  # do things\nend\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55859368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55062579", "body": "I don't want to encourage hard-coded credentials at all. Given that we have a default credential provider chain explained in the guide already, I'd stick with:\n\n``` ruby\nAws::SQS::Client.new(region: region_name)\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55062579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311422", "body": "This is just for doc examples, right? And I assume this is to avoid the default presumption of examples being \"accelerate on\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311659", "body": "Long term nervous about hard naming these. Fine for now, should consider alternatives down the road.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60311659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "utilum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/commits/0e164974af5e8344912049c34e6283ea4004d72a", "message": "Assigned but ununsed variable\n\nRuby 2.5 warns about this."}], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1691", "title": "Shadowing outer local variable", "body": "Ruby 2.5 warns about this.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "penntaylor": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1695", "title": "Fixed ox parsing of xml documents containing significant whitespace", "body": "...*semantically*-significant whitespace, that is.\r\n\r\nThe `:skip_white` flag being passed to Ox parser clobbers all whitespace during parsing. This strips out whitespace that may be semantically significant, such as in the case of sending YAML documents via SQS. The setting proposed in this pull request strips only trailing spaces from contained content, which should leave most real-world white-space significant documents semantically intact. It certainly fixes Ox for use with YAML over SQS.\r\n\r\nThis proposed change explicitly changes a prior fix made in #1496, related to issue #1495. ~~I was unable to locate the \"kitchen_sink\" test harness referenced there, so was unable to manually check this change against whatever the undesirable behavior for that issue was.~~ [Edit: I see now that KITCHEN_SINK is a Travis target.]", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gaurish": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1661", "title": "[Perf] Time.iso8601 is 3x faster than Time.parse", "body": "The \"Expiration\" key in response is always ISO8601, for example \"2017-11-19T18:08:11Z\".\r\n\r\nHere is a simple bechmark\r\n\r\n```ruby\r\nrequire 'time'\r\nrequire 'benchmark/ips'\r\n\r\nBenchmark.ips do |x|\r\n  TIME = \"2017-11-19T18:08:11Z\".freeze\r\n  x.config(:time => 10, :warmup => 4)\r\n  x.report(\"using Parse\") { Time.parse(TIME) }\r\n  x.report(\"using iso8601\") { Time.iso8601(TIME) }\r\n  x.compare!\r\nend\r\n```\r\n\r\n```\r\nWarming up --------------------------------------\r\n         using Parse     4.104k i/100ms\r\n       using iso8601    11.737k i/100ms\r\nCalculating -------------------------------------\r\n         using Parse     42.068k (\u00b1 4.3%) i/s -    422.712k in  10.068115s\r\n       using iso8601    124.765k (\u00b1 2.5%) i/s -      1.256M in  10.072182s\r\n\r\nComparison:\r\n       using iso8601:   124764.6 i/s\r\n         using Parse:    42067.5 i/s - 2.97x  slower\r\n```\r\n\r\nGood Idea?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "janko-m": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1617", "title": "Retry streaming S3 object downloads", "body": "When downloading S3 objects with a block, aws-sdk-s3 internally creates a `BlockIO` to be the writable response target.\n\n```rb\nobject.get do |chunk|\n  # streaming\nend\n```\n\nNormally aws-sdk-s3 retries any failed downloads in case of network errors, but not for streaming downloads. This is because `BlockIO` is not truncatable, unlike a response target like `StringIO` or `Tempfile`, and aws-sdk-s3 needs it to be because it retries the whole download from the start.\n\nIn [Shrine][https://github.com/janko-m/shrine] and [tus-ruby-server](https://github.com/janko-m/tus-ruby-server) I'm using aws-sdk-s3's streaming download feature, mainly for streaming the S3 object through a web application. It would be great if these downloads were to be retried in case of network errors in this case as well, especially for tus-ruby-server where the S3 objects will typically be very large.\n\nThis PR adds this functionality. It does so by remembering how many bytes of the content was \"written\" to the response target so far; when the request is retried, part of the response body that has already been written is simply skipped, until it reaches the part it hasn't written yet.\n\nAfter this PR I plan to add support for [range requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests), so that the requests are retried from the last byte offset. But for start I wanted to add this because I didn't know whether all S3 endpoints support range requests, so I thought we would still need this as a safety net.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1546", "title": "Use Digest#base64digest method", "body": "Other than being shorter, it has two qualities over `Base64.encode64` that\nare desirable in this case. One is that it doesn't include a trailing\nnewline at the end of the result. Other one is that it doesn't wrap the\nresult in 60 columns, meaning it doesn't add a newline after each 60\ncharacters.\n\nA general alternative to `Base64.encode64` is `Base64.strict_encode64`,\nwhich should have the same desirable behaviour, but calling\n`#base64digest` is shorter.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1545", "title": "Use buffer when generating MD5 checksum", "body": "When IO is #read without a buffer string, it allocates a new string for each read chunk. Even though by reading the file in chunks we keep memory usage low, we still give GC work to clean up all those strings.\n\nHowever, if we pass an additional buffer string to #read, instead of allocating new string for each chunk, each chunk will be read into the existing buffer string (replacing any previous value). That means that the buffer string is the only string that's allocated.\n\nThe IO body already has to accept the additional buffer argument, because Net::HTTP uses IO.copy_stream to stream the IO to the TCP socket, and IO.copy_stream will throw an exception if the IO body only accepts the length argument.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1523", "title": "S3: Refactor MultipartFileUploader to be like ObjectMultipartCopier", "body": "This aim of this PR is to bring consistency between the two implementations.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "makeready": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1615", "title": "Allow DynamoDB to write empty set attribute values, part 2", "body": "Hello,\r\n\r\nFirst off, thanks for merging in my original PR for this feature. However, now that it's usable in the wild, we're trying to save empty sets and getting errors from param_validator.rb. After tracing through the error it became clear that I forgot to create the new AttributeValue definitions to support empty sets. This PR is to fix those omissions.\r\n\r\nBTW, I wasn't clear on how to test this change - param_validator_spec uses a fake list of shapes, and client_api.rb doesn't have a corresponding test file, which means the definitions \r\nin client_api aren't actually tested anywhere. If you'd like me to write an integration test to cover it I can, but I assume this feature is too minor to deserve an integration test.\r\n\r\nThanks", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sorah": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1516", "title": "File#path may not point the corresponding file", "body": "According to [RDoc][1], `File#path` returns a string of the pathname used to create a `File` object. So, it doesn't guarantee a returned pathname points the pathname of File object's corresponding file.\r\n\r\nFor instance, File may have replaced with another file after original `File` object opened. Also, `File.open` with `File::TMPFILE` option don't create directory entry for created files (see `open(2)` manual). On current Ruby implementation, `O_TMPFILE` file objects returns a path of directory used to create a temporarily file.\r\n\r\n``` ruby\r\nFile.write '/tmp/foo', 'a'\r\nFile.write '/tmp/foo2', 'a'\r\nopen('/tmp/foo', 'r') do |io|\r\n  File.rename '/tmp/foo2', '/tmp/foo'\r\n  s3.put_object(..., body: io) # Reads different file!\r\nend\r\n\r\nopen('/tmp', File::RDWR | File::TMPFILE) do |io|\r\n  s3.put_object(..., body: io) #=> error: Errno::EISDIR\r\nend\r\n```\r\n\r\nThis patch changes Checksums module to correctly handle IO objects for\r\ncalculating digests.\r\n\r\n- Use `IO#dup` (`dup(2)`), `IO#rewind` and `IO#read` for calculating digest from `IO` object, always\r\n- Ensure binary mode when calculating digests\r\n- For non `IO` like objects, use #to_str to ensure the value is a `String` like object.\r\n\r\nSee also today's documentation change to note this pitfall. https://github.com/ruby/ruby/commit/efd36678e6041593a6b9cd64bdbe4318f1e7ad0e\r\n\r\n[1]: https://docs.ruby-lang.org/en/2.4.0/File.html#method-i-path", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "malept": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/1274", "title": "Allow setting config/credential files via environment variables", "body": "Adds support for setting the paths to the config and credentials files via environment variables, named the same as the ones used by botocore/awscli.\n- config file: `AWS_CONFIG_FILE`\n- credentials file: `AWS_SHARED_CREDENTIALS_FILE`\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattyn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581369", "body": "Thanks for catching this!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581381", "body": "Thanks for the patch, we'll check it out.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581434", "body": "Thanks for the bug report!  We'd like to direct all bug reports through the AWS Developer Forums:\n\nhttps://forums.aws.amazon.com/forum.jspa?forumID=125&start=0\n\nIt would be great if you could post your question there so other AWS developers can see the answers.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1581434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1600269", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1600269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619328", "body": "Thanks for the patch!  I think [this request](https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/2) covers the same issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1628400", "body": "Thanks again for reporting this issue!  This has been resolved with the latest release of the SDK.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1628400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647688", "body": "Thanks for the patch!  We'll look into it.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647689", "body": "Thanks for the patch, we'll look into it!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1647689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1656747", "body": "It seems like a potential workaround would be to set the option on the HTTPartyHandler.  For example:\n\n```\nAWS.config(:http_handler => AWS::Http::HTTPartyHandler.new(:ssl_ca_path => \"/etc/ssl/certs\"))\n```\n\nDoes that help with your use case?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1656747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1703753", "body": "I'm not able to reproduce the issue which this patch is meant to fix.  Can you post on the forums (http://forums.aws.amazon.com) with more details about where you are seeing this issue?  It would be great to know the ruby version and platform.  Also, when S3 can't verify the signature it returns an XML response including the expected string to sign.  If you can reproduce the problem under a non-critical bucket (e.g. one you create for this purpose) it would be great to see that XML response so we can pinpoint the problem further.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1703753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1793265", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1793265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1819977", "body": "Thanks for the patch!  We'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1819977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1829024", "body": "Hi,\n\nWe just released version 1.1.0 of the SDK, which should address this issue.  Let us know if you run into any more problems.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1829024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1934492", "body": "Thanks for the patch!  We'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1934492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2031581", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2031581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045694", "body": "Thanks again for the patch.  We incorporated your first commit with version 1.1.4 of the SDK.  We've also made some sweeping changes to the way the library loads that should help to address the overall load time.  I'm going to close this request, but please let us know if you have any issues with the latest version.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045738", "body": "Thanks again for the bug report and patch.  We've just released version 1.1.4 of the SDK, which should address this issue.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2045738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "msavy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619537", "body": "I didn't realise there were separately documented extensions to Time offering the RFC methods (hence constructing the format manually!).\n\nThe other solution is better I think.\n\nCheers.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1619537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "geoffyoungs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1662941", "body": "Yes it does - thanks - I'd missed that.  It's a much cleaner solution :)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1662941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "prashantrajan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1708565", "body": "Version 1.0.3 seems to have fixed this issue for me.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/1708565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "krishan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297187", "body": "With aws-sdk it is not yet possible to alter the content_type of an existing s3 object (without downloading and re-uploading it).\nThis patch enables the developer to do just that by supplying a new content_type when copying an s3 object, i.e. \n\n```\nobj1.copy_from(\"bucket/key\", :content_type => \"image/png\")\n```\n\nFor more info, see my question in the aws-sdk developer forums: https://forums.aws.amazon.com/thread.jspa?threadID=76578&tstart=0\n\nI'd be real happy if you could merge that into a new release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "awendt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297849", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2297849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kostia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2303221", "body": "Updated to Tag `1.2.0`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2303221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "amscotti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2823829", "body": "This is my first pull request on github, so if the code needs to be improved or if there is a more formal process let me know.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/2823829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "trevorrowe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170479", "body": "I merged in a different pull request that addresses this issue.  Should go out with the next release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170489", "body": "Version 1.2.4 of the SDK should address all of the remaining issues from this pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3170489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3362651", "body": "This has been released with version 1.2.6 of the aws-sdk gem.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3362651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622543", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622546", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622548", "body": "Thank you for your submission!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/issues/comments/3622548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838094", "body": "Yes, but this has since been fixed/re factored in later releases.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838117", "body": "Yes, but this has since been fixed/re factored in later releases.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/838117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124915", "body": "You can see a short discussion on the issue in this pull request: https://github.com/amazonwebservices/aws-sdk-for-ruby/pull/33#issuecomment-4576931 -- in short, nokogiri 1.5.1 was the lastest version at the time of this release, but it was broken for Ruby 1.8.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522778", "body": "You are correct, looks like a merge goof from adding the instance export.  I'll try to get a fix for this shortly.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522870", "body": "I released a hotfix (v1.5.6) which addresses this issue.  See the commit here: https://github.com/amazonwebservices/aws-sdk-for-ruby/commit/743a91222593765191a7bd19143c1b4fe10d000e\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517708", "body": "Thanks for the heads up.  I just fixed this in c25952ed50d568172de6eb1756525a35eeb2fa77.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517743", "body": "I cut a new gem release (1.8.1.1) with the updated gem specification.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3451330", "body": "@uberllama @webdevotion Lets move the conversation to the linked issue (#273).  I agree it is something that needs to be addressed.  \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3451330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496272", "body": "@benhamill You are correct.  This should be changed to set a minimum version.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3496272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684621", "body": "Be sure to remove the pair of debug statements here.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684771", "body": "Stylistically, I prefer the method invocation with parenthesis, i.e. `option(:signature_version, 'v4')`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684810", "body": "This is a good opportunity to improve this existing error message. Add into the message the valid signature versions.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44684810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54757392", "body": "We should reword this documentation to indicate the `:content_length` is only needed when `:multipart_copy` is `true`.  The content_length is used for calculating the number of parts and their size.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54757392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758479", "body": "This could also be expressed as:\n\n``` ruby\noptions[:copy_source_client] ||= source.client if source.respond_to?(:client)\n```\n\nThe `||=` is less important, the `respond_to?` check makes this a little more future proof. Currently we have not added support for `Aws::S3::ObjectVersion`, but this is likely to happen. No need to change this unless you feel inclined. If you don't, we will make the change when adding object version support.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60440783", "body": "Yes, that is only for the documented request syntax examples. Another option would be to do something like `\"true || false\"`. The important part of this is to ensure the example shows that a boolean is provided. It should also be valid Ruby syntax.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60440783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60441914", "body": "Completely understood, not sure of a valid alternative. `#create_bucket` and `#list_buckets` are simply not supported. The reason is the s3-accelerate endpoint must have an accelerated bucket as the endpoint prefix. Create is creating a new bucket that does not previously exist and list buckets is outside the context of a single bucket. `#delete_bucket` was added on request from the S3 team. There is no deterministic characteristic of these that makes it possible to not hardcode.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/60441914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "goldmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/515228", "body": "What's the story behind requiring this specific version (or newer)? Why it cannot be for example 1.4.3 (shipped with Fedora 14)?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/515228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tdc-jwhitson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821981", "body": "Shouldn't this be: Core::Configuration.add_option :\"#{ruby_name}_endpoint\", default_endpoint\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821983", "body": "Shouldn't this be: Core::Configuration.add_option_with_needs(\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/821983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "sikachu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124195", "body": "Can I have some rationale behind this? What is breaking on the latest Nokogiri?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1124195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "twhaples": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522438", "body": "So, because this thing went away, you can't launch EC2 instances with IAM Instance Profiles in 1.5.5, like you presumably could in 1.5.4 or 1.5.3.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/1522438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "JoshuaOSHickman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2104980", "body": "I'm getting crazy errors in my system about the CRC32 checks never matching in my dev setup. I've reverted to version 1.6.0, but I thought I'd mention it. I'm running a server on Goliath, if that helps/matters. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2104980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lsegal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2105075", "body": "@JoshuaOSHickman can you provide a backtrace for this?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2105075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2113161", "body": "@JoshuaOSHickman FYI if you want to disable CRC checking for the time being you can do it with:\n\n``` ruby\nAWS.config(:dynamo_db_crc32 => false)\n```\n\nOr:\n\n``` ruby\nAWS::DynamoDB.new(:dynamo_db_crc32 => false)\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2113161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377290", "body": "The bug is at http://bugs.ruby-lang.org/issues/7629 \n\nUnfortunately Ruby 1.9.3p362 is completely broken, so the results from Travis are of no value until the version is downgraded or another Ruby release is made. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413952", "body": "I still think adding \".rb\" as a binary name suffix will save us from painting us into a messy corner we can't get out of (a boto repl? Node.js?). I know it's not common to add a suffix, but it makes sense to me in this context. Or at least \"-rb\"?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413959", "body": "This was already required up top.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413963", "body": "Nitpick: \"amend\"\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3413963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "evanwieren": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2158719", "body": "This fails the test, because it does not know about content.etag. though it works perfectly fine. \n\nI will change and submit a new request. \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2158719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "iain": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377211", "body": "Which bug is this? Will this affect production code or only tests?\n\nRuby 1.9.3 is the main Ruby version at this moment, so I would be hesitant to leave that version out of CI.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2377211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nathany": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517449", "body": "FYI, the dependency is still in your gemspec.\n\n`s.add_dependency('httparty', '~> 0.7')`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "guyisra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517454", "body": "I see it too after upgrading to 1.8.1.. thought it was only me\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2517454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dkln": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2530736", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/2530736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uberllama": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3400270", "body": "Is there a timeline on this backward compatibility? If Ruby 1.8.7 compatibility is required long term, it would be nice to see a separate branch specifically for that.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3400270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "webdevotion": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3431176", "body": "I agree. Bundler fails to find compatible versions to update because of this restriction.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3431176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chulkilee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3450353", "body": "Created an issue #273 \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3450353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "benhamill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3490726", "body": "I think there's a bug in this commit. If you rely on features that are in 1.4.4, but not in 1.4.0, then you still need to specify that restriction. `add_dependency` takes more than one version specification string.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/comments/3490726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dividedmind": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/5974963", "body": "How about putting the whole `entry` in `details` instead? It'd be put there by reference anyway, so no copying involved. Then `[:receipt_handle]` would be redundant, but I guess it can be left there for backwards compatibility (marked as deprecated?).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/5974963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "thenovices": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/24028242", "body": "cleaner would be\n\n``` ruby\noptions[:client_token] ||= SecureRandom.uuid\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/24028242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kitchen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44853745", "body": "The default `options` parameter on this method would have raised a `NoMethodError` and it's a private method, so I got rid of the default.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/44853745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tawan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/53476462", "body": "@trevorrowe This is the line you mentioned in the previous commit: I simple added a `nil` check. Only messages which are which are placed in the `successful` array are verified.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/53476462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "whazzmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758771", "body": "Sounds good- I'll try to collect the feedback and push an update this afternoon.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/54758771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "equivalent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55100965", "body": "I'm ok with that, will change this in next commit.  ...please let me know if you want me to squash commits\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/55100965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "ssuprun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56849725", "body": "But what happens if we will have the defined one from these parameters in non-source profile? Seems they will be re-written from source one. I believe the usage of method \"merge\" is more correct. But I agree with check the existence of  source profile.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56849725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58183104", "body": "Actually you propose the cosmetic change. :) If this one is only blocker I'll do it ;)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58183104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hguo0303": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56887496", "body": "Yeah, I agreed it would be more convenient to have access_key and session_token in the non-source profile. But I made these changes so that it can be uniform with python and java implementations. In botocore, for example, source profile is a mandatory field, and access_key and session_token are only retrieved from source profile. Please refer https://github.com/boto/botocore/blob/develop/botocore/credentials.py#L840-L866 for more information. I believe it is the same idea in java implementation.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/56887496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "grosser": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58000320", "body": "random name seems a bit strange ... how about `\"assumed-#{profile_name}-#{ENV['USER']}\"`\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-ruby/pulls/comments/58000320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}