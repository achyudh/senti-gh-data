{"_default": {"1": {"mwhouser": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/838", "title": "Cannot copy encrypted DB snapshot and add tags with spaces", "body": "<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nWhen copying an encrypted DB snapshot, you have the option of adding tags to the new snapshot. You should be able to specify any valid tag key and value and successfully copy the DB snapshot.\r\n\r\nSpaces are valid characters for resource tag keys and values: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions\r\n\r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->\r\n<!--- To turn on SDK logging, follow instructions provided [here][logging] -->\r\n<!--- If service responses are relevant, please include Fiddler-captured wirelogs -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nWhen you copy an encrypted DB snapshot and you specify tags with spaces in the key, the copy fails with an error:\r\n\r\nErrorCode: `InvalidParameterValue`\r\nMessage: `PreSignedUrl could not be authenticated.`\r\n\r\nI have tried using both the AWS-supplied KMS key `aws/rds` and my own key.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a self-contained, concise snippet of code that can be inserted into a -->\r\n<!--- basic .NET console application to replicate the bug -->\r\n<!--- For more complex issues provide a repo with the smallest sample that reproduces the bug -->\r\n<!--- Including business logic or unrelated code makes diagnosis more difficult -->\r\n\r\n```csharp\r\ntry\r\n{\r\n\tvar client = new Amazon.RDS.AmazonRDSClient(\"<removed>\", \"<removed>\", Amazon.RegionEndpoint.USEast1);\r\n\r\n\tvar response = client.CopyDBSnapshot(new Amazon.RDS.Model.CopyDBSnapshotRequest()\r\n\t{\r\n\t\tSourceDBSnapshotIdentifier = \"arn:aws:rds:us-west-2:123456789012:snapshot:source-1\",\r\n\t\tSourceRegion = \"us-west-2\",\r\n\r\n\t\tTargetDBSnapshotIdentifier = \"target-1\",\r\n\t\tKmsKeyId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n\r\n\t\tTags = new List<Amazon.RDS.Model.Tag>()\r\n\t\t{\r\n\t\t\tnew Amazon.RDS.Model.Tag()\r\n\t\t\t{\r\n\t\t\t\tKey = \"Key With Spaces\",\r\n\t\t\t\tValue = \"NoSpace\"\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}\r\ncatch (Exception e)\r\n{\r\n\tConsole.WriteLine(\"Error: {0}\", e.Message);\r\n}\r\n```\r\n\r\nNote that the same above code successfully copies the DB snapshot if you change the tag key to \"KeyWithSpaces\".\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nThis issue only happens with **encrypted** snapshots. It does not happen with non-encrypted snapshots.\r\n\r\nThis issue prevents the command from succeeding. As a workaround, it could be accomplished in 2 steps:\r\n\r\n* Copy the DB snapshot without the tags, then\r\n* Add the tags using `rds:AddTagsToResource`\r\n\r\nBut this is extra steps and extra permissions required.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment where the bug was discovered -->\r\n* AWSSDK.Core version used: 3.3.19\r\n* Service assembly and version used: AWSSDK.RDS 3.3.20\r\n* Operating System and version: Windows 10, Windows Server 2012 R2, Windows Server 2016\r\n* Visual Studio version: Visual Studio 2017\r\n* Targeted .NET platform: .NET Framework 4.5, 4.6.2\r\n\r\n## Additional Notes\r\n\r\nA very similar issue was reported in the AWS CLI here: https://github.com/aws/aws-cli/issues/2860", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bluemonkmn": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/837", "title": "LitJson ThirdParty component embedded in AWSSDK.Core behaves badly on MonoAndroid10 build only", "body": "See https://stackoverflow.com/questions/48272476/extra-garbage-produced-by-litjson-serialization-with-aws-sdk-for-monoandroid10\r\n\r\nThe serialized JSON code from the LitJson ThirdParty component includes backing fields in the MonoAndroid10 build only for some reason.\r\n\r\n## Expected Behavior\r\nThe example code at https://github.com/LitJSON/litjson/blob/develop/doc/quickstart/guide.md should output:\r\n{\"Name\":\"William Shakespeare\",\"Age\":51,\"Birthday\":\"04/26/1564 00:00:00\"}\r\n\r\n## Current Behavior\r\nThe example code outputs:\r\n```\r\n{  \r\n   \"Name\":\"William Shakespeare\",\r\n   \"Age\":51,\r\n   \"Birthday\":\"04/26/1564 00:00:00\",\r\n   \"<Name>k__BackingField\":\"William Shakespeare\",\r\n   \"<Age>k__BackingField\":51,\r\n   \"<Birthday>k__BackingField\":\"04/26/1564 00:00:00\"\r\n}\r\n```\r\n\r\n## Possible Solution\r\nConsider removing the integrated third party LitJSON component and including it as a separate externally built dependency. I'm not sure if this will solve the problem, but may simplify diagnosing its source.\r\n\r\n## Steps to Reproduce (for bugs)\r\nReference the MonoAndroid10 build of AWSSDK.Core.\r\n```\r\npublic static void PersonToJson()\r\n{\r\n    Person bill = new Person();\r\n\r\n    bill.Name = \"William Shakespeare\";\r\n    bill.Age  = 51;\r\n    bill.Birthday = new DateTime(1564, 4, 26);\r\n\r\n    string json_bill = JsonMapper.ToJson(bill);\r\n\r\n    Console.WriteLine(json_bill);\r\n}\r\n```\r\n\r\n## Context\r\nI have already referenced AWSSDK.Core in my Xamarin Android app and decided to use the included JSON parse rather than bloat my application with reference to yet another library. Everything works, but this extra junk is included in the data files my application uses, which makes it difficult to read if I ever decide to make the data files public for editing or debugging.\r\n\r\n## Your Environment\r\n* AWSSDK.Core version used: MonoAndroid10 AWSSDK.Core.3.3.19.1 & 3.3.21.6 (Net45 is OK)\r\n* Service assembly and version used: ???\r\n* Operating System and version: Windows 10\r\n* Visual Studio version: Visual Studio Community 2017\r\n* Targeted .NET platform:  Microsoft .NET 4.6.1.\r\n\r\n## .NET Core Info\r\nProblem arose on Xamarin Android using .NET Core but has been reproduced in a Windows Console application referencing MonoAndroid10 with .NET Framework 4.6.1. So .NET Core should be irrelevant.\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JGuthrie-Bluebeck": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/835", "title": "Unable To Post Files", "body": "Folks this just feels like the SDK is broken and after reading issues like below it makes me want to move to another provider.\r\n\r\nhttps://github.com/aws/aws-sdk-net/issues/332\r\n\r\nFor me the problem is pretty clearly that in the web request it is trying to set headers that it shouldn't be touching:\r\n\r\nInvalidOperationException: Cannot override system-specified headers\r\n\r\nLooks like the culprit is Content-Length.\r\n\r\nThis happening when I try to put anything into my bucket (I can get from it just fine). I get different errors when I try to post but they where so generically non-sensical I switched to put.\r\n\r\nThe other change I have from the demo example is that I use:\r\n\r\n`  awsCredentials = new BasicAWSCredentials(AWSAccessKey, AWSSecretKey);` ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pramodpaudel377": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/834", "title": "Intermitent Bad Request for StartWithSrpAuthAsync", "body": "While logging sometimes there is an error - \"Invalid Input Given\" due to Bad Request while using StartWithSrpAuthAsync. this is not happening every time and is an intermittent issue. \r\n \r\n## Expected Behavior\r\nWhile creating a BigInteger it should check and make sure it is a valid number and should able to authenticate SRP auth request. \r\n\r\n## Current Behavior\r\nRight now while generating BigInteger with random value here - \r\n```\r\n internal static Tuple<BigInteger, BigInteger> CreateAaTuple()\r\n        {\r\n            BigInteger a, A;\r\n            do\r\n            {\r\n                a = new BigInteger(16, new Random());\r\n                A = g.ModPow(a, N);\r\n            } while (A.Mod(N).Equals(BigInteger.Zero));\r\n\r\n            return Tuple.Create<BigInteger, BigInteger>(A, a);\r\n        }\r\n```\r\nsometimes its generating valid value which is not valid for AWS Cognito SRP auth. and should be identified early\r\n\r\n## Possible Solution\r\n<!--- Not required, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\nusing this Auth-request I am able to reproduce the issue - \r\n\r\n            InitiateAuthRequest initiateAuthRequest = new InitiateAuthRequest()\r\n            {\r\n                AuthFlow = AuthFlowType.USER_SRP_AUTH,\r\n                ClientId = <AWS-CLIENT-ID>,\r\n                AuthParameters = new Dictionary<string, string>(StringComparer.Ordinal)\r\n                {\r\n                    { CognitoConstants.ChlgParamUsername, username },\r\n                    { CognitoConstants.ChlgParamSrpA, \"b8feb74c204ff5\" }\r\n                    //\r\n                }\r\n            };\r\n\r\n            InitiateAuthResponse initiateResponse = await \r\n           provider.InitiateAuthAsync(initiateAuthRequest).ConfigureAwait(false);\r\n\r\n## Context\r\nI am trying to authenticate the user using StartWithSrpAuthAsync it works fine 95 % but fails sometimes with Bad Request error and ended up showing Invalid Input Given error. \r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment where the bug was discovered -->\r\n* AWSSDK.Core version used: 3.3.18.2\r\n* Operating System and version: Win 10 64 bit\r\n* Visual Studio version: VS 2017\r\n\r\n\r\n\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "slavah": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/832", "title": "s3 putObjectRequest CPU consumption issue", "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nUnder CPU load AWS S3 SDK (3.3.16.2) has poor performance and consumes CPU needlessly.\r\n\r\nSuspected culprit: s3 putObjectRequest is using MD5Stream internally. [PutObjectRequestMarshaller.cs](https://github.com/aws/aws-sdk-net/blob/master/sdk/src/Services/S3/Custom/Model/Internal/MarshallTransformations/PutObjectRequestMarshaller.cs)\r\nRetry mechanism implemented in api will always reset and recalculate MD5 hash of stream as well.\r\n[RetryHandler.cs](https://github.com/aws/aws-sdk-net/blob/master/sdk/src/Core/Amazon.Runtime/Pipeline/RetryHandler/RetryHandler.cs#L224)\r\n\r\n## Expected Behavior\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nPerformance (CPU and IO) using SDK S3 API should be as close as possible to direct s3 call\r\n\r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->\r\n<!--- To turn on SDK logging, follow instructions provided [here][logging] -->\r\n<!--- If service responses are relevant, please include Fiddler-captured wirelogs -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nCurrently using SDK putObjectRequest MD5Stream is being used:\r\nhttps://github.com/aws/aws-sdk-net/blob/master/sdk/src/Services/S3/Custom/Model/Internal/MarshallTransformations/PutObjectRequestMarshaller.cs (104)\r\n\r\n```csharp\r\n// Wrap input stream in MD5Stream\r\nvar hashStream = new MD5Stream(streamWithLength, null, length);\r\nputObjectRequest.InputStream = hashStream;\r\n```\r\n\r\nSame issue happening during RetryHandler which would reset state of MD5Stream and recalculate MD5 Hash of whole stream again.\r\n\r\n## Possible Solution\r\n<!--- Not required, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nRemove MD5Stream.\r\nPlease explain the reasoning behind MD5Stream usage. Why is it required?\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a self-contained, concise snippet of code that can be inserted into a -->\r\n<!--- basic .NET console application to replicate the bug -->\r\n<!--- For more complex issues provide a repo with the smallest sample that reproduces the bug -->\r\n<!--- Including business logic or unrelated code makes diagnosis more difficult -->\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nS3 SDK implementation starving CPU needlessly.\r\nLow performance under CPU load.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment where the bug was discovered -->\r\n* AWSSDK.Core version used: \r\n3.3.21.6\r\n* Operating System and version: \r\nUbuntu 16.04 LTS\r\n* Targeted .NET platform: \r\nNet Core 2.0\r\n\r\n## .NET Core Info\r\n<!--- For .NET Core issues, please provide the following -->\r\n* .NET Core version used for development: \r\n2.0\r\n* .NET Core version installed in the environment where application runs: \r\n2.0\r\n\r\n\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/832/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hun1ahpu": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/830", "title": "Error unmarshalling response back from AWS - Root element is missing", "body": "I'm seeing this exception from time to time in our logs. I believe it's coming from AmazonCloudWatchClient.PutMetricData but I might be wrong.\r\nAWSSDK version used 3.3.0.0\r\n\r\nAmazon.Runtime.AmazonUnmarshallingException: Error unmarshalling response back from AWS.  ---> System.Xml.XmlException: Root element is missing.    at System.Xml.XmlTextReaderImpl.Throw(Exception e)    at System.Xml.XmlTextReaderImpl.ParseDocumentContent()    at Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.Read() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Internal\\Transform\\UnmarshallerContext.cs:line 368    at Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller.Unmarshall(XmlUnmarshallerContext context) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Internal\\Transform\\ErrorResponseUnmarshaller.cs:line 36    at Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Services\\CloudWatch\\Generated\\Model\\Internal\\MarshallTransformations\\PutMetricDataResponseUnmarshaller.cs:line 101    at Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.HandleException(IExecutionContext executionContext, HttpErrorResponseException exception) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\ErrorHandler\\HttpErrorResponseExceptionHandler.cs:line 78    --- End of inner exception stack trace ---    at Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.HandleException(IExecutionContext executionContext, HttpErrorResponseException exception) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\ErrorHandler\\HttpErrorResponseExceptionHandler.cs:line 111    at Amazon.Runtime.Internal.ErrorHandler.ProcessException(IExecutionContext executionContext, Exception exception) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\ErrorHandler\\ErrorHandler.cs:line 204    at Amazon.Runtime.Internal.ErrorHandler.<InvokeAsync>d__5`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\ErrorHandler\\ErrorHandler.cs:line 104 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\CallbackHandler.cs:line 0 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.CredentialsRetriever.<InvokeAsync>d__7`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\CredentialsRetriever.cs:line 98 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.RetryHandler.<InvokeAsync>d__10`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\RetryHandler\\RetryHandler.cs:line 0 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at Amazon.Runtime.Internal.RetryHandler.<InvokeAsync>d__10`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\RetryHandler\\RetryHandler.cs:line 131 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\CallbackHandler.cs:line 0 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\CallbackHandler.cs:line 0 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.ErrorCallbackHandler.<InvokeAsync>d__5`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\ErrorCallbackHandler.cs:line 58 --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at Amazon.Runtime.Internal.MetricsHandler.<InvokeAsync>d__1`1.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\Handlers\\MetricsHandler.cs:line 0\r\n\r\n## Expected Behavior\r\nNo exception\r\n\r\n## Current Behavior\r\nThe exception is happening once a day or something\r\n\r\n## Your Environment\r\n* AWSSDK.Core version used: 3.3.0.0", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "junjiequ": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/828", "title": "AWSSDK.Extensions.NETCore.Setup -\"Unable to find credentials\" happens on Nuget Version >= 3.3.1, works OK on version 3.3.0.3", "body": "appsettings.json content:\r\n```\r\n{\r\n  \"AWS\": {\r\n    \"Profile\": \"Development\",\r\n    \"Region\": \"eu-central-1\"\r\n  }\r\n}\r\n```\r\n\r\nTarget framework: .NetCore 2.0\r\n\r\nprogram.cs code:\r\n\r\n```\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var path = Path.GetDirectoryName(typeof(Program).GetTypeInfo().Assembly.Location);\r\n\r\n            var configurations = new ConfigurationBuilder()\r\n                .SetBasePath(path)\r\n                .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n                .Build();\r\n            var services = new ServiceCollection();\r\n\r\n            var awsOptions = configurations.GetAWSOptions();\r\n            services.AddDefaultAWSOptions(awsOptions);\r\n            services.AddAWSService<IAmazonS3>();\r\n\r\n            var serviceProvider = services.BuildServiceProvider();\r\n\r\n            var s3Client = serviceProvider.GetService<IAmazonS3>();\r\n\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n```\r\nReferencing AWSSDK.Extensions.NETCore.Setup nuget package version 3.3.1 and above.\r\n\r\n## Expected Behavior\r\nThe s3Client should be resolved successfully.\r\n\r\n## Current Behavior\r\nIf update the nuget package to version 3.3.0.1, the above code can run successfully.\r\nIf use any versions >= 3.3.1, the following exception is thrown:\r\n\r\nAmazon.Runtime.AmazonServiceException\r\n  HResult=0x80131500\r\n  Message=**Unable to find credentials**\r\n\r\nException 1 of 3:\r\nAmazon.Runtime.AmazonClientException: Unable to find the 'default' profile in CredentialProfileStoreChain.\r\n   at Amazon.Runtime.FallbackCredentialsFactory.GetAWSCredentials(ICredentialProfileSource source) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 72\r\n   at Amazon.Runtime.FallbackCredentialsFactory.GetCredentials(Boolean fallbackToAnonymous) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 115\r\n\r\nException 2 of 3:\r\nSystem.InvalidOperationException: The environment variables AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY/AWS_SESSION_TOKEN were not set with AWS credentials.\r\n   at Amazon.Runtime.EnvironmentVariablesAWSCredentials.FetchCredentials() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\_bcl+coreclr\\EnvironmentVariablesAWSCredentials.cs:line 80\r\n   at Amazon.Runtime.EnvironmentVariablesAWSCredentials..ctor() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\_bcl+coreclr\\EnvironmentVariablesAWSCredentials.cs:line 58\r\n   at Amazon.Runtime.FallbackCredentialsFactory.<>c.<Reset>b__9_1() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 55\r\n   at Amazon.Runtime.FallbackCredentialsFactory.GetCredentials(Boolean fallbackToAnonymous) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 115\r\n\r\nException 3 of 3:\r\nSystem.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Net.Http.WinHttpException: A connection with the server could not be established\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.Tasks.RendezvousAwaitable`1.GetResult()\r\n   at System.Net.Http.WinHttpHandler.<StartRequest>d__105.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncUnbuffered>d__59.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.Net.Http.HttpClient.<GetStringAsyncCore>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Amazon.Runtime.Internal.Util.AsyncHelpers.<>c__DisplayClass1_1`1.<<RunSync>b__0>d.MoveNext() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Internal\\Util\\_mobile\\AsyncHelpers.cs:line 79\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Amazon.Runtime.Internal.Util.AsyncHelpers.ExclusiveSynchronizationContext.BeginMessageLoop() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Internal\\Util\\_mobile\\AsyncHelpers.cs:line 142\r\n   at Amazon.Runtime.Internal.Util.AsyncHelpers.RunSync[T](Func`1 task) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Internal\\Util\\_mobile\\AsyncHelpers.cs:line 87\r\n   at Amazon.Util.AWSSDKUtils.DownloadStringContent(Uri uri, TimeSpan timeout) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Util\\AWSSDKUtils.cs:line 895\r\n   at Amazon.Runtime.URIBasedRefreshingCredentialHelper.GetContents(Uri uri) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\URIBasedRefreshingCredentialHelper.cs:line 32\r\n   at Amazon.Runtime.InstanceProfileAWSCredentials.<GetAvailableRoles>d__10.MoveNext()\r\n   at Amazon.Runtime.InstanceProfileAWSCredentials.GetFirstRole() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\InstanceProfileAWSCredentials.cs:line 204\r\n   at Amazon.Runtime.FallbackCredentialsFactory.ECSEC2CredentialsWrapper() in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 94\r\n   at Amazon.Runtime.FallbackCredentialsFactory.GetCredentials(Boolean fallbackToAnonymous) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 115\r\n\r\n\r\n  Source=AWSSDK.Core\r\n  StackTrace:\r\n   at Amazon.Runtime.FallbackCredentialsFactory.GetCredentials(Boolean fallbackToAnonymous) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\sdk\\src\\Core\\Amazon.Runtime\\Credentials\\FallbackCredentialsFactory.cs:line 150\r\n   at Amazon.Extensions.NETCore.Setup.ClientFactory.CreateCredentials(AWSOptions options) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\extensions\\src\\AWSSDK.Extensions.NETCore.Setup\\ClientFactory.cs:line 125\r\n   at Amazon.Extensions.NETCore.Setup.ClientFactory.CreateServiceClient(Type serviceInterfaceType, AWSOptions options) in E:\\JenkinsWorkspaces\\v3-trebuchet-release\\AWSDotNetPublic\\extensions\\src\\AWSSDK.Extensions.NETCore.Setup\\ClientFactory.cs:line 72\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.<>c__DisplayClass22_0.<RealizeService>b__0(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at ConsoleApp1.Program.Main(String[] args) in c:\\users\\quju\\documents\\visual studio 2017\\Projects\\ConsoleApp_AWSSetupTest\\ConsoleApp1\\Program.cs:line 28\r\n\r\n## Possible Solution\r\nIs the current latest package updated with the correct version number?\r\n\r\n## Steps to Reproduce (for bugs)\r\nReferencing nuget package version >=3.3.1\r\n\r\n## Your Environment\r\n* AWSSDK.Core version used: 3.3.21.6\r\n* Visual Studio version: 15.5.2\r\n* Targeted .NET platform: .Net Core 2.0\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AbbTek": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/827", "title": "Identify if the HttpRequest was cancelled by timeout or cancellation token", "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nThe method **GetResponseAsync** from the class **HttpWebRequestMessage** (sdk\\src\\Core\\Amazon.Runtime\\Pipeline\\HttpHandler\\_mobile\\HttpRequestMessageFactory.cs) is throwing a TaskCanceledException either for a timeout defined in the HttpClient or when the Cancel method is called in the CancelationTokenSource. This behaviour makes hard to find the origin of errors.\r\n\r\n## Expected Behavior\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nThrowing an exception whit the proper error.\r\n\r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->\r\n<!--- To turn on SDK logging, follow instructions provided [here][logging] -->\r\n<!--- If service responses are relevant, please include Fiddler-captured wirelogs -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Possible Solution\r\n<!--- Not required, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nI know the workaround is hard because internally the HttpClient is cancelling the token when the timeout is reached. But maybe you could add the current HttpClient's timeout in the Exception, at least with that info it would be easy to realise who is cancelling the task.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a self-contained, concise snippet of code that can be inserted into a -->\r\n<!--- basic .NET console application to replicate the bug -->\r\n<!--- For more complex issues provide a repo with the smallest sample that reproduces the bug -->\r\n<!--- Including business logic or unrelated code makes diagnosis more difficult -->\r\n\r\nThis happened to my working with s3 and massive files using multithreading to upload a large number of files. \r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment where the bug was discovered -->\r\n* AWSSDK.Core version used: 3.3.21.6\r\n* Service assembly and version used: \r\n* Operating System and version: Lambda Function\r\n* Visual Studio version: \r\n* Targeted .NET platform: \r\n\r\n## .NET Core Info\r\n<!--- For .NET Core issues, please provide the following -->\r\n* .NET Core version used for development: 1.1\r\n* .NET Core version installed in the environment where application runs: Lambda\r\n* Output of `dotnet --info`: \r\n* Contents of project.json/project.csproj: \r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "durangogt": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/824", "title": "IpRanges property no longer populated for IpPermissionsEgress.IpRanges", "body": "In a previous version of AWS Powershell (i.e. less than 3.3.180) - Ipv4Ranges property didn't exist and now it exists for egress however IpRanges does not, does for Ingress but not Egress. Backward incompatibility issue where the value isn't copied from Ipv4Ranges to IpRanges for egress like it is for ingress. And this has resulted in our code breaking.\r\n\r\n## Expected Behavior\r\nIPRanges values to be in both IpRanges & Ipv4Ranges as it is in the Ingress.\r\n\r\n## Current Behavior\r\n```\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermission | select *\r\n\r\n\r\nUserIdGroupPair  : {}\r\nIpRange          : {208.86.48.0/23}\r\nIpRanges         : {208.86.48.0/23}\r\nFromPort         : 3389\r\nIpProtocol       : tcp\r\nIpv4Ranges       : {Amazon.EC2.Model.IpRange}\r\nIpv6Ranges       : {}\r\nPrefixListIds    : {}\r\nToPort           : 3389\r\nUserIdGroupPairs : {}\r\n\r\n\r\n\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermissionsEgress | select *\r\n\r\n\r\nUserIdGroupPair  : {}\r\nIpRange          : {}\r\nIpRanges         : {}\r\nFromPort         : 0\r\nIpProtocol       : -1\r\nIpv4Ranges       : {Amazon.EC2.Model.IpRange}\r\nIpv6Ranges       : {}\r\nPrefixListIds    : {}\r\nToPort           : 0\r\nUserIdGroupPairs : {}\r\n\r\n\r\n\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermission.ipvranges\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermission.Ipv4ranges\r\n\r\nCidrIp                                                                                                            Description\r\n------                                                                                                            -----------\r\n208.86.48.0/23\r\n\r\n\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermission.ipranges\r\n208.86.48.0/23\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermissionsEgress.IpRanges\r\nPS C:\\Users\\IckesJ\\Source\\Repos\\MKIaC> ((Get-EC2SecurityGroup -Region 'us-east-1')[1]).IpPermissionsEgress.Ipv4ranges\r\n\r\nCidrIp                                                                                                            Description\r\n------                                                                                                            -----------\r\n0.0.0.0/0\r\n```\r\n## Possible Solution\r\nEnsure the value is copied from Ipv4Ranges to IpRanges in egress as it is in Ingress.\r\n\r\n## Steps to Reproduce (for bugs)\r\nSee powershell output above.\r\n\r\n## Context\r\nExisting code is breaking.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment where the bug was discovered -->\r\n* AWSSDK.Core version used: \r\n* Service assembly and version used: \r\n* Operating System and version: \r\n* Visual Studio version: \r\n* Targeted .NET platform: \r\n\r\n## .NET Core Info\r\nAWS Tools for Windows PowerShell\r\nVersion 3.3.210.0\r\nCopyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nAmazon Web Services SDK for .NET\r\nCore Runtime Version 3.3.21.4\r\nCopyright 2009-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neurospeech": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/823", "title": ".Net Core Signature Mismatch", "body": "I have following code, one is ASP.NET 4.5 and same is used for ASP.NET Core 2.0, \r\n\r\nFollowing ASP.NET 4.5 works fine\r\n\r\nNuGet \r\n```xml\r\n  <package id=\"AWSSDK.Core\" version=\"3.3.17.4\" targetFramework=\"net45\" />\r\n  <package id=\"AWSSDK.S3\" version=\"3.3.8.2\" targetFramework=\"net45\" />\r\n```\r\n\r\n```c#\r\nAmazon.Runtime.AWSCredentials cd = new Amazon.Runtime.BasicAWSCredentials(Key, Secrete);\r\nclient = new AmazonS3Client(cd, Amazon.RegionEndpoint.USEast1);\r\nAmazon.S3.Model.PutObjectRequest req = new Amazon.S3.Model.PutObjectRequest();\r\nreq.BucketName = name;\r\nreq.Key = path;\r\nreq.InputStream = ms;\r\nreq.ContentType = mimeType;\r\nreq.Headers.CacheControl = \"public,max-age=3240000\";\r\nreq.CannedACL = S3CannedACL.PublicRead;\r\n\r\nclient.PutObject(req);\r\n```\r\n\r\nFollowing ASP.NET Core 2.0 code gives Signature Mismatch Error **\"The request signature we calculated does not match the signature you provided. Check your AWS secret access key and signing method.\"**\r\n\r\nNuGet\r\n```xml\r\n    <PackageReference Include=\"AWSSDK.S3\" Version=\"3.3.16\" />\r\n```\r\n\r\n```c#\r\nAmazon.Runtime.AWSCredentials cd = new Amazon.Runtime.BasicAWSCredentials(key, secrete);\r\nclient = new AmazonS3Client(cd, Amazon.RegionEndpoint.USEast1);\r\n\r\nAmazon.S3.Model.PutObjectRequest req = new Amazon.S3.Model.PutObjectRequest();\r\nreq.BucketName = name;\r\nreq.Key = path;\r\nreq.ContentType = mimeType;\r\n\r\nreq.Headers.CacheControl = \"public,max-age=3240000\";\r\nreq.InputStream = stream;\r\nreq.CannedACL = S3CannedACL.PublicRead;\r\n\r\nawait client.PutObjectAsync(req);\r\n```\r\n\r\nKey, Secret, Name and Path passed are exactly same for both cases. Also I have verified that there is no extra special character in bucket Name (it is alphanumeric).\r\n\r\nI have gone through change log to see if any special config is needed for signature version, but as per your change log, S3 client after \"3.3.6.2\" uses SigV4 by default. So in both the projects SigV4 is turned on by default.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andytl6": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/821", "title": "Visual Studio w/ AWS Toolkit - Publishing Docker configuration to Elastic Beanstalk Docker Environment", "body": "## Feature Request\r\nProvide an ability to publish from Visual Studio to a AWS Elastic Beanstalk Single Container Docker  Environment [1] such as the '64bit Amazon Linux 2017.09 v2.8.1 running Docker 17.06.2-ce' [2] using the AWS Toolkit for VS 2017\r\n\r\nAWS Toolkit to recognize that publishing should factor in the Dockerrun.aws.json files, and/or Dockerfile as specified here [3].  \r\n\r\nCurrently, when publishing from Visual Studio to an EB environment that uses a Dockerrun.aws.json file, the publishing process ignores the file and publishes the Project as a 'normal' application into IIS. It's not aware that the publish process involves an EB single container docker environment and ignores the custom configurations in the .json file\r\n\r\nReferences: \r\n[1] http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/docker-singlecontainer-deploy.html\r\n[2] http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html#concepts.platforms.docker\r\n[3] http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker_image.html\r\n\r\n## Environment\r\nVisual Studio Community 2017 - v15.3.3\r\nAWS Toolkit for Visual Studio 2017 - 1.12.2.1\r\n.Net Framework v 4.6.1\r\nWindows 10", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ulgerang": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/820", "title": "Unity2017.3 , aws lambda sdk  can not use long string.", "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nwhen I use unity 2017.3 , I can not use long string.\r\n it occur  exception.\r\n\r\nAmazon.Lambda.AmazonLambdaException: The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.\r\n\r\n## Expected Behavior\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->\r\n<!--- To turn on SDK logging, follow instructions provided [here][logging] -->\r\n<!--- If service responses are relevant, please include Fiddler-captured wirelogs -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Possible Solution\r\n<!--- Not required, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\nsend any long message, about 2000 charactor  ,  to lambda using unity aws sdk.\r\n\r\n\r\nResultText.text = \"Invoking '\" + FunctionNameText.text + \" function in Lambda... \\n\";\r\n            string text = @\"{\"\"key1\"\":\"\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\" }\";\r\n\r\n            Debug.Log(\"text.legnth \"+ text.Length);\r\n\r\n            Client.InvokeAsync(new Amazon.Lambda.Model.InvokeRequest()\r\n            {\r\n                FunctionName = \"HelloLamda\",\r\n                Payload = text\r\n            },\r\n            (responseObject) =>\r\n            {\r\n                ResultText.text += \"\\n\";\r\n                if (responseObject.Exception == null)\r\n                {\r\n                    ResultText.text += Encoding.ASCII.GetString(responseObject.Response.Payload.ToArray()) + \"\\n\";\r\n                }\r\n                else\r\n                {\r\n                    ResultText.text += responseObject.Exception + \"\\n\";\r\n                }\r\n            }\r\n            );\r\n\r\n\r\n## Context\r\n\r\n## Your Environment\r\n\r\nI just used 'AWSSDK.Lambda.3.3.10.0.unitypackage'\r\nand Unity 2017.3\r\n\r\n## .NET Core Info\r\n<!--- For .NET Core issues, please provide the following -->\r\n* .NET Core version used for development: \r\n* .NET Core version installed in the environment where application runs: \r\n* Output of `dotnet --info`: \r\n* Contents of project.json/project.csproj: \r\n.net 3.5  and .net 4.6\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hinidu": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/818", "title": "libsqlite3 binaries in Unity3d packages which doesn't need them", "body": "Hello!\r\nIt looks like all packages for Unity3d have libsqlite3 binaries inside but it is only used in CognitoSync and MobileAnalytics services.\r\nSo it looks like it is not needed to include these binaries in other packages. Taking into account another issue: https://github.com/aws/aws-sdk-net/issues/817. Including these unnecessary binaries even drastically degrade performance on some devices.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/817", "title": "No libsqlite3.so for x86_64 Androids in Unity3d packages", "body": "Hello!\r\nPackages for Unity3d have libsqlite3.so inside but only for ARM architecture. And what's even worse they have this file in the root of Plugins directory (though the same file is inside inner ARM-specific directory).\r\nBecause of that we had huge performance degradation on Android devices with x86_64. We build fat apk with both architectures supported, but device found that this .so-file is built for ARM and choose ARM binaries even if it's CPU is x86_64.\r\nWe are lucky because we actually don't need these .so-files and could just remove them.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "murphy112358": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/816", "title": "WorkDocs: Ampersands in User ID not handled correctly in ActivateUser, DeactivateUser, DeleteUser, UpdateUser", "body": "The WorkDocs APIs ActivateUser, DeactivateUser, DeleteUser, UpdateUser have the following URL formats where User ID is specified as part of the URL:\r\n\r\n    /api/v1/users/{UserId}/activation\r\n    /api/v1/users/{UserId}\r\n\r\nThe ampersand does not seem to be URL-escaped, resulting in an unintended failure (Invalid SigV4 signature.)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "devangelito": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/809", "title": "AmazonLambdaClient.Invoke() throws AmazonLambdaException due to Expired Signature", "body": "We have a lambda function developed in C# (dotnetcore) that invokes another lambda function. Intermittently, we are getting this Amazon.Lambda.AmazonLambdaException from AmazonLambdaClient.Invoke() due to expired signature (internally thrown via Amazon.Runtime.Internal.HttpErrorResponseException).\r\n\r\n## Expected Behavior\r\nAmazonLambdaClient.Invoke() does not encounter this exception intermittently. Not sure if clock-skew correction is also in place for Lambda functions, but internal retry mechanism would be great.\r\n\r\n## Current Behavior\r\nIntermittently, invocation of lambda function from a lambda function results to exception. Stack trace below:\r\n```\r\nError: Amazon.Lambda.AmazonLambdaException: Signature expired: 20171127T214626Z is now earlier than 20171127T215544Z (20171127T220044Z - 5 min.) ---> Amazon.Runtime.Internal.HttpErrorResponseException: Exception of type 'Amazon.Runtime.Internal.HttpErrorResponseException' was thrown.\r\nat Amazon.Runtime.HttpWebRequestMessage.<GetResponseAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.HttpHandler`1.<InvokeAsync>d__9`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.Unmarshaller.<InvokeAsync>d__3`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.ErrorHandler.<InvokeAsync>d__5`1.MoveNext()\r\n--- End of inner exception stack trace ---\r\nat Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.HandleException(IExecutionContext executionContext, HttpErrorResponseException exception)\r\nat Amazon.Runtime.Internal.ErrorHandler.ProcessException(IExecutionContext executionContext, Exception exception)\r\nat Amazon.Runtime.Internal.ErrorHandler.<InvokeAsync>d__5`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.CredentialsRetriever.<InvokeAsync>d__7`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.RetryHandler.<InvokeAsync>d__10`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat Amazon.Runtime.Internal.RetryHandler.<InvokeAsync>d__10`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.CallbackHandler.<InvokeAsync>d__9`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.ErrorCallbackHandler.<InvokeAsync>d__5`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat Amazon.Runtime.Internal.MetricsHandler.<InvokeAsync>d__1`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat xxx.xxx.xxx.xxx.xxx.<Method3>d__2.MoveNext() in /.../.../.../.../.../.../.../.../CodeC.cs:line xx\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat xxx.xxx.xxx.xxx.<Method2>d__4.MoveNext() in /.../.../.../.../.../.../.../CodeB.cs:line xx\r\n--- End of stack trace from previous location where exception was thrown ---\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nat xxx.xxx.xxx.xxx.<Method1>d__7.MoveNext() in /.../.../.../.../.../.../.../CodeA.cs:line xxx\r\n```\r\n\r\n## Steps to Reproduce (for bugs)\r\nHappens intermittently, so can't really provide steps to ensure it happens. On the other hand, the below code snippet is used:\r\n```\r\nusing (var client = new AmazonLambdaClient())\r\n{\r\n\tvar request = new InvokeRequest\r\n\t{\r\n\t\tFunctionName = subscriber.LambdaArn,\r\n\t\tPayload = JsonConvert.SerializeObject(@event)\r\n\t};\r\n\r\n        // This below throws the exception\r\n\tvar response  = await client.InvokeAsync(request);\r\n}\r\n```\r\n\r\n## Possible Solution\r\nManually implement retry for Lambda invocation whenever this exception occurs.\r\n\r\n## Your Environment\r\n* AWSSDK.Core version used: 3.3.18.12\r\n* Service assembly and version used: AWSSDK.Lambda 3.3.8\r\n* Operating System and version: Windows 10 (64-bit)\r\n* Visual Studio version: 2017\r\n* Targeted .NET platform: .NETCoreApp 1.0", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Bluestreak2k5": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/806", "title": "AWS C:\\Users\\{name}\\.aws\\credentials file always open", "body": "I have Visual Studio working with AWS Toolkit using an AWS Role credientials.\r\n\r\nI have a batch process that grabs credientials from a machine every hour and stores in the default location to run commands. This allows commands etc to always have a fresh set of credientials without creating an IAM user.\r\n\r\nHowever, AWS Toolkit throws a blocker in this because it keeps the file open forever as long as visual studio is open. This prevents me from writing the new credientials on a regular basis.\r\n\r\nCan you please make the toolkit load the credientials every few minutes or so instead of keeping the file open the entire time.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kapeed2091": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/803", "title": "Unity SDK support for AWS IoT", "body": "How can I connect to AWS IoT (and then publish-subscribe on topics) from Unity?\r\nDoes AWS official Unity SDK support this?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "richardgavel": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/801", "title": "Add support for ECS Container Metadata to get region", "body": "There are a number of ways to get the region automatically, all child classes of Amazon.Runtime.AWSRegion. These include an environment variable, app.config, EC2 instance profiile, etc. One that is missing is ECS Container Metadata, in the event the file defined by thge environment variable ECS_CONTAINER_METADATA_FILE is defined (see http://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-metadata.html?shortFooter=true)\r\n\r\nThis file (if the flag is turned on to generate it), includes the ContainerInstanceARN, which could be used to get the region of the EC2 instance the container is running in.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ore-boris": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/800", "title": "Amazon.Runtime.AmazonClientException: The retrieved credentials have already expired", "body": "I am running into attached exception from Amazon.Runtime.RefreshingAWSCredentials call several times a week, in clients talking to different Amazon services. \r\n\r\nMost frequently it happens in the  AWS Logger (aws-logging-dotnet). Below two attached files are from two log4net appenders, working in the same application. The appender from aws-logger-errors-2.log was actively sending log messages which successfully arrived to AWS CloudWatchLogs, and suddenly it run into credentials expired error. Last successful log record was stamped by 2017-11-19 13:39:10,161, and the exception in the attached log stamped by 11/19/2017 13:40:09, saying that credentials have expired at 11/19/2017 13:39:48.\r\n[aws-logger-errors-2.log](https://github.com/aws/aws-sdk-net/files/1486908/aws-logger-errors-2.log)\r\nAnother example is from another appender which was quite silent, and woke up at 11/20/2017 00:03:31 only to see that credentials have expired at the same time as in the prevous one 11/19/2017 13:39:48\r\n[aws-logger-errors-1.log](https://github.com/aws/aws-sdk-net/files/1486907/aws-logger-errors-1.log)\r\n\r\nI also saw this error with SNS service once:\r\n```\r\n2017-11-13 13:42:21,354 [22745] ORE.BoTrader.Bll.Logic.AutoTrader ERROR Auto trading exception during OrderFlow Monitor timer event:\r\nAmazon.Runtime.AmazonClientException: The retrieved credentials have already expired: Now = 11/13/2017 13:42:21, Credentials expiration = 11/13/2017 04:21:22\r\n   at Amazon.Runtime.RefreshingAWSCredentials.UpdateToGeneratedCredentials(CredentialsRefreshState state)\r\n   at Amazon.Runtime.RefreshingAWSCredentials.GetCredentials()\r\n   at Amazon.Runtime.Internal.CredentialsRetriever.PreInvoke(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CredentialsRetriever.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RetryHandler.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.CallbackHandler.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.ErrorCallbackHandler.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.MetricsHandler.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.Internal.RuntimePipeline.InvokeSync(IExecutionContext executionContext)\r\n   at Amazon.Runtime.AmazonServiceClient.Invoke[TRequest,TResponse](TRequest request, IMarshaller`2 marshaller, ResponseUnmarshaller unmarshaller)\r\n   at Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.Publish(PublishRequest request)\r\n   at ORE.BoTrader.Bll.Logic.AutoTrader.OnOrderFlowMonitorTimerElapsedEvent(Object source, ElapsedEventArgs e) in C:\\Users\\eddie\\ORE-GIT\\ore\\Source\\Web\\BoTrader\\BoTraderBll\\Logic\\AutoTrader.cs:line 738\r\n```\r\n\r\nIn all 3 cases service access was authorized via IAM role attached to an EC2 instance where the error occurred.\r\n\r\nI expect credentials to be updated transparently, as per documentation: \r\n[Granting Access Using an IAM Role](https://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-hosm.html#net-dg-roles)\r\n> If the client doesn't find credentials in App.config, it retrieves temporary credentials that have the same permissions as those associated with the IAM role from instance metadata. The credentials are stored by the constructor on behalf of the application software, and are used to make calls to AWS from that client object. Although the credentials are temporary and eventually expire, the SDK client periodically refreshes them so that they continue to enable access. **This periodic refresh is completely transparent to the application software.**\r\n\r\nI see that the issue is gone after restarting the module which uses AWS client, so that the client performs fresh connection to the service. After restart it may happen again after several hours or several days or weeks of normal operation.\r\n\r\nI believe this issue is not the same as [#393](https://github.com/aws/aws-sdk-net/issues/393), as the machine clock was NTP synchronized when the issue was observed.\r\n\r\nI am not aware of specific chain of events that lead to this issue, so cannot provide clear steps to reproduce the issue at the moment.\r\n\r\nIn the case of AWS Logger the issue is breaking monitoring cycle for local queue of the log records to be sent to AWS and as a result logging to AWS stops. \r\n\r\nIf the service is used in our own code - we can catch the exception and reconnect to the service.\r\n\r\nIn the logs for AWS Logger, we were using latest version of AWSSDK.Core (3.3.19.0). The SNS example is for AWSSDK.Core V3.3.17.9 All involved services are running on Windows Server 2016, and use .NET V4.6.2.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adauti": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/798", "title": "S3FileInfo.Key property should exist", "body": "When loading files to S3 using the APIs you have to generally specify the BucketName in a property and the Key in a separate property.  However, when you are getting information by using the S3FileInfo, you cannot go the other way and get the Key value by specifying for example S3FileInfo.Key.\r\n\r\nApologies if this exists under another property that i may have missed.\r\n\r\nCurrently, to get the Key Value of an S3 object, i have to do something like S3FileInfo.FullName.Replace(\"s3:\\\",\"\").Replace()...etc etc.  I think you get the point.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danielmarbach": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/796", "title": "SQS: Sent messages might not get picked up by ReceiveMessages on .NET Core running on Linux", "body": "Under .NET Core with Linux messages sent by the SQS client might not be picked up by ReceiveMessages  even though the messages are available in the queue, when the following factors are given:\r\n\r\n- Multiple clients are used in the same application domain\r\n- ReceiveMessages is done concurrently\r\n\r\n## Expected Behavior\r\n\r\nMessages sent to the queue should be picked up by the ReceiveMessages call as soon as possible. Execute https://github.com/danielmarbach/SqsLinuxRepro under .NET Core in Windows and the following should happen:\r\n\r\n```\r\nPS C:\\p\\SqsLinuxRepro\\SqsRepro> dotnet run\r\n16/11/2017 10:43:35 (0) - Receiving\r\n16/11/2017 10:43:35 (1) - Receiving\r\n16/11/2017 10:43:37 (Main) - Sending attempt 1 1\r\n16/11/2017 10:43:37 (1) - Received 1 / OK / 884\r\n16/11/2017 10:43:37 (1) - deleting 16/11/2017 10:43:37 attempt 1 / 1\r\n16/11/2017 10:43:37 (1) - deleted 16/11/2017 10:43:37 attempt 1 / 1\r\n16/11/2017 10:43:37 (1) - Receiving\r\n16/11/2017 10:43:38 (Main) - Sent attempt 1 1\r\n16/11/2017 10:43:45 (0) - cancelled\r\n16/11/2017 10:43:45 (1) - cancelled\r\n16/11/2017 10:43:45 (0) - Receiving\r\n16/11/2017 10:43:45 (1) - Receiving\r\n16/11/2017 10:43:47 (Main) - Sending attempt 2 1\r\n16/11/2017 10:43:47 (0) - Received 1 / OK / 884\r\n16/11/2017 10:43:47 (0) - deleting 16/11/2017 10:43:47 attempt 2 / 1\r\n16/11/2017 10:43:47 (0) - deleted 16/11/2017 10:43:47 attempt 2 / 1\r\n16/11/2017 10:43:47 (0) - Receiving\r\n16/11/2017 10:43:48 (Main) - Sent attempt 2 1\r\n16/11/2017 10:43:55 (0) - cancelled\r\n16/11/2017 10:43:55 (1) - cancelled\r\n16/11/2017 10:43:55 (0) - Receiving\r\n16/11/2017 10:43:55 (1) - Receiving\r\n16/11/2017 10:43:57 (Main) - Sending attempt 3 1\r\n16/11/2017 10:43:57 (1) - Received 1 / OK / 884\r\n16/11/2017 10:43:57 (1) - deleting 16/11/2017 10:43:57 attempt 3 / 1\r\n16/11/2017 10:43:58 (1) - deleted 16/11/2017 10:43:57 attempt 3 / 1\r\n16/11/2017 10:43:58 (1) - Receiving\r\n16/11/2017 10:43:58 (Main) - Sent attempt 3 1\r\n16/11/2017 10:44:05 (1) - cancelled\r\n16/11/2017 10:44:05 (0) - cancelled\r\n16/11/2017 10:44:05 (0) - Receiving\r\n16/11/2017 10:44:05 (1) - Receiving\r\n16/11/2017 10:44:07 (Main) - Sending attempt 4 1\r\n16/11/2017 10:44:08 (1) - Received 1 / OK / 884\r\n16/11/2017 10:44:08 (1) - deleting 16/11/2017 10:44:07 attempt 4 / 1\r\n16/11/2017 10:44:08 (1) - deleted 16/11/2017 10:44:07 attempt 4 / 1\r\n16/11/2017 10:44:08 (1) - Receiving\r\n16/11/2017 10:44:09 (Main) - Sent attempt 4 1\r\n16/11/2017 10:44:15 (1) - cancelled\r\n16/11/2017 10:44:15 (0) - cancelled\r\n```\r\n\r\nResult: all messages consumed\r\n\r\n![image](https://user-images.githubusercontent.com/174258/32887285-ae3de98a-cac3-11e7-9bde-c52d5f329d87.png)\r\n\r\n\r\n## Current Behavior\r\n\r\nOne or multiple messages are in flight during the execution time but never picked up the the SDK and propagated to the user code, more information see Steps to reproduce.\r\n\r\n## Possible Solution\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\nExecute https://github.com/danielmarbach/SqsLinuxRepro under .NET Core on Linux with a concurrency higher than 2 and observe a similar pattern to:\r\n\r\n```\r\n11/16/17 10:37:06 AM (0) - Receiving\r\n11/16/17 10:37:06 AM (1) - Receiving\r\n11/16/17 10:37:08 AM (Main) - Sending attempt 1 1\r\n11/16/17 10:37:08 AM (0) - Received 1 / OK / 885\r\n11/16/17 10:37:08 AM (0) - deleting 11/16/17 10:37:08 AM attempt 1 / 1\r\n11/16/17 10:37:08 AM (0) - deleted 11/16/17 10:37:08 AM attempt 1 / 1\r\n11/16/17 10:37:08 AM (0) - Receiving\r\n11/16/17 10:37:09 AM (Main) - Sent attempt 1 1\r\n11/16/17 10:37:16 AM (1) - cancelled\r\n11/16/17 10:37:16 AM (0) - cancelled\r\n11/16/17 10:37:16 AM (0) - Receiving\r\n11/16/17 10:37:16 AM (1) - Receiving\r\n11/16/17 10:37:18 AM (Main) - Sending attempt 2 1\r\n11/16/17 10:37:19 AM (Main) - Sent attempt 2 1\r\n11/16/17 10:37:26 AM (0) - cancelled\r\n11/16/17 10:37:26 AM (1) - cancelled\r\n11/16/17 10:37:26 AM (0) - Receiving\r\n11/16/17 10:37:26 AM (1) - Receiving\r\n11/16/17 10:37:28 AM (Main) - Sending attempt 3 1\r\n11/16/17 10:37:28 AM (1) - Received 1 / OK / 885\r\n11/16/17 10:37:28 AM (1) - deleting 11/16/17 10:37:28 AM attempt 3 / 1\r\n11/16/17 10:37:28 AM (1) - deleted 11/16/17 10:37:28 AM attempt 3 / 1\r\n11/16/17 10:37:28 AM (1) - Receiving\r\n11/16/17 10:37:29 AM (Main) - Sent attempt 3 1\r\n11/16/17 10:37:36 AM (0) - cancelled\r\n11/16/17 10:37:36 AM (1) - cancelled\r\n11/16/17 10:37:36 AM (0) - Receiving\r\n11/16/17 10:37:36 AM (1) - Receiving\r\n11/16/17 10:37:38 AM (Main) - Sending attempt 4 1\r\n11/16/17 10:37:38 AM (1) - Received 1 / OK / 885\r\n11/16/17 10:37:38 AM (1) - deleting 11/16/17 10:37:38 AM attempt 4 / 1\r\n11/16/17 10:37:38 AM (1) - deleted 11/16/17 10:37:38 AM attempt 4 / 1\r\n11/16/17 10:37:38 AM (1) - Receiving\r\n11/16/17 10:37:39 AM (Main) - Sent attempt 4 1\r\n11/16/17 10:37:46 AM (0) - cancelled\r\n11/16/17 10:37:46 AM (1) - cancelled\r\n```\r\n\r\nAs we can see sent attempt 2 was never received although the receive time is high enough in the repro to actually pick it up. \r\n\r\n![image](https://user-images.githubusercontent.com/174258/32887056-f0caea10-cac2-11e7-96c6-4842d05e1c1d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/174258/32887098-04124f1e-cac3-11e7-81f8-39030be658bf.png)\r\n\r\nbut the queue browser shows multiple receive attempts.\r\n\r\n## Context\r\n\r\nAt Particular Software we are preparing a Release candidate of a .NET Core SQS transport for NServiceBus and we detected this on our CI environment. Multiple of our tests failed under .NET Core under Linux only. This is currently a blocker for us.\r\n\r\n## Your Environment\r\n\r\n* AWSSDK.Core version used: 3.3.19\r\n* Service assembly and version used: 3.3.3.2\r\n* Operating System and version: Windows 10 lates and Ubuntu 16.04\r\n* Visual Studio version: 2017.5.4\r\n* Targeted .NET platform: .NET Core 2.0.2 and 2.0.3\r\n\r\n# .NET Core Info\r\n<!--- For .NET Core issues, please provide the following -->\r\n* .NET Core version used for development: \r\n* .NET Core version installed in the environment where application runs: \r\n* Output of `dotnet --info`: \r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n```\r\n.NET Command Line Tools (2.0.3)\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  eb1d5ee318\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.3/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n* Contents of project.json/project.csproj: \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n    <LangVersion>7.1</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"AWSSDK.SQS\" Version=\"3.3.3.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/819", "title": "Allow retry delay cancellation", "body": "## Description\r\nUsing the cancelation token to allow the Task.Delay to be canceled\r\n\r\n## Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open [issue][issues], please link to the issue here -->\r\n\r\n## Testing\r\n<!--- Please describe in detail how you tested your changes -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Screenshots (if appropriate)\r\n\r\n## Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project\r\n- [ ] My change requires a change to the documentation\r\n- [ ] I have updated the documentation accordingly\r\n- [ ] I have read the **README** document\r\n- [ ] I have added tests to cover my changes\r\n- [ ] All new and existing tests passed\r\n\r\n## License\r\n<!--- The SDK is released under the [Apache 2.0 license][license], so any code you submit will be released under that license -->\r\n<!--- For substantial contributions, we may ask you to sign a [Contributor License Agreement (CLA)][cla] -->\r\n<!--- Put an `x` in the below box if you confirm that this request can be released under the Apache 2 license -->\r\n- [X] I confirm that this pull request can be released under the Apache 2 license\r\n\r\n[issues]: https://github.com/aws/aws-sdk-net/issues\r\n[license]: http://aws.amazon.com/apache2.0/\r\n[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement", "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/697", "title": "Request marshaling uses singleton like response marshaling", "body": "Request marshaling is stateless by design and can be turned into a singleton like the response marshaling.\r\n\r\n## Description\r\n\r\nFor educational purposes I was trying to understand the inner working of the SDK. I realized that the response marshalers are singletons. I was wondering why the request marshalers haven't been made singletons as well. I analyzed a few and came to the conclusion all of those can be made singletons by design since the state they gatter is per method invication. So I went ahead and changed the generator to turn the request marshalers into singletons as well. This will save an allocation per method call on the SDK for each service.\r\n\r\nFurthermore while testing out my changes I got tired of waiting for the generator so I implemented the generation calls on the driver with a Parallel.ForEach wich drastically reduces the generation time.\r\n\r\n## Motivation and Context\r\n* Less allocations on the hot path (one less object allocation per API call)\r\n* More speed while generating the SDK types\r\n\r\n## Testing\r\n* Run the generator and compile the SDK (that's all I did)\r\n\r\n## Screenshots (if appropriate)\r\n\r\n## Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project\r\n- [ ] My change requires a change to the documentation\r\n- [ ] I have updated the documentation accordingly\r\n- [ ] I have read the **README** document\r\n- [ ] I have added tests to cover my changes\r\n- [ ] All new and existing tests passed\r\n\r\n## License\r\n<!--- The SDK is released under the [Apache 2.0 license][license], so any code you submit will be released under that license -->\r\n<!--- For substantial contributions, we may ask you to sign a [Contributor License Agreement (CLA)][cla] -->\r\n<!--- Put an `x` in the below box if you confirm that this request can be released under the Apache 2 license -->\r\n- [X] I confirm that this pull request can be released under the Apache 2 license\r\n\r\n[issues]: https://github.com/aws/aws-sdk-net/issues\r\n[license]: http://aws.amazon.com/apache2.0/\r\n[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ahrensd": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/790", "title": "Unable to install Toolkit - due to inability to access Certificate  ", "body": "Can't install the toolkit. \r\nI'm behind a corporate firewall and have to use a separate Admin credentials which has no internet access, is there a offline installer? (Windows 10 system)\r\n\r\nHave attempted the installed on another system (Windows 7) with Admin rights and access to the internet. It worked fine. The problem appears to be with authenticating the certificate. Anyway around this?\r\n\r\nBoth have updated Visual Studio 2017 Enterprise.\r\n\r\nTail of the log file:-\r\n`8/11/2017 9:33:22 AM - Certificate is invalid: AWSToolkitPackage.vsix\r\n8/11/2017 9:34:02 AM - Skipping Install of '12ed248b-6d4a-47eb-be9e-8eabea0ff119,version=1.12.2.1' since downloading it failed.\r\n8/11/2017 9:34:02 AM - Skipping cache of package '12ed248b-6d4a-47eb-be9e-8eabea0ff119,version=1.12.2.1' since the package or a parent package had a vital failure.\r\n8/11/2017 9:34:02 AM - Skipping cache of package 'Component.12ed248b-6d4a-47eb-be9e-8eabea0ff119,version=1.12.2.1' since the package or a parent package had a vital failure.\r\n8/11/2017 9:34:45 AM - Install Error : Microsoft.VisualStudio.Setup.PackageFailureException: Package '12ed248b-6d4a-47eb-be9e-8eabea0ff119' failed to download\r\n   at Microsoft.VisualStudio.Setup.InstallOperation.Run(CancellationToken token)\r\n   at Microsoft.VisualStudio.Setup.Engine.RunOperation(InstallOperation installOperation, CancellationToken token, ExecuteAction action, ITelemetryOperation telemetryOperation)\r\n   at Microsoft.VisualStudio.Setup.Engine.RunCoreOperation(InstallOperation coreOperation, ExecuteAction action, ITelemetryOperation telemetryOperation, CancellationToken token)\r\n   at Microsoft.VisualStudio.Setup.Engine.Install(Product product, String destination, CancellationToken token)\r\n   at Microsoft.VisualStudio.ExtensionManager.ExtensionEngineImpl.PerformSetupEngineInstall(InstallableExtensionImpl extension, Boolean installPerMachine, Boolean isPackComponent, IDictionary`2 extensionsInstalledSoFar, List`1 extensionsUninstalledSoFar, IInstalledExtensionList modifiedInstalledExtensionsList, IProgress`1 progress, InstallFlags installFlags, AsyncOperation asyncOp, Version targetedVsVersion, IInstalledExtension& newExtension)\r\n   at Microsoft.VisualStudio.ExtensionManager.ExtensionEngineImpl.InstallInternal(InstallableExtensionImpl extension, InstallFlags installFlags, IDictionary`2 extensionsInstalledSoFar, List`1 extensionsUninstalledSoFar, IInstalledExtensionList modifiedInstalledExtensionsList, AsyncOperation asyncOp, IProgress`1 progress, Version targetedVsVersion)\r\n   at Microsoft.VisualStudio.ExtensionManager.ExtensionEngineImpl.BeginInstall(IInstallableExtension installableExtension, InstallFlags installFlags, AsyncOperation asyncOp, Version targetedVsVersion)\r\n   at Microsoft.VisualStudio.ExtensionManager.ExtensionEngineImpl.InstallWorker(IInstallableExtension extension, InstallFlags installFlags, AsyncOperation asyncOp)`\r\n\r\nHave determined that the problem is with the certificate, so include the snippet of log near the beginning of the log file:-\r\n`8/11/2017 9:31:40 AM - Signature Details...\r\n8/11/2017 9:31:40 AM - \tExtension is signed with an invalid certificate\r\n8/11/2017 9:31:40 AM - \t\t(PartialChain)      : A certificate chain could not be built to a trusted root authority.\r\n8/11/2017 9:31:40 AM - \t\t(RevocationStatusUnknown): The revocation function was unable to check revocation for the certificate.\r\n8/11/2017 9:31:40 AM - \t\t(OfflineRevocation) : The revocation function was unable to check revocation because the revocation server was offline.` \r\n\r\nWould be good if you had the option to override the certificate check?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jefhai": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/789", "title": "Still having issues building with reference to Amazon APIs?", "body": "We are still unable to build our projects after thinking we had it fixed. Is there anything you can think of? Does there appear to be a problem on your side? Can you explain how .Net Standard/.Net Framework/.Net Core works with respect to AWS SDKs. Our biggest recent change in the past months has been the addition of Entity Core Framework 1.1.3. Are you aware of any incompatibilities with that package?\r\n\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0010: Could not find assembly 'System.Net.Http.Primitives, Version=1.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' referenced by 'AWSSDK.S3'.\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0010: Could not find assembly 'System.Net.Http.Primitives, Version=1.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' referenced by 'AWSSDK.S3'.\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0010: Could not find assembly 'System.Net.Http.Primitives, Version=1.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' referenced by 'AWSSDK.S3'.\r\n1>  Processing application code\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0010: Could not find assembly 'System.Net.Http.Primitives, Version=1.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' referenced by 'AWSSDK.S3'.\r\n1>C:\\Users\\jefhai\\Documents\\git\\StorySlab-Windows\\OurApp\\Properties\\Default.rd.xml(25): warning : ILTransform : warning ILT0027: Namespace 'System.Net.IWebProxy' within '' could not be found.\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 142 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0005: Type 'System.Net.IWebProxy' was not included in compilation, but was referenced in method 'AmazonS3HttpUtil.GetProxyIfAvailableAndConfigured(IClientConfig)'. There may have been a missing assembly.\r\n1>C:\\Users\\jefhai\\.nuget\\packages\\microsoft.net.native.compiler\\1.7.1\\tools\\Microsoft.NetNative.targets(697,5): warning : ILTransform : warning ILT0003: Method 'AmazonS3HttpUtil.GetHttpClient(IClientConfig)' will always throw an exception due to the missing method 'HttpClientHandler.set_Proxy(IWebProxy)'. There may have been a missing assembly.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>  Generating fixups for native code", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "agileraymond": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/787", "title": "Update DynamoDBContext api/documentation/examples to include Async methods", "body": "Currently there is no code examples around DynamoDBContext's Async methods. Our team is working with .NET Core 2 and it's been difficult to find examples/documentation on how to use Async methods.\r\n\r\nAfter trying different things, we got ScanAsync method working. \r\n\r\n```\r\npublic ProjectController(IAmazonDynamoDB dynamoDbClient)\r\n        {\r\n            _dynamoDbClient = dynamoDbClient;            \r\n        }        \r\n        public async Task<IActionResult> Index()\r\n        {\r\n            var context = new DynamoDBContext(_dynamoDbClient);\r\n            var conditions = new List<ScanCondition>();\r\n            var project = context.ScanAsync<ProjectModel>(conditions);\r\n\r\n            while (!project.IsDone)\r\n            {\r\n                var result = await project.GetNextSetAsync();\r\n// do something with result\r\n            }            \r\n            return View();\r\n        }\r\n```\r\nOur team would like to provide examples or update documentation but need to know where to add these examples. Thanks.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/787/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nikitozz": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/786", "title": "Make AmazonKeyManagementServiceConfig.UserAgent read/write", "body": "`AmazonKeyManagementServiceConfig.UserAgent` is a read-only property. This is not very convenient in some scenarios.\r\n\r\nOne of the main advantages of AWS Key Management Service (KMS) is a detailed audit of every request made to the service. When multiple of my services make requests to the same KMS endpoints, as a customer I want to be able to distinguish services in the audit logs. Unfortunately, I won't be able to do that.\r\n\r\nSince `AmazonKeyManagementServiceConfig.UserAgent` is read-only, I'm not able to set a custom string there, and UserAgent for all requests from all my services that use .NET SDK will be the same.\r\n\r\n## Expected Behavior\r\n`AmazonKeyManagementServiceConfig.UserAgent`  should be read-write property.\r\n\r\n## Current Behavior\r\n`AmazonKeyManagementServiceConfig.UserAgent` is a read-only property\r\n\r\n## Possible Solution\r\nChange the code in `AmazonKeyManagementServiceConfig` to\r\n```\r\n        public override string UserAgent\r\n        {\r\n            get\r\n            {\r\n                return _userAgent;\r\n            }\r\n            set\r\n            {\r\n                _userAgent = value;\r\n            }\r\n        }\r\n```\r\n\r\nPlease, let me know if a proposed solution looks good and I can prepare a PR.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rjezek": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/785", "title": "Session Credentials do not work", "body": "I have valid temporary credentials from STS in my credentials file and everything from the CLI works just fine.  When trying to run code from the SDK it says my token is invalid.\r\n\r\nI would like to see the SDK support temporary credentials like the CLI does.  \r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mzd555": {"issues": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/779", "title": "VS 2017 while attempt to publish using AWS 2017 toolkit seeing error", "body": "... invoking 'dotnet publish', .....\r\n......\r\n......\r\n\r\nError: Project is referencing NETStandard.Library version 1.6.1. Max version supported by netcoreapp1.0 is 1.6.0.\r\nError: NETStandard.Library 1.6.1 is used for target framework netcoreapp1.1.\r\nError: Check the following dependencies for versions compatible with netcoreapp1.0:\r\nError: Amazon.Lambda.Serialization.Json : 1.1.0\r\nError: MySqlConnector : 0.29.1", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "normj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/c9a4ce4775ee6a11a718da7f8be5bdb9531c9c17", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/950d2abb7a93cbc971da06415706ea7ee502f35f", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/d7c38f5ba24a712504e5b995d78dedd0914fb9bd", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/7c1d1dc6e600db4c8fd862375fd77cf56df2f973", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/cfa0264693a853432d66f9748bb75316fa23a3db", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/ebdc95bc8f9336420b7fd998bfa9f24ed172780d", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/35566fca322f33a24aeeb46521a2f77796c02d39", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/161498d67069b4047c21b735b764f0647290fe84", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/7c020f661ee4fa8450fd098dd1ee35ec10b4458d", "message": "Commit version number update changes"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/14956564894f98a1862782287d4d2d0268df2d49", "message": "Commit version number update changes"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11782532", "body": "Thanks John for the fix!  I have incorporated the changes to our internal codebase and will go out with our next code push.  \n\nThanks again for taking the time and effort for sending us the fix.\nNorm\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11782532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11969141", "body": "Thanks for the updated.  I updated our internal source with your changes and should go out with our next release.  Thanks again for the pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11969141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/15675602", "body": "The query should just return the session items attribute and eliminate the extra get call per item.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/15675602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/15675610", "body": "This should default to false\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/15675610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sstevenkang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/ad549db82c8a32ace4eb9ff1af85f8e4d1ac40c8", "message": "CreateTrainingJob and CreateEndpointConfig now supports KMS Key for volume encryption."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/12c0e03fdbc12e35dcbebd69ae6f9882cc72e216", "message": "Documentation updates for EC2"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/ca870a415e3c7ffca057c38846fdb685748e167f", "message": "Documentation updates for autoscaling-plans"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/c03efba7711fe1c79fc0a540bc5acd1206e61fc7", "message": "Amazon Workspaces is now available in sa-east-1"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/7e565dd71cd8c6f43ae0eb54973601f47ca9e5b6", "message": "AWS Auto Scaling enables you to quickly discover all of the scalable resources underlying your application and set up application scaling in minutes using built-in scaling recommendations."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/8139deee1465b85af7e3988cd3c24fc2412ab850", "message": "With this release you can now integrate RDS DB instances with CloudWatch Logs. We have added parameters to the operations for creating and modifying DB instances (for example CreateDBInstance) to allow you to take advantage of this capability through the CLI and API. Once you enable this feature, a stream of log events will publish to CloudWatch Logs for each log type you enable."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/4ffa29772bc98b3bc83f9b2f00b524ae2011bf9c", "message": "Application Auto Scaling is adding support for Target Tracking Scaling for ECS services."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/a388b143d626e189ea2b59d914a2df30ad43c98c", "message": "Support for creating Lambda Functions using 'dotnetcore2.0' and 'go1.x'."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/652744d0436521e5adaaab079505581292c92bea", "message": "Support is added to generate ETL scripts in Scala which can now be run by  AWS Glue ETL jobs. In addition, the trigger API now supports firing when any conditions are met (in addition to all conditions). Also, jobs can be triggered based on a \"failed\" or \"stopped\" job run (in addition to a \"succeeded\" job run)."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/4087da3ffdc3cbf38e5b09e31151a0bdd2ff66f2", "message": "Read Replicas for Amazon RDS for MySQL, MariaDB, and PostgreSQL now support Multi-AZ deployments.Amazon RDS Read Replicas enable you to create one or more read-only copies of your database instance within the same AWS Region or in a different AWS Region. Updates made to the source database are asynchronously copied to the Read Replicas. In addition to providing scalability for read-heavy workloads, you can choose to promote a Read Replica to become standalone a DB instance when needed.Amazon RDS Multi-AZ Deployments provide enhanced availability for database instances within a single AWS Region. With Multi-AZ, your data is synchronously replicated to a standby in a different Availability Zone (AZ). In case of an infrastructure failure, Amazon RDS performs an automatic failover to the standby, minimizing disruption to your applications.You can now combine Read Replicas with Multi-AZ as part of a disaster recovery strategy for your production databases. A well-designed and tested plan is critical for maintaining business continuity after a disaster. Since Read Replicas can also be created in different regions than the source database, your Read Replica can be promoted to become the new production database in case of a regional disruption.You can also combine Read Replicas with Multi-AZ for your database engine upgrade process. You can create a Read Replica of your production database instance and upgrade it to a new database engine version. When the upgrade is complete, you can stop applications, promote the Read Replica to a standalone database instance and switch over your applications. Since the database instance is already a Multi-AZ deployment, no additional steps are needed.For more information, see the Amazon RDS User Guide."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/c36690b3680a0086b2f0c73bb4ea4cf04bb0c910", "message": "Added OperationNotPermittedException to indicate that you cannot create a load balancer while deleting the Elastic Load Balancing service-linked role."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/1b3b8e1ad05abe52b0fa5aa3a773794a140b1cc2", "message": "Updates documentation for the HierarchyLevelLimitExceededException error."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/ce66268947b7243e579d120747be48a5b80d26f7", "message": "Added OperationNotPermittedException to indicate that you cannot create a classic load balancer while deleting the Elastic Load Balancing service-linked role."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/f8b28de7c914eba2a2cb12b18a20c5b49b5d5f6b", "message": "Documentation updates for AWS KMS"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/8703e8ced99971e3fbfdd0816eba599621a335a2", "message": "On October 24 we introduced AWS Directory Service for Microsoft Active Directory (Standard Edition), also known as AWS Microsoft AD (Standard Edition), which is a managed Microsoft Active Directory (AD) that is optimized for small and midsize businesses (SMBs). With this SDK release, you can now create an AWS Microsoft AD directory using API. This enables you to run typical SMB workloads using a cost-effective, highly available, and managed Microsoft AD in the AWS Cloud."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/e50b50f5f2c2e339f4039132fb0cf3a55143cf9a", "message": "This release adds an exception to the CreateTrafficPolicyVersion API operation."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/68a44ae35ac67567d0d6be2166d552626ff1b493", "message": "The AWS CodeDeploy API was updated to support DeleteGitHubAccountToken, a new method that deletes a GitHub account connection."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/872cce0d92148b64f53f3b5997e74f7a6ed49eef", "message": "Documentation updates for AWS Application Discovery Service."}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/eba79f82b58464eec6e6b5dbf82d79151074ce2f", "message": "Documentation updates for ssm"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/commits/b3b70bdf8fa05bf59e1ec243e3cd8b745defc721", "message": "Documentation updates for snowball"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/20562001", "body": "fix for https://github.com/aws/aws-sdk-net/issues/506", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/20562001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "devodo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/807", "title": "Include WebExceptionStatus.Timeout in statuses to retry on", "body": "## Description\r\nThis change is to add WebExceptionStatus.Timeout to the collection of WebException statuses in the DefaultRetryPolicy so that it will retry on HTTP timeouts.\r\n\r\n## Motivation and Context\r\nWe have had an ongoing issue with Dynamodb WebException timeouts. On further analysis we have determined that the cause of the problem is the SDK is not retrying requests that timeout regardless of the MaxErrorRetry value configured.\r\n\r\n## Testing\r\n- Unit tests have been added to RetryHandlerTests.cs in this pull request\r\n- Further testing has been done by executing a test console app that queries AWS Dynamodb endpoints via a Fiddler proxy. The Fiddler proxy was configured to add a delay to certain requests to induce HTTP timeouts. Analysis of the AWS log output showed that the current Dynamodb client fails to retry on HTTP timeouts but does correctly after applying this pull request.\r\n\r\n## Types of changes\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n- [x] My code follows the code style of this project\r\n- [ ] My change requires a change to the documentation\r\n- [ ] I have updated the documentation accordingly\r\n- [x] I have read the **README** document\r\n- [x] I have added tests to cover my changes\r\n- [x] All new and existing tests passed\r\n\r\n## License\r\n- [x] I confirm that this pull request can be released under the Apache 2 license\r\n\r\n[issues]: https://github.com/aws/aws-sdk-net/issues\r\n[license]: http://aws.amazon.com/apache2.0/\r\n[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Singh400": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/765", "title": "Logging out a malformed service response", "body": "Related to https://github.com/aws/aws-sdk-net/issues/755.\r\n\r\nWhen a service returns a malformed error response we now log out the raw response as well as the request id.\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\nAs a part of the investigation and discovery process we now log out malformed service responses.\r\n\r\n## Motivation and Context\r\nTo see what the malformed service response is.\r\n\r\n## Testing\r\nNA\r\n\r\n## Screenshots (if appropriate)\r\nNA\r\n\r\n## Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project\r\n- [ ] My change requires a change to the documentation\r\n- [ ] I have updated the documentation accordingly\r\n- [ ] I have read the **README** document\r\n- [ ] I have added tests to cover my changes\r\n- [ ] All new and existing tests passed\r\n\r\n## License\r\n<!--- The SDK is released under the [Apache 2.0 license][license], so any code you submit will be released under that license -->\r\n<!--- For substantial contributions, we may ask you to sign a [Contributor License Agreement (CLA)][cla] -->\r\n<!--- Put an `x` in the below box if you confirm that this request can be released under the Apache 2 license -->\r\n- [x] I confirm that this pull request can be released under the Apache 2 license\r\n\r\n[issues]: https://github.com/aws/aws-sdk-net/issues\r\n[license]: http://aws.amazon.com/apache2.0/\r\n[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/22352888", "body": "Something that I forgot to mention in the commit message was that simply requesting the `FifoQueue` or `ContentBasedDeduplication` attributes in this test would cause the test to fail with a `BadRequest` being returned. Hence, why `ALL` attributes are requested.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/22352888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119474704", "body": "Tackled in a8686a9", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119474704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479146", "body": "I wouldn't want to null check this value if I was consuming the API. So I've made it returned false where the value is null. See 0e2b3b0.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479222", "body": "Thanks, good idea. See 0e2b3b0.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479289", "body": "Thanks, good idea. See 0e2b3b0.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479600", "body": "Tackled in 0e2b3b0.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119479600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119729693", "body": "Ah, I understand where you are coming from. I have made the changes in c30d5bb :)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119729693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119729924", "body": "See c30d5bb.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119729924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119733088", "body": "Ah! My bad. I completely missed that. Thanks for pointing that out. Rectified in\t816b607.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119733088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "njstoffel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/764", "title": "Adds a \"/\" to request URI if required", "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\nThis change adds a check when composing a request URL and includes an intervening \"/\" between the base URL and resource path if there is not one included in either of those values already.\r\n\r\n## Motivation and Context\r\nThis change is a fix for a bug that arises when an S3 request has a ServiceURL containing a subdirectory specified,  ForcePathStyle set to true, and v4 signing enabled. \r\n\r\nThe CanonicalResourcePath is created for the AWS4Signer  by combining the ServiceURL with the ResourcePath (the BucketName and the Key) using CanonicalizeResourcePath at AWSSDKUtils.cs:282. Here it is assumed that there is no trailing  \"/\" in the ServiceURL or leading \"/\" in the BucketName/ResourcePath as one is placed in between them during concatenation. \r\n\r\nWhen the same request is composing the url against which the request will be made, these same values (ServiceURL and ResourcePath beginning with BucketName) are combined at AmazonServiceClient.cs:505. Here it is assumed that an intervening \"/\" is already present, as the values are concatenated without a \"/\".\r\n\r\nThis results in either the CanonicalResoucePath being incorrect by having an extra \"/\" or the request URL being incorrect by lacking the \"/\" between the subdirectory of the ServiceURL and the beginning of the BucketName, depending on whether or not the \"/\" is included when these values are assigned.\r\n\r\n## Testing\r\nPerform a request through an AmazonS3Client with configuration values formatted like the following:\r\n\r\nClient:\r\nServiceURL = \"example.com/sub/directory\"\r\nForcePathStyle = true\r\n(in AWSConfig) useSignatureVersion4 = true\r\n\r\nRequest:\r\nBucketName = \"bucket\"\r\nKey = \"resource/path/filename.ext\"\r\n\r\n## Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project\r\n- [ ] My change requires a change to the documentation\r\n- [ ] I have updated the documentation accordingly\r\n- [x] I have read the **README** document\r\n- [ ] I have added tests to cover my changes\r\n- [x] All new and existing tests passed\r\n\r\n\r\n## License\r\n<!--- The SDK is released under the [Apache 2.0 license][license], so any code you submit will be released under that license -->\r\n<!--- For substantial contributions, we may ask you to sign a [Contributor License Agreement (CLA)][cla] -->\r\n<!--- Put an `x` in the below box if you confirm that this request can be released under the Apache 2 license -->\r\n- [x] I confirm that this pull request can be released under the Apache 2 license\r\n\r\n[issues]: https://github.com/aws/aws-sdk-net/issues\r\n[license]: http://aws.amazon.com/apache2.0/\r\n[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scrappydog": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/6074695", "body": "My specific usecase was the desire to use a Guid for a hashkey...  I would be happy to provide sample code if you want to see it in action...\n\nCheers\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/6074695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7072882", "body": "Where is a good place for me to post/send a complete working test\ncase/sample?\n\nOn Tue, Jul 17, 2012 at 7:10 PM, PavelSafronov <\nreply@reply.github.com\n\n> wrote:\n> \n> Can you please post a sample usage of this fix? A class definition, the\n> converter you are using, and usage of the context object with sample data.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomment-7054170\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7072882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7077476", "body": "I have a sample application ready for you...\n\nWhat is a good (non-github) email address to send it to?\n\nThanks-\n\n-Eric\n\n(eric.bowen@scrappydog.com)\n\nOn Wed, Jul 18, 2012 at 10:39 AM, PavelSafronov <\nreply@reply.github.com\n\n> wrote:\n> \n> Either on GitHub or you can just forward it to me.\n> \n> -----Original Message-----\n> From: Eric Bowen [mailto:reply@reply.github.com]\n> Sent: Wednesday, July 18, 2012 8:54 AM\n> To: Safronov, Pavel\n> Subject: Re: [aws-sdk-for-net] Enhancement: Added support for alternate\n> hash and range key datatypes (#3)\n> \n> Where is a good place for me to post/send a complete working test\n> case/sample?\n> \n> On Tue, Jul 17, 2012 at 7:10 PM, PavelSafronov < reply@reply.github.com\n> \n> > wrote:\n> > \n> > Can you please post a sample usage of this fix? A class definition,\n> > the converter you are using, and usage of the context object with sample\n> > data.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomme\n> > nt-7054170\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomment-7072882\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomment-7074226\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7077476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086725", "body": "Learn something new every day... :-)\n\nThis is a good example of the AWSSDK not being very self documenting\n(features like this are not easily discoverable...)\n\nJust my opinion...\n\nThanks!\n\nSent from my iPhone\n\nOn Jul 18, 2012, at 6:23 PM, PavelSafronov\nreply@reply.github.com\nwrote:\n\n> Thank you for the suggestion, but the problem that this requests attempts to fix is easily resolved using the existing SDK.\n> \n> The suggested code change would allow the markup of a class as follows:\n> \n> ```\n> [DynamoDBTable(\"Books\")]\n> public class Book\n> {\n>    [DynamoDBHashKey, DynamoDBProperty(typeof (GuidTypeConverter))]\n>    public Guid Id { get; set; }\n> }\n> ```\n> \n> Specifically, multiple attributes would be set on a single property. The current version of the SDK does not permit this.\n> \n> However, Guid objects can still be used as Hash and Range keys (though still not as Version), as below:\n> \n> ```\n> [DynamoDBTable(\"Books\")]\n> public class Book\n> {\n>    [DynamoDBHashKey(Converter = typeof(GuidTypeConverter))]\n>    public Guid Id { get; set; }\n> }\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomment-7086614\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PavelSafronov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7053309", "body": "Thanks for finding this. We're going to get this fix into an upcoming release of the SDK.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7053309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7054170", "body": "Can you please post a sample usage of this fix? A class definition, the converter you are using, and usage of the context object with sample data.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7054170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7074226", "body": "Either on GitHub or you can just forward it to me.\n\n-----Original Message-----\nFrom: Eric Bowen [mailto:reply@reply.github.com] \nSent: Wednesday, July 18, 2012 8:54 AM\nTo: Safronov, Pavel\nSubject: Re: [aws-sdk-for-net] Enhancement: Added support for alternate hash and range key datatypes (#3)\n\nWhere is a good place for me to post/send a complete working test case/sample?\n\nOn Tue, Jul 17, 2012 at 7:10 PM, PavelSafronov < reply@reply.github.com\n\n> wrote:\n> \n> Can you please post a sample usage of this fix? A class definition, \n> the converter you are using, and usage of the context object with sample data.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomme\n> nt-7054170\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/amazonwebservices/aws-sdk-for-net/pull/3#issuecomment-7072882\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7074226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086614", "body": "Thank you for the suggestion, but the problem that this requests attempts to fix is easily resolved using the existing SDK.\n\nThe suggested code change would allow the markup of a class as follows:\n\n```\n[DynamoDBTable(\"Books\")]\npublic class Book\n{\n    [DynamoDBHashKey, DynamoDBProperty(typeof (GuidTypeConverter))]\n    public Guid Id { get; set; }\n}\n```\n\nSpecifically, multiple attributes would be set on a single property. The current version of the SDK does not permit this.\n\nHowever, Guid objects can still be used as Hash and Range keys (though still not as Version), as below:\n\n```\n[DynamoDBTable(\"Books\")]\npublic class Book\n{\n    [DynamoDBHashKey(Converter = typeof(GuidTypeConverter))]\n    public Guid Id { get; set; }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086642", "body": "Thanks for this submission! We are working on integrating this code into the SDK and it will appear in a future release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086933", "body": "We're always looking for input like this to improve the SDK, and we'll try to address this specific issue in a future release.\nAlso, feel free to drop us a line on the [AWS Forums](https://forums.aws.amazon.com/forum.jspa?forumID=61).\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/7086933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11497156", "body": "Thanks for this fix! I will review this change and will update the pull request when/if we merge this.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11497156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/12015185", "body": "We will be adding this functionality (backward query) to the SDK and it should go out with our next release.\nOur change will be slightly different from the suggested fix, though, to more closely match other parts of the API.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/12015185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13401205", "body": "This looks very helpful. Can you provide a code sample for how this is expected to work?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13401205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13469142", "body": "Thanks for the suggestion, this change will appear in a future release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13469142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13523612", "body": "I've made the changes described in this request and committed those to our private repo, so support for MetadataType should appear in a future release. Thanks again for this pull request.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13523612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13578358", "body": "I've added Timeout and ReadWriteTimeout fields and committed those to our private repo. The changes should appear in a future release. Thanks for this pull request!\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13578358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/14395689", "body": "This can already be done with the existing SDK, simply by using the AmazonS3 interface. If you modify all your code to use the interface instead of the concrete class (AmazonS3Client), then you can implement the class CachingAmazonS3Clients that implements AmazonS3, but with caching. The new class could then use an instance of AmazonS3Client for non-cached calls.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/14395689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15736638", "body": "Thanks for the request. We will be adding this functionality to the SDK and it should go out in a future release.\nOur change will be different from the suggested fix, though, to more closely match the reset of the API.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15736638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15736661", "body": "Thanks for the request. We will be adding this functionality to the SDK and it should go out in a future release.\nOur change will be different from the suggested fix, though, to more closely match the reset of the API.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15736661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/17179764", "body": "Thanks for reporting this. I've added this feature to our backlog and we'll try to fix it in a future release.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/17179764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/115791170", "body": "Move this to line 77.\r\nInstead of constructing a lambda here, please add a new method `GetUtcNow`, and set `utcNowSource = GetUtcNow;`", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/115791170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119437325", "body": "`Boolean.TryParse` should be used here. If parsing fails or if the value is null, we return `false`.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119437325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119439438", "body": "Initially I suggested having the new properties be `bool?`, but giving it more thought I think simply `bool` is more appropriate for `FifoQueue`, since that property can only have two values: either the queue is FIFO or not.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119439438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119440346", "body": "The comment should be clear that this will be `null` if the queue is not FIFO.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119440346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119440514", "body": "Use `Boolean.TryParse` and if `TryParse` returns `false`, return `null` for this property.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119440514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119441034", "body": "To make sure the client is always disposed, wrap its use in a `using` block:\r\n```\r\nusing(var sqsClient = new AmazonSQSClient(RegionEndpoint.USEast2))\r\n{\r\n}\r\n```\r\n\r\nThis way you don't need to remember the `sqsClient.Dispose()` call and `Dispose` will be called in the event of an exception, like if an `Assert` or the queue creation fails.\r\n\r\nThe code tests FIFO queues, but for completeness this test should also create a non-FIFO queue and verify that we get expected values for the new properties.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119441034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503633", "body": "This works with the current service behavior: if the service returns *anything* for this attribute, it will be `true`, otherwise the service throws an exception.\r\nIf the service changes behavior in the future and does not throw an exception for non-FIFO queues and does return `true` and `false` values, this code will always return `true`.\r\n\r\nThe safer approach here is to do this:\r\n```\r\nbool result;\r\nif (bool.TryParse(attributeValue, out result))\r\n    return result;\r\nreturn false;\r\n```", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503929", "body": "While working with `bool?` is more complicated for the end-user, it is the more correct type to use here, since this attribute has three states: ContentBasedDeduplication can be on or off for a FIFO queue, or undefined for a non-FIFO queue. So I still think `bool?` is appropriate here. (Note that FifoQueue does not have this triple-state issue, hence why `bool` works there.)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503976", "body": "Similar comment about returning `result` from this method.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/119503976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "wmatveyenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11553953", "body": "David,\nThanks for keeping this archive of the AWS SDK for .NET, but we have decided not to include it in this repository.\n\nThanks,\nWade\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/11553953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "duckmaestro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/12017956", "body": "Great, thank you.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/12017956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jakedt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13199038", "body": "See my answer on this SO post, I believe you could be running into the same issue:\nhttp://stackoverflow.com/a/12371795/1663096\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13199038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13415365", "body": "Glad to hear it.  :)  Here's a sample of the code - adding the partial class allows you to mark it with the metadata attribute without it changing if the entity object is regenerated.  Sometimes a developer will do this to render an entity object directly to an MVC view.  From there it's a simple matter of adding the DynamoDB attributes and you can now save up to Dynamo.  Please let me know if I can provide anything further.\n\n```\n/// <summary>\n/// This class links us over to the entity object created in OldEntityFrameworkDataModel.tt \n/// (under the edmx) and adds the MetadataType attribute to tell us where to look.\n/// </summary>\n[System.ComponentModel.DataAnnotations.MetadataType(typeof(UserMetadata))]\npublic partial class User\n{\n}\n\n/// <summary>\n/// This metadata class is generally used to handle MVC attributes and DataContract attributes.\n/// Simply adding the needed DynamoDB attribute to the end of the attributes allows us to save the \n/// object directly to DynamoDB.\n/// </summary>\n[DataContract, DynamoDBTable(\"User\")]\npublic class UserMetadata\n{\n    [Required, Display(AutoGenerateField = false), DataMember(IsRequired = true), DynamoDBProperty]\n    public int UserId { get; set; }\n    [Required, DataMember(IsRequired = true), DynamoDBHashKey]\n    public string Username { get; set; }\n    [Required, Display(Name = \"Display Name\"), DataMember(IsRequired = true), DynamoDBProperty]\n    public string DisplayName { get; set; }\n    [Required, Display(AutoGenerateField = false), DataMember(IsRequired = true), DynamoDBProperty]\n    public string PasswordHash { get; set; }\n    [Required, Display(Name = \"Create Date\"), DataMember(IsRequired = true), DynamoDBProperty]\n    public DateTime CreateDate { get; set; }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/13415365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "theburningmonk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15638105", "body": "That'd be very nice, but you can already easily add your own extension methods with the help of Task.Factory.FromAsync on the begin and end method pairs yourself.\n\nOfficially supported async methods would be very welcome though ;-)\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15638105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ssteo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15742321", "body": "The current version is 1.5.16.1, would this fix be available in version 1.5.16.2? Would be great to know so I can update to official version rather than using my version as soon as it is released. Thanks\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/15742321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewdavey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/16763336", "body": "I've tried using `FromAsync` to wrap `PutObject` but it causes an exception, as seen here http://stackoverflow.com/questions/16019546/put-object-to-amazon-s3-using-net-async \n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/16763336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "smarts": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/17183440", "body": "Do you accept pull requests?\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/issues/comments/17183440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jimfl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/11159591", "body": "If you debug through the original code, you'll find that the loop just below here removes those chars from the list anyway, and so this change doesn't have the intended effect.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/11159591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "randyp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/14002650", "body": "@randyp loves this commit\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/14002650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mkpt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/15904957", "body": "It's \"added\" support. Come on Karthik.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/15904957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "repl-mathieu-fenniak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/25966156", "body": "I just noticed randomly while look at this (relatively old!) code -- there's an extra space at the beginning of this string constant.  `\" x-amzn-trace-id\"` rather than `\"x-amzn-trace-id\"`.  The unit tests only pass because they also use this string constant. :-)", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/comments/25966156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bryanroscoe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/60153596", "body": "After taking another look at this, I am not aborting the task on timeout. That cancellation is not trivial since it is not possible to pass in a cancellation token.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/60153596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "adamhathcock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/66470948", "body": "Added this\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/66470948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/66470972", "body": "Removed this\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/66470972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "karthiksaligrama": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/71796787", "body": "This will cause build to fail on BCL45 and PCL platforms. You need to have the try block above the `#if BCL35 || UNITY` code. also you can get rid of the line 700 & 701.\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/71796787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "soapyigu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111217800", "body": "Could you please insert a _logger.Error() here instead of a comment? Thank you.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111217800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111767308", "body": "Hi, why not doing below?\r\n\r\ncatch(ThreadAbortException e) {\r\n    _logger.Error(e, \"A thread abort exception occurred in Mobile Analytics Manager.\");\r\n}", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111767308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/112561920", "body": "@aphexyuri Please use _logger.Debug() instead of _logger.Error(), this will allow us to control the amount of logs, and won't affect performance.", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/112561920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aphexyuri": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111441863", "body": "Hi. The point of this PR is to handle the exception more gracefully, and in Unity-land that is to not spew an error...which tens to end up in some crash reporting system. How do you feel about using a warning?", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/111441863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/112452448", "body": "@soapyigu as mentioned in previous comment, it we log an error then it gets logged in the Unity editor as such:\r\n<img width=\"696\" alt=\"screen shot 2017-04-18 at 5 32 04 pm\" src=\"https://cloud.githubusercontent.com/assets/4657384/25233038/70317246-25ab-11e7-885d-d369b8ad7acb.png\">\r\n\r\nThis is undesirable, and it also gets reported to Unity's Performance Reporting as an exception, also undesirable.\r\n", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/112452448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/113725580", "body": "@soapyigu done \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/aws/aws-sdk-net/pulls/comments/113725580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}