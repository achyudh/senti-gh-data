{"_default": {"1": {"KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940", "body": "@slygamer \n\nDo you think it would be better if we restored the ScissorRect to its previous state after the Clear()?\n\nNote that we have a patch coming that will remove all redundant GL state settings... so you don't need to worry about that issue.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141", "body": "I agree with what you're saying... you shouldn't assume these things and XNA is designed with that in mind.  Still MonoGame is not just following XNA theory... we're replicating its behavior.\n\nIf XNA doesn't reset the ScissorRect after the clear then we shouldn't be either.  Especially since in this case it is easy for us to make it work like XNA does.\n\nI'll double check the XNA behavior...  if you're good with this being fixed then i'll submit it as part of my next pull.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542", "body": "Done... \n\nhttps://github.com/mono/MonoGame/pull/722\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cra0zy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6151", "title": "[Pipeline Tool] Restore old debug mode behavior", "body": "Notes:\r\n - If the debug flag is in .mgcb, it will be preserved, however Pipeline Tool does no longer allow of adding/editing it.\r\n\r\nCC. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6152", "title": "DXT Compression: Keep the delegate from being relocated", "body": "Related to #5138", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694", "body": "This is only temporary, the new 3.0 branch the desktop stuff is much\nmore integrated.\n\nOn 16 March 2012 15:46, Edward Rudd\nreply@reply.github.com\nwrote:\n\n> The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/commit/8b7cf8a8dd46e355807e0439336dfb7fff99cace#commitcomment-1094570\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002", "body": "There are a few missing projects. I will try to clean it up.\n\nthe opentk and the 3dSample should not be in the solution.\n\nYou will need the mono version of opentk for this to work though (I think).\n\nI've not actually managed to get this working on the Pi yet. only in a\nwindows gles emulator.\n\nOn 23 August 2012 11:46, Timothy notifications@github.com wrote:\n\n> Hey,\n> \n> I've tried to check out this branch, but it seems to be missing a lot of\n> files\n> \n> The OpenTK project in the monodevelop solution refers to\n> ../opentkpi/Source/OpenTK/OpenTK.csproj (outside the current repo?)\n> 3dSample cannot be located and neither can Samples/Draw2D/\n> \n> Am I missing something? How can I get these?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1754775.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172", "body": "I have a pi here as well, I installed wheezy too.\n\nyou can try my hacked opentk (https://github.com/dellis1972/opentk) I make\nsome hacks to get it to work properly with gles 2.0. There was one line I\ndid have to change in the Factory.cs I think.\n\nOn 23 August 2012 12:35, Timothy notifications@github.com wrote:\n\n> I tried cloning /mono/opentk but that differs from opentkpi (I'm new to\n> the git stuff)\n> If you have any compiled stuff you'd like me to test, please let me know,\n> I've got raspberry's to play with\n> \n> I'm using the armel version of wheezy, as I've heard the raspbian version\n> doesn't work?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1755034.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "DDReaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930", "body": "Javier, did you intend to add the ContentManager.cs.orig that was created as part of a merge conflict?  That file should not be added to the repos.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815", "body": "In Direct3D, the clear is not affected by the scissor rect.  In OpenGL,\nclear is affected by scissor rect.  To maintain the same behaviour as XNA,\nthe scissor rect needs to be reset before the clear.\n\nOn 28 August 2012 06:30, kaalus notifications@github.com wrote:\n\n> In XNA clears are affected by commit. Why this change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1771938.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107", "body": "I wasn't too worried about redundant state change because the scissor rect\nis already tested for that before the change is applied.\n\nXNA 4.0 takes the path of \"assume nothing: explicitly set everything you\ndepend on before drawing.\" (\nhttp://blogs.msdn.com/b/shawnhar/archive/2010/04/02/state-objects-in-xna-game-studio-4-0.aspx\n)\n\nIf some code requires a specific scissor rect, it should always set it.\n\nOn 28 August 2012 10:58, Tom Spilman notifications@github.com wrote:\n\n> @slygamer https://github.com/slygamer\n> \n> Do you think it would be better if we restored the ScissorRect to its\n> previous state after the Clear()?\n> \n> Note that we have a patch coming that will remove all redundant GL state\n> settings... so you don't need to worry about that issue.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1772940.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361", "body": "Sure thing.\n\nOn 28 August 2012 12:04, Tom Spilman notifications@github.com wrote:\n\n> I agree with what you're saying... you shouldn't assume these things and\n> XNA is designed with that in mind. Still MonoGame is not just following XNA\n> theory... we're replicating its behavior.\n> \n> If XNA doesn't reset the ScissorRect after the clear then we shouldn't be\n> either. Especially since in this case it is easy for us to make it work\n> like XNA does.\n> \n> I'll double check the XNA behavior... if you're good with this being fixed\n> then i'll submit it as part of my next pull.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1773141.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701", "body": "Ok. That would be my bad as I don't have any test cases using custom\nshaders and those aspects were missed in the discussion of the pull\nrequest. You when I get into the office I'll revisit it unless someone does\nsooner.\nOn 1 Sep 2012 01:04, \"Renaud B\u00e9dard\" notifications@github.com wrote:\n\n> I don't understand why this is necessary or a good thing.\n> First it made one of my shaders break because it has elements (sub-params)\n> and the parent/root value is never set.\n> Also it seems valid to set, for instance, a Sampler2D to null to clear its\n> texture.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/8eaf9fb0bdaf6837ac9363b1d46f2135ab27c3ea#commitcomment-1794081.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046", "body": "This commit re-added the AndroidApplication tag to the MonoGame.Framework.Android.csproj after it had been removed previously to fix linking issues with Mono for Android in Visual Studio.  Did you use the latest MonoDevelop for this edit?  I'm guessing it might have been due to the change of true and false to True and False as happened in MonoDevelop for MonoTouch as well.\n\nWe need to make sure the AndroidApplication tag doesn't get added back in.  Could you think of how it may have happened?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715", "body": "Hi Andre, it seems no one else tried this change. I'm going to take a chance, but could I be a pain and ask you to rebase, then resend this pull request? I'm hoping to release v1.6 next Friday or Saturday and think this and the colour change should be included. Let me know if that is a problem.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225", "body": "Andre, I decided to manually merge your sound cache changes. So I'm going to close this pull request. Please grab the latest code and let me know if it still works for you on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796", "body": "This merged all of mine and your BeginDraw code into master as well. Not sure you meant to. It is not really a major issue, we just have to be mindful of it with future pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230", "body": "Ah ok, sorry my misunderstanding. I forgot about the first test.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998", "body": "Please explain how they are hidden? All you need to do, indicated above is.....\ngit submodule init\ngit submodule update\n\nand it will pull down _everything_.\n\nWe made a conscious decision not to include them in the main Framework distro, because it would come to over 400MB! Not everyone has that sort of bandwidth, though we wish they did. Also most people using MonoGame already have XNA Samples/StarterKits, which is what we have used in our ports of the Samples and StarterKits. There may be a couple of samples that aren't ports, but the vast majority are XNA ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784", "body": "I understand where you are coming from and we know that git is not the easiest thing to get your head round when you first use it. \nWe plan to create some zips, like the tagged zips, for those who don't want to get their hand git dirty :).\n\nWe do appreciate a \"new-starter\" perspective. So over time we will make it easier. For example in the v2.5 release we will have project templates for certain platforms, and we will increase support for other platforms leading up to v3.0 release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466", "body": "Changed from foreach to for loop in case the GameComponents's Update method modifies the component collection.  With a foreach it causes an error: \"Collection was modified; enumeration operation may not execute.\"  .Net 4.0 I thought got around this but in Mono 2.10.2 we still get this error.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215", "body": "Dominique\n\nThose were already there so I went ahead with it.  That was the code I used as the very first test to see how things worked.  As you say it should not have been done in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jfernandezrodriguez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083", "body": "Sorry, It's my fault. I'll fix it now. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "urkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570", "body": "The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873", "body": "Oh goodie.   I'm just gawking at the amount of duplicated code as I port things from a private branch (mac port of a game) to the upstream develop branch for mac & linux. (and trying to mirror on Windows best I can).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bonesoul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951", "body": "I really don't understand why you guys keeping especially samples in a submodule. Especially new users when first trying to get introduced a new sdk/framework, they'll be looking for documentation / samples. Monogame already lacks a proper documentation and further \"hiding\" samples/starter kits makes harder to get started?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763", "body": "Okay given the 400MB fact then submodules are correct way to go. In the first place, I just put myself in place of a new-starter who isn't that much experienced with git.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797", "body": "Okay, it's good to know these are coming. I hope I can find some free time so I can start hacking the monogame source - or maybe I should start with some quick intro docs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "seanedwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237", "body": "If an exception occurs here, bitmap is possibly uninitialized, resulting in a null pointer exception. Something more intelligent should be done with this exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eropple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248", "body": "Issue noted in #585; this won't build in Mono 2.11 and is probably not wise anyway. Surely there's something better than a catch-all?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timothyparez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775", "body": "Hey,\n\nI've tried to check out this branch, but it seems to be missing a lot of files\n\n3dSample cannot be located and neither can Samples/Draw2D/\nThe OpenTK project refers to ../opentkpi/Source/OpenTK/OpenTK.csproj   \n\nAm I missing something? How can I get these?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034", "body": "I tried cloning /mono/opentk but that differs from opentkpi (I'm new to the git stuff)\nIf you have any compiled stuff you'd like me to test, please let me know, I've got raspberry's to play with\n\nI'm using the armel version of wheezy, as I've heard the raspbian version doesn't work?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kaalus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938", "body": "In XNA clears are affected by scissor. Why this change?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "renaudbedard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081", "body": "I don't understand why this is necessary or a good thing.\nFirst it made one of my shaders break because it has elements (sub-params) and the parent/root value is never set.\nAlso it seems valid to set, for instance, a Sampler2D to null to clear its texture.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940", "body": "@slygamer \n\nDo you think it would be better if we restored the ScissorRect to its previous state after the Clear()?\n\nNote that we have a patch coming that will remove all redundant GL state settings... so you don't need to worry about that issue.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141", "body": "I agree with what you're saying... you shouldn't assume these things and XNA is designed with that in mind.  Still MonoGame is not just following XNA theory... we're replicating its behavior.\n\nIf XNA doesn't reset the ScissorRect after the clear then we shouldn't be either.  Especially since in this case it is easy for us to make it work like XNA does.\n\nI'll double check the XNA behavior...  if you're good with this being fixed then i'll submit it as part of my next pull.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542", "body": "Done... \n\nhttps://github.com/mono/MonoGame/pull/722\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cra0zy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6151", "title": "[Pipeline Tool] Restore old debug mode behavior", "body": "Notes:\r\n - If the debug flag is in .mgcb, it will be preserved, however Pipeline Tool does no longer allow of adding/editing it.\r\n\r\nCC. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6152", "title": "DXT Compression: Keep the delegate from being relocated", "body": "Related to #5138", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694", "body": "This is only temporary, the new 3.0 branch the desktop stuff is much\nmore integrated.\n\nOn 16 March 2012 15:46, Edward Rudd\nreply@reply.github.com\nwrote:\n\n> The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/commit/8b7cf8a8dd46e355807e0439336dfb7fff99cace#commitcomment-1094570\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002", "body": "There are a few missing projects. I will try to clean it up.\n\nthe opentk and the 3dSample should not be in the solution.\n\nYou will need the mono version of opentk for this to work though (I think).\n\nI've not actually managed to get this working on the Pi yet. only in a\nwindows gles emulator.\n\nOn 23 August 2012 11:46, Timothy notifications@github.com wrote:\n\n> Hey,\n> \n> I've tried to check out this branch, but it seems to be missing a lot of\n> files\n> \n> The OpenTK project in the monodevelop solution refers to\n> ../opentkpi/Source/OpenTK/OpenTK.csproj (outside the current repo?)\n> 3dSample cannot be located and neither can Samples/Draw2D/\n> \n> Am I missing something? How can I get these?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1754775.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172", "body": "I have a pi here as well, I installed wheezy too.\n\nyou can try my hacked opentk (https://github.com/dellis1972/opentk) I make\nsome hacks to get it to work properly with gles 2.0. There was one line I\ndid have to change in the Factory.cs I think.\n\nOn 23 August 2012 12:35, Timothy notifications@github.com wrote:\n\n> I tried cloning /mono/opentk but that differs from opentkpi (I'm new to\n> the git stuff)\n> If you have any compiled stuff you'd like me to test, please let me know,\n> I've got raspberry's to play with\n> \n> I'm using the armel version of wheezy, as I've heard the raspbian version\n> doesn't work?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1755034.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "DDReaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292", "body": "Nice.  All issues addressed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930", "body": "Javier, did you intend to add the ContentManager.cs.orig that was created as part of a merge conflict?  That file should not be added to the repos.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815", "body": "In Direct3D, the clear is not affected by the scissor rect.  In OpenGL,\nclear is affected by scissor rect.  To maintain the same behaviour as XNA,\nthe scissor rect needs to be reset before the clear.\n\nOn 28 August 2012 06:30, kaalus notifications@github.com wrote:\n\n> In XNA clears are affected by commit. Why this change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1771938.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107", "body": "I wasn't too worried about redundant state change because the scissor rect\nis already tested for that before the change is applied.\n\nXNA 4.0 takes the path of \"assume nothing: explicitly set everything you\ndepend on before drawing.\" (\nhttp://blogs.msdn.com/b/shawnhar/archive/2010/04/02/state-objects-in-xna-game-studio-4-0.aspx\n)\n\nIf some code requires a specific scissor rect, it should always set it.\n\nOn 28 August 2012 10:58, Tom Spilman notifications@github.com wrote:\n\n> @slygamer https://github.com/slygamer\n> \n> Do you think it would be better if we restored the ScissorRect to its\n> previous state after the Clear()?\n> \n> Note that we have a patch coming that will remove all redundant GL state\n> settings... so you don't need to worry about that issue.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1772940.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361", "body": "Sure thing.\n\nOn 28 August 2012 12:04, Tom Spilman notifications@github.com wrote:\n\n> I agree with what you're saying... you shouldn't assume these things and\n> XNA is designed with that in mind. Still MonoGame is not just following XNA\n> theory... we're replicating its behavior.\n> \n> If XNA doesn't reset the ScissorRect after the clear then we shouldn't be\n> either. Especially since in this case it is easy for us to make it work\n> like XNA does.\n> \n> I'll double check the XNA behavior... if you're good with this being fixed\n> then i'll submit it as part of my next pull.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1773141.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701", "body": "Ok. That would be my bad as I don't have any test cases using custom\nshaders and those aspects were missed in the discussion of the pull\nrequest. You when I get into the office I'll revisit it unless someone does\nsooner.\nOn 1 Sep 2012 01:04, \"Renaud B\u00e9dard\" notifications@github.com wrote:\n\n> I don't understand why this is necessary or a good thing.\n> First it made one of my shaders break because it has elements (sub-params)\n> and the parent/root value is never set.\n> Also it seems valid to set, for instance, a Sampler2D to null to clear its\n> texture.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/8eaf9fb0bdaf6837ac9363b1d46f2135ab27c3ea#commitcomment-1794081.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046", "body": "This commit re-added the AndroidApplication tag to the MonoGame.Framework.Android.csproj after it had been removed previously to fix linking issues with Mono for Android in Visual Studio.  Did you use the latest MonoDevelop for this edit?  I'm guessing it might have been due to the change of true and false to True and False as happened in MonoDevelop for MonoTouch as well.\n\nWe need to make sure the AndroidApplication tag doesn't get added back in.  Could you think of how it may have happened?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796", "body": "This merged all of mine and your BeginDraw code into master as well. Not sure you meant to. It is not really a major issue, we just have to be mindful of it with future pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230", "body": "Ah ok, sorry my misunderstanding. I forgot about the first test.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998", "body": "Please explain how they are hidden? All you need to do, indicated above is.....\ngit submodule init\ngit submodule update\n\nand it will pull down _everything_.\n\nWe made a conscious decision not to include them in the main Framework distro, because it would come to over 400MB! Not everyone has that sort of bandwidth, though we wish they did. Also most people using MonoGame already have XNA Samples/StarterKits, which is what we have used in our ports of the Samples and StarterKits. There may be a couple of samples that aren't ports, but the vast majority are XNA ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784", "body": "I understand where you are coming from and we know that git is not the easiest thing to get your head round when you first use it. \nWe plan to create some zips, like the tagged zips, for those who don't want to get their hand git dirty :).\n\nWe do appreciate a \"new-starter\" perspective. So over time we will make it easier. For example in the v2.5 release we will have project templates for certain platforms, and we will increase support for other platforms leading up to v3.0 release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466", "body": "Changed from foreach to for loop in case the GameComponents's Update method modifies the component collection.  With a foreach it causes an error: \"Collection was modified; enumeration operation may not execute.\"  .Net 4.0 I thought got around this but in Mono 2.10.2 we still get this error.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215", "body": "Dominique\n\nThose were already there so I went ahead with it.  That was the code I used as the very first test to see how things worked.  As you say it should not have been done in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Grapes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779", "body": "I see what you are saying, I'll update that tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfernandezrodriguez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083", "body": "Sorry, It's my fault. I'll fix it now. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "urkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570", "body": "The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873", "body": "Oh goodie.   I'm just gawking at the amount of duplicated code as I port things from a private branch (mac port of a game) to the upstream develop branch for mac & linux. (and trying to mirror on Windows best I can).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bonesoul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951", "body": "I really don't understand why you guys keeping especially samples in a submodule. Especially new users when first trying to get introduced a new sdk/framework, they'll be looking for documentation / samples. Monogame already lacks a proper documentation and further \"hiding\" samples/starter kits makes harder to get started?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763", "body": "Okay given the 400MB fact then submodules are correct way to go. In the first place, I just put myself in place of a new-starter who isn't that much experienced with git.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797", "body": "Okay, it's good to know these are coming. I hope I can find some free time so I can start hacking the monogame source - or maybe I should start with some quick intro docs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "seanedwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237", "body": "If an exception occurs here, bitmap is possibly uninitialized, resulting in a null pointer exception. Something more intelligent should be done with this exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eropple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248", "body": "Issue noted in #585; this won't build in Mono 2.11 and is probably not wise anyway. Surely there's something better than a catch-all?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timothyparez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775", "body": "Hey,\n\nI've tried to check out this branch, but it seems to be missing a lot of files\n\n3dSample cannot be located and neither can Samples/Draw2D/\nThe OpenTK project refers to ../opentkpi/Source/OpenTK/OpenTK.csproj   \n\nAm I missing something? How can I get these?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034", "body": "I tried cloning /mono/opentk but that differs from opentkpi (I'm new to the git stuff)\nIf you have any compiled stuff you'd like me to test, please let me know, I've got raspberry's to play with\n\nI'm using the armel version of wheezy, as I've heard the raspbian version doesn't work?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kaalus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938", "body": "In XNA clears are affected by scissor. Why this change?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "renaudbedard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081", "body": "I don't understand why this is necessary or a good thing.\nFirst it made one of my shaders break because it has elements (sub-params) and the parent/root value is never set.\nAlso it seems valid to set, for instance, a Sampler2D to null to clear its texture.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "3": {"KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cra0zy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6151", "title": "[Pipeline Tool] Restore old debug mode behavior", "body": "Notes:\r\n - If the debug flag is in .mgcb, it will be preserved, however Pipeline Tool does no longer allow of adding/editing it.\r\n\r\nCC. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6152", "title": "DXT Compression: Keep the delegate from being relocated", "body": "Related to #5138", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DDReaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292", "body": "Nice.  All issues addressed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Grapes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779", "body": "I see what you are saying, I'll update that tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "4": {"KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940", "body": "@slygamer \n\nDo you think it would be better if we restored the ScissorRect to its previous state after the Clear()?\n\nNote that we have a patch coming that will remove all redundant GL state settings... so you don't need to worry about that issue.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141", "body": "I agree with what you're saying... you shouldn't assume these things and XNA is designed with that in mind.  Still MonoGame is not just following XNA theory... we're replicating its behavior.\n\nIf XNA doesn't reset the ScissorRect after the clear then we shouldn't be either.  Especially since in this case it is easy for us to make it work like XNA does.\n\nI'll double check the XNA behavior...  if you're good with this being fixed then i'll submit it as part of my next pull.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542", "body": "Done... \n\nhttps://github.com/mono/MonoGame/pull/722\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cra0zy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6151", "title": "[Pipeline Tool] Restore old debug mode behavior", "body": "Notes:\r\n - If the debug flag is in .mgcb, it will be preserved, however Pipeline Tool does no longer allow of adding/editing it.\r\n\r\nCC. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6152", "title": "DXT Compression: Keep the delegate from being relocated", "body": "Related to #5138", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694", "body": "This is only temporary, the new 3.0 branch the desktop stuff is much\nmore integrated.\n\nOn 16 March 2012 15:46, Edward Rudd\nreply@reply.github.com\nwrote:\n\n> The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/commit/8b7cf8a8dd46e355807e0439336dfb7fff99cace#commitcomment-1094570\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002", "body": "There are a few missing projects. I will try to clean it up.\n\nthe opentk and the 3dSample should not be in the solution.\n\nYou will need the mono version of opentk for this to work though (I think).\n\nI've not actually managed to get this working on the Pi yet. only in a\nwindows gles emulator.\n\nOn 23 August 2012 11:46, Timothy notifications@github.com wrote:\n\n> Hey,\n> \n> I've tried to check out this branch, but it seems to be missing a lot of\n> files\n> \n> The OpenTK project in the monodevelop solution refers to\n> ../opentkpi/Source/OpenTK/OpenTK.csproj (outside the current repo?)\n> 3dSample cannot be located and neither can Samples/Draw2D/\n> \n> Am I missing something? How can I get these?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1754775.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172", "body": "I have a pi here as well, I installed wheezy too.\n\nyou can try my hacked opentk (https://github.com/dellis1972/opentk) I make\nsome hacks to get it to work properly with gles 2.0. There was one line I\ndid have to change in the Factory.cs I think.\n\nOn 23 August 2012 12:35, Timothy notifications@github.com wrote:\n\n> I tried cloning /mono/opentk but that differs from opentkpi (I'm new to\n> the git stuff)\n> If you have any compiled stuff you'd like me to test, please let me know,\n> I've got raspberry's to play with\n> \n> I'm using the armel version of wheezy, as I've heard the raspbian version\n> doesn't work?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1755034.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "DDReaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930", "body": "Javier, did you intend to add the ContentManager.cs.orig that was created as part of a merge conflict?  That file should not be added to the repos.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815", "body": "In Direct3D, the clear is not affected by the scissor rect.  In OpenGL,\nclear is affected by scissor rect.  To maintain the same behaviour as XNA,\nthe scissor rect needs to be reset before the clear.\n\nOn 28 August 2012 06:30, kaalus notifications@github.com wrote:\n\n> In XNA clears are affected by commit. Why this change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1771938.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107", "body": "I wasn't too worried about redundant state change because the scissor rect\nis already tested for that before the change is applied.\n\nXNA 4.0 takes the path of \"assume nothing: explicitly set everything you\ndepend on before drawing.\" (\nhttp://blogs.msdn.com/b/shawnhar/archive/2010/04/02/state-objects-in-xna-game-studio-4-0.aspx\n)\n\nIf some code requires a specific scissor rect, it should always set it.\n\nOn 28 August 2012 10:58, Tom Spilman notifications@github.com wrote:\n\n> @slygamer https://github.com/slygamer\n> \n> Do you think it would be better if we restored the ScissorRect to its\n> previous state after the Clear()?\n> \n> Note that we have a patch coming that will remove all redundant GL state\n> settings... so you don't need to worry about that issue.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1772940.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361", "body": "Sure thing.\n\nOn 28 August 2012 12:04, Tom Spilman notifications@github.com wrote:\n\n> I agree with what you're saying... you shouldn't assume these things and\n> XNA is designed with that in mind. Still MonoGame is not just following XNA\n> theory... we're replicating its behavior.\n> \n> If XNA doesn't reset the ScissorRect after the clear then we shouldn't be\n> either. Especially since in this case it is easy for us to make it work\n> like XNA does.\n> \n> I'll double check the XNA behavior... if you're good with this being fixed\n> then i'll submit it as part of my next pull.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1773141.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701", "body": "Ok. That would be my bad as I don't have any test cases using custom\nshaders and those aspects were missed in the discussion of the pull\nrequest. You when I get into the office I'll revisit it unless someone does\nsooner.\nOn 1 Sep 2012 01:04, \"Renaud B\u00e9dard\" notifications@github.com wrote:\n\n> I don't understand why this is necessary or a good thing.\n> First it made one of my shaders break because it has elements (sub-params)\n> and the parent/root value is never set.\n> Also it seems valid to set, for instance, a Sampler2D to null to clear its\n> texture.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/8eaf9fb0bdaf6837ac9363b1d46f2135ab27c3ea#commitcomment-1794081.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046", "body": "This commit re-added the AndroidApplication tag to the MonoGame.Framework.Android.csproj after it had been removed previously to fix linking issues with Mono for Android in Visual Studio.  Did you use the latest MonoDevelop for this edit?  I'm guessing it might have been due to the change of true and false to True and False as happened in MonoDevelop for MonoTouch as well.\n\nWe need to make sure the AndroidApplication tag doesn't get added back in.  Could you think of how it may have happened?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715", "body": "Hi Andre, it seems no one else tried this change. I'm going to take a chance, but could I be a pain and ask you to rebase, then resend this pull request? I'm hoping to release v1.6 next Friday or Saturday and think this and the colour change should be included. Let me know if that is a problem.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225", "body": "Andre, I decided to manually merge your sound cache changes. So I'm going to close this pull request. Please grab the latest code and let me know if it still works for you on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796", "body": "This merged all of mine and your BeginDraw code into master as well. Not sure you meant to. It is not really a major issue, we just have to be mindful of it with future pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230", "body": "Ah ok, sorry my misunderstanding. I forgot about the first test.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998", "body": "Please explain how they are hidden? All you need to do, indicated above is.....\ngit submodule init\ngit submodule update\n\nand it will pull down _everything_.\n\nWe made a conscious decision not to include them in the main Framework distro, because it would come to over 400MB! Not everyone has that sort of bandwidth, though we wish they did. Also most people using MonoGame already have XNA Samples/StarterKits, which is what we have used in our ports of the Samples and StarterKits. There may be a couple of samples that aren't ports, but the vast majority are XNA ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784", "body": "I understand where you are coming from and we know that git is not the easiest thing to get your head round when you first use it. \nWe plan to create some zips, like the tagged zips, for those who don't want to get their hand git dirty :).\n\nWe do appreciate a \"new-starter\" perspective. So over time we will make it easier. For example in the v2.5 release we will have project templates for certain platforms, and we will increase support for other platforms leading up to v3.0 release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466", "body": "Changed from foreach to for loop in case the GameComponents's Update method modifies the component collection.  With a foreach it causes an error: \"Collection was modified; enumeration operation may not execute.\"  .Net 4.0 I thought got around this but in Mono 2.10.2 we still get this error.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215", "body": "Dominique\n\nThose were already there so I went ahead with it.  That was the code I used as the very first test to see how things worked.  As you say it should not have been done in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jfernandezrodriguez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083", "body": "Sorry, It's my fault. I'll fix it now. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "urkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570", "body": "The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873", "body": "Oh goodie.   I'm just gawking at the amount of duplicated code as I port things from a private branch (mac port of a game) to the upstream develop branch for mac & linux. (and trying to mirror on Windows best I can).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bonesoul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951", "body": "I really don't understand why you guys keeping especially samples in a submodule. Especially new users when first trying to get introduced a new sdk/framework, they'll be looking for documentation / samples. Monogame already lacks a proper documentation and further \"hiding\" samples/starter kits makes harder to get started?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763", "body": "Okay given the 400MB fact then submodules are correct way to go. In the first place, I just put myself in place of a new-starter who isn't that much experienced with git.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797", "body": "Okay, it's good to know these are coming. I hope I can find some free time so I can start hacking the monogame source - or maybe I should start with some quick intro docs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "seanedwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237", "body": "If an exception occurs here, bitmap is possibly uninitialized, resulting in a null pointer exception. Something more intelligent should be done with this exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eropple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248", "body": "Issue noted in #585; this won't build in Mono 2.11 and is probably not wise anyway. Surely there's something better than a catch-all?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timothyparez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775", "body": "Hey,\n\nI've tried to check out this branch, but it seems to be missing a lot of files\n\n3dSample cannot be located and neither can Samples/Draw2D/\nThe OpenTK project refers to ../opentkpi/Source/OpenTK/OpenTK.csproj   \n\nAm I missing something? How can I get these?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034", "body": "I tried cloning /mono/opentk but that differs from opentkpi (I'm new to the git stuff)\nIf you have any compiled stuff you'd like me to test, please let me know, I've got raspberry's to play with\n\nI'm using the armel version of wheezy, as I've heard the raspbian version doesn't work?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kaalus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938", "body": "In XNA clears are affected by scissor. Why this change?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "renaudbedard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081", "body": "I don't understand why this is necessary or a good thing.\nFirst it made one of my shaders break because it has elements (sub-params) and the parent/root value is never set.\nAlso it seems valid to set, for instance, a Sampler2D to null to clear its texture.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "5": {"KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940", "body": "@slygamer \n\nDo you think it would be better if we restored the ScissorRect to its previous state after the Clear()?\n\nNote that we have a patch coming that will remove all redundant GL state settings... so you don't need to worry about that issue.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141", "body": "I agree with what you're saying... you shouldn't assume these things and XNA is designed with that in mind.  Still MonoGame is not just following XNA theory... we're replicating its behavior.\n\nIf XNA doesn't reset the ScissorRect after the clear then we shouldn't be either.  Especially since in this case it is easy for us to make it work like XNA does.\n\nI'll double check the XNA behavior...  if you're good with this being fixed then i'll submit it as part of my next pull.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542", "body": "Done... \n\nhttps://github.com/mono/MonoGame/pull/722\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cra0zy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6151", "title": "[Pipeline Tool] Restore old debug mode behavior", "body": "Notes:\r\n - If the debug flag is in .mgcb, it will be preserved, however Pipeline Tool does no longer allow of adding/editing it.\r\n\r\nCC. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6152", "title": "DXT Compression: Keep the delegate from being relocated", "body": "Related to #5138", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694", "body": "This is only temporary, the new 3.0 branch the desktop stuff is much\nmore integrated.\n\nOn 16 March 2012 15:46, Edward Rudd\nreply@reply.github.com\nwrote:\n\n> The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/commit/8b7cf8a8dd46e355807e0439336dfb7fff99cace#commitcomment-1094570\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002", "body": "There are a few missing projects. I will try to clean it up.\n\nthe opentk and the 3dSample should not be in the solution.\n\nYou will need the mono version of opentk for this to work though (I think).\n\nI've not actually managed to get this working on the Pi yet. only in a\nwindows gles emulator.\n\nOn 23 August 2012 11:46, Timothy notifications@github.com wrote:\n\n> Hey,\n> \n> I've tried to check out this branch, but it seems to be missing a lot of\n> files\n> \n> The OpenTK project in the monodevelop solution refers to\n> ../opentkpi/Source/OpenTK/OpenTK.csproj (outside the current repo?)\n> 3dSample cannot be located and neither can Samples/Draw2D/\n> \n> Am I missing something? How can I get these?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1754775.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172", "body": "I have a pi here as well, I installed wheezy too.\n\nyou can try my hacked opentk (https://github.com/dellis1972/opentk) I make\nsome hacks to get it to work properly with gles 2.0. There was one line I\ndid have to change in the Factory.cs I think.\n\nOn 23 August 2012 12:35, Timothy notifications@github.com wrote:\n\n> I tried cloning /mono/opentk but that differs from opentkpi (I'm new to\n> the git stuff)\n> If you have any compiled stuff you'd like me to test, please let me know,\n> I've got raspberry's to play with\n> \n> I'm using the armel version of wheezy, as I've heard the raspbian version\n> doesn't work?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1755034.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "DDReaper": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292", "body": "Nice.  All issues addressed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930", "body": "Javier, did you intend to add the ContentManager.cs.orig that was created as part of a merge conflict?  That file should not be added to the repos.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815", "body": "In Direct3D, the clear is not affected by the scissor rect.  In OpenGL,\nclear is affected by scissor rect.  To maintain the same behaviour as XNA,\nthe scissor rect needs to be reset before the clear.\n\nOn 28 August 2012 06:30, kaalus notifications@github.com wrote:\n\n> In XNA clears are affected by commit. Why this change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1771938.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107", "body": "I wasn't too worried about redundant state change because the scissor rect\nis already tested for that before the change is applied.\n\nXNA 4.0 takes the path of \"assume nothing: explicitly set everything you\ndepend on before drawing.\" (\nhttp://blogs.msdn.com/b/shawnhar/archive/2010/04/02/state-objects-in-xna-game-studio-4-0.aspx\n)\n\nIf some code requires a specific scissor rect, it should always set it.\n\nOn 28 August 2012 10:58, Tom Spilman notifications@github.com wrote:\n\n> @slygamer https://github.com/slygamer\n> \n> Do you think it would be better if we restored the ScissorRect to its\n> previous state after the Clear()?\n> \n> Note that we have a patch coming that will remove all redundant GL state\n> settings... so you don't need to worry about that issue.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1772940.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361", "body": "Sure thing.\n\nOn 28 August 2012 12:04, Tom Spilman notifications@github.com wrote:\n\n> I agree with what you're saying... you shouldn't assume these things and\n> XNA is designed with that in mind. Still MonoGame is not just following XNA\n> theory... we're replicating its behavior.\n> \n> If XNA doesn't reset the ScissorRect after the clear then we shouldn't be\n> either. Especially since in this case it is easy for us to make it work\n> like XNA does.\n> \n> I'll double check the XNA behavior... if you're good with this being fixed\n> then i'll submit it as part of my next pull.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1773141.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701", "body": "Ok. That would be my bad as I don't have any test cases using custom\nshaders and those aspects were missed in the discussion of the pull\nrequest. You when I get into the office I'll revisit it unless someone does\nsooner.\nOn 1 Sep 2012 01:04, \"Renaud B\u00e9dard\" notifications@github.com wrote:\n\n> I don't understand why this is necessary or a good thing.\n> First it made one of my shaders break because it has elements (sub-params)\n> and the parent/root value is never set.\n> Also it seems valid to set, for instance, a Sampler2D to null to clear its\n> texture.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/8eaf9fb0bdaf6837ac9363b1d46f2135ab27c3ea#commitcomment-1794081.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046", "body": "This commit re-added the AndroidApplication tag to the MonoGame.Framework.Android.csproj after it had been removed previously to fix linking issues with Mono for Android in Visual Studio.  Did you use the latest MonoDevelop for this edit?  I'm guessing it might have been due to the change of true and false to True and False as happened in MonoDevelop for MonoTouch as well.\n\nWe need to make sure the AndroidApplication tag doesn't get added back in.  Could you think of how it may have happened?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796", "body": "This merged all of mine and your BeginDraw code into master as well. Not sure you meant to. It is not really a major issue, we just have to be mindful of it with future pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230", "body": "Ah ok, sorry my misunderstanding. I forgot about the first test.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998", "body": "Please explain how they are hidden? All you need to do, indicated above is.....\ngit submodule init\ngit submodule update\n\nand it will pull down _everything_.\n\nWe made a conscious decision not to include them in the main Framework distro, because it would come to over 400MB! Not everyone has that sort of bandwidth, though we wish they did. Also most people using MonoGame already have XNA Samples/StarterKits, which is what we have used in our ports of the Samples and StarterKits. There may be a couple of samples that aren't ports, but the vast majority are XNA ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784", "body": "I understand where you are coming from and we know that git is not the easiest thing to get your head round when you first use it. \nWe plan to create some zips, like the tagged zips, for those who don't want to get their hand git dirty :).\n\nWe do appreciate a \"new-starter\" perspective. So over time we will make it easier. For example in the v2.5 release we will have project templates for certain platforms, and we will increase support for other platforms leading up to v3.0 release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466", "body": "Changed from foreach to for loop in case the GameComponents's Update method modifies the component collection.  With a foreach it causes an error: \"Collection was modified; enumeration operation may not execute.\"  .Net 4.0 I thought got around this but in Mono 2.10.2 we still get this error.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215", "body": "Dominique\n\nThose were already there so I went ahead with it.  That was the code I used as the very first test to see how things worked.  As you say it should not have been done in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Grapes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779", "body": "I see what you are saying, I'll update that tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfernandezrodriguez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083", "body": "Sorry, It's my fault. I'll fix it now. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "urkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570", "body": "The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873", "body": "Oh goodie.   I'm just gawking at the amount of duplicated code as I port things from a private branch (mac port of a game) to the upstream develop branch for mac & linux. (and trying to mirror on Windows best I can).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bonesoul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951", "body": "I really don't understand why you guys keeping especially samples in a submodule. Especially new users when first trying to get introduced a new sdk/framework, they'll be looking for documentation / samples. Monogame already lacks a proper documentation and further \"hiding\" samples/starter kits makes harder to get started?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763", "body": "Okay given the 400MB fact then submodules are correct way to go. In the first place, I just put myself in place of a new-starter who isn't that much experienced with git.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797", "body": "Okay, it's good to know these are coming. I hope I can find some free time so I can start hacking the monogame source - or maybe I should start with some quick intro docs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "seanedwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237", "body": "If an exception occurs here, bitmap is possibly uninitialized, resulting in a null pointer exception. Something more intelligent should be done with this exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eropple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248", "body": "Issue noted in #585; this won't build in Mono 2.11 and is probably not wise anyway. Surely there's something better than a catch-all?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timothyparez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775", "body": "Hey,\n\nI've tried to check out this branch, but it seems to be missing a lot of files\n\n3dSample cannot be located and neither can Samples/Draw2D/\nThe OpenTK project refers to ../opentkpi/Source/OpenTK/OpenTK.csproj   \n\nAm I missing something? How can I get these?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034", "body": "I tried cloning /mono/opentk but that differs from opentkpi (I'm new to the git stuff)\nIf you have any compiled stuff you'd like me to test, please let me know, I've got raspberry's to play with\n\nI'm using the armel version of wheezy, as I've heard the raspbian version doesn't work?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kaalus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938", "body": "In XNA clears are affected by scissor. Why this change?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "renaudbedard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081", "body": "I don't understand why this is necessary or a good thing.\nFirst it made one of my shaders break because it has elements (sub-params) and the parent/root value is never set.\nAlso it seems valid to set, for instance, a Sampler2D to null to clear its texture.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}