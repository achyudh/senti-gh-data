{"_default": {"1": {"Aman-Osman-Bose": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/608", "title": "Jenkins doesn't get beyond \"Trying to run container for\"", "body": "-  [1.1.2 ] docker-plugin version you use\r\n-  [Jenkins ver. 2.89.2] jenkins version you use\r\n-  [Version = 17.09.1-ce, API Version = 1.32] docker engine version you use\r\n\r\nThe container gets launched in the docker and I see the container in the docker ps -a, but nothing is happening after that. \r\n\r\n**stack trace / logs / any technical details that could help diagnose this issue**\r\n\r\n- Jenkins Logs\r\n\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: test-docker\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'test-auto', for label: 'test-docker', in cloud: 'docker'\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nProvisioning 'test-auto' number '2' on 'docker'; Total containers: '2'\r\nJan 16, 2018 11:31:51 AM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning Image of test-auto from docker with 1 executors. Remaining excess workload: 0\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerTemplate provisionNode\r\nTrying to run container for test-auto (edited)\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pitargue": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/605", "title": "ssh Connection Timeout, max no of retries and seconds to wait between retries has no effect", "body": "docker-plugin version 1.1.2\r\nJenkins version 2.101\r\nDocker version 1.12.6, build ec8512b/1.12.6\r\n\r\nUsing ssh connection method to jenkins agents in local docker cloud, configuring:\r\n  Connection Timeout in Seconds\r\n  Maximum Number of Retries\r\n  Seconds To Wait Between Retries\r\n\r\nseems to have no effect.  The logs always say trying for 30 times as fast as it can.  (Our slaves come up real slow so need a bit of delay.)\r\n\r\nSEVERE: Failed to connect to docker-sys4:32841 (try 1/30) - There was a problem while connecting to docker-sys4:32841\r\n\r\n...\r\n\r\nSEVERE: Failed to connect to docker-sys4:32842 (try 30/30) - There was a problem while connecting to docker-sys4:32842\r\nJan 11, 2018 1:59:02 PM com.nirima.jenkins.plugins.docker.DockerCloud$1 run\r\nSEVERE: Error in provisioning; template='DockerTemplate{configVersion=2, labelString='bvs', connector=io.jenkins.docker.connector.DockerComputerSSHConnector@453e723d, remoteFs='/root', instanceCap=10, mode=EXCLUSIVE, retentionStrategy=com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy@769c3fe9, dockerTemplateBase=DockerTemplateBase{image='localhost:5000/bvsimages/centos7-systemd-with-bvs:latest', pullCredentialsId='', registry=null, dockerCommand='/usr/lib/systemd/systemd --switched-root --system', hostname='', dnsHosts=[], network='', volumes=[/mnt/tank/bvs:/mnt/tank/bvs], volumesFrom2=[], environment=[TZ=America/Los_Angeles], bindPorts='', bindAllPorts=false, memoryLimit=null, memorySwap=null, cpuShares=null, privileged=true, tty=true, macAddress='null', extraHosts=[]}, removeVolumes=true, pullStrategy=PULL_NEVER, nodeProperties=[]}' for cloud='docker'\r\njava.io.IOException: SSH service didn't started after 60s.\r\n\r\n\r\nAny other info I can provide?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saxonww": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/604", "title": "Concurrent stages occasionally 'steal' agents from another stage", "body": "I'm using docker-plugin version 1.1.2 on Jenkins 2.89.2. The Docker engine version is 17.09.0-ce. We're using the 'attach docker container' connect method.\r\n\r\nWe have several pipeline jobs which attempt to spin up images using label expressions matching Docker agent templates. The observed behavior is that a stage will attempt to allocate a node for label `someExpression`, it will be identified that there are no existing nodes matching `someExpression`, then a docker container will be spun up to meet the need; at that time, the job will instead depend on e.g. `docker-containerId` and begin using it as soon as it's spun up.\r\n\r\nWhat we're seeing is that sometimes with two stages (A and B) which use the same label expression `someExpression`, A will be causing a new Docker container to be spun up right when B is trying to determine if one exists. B will 'steal' A's container, but by that point 'A' will be dependent on `docker-containerId` instead of `someExpression`. A will then stall.\r\n\r\nCompounding this is that once stage B finishes and `docker-containerId` terminates, stage A goes back to depending on `someExpression`, but this does not immediately result in a new Docker container spinning up to meet the need. If there is a new stage C which also needs `someExpression`, _it_ will cause a new container to spin up, but then A will steal that one, and C will stall. And so on.\r\n\r\nI believe restarting Jenkins will clear this condition. Also, assigning `someExpression` to a non-Docker agent will let the stalled stage complete, but then it seems that all stages want to (and will wait on) that non-Docker agent instead; we have to remove `someExpression` from the non-Docker agent, change `someExpression` to `someOtherExpression` for the Agent Template in Jenkins config, then change it back, before things get back to normal.\r\n\r\nThe relevant entries from jenkins.log:\r\n```\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nINFO: Asked to provision 1 slave(s) for: someExpression\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nINFO: Will provision 'artifactory:5000/imageName:version', for label: 'someExpression', in cloud: 'Docker - Linux'\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nINFO: Provisioning 'artifactory:5000/imageName:version' number '1' on 'Docker - Linux'; Total containers: '12'\r\nJan 11, 2018 10:31:23 AM hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nINFO: Started provisioning Image of artifactory:5000/imageName:version from Docker - Linux with 1 executors. Remaining excess workload: 0\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerTemplate pullImage\r\nINFO: Pulling image 'artifactory:5000/imageName:version'. This may take awhile...\r\nJan 11, 2018 10:31:28 AM com.nirima.jenkins.plugins.docker.DockerTemplate pullImage\r\nINFO: Finished pulling image 'artifactory:5000/imageName:version', took 5076 ms\r\nJan 11, 2018 10:31:28 AM com.nirima.jenkins.plugins.docker.DockerTemplate provisionNode\r\nINFO: Trying to run container for artifactory:5000/imageName:version\r\nJan 11, 2018 10:31:30 AM com.nirima.jenkins.plugins.docker.DockerCloud$1 run\r\nSEVERE: Error in provisioning; template='DockerTemplate{configVersion=2, labelString='someExpression', connector=io.jenkins.docker.connector.DockerComputerAttach\r\nConnector@2bd76cef, remoteFs='/home/jenkins', instanceCap=2147483647, mode=EXCLUSIVE, retentionStrategy=com.nirima.jenkins.plugins.docker.strategy.DockerOnceRe\r\ntentionStrategy@46952426, dockerTemplateBase=DockerTemplateBase{image='artifactory:5000/imageName:version', pullCredentialsId='', reg\r\nistry=DockerRegistryEndpoint[null;credentialsId=null], dockerCommand='', hostname='', dnsHosts=[], network='', volumes=[/var/run/docker.sock:/var/run/docker.so\r\nck, /usr/bin/docker:/usr/bin/docker:ro], volumesFrom2=[], environment=[], bindPorts='', bindAllPorts=false, memoryLimit=null, memorySwap=null, cpuShares=null,\r\nprivileged=false, tty=false, macAddress='null', extraHosts=[]}, removeVolumes=false, pullStrategy=PULL_ALWAYS, nodeProperties=[]}' for cloud='Docker - Linux'\r\ncom.github.dockerjava.api.exception.DockerClientException: Unable to read temp file /tmp/docker-java8036914009658167143.tar.gz\r\n        at com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec(CopyArchiveToContainerCmdImpl.java:144)\r\n        at io.jenkins.docker.connector.DockerComputerConnector.injectRemotingJar(DockerComputerConnector.java:87)\r\n        at io.jenkins.docker.connector.DockerComputerAttachConnector.afterContainerStarted(DockerComputerAttachConnector.java:63)\r\n        at com.nirima.jenkins.plugins.docker.DockerTemplate.provisionNode(DockerTemplate.java:435)\r\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.run(DockerCloud.java:268)\r\n        at jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: dockerHost/10.0.0.10:2375\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:267)\r\n        at io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:120)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n        ... 1 more\r\n```\r\n And at this same time on the Docker host:\r\n\r\n```\r\nJan 11 10:30:27 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:27.637806915-05:00\" level=error msg=\"attach: stderr: write tcp 10.0.0.10:2375->10.99.99.10:37100: write: broken pipe\"\r\nJan 11 10:30:27 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:27.924120839-05:00\" level=error msg=\"Error running exec in container: exec attach failed: write tcp 10.0.0.10:2375->10.99.99.10:37100: write: broken pipe\"\r\nJan 11 10:30:37 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:37.640352382-05:00\" level=info msg=\"Container 0aa82b3ebb261fbb7db167956991a0fe868746cea8ceba74d002257d4c77c1de failed to exit within 10 seconds of signal 15 - using the force\"\r\n```\r\n\r\nWe see that the 'attach container' method is marked as experimental, but aside from the above we have not had major problems with it. I haven't tried replacing my containers with some which would work via JNLP.\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pteichner": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/603", "title": "Docker Plugin is creating issues in log and when manually creating non docker node", "body": " - [ ] docker-plugin version you use: 1.1.2\r\n - [ ] jenkins version you use: 2.73.2\r\n - [ ] docker engine version you use: 17.09.1-ce\r\n - [ ] stack trace / logs / any technical details that could help diagnose this issue\r\n\r\nJenkins exception in the logs show the below error, even when there is no templates added or jobs running that would require a docker container to run in.\r\n\r\n```\r\nTimer task hudson.model.LoadStatistics$LoadStatisticsUpdater@1d3715b0 failed\r\njava.lang.NullPointerException\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.getTemplates(DockerCloud.java:388)\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.getTemplate(DockerCloud.java:340)\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.canProvision(DockerCloud.java:322)\r\n\tat hudson.model.Label.getClouds(Label.java:227)\r\n\tat hudson.model.Label.isEmpty(Label.java:436)\r\n\tat jenkins.model.Jenkins.getLabels(Jenkins.java:2018)\r\n\tat hudson.model.LoadStatistics$LoadStatisticsUpdater.doRun(LoadStatistics.java:395)\r\n\tat hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:51)\r\n\tat jenkins.security.ImpersonatingScheduledExecutorService$1.run(ImpersonatingScheduledExecutorService.java:58)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sporkisfaster": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/602", "title": "Getting error \"Jenkins doesn't have label - testslave\"", "body": "Getting Jenkins doesn't have label testslave error in any job configuration in jenkins. Tried pipeline, freestyle, etc. The job just hangs there without spinning up any container with docker.\r\n\r\nAs for the docker agent template connect methods I tried SSH injection, manually pasting the key, JNLP, etc. Made sure there were no leading spaces in the label name. \r\n\r\nWhen testing connection in the docker plugin I get the version and api version reply from docker so the communication is happening between jenkins and the docker daemon. Not sure what's going on past that.\r\n\r\n\r\n\r\nJenkins: v 2.100\r\nDocker plugin 1.1.2\r\nDocker Version = 17.07.0-ce, API Version = 1.31", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fraz3alpha": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/601", "title": "TooLongFrameException thrown via docker-java for > 1000 containers running", "body": "\r\nWhen I have a large number of containers already running in my target Docker environment the following error is thrown by the Docker plugin (and its dependencies) and containers cannot be created:\r\n\r\n```\r\nJan 10, 2018 9:56:00 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 9:56:00 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 9:56:00 AM SEVERE com.github.dockerjava.core.async.ResultCallbackTemplate onError\r\nError during callback\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1056644 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n...\r\n```\r\nThis happens when I get to approximately 1100 containers, and can be matched with a call to `curl ${DOCKER_HOST}/containers/json | wc`, so it is probably occuring during the part of the process where the plugin is requesting out what is currently running so as to obey any caps defined.\r\ne.g. \r\n```\r\n# curl ${DOCKER_HOST}/containers/json | wc\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 1092k    0 1092k    0     0  22.2M      0 --:--:-- --:--:-- --:--:-- 22.6M\r\n      1    4243 1118431\r\n```\r\n\r\nThere is no configurable parameters as far as I can tell to adjust the size of decoding frame\r\n\r\nEnvironment details:\r\n\r\nJenkins version: `2.73.1`\r\ndocker-plugin version: `1.1.2`\r\nDocker version `17.09.0-ce` via legacy swarm mode (`swarm:1.2.8`)\r\n\r\nMy current level of running containers was not a problem at version 0.16.2, it was only with an upgrade to 1.1.2 where this started happening.\r\n\r\nIn this particular test the 1000+ containers that are running aren't doing anything, they were generated outside of Jenkins and are just sitting there sleeping via a script such as this one:\r\n```\r\n#!/bin/bash\r\nfor i in `seq 1 1000`;\r\ndo\r\n  echo $i\r\n  docker -H :4000 run -d busybox:latest sleep 18000\r\ndone\r\n```\r\nFull output of failing and passing plugin versions:\r\n\r\nv0.16.2 is successful:\r\n```\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nProvisioning 'evarga/jenkins-slave' number '1' on 'test-swarm'; Total containers: '1201'\r\nJan 10, 2018 10:34:52 AM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning Image of evarga/jenkins-slave from test-swarm with 1 executors. Remaining excess workload: -0.122\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provisionWithWait\r\nTrying to run container for evarga/jenkins-slave\r\nJan 10, 2018 10:34:56 AM INFO com.nirima.jenkins.plugins.docker.utils.PortUtils$ConnectionCheckSSH execute\r\nSSH port is open on 10.127.159.67:40026\r\nJan 10, 2018 10:34:56 AM INFO com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher getSSHLauncher\r\nCreating slave SSH launcher for /10.127.159.67:40026\r\nJan 10, 2018 10:35:02 AM INFO hudson.slaves.NodeProvisioner$2 run\r\nImage of evarga/jenkins-slave provisioning successfully completed. We have now 3 computer(s)\r\n```\r\n\r\nv1.1.2 fails:\r\n```\r\nJan 10, 2018 10:43:49 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 10:43:49 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 10:43:49 AM SEVERE com.github.dockerjava.core.async.ResultCallbackTemplate onError\r\nError during callback\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1049308 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:72)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nJan 10, 2018 10:43:49 AM WARNING com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nBad template 'evarga/jenkins-slave' in cloud 'test-swarm': 'object length exceeds 1048576: 1049308 bytes discarded'. Trying next template...\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1049308 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:72)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gamma": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/594", "title": "Jenkins gets stuck when there are no resources to schedule a container", "body": "\r\nIf you get some troubles with docker-plugin, please report\r\n - [ x ] docker-plugin version you use: **1.1+**\r\n - [ x ] jenkins version you use: **2.96**\r\n - [ x ] docker engine version you use: **Version = swarm/1.2.6, API Version = 1.22**\r\n - [ ] stack trace / logs / any technical details that could help diagnose this issue\r\n\r\nI have my docker cloud images configured to only spawn 5 to 10 instances max. There are several jobs that start 5+ jobs at once. The first jobs get started until the limit is reached and Jenkins would wait for resources being available.\r\n\r\nStarting with docker-plugin 1.1 this does not work as expected. The jobs get stuck. Even stopping and starting new jobs manually does not work, only a restart of Jenkins.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spbkelt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/581", "title": "java.io.IOException: Read end dead permanently - master disconnects docker attached agents", "body": "jenkins: 2.73.3\r\ndocker-plugin: 1.0.4\r\n\r\nWe are facing constantly issue with disconnecting master -> agent\r\n\r\n```\r\nCannot contact DLB1-68a3142a64ab: java.io.IOException: remote file operation failed: /home/jenkins/workspace/FirstRain Projects/RC Builds/Tools@2/tools/parent_tools at hudson.remoting.Channel@72a90e54:DLB1-68a3142a64ab: java.io.IOException: Read end dead\r\n```\r\n\r\nJenkins master logs:\r\n```\r\nDec 14, 2017 2:45:11 PM INFO hudson.slaves.ChannelPinger$1 onDead\r\nPing failed. Terminating the channel DLB1-68a3142a64ab.\r\njava.io.IOException: Read end dead\r\n\tat java.io.PipedInputStream.checkStateForReceive(PipedInputStream.java:262)\r\n\tat java.io.PipedInputStream.receive(PipedInputStream.java:226)\r\n\tat java.io.PipedOutputStream.write(PipedOutputStream.java:149)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedOutputStream.sendFrame(ChunkedOutputStream.java:93)\r\n\tat hudson.remoting.ChunkedOutputStream.drain(ChunkedOutputStream.java:89)\r\n\tat hudson.remoting.ChunkedOutputStream.write(ChunkedOutputStream.java:58)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedCommandTransport.writeBlock(ChunkedCommandTransport.java:45)\r\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.write(AbstractSynchronousByteArrayCommandTransport.java:45)\r\n\tat hudson.remoting.Channel.send(Channel.java:671)\r\n\tat hudson.remoting.Request.callAsync(Request.java:229)\r\n\tat hudson.remoting.Channel.callAsync(Channel.java:937)\r\n\tat hudson.remoting.PingThread.ping(PingThread.java:106)\r\n\tat hudson.remoting.PingThread.run(PingThread.java:86)\r\n\r\nDec 14, 2017 2:45:11 PM WARNING hudson.remoting.Channel close\r\nHaving to terminate early\r\njava.io.IOException: Read end dead\r\n\tat java.io.PipedInputStream.checkStateForReceive(PipedInputStream.java:262)\r\n\tat java.io.PipedInputStream.receive(PipedInputStream.java:226)\r\n\tat java.io.PipedOutputStream.write(PipedOutputStream.java:149)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedOutputStream.sendFrame(ChunkedOutputStream.java:93)\r\n\tat hudson.remoting.ChunkedOutputStream.drain(ChunkedOutputStream.java:89)\r\n\tat hudson.remoting.ChunkedOutputStream.write(ChunkedOutputStream.java:58)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedCommandTransport.writeBlock(ChunkedCommandTransport.java:45)\r\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.write(AbstractSynchronousByteArrayCommandTransport.java:45)\r\n\tat hudson.remoting.Channel.send(Channel.java:671)\r\n\tat hudson.remoting.Channel.close(Channel.java:1389)\r\n\tat hudson.remoting.Channel.close(Channel.java:1356)\r\n\tat hudson.slaves.SlaveComputer.closeChannel(SlaveComputer.java:731)\r\n\tat hudson.slaves.SlaveComputer.access$800(SlaveComputer.java:96)\r\n\tat hudson.slaves.SlaveComputer$3.run(SlaveComputer.java:649)\r\n\tat jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nDocker container is live and running at the same time\r\n```\r\ndocker ps | grep 68a3142a64ab\r\n68a3142a64ab        ***/ignite/firstrain/jenkins-agent:1.0                               \"/bin/sh\"                23 minutes ago       Up 23 minutes                                                                                                                                                                                                               dreamy_bardeen\r\n```\r\n\r\nI can even connect and run command inside it\r\n```\r\ndocker exec -it 68a3142a64ab bash\r\n[jenkins@68a3142a64ab ~]$ ps aux\r\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\njenkins        1  0.0  0.0  11780  2704 pts/0    Ss+  14:24   0:00 /bin/sh\r\njenkins     1554 19.7  0.0  11784  3056 pts/1    Ss   14:48   0:00 bash\r\njenkins     1572  0.0  0.0  47456  3324 pts/1    R+   14:49   0:00 ps au\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/560", "title": "Add support of CpuQuota in container settings", "body": "You have support of CpuShares, but there is no CpuQuota support. So we are not able to limit cpu resources actually. Can you add it please?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackalsh": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/572", "title": "Migration from 0.16.2 to 1.1 troubleshooting", "body": "We are upgrading docker-plugin from version 0.16.2 to 1.1\r\nAfter upgrade, all current container template configurations from Manage Jenkins -> Configure System just disappeared. Can you please tell me if this is a known issue because of some back incompatibility?\r\nThanks in advance.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mohaijiang": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/554", "title": "can not use jenkins parameter in image label", "body": "![image](https://user-images.githubusercontent.com/3366709/32772331-78c61958-c960-11e7-8c7b-aed45838abfa.png)\r\n\r\n - [x] docker-plugin version 1.04 \r\n![image](https://user-images.githubusercontent.com/3366709/32772159-fcb0b710-c95f-11e7-9f08-112235580afd.png)\r\n\r\n - [x] jenkins version 2.73.3\r\n - [x] docker engine version 1.12.6\r\n - [x] stack trace / logs / any technical details that could help diagnose this issue\r\n```\r\nDocker Build\r\nDocker Build: building image at path /var/lib/jenkins/workspace/nbo-cicd-5.0.0/admin\r\nStep 1 : FROM java:8-jre\r\n\r\n ---> e44d62cf8862\r\n\r\nStep 2 : VOLUME /tmp\r\n\r\n ---> Using cache\r\n\r\n ---> 62d3fda4ed65\r\n\r\nStep 3 : ADD target/nbo-cicd-admin-*-SNAPSHOT.jar app.jar\r\n\r\n ---> 96d41cdccf5b\r\n\r\nRemoving intermediate container 1aeead391387\r\n\r\nStep 4 : ENV JAVA_OPTS \"\"\r\n\r\n ---> Running in 22801adf2401\r\n\r\n ---> 2e7b8006a892\r\n\r\nRemoving intermediate container 22801adf2401\r\n\r\nStep 5 : ENTRYPOINT sh -c java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar\r\n\r\n ---> Running in a24c73924d70\r\n\r\n ---> 5804290e1167\r\n\r\nRemoving intermediate container a24c73924d70\r\n\r\nSuccessfully built 5804290e1167\r\n\r\nTagging built image with registry.one2.newtouch.com:5000/newtouchone-test/nbo-cicd-admin:${BUILD_NUMBER}\r\nERROR: Build step failed with exception\r\ncom.github.dockerjava.api.exception.InternalServerErrorException: {\"message\":\"invalid tag format\"}\r\n\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:109)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nBuild step 'Build / Publish Docker Image' marked build as failure\r\nFinished: FAILURE\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ndeloof": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/549", "title": "introduce composition to define Docker-based Agent", "body": "Jenkins `slave.jar` runtime and remoting protocol introduce significant constraints on the docker image one can use to define a Docker-based build agent.\r\nUsing a pod-like[1] composition one could define a build agent by combining a remoting container with arbitrary docker image (which could not even bundle a JRE), as well as some additional resources like a database, selenium browser, etc.\r\nGrouping a set of containers sharing the same net namespaces, they can access each others as localhost:xx, share volumes, etc. \r\nSee docker-slaves-plugin as a PoC\r\n\r\n[1:] https://kubernetes.io/docs/concepts/workloads/pods/pod/. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5a2a123cd808a9c82d154cbcc22ef906a6a97907", "message": "move back container lifecycle management in template#provisionNode\nJNLP command can be built based on node name\nwe just can\u2019t guess container ID to use it for node name"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/efd14ff05b32c3208a817bccae5495b5b32a2f64", "message": "fix #606 prevent NPE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0708302ed8dcaab2c8c27ae0920f3018512ef8f9", "message": "expose docker related env variables as computer\u2019s environment\nfix #595"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9109ed38359aaeca0850f42cb24527076c95908a", "message": "let user configure registry URL for Auth\nfix #589"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/142b73c13e4e847fd8cd7b16596060823fef954d", "message": "attempt to fix #592"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5628ea225e2c5a4259f70d7eb340d482e40159ec", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e6c593d3342ff5b81d6fed0cad8f7cd94777836c", "message": "[maven-release-plugin] prepare release docker-plugin-1.1.2"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/50eec35a641e16901e503d68ed353e1176eb7bfd", "message": "CI windows node don\u2019t have docker4windows"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b67801b511a394b497c51b26f4fc3341bf217916", "message": "only active when jerkins.version=2.89.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f2f1af6fa08d876b42506ea1cde0cba2c2d02141", "message": "back to 2.60 as minimal requirement"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cf206f152b11a06367e229a07f50f9e150ef0c44", "message": "workaround CommandLauncher missing as we test on 2.89LTS\nthanks to @bulanovk"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9f655140253bae82d7793148eb2eb5754966ef8c", "message": "get test to run on OSX, Windows and Linux\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b9b9d514926bf782177504465576f827f9a37749", "message": "change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8563d678312a9414f1f875bd9df22d8b6e85291e", "message": "made a mistake"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/222be01332a19a5cb0d8793eb5773cd980834ae7", "message": "protect against NPE (#580)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bca9036fb517069165772fcae3996a74114505a1", "message": "Build Action to document container informations (#576)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8f1144fb4982c0c1645d492258136f5735745dd0", "message": "don\u2019t run test relying on docker.sock when platform is Windows"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5de5765a3302b6b1613666a1f4d7340124060e5b", "message": "dead code"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b906c37f0add6a4a44fb4858aa8ff9de0ebeeabe", "message": "revert host key injection (#568)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bb89bd95848b39ba598faa8e563a27465c1e8073", "message": "number executor doesn\u2019t make sense for a \u00ab\u00a0use once\u00a0\u00bb agent"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/57978e7583b69ed05f039599a05a6f3c63c289e8", "message": "EnvironmentVariablesNodeProperty do not implement `equals()`"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c12a225432da755b5cf99d59dd6c6ce04217d530", "message": "close #553 data binding for NodeProperties"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cb75470432078046f75a89b777e3aedf7a76624d", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/80f3f9ea3b918dff5072084b9e517bf7b5dcca97", "message": "[maven-release-plugin] prepare release docker-plugin-1.1.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0b41fb9a044db8d68fd4e0b4b06269f999a8533f", "message": "change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5547465d601ef4eb032ffa4d2d95f38b6e082982", "message": "test JNLP and Attach connector"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/263964f1dc89bee80e63b541db62fddb015ba2f3", "message": "acceptance test for SSH connector"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3761e475dcb2249102e1261f1c2e89592a2c35d2", "message": "ui data binding doesn\u2019t use configured propertydecriptor and need to know target type"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dtothefp": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/491", "title": "bad Volumes Option UX, require multiline input", "body": "Potentially similar to https://github.com/jenkinsci/docker-plugin/issues/206 but wanted to isolate this issue and see if I'm missing something with how the \"Volumes\" options works under the \"Container Settings\" menu.\r\n\r\nI'm running a Jenkins Master using the official [Jenkins Docker image](https://hub.docker.com/_/jenkins/). I'm bind mounting the docker socket into the Jenkins docker container as suggested here https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/:\r\n\r\n```yaml\r\nversion: \"2.1\"\r\nservices:\r\n  jenkinsdata:\r\n    build: ${DATA_CONTAINER}\r\n  jenkinsmaster:\r\n    build: ${MASTER_CONTAINER}\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n      - ${DOCKER_BIN:-/usr/bin/docker}:/usr/bin/docker\r\n    volumes_from:\r\n      - jenkinsdata\r\n    ports:\r\n      - \"50000:50000\"\r\n  jenkinsnginx:\r\n    build: ${NGINX_CONTAINER}\r\n    ports:\r\n      - \"80:80\"\r\n    links:\r\n      - jenkinsmaster:${MASTER_CONTAINER}\r\n```\r\nThis works fine for using `docker` commands within builds running on master.\r\n\r\nNow, I've switched to running jobs on a slave server using the Jenkins docker-plugin using the `evarga-jenkins-slave` image.\r\n\r\n<img width=\"1513\" alt=\"screen shot 2017-05-08 at 11 53 00 am\" src=\"https://cloud.githubusercontent.com/assets/4656726/25820098/064a4c5c-33e5-11e7-9311-91d27d88c143.png\">\r\n\r\nA simple freestyle build works fine on the slave, but bind mounting the docker socket into the slave container using the \"Volumes\" option under \"Container Settings\" does not seem to work if I do `which docker` in the build it fails. Maybe there is something I don't understand about mounting volumes in the docker slave or am passing config incorrectly?\r\n\r\n#### Jenkins Version\r\n```\r\n2.32.2\r\n```\r\n\r\n#### Docker Version\r\n```\r\nClient:\r\n Version:      1.13.1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.1\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n#### Plugins\r\n```\r\ndocker-workflow:1.10\r\nmailer:1.20\r\nworkflow-job:2.10\r\ngit:3.2.0\r\nant:1.4\r\npam-auth:1.3\r\npipeline-graph-analysis:1.3\r\nauthentication-tokens:1.3\r\nssh-credentials:1.13\r\nbuild-timeout:1.18\r\nmatrix-auth:1.4\r\nws-cleanup:0.32\r\npipeline-stage-tags-metadata:1.1.2\r\ncredentials-binding:1.11\r\nssh-agent:1.14\r\nstructs:1.6\r\ngithub:1.26.2\r\nhandlebars:1.1.1\r\npipeline-milestone-step:1.3.1\r\npipeline-rest-api:2.6\r\nworkflow-support:2.14\r\nrebuild:1.25\r\ncredentials:2.1.13\r\nworkflow-aggregator:2.5\r\nbouncycastle-api:2.16.1\r\ngithub-api:1.85\r\nace-editor:1.1\r\nexternal-monitor-job:1.7\r\ngithub-branch-source:2.0.5\r\nicon-shim:2.0.3\r\ngradle:1.26\r\nwindows-slaves:1.3.1\r\nresource-disposer:0.6\r\njunit:1.20\r\nantisamy-markup-formatter:1.5\r\nmapdb-api:1.0.9.0\r\ngithub-organization-folder:1.6\r\nldap:1.14\r\ndocker-commons:1.6\r\njquery-detached:1.2.1\r\nworkflow-step-api:2.9\r\nworkflow-cps:2.29\r\npipeline-model-api:1.1.2\r\nworkflow-durable-task-step:2.10\r\ngit-client:2.4.1\r\npipeline-input-step:2.5\r\nmatrix-project:1.9\r\npipeline-stage-view:2.6\r\nemail-ext:2.57.1\r\nworkflow-basic-steps:2.4\r\nscript-security:1.27\r\ntoken-macro:2.1\r\npipeline-stage-step:2.2\r\nscm-api:2.1.1\r\ndurable-task:1.13\r\ntimestamper:1.8.8\r\npipeline-model-extensions:1.1.2\r\npipeline-build-step:2.4\r\nworkflow-cps-global-lib:2.7\r\npipeline-model-definition:1.1.2\r\ncloudbees-folder:6.0.3\r\nworkflow-api:2.12\r\nssh-slaves:1.16\r\nbranch-api:2.0.8\r\npipeline-github-lib:1.0\r\npipeline-model-declarative-agent:1.1.1\r\nmomentjs:1.1.1\r\nworkflow-multibranch:2.14\r\nplain-credentials:1.4\r\nworkflow-scm-step:2.4\r\ngit-server:1.7\r\nghprb:1.35.0\r\nsubversion:2.7.2\r\ndocker-plugin:0.16.2\r\ndisplay-url-api:1.1.1\r\n```\r\n\r\n#### config.xml\r\n```xml\r\n  <clouds>\r\n    <com.nirima.jenkins.plugins.docker.DockerCloud plugin=\"docker-plugin@0.16.2\">\r\n      <name>docker</name>\r\n      <templates>\r\n        <com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n          <configVersion>2</configVersion>\r\n          <labelString>docker-slave</labelString>\r\n          <launcher class=\"com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher\">\r\n            <sshConnector plugin=\"ssh-slaves@1.16\">\r\n              <port>22</port>\r\n              <credentialsId>JenkinsDockerSlave</credentialsId>\r\n              <jvmOptions></jvmOptions>\r\n              <javaPath></javaPath>\r\n              <maxNumRetries>0</maxNumRetries>\r\n              <retryWaitTime>0</retryWaitTime>\r\n              <sshHostKeyVerificationStrategy class=\"hudson.plugins.sshslaves.verifiers.KnownHostsFileKeyVerificationStrategy\"/>\r\n            </sshConnector>\r\n          </launcher>\r\n          <remoteFsMapping></remoteFsMapping>\r\n          <remoteFs>/home/jenkins</remoteFs>\r\n          <instanceCap>1</instanceCap>\r\n          <mode>EXCLUSIVE</mode>\r\n          <retentionStrategy class=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">\r\n            <idleMinutes>10</idleMinutes>\r\n            <idleMinutes defined-in=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">10</idleMinutes>\r\n          </retentionStrategy>\r\n          <numExecutors>1</numExecutors>\r\n          <dockerTemplateBase>\r\n            <image>dfp/jenkins-slave</image>\r\n            <dockerCommand></dockerCommand>\r\n            <lxcConfString></lxcConfString>\r\n            <hostname></hostname>\r\n            <dnsHosts/>\r\n            <network></network>\r\n            <volumes>\r\n              <string>/var/run/docker.sock:/var/run/docker.sock /usr/bin/docker:/usr/bin/docker</string>\r\n            </volumes>\r\n            <volumesFrom2/>\r\n            <environment/>\r\n            <bindPorts></bindPorts>\r\n            <bindAllPorts>false</bindAllPorts>\r\n            <privileged>false</privileged>\r\n            <tty>false</tty>\r\n            <extraHosts class=\"java.util.Collections$UnmodifiableRandomAccessList\" resolves-to=\"java.util.Collections$UnmodifiableList\">\r\n              <c class=\"list\"/>\r\n              <list reference=\"../c\"/>\r\n            </extraHosts>\r\n          </dockerTemplateBase>\r\n          <removeVolumes>false</removeVolumes>\r\n          <pullStrategy>PULL_LATEST</pullStrategy>\r\n        </com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n        <com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n          <configVersion>2</configVersion>\r\n          <labelString>docker-slave-evarga</labelString>\r\n          <launcher class=\"com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher\">\r\n            <sshConnector plugin=\"ssh-slaves@1.16\">\r\n              <port>22</port>\r\n              <credentialsId>JenkinsDockerSlave</credentialsId>\r\n              <jvmOptions></jvmOptions>\r\n              <javaPath></javaPath>\r\n              <maxNumRetries>0</maxNumRetries>\r\n              <retryWaitTime>0</retryWaitTime>\r\n              <sshHostKeyVerificationStrategy class=\"hudson.plugins.sshslaves.verifiers.KnownHostsFileKeyVerificationStrategy\"/>\r\n            </sshConnector>\r\n          </launcher>\r\n          <remoteFsMapping></remoteFsMapping>\r\n          <remoteFs>/home/jenkins</remoteFs>\r\n          <instanceCap>1</instanceCap>\r\n          <mode>EXCLUSIVE</mode>\r\n          <retentionStrategy class=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">\r\n            <idleMinutes>10</idleMinutes>\r\n            <idleMinutes defined-in=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">10</idleMinutes>\r\n          </retentionStrategy>\r\n          <numExecutors>1</numExecutors>\r\n          <dockerTemplateBase>\r\n            <image>evarga/jenkins-slave</image>\r\n            <dockerCommand></dockerCommand>\r\n            <lxcConfString></lxcConfString>\r\n            <hostname></hostname>\r\n            <dnsHosts/>\r\n            <network></network>\r\n            <volumes>\r\n              <string>/var/run/docker.sock:/var/run/docker.sock /usr/bin/docker:/usr/bin/docker</string>\r\n            </volumes>\r\n            <volumesFrom2/>\r\n            <environment/>\r\n            <bindPorts></bindPorts>\r\n            <bindAllPorts>false</bindAllPorts>\r\n            <privileged>false</privileged>\r\n            <tty>false</tty>\r\n            <extraHosts class=\"java.util.Collections$UnmodifiableRandomAccessList\" resolves-to=\"java.util.Collections$UnmodifiableList\">\r\n              <c class=\"list\"/>\r\n              <list reference=\"../c\"/>\r\n            </extraHosts>\r\n          </dockerTemplateBase>\r\n          <removeVolumes>false</removeVolumes>\r\n          <pullStrategy>PULL_LATEST</pullStrategy>\r\n        </com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n      </templates>\r\n      <serverUrl>tcp://<my_ip>:4243</serverUrl>\r\n      <connectTimeout>5</connectTimeout>\r\n      <readTimeout>15</readTimeout>\r\n      <version></version>\r\n      <credentialsId></credentialsId>\r\n      <containerCap>5</containerCap>\r\n    </com.nirima.jenkins.plugins.docker.DockerCloud>\r\n  </clouds>\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jstarcher": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/475", "title": "Long running tasks without output causes build to get stuck", "body": "Actual:\r\nJenkins job that uses fabric to run an indexing command which takes several minutes to complete and does not have any output until finished causes build to get stuck and never finishes even after the fabric script finishes on the destination node.\r\n\r\nExpected:\r\nJenkins job that uses fabric to run an indexing command which takes several minutes to complete and does not have any output until finished should not get stuck.\r\n\r\nPlugin version: 0.16.2\r\n\r\nDocker info:\r\n```\r\nContainers: 10\r\n Running: 9\r\n Paused: 0\r\n Stopped: 1\r\nImages: 21\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 136\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: n8groekak3pju1jqjc2uvph4v\r\n Is Manager: true\r\n ClusterID: dm96j4qo4h9zdnj8kdeheb01q\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.0.100\r\n Manager Addresses:\r\n  192.168.0.100:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-59-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 31.42 GiB\r\nName: ubuntu\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\nOnly thing relevant in the jenkins job:\r\n```\r\nFeb 11, 2017 3:24:02 AM INFO hudson.model.Run execute\r\nMPJ Update Index #11 aborted\r\njava.lang.InterruptedException\r\n\tat java.lang.Object.wait(Native Method)\r\n\tat hudson.remoting.Request.call(Request.java:147)\r\n\tat hudson.remoting.Channel.call(Channel.java:821)\r\n\tat hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:256)\r\n\tat com.sun.proxy.$Proxy95.join(Unknown Source)\r\n\tat hudson.Launcher$RemoteLauncher$ProcImpl.join(Launcher.java:1029)\r\n\tat hudson.tasks.CommandInterpreter.join(CommandInterpreter.java:154)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:108)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:65)\r\n\tat hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:779)\r\n\tat hudson.model.Build$BuildExecution.build(Build.java:205)\r\n\tat hudson.model.Build$BuildExecution.doRun(Build.java:162)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:534)\r\n\tat hudson.model.Run.execute(Run.java:1728)\r\n\tat hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)\r\n\tat hudson.model.ResourceController.execute(ResourceController.java:98)\r\n\tat hudson.model.Executor.run(Executor.java:404)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Noodle05": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/464", "title": "Create/start slave docker container and attach to specific network?", "body": "Hi,\r\n\r\nWe have a requirement like this:\r\n\r\nOur product will depend on many other services like cache server, dataserver and so on. And we want to use docker-compose to config/organize environment for each test, so each test will have their own environment.\r\n\r\nThe idea is: use docker-compose to prepare network, volumes and service dockers. And then use jenkin's docker-plugin to start slave docker, attache to docker-compose created network, build and run test in slave.\r\n\r\nMy question is: How/where I can specify network in jenkins slave docker. Any idea?\r\n\r\nThanks\r\n\r\nNoodle ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupbeheer": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/413", "title": "Start/Stop Docker containers build step 'Run Container' multiple environment properties", "body": "There is no possiblity to add multiple environment properties to the \"Run Container\" build step. The split is done based on \"\\n\" but there is only the option to put in one line. \nIn the Template settings there is an option to \"expand\" the \"environment\" input field to a textarea. This should also be possible within the 'Start/Stop Docker container' build step 'Run Container'.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "farahfa": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/401", "title": "Containers sometimes don't get removed after job is done", "body": "Hello,\n\nFrom time to time, I notice that there are a lot of containers that aren't removed after the job is done, is there an explanation as to why that happens? Is it a bug or am I missing something? When I do docker rm $(docker ps -a -q) and remove the containers and then run a bunch of jobs, then it works as expected.\n\nFadi\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "encodeering": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/400", "title": "a configurable retry delay for the connection check would be nice", "body": "the default is set to 2 seconds, which doesn't seem to fit the environment on a pi, as it always exceeds this limit\n\n`Jun 05, 2016 9:06:58 AM com.nirima.jenkins.plugins.docker.utils.PortUtils$ConnectionCheckSSH execute\nSEVERE: Failed to connect to 172.17.0.1:32775 (try 8/60) - The kexTimeout (2000 ms) expired.`\n\nthe container is definitly running and a manual connectable on the mentioned port. it simply takes some time to get it working\n\n`INFO: Launching computer docker-cloud-90ee7c5574ec as it has been in demand for 7 min 33 sec\nSSH Launch of docker-cloud-90ee7c5574ec on 172.17.0.1 completed in 44,797 ms`\n\nwould be nice to have a configuration here, as it works much better on different platforms (amd64) - of course, equipped with better hardware components\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexpenev-s": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/392", "title": "Non descriptive error messages", "body": "Hello,\nUnder Provision & Start Container - please consider:\n1. Template ID - is confusing as to this is the image ID/Tag; one might try to put an index here as templates are defined in the UI. Maybe rename to: Image ID/Tag\n2. The error message for not finding a Template ID is 'java.lang.NullPointerException' - this is not useful if you have to find what is wrong within the whole configuration. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/392/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "witokondoria": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/362", "title": "Allow configuration of Volume plugins", "body": "Related to https://github.com/docker-java/docker-java/issues/329, the plugin should allow to configure a volume plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kummerer94": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/338", "title": "Binding slaves to a job", "body": "Hey everyone,\n\nI like this plugin very much, it takes away so much work and the newest versions provision and tear down slaves very smoothly.\n\nI want to add a use-case to this issue. However, I don't know whether this is actually possible using the Jenkins API:\n\nIf I want to make the workspace of a job in Jenkins available to the slaves, I have to mount the whole workspace of all jobs into the container.\n\nWe want to have a similar functionality like the CloudBees Docker Custom Build Environment provides. But, since the plugin poorly handles the startup of the job (not everything is run inside of the container), we can't and won't use it. (Also, you can't configure every option like --add-host, etc.) We need to start a slave for a specifiy job and after that job is finished the slave is torn down.\n\nThus, the slave's lifecycle is bound to the job's. The goal of this is to be able to use the Jenkins Job environment (at least the core variables, like JOB_NAME) during startup. This would allow us to only mount job specific directories and solve the issue of mounting the whole workspace.\n\nInstead of adding a lot of slave configurations (which can only be done in the Jenkins global configuration) it would be easy to make some of this configuration generic using these build variables. For example, you could pull a specific tag of an image based on the job that's running. Of course, you wouldn't have to mount all job directories into the container.\n\nAs a first step, it would be great to know whether this is actually possible. Can you access the build environment (or at least the job name?) before the slave is actually provisioned?\n\nHope to hear your feedback,\nAlex\n\nNote: This issues originated in #325.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IntelBob": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/334", "title": "Option to limit container launch attempts upon failure", "body": "If Jenkins fails to launch a container say due to a SSH error, it'll keep retrying until it exhausts the container cap value. It'll only stop when the job is canceled. This is a problem if there are multiple jobs using the same Docker cloud and may not be able to launch containers. It'll be great if there is docker plugin option to limit number of attempts to launch a container if Jenkins fails to launch it on first try. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samrocketman": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/242", "title": "Docker builds do not work with matrix project plugin", "body": "When launching a build for a matrix project the job stays infinitely waiting on slaves and the docker plugin does not spin up any containers. I have published scripts which automatically generate a matrix build job if you wish to test this.\n\nhttps://github.com/samrocketman/jenkins-bootstrap-jervis\n1. export a GitHub API token.\n2. Provision a jenkins instance with `./jervis_bootstrap.sh`\n3. When Jenkins is up press the build botton on \"Generate Jenkins job from YAML\" and generate the project `samrocketman/jervis`.\n4. Visit \"GitHub Organizations\" tab and see the jervis-master job for a working builder.\n5. Configure the docker plugin and update the samrocketman/jervis-master Jenkins job to use a docker slave.\n\nYou'll notice that it just stays infinitely in the queue because jobs never appear.\n\nDuplicate issue here: https://issues.jenkins-ci.org/browse/JENKINS-28661\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "larsskj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fc1d4139d6eea2a3ffbc52739876619f338d1623", "message": "Option format for SSHD changed."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pjdarton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/609", "title": "Tidy up imports", "body": "The java code has accumulated a lot of import statements over the years, many of which have been made unnecessary by subsequent code changes.  This makes my IDE unhappy with lots of warnings all over the place.\r\nThis change removes all the imports that my IDE deemed unnecessary.\r\nNo functional changes were made to any of the code.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "laenzlinger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/497", "title": "JENKINS-45266: Support for setting shared memory size (--shm-size) for docker slaves", "body": "For our use case we would like to increase the shared memory size of the containers started by the docker-plugin. The setting is possible via the command line with the option --shm-size.\r\n\r\nThis PR allows to configure the shared memory sized in the jenkins plugin configuration (within the template config)\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kepeket": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/488", "title": "Improve container garbage collection", "body": "Very often, when containers are unexpectedly killed, the plugin keeps tracks of them, preventing Jenkins to pop up additional slaves.\r\n\r\nThis workaround allow the plugin to get the exact amount of containers running by polling the docker api from time to time", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pault28": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/472", "title": "[FIX docker-plugin-407] Make ssh port binding configurable", "body": "- Fix issue #407  - security issue with binding all started containers with 0.0.0.0::port\r\n- This adds an option box that controls how the ssh port is bound when starting the container. Ticking it results in `127.0.0.1:32770->22/tcp`.\r\nDefault  and current behaviour (not ticking) is `0.0.0.0:32770->22/tcp`\r\n- related to fix for #20\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/jenkinsci/docker-plugin/472)\n<!-- Reviewable:end -->\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amerkel2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/440", "title": "Fix reading of network settings from docker.", "body": "This pull request fixes https://issues.jenkins-ci.org/browse/JENKINS-38135 by reading the container's IP address from the `network` map of the container settings instead of using the deprecated top-level `IPAddress` field in case a custom network is defined for the docker template.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eaglerainbow": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/426", "title": "[FEATURE] Docker Watchdog Async Periodic Work", "body": "As being discussed in\nhttps://github.com/jenkinsci/docker-plugin/issues/401, there seems to be\nissues with containers which are not cleaned up properly. Therefore, a\nWatchdog-like periodic work instance is being introduced, which verifies\nthe consistency of the containers which are reported to be running on\nthe docker server (and were provisioned by the current Jenkins instance)\ncompared with the slaves attached to the current Jenkins instance.\nMoreover, containers which have exited, but have not been removed yet,\nare reported.\n\nSo far, only reports to the logs are being generated. After further\nanalysis on the issue has been performed, there is the intention to also\ntrigger clean up commands to the docker server, fixing container leaks.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jcsirot": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/168", "title": "Add the possibility to choose the image repository and tag when commited", "body": "This patch adds 2 fields to customize the repository and tag when the docker image is commited. When these fields are left empty the default values are used (i.e. the job name for the repository and the build name for the tag).\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rskang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/132", "title": "Commit / tag on failure", "body": "Also shows names as well as IDs in the Build Data section\n\nCode by @djl197 I just merged it onto a more current master\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/jenkinsci/docker-plugin/132)\n\n<!-- Reviewable:end -->\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magnayn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904029", "body": "Can you try the latest version as a snapshot, as this has added the required annotation  ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904278", "body": "I've just rolled a 0.2, which includes a fix for this. Can you try it and get back to me?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904291", "body": "Actually, it should be fixed in 0.2 release; can you try it and let me know if it works?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34073446", "body": "Hm - I think it's just an annotation required.\n\nthe forked docker-java code is here:\nhttps://github.com/magnayn/docker-java\n\nOught to be a relatively easy fix..\n\nOn Tue, Feb 4, 2014 at 1:28 PM, andrewcooke-isti\nnotifications@github.comwrote:\n\n> running mvn install in a copy cloned from git gives:\n> \n> [ERROR] Failed to execute goal on project docker-plugin: Could not resolve dependencies for project com.nirima:docker-plugin:hpi:0.3-SNAPSHOT: Could not find artifact com.kpelykh:docker-java:jar:0.6.1-nm-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n> \n> please provide instructions if you want me to test this further.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34058712\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34073446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34077402", "body": "I think you need\n\n@DataBoundConstructor\n\non the constructor of DockerComputerLauncher\n\nI don't know why your instance needs this and mine doesn't, however!\n\nOn Tue, Feb 4, 2014 at 4:20 PM, andrewcooke-isti\nnotifications@github.comwrote:\n\n> nope.\n> \n> i built docker-java from the repo you linked to above (i had to use\n> -DskipTests) and then built docker-plugin and installed the hpi file.\n> \n> then when i try to add a node (after specifying number of executors and FS\n> root) i see\n> \n> javax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n>     at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n>     at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n>     at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n>     at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n>     at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n>     at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n>     at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n>     at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n>     at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n>     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n>     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n>     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n>     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n>     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n>     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n>     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n>     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n>     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n>     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n>     at org.eclipse.jetty.server.Server.handle(Server.java:370)\n>     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n>     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n>     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n>     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n>     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n>     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n>     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n>     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n>     at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n>     at java.lang.Thread.run(Thread.java:744)\n> Caused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n>     at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>     at java.lang.reflect.Method.invoke(Method.java:606)\n>     at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n>     at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n>     at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n>     at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n>     at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n>     ... 46 more\n> Caused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n>     at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n>     ... 57 more\n> Caused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n>     at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n>     ... 60 more\n> Caused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n>     ... 62 more\n> Caused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n>     at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n>     at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n>     ... 64 more\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34076654\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34077402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/35803257", "body": "Think this should now be fixed - feel free to reopen if you see it again.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/35803257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808727", "body": "It's not so hard to 'git clone && mvn -DskipTests clean install'.\n\nIf Sonatype's snapshot repository is anything like as cumbersome as the release repo, I won't be doing that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808871", "body": "Well, words eaten, it isn't painful at all.\n\nSNAPSHOT deployed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290337", "body": "I'm firewalled, so I can't access :8081 so it won't upload.\n\nFWIW, I never use the release plugin. It causes unending misery when it fails - which is always!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309044", "body": "I have released and tagged a beta-1. As long as there's only one, there are\nno problems.\n\nI frankly don't care for maven-release-plugin, and I rather suspect it\nwon't work anyway (certainly versions:set doesn't). Plugins need to be\nparented from the Jenkins pom, but the shaded dependency jar cannot be,\notherwise you get a whole load of wrongness in that artifact. Feel free to\ntry however!\n\nOn Thu, Mar 19, 2015 at 7:01 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> the same request https://issues.jenkins-ci.org/browse/JENKINS-26517\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/c8b893c38b81aadc724b544357c344e584a6773b#commitcomment-10292510\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10513414", "body": "Because it works!\n\nOn Tue, Mar 31, 2015 at 11:11 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> Why do you copy everything from jclouds?!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10506696\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10513414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "lfryc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33914236", "body": "Hey @magnayn thanks for quick response.\n\nI can no longer reproduce the issue above with 0.2 release! Thanks.\nDoes it mean the issue I have linked isn't actually relevant to this one?\n\n---\n\nDuring testing I have also caught this issue: https://github.com/jenkinsci/docker-plugin/issues/3\nwhich seems not to be relevant.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33914236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewcooke-isti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34056407", "body": "i updated to 0.2 and it still crashes:\n\n```\njavax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n    at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n    at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n    ... 57 more\nCaused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 60 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n    ... 62 more\nCaused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n    at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 64 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34056407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34058712", "body": "running `mvn install` in a copy cloned from git gives:\n\n```\n[ERROR] Failed to execute goal on project docker-plugin: Could not resolve dependencies for project com.nirima:docker-plugin:hpi:0.3-SNAPSHOT: Could not find artifact com.kpelykh:docker-java:jar:0.6.1-nm-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n```\n\nplease provide instructions if you want me to test this further.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34058712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34076654", "body": "nope.\n\ni uninstalled the plugin, restarted, built docker-java from the repo you linked to above (i had to use `-DskipTests`) and then built docker-plugin and installed the hpi file.\n\nthen when i try to add a node (after specifying number of executors and FS root) i see\n\n```\njavax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n    at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n    at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n    ... 57 more\nCaused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 60 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n    ... 62 more\nCaused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n    at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 64 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34076654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34085462", "body": "i haven't changed from the version i gave in the top post (1.549).\n\nand yes, i agree that the error message says that i need @DataBoundConstructor on the constructor of DockerComputerLauncher - i thought that was what was applied in 0.2 or trunk.  why did you ask me to build / try those if they didn't have that?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34085462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34086914", "body": "adding @DataBoundConstructor gives a new compile time error about @Target.  i don't have time to understand this code; it's going to be quicker for me to replace your plugin with a script.  happy to provide more details on the install if you need them, but won't be compiling more test code for a while.  sorry.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34086914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rws-github": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34079064", "body": "Odd, the DockerComputerLauncher does not need to be constructed by JSON. It\nshould be created by the DockerTemplate during provisioning. What version\nof Jenkins are you using? I'm on 1.549.\n\nOn Tue, Feb 4, 2014 at 11:26 AM, magnayn notifications@github.com wrote:\n\n> I think you need\n> \n> @DataBoundConstructor\n> \n> on the constructor of DockerComputerLauncher\n> \n> I don't know why your instance needs this and mine doesn't, however!\n> \n> On Tue, Feb 4, 2014 at 4:20 PM, andrewcooke-isti\n> notifications@github.comwrote:\n> \n> > nope.\n> > \n> > i built docker-java from the repo you linked to above (i had to use\n> > -DskipTests) and then built docker-plugin and installed the hpi file.\n> > \n> > then when i try to add a node (after specifying number of executors and\n> > FS\n> > root) i see\n> > \n> > javax.servlet.ServletException: java.lang.RuntimeException: Failed to\n> > instantiate class hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProper\n> > ties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n> > at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n> > at\n> > org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n> > \n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n> > at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n> > at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n> > at\n> > org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n> > \n> > at\n> > hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n> > at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n> > \n> > at\n> > hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n> > at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n> > at\n> > org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n> > \n> > at\n> > org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n> > at\n> > org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n> > at\n> > org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n> > \n> > at org.eclipse.jetty.server.Server.handle(Server.java:370)\n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n> > \n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n> > \n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n> > \n> > at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n> > at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n> > at\n> > org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n> > \n> > at\n> > org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n> > \n> > at\n> > org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n> > \n> > at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n> > at\n> > java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> > \n> > at\n> > java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> > \n> > at java.lang.Thread.run(Thread.java:744)\n> > Caused by: java.lang.RuntimeException: Failed to instantiate class\n> > hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"sta\n> > pler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n> > at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n> > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> > at\n> > sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n> > \n> > at\n> > sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n> > \n> > at java.lang.reflect.Method.invoke(Method.java:606)\n> > at\n> > org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n> > at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n> > at\n> > org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n> > \n> > at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n> > at\n> > org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n> > \n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n> > ... 46 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to instantiate\n> > class hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{&\n> > quot;stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n> > at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n> > ... 57 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to convert the\n> > launcher parameter of the constructor public\n> > hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List)\n> > throws java.io.IOException,hudson.model.Descriptor$FormException\n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n> > at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n> > ... 60 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to instantiate\n> > class hudson.slaves.ComputerLauncher from\n> > {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n> > \n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n> > ... 62 more\n> > Caused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no\n> > @DataBoundConstructor on any constructor of class\n> > com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n> > at\n> > org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n> > \n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n> > at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n> > ... 64 more\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34076654>\n> > \n> > .\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34077402\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34079064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37861910", "body": "To configure Jenkins to use Docker: go to Manage Jenkins and select\nConfigure System. At the bottom of that page, there should be a 'Cloud'\nsection with a drop-down to create a Docker cloud. That should get you\nstarted.\n\nOn Mon, Mar 17, 2014 at 3:15 PM, Erik Kristensen\nnotifications@github.comwrote:\n\n> I got it installed, but I don't see how to tell Jenkins to start the\n> container or use it for the build process?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/6#issuecomment-37858001\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37861910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grimpy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36282835", "body": "Downgraden SSH slaves to version 1.6 (instead of 1.6.1) fixed it\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36282835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vania-pooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36836759", "body": "Works for me. Installed it from Jenkins UI yesterday.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36836759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886313", "body": "It's under Manage Jenkins > Configure System > Cloud > Add a new cloud > Docker. Then you need to specify docker instance label in the build label. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36893979", "body": "I think \"Slave Launchers and Controllers\". It's version is 0.2\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36893979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36902901", "body": "I have two times more links.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36902901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37904400", "body": "You need to check \"Restrict where this project can be run\" checkbox in the build configuration and specify label from the docker configuration in the admin section (there's a field called \"Labels\" there).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37904400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ekristen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36885715", "body": "odd, I'm running the latest jenkins, 1.553, when I search for docker in available plugins all I get is \"docker-build-step\", I've manually scrolled through the list and I've used the search feature. What category is it suppose to be under? Thanks\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36885715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886588", "body": "I'm assuming you have to install a plugin though first? I don't see Cloud under \"Configure System\". I'm definitely not a Jenkin's expert. Thanks for the help.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36887991", "body": "I just looked through pluginManager/available again and there is no entry for this plugin? It is suppose to be there correct? Under which section and with what title?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36887991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36900671", "body": "These are the only options I have under that category. \nhttps://dl.dropboxusercontent.com/u/15809802/Screen%20Shot%202014-03-06%20at%2010.42.03%20AM.png\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36900671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36904243", "body": "Thanks for helping! Once you confirmed that I dug a little more into it, seems that my Jenkins system hadn't updated the plugins properly. All is well now! \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36904243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37858001", "body": "I got it installed, but I don't see how to tell Jenkins to start the container or use it for the build process?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37858001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37862000", "body": "I got that part figured out. Once that is setup, how do you tell a project/build to use it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37862000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kei-yamazaki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/38026822", "body": "I had the same problem.\nDowngraded plugin to 1.6, but it's not work.\nBut, version 1.5 is work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/38026822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mamciek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39317290", "body": "Any chance of fixing this any time soon?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39317290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zloykaban": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39319697", "body": "I have a same problem ! and same work around docker plugin version 0.3, jenkins version 1.556 and 1.557\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39319697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262917", "body": "You need not (and should not) declare a dependency on `jenkins-core` from a plugin POM. It is implied by the parent POM.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262941", "body": "Not using `maven-release-plugin`?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6263007", "body": "This makes the plugin unavailable for LTS users, greatly limiting its usefulness for a while. Can you test with Java 7 for the time being? Or use 1.554.1 as the baseline, which contains a backported fix of [JENKINS-18537](https://issues.jenkins-ci.org/browse/JENKINS-18537)?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6263007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7806571", "body": "By the way this change (and c4f11e72a3167bfe183c7a70461decbc3781468b which requires it) makes it hard for others to build and test dev versions of the plugin from the `master` branch. I would suggest either publishing snapshot builds of https://github.com/magnayn/docker-java to the Sonatype snapshot repository (and then using Maven dated snapshot dependencies), or just releasing beta versions of the library when you need to use new features from the Jenkins plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7806571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7807384", "body": "Catching NPE is very dangerous. This has now expanded to a 6-line block and when I try to launch a cloud I just get this message without it being clear that it corresponds to the original problem. Instead explicitly check for this port being absent.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7807384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808005", "body": "Or is it nirima/jDocker you are using?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "thomassuckow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808636", "body": "It uses nirima/jDocker\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23554207", "body": "When amiCap is zero, this if statement causes the containerCap (server maximum) to not be checked. This means an infinite number of containers could be spawned even when the containerCap is set.\n\nAdditionaly this return bypasses the provisoningAmi's counting. which means the count of running slaves will probably be wrong (I believe, I don't fully understand the provisioningAmi's object).\n\nIf it returned false this would be a totally different story because then nothing would be provisioned.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23554207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557424", "body": "In which case it should be `return false;`\n\nThis leads to another issue:\nIn the event an ami has too many instances, the plugin will not look for other images that also satisfy the conditions. When matching labels, it should really be getting a list of templates that are compatible.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557618", "body": "I will wait for @magnayn to weigh in on #142. If this change turns out to be holding up this pull request, I'll move it to another PR (or someone could pull only the first two commits).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8619077", "body": "Why you do this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8619077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9314653", "body": "@magnayn When you do this without real reason you cut thousands of people that uses not the latest version. So please always provide comment why you do update of core dependency. Example, i have 1.565.3 LTS will your plugin work with it, because now i can't use it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9314653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9351065", "body": ":-1: Why this value in minutes?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9351065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353957", "body": "In my case i need seconds, because i can't wait for 5 minutes and plain value is seconds.\nYou can change it to seconds and create readResolve() function that will convert values to new settings.\nAlso add FormValidation https://wiki.jenkins-ci.org/display/JENKINS/Form+Validation for this field and help page that will have description.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9354145", "body": "btw, why it string and not long?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9354145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9418947", "body": "New library? What is the difference between old and new?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9418947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419465", "body": "Caused regression https://github.com/jenkinsci/docker-plugin/pull/143\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419493", "body": "@magnayn Could you please next time do it with PR that other people can review?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10288384", "body": "Where is back to -SNAPSHOT state?\nFor releasing beta version you just need run maven-release-plugin and specify beta version. The same as general release, but with -beta1 tail.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10288384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290361", "body": "I can release for you\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290419", "body": "M... you mustn't merge PRs on top of released version. If you want emulate maven-release-plugin you must do second commit with setting release version (==beta1) to new -SNAPSHOT version. Either you have two source states with the same artifact version that is wrong.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292289", "body": "I will fix and release beta2 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292337", "body": "mvn package\n\n```\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project docker-java-shaded: Could not resolve dependencies for project com.nirima:docker-java-shaded:jar:0.9.0-SNAPSHOT: Could not find artifact com.nirima.docker-java:docker-java:jar:1.0.1-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n[ERROR]\n```\n\nHow do you build at all it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292510", "body": "the same request https://issues.jenkins-ci.org/browse/JENKINS-26517\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309081", "body": "@magnayn you may not use release plugin, but you must follow maven versioning rules and logic. Any version without -SNAPSHOT tail must define only one source state.  So you should do 2 commits during release\nI will try locally avoid modules and back to previous source code layout\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10506696", "body": "Why do you copy everything from jclouds?!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10506696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23205854", "body": ":-1: long name environmentsString\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23205854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462119", "body": "This fix seems right\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462171", "body": "This wrong, SNAPSHOT version for not released plugin version is ok, because it needs fixes for functionality.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464401", "body": "Right, then ok\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23553590", "body": ":-1: it looks like a good performance optimization when capacity is zero.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23553590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23556406", "body": "https://github.com/jenkinsci/docker-plugin/pull/142#discussion_r23509336\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23556406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557839", "body": "For templates i have simple patch that allows set the same label for multiple amis.\nAlso, you can't define two instances with the same ami - either fetch of the number running instances wouldn't work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462310", "body": "not only tagged, hash also works.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462390", "body": "Please indicate what is default.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462465", "body": "Is word \"with\" needed here?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462507", "body": "Is it '-p' command?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462563", "body": "Indicate that job name is 'repo' and tag is build number.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462614", "body": "Why choose? Just  \"Docker provider name\"\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462711", "body": "Maybe shorten to \"is allowed to run\" and \"blank - unlimited\". Also what will happen if i enter 0 ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462734", "body": "What if it will be blank?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462853", "body": "maybe \"the location on the Jenkins master where the job workspaces will be mapped from the images using volumes, network shares, etc.\"?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509036", "body": "Then mention it and provide link to documentation. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509336", "body": "I think @magnayn should review and discuss later plugin usability, because now they are not \"user friendly\". If value is integer, that it can't be unlimited. zero must be zero - use case for not removing configuration but disabling it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183206", "body": "Merge to one if?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183270", "body": "Why not call var 'inclusive' or 'exclusive' (depends on what better fit to code)? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ninja-": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8663335", "body": "you didn't provide docker-java with the KeystoreSSLConfig class anywhere :\\\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8663335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "saaadhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353697", "body": "IdleTermination timeout was in minutes already, and IIRC, it did not specify the time unit used in the UI, so I figured I would make this timeout minutes too, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "guilhem": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464363", "body": "`0.10.5` version is released... if we want another one, we may use `0.10.6-SNAPSHOT`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "imasen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476584", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476630", "body": "I'm not a native speaker, but I think it is not needed. Instance is also not correct because it's called container.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477029", "body": "\"Choose\" because the user needs to provide a name, it is not a name already used at for example Docker Host configuration. I changed it to: \" Provide a name for this Docker Cloud\".\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477273", "body": "``` java\n        if(containerCapStr.equals(\"\")) {\n            this.containerCap = Integer.MAX_VALUE;\n        } else {\n            this.containerCap = Integer.parseInt(containerCapStr);\n        }\n```\n\nI found this in DockerCloud.java. If zero, then this Cloud will not be used. So \"The maximum number of containers that this provider is allowed to run\" is correct for Integer.MAX_VALUE and also 0.\n\nI think this could be a bug. What happens, if the numer is below zero?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477651", "body": "I found this:\n\n``` java\n        if (instanceCapStr.equals(\"\")) {\n            this.instanceCap = Integer.MAX_VALUE;\n        } else {\n            this.instanceCap = Integer.parseInt(instanceCapStr);\n        }\n```\n\nThe description above is wrong. In my opionion if it's 0 it should not start Instances on this machine. If it's blank, then it's Integer.MAX_VALUE.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23478039", "body": "Ok.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23478039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}