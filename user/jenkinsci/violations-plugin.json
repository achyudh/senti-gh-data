{"_default": {"1": {"w0rp": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/94", "title": "Violation reports require waiting for other concurrent builds to finish", "body": "Hello there. I have been experiencing this issue with this plug in Jenkins.\n1. Start a build running on Jenkins which takes some time, and produces a violations report.\n2. Start a second build which will finish earlier than the first build.\n3. The second build will not finish until the first build completes.\n\nBecause the violations report cannot be generated, probably do to generating the line charts, until previous builds complete, longer running builds from before can prevent newer builds from completing. If you are using another plugin like GitHub integration, these delays the time taken to get feedback from tests, etc.\n\nIs there some way to disable the line charts for violations report and get violations reports concurrently? So build 3 will be able to finish before build 2? Let me know.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/94/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barnabyaaron": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/92", "title": "Violations failed to install", "body": "java.io.IOException: Failed to dynamically deploy this plugin\n    at hudson.model.UpdateCenter$InstallationJob._run(UpdateCenter.java:1384)\n    at hudson.model.UpdateCenter$DownloadJob.run(UpdateCenter.java:1162)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n    at java.util.concurrent.FutureTask.run(Unknown Source)\n    at hudson.remoting.AtmostOneThreadExecutor$Worker.run(AtmostOneThreadExecutor.java:110)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: java.io.IOException: Failed to install violations plugin\n    at hudson.PluginManager.dynamicLoad(PluginManager.java:509)\n    at hudson.model.UpdateCenter$InstallationJob._run(UpdateCenter.java:1380)\n    ... 5 more\nCaused by: java.io.IOException: Dependency maven-plugin (1.399) doesn't exist\n    at hudson.PluginWrapper.resolvePluginDependencies(PluginWrapper.java:540)\n    at hudson.PluginManager.dynamicLoad(PluginManager.java:499)\n    ... 6 more\n\nI have the Maven Integration plugin ('maven-plugin' version 2.13) installed\n\nIs they any reason this would not install  am I missing something ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IvanAnishchuk": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/91", "title": "Add support for pipeline", "body": "How come that one of the most used plugins doesn't support pipeline/workflow yet?\n\nAbandoned jira ticket: https://issues.jenkins-ci.org/browse/JENKINS-34205\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/91/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomasbjerre": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/88", "title": "Future of this plugin?", "body": "I think this plugin needs a new maintainer. If you want to be one, you can ask for commit access in Jenkins developer mailing list:\nhttps://wiki.jenkins-ci.org/display/JENKINS/Adopt+a+Plugin\n\nI may be interested in being a maintainer. But if so, I would make very big changes in it. My opinion is that the code is just to messy to fix. I will not spend more time [fixing things like this](https://github.com/jenkinsci/violations-plugin/commit/572bc1ce6fd3c7625978ca0c34d8d4ff95e6f8c4), and there is alot of that here.\n\nI would suggest that:\n- A library for parsing static code analasys reports is first developed. I've started [here](https://github.com/tomasbjerre/violations-lib).\n- This plugin should use [analysis-core](https://wiki.jenkins-ci.org/display/JENKINS/Static+Code+Analysis+Plug-ins) to present the results.\n\nAnd replace the current code with that implementation. That would make this plugin much less complex and maintainable.\n\nWhat do you think?\n@ryoichitaniguchi @rsommerard @MensObscura @nbruno @pfhorman @tandibar @wang-xinhong \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/cab7103bd00057c8b97f7b5a2cd4cbb461af6603", "message": "Setting myself as contributor, not developer"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f172b29ba5a23c8181eb8b7242d0ccd8186d0b63", "message": "Using a Supplier for loading FileModel\n\n* Avoids NPE in FileModelProxy.java line 475 #71"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/b8115115e914f12aaf3c9d07b6bdded9dcabf36a", "message": "Printing URL encoded type name in Violations Report\n\n* As reported in PR #73"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/572bc1ce6fd3c7625978ca0c34d8d4ff95e6f8c4", "message": "Refactoring, moving HTML from FileModelProxy to its view"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/3415f17c308f4e81126c3f457658240f4de9ea94", "message": "Reformat"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/78126c6da05851b5262f98083ab3e0209992d47b", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/039ce297692f4a6b21255e27ce563b66e12f95fa", "message": "[maven-release-plugin] prepare release violations-0.8.0-alpha-2"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/296e3d1889a1dbe96ece5574b06cb295c5385d98", "message": "HTML not rendered correctly #70"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/e727084f673648c982e591f07422f4589065be80", "message": "Implementing test cases for ratcheting JENKINS-15248 #56"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c5c3868ce5570b5bdec1a6b9a2505e071f394c28", "message": "Merge github.com:tobiasbaum/violations-plugin #56\n\nConflicts:\n\tsrc/main/java/hudson/plugins/violations/ViolationsPublisher.java"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c1ab5b1dc71a153c068cdbbfcd3cad3e1aead8b2", "message": "Using JenkinsRule instead depricated HudsonTestCase in test cases"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/b7393b987983299cf2b8ffc8e6b83da040f91c60", "message": "Adding CHANGELOG.md"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/7c9bd94f0a1fa3b2c3cba90d6ca6eec7f5f8c976", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/51abff542df8e3531def902a88ce3f96f5b9c0c0", "message": "[maven-release-plugin] prepare release violations-0.8.0-alpha-1"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/06c8efa43698ceb105bbd55ca007989372349ac0", "message": "Adding -Xdoclint:none property\n* mvn javadoc:javadoc fails on Java 8 where doclint is tuned on by default. It fails on generated sources. Javadoc task is run when performing a release."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c74da20e0b4272f09556001b07b4e70028c5a76c", "message": "JENKINS-19260 Allowing empty path in CodenarcParser"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/34527bf81b0623ad9120ceac1b9042f06019a5bf", "message": "JENKINS-19260 Reformatting code before fix"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/a4fe06f210fdd6a4524d3971e0e1a8d1cbad47e7", "message": "Fixing bug, icons for '?' were not displayed"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/06bef1d70a64eb6df8f8b390577f9743ec173fb1", "message": "Merge pull request #69 from tomasbjerre/master\n\nAvoiding crash Maven2, examples now compile, Jenkins 1.580.3"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/1c991520930ff4edcc83af1260de13d0ae001d74", "message": "Avoiding crash when setting Maven2 jobs to unstable in 1.609 #61 JENKINS-28880\n* Avoiding crash when setting Maven2 build to UNSTABLE. By simply catching the IllegalStateException. This is not the final solution. The build will still not be marked as unstable, instead of crashing (FAIL) it will succeed (SUCCESS). Instead of showing no violation results, it will show them.\n* Making the example projects compile\n * Testing example projects in web tests\n* Stepping up Jenkins version to 1.580.3\n* Adding Java 8 to Travis config\n * Using Firefox and Xvfb in Travis CI, HTMLUnit is a bit unpredictable"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f9a64af69a09c33e44256158b24eb69f2601a97f", "message": "Merge pull request #67 from tomasbjerre/master\n\nAdding web test #61"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/464c6d1fdf31e5e40c4e3890a8d1820123078aaf", "message": "Adding web test #61\n* Letting TypeDescriptor handle initialization of all descriptors."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/8902ad12aba65c8b60d111c63a60f8dc3110ab51", "message": "Merge pull request #65 from tomasbjerre/tests\n\nAdding test cases"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/178e1628d5eec96ac57858a6bf2d8bed5ab0ddcd", "message": "Merge pull request #63 from tomasbjerre/master\n\nCleaning up pom.xml preparing for a 0.8.0 alpha release"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f4eed6be475cef6e8d0c21d89670ad4d71dd5fd0", "message": "Cleaning up pom.xml preparing for a 0.8.0 alpha release\n* Adding license, MIT\n* Adding description, taken from the wiki page\n* Extending scm section with URL and TAG\n* Adding myself as developer\n* Stepping up versions of dependencies\n* Setting Java version to 1.6"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/597569af6baa1b95fc420252fdf27a3855fc0617", "message": "Adding test cases #61\n* For FindBugs, Checkstyle, PMD, CPD, CPPLint, CSSLint, PEP8, PerlCritic, PyLint, PyFlakes, XmlLint, Zptlint and Resharper\n* Adding new test util to ease writing test cases\n* Using latest Findbugs and FB-contrib messages\n* Letting Resharper parser report files, even if they dont exist on filesystem. The parser should parse and only parse.\n* Letting CSSLint support both lint and csslint format. It was implemented to support only lint. Would be better to have a Lint type but this makes us backwards compatible. We should probably also add a lint type.\n* Removing the static block from TypeDescriptor. For it to work, the parser descriptors has to load after TypeDescriptor and that is not guaranteed.\n* These tests increases code coverage from 26.6% to 59.4%. They make code more flexible as their input is report-files and config, output is data structures exposed to GUI. They make it clear what input is actually expected by the parsers.\n* Adding Travis CI, it gives more control of build process and can build for all supported JDK:s."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c3e949ba321b9160b3f6e9488ade55e0cdc3a682", "message": "Merge branch 'master' of https://github.com/jfroche/violations-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/0203a0527d7e854427e6a45497e61d09a9276899", "message": "Merge pull request #62 from tomasbjerre/master\n\nMerging PR:s"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/9fca7f5b0a1be1e26fa4701bc819eacb69aa2386", "message": "Some cleaning after merging the PR:s\n* Unresolved merge in pom.xml and index.jelly\n* Duplicate README\n* GendarmeParserTest did not find xml-report files, it was using capital case in resource names"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/a458a16a13b4d80ae954541342ea5d4f9aaf4ad5", "message": "Merge branch 'jslint' of https://github.com/syapse/violations-plugin\n\nConflicts:\n\tsrc/main/java/hudson/plugins/violations/types/jslint/JsLintParser.java"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Naimadnap": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/78", "title": "Improvement Integration with Task Scanner plugin", "body": "Can you add integration in this plugin https://wiki.jenkins-ci.org/display/JENKINS/Task+Scanner+Plugin to make one graph and table in my_jenkins/job/job_title/violations/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/78/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webfeature": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/77", "title": "Several checkstyle reports should not aggregated in one violation report", "body": "Hey,\n\nin our web projects, we are using different technologies (e.g. PHP, JavaScript, SCSS). For each technology we are using a coding standard. The standards are controlled by different tools (e.g. PHP_CodeSniffer, JSCS, SCSSLinter), which generate checkstyle reports.\n\nThe aggregation of these checkstyle reports in the violations plugin is not readable and clearly represented, because different roles (frontend and backend developer) can not find the interesting results in one overview. They have to search for their results in an aggregated report, which mixes different reports.\n\nI think, it make no sense to create a jenkins job for each report. It would be nice to extend the violations-plugin in the following way:\n- The violations-plugin should not offer a fixed number of report types\n- Instead it should be extensible: the user should decide how many reports he want to use\n  - For example: In the configuration menu, the user have a button to add a violation report. He can define a name for the report, which is also used in the graph. He can choose the report type from a dropdown (e.g. checkstyle, csslint, pmd, ...). He can define weather and status of the build and the XML filename pattern.\n\nMy english is not the best, so i hope, i was able to explain my vision in an understandable way. What do you think of my idea?\n\nUnfortunately i'm not a java developer. So i can't adjust the plugin on my own.\n\nBest regards,\nChristian\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/77/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glance-": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/76", "title": "Violations plugin fails on checkstyle Translation missing check", "body": "Checkstyle can run a Translation check, and verify that certain translation property files exists.\n\nWhen one is missing checkstyle outputs:\n\n```\n[ERROR] src/main/resources:[0] (misc) Translation: Properties file 'xx-messages.properties' is missing.\n```\n\nand the corresponding xml looks like:\n\n``` xml\n<file name=\"/xx/trunk/src/main/resources\">\n<error line=\"0\" severity=\"error\" message=\"Properties file &apos;xx-messages.properties&apos; is missing.\" source=\"com.puppycrawl.tools.checkstyle.checks.TranslationCheck\"/>\n</file>\n```\n\nThen the violations plugin tries to read the directory \"/xx/trunk/src/main/resources\" as a file, and craps out:\n\n```\nWARNING: Publisher 'Report Violations' aborted due to exception:\njava.io.IOException: remote file operation failed: /xx at hudson.remoting.Channel@34353fca:xx-03: java.io.FileNotFoundException: /xx/src/test/resources (Is a directory)\n        at hudson.FilePath.act(FilePath.java:987)\n        at hudson.FilePath.act(FilePath.java:969)\n        at hudson.plugins.violations.ViolationsPublisher.perform(ViolationsPublisher.java:74)\n        at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:779)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:726)\n        at hudson.maven.MavenModuleSetBuild$MavenModuleSetBuildExecution.post2(MavenModuleSetBuild.java:1047)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:671)\n        at hudson.model.Run.execute(Run.java:1766)\n        at hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:531)\n        at hudson.model.ResourceController.execute(ResourceController.java:98)\n        at hudson.model.Executor.run(Executor.java:408)\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/76/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrchandan": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/75", "title": "Updating another job's thresholds based on this job", "body": "I use two Jenkins jobs in my project - one for building PRs and the other for building the master branch. I have the violations plugin set up in both the jobs, and both use the recently released ratcheting feature. However, this leads to frequent build failures when PRs compete to fix violations. \n\nFor example, one PR fixes some violations which automatically updates the threshold (say 10 pylint issues fixed out of 130 so now 120 is the new threshold), but the other PR only updates the README but now fails since the new threshold of 120 is lower than the 130 of the codebase on which this commit is based.\n\nIdeally, I would like to disable ratcheting in the merge job and keep it enabled in the master job, but have  the master job post the new thresholds to the merge job on successful build. Does it make sense? Is there a \"right\" way to do this? Is it possible to update the parameters of one Jenkins job from another using the Jenkins Java API, or does it necessitate the use of Jenkins REST API or file IO? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kheremos": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/71", "title": "NPE in FileModelProxy.java line 475", "body": "An error is generated in the Jenkins logs when viewing the details of a violation.\nAdditionally, new projects are not rendering the summary table that displays the trends.\n\nHere is the stack trace:\n\n``` javascript\nJun 30, 2015 3:09:34 PM WARNING hudson.ExpressionFactory2$JexlExpression evaluate\nCaught exception evaluating: it.summaryTable in /job/Tesla/51/violations/file/app/scripts/main.js/. Reason: java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n    at org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n    at org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n    at org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n    at org.apache.commons.jexl.parser.ASTReference.execute(ASTReference.java:83)\n    at org.apache.commons.jexl.parser.ASTReference.value(ASTReference.java:57)\n    at org.apache.commons.jexl.parser.ASTReferenceExpression.value(ASTReferenceExpression.java:51)\n    at org.apache.commons.jexl.ExpressionImpl.evaluate(ExpressionImpl.java:80)\n    at hudson.ExpressionFactory2$JexlExpression.evaluate(ExpressionFactory2.java:74)\n    at org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(ExpressionSupport.java:61)\n    at org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsString(ExpressionSupport.java:46)\n    at org.apache.commons.jelly.tags.core.ExprTag.doTag(ExprTag.java:42)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:99)\n    at org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$1.run(CoreTagLibrary.java:98)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:120)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:99)\n    at org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:120)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:95)\n    at org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:63)\n    at org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:53)\n    at org.kohsuke.stapler.jelly.JellyClassTearOff.serveIndexJelly(JellyClassTearOff.java:112)\n    at org.kohsuke.stapler.jelly.JellyFacet.handleIndexRequest(JellyFacet.java:127)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:735)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:686)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:249)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:649)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:238)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:123)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:114)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.UnwrapSecurityExceptionFilter.doFilter(UnwrapSecurityExceptionFilter.java:51)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at jenkins.security.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:117)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:125)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:142)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:271)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at jenkins.security.BasicHeaderProcessor.doFilter(BasicHeaderProcessor.java:93)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:249)\n    at hudson.security.HttpSessionContextIntegrationFilter2.doFilter(HttpSessionContextIntegrationFilter2.java:67)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:171)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:49)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.DiagnosticThreadNameFilter.doFilter(DiagnosticThreadNameFilter.java:30)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:949)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1011)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at hudson.plugins.violations.render.FileModelProxy.getSummaryTable(FileModelProxy.java:475)\n    ... 133 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/71/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oppianmatt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/59", "title": "pep8 parser to log high severity fatal errors", "body": "Looking at the source of pep8 parser, seems to be only able to set med or low in severity.\n\n```\n    /**\n     * Returns the Severity level as an int from the PEP 8 message type.\n     *\n     * The different message types are W for warning and E for error.\n     * Because these are style guide warnings we set the severity\n     * values lower than what the apparent values would be.\n     *\n     * @param messageType the type of PEP 8 message\n     * @return an int is matched to the message type.\n     */\n    private void setServerityLevel(Violation violation, String messageType) {\n\n        switch (messageType.charAt(0)) {\n            case 'E':\n                violation.setSeverity(Severity.MEDIUM);\n                violation.setSeverityLevel(Severity.MEDIUM_VALUE);\n                break;\n            case 'W':\n            default:\n                violation.setSeverity(Severity.LOW);\n                violation.setSeverityLevel(Severity.LOW_VALUE);\n                break;\n        }\n    }\n```\n\nWould it be possible to add HIGH level for FATAL errors like:\n\n```\nfoo/bar/utils.py:166:11: F821 undefined name 'foo'\n```\n\nSo for ones that start with F, make them high.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/59/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghusse": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/58", "title": "Blank page when accessing to per-file jslint issues", "body": "Hello,\n\nI'm using the violations plugin v0.7.11 on jenkins v1.605 to display jshint violations (in jslint format).\n\nThis plugin is displaying graphs according to violations found by jshint, it works well. Except that when I click on a specific file with violations, all I obtain is a blank page.\n\nThe xml file is generated to a subfolder named `reports`, I tried to generate it directly in the workspace root: no luck.\n\nMy source files are directly in the workspace root, and the xml file contains correct path (from the workspace root).\n\nAny idea?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "s0undt3ch": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/57", "title": "Support the email-ext plugin", "body": "Apparently, all is needed(do note that I don't know the Jenkins internals that well) is implement either `AbstractResultAction` or `MavenResultAction` for the violations to show up in the email-ext email...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/57/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bufferoverflow": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/54", "title": "Feature Request: cppcheck integration", "body": "Would be nice to have an integration of cppcheck within Violations-Plugin.\nToday there is a seperate plugin: https://wiki.jenkins-ci.org/display/JENKINS/Cppcheck+Plugin\nto visualize details, however having cppcheck within the violations graph would be great.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/54/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robvdl": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/51", "title": "Add flake8 support", "body": "I would really like to add flake8 support, flake8 produces an output file that contains both pep8 and pyflakes violations, but in one file.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/51/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "domruf": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/50", "title": "No violations found when opening file on Windows", "body": "When running on windows and you try to open the page .../job/myjob/2/violations/file/path/to/myfile.py/\nyou get \"No violations found\"\n\nThe following patch fixes this.\nBut I don't really know the code and there my be some other places where this problem pops up. So there might be a better place/way to fix this properly.\n\ndiff -r 17567a8c09f2 src/main/java/hudson/plugins/violations/ViolationsReport.java\n--- a/src/main/java/hudson/plugins/violations/ViolationsReport.java Wed Apr 16 20:21:26 2014 +0100\n+++ b/src/main/java/hudson/plugins/violations/ViolationsReport.java Wed May 07 13:59:24 2014 +0200\n@@ -211,7 +211,7 @@\n         if (name.startsWith(\"/\")) {\n             name = name.substring(1);\n         }\n-        FileModelProxy proxy = getFileModelProxy(name);\n-        FileModelProxy proxy = getFileModelProxy(name.replace(\"/\", File.separator));\n       if (proxy != null) {\n           return new RecurDynamic(\n               \"\", name, proxy.build(build).contextPath(req.getContextPath()));\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/50/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elatt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/49", "title": "Don't treat pylint info \"I\" messages as errors", "body": "Pylint has informative \"errors\" which are tagged with I<id>. setServerityLevel() already switches on the different error types. I suggest that \"I\" errors be ignored or at least set to the lowest severity.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/49/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mklauber": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/48", "title": "Allow Jenkins Environment variables in Faux Project Path", "body": "This plugin does not expand environment variables like `${WORKSPACE}` when they are placed in the Faux Project Path.  I'm attempting this because I'm using the capability the git plugin to checkout into a subdirectory of the workspace, and I run all my commands in that subdirectory.  This plugin cannot find the source files when I do so, because the pep8 report doesn't reference that directory.  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/48/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "papaiatis": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/42", "title": "Feature Request: REST API integration", "body": "Hi,\nI've been using this plugin for a while now and our team is thinking about developing a remote monitor service with a dashboard. This dashboard would gather build and code analysis information from multiple sources including Jenkins with Violation plugin. By default, Jenkins support a REST API in different response formats (XML, JSON). However this API is not available under the Violations plugin, for example: http://myjenkins/job/FxCop/4/violations/api/xml.\nIt would be such a great help to make this URL available.\nThank you.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/42/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vglushonkov": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/36", "title": "Plugin uses wrong path for per-file pep8 xml-reports", "body": "Working on Windows\nLaunching pep8 check, it successfully creates XML report, but violations plugin roports error. It seems it uses absolute path somewhere instaed of relative. Please, at least help me to find a direction to look (i downloada the plugin src and trying to find to fix it):\n\n generated xml file: C:\\Jenkins\\jobs\\python-template-2\\workspace\\reports\\pep8.xml \n=============== 91 failed, 33 skipped, 1 error in 1.52 seconds ================\n\nC:\\Jenkins\\jobs\\python-template-2\\workspace>exit 1 \nBuild step '\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 Windows' marked build as failure\nERROR: Publisher hudson.plugins.violations.ViolationsPublisher aborted due to exception\njava.io.FileNotFoundException: C:\\Jenkins\\jobs\\python-template-2\\builds\\2013-10-23_20-03-27\\violations\\file\\C:\\Jenkins\\jobs\\python-template-2\\workspace\\utilities\\capable\\admin.py.xml (Syntax error in filename or path)\n    at java.io.FileOutputStream.open(Native Method)\n    at java.io.FileOutputStream.<init>(Unknown Source)\n    at java.io.FileOutputStream.<init>(Unknown Source)\n    at hudson.FilePath.write(FilePath.java:1642)\n    at hudson.plugins.violations.generate.ExecuteFilePath.execute(ExecuteFilePath.java:42)\n    at hudson.plugins.violations.generate.GenerateXML.execute(GenerateXML.java:47)\n    at hudson.plugins.violations.ViolationsCollector.invoke(ViolationsCollector.java:122)\n    at hudson.plugins.violations.ViolationsCollector.invoke(ViolationsCollector.java:25)\n    at hudson.FilePath.act(FilePath.java:912)\n    at hudson.FilePath.act(FilePath.java:885)\n    at hudson.plugins.violations.ViolationsPublisher.perform(ViolationsPublisher.java:74)\n    at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:781)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:753)\n    at hudson.model.Build$BuildExecution.post2(Build.java:183)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:706)\n    at hudson.model.Run.execute(Run.java:1690)\n    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:46)\n    at hudson.model.ResourceController.execute(ResourceController.java:88)\n    at hudson.model.Executor.run(Executor.java:230)\nFinished: FAILURE\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ilinkuo": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/31", "title": "Feature Request: Errors vs Warnings", "body": "It would be really nice if the violations-plugin could distinguish between warnings and errors. For example, with this output from csslint:\n\n``` xml\n<issue line=\"173\" char=\"192\" severity=\"warning\" reason=\"Use of !important\" evidence=\".tdaVideoPlayer .pageHeader .closeButton{text-decoration:none;text-transform:uppercase;color:#999;font-size:11px;font-family:HelveticaNeueW01-75Bold, Helvetica black, Arial black, sans-serif;font-weight:normal !important;background:url('../../images/icons/pageClose.png') 100% 50% no-repeat;padding-right:18px;display:inline-block;line-height:13px}\"/>\n    <issue line=\"189\" char=\"414\" severity=\"error\" reason=\"Expected RBRACE at line 189, col 414.\" evidence=\".tdaVideoPlayer .videoOverlayLayer.playPauseButton{width:42px;height:42px;margin:auto;top:50%;margin-top:-24px;background:url('../../images/icons/playerHoverPlay.png') 50% 50% no-repeat;filter:'progid:DXImageTransform.Microsoft.Alpha(opacity=50)';-moz-border-radius:50%;-webkit-border-radius:50%;-ms-border-radius:50%;border-radius:50%;opacity:.5;-ms-filter:'progid:DXImageTransform.Microsoft.Alpha(Opacity=(0.5)');filter:alpha(opacity=(0.5))}\"/>\n\n```\n\nThe current tabular output has 5 columns -- filename, l, m, h, number. These columns should be retained, but refer to errors only. A sixth column could be added for \"warnings\". All the existing logic for build failure should depend on the error number only, not the warnings or the total number of violations.\n\nThe chart should show both the total number of violations (errors + warnings) and the errors.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjbush": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/93", "title": "Added basic pipeline support. Very rudimentary still", "body": "This provides very, very basic pipeline support. It needs to be cleaned up, but for anybody wanting to use it, it's here. Usage is:\n\n`step([$class: 'ViolationsPublisher', type: 'fxcop', sunny: 10, stormy: 999, unstable: 999, pattern: '**/outputfile.analysis.xml', autoUpdateStormyThreshold: true, autoUpdateUnstableThreshold: true])`\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "allpha": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/90", "title": "Update jenkins core", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piwai": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/89", "title": "Set severity of Pylint info messages to \"Low\" instead of \"Medium\". Fi\u2026", "body": "\u2026xes issue #49\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryoichitaniguchi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/86", "title": "fixed NPE in FileModelProxy.java", "body": "NPE while handling resources for summary table.\n\nissue: https://github.com/jenkinsci/violations-plugin/issues/71\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rsommerard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/85", "title": "Add util test", "body": "I have run Pitest mutation testing framework on project and add some test which contribute to decrease regression failing.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/84", "title": "Add descriptors test", "body": "I have run Pitest mutation framework on project and see that some points need to be improved in descriptor package to prevent regressions.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MensObscura": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/83", "title": "Adding few tests and detecting issue", "body": "The \"typeCountMap\" Map in the BuildModel class is set in the getTypeCount() method, at the first call, but is never updated then, so if I add a countFile object, the map will not change.\n\nAnd the Equals(...) method in the Supression class is not working. It always returns false.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nbruno": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/82", "title": "Only include path if non-empty on codenarc filenames", "body": "As a result of the fix for JENKINS-19260, an empty path gets appended to the filename of a codenarc file that was in the default package. This results in file paths that have two forward-slashes in them (e.g., `source-dir//Test.groovy`), ultimately causing the UI to not serve these files and show the violations within them. \n\nThis PR checks if the path is empty, and if it is, does not include it in the file path. Also, the test case for this condition has been updated properly. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pfhorman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/81", "title": "Fixing 'no violations found' file links on Windows (Issue #50)", "body": "This is the fix as described in [issue 50](https://github.com/jenkinsci/violations-plugin/issues/50).  I ran across the issue on Jenkins running on Windows server.  The problem is that all the file keys in the FileModelProxy use the file separator for the system (*nix='/', windows='\\'), but the `String name` here comes from `getRestOfPath()` which prefers the url forward slash (which doesn't work for the Windows keys).  To transform the \"rest of path\" to the true file key, we must convert any '/' in the name to the File.separator for the system.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wang-xinhong": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/80", "title": "For the issue with multi-sets of violations reporting", "body": "There should be more than one set of violation,and may lose some reports.wanna fix it this way.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vsviridov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/883446", "body": "Nvm, found it in the testing folder of the source.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/883446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kohsuke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438539", "body": "My apologies for the delay in coming to this pull request. I've merged your changes, since we aren't hearing from the current maintainer.\n\nI've also set you up with the push access so that in the future you won't be blocked by our inattention. Please feel free to make changes like this directly in the master repository.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438545", "body": "Finally, if you can update [Wiki page](https://wiki.jenkins-ci.org/display/JENKINS/Violations) with this change, it'd be greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438603", "body": "My apologies for the delay in coming to this. Since we aren't hearing from the maintainer, I looked at the changes and merged them.\n\nI've also set you up with the push access so that we won't block you in the future. Please feel free to directly collaborate on the master branch.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8348484", "body": "My apologies for the delay. I guess no one is actively maintaining this plugin now and so this pull request fell through the cracks.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8348484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "bocytko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1441689", "body": "This is great news! Thank you kohsuke for merging and push access.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1441689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "peterkittreilly": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753112", "body": "Is the pep8 in the current master?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753328", "body": "Ok, I have made a new release 0.7.10\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9302580", "body": "Looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9302580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "hodgestar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753226", "body": "Yep.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753605", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rogerhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4868288", "body": "Updated.  Is there someone still maintaining this repo?  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4868288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/10807342", "body": "I've noticed that the latest Violations plugin is still https://wiki.jenkins-ci.org/display/JENKINS/Violations from 2012.  Is it possible to get a new tagged release for this repo?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/10807342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196411", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dmcguire81": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4956964", "body": "Is there something else I should do to get this merged?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4956964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5102699", "body": "Sorry we didn't see this in time, but this was fixed already. Thank you,\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5102699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "buildhive": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5385244", "body": "[Jenkins \u00bb violations-plugin #2](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/2/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5385244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9304684", "body": "[Jenkins \u00bb violations-plugin #9](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/9/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9304684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10244852", "body": "[Jenkins \u00bb violations-plugin #17](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/17/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10244852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "noirbizarre": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5977671", "body": "+1\nAny plans to merge it ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5977671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cjo9900": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6738744", "body": "Seems some has already put a pull request in for this, so you could try building you own version with this pull.\n\nhttps://github.com/jenkinsci/violations-plugin/pull/11\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6738744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "davidszotten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758592", "body": "have tried, but it seems building this thing is beyond me at this time. (no real knowledge of java; have followed various tutorials and googled my way past a slew of errors but have had to give up)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6759738", "body": "thank you!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6759738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfroche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758698", "body": "I am still waiting for code to be merged. I have put the corresponding plugin here: https://github.com/downloads/jfroche/violations-plugin/violations.hpi\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tfb-bull": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/7277275", "body": "Definitely need xmllint support !\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/7277275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nwittstruck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8070984", "body": "I'm having the same issue. Maybe it's path related?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8070984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8211300", "body": "Had a bit more time to investigate: The problem is that the path is wrong, it seems to ignore the Project Base Directory set in the project configuration. When I set up a job that does not use the Project Base Directory everything works fine.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8211300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lalberti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8206125", "body": "Commit is good.\nI have confirmed the problem without the patch, and verified that the compile patch does set the severity correctly and doesn't break anything else.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8206125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10412342", "body": "I'm seeing the same as in saily's issue -- I can see the source for my pep8 warnings, but not my jslint ones\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10412342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10413902", "body": "EDIT: actually, Pep8parser overrides getFileModel locally, which explains the differing paramaters\n\nThe main difference I can see is that Pep8Parser does this:\n\n```\nFullFileModel fileModel = getFileModel(model, \n    pep8Violation.getFileName(), \n    absoluteFileFinder.getFileForName(pep8Violation.getFileName()));\n```\n\nwhile JsLintParser does this:\n\n```\nFullFileModel fileModel = getFileModel(absoluteFileName);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10413902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "uhafner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12272222", "body": "Hi, this seem to be an issue with the warnings plug-in (and not the violations plug-in). Can you please file a new Jira bug report (component 'warnings') so this will get attention on my todo list.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12272222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "hashar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12321900", "body": "One might also use the checkstyle reporter of jshint:\n\n```\njshint --checkstyle-reporter . > checkstyle-jshint.xml\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12321900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498279", "body": "The whole `work/` directory should be in `.gitignore`!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498283", "body": "Probably wrong. See https://github.com/jenkinsci/remoting/pull/56.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "daniel-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196384", "body": "Weird indentation\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}}, "2": {"w0rp": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/94", "title": "Violation reports require waiting for other concurrent builds to finish", "body": "Hello there. I have been experiencing this issue with this plug in Jenkins.\n1. Start a build running on Jenkins which takes some time, and produces a violations report.\n2. Start a second build which will finish earlier than the first build.\n3. The second build will not finish until the first build completes.\n\nBecause the violations report cannot be generated, probably do to generating the line charts, until previous builds complete, longer running builds from before can prevent newer builds from completing. If you are using another plugin like GitHub integration, these delays the time taken to get feedback from tests, etc.\n\nIs there some way to disable the line charts for violations report and get violations reports concurrently? So build 3 will be able to finish before build 2? Let me know.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/94/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "barnabyaaron": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/92", "title": "Violations failed to install", "body": "java.io.IOException: Failed to dynamically deploy this plugin\n    at hudson.model.UpdateCenter$InstallationJob._run(UpdateCenter.java:1384)\n    at hudson.model.UpdateCenter$DownloadJob.run(UpdateCenter.java:1162)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n    at java.util.concurrent.FutureTask.run(Unknown Source)\n    at hudson.remoting.AtmostOneThreadExecutor$Worker.run(AtmostOneThreadExecutor.java:110)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: java.io.IOException: Failed to install violations plugin\n    at hudson.PluginManager.dynamicLoad(PluginManager.java:509)\n    at hudson.model.UpdateCenter$InstallationJob._run(UpdateCenter.java:1380)\n    ... 5 more\nCaused by: java.io.IOException: Dependency maven-plugin (1.399) doesn't exist\n    at hudson.PluginWrapper.resolvePluginDependencies(PluginWrapper.java:540)\n    at hudson.PluginManager.dynamicLoad(PluginManager.java:499)\n    ... 6 more\n\nI have the Maven Integration plugin ('maven-plugin' version 2.13) installed\n\nIs they any reason this would not install  am I missing something ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IvanAnishchuk": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/91", "title": "Add support for pipeline", "body": "How come that one of the most used plugins doesn't support pipeline/workflow yet?\n\nAbandoned jira ticket: https://issues.jenkins-ci.org/browse/JENKINS-34205\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/91/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomasbjerre": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/88", "title": "Future of this plugin?", "body": "I think this plugin needs a new maintainer. If you want to be one, you can ask for commit access in Jenkins developer mailing list:\nhttps://wiki.jenkins-ci.org/display/JENKINS/Adopt+a+Plugin\n\nI may be interested in being a maintainer. But if so, I would make very big changes in it. My opinion is that the code is just to messy to fix. I will not spend more time [fixing things like this](https://github.com/jenkinsci/violations-plugin/commit/572bc1ce6fd3c7625978ca0c34d8d4ff95e6f8c4), and there is alot of that here.\n\nI would suggest that:\n- A library for parsing static code analasys reports is first developed. I've started [here](https://github.com/tomasbjerre/violations-lib).\n- This plugin should use [analysis-core](https://wiki.jenkins-ci.org/display/JENKINS/Static+Code+Analysis+Plug-ins) to present the results.\n\nAnd replace the current code with that implementation. That would make this plugin much less complex and maintainable.\n\nWhat do you think?\n@ryoichitaniguchi @rsommerard @MensObscura @nbruno @pfhorman @tandibar @wang-xinhong \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/cab7103bd00057c8b97f7b5a2cd4cbb461af6603", "message": "Setting myself as contributor, not developer"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f172b29ba5a23c8181eb8b7242d0ccd8186d0b63", "message": "Using a Supplier for loading FileModel\n\n* Avoids NPE in FileModelProxy.java line 475 #71"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/b8115115e914f12aaf3c9d07b6bdded9dcabf36a", "message": "Printing URL encoded type name in Violations Report\n\n* As reported in PR #73"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/572bc1ce6fd3c7625978ca0c34d8d4ff95e6f8c4", "message": "Refactoring, moving HTML from FileModelProxy to its view"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/3415f17c308f4e81126c3f457658240f4de9ea94", "message": "Reformat"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/78126c6da05851b5262f98083ab3e0209992d47b", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/039ce297692f4a6b21255e27ce563b66e12f95fa", "message": "[maven-release-plugin] prepare release violations-0.8.0-alpha-2"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/296e3d1889a1dbe96ece5574b06cb295c5385d98", "message": "HTML not rendered correctly #70"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/e727084f673648c982e591f07422f4589065be80", "message": "Implementing test cases for ratcheting JENKINS-15248 #56"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c5c3868ce5570b5bdec1a6b9a2505e071f394c28", "message": "Merge github.com:tobiasbaum/violations-plugin #56\n\nConflicts:\n\tsrc/main/java/hudson/plugins/violations/ViolationsPublisher.java"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c1ab5b1dc71a153c068cdbbfcd3cad3e1aead8b2", "message": "Using JenkinsRule instead depricated HudsonTestCase in test cases"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/b7393b987983299cf2b8ffc8e6b83da040f91c60", "message": "Adding CHANGELOG.md"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/7c9bd94f0a1fa3b2c3cba90d6ca6eec7f5f8c976", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/51abff542df8e3531def902a88ce3f96f5b9c0c0", "message": "[maven-release-plugin] prepare release violations-0.8.0-alpha-1"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/06c8efa43698ceb105bbd55ca007989372349ac0", "message": "Adding -Xdoclint:none property\n* mvn javadoc:javadoc fails on Java 8 where doclint is tuned on by default. It fails on generated sources. Javadoc task is run when performing a release."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c74da20e0b4272f09556001b07b4e70028c5a76c", "message": "JENKINS-19260 Allowing empty path in CodenarcParser"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/34527bf81b0623ad9120ceac1b9042f06019a5bf", "message": "JENKINS-19260 Reformatting code before fix"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/a4fe06f210fdd6a4524d3971e0e1a8d1cbad47e7", "message": "Fixing bug, icons for '?' were not displayed"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/06bef1d70a64eb6df8f8b390577f9743ec173fb1", "message": "Merge pull request #69 from tomasbjerre/master\n\nAvoiding crash Maven2, examples now compile, Jenkins 1.580.3"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/1c991520930ff4edcc83af1260de13d0ae001d74", "message": "Avoiding crash when setting Maven2 jobs to unstable in 1.609 #61 JENKINS-28880\n* Avoiding crash when setting Maven2 build to UNSTABLE. By simply catching the IllegalStateException. This is not the final solution. The build will still not be marked as unstable, instead of crashing (FAIL) it will succeed (SUCCESS). Instead of showing no violation results, it will show them.\n* Making the example projects compile\n * Testing example projects in web tests\n* Stepping up Jenkins version to 1.580.3\n* Adding Java 8 to Travis config\n * Using Firefox and Xvfb in Travis CI, HTMLUnit is a bit unpredictable"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f9a64af69a09c33e44256158b24eb69f2601a97f", "message": "Merge pull request #67 from tomasbjerre/master\n\nAdding web test #61"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/464c6d1fdf31e5e40c4e3890a8d1820123078aaf", "message": "Adding web test #61\n* Letting TypeDescriptor handle initialization of all descriptors."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/8902ad12aba65c8b60d111c63a60f8dc3110ab51", "message": "Merge pull request #65 from tomasbjerre/tests\n\nAdding test cases"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/178e1628d5eec96ac57858a6bf2d8bed5ab0ddcd", "message": "Merge pull request #63 from tomasbjerre/master\n\nCleaning up pom.xml preparing for a 0.8.0 alpha release"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/f4eed6be475cef6e8d0c21d89670ad4d71dd5fd0", "message": "Cleaning up pom.xml preparing for a 0.8.0 alpha release\n* Adding license, MIT\n* Adding description, taken from the wiki page\n* Extending scm section with URL and TAG\n* Adding myself as developer\n* Stepping up versions of dependencies\n* Setting Java version to 1.6"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/597569af6baa1b95fc420252fdf27a3855fc0617", "message": "Adding test cases #61\n* For FindBugs, Checkstyle, PMD, CPD, CPPLint, CSSLint, PEP8, PerlCritic, PyLint, PyFlakes, XmlLint, Zptlint and Resharper\n* Adding new test util to ease writing test cases\n* Using latest Findbugs and FB-contrib messages\n* Letting Resharper parser report files, even if they dont exist on filesystem. The parser should parse and only parse.\n* Letting CSSLint support both lint and csslint format. It was implemented to support only lint. Would be better to have a Lint type but this makes us backwards compatible. We should probably also add a lint type.\n* Removing the static block from TypeDescriptor. For it to work, the parser descriptors has to load after TypeDescriptor and that is not guaranteed.\n* These tests increases code coverage from 26.6% to 59.4%. They make code more flexible as their input is report-files and config, output is data structures exposed to GUI. They make it clear what input is actually expected by the parsers.\n* Adding Travis CI, it gives more control of build process and can build for all supported JDK:s."}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/c3e949ba321b9160b3f6e9488ade55e0cdc3a682", "message": "Merge branch 'master' of https://github.com/jfroche/violations-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/0203a0527d7e854427e6a45497e61d09a9276899", "message": "Merge pull request #62 from tomasbjerre/master\n\nMerging PR:s"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/9fca7f5b0a1be1e26fa4701bc819eacb69aa2386", "message": "Some cleaning after merging the PR:s\n* Unresolved merge in pom.xml and index.jelly\n* Duplicate README\n* GendarmeParserTest did not find xml-report files, it was using capital case in resource names"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/commits/a458a16a13b4d80ae954541342ea5d4f9aaf4ad5", "message": "Merge branch 'jslint' of https://github.com/syapse/violations-plugin\n\nConflicts:\n\tsrc/main/java/hudson/plugins/violations/types/jslint/JsLintParser.java"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Naimadnap": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/78", "title": "Improvement Integration with Task Scanner plugin", "body": "Can you add integration in this plugin https://wiki.jenkins-ci.org/display/JENKINS/Task+Scanner+Plugin to make one graph and table in my_jenkins/job/job_title/violations/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/78/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webfeature": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/77", "title": "Several checkstyle reports should not aggregated in one violation report", "body": "Hey,\n\nin our web projects, we are using different technologies (e.g. PHP, JavaScript, SCSS). For each technology we are using a coding standard. The standards are controlled by different tools (e.g. PHP_CodeSniffer, JSCS, SCSSLinter), which generate checkstyle reports.\n\nThe aggregation of these checkstyle reports in the violations plugin is not readable and clearly represented, because different roles (frontend and backend developer) can not find the interesting results in one overview. They have to search for their results in an aggregated report, which mixes different reports.\n\nI think, it make no sense to create a jenkins job for each report. It would be nice to extend the violations-plugin in the following way:\n- The violations-plugin should not offer a fixed number of report types\n- Instead it should be extensible: the user should decide how many reports he want to use\n  - For example: In the configuration menu, the user have a button to add a violation report. He can define a name for the report, which is also used in the graph. He can choose the report type from a dropdown (e.g. checkstyle, csslint, pmd, ...). He can define weather and status of the build and the XML filename pattern.\n\nMy english is not the best, so i hope, i was able to explain my vision in an understandable way. What do you think of my idea?\n\nUnfortunately i'm not a java developer. So i can't adjust the plugin on my own.\n\nBest regards,\nChristian\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/77/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glance-": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/76", "title": "Violations plugin fails on checkstyle Translation missing check", "body": "Checkstyle can run a Translation check, and verify that certain translation property files exists.\n\nWhen one is missing checkstyle outputs:\n\n```\n[ERROR] src/main/resources:[0] (misc) Translation: Properties file 'xx-messages.properties' is missing.\n```\n\nand the corresponding xml looks like:\n\n``` xml\n<file name=\"/xx/trunk/src/main/resources\">\n<error line=\"0\" severity=\"error\" message=\"Properties file &apos;xx-messages.properties&apos; is missing.\" source=\"com.puppycrawl.tools.checkstyle.checks.TranslationCheck\"/>\n</file>\n```\n\nThen the violations plugin tries to read the directory \"/xx/trunk/src/main/resources\" as a file, and craps out:\n\n```\nWARNING: Publisher 'Report Violations' aborted due to exception:\njava.io.IOException: remote file operation failed: /xx at hudson.remoting.Channel@34353fca:xx-03: java.io.FileNotFoundException: /xx/src/test/resources (Is a directory)\n        at hudson.FilePath.act(FilePath.java:987)\n        at hudson.FilePath.act(FilePath.java:969)\n        at hudson.plugins.violations.ViolationsPublisher.perform(ViolationsPublisher.java:74)\n        at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:779)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:726)\n        at hudson.maven.MavenModuleSetBuild$MavenModuleSetBuildExecution.post2(MavenModuleSetBuild.java:1047)\n        at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:671)\n        at hudson.model.Run.execute(Run.java:1766)\n        at hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:531)\n        at hudson.model.ResourceController.execute(ResourceController.java:98)\n        at hudson.model.Executor.run(Executor.java:408)\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/76/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nrchandan": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/75", "title": "Updating another job's thresholds based on this job", "body": "I use two Jenkins jobs in my project - one for building PRs and the other for building the master branch. I have the violations plugin set up in both the jobs, and both use the recently released ratcheting feature. However, this leads to frequent build failures when PRs compete to fix violations. \n\nFor example, one PR fixes some violations which automatically updates the threshold (say 10 pylint issues fixed out of 130 so now 120 is the new threshold), but the other PR only updates the README but now fails since the new threshold of 120 is lower than the 130 of the codebase on which this commit is based.\n\nIdeally, I would like to disable ratcheting in the merge job and keep it enabled in the master job, but have  the master job post the new thresholds to the merge job on successful build. Does it make sense? Is there a \"right\" way to do this? Is it possible to update the parameters of one Jenkins job from another using the Jenkins Java API, or does it necessitate the use of Jenkins REST API or file IO? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kheremos": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/71", "title": "NPE in FileModelProxy.java line 475", "body": "An error is generated in the Jenkins logs when viewing the details of a violation.\nAdditionally, new projects are not rendering the summary table that displays the trends.\n\nHere is the stack trace:\n\n``` javascript\nJun 30, 2015 3:09:34 PM WARNING hudson.ExpressionFactory2$JexlExpression evaluate\nCaught exception evaluating: it.summaryTable in /job/Tesla/51/violations/file/app/scripts/main.js/. Reason: java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n    at org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n    at org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n    at org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n    at org.apache.commons.jexl.parser.ASTReference.execute(ASTReference.java:83)\n    at org.apache.commons.jexl.parser.ASTReference.value(ASTReference.java:57)\n    at org.apache.commons.jexl.parser.ASTReferenceExpression.value(ASTReferenceExpression.java:51)\n    at org.apache.commons.jexl.ExpressionImpl.evaluate(ExpressionImpl.java:80)\n    at hudson.ExpressionFactory2$JexlExpression.evaluate(ExpressionFactory2.java:74)\n    at org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(ExpressionSupport.java:61)\n    at org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsString(ExpressionSupport.java:46)\n    at org.apache.commons.jelly.tags.core.ExprTag.doTag(ExprTag.java:42)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:99)\n    at org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$1.run(CoreTagLibrary.java:98)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:120)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:99)\n    at org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n    at org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n    at org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:120)\n    at org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n    at org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:95)\n    at org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:63)\n    at org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:53)\n    at org.kohsuke.stapler.jelly.JellyClassTearOff.serveIndexJelly(JellyClassTearOff.java:112)\n    at org.kohsuke.stapler.jelly.JellyFacet.handleIndexRequest(JellyFacet.java:127)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:735)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:686)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$13.dispatch(MetaClass.java:411)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:249)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:746)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:876)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:649)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:238)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:123)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:114)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.UnwrapSecurityExceptionFilter.doFilter(UnwrapSecurityExceptionFilter.java:51)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at jenkins.security.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:117)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:125)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:142)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:271)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at jenkins.security.BasicHeaderProcessor.doFilter(BasicHeaderProcessor.java:93)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:249)\n    at hudson.security.HttpSessionContextIntegrationFilter2.doFilter(HttpSessionContextIntegrationFilter2.java:67)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:171)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:49)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.DiagnosticThreadNameFilter.doFilter(DiagnosticThreadNameFilter.java:30)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:949)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1011)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at hudson.plugins.violations.render.FileModelProxy.getSummaryTable(FileModelProxy.java:475)\n    ... 133 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/71/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oppianmatt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/59", "title": "pep8 parser to log high severity fatal errors", "body": "Looking at the source of pep8 parser, seems to be only able to set med or low in severity.\n\n```\n    /**\n     * Returns the Severity level as an int from the PEP 8 message type.\n     *\n     * The different message types are W for warning and E for error.\n     * Because these are style guide warnings we set the severity\n     * values lower than what the apparent values would be.\n     *\n     * @param messageType the type of PEP 8 message\n     * @return an int is matched to the message type.\n     */\n    private void setServerityLevel(Violation violation, String messageType) {\n\n        switch (messageType.charAt(0)) {\n            case 'E':\n                violation.setSeverity(Severity.MEDIUM);\n                violation.setSeverityLevel(Severity.MEDIUM_VALUE);\n                break;\n            case 'W':\n            default:\n                violation.setSeverity(Severity.LOW);\n                violation.setSeverityLevel(Severity.LOW_VALUE);\n                break;\n        }\n    }\n```\n\nWould it be possible to add HIGH level for FATAL errors like:\n\n```\nfoo/bar/utils.py:166:11: F821 undefined name 'foo'\n```\n\nSo for ones that start with F, make them high.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/59/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghusse": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/58", "title": "Blank page when accessing to per-file jslint issues", "body": "Hello,\n\nI'm using the violations plugin v0.7.11 on jenkins v1.605 to display jshint violations (in jslint format).\n\nThis plugin is displaying graphs according to violations found by jshint, it works well. Except that when I click on a specific file with violations, all I obtain is a blank page.\n\nThe xml file is generated to a subfolder named `reports`, I tried to generate it directly in the workspace root: no luck.\n\nMy source files are directly in the workspace root, and the xml file contains correct path (from the workspace root).\n\nAny idea?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "s0undt3ch": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/57", "title": "Support the email-ext plugin", "body": "Apparently, all is needed(do note that I don't know the Jenkins internals that well) is implement either `AbstractResultAction` or `MavenResultAction` for the violations to show up in the email-ext email...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/57/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bufferoverflow": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/54", "title": "Feature Request: cppcheck integration", "body": "Would be nice to have an integration of cppcheck within Violations-Plugin.\nToday there is a seperate plugin: https://wiki.jenkins-ci.org/display/JENKINS/Cppcheck+Plugin\nto visualize details, however having cppcheck within the violations graph would be great.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/54/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robvdl": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/51", "title": "Add flake8 support", "body": "I would really like to add flake8 support, flake8 produces an output file that contains both pep8 and pyflakes violations, but in one file.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/51/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "domruf": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/50", "title": "No violations found when opening file on Windows", "body": "When running on windows and you try to open the page .../job/myjob/2/violations/file/path/to/myfile.py/\nyou get \"No violations found\"\n\nThe following patch fixes this.\nBut I don't really know the code and there my be some other places where this problem pops up. So there might be a better place/way to fix this properly.\n\ndiff -r 17567a8c09f2 src/main/java/hudson/plugins/violations/ViolationsReport.java\n--- a/src/main/java/hudson/plugins/violations/ViolationsReport.java Wed Apr 16 20:21:26 2014 +0100\n+++ b/src/main/java/hudson/plugins/violations/ViolationsReport.java Wed May 07 13:59:24 2014 +0200\n@@ -211,7 +211,7 @@\n         if (name.startsWith(\"/\")) {\n             name = name.substring(1);\n         }\n-        FileModelProxy proxy = getFileModelProxy(name);\n-        FileModelProxy proxy = getFileModelProxy(name.replace(\"/\", File.separator));\n       if (proxy != null) {\n           return new RecurDynamic(\n               \"\", name, proxy.build(build).contextPath(req.getContextPath()));\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/50/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elatt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/49", "title": "Don't treat pylint info \"I\" messages as errors", "body": "Pylint has informative \"errors\" which are tagged with I<id>. setServerityLevel() already switches on the different error types. I suggest that \"I\" errors be ignored or at least set to the lowest severity.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/49/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mklauber": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/48", "title": "Allow Jenkins Environment variables in Faux Project Path", "body": "This plugin does not expand environment variables like `${WORKSPACE}` when they are placed in the Faux Project Path.  I'm attempting this because I'm using the capability the git plugin to checkout into a subdirectory of the workspace, and I run all my commands in that subdirectory.  This plugin cannot find the source files when I do so, because the pep8 report doesn't reference that directory.  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/48/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "papaiatis": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/42", "title": "Feature Request: REST API integration", "body": "Hi,\nI've been using this plugin for a while now and our team is thinking about developing a remote monitor service with a dashboard. This dashboard would gather build and code analysis information from multiple sources including Jenkins with Violation plugin. By default, Jenkins support a REST API in different response formats (XML, JSON). However this API is not available under the Violations plugin, for example: http://myjenkins/job/FxCop/4/violations/api/xml.\nIt would be such a great help to make this URL available.\nThank you.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/42/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vglushonkov": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/36", "title": "Plugin uses wrong path for per-file pep8 xml-reports", "body": "Working on Windows\nLaunching pep8 check, it successfully creates XML report, but violations plugin roports error. It seems it uses absolute path somewhere instaed of relative. Please, at least help me to find a direction to look (i downloada the plugin src and trying to find to fix it):\n\n generated xml file: C:\\Jenkins\\jobs\\python-template-2\\workspace\\reports\\pep8.xml \n=============== 91 failed, 33 skipped, 1 error in 1.52 seconds ================\n\nC:\\Jenkins\\jobs\\python-template-2\\workspace>exit 1 \nBuild step '\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 Windows' marked build as failure\nERROR: Publisher hudson.plugins.violations.ViolationsPublisher aborted due to exception\njava.io.FileNotFoundException: C:\\Jenkins\\jobs\\python-template-2\\builds\\2013-10-23_20-03-27\\violations\\file\\C:\\Jenkins\\jobs\\python-template-2\\workspace\\utilities\\capable\\admin.py.xml (Syntax error in filename or path)\n    at java.io.FileOutputStream.open(Native Method)\n    at java.io.FileOutputStream.<init>(Unknown Source)\n    at java.io.FileOutputStream.<init>(Unknown Source)\n    at hudson.FilePath.write(FilePath.java:1642)\n    at hudson.plugins.violations.generate.ExecuteFilePath.execute(ExecuteFilePath.java:42)\n    at hudson.plugins.violations.generate.GenerateXML.execute(GenerateXML.java:47)\n    at hudson.plugins.violations.ViolationsCollector.invoke(ViolationsCollector.java:122)\n    at hudson.plugins.violations.ViolationsCollector.invoke(ViolationsCollector.java:25)\n    at hudson.FilePath.act(FilePath.java:912)\n    at hudson.FilePath.act(FilePath.java:885)\n    at hudson.plugins.violations.ViolationsPublisher.perform(ViolationsPublisher.java:74)\n    at hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:781)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:753)\n    at hudson.model.Build$BuildExecution.post2(Build.java:183)\n    at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:706)\n    at hudson.model.Run.execute(Run.java:1690)\n    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:46)\n    at hudson.model.ResourceController.execute(ResourceController.java:88)\n    at hudson.model.Executor.run(Executor.java:230)\nFinished: FAILURE\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ilinkuo": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/31", "title": "Feature Request: Errors vs Warnings", "body": "It would be really nice if the violations-plugin could distinguish between warnings and errors. For example, with this output from csslint:\n\n``` xml\n<issue line=\"173\" char=\"192\" severity=\"warning\" reason=\"Use of !important\" evidence=\".tdaVideoPlayer .pageHeader .closeButton{text-decoration:none;text-transform:uppercase;color:#999;font-size:11px;font-family:HelveticaNeueW01-75Bold, Helvetica black, Arial black, sans-serif;font-weight:normal !important;background:url('../../images/icons/pageClose.png') 100% 50% no-repeat;padding-right:18px;display:inline-block;line-height:13px}\"/>\n    <issue line=\"189\" char=\"414\" severity=\"error\" reason=\"Expected RBRACE at line 189, col 414.\" evidence=\".tdaVideoPlayer .videoOverlayLayer.playPauseButton{width:42px;height:42px;margin:auto;top:50%;margin-top:-24px;background:url('../../images/icons/playerHoverPlay.png') 50% 50% no-repeat;filter:'progid:DXImageTransform.Microsoft.Alpha(opacity=50)';-moz-border-radius:50%;-webkit-border-radius:50%;-ms-border-radius:50%;border-radius:50%;opacity:.5;-ms-filter:'progid:DXImageTransform.Microsoft.Alpha(Opacity=(0.5)');filter:alpha(opacity=(0.5))}\"/>\n\n```\n\nThe current tabular output has 5 columns -- filename, l, m, h, number. These columns should be retained, but refer to errors only. A sixth column could be added for \"warnings\". All the existing logic for build failure should depend on the error number only, not the warnings or the total number of violations.\n\nThe chart should show both the total number of violations (errors + warnings) and the errors.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjbush": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/93", "title": "Added basic pipeline support. Very rudimentary still", "body": "This provides very, very basic pipeline support. It needs to be cleaned up, but for anybody wanting to use it, it's here. Usage is:\n\n`step([$class: 'ViolationsPublisher', type: 'fxcop', sunny: 10, stormy: 999, unstable: 999, pattern: '**/outputfile.analysis.xml', autoUpdateStormyThreshold: true, autoUpdateUnstableThreshold: true])`\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "allpha": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/90", "title": "Update jenkins core", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piwai": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/89", "title": "Set severity of Pylint info messages to \"Low\" instead of \"Medium\". Fi\u2026", "body": "\u2026xes issue #49\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryoichitaniguchi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/86", "title": "fixed NPE in FileModelProxy.java", "body": "NPE while handling resources for summary table.\n\nissue: https://github.com/jenkinsci/violations-plugin/issues/71\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rsommerard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/85", "title": "Add util test", "body": "I have run Pitest mutation testing framework on project and add some test which contribute to decrease regression failing.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/84", "title": "Add descriptors test", "body": "I have run Pitest mutation framework on project and see that some points need to be improved in descriptor package to prevent regressions.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MensObscura": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/83", "title": "Adding few tests and detecting issue", "body": "The \"typeCountMap\" Map in the BuildModel class is set in the getTypeCount() method, at the first call, but is never updated then, so if I add a countFile object, the map will not change.\n\nAnd the Equals(...) method in the Supression class is not working. It always returns false.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nbruno": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/82", "title": "Only include path if non-empty on codenarc filenames", "body": "As a result of the fix for JENKINS-19260, an empty path gets appended to the filename of a codenarc file that was in the default package. This results in file paths that have two forward-slashes in them (e.g., `source-dir//Test.groovy`), ultimately causing the UI to not serve these files and show the violations within them. \n\nThis PR checks if the path is empty, and if it is, does not include it in the file path. Also, the test case for this condition has been updated properly. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pfhorman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/81", "title": "Fixing 'no violations found' file links on Windows (Issue #50)", "body": "This is the fix as described in [issue 50](https://github.com/jenkinsci/violations-plugin/issues/50).  I ran across the issue on Jenkins running on Windows server.  The problem is that all the file keys in the FileModelProxy use the file separator for the system (*nix='/', windows='\\'), but the `String name` here comes from `getRestOfPath()` which prefers the url forward slash (which doesn't work for the Windows keys).  To transform the \"rest of path\" to the true file key, we must convert any '/' in the name to the File.separator for the system.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wang-xinhong": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/80", "title": "For the issue with multi-sets of violations reporting", "body": "There should be more than one set of violation,and may lose some reports.wanna fix it this way.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vsviridov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/883446", "body": "Nvm, found it in the testing folder of the source.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/883446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kohsuke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438539", "body": "My apologies for the delay in coming to this pull request. I've merged your changes, since we aren't hearing from the current maintainer.\n\nI've also set you up with the push access so that in the future you won't be blocked by our inattention. Please feel free to make changes like this directly in the master repository.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438545", "body": "Finally, if you can update [Wiki page](https://wiki.jenkins-ci.org/display/JENKINS/Violations) with this change, it'd be greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438603", "body": "My apologies for the delay in coming to this. Since we aren't hearing from the maintainer, I looked at the changes and merged them.\n\nI've also set you up with the push access so that we won't block you in the future. Please feel free to directly collaborate on the master branch.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1438603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8348484", "body": "My apologies for the delay. I guess no one is actively maintaining this plugin now and so this pull request fell through the cracks.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8348484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "bocytko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1441689", "body": "This is great news! Thank you kohsuke for merging and push access.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1441689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "peterkittreilly": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753112", "body": "Is the pep8 in the current master?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753328", "body": "Ok, I have made a new release 0.7.10\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9302580", "body": "Looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9302580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "hodgestar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753226", "body": "Yep.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753605", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/1753605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rogerhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4868288", "body": "Updated.  Is there someone still maintaining this repo?  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4868288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/10807342", "body": "I've noticed that the latest Violations plugin is still https://wiki.jenkins-ci.org/display/JENKINS/Violations from 2012.  Is it possible to get a new tagged release for this repo?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/10807342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196411", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dmcguire81": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4956964", "body": "Is there something else I should do to get this merged?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/4956964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5102699", "body": "Sorry we didn't see this in time, but this was fixed already. Thank you,\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5102699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "buildhive": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5385244", "body": "[Jenkins \u00bb violations-plugin #2](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/2/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5385244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9304684", "body": "[Jenkins \u00bb violations-plugin #9](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/9/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/9304684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10244852", "body": "[Jenkins \u00bb violations-plugin #17](https://buildhive.cloudbees.com/job/jenkinsci/job/violations-plugin/17/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10244852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "noirbizarre": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5977671", "body": "+1\nAny plans to merge it ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/5977671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cjo9900": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6738744", "body": "Seems some has already put a pull request in for this, so you could try building you own version with this pull.\n\nhttps://github.com/jenkinsci/violations-plugin/pull/11\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6738744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "davidszotten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758592", "body": "have tried, but it seems building this thing is beyond me at this time. (no real knowledge of java; have followed various tutorials and googled my way past a slew of errors but have had to give up)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6759738", "body": "thank you!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6759738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfroche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758698", "body": "I am still waiting for code to be merged. I have put the corresponding plugin here: https://github.com/downloads/jfroche/violations-plugin/violations.hpi\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/6758698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tfb-bull": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/7277275", "body": "Definitely need xmllint support !\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/7277275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nwittstruck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8070984", "body": "I'm having the same issue. Maybe it's path related?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8070984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8211300", "body": "Had a bit more time to investigate: The problem is that the path is wrong, it seems to ignore the Project Base Directory set in the project configuration. When I set up a job that does not use the Project Base Directory everything works fine.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8211300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lalberti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8206125", "body": "Commit is good.\nI have confirmed the problem without the patch, and verified that the compile patch does set the severity correctly and doesn't break anything else.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/8206125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10412342", "body": "I'm seeing the same as in saily's issue -- I can see the source for my pep8 warnings, but not my jslint ones\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10412342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10413902", "body": "EDIT: actually, Pep8parser overrides getFileModel locally, which explains the differing paramaters\n\nThe main difference I can see is that Pep8Parser does this:\n\n```\nFullFileModel fileModel = getFileModel(model, \n    pep8Violation.getFileName(), \n    absoluteFileFinder.getFileForName(pep8Violation.getFileName()));\n```\n\nwhile JsLintParser does this:\n\n```\nFullFileModel fileModel = getFileModel(absoluteFileName);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/10413902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "uhafner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12272222", "body": "Hi, this seem to be an issue with the warnings plug-in (and not the violations plug-in). Can you please file a new Jira bug report (component 'warnings') so this will get attention on my todo list.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12272222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "hashar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12321900", "body": "One might also use the checkstyle reporter of jshint:\n\n```\njshint --checkstyle-reporter . > checkstyle-jshint.xml\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/issues/comments/12321900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498279", "body": "The whole `work/` directory should be in `.gitignore`!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498283", "body": "Probably wrong. See https://github.com/jenkinsci/remoting/pull/56.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/comments/12498283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "daniel-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196384", "body": "Weird indentation\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/violations-plugin/pulls/comments/10196384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}}}}