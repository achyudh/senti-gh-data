{"_default": {"1": {"lexotero": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/89", "title": "When coverage goes down threshold is updated and the build is not marked as unstable", "body": "Using the snippet generator I've added the following step to my `Jenkinsfile`:\r\n\r\n```\r\ncobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '80, 0, 0', failUnhealthy: true, failUnstable: true, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false\r\n```\r\n\r\nThis should set the initial threshold to 80% for lines, methods and conditionals and auto-update the minimum when the build is successful (as `autoUpdateHealth` and `autoUpdateStability` are `true` by default). But when coverage goes down the threshold is updated and the build is not marked as unstable:\r\n\r\nThe pipeline steps reports the update of the thresholds:\r\n```\r\n    Methods's new health minimum is: 78.84\r\n    Lines's new health minimum is: 82.19\r\n    Conditionals's new health minimum is: 72.23\r\n    Methods's new stability minimum is: 78.84\r\n    Lines's new stability minimum is: 82.19\r\n    Conditionals's new stability minimum is: 72.23\r\n```\r\n\r\nIn other non-pipeline jobs using the `cobertura-plugin`, when the coverage is bellow the minimum the coverage does not get updated and the build is marked as unstable.\r\n\r\n**Environment**\r\n\r\n- Jenkins v.2.73.3\r\n- Cobertura plugin v1.12\r\n- Pipeline plugin v2.5\r\n- Pipeline: API plugin v2.23.1", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/89/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "basava12345": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/88", "title": " Cobertura publishing fails with java.lang.SecurityException: slave may not mkdirs when the job runs in slave node", "body": "Jenkins master is now more strict about what commands its slaves can send to the master. Unfortunately, this prevents some plugins from functioning correctly, as those plugins do not specify which commands are open for slaves to execute and which ones are not \r\nFor more reference \r\nhttps://wiki.jenkins.io/display/JENKINS/Slave+To+Master+Access+Control\r\n\r\nHere I feel fix should be mainly related to implementing the SECURITY-144-compat module in the plugin code.\r\nHowever we have passing scenario also for the jobs running in slaves. \r\n(Are the commands being used in this case are different ? )\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dejewi": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/87", "title": "Results not published when jenkins job fails", "body": "Hi,\r\nI'm using Cobertura-plugin v1.12 and Jenkins v2.92.\r\nIn Jenkins job in section **Publish Cobertura Coverage Report** have: \r\nunselected option: `Consider only stable builds`\r\nand selected `Fail unhealthy builds` \r\n\r\nWhen Jenkins job fail because code didn't meet code coverage limits then Cobertura Coverage Report is not published.\r\n\r\n```\r\n[Cobertura] Publishing Cobertura coverage report...\r\n[Cobertura] Publishing Cobertura coverage results...\r\n[Cobertura] Cobertura coverage report found.\r\n[Cobertura] Unhealthy for the following metrics:\r\n    Methods's health is 84.24 and set minimum health is 86.24.\r\n    Lines's health is 89.49 and set minimum health is 90.49.\r\n    Conditionals's health is 53.7 and set minimum health is 54.7.\r\nERROR: Step \u2018Publish Cobertura Coverage Report\u2019 failed: [Cobertura] Failing build because it is unhealthy.\r\nRecording test results\r\nFinished: FAILURE\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/87/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plutino": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/85", "title": "source codes are not available when build fails", "body": "This could be either a bug or a feature: the current behavior is that annotated source codes are only available if a build succeeds, as indicated by this line: https://github.com/jenkinsci/cobertura-plugin/blob/6bb6d8c28e8d6d680744a94714e3d41925e2ed1a/src/main/java/hudson/plugins/cobertura/targets/CoverageResult.java#L188\r\n\r\nIn our use case, we fail a build when test coverage is unstable or unhealthy.  This means that the source codes are not available when they are most needed: when coverage drops.  \r\n\r\nIt would be great if there is an option to always make source codes available regardless of build result. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/85/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "myronBob": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/84", "title": "can it generate report with jdk1.8?", "body": "The cobertura-plugin can not generate a report when my project run with jdk1.8 over jenkins. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/84/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshmanderson": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/83", "title": "Branch coverage reported incorrectly", "body": "`branch-rate` output in the coverage xml file is `0.1721`, yet the report states that the \"Conditionals's health is 13.12\" (and then fails the build because the unhealthy threshold is `15.0`). Upon closer inspection of the branch coverage, many files are slightly off (reports that 2 branches were missed even though they weren't), and some files are *way* off (reports that there was a maximum of 2 branches in the file, even though there is actually 39).\r\n\r\nThis issue occurs using versions `1.12` and `1.10` of the plugin.\r\n\r\nSomething to note is that coverage reporting is currently working for a different project, and the main differences are that the project which is **failing** was bootstrapped using [create-react-app](https://github.com/facebookincubator/create-react-app) and is using version `20.0.4` of [jest](https://facebook.github.io/jest/). Whereas the project where coverage reporting is **working** was not bootstrapped (created from scratch), and is using version `21.1.0` of jest. Note that both projects are using the same version of [istanbul-reports](https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-reports) (`1.1.2`) \u2013 in case that matters.\r\n\r\nI thought initially that the coverage wasn't being collected properly, however the html and xml files generated seem to have the correct coverage values in them, it's only the branch values reported by the plugin which are incorrect.\r\n\r\nTo summarise the problem:\r\n- Correct coverage values are output to the coverage xml file\r\n- Incorrect branch/conditional coverage values are reported by the plugin\r\n\r\nAre you aware of any version compatibility issues that could be occurring here such that the xml file is read incorrectly?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/83/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tsondergaard": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/82", "title": "Support more than one report per job", "body": "It would be great to be able to generate more than one coverage report and time plot. We do that now by teiggering a separate job that uses the same workspace as the first job to generate \u201cfocused\u201d coverage report for certain areas that we are working on improving code coverage in", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gvasquez-waypoint": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/78", "title": "Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor", "body": "On a Jenkins task configured to use Cobertura to report Code Coverage both to Jenkins and SonarQube we are getting the following warnings in the console log:\r\n\r\n    [WARNING] Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'uncovered_lines' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'coverage_line_hits_data' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'conditions_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'uncovered_conditions' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'conditions_by_line' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'covered_conditions_by_line' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n\r\nWhat additional info should I provide? What could wrong?\r\n\r\n - Jenkins: ver 2.82\r\n - SonarQube: Version 6.5 (build 27846)\r\n - Cobertura Plugin in Jenkins: 1.19\r\n - Cobertura Plugin in SonarQube: 1.9.1\r\n - cobertura-maven-plugin:2.7\r\n\r\nIssue in [StackExchange](https://sqa.stackexchange.com/questions/30148/coverage-measure-for-metric-lines-to-cover-should-not-be-saved-directly-by-a-s) also.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/78/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neerajsb": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/71", "title": "Jenkins is unable to find and display the source markup when a build fails due to a test failure", "body": "If a build is configured to fail if a test point fails (using the \"Failed tests mark build as failure\" option under TAP results), the coverage report does not find the source files and encode them based on coverage results. The coverage results, however, are reported correctly in the form of numbers.\r\n\r\nThe issue seems to be in the following piece of code in CoverageResult.java - \r\n\r\n public boolean isSourceFileAvailable() {\r\n        if (hasPermission()) {\r\n            return owner == owner.getParent().getLastSuccessfulBuild() && getSourceFile().exists();\r\n        }\r\n        return false;\r\n    }\r\n\r\nIn my opinion, as a user I would expect the source code encoding to be reported as well if the coverage results are computed (and a .XML file is created in the workspace). So should the check be limited to something as simple as - \r\n\r\nif (hasPermission()) {\r\n    return owner ==  getSourceFile().exists();\r\n }\r\n return false;\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/71/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "setasan": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/60", "title": "Error when publishing report to jenkins", "body": "After the coverage report is generated, it is trying to publish the report but it is failing. Not sure if this is a conflict with other plugin and related to the classloader.\r\n\r\njava.lang.ClassCastException: com.ctc.wstx.stax.WstxInputFactory cannot be cast to javax.xml.stream.XMLInputFactory\r\n\tat javax.xml.stream.XMLInputFactory.newInstance(XMLInputFactory.java:153)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher$ParseReportCallable.invoke(CoberturaPublisher.java:532)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher$ParseReportCallable.invoke(CoberturaPublisher.java:519)\r\n\tat hudson.FilePath.act(FilePath.java:990)\r\n\tat hudson.FilePath.act(FilePath.java:968)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher.perform(CoberturaPublisher.java:337)\r\n\tat hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:782)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:723)\r\n\tat hudson.maven.MavenModuleSetBuild$MavenModuleSetBuildExecution.post2(MavenModuleSetBuild.java:1037)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:668)\r\n\tat hudson.model.Run.execute(Run.java:1763)\r\n\tat hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:529)\r\n\tat hudson.model.ResourceController.execute(ResourceController.java:98)\r\n\tat hudson.model.Executor.run(Executor.java:410)", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/60/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rrussell39": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/58", "title": "How can I set the Source Encoding", "body": "Hello - We are using Jenkins 1.642.1 and we generate Cobertura reports for both build/deploy jobs and functional test jobs.  The generated report includes a link to the source file which included red/green color coding to indicate line hits.  This file includes non-ASCII characters so garbage chars are rendered in the html view of this file.  \nWhen I check the configuration of the build job (which is generated by groovy scripts) the Source Encoding setting for the 'Publish Cobertura Coverage Report' indicates \"ASCII\" as the setting.  I need it to be UTF-8.  I can choose this manually, but we don't mess with our builds manually.  Everything is generated in CI style - using programming.\nIn this case, I see the line in the groovy script and it calls 'cobertura <path to file>'.  There doesn't seem to be any room for additional arguments including that for the source encoding.  Can someone point me the right direction to set this value programmatically?\n\nThanks,\nRob\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JanC": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/54", "title": "java.lang.SecurityException: agent may not write", "body": "Hi,\nI'm using the cobertura plugin in a job that runs on a Jenkins node. The jobs fails because\n\n```\n[Cobertura] Publishing Cobertura coverage report...\nPublishing Cobertura coverage results...\nCobertura coverage report found.\nERROR: Build step failed with exception\njava.lang.SecurityException: agent may not write \n```\n\nI set up the Slave to master to `allow all < BUILDDIR >/.*` as described here but it still fails\nhttps://wiki.jenkins-ci.org/display/JENKINS/Slave+To+Master+Access+Control\n\nHow can I set the correct rights for the plugin?\n\ncheers\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/54/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamtheturtle": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/52", "title": "Impossible to see Coverage Breakdown for a package named \"api\"", "body": "If I visit the \"Cobertura Coverage Report\" page for a job and then go to \"Coverage Breakdown by Package\", if that package is named \"api\" the link takes me to Jenkins' api page, not the breakdown for that package. I guess one solution is to use `/<packagename>-report` for the URL instead of `/<packagename>`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/52/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ssbarnea": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/51", "title": "JENKINS-23183: Add precision option for the \"Stability auto update\"/\"Health auto update\" options", "body": "Now we get 50% of the builds failed even when a single line of code is modified, just because of the rounding errors.\n\nThe situation is even worse because exporting status via cc.xml files (CCTray) supports only success and failed, and the unstable is mapped as a failure without any way of changing this. So we see lots of \"red\" builds just because the code coverage went from 99.99% to 99.98%. Clearly the threshold for measuring a decrease should be a percent, not a \"rounding error\".\n\nBased on original bug raise at https://issues.jenkins-ci.org/browse/JENKINS-23183\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/51/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timcosta": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/48", "title": "Populate AbstractTestResultAction in the build object", "body": "per https://github.com/janinko/ghprb/issues/315, it would be great if the test results could be published to `build.AbstractTestResultAction` or whatever the appropriate location is.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/48/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maninder-singh": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/45", "title": "Need to set coverage metric of another job based on current job", "body": "Hi Team,\nQuestion : I have two jobs (Job_Dev , Job_Merge) in Jenkins. My requirement is to update the coverage metrics parameter of Job_Merge job with the parameter of Job_Dev job through cobertura plugin.\nCan you please guide me how to proceed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/45/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IvanAnishchuk": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/44", "title": "Links from project page.", "body": "They lead to `cobertura/` which gets redirected to `{lastbuildnumber}/cobertura/` which is usually ok by in some cases, when project name contains URI-encode symbols (it's sometimes important for multibranch projects), they get decoded and it breaks everything. Yes, I know that relying on URI-encoding is somewhat fragile idea, but that's how things are.\n\nCan you please change those links to `lastCompletedBuild/cobertura/` which is the same thing but doesn't require any redirects? If nothing else, without that additional redirect it will be a bit faster for users.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abbybader": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/41", "title": "Can't find coverage.xml, which exists and matches search pattern", "body": "Hi, the Cobertura plugin seems to have a problem finding the coverage documents.  When configured to fail when no coverage files are found, the job does fail.\n\nThe files are there.  Log message is: \n\n```\n[Cobertura] No coverage results were found using the pattern '**/target/site/cobertura/coverage.xml\u200b' relative to '/home/[user]/jenkins_server_home/jenkins/jobs/Measure_code_quality/workspace'\n```\n\nListing such a directory:\n\n```\n$ ll /home/[user]/jenkins_server_home/jenkins/jobs/Measure_code_quality/workspace/[appName]/target/site/cobertura\ntotal 304\n-rw-r--r-- 1 jenkins jenkins 308049 Jan 15 14:07 coverage.xml\n```\n\nBrowsing the job's workspace, I can see the file \"[appName]/target/site/cobertura/coverage.xml\", which is non-empty and looks well-formed.  Coverage rates are non-zero.\n\nI have verfied that these files are actively being produced by wiping out the job's workspace and rebuilding.\n\nCan you offer any insight into this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/41/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "max3903": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/39", "title": "Feature request : Differential code coverage", "body": "As asked here: http://stackoverflow.com/questions/7286021/differential-code-coverage, it would be nice to be able to use the code coverage in a build.\n\nBased on a configuration parameter, a build would:\n- fail if the code coverage is decreasing\n- fail if the code coverage is not increasing\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/39/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "isarunasi": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/37", "title": "rounding issues", "body": "It seems like coverage plugin rounds coverage before saving, but it seems to use actual value when checking whether build should fail or not. This causes issues when 'ratcheting' is used and coverage is meant to slowly go up. What happens is that once coverage reaches x.05, builds start to fail because plugin is\nthen requiring x.1 coverage.\nThis probably only occurs when auto update is enabled.\n\nJenkins version: 1.583\nCobertura plugin version: 1.9.5\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/37/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verkholantsev": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/29", "title": "Source coverage report for several recent builds", "body": "I'd try to take a look at source coverage report for some old build, but get this message:\n\n![2014-05-26 15-12-51 google](https://cloud.githubusercontent.com/assets/1927020/3081820/cd0015d2-e4c6-11e3-9f78-2565e662750f.png)\n\nIs there any way to setup `cobertura-plugin` to keep source coverage reports for several recent builds?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/29/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cmpsoares91": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/28", "title": "Change report column names?", "body": "Hi, I wanted to know if it's possible to change, in Jenkins, when using Cobertura's Project Coverage Summary to change the column names?\n\nFor example, how can I change the following to a custom name:\n![Image](http://i.stack.imgur.com/7imCh.png)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/28/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ronapelbaum": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/24", "title": "configure which CoverageMetric to be shown in chart", "body": "It would be really nice if i could'e configure which CoverageMetric was shown in the chart, i.e. I'm interested only in line coverage percentage, so I want to see only that in the chart.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/24/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pjrt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/15", "title": "Need more documentation", "body": "There is no README in the repo and there are no help buttons on the Jenkins UI. \n\nThis is a pretty complex plugin and would be awesome if there was some sort of documentation (either here or on the Jenkins UI, preferably the latter, maybe both). \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/15/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20416927", "body": "I was wrong, there is some documentation on the Jenkins UI (small little text under the actual checkboxes). \n\nThis should probably follow convention and use the info button. \n\nI'm willing to do this, but I need more info on what exactly these buttons do. What is the difference between an unstable and unhealthy build? How do they behave differently? What does it mean to \"Auto update threshold for health on successful build\". What does it do if you don't set this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20416927/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/0db4272838dfc3955f827e5cf5e8593e3de85ad8", "message": "POM update. (#90)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1915384", "body": "What was the purpose of this? AFAICT these classes are neither persisted using XStream, nor sent over remoting from a slave (since `coverage.xml` is simply copied to the build dir on master), and I cannot find any indication that either of these things was ever different in the plugin\u2019s history.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1915384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7615398", "body": "This fix does not make sense to me. I would suggest reverting the change to `getUrl` and changing this view to use\n\n```\n${rootURL}/${it.getUrl(job)}\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7615398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8138818", "body": "FWIW the code in `LastStableColumn/column.jelly` looks wrong to me too; `jobBaseUrl` is deprecated. Just have not had a free moment to think about it and deal with it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8138818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302902", "body": "This looks better to me. I assume it works as desired, even when folders and/or views are in use? Then columns in Jenkins core ought to be fixed too\u2014note to self.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8303000", "body": "Agreed that the Javadoc probably needs clarification.\n\n> I think it is a general good practice that something that is stored in a container should never know that it is part of that container\n\nYes, that would have been my preference too, but this behavior of `Item.getUrl` has long been there.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8303000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304571", "body": ">  I thought this was introduced by jenkinsci/jenkins@ea95434\n\nWell that refined the behavior of `getUrl` to match its Javadoc in more circumstances, but it had long been context-sensitive.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1523574", "body": "It is legal for an XML file to omit the prolog, so here you are relying on Cobertura to continue to emit the prolog.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1523574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509210", "body": "`transient`", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509407", "body": "This field must be `transient` or you will get all kinds of crazy errors relating to lazy loading. See Javadoc for `RunAction2`.\r\n\r\n(Not a problem introduced by this PR, but may as well fix it now.)", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509495", "body": "Could retain this (somewhat questionable) logic by checking for `instanceof AbstractProject`.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "TobiX": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/8e853d18c80b7e7414fb1a6c886cc69210f83103", "message": "[JENKINS-13489] Fix highlight for partially covered branches. (#34)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeffpearce": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/6bb6d8c28e8d6d680744a94714e3d41925e2ed1a", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/af64bee46eea294ab040a84320b4eaf097ee1928", "message": "[maven-release-plugin] prepare release cobertura-1.12"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/544b248f083d0ce24f9038ccfdac39ab1fce5bd5", "message": "JENKINS-47639 Display a message when missing coverage fails build (#81)\n\n* JENKINS-47639 Display a message when missing coverage fails build\r\n\r\n* Update comment for CoberturaAbortException\r\n\r\n* Fix build error\r\n\r\n* Minor format change\r\n\r\n* Add license to POM"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/f244b1fd4cfe334a6589941408e089afd6a66245", "message": "Merge pull request #80 from jenkinsci/logimprove\n\nJENKINS-25781 Add common prefix to all logs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/12fa58fadd9918129dced30a676dc1422eb7c7c3", "message": "Add common prefix to all logs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/70db38fd0c0e1d7730b47332640df2eabe97e95b", "message": "Merge pull request #79 from beamerblvd/add-line-count-to-coverage-paint\n\nAdd total line count to coverage paint for programmatic usage"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1c3bdfc5effa766a94b18772b8fbe6922d1a6240", "message": "Adding Jenkinsfile to integrate with jenkinsci"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/242f249bea4bc0fbeeb692905d06d08b4d9eab00", "message": "Merge pull request #77 from jeffpearce/compat\n\nAdd backward compatibility for phabricator plugin"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/362eb18772589aec2f9b0a262478a48a76916109", "message": "Merge pull request #76 from jeffpearce/snippet\n\nAdd support for coverage target strings for snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/172a74ebb614732e4ece670f77adeb4e929808af", "message": "Add backward compatibility for phabricator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/08434e8bc0c70792fcb443e364ad2c5499bfa6a4", "message": "Add support for coverage targets in snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1be253dd2410284efd5a0600c4ed87f58cfc50c3", "message": "Merge pull request #3 from jenkinsci/master\n\nMerge upstream"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1b2e481b6febe40a1a7e7fda741c6e470e14b783", "message": "Merge pull request #70 from fengxx/feature/pipeline\n\nsupport pipeline script snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/bf8c78756212603565d57545a407116b5f80e155", "message": "Merge remote-tracking branch 'upstream/master'"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/ebeb4efbd90dfa1185031bb5f0b1b0f778d88e7b", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/31a884b5b7cdbe1656425176c37c79ec8d07647f", "message": "[maven-release-plugin] prepare release cobertura-1.11"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/02555536e0e5027b202ea7ef6bae890f98c1dba8", "message": "Merge pull request #2 from jenkinsci/master\n\nMerge jenkinsci"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/d4342ccbb8b15ea1530d1b5860c64b1c5a9b8d8c", "message": "Merge pull request #74 from jeffpearce/maintainers\n\nUpdating list of maintainers"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/06d4395e0380076dc902ead52337ff0d91491a9e", "message": "Updating list of maintainers"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/7dbfcac1664a25b76c60bb6f2ea3a3a5220a7da1", "message": "Merge branch 'master' into cov-targets"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/c28a6615a3fc7cd59837a94264afe8d9f89ad9b3", "message": "Undo more tabs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/547576ff2cd9e42af36a34e4a67b5384bfe05ece", "message": "Undo tab conversion"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/b1dfa23ed3883a753b5e228eed8edd8922559f95", "message": "Merge pull request #1 from jenkinsci/master\n\nMerge from jenkinsci"}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/91", "title": "Bump up required version to an LTS", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108040293", "body": "Presumably (@mbarrien would know). I'm putting it back in and restoring the tests - update to PR coming", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108040293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108536410", "body": "@christ66: if I understand correctly, all of the above should be taken care of with my last commit. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108536410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "beamerblvd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/250e3410f77748019a7cba0cf5ad9f3eee631a28", "message": "Add a test and some asserts to coverage paint total lines"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/aef29c14e47f6c4b9326b066a3abbcf27f7b783a", "message": "Fix compile error"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/2b8f8db781840fd760515dd2ec61d4371e17bb9c", "message": "Fix syntax error"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/decc745c0f1c3d565d0d80a921f8778dc9f259db", "message": "Add total line count to coverage paint for programmatic usage"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "christ66": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/2637528147cf7c268e49ab2025d58bb2219a9669", "message": "Merge pull request #68 from jeffpearce/cov-targets\n\nExpose coverage targets"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787316", "body": ":bug: This will cause backward compatibility issues.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787937", "body": "Is there a reason why this test was removed? I assume it was because of the change in the constructor?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108532406", "body": "It's redundant and might not cause issues when we release, but provides backwards compatibility for others. By this I mean if there's another plugin (custom (not public) plugin, library, or another plugin in jenkinsci) which uses this constructor, then it would most likely fail to load, or they would not need to re-build their plugin to be compatible with newer versions. (see [here](https://wiki.jenkins-ci.org/display/JENKINS/Hint+on+retaining+backward+compatibility) for more information).\r\n\r\nThe best way to resolve this issue is:\r\n\r\n1. Remove the `@DataBoundConstructor` from the old Constructor.\r\n2. Set it to `@Deprecated` (so others know not to use it in the future).\r\n3. Put the new `@DataBoundConstructor` around the new constructor.\r\n4. Set `@DataBoundSetter` annotations around all setter methods (from the original constructor).\r\n\r\nThe link @jglick posted after the first paragraph states:\r\n\r\n```\r\nFor Java-level compatibility, leave any previous constructors in place, but mark them @Deprecated. Also remove @DataBoundConstructor from them (there can be only one).\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108532406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "timothyfredrickson": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/53", "title": "Add support for matrix builds", "body": "- Change line count variables to doubles to avoid overflow. Currently if\n  the line count increments over the integer max it goes to 0.\n- Add support for matrix jobs. Coverage displays by individual labels\n  and is aggregated for the main page.\n- Add support for environment variables to be passed in.\n\nMatrix integration code provided by:\nhttps://github.com/jenkinsci/cobertura-plugin/pull/26\n\nFixes:\nhttps://github.com/jenkinsci/cobertura-plugin/issues/37\nhttps://issues.jenkins-ci.org/browse/JENKINS-30647\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arcivanov": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/46", "title": "Allow generating coverage report on failed builds", "body": "It is useful to be able to generate reports on failed builds if Coverage is generated but build failed due to build coverage failure\nAlso it is useful to keep sources for all the builds\nAlso upgraded to latest LTS\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dennisl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/35", "title": "[JENKINS-6684] Cobertura plugin should autoconfigure for Maven projects", "body": "Here is a fix for https://issues.jenkins-ci.org/browse/JENKINS-6684\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nburtsev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/33", "title": "Correct url in column", "body": "Fix for https://github.com/jenkinsci/cobertura-plugin/issues/32 \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msabramo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/26", "title": "[JENKINS-20706] Support matrix builds", "body": "by copying and parsing `coverage.xml` files from each [`MatrixRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixRun.html).\n\nThis is my second attempt at addressing\nhttps://issues.jenkins-ci.org/browse/JENKINS-20706\n\nThis works by creating a [`MatrixAggregator`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html) that on [`endRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html#endRun%28hudson.matrix.MatrixRun%29), copies the `coverage.xml` from each [`MatrixRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixRun.html) into the root build's directory. Then in [`endBuild`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html#endBuild%28%29), those files are parsed and aggregated.\n\nThe advantage of this approach is that it seems to aggregate the coverage in a nice way -- i.e.: if my MatrixBuild does a MatrixRun for Python versions 2.6, 2.7, and 3.3 and each of those has lines that are not covered but all of the lines are covered by at least one MatrixRun, then the coverage for the overall build will be reported as 100%.\n\nRefs:\n- https://issues.jenkins-ci.org/browse/JENKINS-20706\n- https://github.com/jenkinsci/cobertura-plugin/pull/26 (this PR)\n- https://github.com/jenkinsci/cobertura-plugin/pull/22 (older PR)\n- https://groups.google.com/forum/#!topic/jenkinsci-dev/yoamyzbqVro\n\nCc: @ssogabe, @kinow, @emanuelez, @kohsuke \n\ntest\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8988730", "body": "Yep, see c35e667.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8988730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8997999", "body": "Thanks! See 2a983c7.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8997999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8998002", "body": "Thanks, see 2a983c7.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8998002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/9006957", "body": "Thanks, see fb5caf9.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/9006957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gliptak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1018239", "body": "Thanks for the change Roger\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1018239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "MoriTanosuke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1019711", "body": "Maybe https://github.com/jenkinsci/cobertura-plugin/blob/33bf5c44357d499533842a0cc14764990f576534/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L48 is a place to start?\n\nAnd https://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L216 gets the files from the workspace root.\n\nhttps://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L263 has the path to the XML coverage report.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1019711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1022634", "body": "I'm down to https://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L201 where a line says\n\n```\nbuild.getRootDir().listFiles(COBERTURA_FILENAME_FILTER);\n```\n\nMaybe this should be something like\n\n```\nbuild.getWorkspace().someSurprisingMethodCalls().listFiles(COBERTURA_FILENAME_FILTER);\n```\n\nI never looked into plugin sourcecode, so I'm not familiar with the differences between getRootDir() and getWorkspace() and other methods with similar names.\n\nBecause my project has a reconfigured workspace directory, I think the difference between root dir and workspace dir can cause this problem.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1022634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stefanbrausch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323874", "body": "Ich bin bis einschlie\u00dflich 11. Oktober 2011 nicht im B\u00fcro.\nBitte wenden Sie sich in dringenden F\u00e4llen an: qsika(at)1und1.de\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ogirardot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323881", "body": "sure ... it can wait :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "buildhive": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5230522", "body": "[Jenkins \u00bb cobertura-plugin #2](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/2/) SUCCESS\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5230522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7290986", "body": "[Jenkins \u00bb cobertura-plugin #12](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/12/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7290986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370135", "body": "[Jenkins \u00bb cobertura-plugin #13](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/13/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370961", "body": "[Jenkins \u00bb cobertura-plugin #14](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/14/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7432509", "body": "[Jenkins \u00bb cobertura-plugin #15](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/15/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7432509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7439156", "body": "[Jenkins \u00bb cobertura-plugin #16](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/16/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7439156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7525219", "body": "[Jenkins \u00bb cobertura-plugin #17](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/17/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7525219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7537165", "body": "[Jenkins \u00bb cobertura-plugin #18](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/18/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7537165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7817984", "body": "[Jenkins \u00bb cobertura-plugin #19](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/19/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7817984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8264236", "body": "[Jenkins \u00bb cobertura-plugin #23](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/23/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8264236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8293993", "body": "[Jenkins \u00bb cobertura-plugin #24](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/24/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8293993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/9479924", "body": "[Jenkins \u00bb cobertura-plugin #34](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/34/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/9479924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10715891", "body": "[Jenkins \u00bb cobertura-plugin #37](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/37/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10715891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10999481", "body": "[Jenkins \u00bb cobertura-plugin #38](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/38/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10999481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11240795", "body": "[Jenkins \u00bb cobertura-plugin #42](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/42/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11240795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11241170", "body": "[Jenkins \u00bb cobertura-plugin #43](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/43/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11241170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/17451323", "body": "[Jenkins \u00bb cobertura-plugin #51](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/51/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/17451323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21294891", "body": "[Jenkins \u00bb cobertura-plugin #56](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/56/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21294891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/22090053", "body": "[Jenkins \u00bb cobertura-plugin #58](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/58/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/22090053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ssogabe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5808578", "body": "Jenkins project use JIRA as a isuue tracking.file a ticket to https://issues.jenkins-ci.org/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5808578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11331552", "body": "Thanks, merged. bbef9a1d62b2592537272a5019e344850f1d924b\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11331552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4358428", "body": "Already fixed. See 2d78b8c4d136f3d524ece5d11fd484031c6b454f\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4358428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "podarsmarty": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7731821", "body": "I pushed some more changes to my repo after I submitted my pull request. It implements more features as well as fixes a couple bugs. If you could merge the latest version that would be great.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7731821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "imtapps": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20900514", "body": "The site must have been down, a non issue now \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20900514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jenkinsadmin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21297637", "body": "Thank you for a pull request! Please check [this document](http://jenkins-ci.org/pull-request-greeting) for how the Jenkins project handles pull requests\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21297637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "sathishkanthr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1836753", "body": "Merge pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1836753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "w25r": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4357576", "body": "You should consider moving this, and the line above to a finally{} block.  This could still cause a problem if the coverage.xml is invalid.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4357576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uhafner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7631625", "body": "I got this snippet from https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/hudson/views/LastStableColumn/column.jelly\n\njobbaseUrl is the URL to the job without the job name, shortUrl the job name and it.url the name of the action. The problem is that AbstractViewitem.getUrl contains the view part  2 times which does not work in my case. (This is the issue about).  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7631625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126678", "body": "Hmm, I don't get it. After applying that change the bug is resolved. Or does the bug still occur in your configuration? Then please update https://github.com/jenkinsci/acceptance-test-harness/blob/master/src/test/java/plugins/CheckStylePluginTest.java#L292.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302737", "body": "I finally found some time to fix as suggested by Jesse. I think still a lot of other columns also do not work yet (extra-columns, console-column, etc). \n\nI think we should improve JavaDoc of getUrl in AbstractItem.getUrl: I think it not very intuitive that a job instance now returns a different URL when it is displayed in a view or folder. This should be made clear e.g. by an example. When I read 'relative to the context root of the application' I assume that a job URL is constant and does not contain the view name. (I think it is a general good practice that something that is stored in a container should never know that it is part of that container, so a job should not know that it is part of a view or folder.)  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302979", "body": "Yes, tried with views and folders and mixed them. Also commented on https://issues.jenkins-ci.org/browse/JENKINS-23583 which describes same problem for other columns. I think all columns are affected that use relative links.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304098", "body": "> Yes, that would have been my preference too, but this behavior of `Item.getUrl` has long been there.\n\nIs it? I thought this was introduced by https://github.com/jenkinsci/jenkins/commit/ea95434938b2111d8768528823990a78bdc58d3e\nBefore that change using relative links in columns did work with Item.getUrl...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "daniel-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8125702", "body": "> The problem is that AbstractViewitem.getUrl contains the view part 2 times which does not work in my case.\n\nI don't think this is the case. You're building a relative link when inside `/view/foo/` URL from a method documented to return _the URL \u2026 relative to the context root of the application_. While its behavior changed in the context of a request, it's consistent with the documentation. I think this was also broken before when using e.g. the Cloudbees Folders plugin, when you're on `/job/Folder/` and create a relative link to `job/Folder/job/foo`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8125702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126789", "body": "@uhafner I'm sorry for not being clear in my previous comment. It referred to the behavior before this change. This may well resolve the issue (haven't tried it). It's just that the explanation you gave in the quoted comment is wrong. It's not a regression in core, but a change in core consistent with the documented behavior, that exposed the pre-existing bug in the plugin.\n\nAs a core bug was filed today that references this commit, I wanted to clarify what the issue was.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8305709", "body": "> Before that change using relative links in columns did work with Item.getUrl...\n\nOnly if you're not using `ViewGroup`s with non-`Jenkins` parent `ItemGroup`s, something that's been supported since https://github.com/jenkinsci/jenkins/commit/bbdf5c21153c7e9d60d6ed158d32aa8852f00501.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8305709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cecom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1112197", "body": "Due to that change my builds results in \"Skipping Cobertura coverage report as mojo did not run\". I execute cobertura via ant and not via the cobertura-maven-plugin so i can get a complete report over all my submodules. Can you use another check, instead of asking the maven build? For example, check of existense of a file?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1112197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "HenrikGammelgaard-zmags": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1419861", "body": "I face a similar problem in that I generate a cobertura file via js-test-driver and as such do not run the maven plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1419861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "recampbell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1467363", "body": "Yes, this seems to have broken non-M2 project types' usage of cobertura.  See https://issues.jenkins-ci.org/browse/JENKINS-12640\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1467363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ndeloof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1524025", "body": "right, so maybe should parse the xml stream and check the coverage doctype\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1524025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "egergo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1784985", "body": "I really think that this check is a bad solution for JENKINS-12640. I use ant to generate the coverage report xml, so no cobertura mojo was run. Jenkins does not read this xml (although the xml is valid and the path is correct) since v1.4.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1784985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "emanuelez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224584", "body": "I think I would put this class in a file on its own.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224608", "body": "Just style here: underscores in variable names are not standard in Java. matrixRunResult would probably be better. http://en.wikipedia.org/wiki/Naming_convention_%28programming%29#Java\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224626", "body": "public or private? better be explicit.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224679", "body": "I would probably do the merge in endBuild, so you can use the results of all the runs in the build. That will allow you to calculates averages and so on.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224699", "body": "Also, this should merge a number N of CoverageResult, not just two. See my note above.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153022", "body": "`if (`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153078", "body": "`if (`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "mbarrien": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108479744", "body": "This constructor was removed because of the review comment at https://github.com/jenkinsci/cobertura-plugin/pull/55#discussion_r92509963", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108479744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108480704", "body": "Given that the constructor tests were only testing that certain arguments were being properly set, and the change in constructor turned these into trivial setter/getter, the test didn't make sense any more. I could have added all the tests for every single setter/getter, but given that the existing constructor unit tests were not comprehensive (it only tested 5 of the 10 arguments), it didn't seem worth it at the time to rewrite and add all those tests. It could be added if we really want the explicit code coverage for the most trivial setters/getters.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108480704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108481480", "body": "When I did the switch, I didn't run into the backwards compatibility issues; it seemed like changing from a single DataBoundConstructor to multiple DataBoundSetter methods didn't break compatibility on the surface. We could restore the constructor, but it's now redundant, and only used in the very tests that were just re-added. However, I'm not an expert on this; opinions?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108481480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "zackpollard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596452", "body": "This line needs to have a check for if build.getResult() returns null, as during the pipeline (which is when this will be run) there is no build result unless one is explicitly set. In my opinion a null build result should be treated as if the build failed, possibly with a seperate message stating that a build result needs to be set prior to this running.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596612", "body": "This will likely also need the null check, however I can't test that without going in and editing the previous issue myself\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "2": {"lexotero": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/89", "title": "When coverage goes down threshold is updated and the build is not marked as unstable", "body": "Using the snippet generator I've added the following step to my `Jenkinsfile`:\r\n\r\n```\r\ncobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '80, 0, 0', failUnhealthy: true, failUnstable: true, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false\r\n```\r\n\r\nThis should set the initial threshold to 80% for lines, methods and conditionals and auto-update the minimum when the build is successful (as `autoUpdateHealth` and `autoUpdateStability` are `true` by default). But when coverage goes down the threshold is updated and the build is not marked as unstable:\r\n\r\nThe pipeline steps reports the update of the thresholds:\r\n```\r\n    Methods's new health minimum is: 78.84\r\n    Lines's new health minimum is: 82.19\r\n    Conditionals's new health minimum is: 72.23\r\n    Methods's new stability minimum is: 78.84\r\n    Lines's new stability minimum is: 82.19\r\n    Conditionals's new stability minimum is: 72.23\r\n```\r\n\r\nIn other non-pipeline jobs using the `cobertura-plugin`, when the coverage is bellow the minimum the coverage does not get updated and the build is marked as unstable.\r\n\r\n**Environment**\r\n\r\n- Jenkins v.2.73.3\r\n- Cobertura plugin v1.12\r\n- Pipeline plugin v2.5\r\n- Pipeline: API plugin v2.23.1", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/89/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "basava12345": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/88", "title": " Cobertura publishing fails with java.lang.SecurityException: slave may not mkdirs when the job runs in slave node", "body": "Jenkins master is now more strict about what commands its slaves can send to the master. Unfortunately, this prevents some plugins from functioning correctly, as those plugins do not specify which commands are open for slaves to execute and which ones are not \r\nFor more reference \r\nhttps://wiki.jenkins.io/display/JENKINS/Slave+To+Master+Access+Control\r\n\r\nHere I feel fix should be mainly related to implementing the SECURITY-144-compat module in the plugin code.\r\nHowever we have passing scenario also for the jobs running in slaves. \r\n(Are the commands being used in this case are different ? )\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dejewi": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/87", "title": "Results not published when jenkins job fails", "body": "Hi,\r\nI'm using Cobertura-plugin v1.12 and Jenkins v2.92.\r\nIn Jenkins job in section **Publish Cobertura Coverage Report** have: \r\nunselected option: `Consider only stable builds`\r\nand selected `Fail unhealthy builds` \r\n\r\nWhen Jenkins job fail because code didn't meet code coverage limits then Cobertura Coverage Report is not published.\r\n\r\n```\r\n[Cobertura] Publishing Cobertura coverage report...\r\n[Cobertura] Publishing Cobertura coverage results...\r\n[Cobertura] Cobertura coverage report found.\r\n[Cobertura] Unhealthy for the following metrics:\r\n    Methods's health is 84.24 and set minimum health is 86.24.\r\n    Lines's health is 89.49 and set minimum health is 90.49.\r\n    Conditionals's health is 53.7 and set minimum health is 54.7.\r\nERROR: Step \u2018Publish Cobertura Coverage Report\u2019 failed: [Cobertura] Failing build because it is unhealthy.\r\nRecording test results\r\nFinished: FAILURE\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/87/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plutino": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/85", "title": "source codes are not available when build fails", "body": "This could be either a bug or a feature: the current behavior is that annotated source codes are only available if a build succeeds, as indicated by this line: https://github.com/jenkinsci/cobertura-plugin/blob/6bb6d8c28e8d6d680744a94714e3d41925e2ed1a/src/main/java/hudson/plugins/cobertura/targets/CoverageResult.java#L188\r\n\r\nIn our use case, we fail a build when test coverage is unstable or unhealthy.  This means that the source codes are not available when they are most needed: when coverage drops.  \r\n\r\nIt would be great if there is an option to always make source codes available regardless of build result. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/85/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "myronBob": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/84", "title": "can it generate report with jdk1.8?", "body": "The cobertura-plugin can not generate a report when my project run with jdk1.8 over jenkins. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/84/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joshmanderson": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/83", "title": "Branch coverage reported incorrectly", "body": "`branch-rate` output in the coverage xml file is `0.1721`, yet the report states that the \"Conditionals's health is 13.12\" (and then fails the build because the unhealthy threshold is `15.0`). Upon closer inspection of the branch coverage, many files are slightly off (reports that 2 branches were missed even though they weren't), and some files are *way* off (reports that there was a maximum of 2 branches in the file, even though there is actually 39).\r\n\r\nThis issue occurs using versions `1.12` and `1.10` of the plugin.\r\n\r\nSomething to note is that coverage reporting is currently working for a different project, and the main differences are that the project which is **failing** was bootstrapped using [create-react-app](https://github.com/facebookincubator/create-react-app) and is using version `20.0.4` of [jest](https://facebook.github.io/jest/). Whereas the project where coverage reporting is **working** was not bootstrapped (created from scratch), and is using version `21.1.0` of jest. Note that both projects are using the same version of [istanbul-reports](https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-reports) (`1.1.2`) \u2013 in case that matters.\r\n\r\nI thought initially that the coverage wasn't being collected properly, however the html and xml files generated seem to have the correct coverage values in them, it's only the branch values reported by the plugin which are incorrect.\r\n\r\nTo summarise the problem:\r\n- Correct coverage values are output to the coverage xml file\r\n- Incorrect branch/conditional coverage values are reported by the plugin\r\n\r\nAre you aware of any version compatibility issues that could be occurring here such that the xml file is read incorrectly?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/83/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tsondergaard": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/82", "title": "Support more than one report per job", "body": "It would be great to be able to generate more than one coverage report and time plot. We do that now by teiggering a separate job that uses the same workspace as the first job to generate \u201cfocused\u201d coverage report for certain areas that we are working on improving code coverage in", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gvasquez-waypoint": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/78", "title": "Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor", "body": "On a Jenkins task configured to use Cobertura to report Code Coverage both to Jenkins and SonarQube we are getting the following warnings in the console log:\r\n\r\n    [WARNING] Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'uncovered_lines' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'coverage_line_hits_data' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'conditions_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'uncovered_conditions' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'conditions_by_line' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n    [WARNING] Coverage measure for metric 'covered_conditions_by_line' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\r\n\r\nWhat additional info should I provide? What could wrong?\r\n\r\n - Jenkins: ver 2.82\r\n - SonarQube: Version 6.5 (build 27846)\r\n - Cobertura Plugin in Jenkins: 1.19\r\n - Cobertura Plugin in SonarQube: 1.9.1\r\n - cobertura-maven-plugin:2.7\r\n\r\nIssue in [StackExchange](https://sqa.stackexchange.com/questions/30148/coverage-measure-for-metric-lines-to-cover-should-not-be-saved-directly-by-a-s) also.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/78/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neerajsb": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/71", "title": "Jenkins is unable to find and display the source markup when a build fails due to a test failure", "body": "If a build is configured to fail if a test point fails (using the \"Failed tests mark build as failure\" option under TAP results), the coverage report does not find the source files and encode them based on coverage results. The coverage results, however, are reported correctly in the form of numbers.\r\n\r\nThe issue seems to be in the following piece of code in CoverageResult.java - \r\n\r\n public boolean isSourceFileAvailable() {\r\n        if (hasPermission()) {\r\n            return owner == owner.getParent().getLastSuccessfulBuild() && getSourceFile().exists();\r\n        }\r\n        return false;\r\n    }\r\n\r\nIn my opinion, as a user I would expect the source code encoding to be reported as well if the coverage results are computed (and a .XML file is created in the workspace). So should the check be limited to something as simple as - \r\n\r\nif (hasPermission()) {\r\n    return owner ==  getSourceFile().exists();\r\n }\r\n return false;\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/71/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "setasan": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/60", "title": "Error when publishing report to jenkins", "body": "After the coverage report is generated, it is trying to publish the report but it is failing. Not sure if this is a conflict with other plugin and related to the classloader.\r\n\r\njava.lang.ClassCastException: com.ctc.wstx.stax.WstxInputFactory cannot be cast to javax.xml.stream.XMLInputFactory\r\n\tat javax.xml.stream.XMLInputFactory.newInstance(XMLInputFactory.java:153)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher$ParseReportCallable.invoke(CoberturaPublisher.java:532)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher$ParseReportCallable.invoke(CoberturaPublisher.java:519)\r\n\tat hudson.FilePath.act(FilePath.java:990)\r\n\tat hudson.FilePath.act(FilePath.java:968)\r\n\tat hudson.plugins.cobertura.CoberturaPublisher.perform(CoberturaPublisher.java:337)\r\n\tat hudson.tasks.BuildStepMonitor$3.perform(BuildStepMonitor.java:45)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:782)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:723)\r\n\tat hudson.maven.MavenModuleSetBuild$MavenModuleSetBuildExecution.post2(MavenModuleSetBuild.java:1037)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:668)\r\n\tat hudson.model.Run.execute(Run.java:1763)\r\n\tat hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:529)\r\n\tat hudson.model.ResourceController.execute(ResourceController.java:98)\r\n\tat hudson.model.Executor.run(Executor.java:410)", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/60/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rrussell39": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/58", "title": "How can I set the Source Encoding", "body": "Hello - We are using Jenkins 1.642.1 and we generate Cobertura reports for both build/deploy jobs and functional test jobs.  The generated report includes a link to the source file which included red/green color coding to indicate line hits.  This file includes non-ASCII characters so garbage chars are rendered in the html view of this file.  \nWhen I check the configuration of the build job (which is generated by groovy scripts) the Source Encoding setting for the 'Publish Cobertura Coverage Report' indicates \"ASCII\" as the setting.  I need it to be UTF-8.  I can choose this manually, but we don't mess with our builds manually.  Everything is generated in CI style - using programming.\nIn this case, I see the line in the groovy script and it calls 'cobertura <path to file>'.  There doesn't seem to be any room for additional arguments including that for the source encoding.  Can someone point me the right direction to set this value programmatically?\n\nThanks,\nRob\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JanC": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/54", "title": "java.lang.SecurityException: agent may not write", "body": "Hi,\nI'm using the cobertura plugin in a job that runs on a Jenkins node. The jobs fails because\n\n```\n[Cobertura] Publishing Cobertura coverage report...\nPublishing Cobertura coverage results...\nCobertura coverage report found.\nERROR: Build step failed with exception\njava.lang.SecurityException: agent may not write \n```\n\nI set up the Slave to master to `allow all < BUILDDIR >/.*` as described here but it still fails\nhttps://wiki.jenkins-ci.org/display/JENKINS/Slave+To+Master+Access+Control\n\nHow can I set the correct rights for the plugin?\n\ncheers\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/54/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamtheturtle": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/52", "title": "Impossible to see Coverage Breakdown for a package named \"api\"", "body": "If I visit the \"Cobertura Coverage Report\" page for a job and then go to \"Coverage Breakdown by Package\", if that package is named \"api\" the link takes me to Jenkins' api page, not the breakdown for that package. I guess one solution is to use `/<packagename>-report` for the URL instead of `/<packagename>`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/52/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ssbarnea": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/51", "title": "JENKINS-23183: Add precision option for the \"Stability auto update\"/\"Health auto update\" options", "body": "Now we get 50% of the builds failed even when a single line of code is modified, just because of the rounding errors.\n\nThe situation is even worse because exporting status via cc.xml files (CCTray) supports only success and failed, and the unstable is mapped as a failure without any way of changing this. So we see lots of \"red\" builds just because the code coverage went from 99.99% to 99.98%. Clearly the threshold for measuring a decrease should be a percent, not a \"rounding error\".\n\nBased on original bug raise at https://issues.jenkins-ci.org/browse/JENKINS-23183\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/51/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timcosta": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/48", "title": "Populate AbstractTestResultAction in the build object", "body": "per https://github.com/janinko/ghprb/issues/315, it would be great if the test results could be published to `build.AbstractTestResultAction` or whatever the appropriate location is.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/48/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maninder-singh": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/45", "title": "Need to set coverage metric of another job based on current job", "body": "Hi Team,\nQuestion : I have two jobs (Job_Dev , Job_Merge) in Jenkins. My requirement is to update the coverage metrics parameter of Job_Merge job with the parameter of Job_Dev job through cobertura plugin.\nCan you please guide me how to proceed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/45/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IvanAnishchuk": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/44", "title": "Links from project page.", "body": "They lead to `cobertura/` which gets redirected to `{lastbuildnumber}/cobertura/` which is usually ok by in some cases, when project name contains URI-encode symbols (it's sometimes important for multibranch projects), they get decoded and it breaks everything. Yes, I know that relying on URI-encoding is somewhat fragile idea, but that's how things are.\n\nCan you please change those links to `lastCompletedBuild/cobertura/` which is the same thing but doesn't require any redirects? If nothing else, without that additional redirect it will be a bit faster for users.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abbybader": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/41", "title": "Can't find coverage.xml, which exists and matches search pattern", "body": "Hi, the Cobertura plugin seems to have a problem finding the coverage documents.  When configured to fail when no coverage files are found, the job does fail.\n\nThe files are there.  Log message is: \n\n```\n[Cobertura] No coverage results were found using the pattern '**/target/site/cobertura/coverage.xml\u200b' relative to '/home/[user]/jenkins_server_home/jenkins/jobs/Measure_code_quality/workspace'\n```\n\nListing such a directory:\n\n```\n$ ll /home/[user]/jenkins_server_home/jenkins/jobs/Measure_code_quality/workspace/[appName]/target/site/cobertura\ntotal 304\n-rw-r--r-- 1 jenkins jenkins 308049 Jan 15 14:07 coverage.xml\n```\n\nBrowsing the job's workspace, I can see the file \"[appName]/target/site/cobertura/coverage.xml\", which is non-empty and looks well-formed.  Coverage rates are non-zero.\n\nI have verfied that these files are actively being produced by wiping out the job's workspace and rebuilding.\n\nCan you offer any insight into this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/41/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "max3903": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/39", "title": "Feature request : Differential code coverage", "body": "As asked here: http://stackoverflow.com/questions/7286021/differential-code-coverage, it would be nice to be able to use the code coverage in a build.\n\nBased on a configuration parameter, a build would:\n- fail if the code coverage is decreasing\n- fail if the code coverage is not increasing\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/39/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "isarunasi": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/37", "title": "rounding issues", "body": "It seems like coverage plugin rounds coverage before saving, but it seems to use actual value when checking whether build should fail or not. This causes issues when 'ratcheting' is used and coverage is meant to slowly go up. What happens is that once coverage reaches x.05, builds start to fail because plugin is\nthen requiring x.1 coverage.\nThis probably only occurs when auto update is enabled.\n\nJenkins version: 1.583\nCobertura plugin version: 1.9.5\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/37/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verkholantsev": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/29", "title": "Source coverage report for several recent builds", "body": "I'd try to take a look at source coverage report for some old build, but get this message:\n\n![2014-05-26 15-12-51 google](https://cloud.githubusercontent.com/assets/1927020/3081820/cd0015d2-e4c6-11e3-9f78-2565e662750f.png)\n\nIs there any way to setup `cobertura-plugin` to keep source coverage reports for several recent builds?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/29/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cmpsoares91": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/28", "title": "Change report column names?", "body": "Hi, I wanted to know if it's possible to change, in Jenkins, when using Cobertura's Project Coverage Summary to change the column names?\n\nFor example, how can I change the following to a custom name:\n![Image](http://i.stack.imgur.com/7imCh.png)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/28/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ronapelbaum": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/24", "title": "configure which CoverageMetric to be shown in chart", "body": "It would be really nice if i could'e configure which CoverageMetric was shown in the chart, i.e. I'm interested only in line coverage percentage, so I want to see only that in the chart.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/24/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pjrt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/15", "title": "Need more documentation", "body": "There is no README in the repo and there are no help buttons on the Jenkins UI. \n\nThis is a pretty complex plugin and would be awesome if there was some sort of documentation (either here or on the Jenkins UI, preferably the latter, maybe both). \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/15/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20416927", "body": "I was wrong, there is some documentation on the Jenkins UI (small little text under the actual checkboxes). \n\nThis should probably follow convention and use the info button. \n\nI'm willing to do this, but I need more info on what exactly these buttons do. What is the difference between an unstable and unhealthy build? How do they behave differently? What does it mean to \"Auto update threshold for health on successful build\". What does it do if you don't set this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20416927/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/0db4272838dfc3955f827e5cf5e8593e3de85ad8", "message": "POM update. (#90)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1915384", "body": "What was the purpose of this? AFAICT these classes are neither persisted using XStream, nor sent over remoting from a slave (since `coverage.xml` is simply copied to the build dir on master), and I cannot find any indication that either of these things was ever different in the plugin\u2019s history.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1915384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7615398", "body": "This fix does not make sense to me. I would suggest reverting the change to `getUrl` and changing this view to use\n\n```\n${rootURL}/${it.getUrl(job)}\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7615398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8138818", "body": "FWIW the code in `LastStableColumn/column.jelly` looks wrong to me too; `jobBaseUrl` is deprecated. Just have not had a free moment to think about it and deal with it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8138818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302902", "body": "This looks better to me. I assume it works as desired, even when folders and/or views are in use? Then columns in Jenkins core ought to be fixed too\u2014note to self.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8303000", "body": "Agreed that the Javadoc probably needs clarification.\n\n> I think it is a general good practice that something that is stored in a container should never know that it is part of that container\n\nYes, that would have been my preference too, but this behavior of `Item.getUrl` has long been there.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8303000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304571", "body": ">  I thought this was introduced by jenkinsci/jenkins@ea95434\n\nWell that refined the behavior of `getUrl` to match its Javadoc in more circumstances, but it had long been context-sensitive.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1523574", "body": "It is legal for an XML file to omit the prolog, so here you are relying on Cobertura to continue to emit the prolog.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1523574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509210", "body": "`transient`", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509407", "body": "This field must be `transient` or you will get all kinds of crazy errors relating to lazy loading. See Javadoc for `RunAction2`.\r\n\r\n(Not a problem introduced by this PR, but may as well fix it now.)", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509495", "body": "Could retain this (somewhat questionable) logic by checking for `instanceof AbstractProject`.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/92509495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "TobiX": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/8e853d18c80b7e7414fb1a6c886cc69210f83103", "message": "[JENKINS-13489] Fix highlight for partially covered branches. (#34)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jeffpearce": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/6bb6d8c28e8d6d680744a94714e3d41925e2ed1a", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/af64bee46eea294ab040a84320b4eaf097ee1928", "message": "[maven-release-plugin] prepare release cobertura-1.12"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/544b248f083d0ce24f9038ccfdac39ab1fce5bd5", "message": "JENKINS-47639 Display a message when missing coverage fails build (#81)\n\n* JENKINS-47639 Display a message when missing coverage fails build\r\n\r\n* Update comment for CoberturaAbortException\r\n\r\n* Fix build error\r\n\r\n* Minor format change\r\n\r\n* Add license to POM"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/f244b1fd4cfe334a6589941408e089afd6a66245", "message": "Merge pull request #80 from jenkinsci/logimprove\n\nJENKINS-25781 Add common prefix to all logs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/12fa58fadd9918129dced30a676dc1422eb7c7c3", "message": "Add common prefix to all logs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/70db38fd0c0e1d7730b47332640df2eabe97e95b", "message": "Merge pull request #79 from beamerblvd/add-line-count-to-coverage-paint\n\nAdd total line count to coverage paint for programmatic usage"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1c3bdfc5effa766a94b18772b8fbe6922d1a6240", "message": "Adding Jenkinsfile to integrate with jenkinsci"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/242f249bea4bc0fbeeb692905d06d08b4d9eab00", "message": "Merge pull request #77 from jeffpearce/compat\n\nAdd backward compatibility for phabricator plugin"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/362eb18772589aec2f9b0a262478a48a76916109", "message": "Merge pull request #76 from jeffpearce/snippet\n\nAdd support for coverage target strings for snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/172a74ebb614732e4ece670f77adeb4e929808af", "message": "Add backward compatibility for phabricator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/08434e8bc0c70792fcb443e364ad2c5499bfa6a4", "message": "Add support for coverage targets in snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1be253dd2410284efd5a0600c4ed87f58cfc50c3", "message": "Merge pull request #3 from jenkinsci/master\n\nMerge upstream"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/1b2e481b6febe40a1a7e7fda741c6e470e14b783", "message": "Merge pull request #70 from fengxx/feature/pipeline\n\nsupport pipeline script snippet generator"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/bf8c78756212603565d57545a407116b5f80e155", "message": "Merge remote-tracking branch 'upstream/master'"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/ebeb4efbd90dfa1185031bb5f0b1b0f778d88e7b", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/31a884b5b7cdbe1656425176c37c79ec8d07647f", "message": "[maven-release-plugin] prepare release cobertura-1.11"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/02555536e0e5027b202ea7ef6bae890f98c1dba8", "message": "Merge pull request #2 from jenkinsci/master\n\nMerge jenkinsci"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/d4342ccbb8b15ea1530d1b5860c64b1c5a9b8d8c", "message": "Merge pull request #74 from jeffpearce/maintainers\n\nUpdating list of maintainers"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/06d4395e0380076dc902ead52337ff0d91491a9e", "message": "Updating list of maintainers"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/7dbfcac1664a25b76c60bb6f2ea3a3a5220a7da1", "message": "Merge branch 'master' into cov-targets"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/c28a6615a3fc7cd59837a94264afe8d9f89ad9b3", "message": "Undo more tabs"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/547576ff2cd9e42af36a34e4a67b5384bfe05ece", "message": "Undo tab conversion"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/b1dfa23ed3883a753b5e228eed8edd8922559f95", "message": "Merge pull request #1 from jenkinsci/master\n\nMerge from jenkinsci"}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/91", "title": "Bump up required version to an LTS", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108040293", "body": "Presumably (@mbarrien would know). I'm putting it back in and restoring the tests - update to PR coming", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108040293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108536410", "body": "@christ66: if I understand correctly, all of the above should be taken care of with my last commit. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108536410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "beamerblvd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/250e3410f77748019a7cba0cf5ad9f3eee631a28", "message": "Add a test and some asserts to coverage paint total lines"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/aef29c14e47f6c4b9326b066a3abbcf27f7b783a", "message": "Fix compile error"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/2b8f8db781840fd760515dd2ec61d4371e17bb9c", "message": "Fix syntax error"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/decc745c0f1c3d565d0d80a921f8778dc9f259db", "message": "Add total line count to coverage paint for programmatic usage"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "christ66": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/commits/2637528147cf7c268e49ab2025d58bb2219a9669", "message": "Merge pull request #68 from jeffpearce/cov-targets\n\nExpose coverage targets"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787316", "body": ":bug: This will cause backward compatibility issues.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787937", "body": "Is there a reason why this test was removed? I assume it was because of the change in the constructor?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/107787937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108532406", "body": "It's redundant and might not cause issues when we release, but provides backwards compatibility for others. By this I mean if there's another plugin (custom (not public) plugin, library, or another plugin in jenkinsci) which uses this constructor, then it would most likely fail to load, or they would not need to re-build their plugin to be compatible with newer versions. (see [here](https://wiki.jenkins-ci.org/display/JENKINS/Hint+on+retaining+backward+compatibility) for more information).\r\n\r\nThe best way to resolve this issue is:\r\n\r\n1. Remove the `@DataBoundConstructor` from the old Constructor.\r\n2. Set it to `@Deprecated` (so others know not to use it in the future).\r\n3. Put the new `@DataBoundConstructor` around the new constructor.\r\n4. Set `@DataBoundSetter` annotations around all setter methods (from the original constructor).\r\n\r\nThe link @jglick posted after the first paragraph states:\r\n\r\n```\r\nFor Java-level compatibility, leave any previous constructors in place, but mark them @Deprecated. Also remove @DataBoundConstructor from them (there can be only one).\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108532406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "timothyfredrickson": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/53", "title": "Add support for matrix builds", "body": "- Change line count variables to doubles to avoid overflow. Currently if\n  the line count increments over the integer max it goes to 0.\n- Add support for matrix jobs. Coverage displays by individual labels\n  and is aggregated for the main page.\n- Add support for environment variables to be passed in.\n\nMatrix integration code provided by:\nhttps://github.com/jenkinsci/cobertura-plugin/pull/26\n\nFixes:\nhttps://github.com/jenkinsci/cobertura-plugin/issues/37\nhttps://issues.jenkins-ci.org/browse/JENKINS-30647\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arcivanov": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/46", "title": "Allow generating coverage report on failed builds", "body": "It is useful to be able to generate reports on failed builds if Coverage is generated but build failed due to build coverage failure\nAlso it is useful to keep sources for all the builds\nAlso upgraded to latest LTS\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dennisl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/35", "title": "[JENKINS-6684] Cobertura plugin should autoconfigure for Maven projects", "body": "Here is a fix for https://issues.jenkins-ci.org/browse/JENKINS-6684\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nburtsev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/33", "title": "Correct url in column", "body": "Fix for https://github.com/jenkinsci/cobertura-plugin/issues/32 \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msabramo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/26", "title": "[JENKINS-20706] Support matrix builds", "body": "by copying and parsing `coverage.xml` files from each [`MatrixRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixRun.html).\n\nThis is my second attempt at addressing\nhttps://issues.jenkins-ci.org/browse/JENKINS-20706\n\nThis works by creating a [`MatrixAggregator`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html) that on [`endRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html#endRun%28hudson.matrix.MatrixRun%29), copies the `coverage.xml` from each [`MatrixRun`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixRun.html) into the root build's directory. Then in [`endBuild`](http://javadoc.jenkins-ci.org/hudson/matrix/MatrixAggregator.html#endBuild%28%29), those files are parsed and aggregated.\n\nThe advantage of this approach is that it seems to aggregate the coverage in a nice way -- i.e.: if my MatrixBuild does a MatrixRun for Python versions 2.6, 2.7, and 3.3 and each of those has lines that are not covered but all of the lines are covered by at least one MatrixRun, then the coverage for the overall build will be reported as 100%.\n\nRefs:\n- https://issues.jenkins-ci.org/browse/JENKINS-20706\n- https://github.com/jenkinsci/cobertura-plugin/pull/26 (this PR)\n- https://github.com/jenkinsci/cobertura-plugin/pull/22 (older PR)\n- https://groups.google.com/forum/#!topic/jenkinsci-dev/yoamyzbqVro\n\nCc: @ssogabe, @kinow, @emanuelez, @kohsuke \n\ntest\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8988730", "body": "Yep, see c35e667.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8988730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8997999", "body": "Thanks! See 2a983c7.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8997999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8998002", "body": "Thanks, see 2a983c7.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8998002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/9006957", "body": "Thanks, see fb5caf9.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/9006957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gliptak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1018239", "body": "Thanks for the change Roger\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1018239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "MoriTanosuke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1019711", "body": "Maybe https://github.com/jenkinsci/cobertura-plugin/blob/33bf5c44357d499533842a0cc14764990f576534/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L48 is a place to start?\n\nAnd https://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L216 gets the files from the workspace root.\n\nhttps://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L263 has the path to the XML coverage report.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1019711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1022634", "body": "I'm down to https://github.com/jenkinsci/cobertura-plugin/blob/master/src/main/java/hudson/plugins/cobertura/CoberturaPublisher.java#L201 where a line says\n\n```\nbuild.getRootDir().listFiles(COBERTURA_FILENAME_FILTER);\n```\n\nMaybe this should be something like\n\n```\nbuild.getWorkspace().someSurprisingMethodCalls().listFiles(COBERTURA_FILENAME_FILTER);\n```\n\nI never looked into plugin sourcecode, so I'm not familiar with the differences between getRootDir() and getWorkspace() and other methods with similar names.\n\nBecause my project has a reconfigured workspace directory, I think the difference between root dir and workspace dir can cause this problem.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/1022634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stefanbrausch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323874", "body": "Ich bin bis einschlie\u00dflich 11. Oktober 2011 nicht im B\u00fcro.\nBitte wenden Sie sich in dringenden F\u00e4llen an: qsika(at)1und1.de\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ogirardot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323881", "body": "sure ... it can wait :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/2323881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "buildhive": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5230522", "body": "[Jenkins \u00bb cobertura-plugin #2](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/2/) SUCCESS\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5230522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7290986", "body": "[Jenkins \u00bb cobertura-plugin #12](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/12/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7290986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370135", "body": "[Jenkins \u00bb cobertura-plugin #13](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/13/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370961", "body": "[Jenkins \u00bb cobertura-plugin #14](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/14/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7370961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7432509", "body": "[Jenkins \u00bb cobertura-plugin #15](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/15/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7432509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7439156", "body": "[Jenkins \u00bb cobertura-plugin #16](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/16/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7439156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7525219", "body": "[Jenkins \u00bb cobertura-plugin #17](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/17/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7525219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7537165", "body": "[Jenkins \u00bb cobertura-plugin #18](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/18/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7537165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7817984", "body": "[Jenkins \u00bb cobertura-plugin #19](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/19/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7817984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8264236", "body": "[Jenkins \u00bb cobertura-plugin #23](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/23/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8264236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8293993", "body": "[Jenkins \u00bb cobertura-plugin #24](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/24/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/8293993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/9479924", "body": "[Jenkins \u00bb cobertura-plugin #34](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/34/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/9479924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10715891", "body": "[Jenkins \u00bb cobertura-plugin #37](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/37/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10715891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10999481", "body": "[Jenkins \u00bb cobertura-plugin #38](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/38/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/10999481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11240795", "body": "[Jenkins \u00bb cobertura-plugin #42](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/42/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11240795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11241170", "body": "[Jenkins \u00bb cobertura-plugin #43](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/43/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11241170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/17451323", "body": "[Jenkins \u00bb cobertura-plugin #51](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/51/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/17451323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21294891", "body": "[Jenkins \u00bb cobertura-plugin #56](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/56/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21294891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/22090053", "body": "[Jenkins \u00bb cobertura-plugin #58](https://buildhive.cloudbees.com/job/jenkinsci/job/cobertura-plugin/58/) SUCCESS\nThis pull request looks good\n[(what's this?)](https://www.cloudbees.com/what-is-buildhive)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/22090053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ssogabe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5808578", "body": "Jenkins project use JIRA as a isuue tracking.file a ticket to https://issues.jenkins-ci.org/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/5808578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11331552", "body": "Thanks, merged. bbef9a1d62b2592537272a5019e344850f1d924b\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/11331552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4358428", "body": "Already fixed. See 2d78b8c4d136f3d524ece5d11fd484031c6b454f\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4358428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "podarsmarty": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7731821", "body": "I pushed some more changes to my repo after I submitted my pull request. It implements more features as well as fixes a couple bugs. If you could merge the latest version that would be great.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/7731821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "imtapps": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20900514", "body": "The site must have been down, a non issue now \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/20900514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jenkinsadmin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21297637", "body": "Thank you for a pull request! Please check [this document](http://jenkins-ci.org/pull-request-greeting) for how the Jenkins project handles pull requests\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/issues/comments/21297637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "sathishkanthr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1836753", "body": "Merge pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/1836753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "w25r": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4357576", "body": "You should consider moving this, and the line above to a finally{} block.  This could still cause a problem if the coverage.xml is invalid.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/4357576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uhafner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7631625", "body": "I got this snippet from https://github.com/jenkinsci/jenkins/blob/master/core/src/main/resources/hudson/views/LastStableColumn/column.jelly\n\njobbaseUrl is the URL to the job without the job name, shortUrl the job name and it.url the name of the action. The problem is that AbstractViewitem.getUrl contains the view part  2 times which does not work in my case. (This is the issue about).  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/7631625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126678", "body": "Hmm, I don't get it. After applying that change the bug is resolved. Or does the bug still occur in your configuration? Then please update https://github.com/jenkinsci/acceptance-test-harness/blob/master/src/test/java/plugins/CheckStylePluginTest.java#L292.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302737", "body": "I finally found some time to fix as suggested by Jesse. I think still a lot of other columns also do not work yet (extra-columns, console-column, etc). \n\nI think we should improve JavaDoc of getUrl in AbstractItem.getUrl: I think it not very intuitive that a job instance now returns a different URL when it is displayed in a view or folder. This should be made clear e.g. by an example. When I read 'relative to the context root of the application' I assume that a job URL is constant and does not contain the view name. (I think it is a general good practice that something that is stored in a container should never know that it is part of that container, so a job should not know that it is part of a view or folder.)  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302979", "body": "Yes, tried with views and folders and mixed them. Also commented on https://issues.jenkins-ci.org/browse/JENKINS-23583 which describes same problem for other columns. I think all columns are affected that use relative links.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8302979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304098", "body": "> Yes, that would have been my preference too, but this behavior of `Item.getUrl` has long been there.\n\nIs it? I thought this was introduced by https://github.com/jenkinsci/jenkins/commit/ea95434938b2111d8768528823990a78bdc58d3e\nBefore that change using relative links in columns did work with Item.getUrl...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8304098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "daniel-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8125702", "body": "> The problem is that AbstractViewitem.getUrl contains the view part 2 times which does not work in my case.\n\nI don't think this is the case. You're building a relative link when inside `/view/foo/` URL from a method documented to return _the URL \u2026 relative to the context root of the application_. While its behavior changed in the context of a request, it's consistent with the documentation. I think this was also broken before when using e.g. the Cloudbees Folders plugin, when you're on `/job/Folder/` and create a relative link to `job/Folder/job/foo`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8125702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126789", "body": "@uhafner I'm sorry for not being clear in my previous comment. It referred to the behavior before this change. This may well resolve the issue (haven't tried it). It's just that the explanation you gave in the quoted comment is wrong. It's not a regression in core, but a change in core consistent with the documented behavior, that exposed the pre-existing bug in the plugin.\n\nAs a core bug was filed today that references this commit, I wanted to clarify what the issue was.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8126789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8305709", "body": "> Before that change using relative links in columns did work with Item.getUrl...\n\nOnly if you're not using `ViewGroup`s with non-`Jenkins` parent `ItemGroup`s, something that's been supported since https://github.com/jenkinsci/jenkins/commit/bbdf5c21153c7e9d60d6ed158d32aa8852f00501.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/comments/8305709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "cecom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1112197", "body": "Due to that change my builds results in \"Skipping Cobertura coverage report as mojo did not run\". I execute cobertura via ant and not via the cobertura-maven-plugin so i can get a complete report over all my submodules. Can you use another check, instead of asking the maven build? For example, check of existense of a file?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1112197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "HenrikGammelgaard-zmags": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1419861", "body": "I face a similar problem in that I generate a cobertura file via js-test-driver and as such do not run the maven plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1419861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "recampbell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1467363", "body": "Yes, this seems to have broken non-M2 project types' usage of cobertura.  See https://issues.jenkins-ci.org/browse/JENKINS-12640\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1467363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ndeloof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1524025", "body": "right, so maybe should parse the xml stream and check the coverage doctype\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1524025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "egergo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1784985", "body": "I really think that this check is a bad solution for JENKINS-12640. I use ant to generate the coverage report xml, so no cobertura mojo was run. Jenkins does not read this xml (although the xml is valid and the path is correct) since v1.4.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/1784985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "emanuelez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224584", "body": "I think I would put this class in a file on its own.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224608", "body": "Just style here: underscores in variable names are not standard in Java. matrixRunResult would probably be better. http://en.wikipedia.org/wiki/Naming_convention_%28programming%29#Java\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224626", "body": "public or private? better be explicit.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224679", "body": "I would probably do the merge in endBuild, so you can use the results of all the runs in the build. That will allow you to calculates averages and so on.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224699", "body": "Also, this should merge a number N of CoverageResult, not just two. See my note above.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/8224699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153022", "body": "`if (`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153078", "body": "`if (`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/39153078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "mbarrien": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108479744", "body": "This constructor was removed because of the review comment at https://github.com/jenkinsci/cobertura-plugin/pull/55#discussion_r92509963", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108479744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108480704", "body": "Given that the constructor tests were only testing that certain arguments were being properly set, and the change in constructor turned these into trivial setter/getter, the test didn't make sense any more. I could have added all the tests for every single setter/getter, but given that the existing constructor unit tests were not comprehensive (it only tested 5 of the 10 arguments), it didn't seem worth it at the time to rewrite and add all those tests. It could be added if we really want the explicit code coverage for the most trivial setters/getters.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108480704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108481480", "body": "When I did the switch, I didn't run into the backwards compatibility issues; it seemed like changing from a single DataBoundConstructor to multiple DataBoundSetter methods didn't break compatibility on the surface. We could restore the constructor, but it's now redundant, and only used in the very tests that were just re-added. However, I'm not an expert on this; opinions?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/108481480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "zackpollard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596452", "body": "This line needs to have a check for if build.getResult() returns null, as during the pipeline (which is when this will be run) there is no build result unless one is explicitly set. In my opinion a null build result should be treated as if the build failed, possibly with a seperate message stating that a build result needs to be set prior to this running.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596612", "body": "This will likely also need the null check, however I can't test that without going in and editing the previous issue myself\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/cobertura-plugin/pulls/comments/79596612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}