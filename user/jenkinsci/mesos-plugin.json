{"_default": {"1": {"kontact-chan": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/308", "title": "pipeline jobs fails after master restarts", "body": "A pipeline job after master restart fails to reconnect.\r\n1 - Jenkins is loosing the slave\r\n2 - Mesos shows it as a active empty framework\r\n\r\nHere is the console log of my pipeline job, after master restart:\r\n<snip>\r\npipeline\r\n[Pipeline] {\r\n[Pipeline] sleep\r\nSleeping for 4 min 10 sec\r\nResuming build at Tue Dec 19 19:21:13 PST 2017 after Jenkins restart\r\nWaiting to resume part of sandbox ? test-mesos-pipeline # 2: ???\r\nWaiting to resume part of sandbox ? test-mesos-pipeline # 2: There are no nodes with the label ?mesos-jenkins-a4ea24452e554a4bb79a32caedfd275f-mesospawplatform? \r\n<snip>", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "quietclaw": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/307", "title": "Is this plugin support mesos 1.4.1 and jenkins 2.89.2 ?", "body": "", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mwmanley": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/306", "title": "Jenkins can only launch slaves when talking to current mesos master ", "body": "I have redundant mesos masters that elect through ZooKeeper, as is custom.  Other applications like marathon seem to be able to handle finding the master on their own, but Jenkins seems to only need to be connected to a single master, but has to be connected to the elected master.  So if this master moves due to maintenance or whatever, then Jenkins loses connectivity and cannot launch any slaves.\r\n\r\nHas anyone else seen this behaviour?  We're running 1.2 here.  If there is something grossly missing or if I have the ability to enumerate all my masters and it can do the right thing from there, please let me know.  Otherwise, this seems like a bug.\r\n\r\nThanks much!", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sjcollin": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/303", "title": "When using 'Docker Image Can Be Customized', plugin ignores mesos offer selection attributes", "body": "When a mesos cloud has multiple nodes and some nodes ares setup with specific mesos offer selection attributes, the agents that are created by mesos no longer are restricted to just those nodes in the defined selection attributes when a docker image is provided in a job using the 'Docker Image Can Be Customized'\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/296", "title": "Launch slave agent provisioning before a scheduled build", "body": "So that scheduled builds don't have to wait (sometimes up to two minutes+) for an agent to be created with docker container, allow for the launch of an agent X amount of time before builds that have known scheduled build times.\r\n\r\nThanks, great work on this plugin.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/290", "title": "Support Mesos maintenance primitives in the Jenkins Mesos Framework", "body": "Need to be able to drain/disable Mesos agents for maintenance.\r\n\r\nI'm assuming that the mesos-plugin doesn't support this feature \r\nhttp://mesos.apache.org/documentation/latest/maintenance/\r\nas I have tried to use and it never drained/stopped new Jenkins slave nodes from being created on a Mesos agent.\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/266", "title": "Be able to duplicate a mesos config section", "body": "When creating a number of Mesos cloud configs (via 'Add new Cloud') which may include Docker which also has its own config (volumes etc), it would help reduce manual steps if we had the ability to 'Duplicate' a mesos config that creates an identical configuration so small changes (such as just a change of the docker image and label) could be accomplished without manually copying all the identically configured items.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hibbert": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/301", "title": "Using an environment variable as part of a labels docker image", "body": "Hi,\r\n\r\nNot sure if this is possible as maybe jenkins environment variables are just for use in jobs but will ask anyway. We have an environment variable DOCKER_REPO which holds the URL of our docker repo, we use this as part of our jenkins jobs, but as all our slaves come from there I was hoping we could use this variable as part of the docker image string in the mesos cloud slave docker image? Maybe this is possible with a fix? (Mesos Cloud > Advanced > Add > Fill out > Click Advanced > Select Use Docker Containerizer > Fill in docker image > Try using $DOCKER_REPO/image:tag > Launch a job using this label > Fails to pull image)\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattkirby": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/297", "title": "No release that includes support for mesos maintenance concepts", "body": "The latest release was created before #243 landed in master. Since that commit has landed it would be great to have a released version of the mesos-plugin that includes support for these capabilities.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michaeljs1990": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/295", "title": "Can't customize container with private image", "body": "When I select the \"Docker Image Can Be Customized\" checkbox the container constantly fails even when the container I am overwriting it with is the default image that is working for other jobs.\r\n\r\nThis is all that shows up on the slave when it fails\r\n```\r\nJun 29 12:43:08 ms-1 mesos-slave[11508]: E0629 16:43:08.662935 11565 slave.cpp:3903] Failed to update resources for container c683e7a4-db0f-4ba2-a5ad-dbc57fd5c3d4 of executor 'mesos-jenkins-2ed8308e20af4dcfb63d15b300797c1a-mesosBase:docker' running task mesos-jenkins-2ed8308e20af4dcfb63d15b300797c1a-mesosBase:docker on status update for terminal task, destroying container: Failed to run 'docker -H unix:///var/run/docker.sock inspect mesos-85f895ed-06ee-401c-96c9-42dc051afd76-S1.c683e7a4-db0f-4ba2-a5ad-dbc57fd5c3d4': exited with status 1; stderr='Error: No such image or container: mesos-85f895ed-06ee-401c-96c9-42dc051afd76-S1.c683e7a4-db0f-4ba2-a5ad-dbc57fd5c3d4\r\nJun 29 12:48:02 ms-1 mesos-slave[11508]: I0629 16:48:02.811250 11591 slave.cpp:4952] Framework 85f895ed-06ee-401c-96c9-42dc051afd76-1473 seems to have exited. Ignoring registration timeout for executor 'mesos-jenkins-2ed8308e20af4dcfb63d15b300797c1a-mesosBase:docker'\r\nJun 29 12:48:29 ms-1 mesos-slave[11508]: I0629 16:48:29.714737 11575 slave.cpp:5044] Current disk usage 9.71%. Max allowed age: 5.620507282549398days\r\nJun 29 12:49:00 ms-1 mesos-slave[11508]: I0629 16:49:00.600776 11577 slave.cpp:4952] Framework 85f895ed-06ee-401c-96c9-42dc051afd76-1473 seems to have exited. Ignoring registration timeout for executor 'mesos-jenkins-dad3577052e549f2810441706719b740-mesosBase:docker'\r\n```\r\n\r\nMy jenkinsfile looks mostly like this...\r\n\r\n```\r\nnode ('mesos:docker.int.company.net/base/image:latest') {...}\r\n```\r\n\r\nWhere `docker.int.company.net/base/image:latest` is a known working image that I am currently running other jobs on.\r\n\r\n```\r\nJun 29, 2017 5:40:20 PM INFO org.jenkinsci.plugins.mesos.MesosCloud provision\r\nProvisioning Jenkins Slave on Mesos with 1 executors. Remaining excess workload: 0 executors)\r\nJun 29, 2017 5:40:20 PM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning MesosCloud from MesosCloud with 1 executors. Remaining excess workload: 0\r\nJun 29, 2017 5:40:30 PM INFO org.jenkinsci.plugins.mesos.MesosComputerLauncher launch\r\nSending a request to start jenkins slave mesos-jenkins-bef8412d504b4df28bab698f0fb088c1-mesosBase:docker\r\nJun 29, 2017 5:40:30 PM INFO hudson.slaves.NodeProvisioner$2 run\r\nMesosCloud provisioning successfully completed. We have now 2 computer(s)\r\nJun 29, 2017 5:40:30 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 2 offers (1 pending requests)\r\nJun 29, 2017 5:40:42 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:47 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:48 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:52 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 2 offers (1 pending requests)\r\nJun 29, 2017 5:40:52 PM WARNING jenkins.metrics.api.Metrics$HealthChecker execute\r\nSome health checks are reporting as unhealthy: [mesos : Some mesos slaves cannot be provisioned : mesosBase:docker.int.corp.com/sre/dind-base:latest]\r\nJun 29, 2017 5:40:53 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:54 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:55 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:56 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 1 offers (1 pending requests)\r\nJun 29, 2017 5:40:57 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 3 offers (1 pending requests)\r\nJun 29, 2017 5:40:59 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nDid not match any of the 2 offers (1 pending requests)\r\nJun 29, 2017 5:41:00 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler getContainerInfoBuilder\r\nLaunching in Docker Mode:docker.int.corp.com/sre/dind-base:latest\r\nJun 29, 2017 5:41:00 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nCreated 1 tasks from 1 offers.\r\nJun 29, 2017 5:41:06 PM INFO org.jenkinsci.plugins.mesos.MesosComputerLauncher launch\r\nFinished launching slave computer mesos-jenkins-bef8412d504b4df28bab698f0fb088c1-mesosBase:docker\r\nJun 29, 2017 5:41:10 PM INFO org.jenkinsci.plugins.mesos.MesosCloud provision\r\nProvisioning Jenkins Slave on Mesos with 1 executors. Remaining excess workload: 0 executors)\r\nJun 29, 2017 5:41:10 PM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning MesosCloud from MesosCloud with 1 executors. Remaining excess workload: 0\r\nJun 29, 2017 5:41:20 PM INFO org.jenkinsci.plugins.mesos.MesosComputerLauncher launch\r\nSending a request to start jenkins slave mesos-jenkins-ca9861aefb344c13862e6f2171d1abd1-mesosBase:docker\r\nJun 29, 2017 5:41:20 PM INFO hudson.slaves.NodeProvisioner$2 run\r\nMesosCloud provisioning successfully completed. We have now 3 computer(s)\r\nJun 29, 2017 5:41:20 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler getContainerInfoBuilder\r\nLaunching in Docker Mode:docker.int.corp.com/sre/dind-base:latest\r\nJun 29, 2017 5:41:20 PM INFO org.jenkinsci.plugins.mesos.JenkinsScheduler resourceOffers\r\nCreated 1 tasks from 4 offers.\r\nJun 29, 2017 5:41:26 PM INFO org.jenkinsci.plugins.mesos.MesosComputerLauncher launch\r\nFinished launching slave computer mesos-jenkins-ca9861aefb344c13862e6f2171d1abd1-mesosBase:docker\r\nJun 29, 2017 5:41:30 PM INFO org.jenkinsci.plugins.mesos.MesosCloud provision\r\nProvisioning Jenkins Slave on Mesos with 1 executors. Remaining excess workload: 0 executors)\r\nJun 29, 2017 5:41:30 PM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning MesosCloud from MesosCloud with 1 executors. Remaining excess workload: 0\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hbajaj2": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/289", "title": "Mesos slaves fails intermittently", "body": "Hi, I keep on getting random failure from the mesos slaves and post restart everything works fine, I am using the latest version of mesos plugin with Jenkins and not able to get any useful information from the logs, can you kindly suggest how to go about solving this issue.\r\n\r\nI0407 18:03:35.087230 20112 fetcher.cpp:498] Fetcher Info: {\"cache_directory\":\"\\/tmp\\/mesos\\/fetch\\/slaves\\/ac0cfc59-0733-4224-8179-01a6d5e0ed9f-S3\\/jenkins2\",\"items\":[{\"action\":\"BYPASS_CACHE\",\"uri\":{\"executable\":false,\"extract\":false,\"value\":\"http:\\/\\/jenkins2.sandbox\\/jenkins2\\/jnlpJars\\/slave.jar\"}}],\"sandbox_directory\":\"\\/tmp\\/mesos\\/slaves\\/ac0cfc59-0733-4224-8179-01a6d5e0ed9f-S3\\/frameworks\\/5356c3cb-4ef6-49fb-85cf-157f386c086a-0013\\/executors\\/mesos-jenkins-a9f1d5fdc5b447769c146c387d706c38-framework\\/runs\\/b3dd9ca6-7749-4fcd-94bd-aeb8e87eee80\",\"user\":\"jenkins2\"}\r\nFetcher could not execute `os::su()` for user 'jenkins2'\r\nFailed to synchronize with agent (it's probably exited)", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jlrigau": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/288", "title": "Using Mesos pods for enhancing the capabilities of the Mesos plugin", "body": "By using Mesos pods, it should be possible to implement new capabilities for the Mesos plugin like being able to use any Docker image as slave template and having the possibility to add side-containers to a build.\r\n\r\nFor using any Docker image as slave template, a pod with a Jenkins slave template linked to a build container should be created. The Jenkins slave manage the communication with the master and the build container is used for building using an ephemeral volume.\r\n\r\nFor side-containers we can consider to use the network capability for being able to access to the side container from `localhost`.\r\n\r\nThese kind of features are already available in [Jenkins Docker Slaves plugin](https://plugins.jenkins.io/docker-slaves) but without the ability to use an orchestrator like Mesos for running the containers.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/288/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chriskolenko": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/287", "title": "SSL/TLS Mesos Cluster via LIBPROCESS_SSL_*", "body": "Is there anyway to register a framework via SSL/TLS?\r\n\r\nhttp://mesos.apache.org/documentation/latest/ssl/\r\n\r\nExample of environment variables.\r\nLIBPROCESS_SSL_ENABLED=true\r\nLIBPROCESS_SSL_REQUIRE_CERT=true\r\nLIBPROCESS_SSL_CA_FILE=path\r\nLIBPROCESS_SSL_CERT_FILE=path\r\nLIBPROCESS_SSL_KEY_FILE=path\r\nLIBPROCESS_SSL_SUPPORT_DOWNGRADE=false\r\nLIBPROCESS_SSL_VERIFY_IPADD=true\r\nLIBPROCESS_SSL_VERIFY_CERT=true", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jwjanssen90": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/286", "title": "Spin up second slave with same label takes minutes", "body": "I am struggling with a performance issue when I have configured a multijob pipeline.\r\n\r\nThe pipeline job and a subjob are using the same Docker image as slave. Performance wise it's desired to spin up two containers (one for the pipeline job and one for the subjob). What happened is that when the pipeline job is running, that Jenkins / Mesos plugin waits for up to 4 minutes before deciding to spin up the second container. Jenkins tries to reuse the container that is already running. While it only has 1 executor and all the jobs are configured with \"Mesos Single-Use Slave\".\r\n\r\nIt looks like that there is a timeout anywhere that will wait for a couple of minutes before deciding to spin up an extra container. \r\n\r\nIs there a way to set the timeout for this or can we solve the issue in a different way?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yarps95": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/281", "title": "Node is offline when Mesos is placed at the remote machine", "body": "I use Jenkins ver. 1.609.3 and Mesos plugin ver. 0.14.1-SNAPSHOT at my local machine (with macOS). I have a simple job with `mesos` label.  My configuration for Mesos plugin:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/17267026/21983816/852c6838-dc25-11e6-80bf-f84ad317fa10.png)\r\n\r\nIf I launch Mesos at my machine:\r\n```\r\n./mesos-master --registry=in_memory --ip=192.168.3.35 # or 127.0.0.1\r\n./mesos-slave --work_dir=/Users/user/mesos_slave_workdir --master=192.168.3.35:5050 # or 127.0.0.1\r\n```\r\nIt works fine and my build starts.\r\n\r\nBut if I launch Mesos at different (also macOS, the same 1.1.0 version of Mesos) machine my build never gets started, because Jenkins node remains offline forever. The only thing I change in Jenkins configuration is IP of Mesos Master. I can access web interface of Mesos (and so 'Test connection' button works fine).\r\n\r\n`JAVA_HOME` variable is set, username at the remote machine is `jenkins`, username at the local machine is `user` but I also tried with `jenkins`. At local machine it works fine no matter whether I specify `127.0.0.1` or `192.168.3.35` when launching Mesos master and slave. I use Mesos ver. 1.1.0 (in plugin's pom there's 1.0.0 Mesos version but I don't think this is the problem since everything works fine locally).\r\n\r\nIn Mesos master log I see multiple records like the following:\r\n```\r\nI0116 19:10:37.537348 92004352 master.cpp:2596] Received SUBSCRIBE call for framework 'Jenkins Scheduler' at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047\r\nI0116 19:10:37.537463 92004352 master.cpp:2672] Subscribing framework Jenkins Scheduler with checkpointing disabled and capabilities [  ]\r\nE0116 19:10:37.537832 95223808 process.cpp:2154] Failed to shutdown socket with fd 15: Socket is not connected\r\nI0116 19:10:37.537901 93614080 hierarchical.cpp:275] Added framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006\r\nI0116 19:10:37.538122 92004352 master.cpp:1297] Framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047 disconnected\r\nI0116 19:10:37.538148 92004352 master.cpp:2902] Disconnecting framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047\r\nI0116 19:10:37.538170 92004352 master.cpp:2926] Deactivating framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047\r\nI0116 19:10:37.538203 92004352 master.cpp:1310] Giving framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047 0ns to failover\r\nE0116 19:10:37.538280 95223808 process.cpp:2154] Failed to shutdown socket with fd 15: Socket is not connected\r\nI0116 19:10:37.538399 93614080 hierarchical.cpp:386] Deactivated framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006\r\nW0116 19:10:37.538450 92004352 master.cpp:6382] Master returning resources offered to framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 because the framework has terminated or is inactive\r\nI0116 19:10:37.538709 92004352 master.cpp:6369] Framework failover timeout, removing framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047\r\nI0116 19:10:37.538734 92004352 master.cpp:7103] Removing framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006 (Jenkins Scheduler) at scheduler-a5d926fd-f61d-448e-b7ab-40159951cde5@127.0.0.1:57047\r\nI0116 19:10:37.539314 91467776 hierarchical.cpp:337] Removed framework 39b5afc3-2c62-4427-a758-bd82566218b1-0006\r\n```\r\n\r\nAny ideas what should I do to make the plugin work with remote Mesos? Is something wrong in my Jenkins configuration? Any help is appreciated.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sic-z": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/280", "title": "Job queued and jenkins manage page hint: Some Mesos slaves cannot be provisioned on the following labels.", "body": "When a job was excuted there is a hint on my jenkins manage page:\r\n\r\n> **Some Mesos slaves cannot be provisioned on the following labels:\r\n>  mesos\r\n> Please review the Mesos plugin configuration and check the cluster capacity to make sure the tasks can be launched successfully.** \r\n\r\nAnd jobs were queueing with black clock, mesos slave was offline. A few minutes later, jobs run normally and hint gone.\r\n\r\nMy jenkins version is 2.7.1 and mesos plugin version is 0.13.1.\r\n\r\nWhat's meaning of this? Is it a problem? Is anything wrong? ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/280/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryoichitaniguchi": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/276", "title": "fd leak?", "body": "It seems Jenkins process opens cloud-mesos(dockernized) slave's log file for long time **even after slaves are terminated** .(Opening files of Jenkins is more than 4000 in my test envrionment, but nothing active mesos job there. )  Can I avoid and close these files safely?\r\n\r\nenvironment:\r\n\r\njenkins: 1.580.1\r\nmesos: 0.13.1\r\n\r\n```\r\n## pid_of_jenkins=47561\r\n$ sudo ls -l /proc/47561/fd | grep mesos-jenkins | wc\r\n   4180   45980  635085\r\n\r\n$ sudo ls -l /proc/47561/fd | grep mesos-jenkins | tail -n 1\r\nl-wx------ 1 hudson hudson 64 Dec 16 10:51 999 -> /srv/hudson/.jenkins/logs/slaves/mesos-jenkins-807bd860998c404883ec0b24775009d6-DOCKERNODE/slave.log\r\n\r\n$ sudo cat /srv/hudson/.jenkins/logs/slaves/mesos-jenkins-807bd860998c404883ec0b24775009d6-DOCKERNODE/slave.log\r\nJNLP agent connected from /xx.xxx.xxx.xxx\r\n<===[JENKINS REMOTING CAPACITY]===>Slave.jar version: 2.47\r\nThis is a Unix slave\r\nSlave successfully connected and online\r\nSlave computer connected mesos-jenkins-807bd860998c404883ec0b24775009d6-DOCKERNODE\r\nSuccessfully launched slavemesos-jenkins-807bd860998c404883ec0b24775009d6-DOCKERNODE\r\nConnection terminated\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "damomurf": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/273", "title": "Not maintained any more?", "body": "I've been led to believe that CloudBees are no longer maintaining this plugin as they had kindly been previously.\r\n\r\n@Vlatombe - is it possible to get a statement that this is, in fact, the case and maybe get the README in this Repo updated to reflect that and whether there are any plans going forward?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/270", "title": "Multiple Mesos Clouds configured causes frameworks to restart on config change", "body": "If more than one Mesos Cloud is configured and each is registered as a frameworks in its corresponding Mesos cluster, saving settings causes both frameworks to restart every time, killing all running jobs on both. Adding the second cloud configuration with the first in place and already registered does not exhibit this behaviour, only changing configuration _after_ both are already registered.\n\n```\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.MesosCloud restartMesos\nINFO: Mesos master changed, restarting the scheduler\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler stop\nINFO: Stopping Mesos driver.\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler <init>\nINFO: JenkinsScheduler instantiated with jenkins http://jenkins.domain and mesos zk://.../mesos\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler$1 run\nINFO: The Mesos driver was stopped.\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler init\nINFO: Initializing the Mesos driver with options\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler registered\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.MesosCloud restartMesos\nINFO: Mesos master changed, restarting the scheduler\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler stop\nINFO: Stopping Mesos driver.\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler <init>\nINFO: JenkinsScheduler instantiated with jenkins http://jenkins.domain and mesos zk://.../mesos\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler$1 run\nINFO: The Mesos driver was stopped.\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler init\nINFO: Initializing the Mesos driver with options\nOct 28, 2016 1:00:26 AM org.jenkinsci.plugins.mesos.JenkinsScheduler registered\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/99e04145d1eb025b7d7609c52975b3ae93f529ac", "message": "Ensure task is launched with appropriate roles on ports from offer."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vidyajothiraman": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/268", "title": "Jenkins framework unregisters from Mesos frequently", "body": "Hi\nI have registered Jenkins frame work on Mesos and able to launch jobs.  But some times I see the framework goes to completed framework list in Mesos. Any help as why its going like this? \nI have got to save this Mesos cloud from Jenkins once again to register this framework on Mesos. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsfshijm": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/267", "title": "feature request: Docker once retention strategy like 'Availability' in Docker plugin ", "body": "Background:  When I using mesos plugin and enable 'Use Docker Containerizer Container Type',  mesos will run a docker container as the Jenkins slave,  and also configure 'Idle Termination Minutes' which's value is 1;\n\nIssues:  In some times(one build is running, and another build is pending), two builds of one Jenkins job will run in the same salve which isn't what we want, each build of our Jenkins job need a clean slave environment.  \n\nSo, could you guys supply a feature like the feature 'Availability' in Jenkins Docker plugin, then I can use 'docker once retention strategy'\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fragpit": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/265", "title": "Shared workspaces ", "body": "Hi, guys!\n\nSeems, that \"Execute concurrent builds if necessary\" option is useless (and often harmful), when building on different slaves (containers), but on one physical server, when workspace is persistent and mounted into container. \n\nHow did you solve this issue?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samof76": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/259", "title": "Documentation points to a non-existent section", "body": "The README.md reads... \n\n> Add the 'Mesos Cloud' and give the path to the Mesos native library (e.g., libmesos.so on Linux or libmesos.dylib on OSX) (see the above section)\n\nbut there I do not see any `above section` that describes anything?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xiajidexue": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/257", "title": "Entrypoint in Dockerfile will be automatically overridden by \"/bin/sh -c\"", "body": "Descriptions:\n_Entrypoint in Dockerfile will be automatically be overridden  by Java slave process, but CMD in Dockerfile will not be overridden.  I think this problem will block the users who want to adopt this plugin as no way to identify which executable should be run when a container is started from our images, and I tried to use **Use custom docker command shell** in Mesos Cloud section to work around it, but still fails, a defect has been tracking it for also year: https://github.com/jenkinsci/mesos-plugin/issues/157_\n\n**Entrypoint**: /bin/bash --login -- /entrypoint.sh\n**Java Slave process**: /bin/sh -c 'java -DHUDSON_HOME=jenkins -server -Xmx640m -Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true -jar ${MESOS_SANDBOX-.}/slave.jar -noReconnect -secret ... mesos-jenkins-do/slave-agent.jnlp\n\nExpected (Shown by **COMMAND** via **docker ps** command):\n\"/bin/bash --login -- /entrypoint.sh /bin/sh -c 'java -DHUDSON_HOME=jenkins -server -Xmx640m -Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true -jar ${MESOS_SANDBOX-.}/slave.jar -noReconnect -secret 4026fda6995da3083527505a05d92cadcb5e00eb0b477f0ff357097fadd59ae7 -jnlpUrl http://jenkins.xxx.net/computer/mesos-jenkins-09a5fb6724b44ed4bf10339c6aae4f1d-mesos-jenkins-do/slave-agent.jnlp'\"\nBut in fact (Shown by **COMMAND** via **docker ps** command, the command \"/bin/bash --login -- /entrypoint.sh\" in Entrypoint override):\n\"/bin/sh -c 'java -DHUDSON_HOME=jenkins -server -Xmx640m -Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true -jar ${MESOS_SANDBOX-.}/slave.jar -noReconnect -secret 4026fda6995da3083527505a05d92cadcb5e00eb0b477f0ff357097fadd59ae7 -jnlpUrl http://jenkins.xxx.net/computer/mesos-jenkins-09a5fb6724b44ed4bf10339c6aae4f1d-mesos-jenkins-do/slave-agent.jnlp'\"\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/257/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 2, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "recena": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/3e7002c19e717a52905c1dd9fa0790a10e26c3da", "message": "Added a licensing definition to the Maven project (#305)"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/ae4b0553470bbba9ec0f33b523c004fa577657c2", "message": "Review the description"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/51640f8db73d6ae97bf6cf9217efc2ac84830337", "message": "Move to HTTPS and add a plugin description"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maselvaraj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/f42b0b69a6f086636ed063d901511e591555148e", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/ff5cb8ffd4eb9e25b837dd25fe84c3b7f3048a4a", "message": "[maven-release-plugin] prepare release mesos-0.15.0"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/2c449b95b77dca98f7ff64cc53661a2d40fe33e5", "message": "Merge pull request #294 from rmathure/enforce-disk-quota\n\nAdd option to specify disk resource."}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/fc33e2ac1517b19566b64d71d5087d4e647980a3", "message": "Merge pull request #291 from lightcapda/master\n\nFix always restarting mesos cloud with multiple frameworks"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/23f91241c1b05d4739ee903f5556d8115aba3bf8", "message": "Merge pull request #243 from ederst/maintenance-primitives\n\nIntroduce support for Mesos maintenance primitives"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/7db7b76c96bb4d63fcdc7aa89690c511e648a436", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/fdf684197b0d0e0261e31c58ad5e0ba3690ea9b8", "message": "[maven-release-plugin] prepare release mesos-0.14.1"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/4bc37bc424397a0c669006a8bf1f9d5c47d18399", "message": "Merge pull request #285 from damomurf/master\n\nEnsure task is launched with appropriate roles on ports from offer."}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/1f0a7e24b866030a9f5f5f0149a62df10786215e", "message": "Merge pull request #283 from maselvaraj/master\n\nfixing a bug in slave deletion logic https://github.com/jenkinsci/mes\u2026"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/0c70bc6b8e48834b76f08ea9331f2ebcb7131220", "message": "fixing a bug in slave deletion logic https://github.com/jenkinsci/mesos-plugin/issues/282"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/6195e65090bd26454186e047d0a7e9b8706dca6a", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/06d10318035cb4e591726de234736e4862e94c32", "message": "[maven-release-plugin] prepare release mesos-0.14.0"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/586e7247ade35c73543f281315e61cf80fdbc7a8", "message": "Merge pull request #277 from varju/pipeline-single-use-slave\n\nPipeline support for MesosSingleUseSlave"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/277d098fa699aa46473c13629f9ef46fc7276d12", "message": "Merge pull request #274 from maselvaraj/master\n\nSupport for Jenkins 2.26+ which enforces JNLPLauncher"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/212e12be7a6f361ac0d8d9ebe1332f3058a5f8d7", "message": "Support for Jenkins 2.26+ which enforces JNLPLauncher"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/f86bd53d2b0862fdb9bba7992a844b1015b6c608", "message": "Merge pull request #240 from maselvaraj/master\n\nAdded a check to see if there is a build in queue before declining an\u2026"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16451156", "body": "Does this look better ?  line no 40 to 50 can be reduced to: \nif(Objects.equals(mesosSlaveInfo.getLabelString(), assignedLabel)) { \n               workspacePath = mesosSlaveInfo.getRemoteFSRoot()\n-                      + File.separator + WORKSPACE + File.separator + jobName;\n  }\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16451156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rmathure": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/97e62e74f8e24325dfc9b85a2b5c061009357c8d", "message": "Add option to specify disk resource.\n\nThis option could be customized at slave level and hence\nplugin would only accept resources that has the specified\namount in MB as Disk resource available. The option is\nignored for Docker containerizer and if the value is set\nto 0.\n\nThis opens up up the killing of mesos slave if the slave\nuses more that alloted amount of disk space by setting\n--isolation with disk/du and\n--enforce-container-disk-quota"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ederst": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/a617938eceab3de213678f59d44643b07c150262", "message": "Introduce support for Mesos maintenance primitives\n\nThis commit introduces the feature for the frameworks registered by Jenkins to ignore\noffers having an unavailability (maintenance primitive) set.\n\nThe offers are only ignored when the current time is between the start and end time (start + duration)\nof the unavailability.\n\nIssue: https://github.com/jenkinsci/mesos-plugin/issues/216"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lightcapda": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/374ab1b351dceb799d43c46e1c1ec8bc70e3b7ee", "message": "Fix always restarting mesos cloud with multiple frameworks"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vlatombe": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/f275a587c688b3b84cf96b8c41b01c4b3d1e0f19", "message": "Merge pull request #279 from recena/master\n\nMove to HTTPS and add a plugin description"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/3aaaf4eeab8ffad2abdeb1f1e45d3b4d920e101d", "message": "Merge pull request #264 from nnordrum/JNLP_calling_back_to_http_even_if_https_is_specified\n\nPassing ${app.rootUrlFromRequest} and ${rootUrl} as -url arguments"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/5bb77ff72f8dc570e108c58f83065e48c2dc7e2a", "message": "Merge pull request #250 from mesosphere/tito/addOverlayNetworkNames\n\nAdd support for overlay networks"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/ec15f8fd84e6922bd85e44ff9244eca57ef1dc30", "message": "Merge pull request #253 from jvhaggard/checkpoint-doc-update\n\nUpdated checkpoint docs"}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/181", "title": "Add a test for configuration round trip", "body": "Split from #179 as this requires a core bump.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16466996", "body": "Agreed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16466996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16582685", "body": "Seems a new thing that will land in 0.28.0. In any case the API has changed completely and I'm not willing to spend time to re-implement this. Patches welcome!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16582685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "varju": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/bb48a9d3c0193481934866ddc75bb00c31f3e60d", "message": "Convert MesosSingleUseSlave to a SimpleBuildWrapper so that it may be used from Pipeline scripts\n\nFixes #262"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nnordrum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/commits/e2b3c39669ddcf7f7a9371dcf4a3bfa4b1da0660", "message": "Passing ${app.rootUrlFromRequest} and ${rootUrl} as -url arguments to make it more broadly compatible."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oleg-nenashev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/309", "title": "Update Parent POM and fix dependencies to make it runnable in PCT", "body": "Just hit some issues while running PCT for JEP-200.\r\n\r\n@reviewbybees \r\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sbeaulie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/302", "title": "Replace invalid hostname characters for task names and docker hostname", "body": "Before this change, if you used the mesos plugin option 'Docker Image Can Be Customized'\r\nand the resulting task name was less than 64 characters it could happen that the docker\r\nimage name contained invalid characters both for the task name and the docker hostname.\r\nFor example a custom label:foo/bar:latest would fail as a task name because / is invalid\r\nin a task name since it breaks the directory structure. It would also fail as a docker\r\nhostname since it needs to comply with RFC 1123 hostnames\r\n\r\nOriginal commit was to fix https://github.com/jenkinsci/mesos-plugin/issues/251", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/300", "title": "Allow tunnel option in slave config", "body": "Currently, if you use the plugin you're limited to going to the default setup for a JSlave.  That doesn't work in all scenarios, especially ours.  We need to add in the Jenkins tunnel parameter to the JSlave that is started.  See JENKINS_TUNNEL for this Docker image for more infromation: https://hub.docker.com/r/jenkinsci/jnlp-slave/", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisliu529": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/299", "title": "simplify slaveAttributesMatch", "body": "collect offer attributes only when slaveAttributes exist", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andreadelfino": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/298", "title": "Expose Network.USER setting", "body": "Just expose `Network.USER` setting in configuration panel.\r\n\r\nhttps://github.com/apache/mesos/blob/1.0.x/docs/networking.md#docker-containerizer", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fugi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/293", "title": "add hostname to offer attributes", "body": "This add _hostname_ to offer attributes. Also adds possibility to use regex matching.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carlossg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/248", "title": "Add a Dockerfile to facilitate plugin testing", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25950306", "body": "Hmm. That is surprising. It might be that the jar supplied by Mesossphere is not built from the correct sha. You could ask them to build the jar from mesos-0.14.0-rc5 tag or wait for the official 0.14.0 release which includes publishing the jar to Apache Maven repo.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25950306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25950983", "body": "I published the proper 0.14.0 jar to the staging repository at https://repository.apache.org/content/repositories/orgapachemesos-148. Update your pom to point to this repo and do a \"mvn clean package\". Let me know if it works.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25950983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25991142", "body": "That seems to be a bug in how test connection! Thanks for the report. Committed a fix. Let me know if you are still having problems.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25991142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27432598", "body": "A good place to look would be the executor logs.\n\nFor example: /tmp/mesos/slaves/201310301705-3585380106-5050-15051-1/frameworks/201310301705-3585380106-5050-15051-0009/executors/mesos-jenkins-00b62d6c-105a-4969-9d67-a3abb383f9ad/runs/29fa90c4-5aff-4719-b4b2-06cb45e0c77a\n\nLet me know what you find.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27432598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27432928", "body": "The mesos slave should pull down the slave.jar when it launches the executor. I suspect it's a networking issue. Can the mesos slave \"curl\" the URI that you posted?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27432928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31274940", "body": "What version of the plugin are you using? This has been fixed on the master branch but hasn't been published to the jenkins plugins repo yet. If you build the plugin from the source it should work. Let me know if it doesn't.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31274940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31497336", "body": "I published 0.1.1 version of the plugin to Jenkins repo. Please re-open this issue if you are still having problems.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31497336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32817738", "body": "Hey mbdas, I'm a bit confused about the scenario that you mentioned. So you launch 3 Jenkins jobs and the Jenkins plugin launches 2 mesos executors( == Jenkins slaves) but only one of them registers with Jenkins master? Do the logs say why the other Jenkins slave didn't register? How many mesos slaves are you running?\n\nMaybe if you can share some logs (Jenkins master logs, Mesos master and slave logs) that would help us diagnose the issue better.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32817738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33296687", "body": "Are you building a custom maven project? Can I see its POM?\n\nThe output above shows that the 3 required jars are getting copied. Do you know where to? Are they not being copied to executor sandbox (/tmp/mesos/{...}? What is \"ls -R\" of the sandbox?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33296687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514476", "body": "If the Jenkins master is running on OSX this could libmesos.dylib. \n\nSo how about\n\n...Mesos native library (e.g., libmesos.so on Linux or libmesos.dylib on OSX)?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514488", "body": "s/Slave/Mesos Slave/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514510", "body": "s/slaves/Mesos slaves/\n\ns/jenkins/`jenkins`/\n\ns/running on/running as/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/7514510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9172393", "body": "Good catch. How about the following:\n\nfor (Request request : requests) {\n  if (request.request.slave.names.equals(name)) {\n   LOGGER.info(\"Removing enqueued mesos task \" + name);\n   requests.remove(request);\n   return;\n  }\n }\n\nLOGGER.warning(\"Asked to kill unknown task \" + name);\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9172393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174763", "body": "Style nit. This is not properly indented with the rest of this paragraph.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174764", "body": "style nit. space after 'for' and before '{'\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174766", "body": "style nit. space after 'if' and before '{'\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9174766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9177836", "body": "I prefer to not use iterators unless absolutely necessary, because it makes the code less readable. Would you mind reverting this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9177836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9178175", "body": "Typically using iterators is safer, yes, but in this case, since we are breaking after one removal it should be safe even without iterators.\n\nhttp://eggeral.blogspot.com/2007/12/removing-items-from-list-in-java.html\n\nLooking forward to the other PRs :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9178175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9256828", "body": "s/mesosLibInitialized/nativeLibraryLoaded/\n\nor\n\ns/mesosLibInitialized/loaded/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9256828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9256879", "body": "It seems to do this here on every provision. Do you know if any other method/constructor gets called after a restart? That would be an appropriate place to initialize the plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9256879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9258689", "body": "My earlier comment seems to have been lost :/\n\nCan you s/handleMesosSetup/restartMesos/\n\nAlso, why is this \"synchronized\"? A comment would be nice.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9258689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9258692", "body": "Mind adding a TODO to fix this in the future in a more elegant way?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9258692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411690", "body": "indentation.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411698", "body": "How about using a ternary operator for conciseness?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411702", "body": "thanks for killing these unused imports.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331676", "body": "s/mesos/Mesos/\ns/jenkins/Jenkins/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331830", "body": "s/yet/yet./\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331865", "body": "Why after the JOB_LOADED milestone? I would imagine we want to do it 'before' that milestone?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331890", "body": "s/below/'AUTOMATIC_SLAVE_LAUNCH'/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331908", "body": "s/jenkins/Jenkins/\ns/shutdown/shutdown./\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331924", "body": "s/slaves/slaves./\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331961", "body": "Why 5 new lines? one is enough?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331971", "body": "Yes. Please revert this TODO.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9331971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411625", "body": "s/has/have/ ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411639", "body": "Can \"removed yet\" be pulled up here. Currently the line wrapping looks jagged. We typically line wrap at 70 chars.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411648", "body": "I don't follow the last sentence. Maybe it needs some rephrasing?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9411648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9562288", "body": "So you trim here when you validate but you don't trim when assigning the variables above. Either you should do trim there too or just not trim here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9562288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rayrod2030": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25969920", "body": "By switching to the repository you suggested and changing to mesos version 0.14.0-rc5 in the pom I was able to generate a clean build of mesos-plugin.  However configuring the plugin in jenkins does not seem to be working for me.  I am running jenkins 1.534 and when creating a cloud I'm pointing to my native mesos library on the server running jenkins at `/usr/local/lib/libmesos.so` as well as my mesos master on port 5050.  When I try to test connection jenkins reports an exception:\n\n```\njavax.servlet.ServletException: java.lang.NullPointerException\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:735)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:799)\n    at org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:239)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:685)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:799)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:587)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:218)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:45)\n    at winstone.ServletConfiguration.execute(ServletConfiguration.java:248)\n    at winstone.RequestDispatcher.forward(RequestDispatcher.java:333)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:376)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at winstone.FilterConfiguration.execute(FilterConfiguration.java:194)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:366)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at winstone.FilterConfiguration.execute(FilterConfiguration.java:194)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:366)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at winstone.FilterConfiguration.execute(FilterConfiguration.java:194)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:366)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at winstone.FilterConfiguration.execute(FilterConfiguration.java:194)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:366)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at winstone.FilterConfiguration.execute(FilterConfiguration.java:194)\n    at winstone.RequestDispatcher.doFilter(RequestDispatcher.java:366)\n    at winstone.RequestDispatcher.forward(RequestDispatcher.java:331)\n    at winstone.RequestHandlerThread.processRequest(RequestHandlerThread.java:227)\n    at winstone.RequestHandlerThread.run(RequestHandlerThread.java:150)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:679)\nCaused by: java.lang.NullPointerException\n    at org.jenkinsci.plugins.mesos.MesosCloud$DescriptorImpl.doTestConnection(MesosCloud.java:232)\n    at sun.reflect.GeneratedMethodAccessor248.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:616)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:297)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:160)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:95)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:111)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:685)\n    ... 39 more\n```\n\nI see the same results when testing from a local jenkins instance brought up with `mvn hpi:run`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/25969920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27427309", "body": "This fixed my connection issue thank you.  Closing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27427309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27431555", "body": "Just wanted to follow up on my issue.  I noticed in the jenkins logs this entry:\n\nLaunching task mesos-jenkins-f886cba0-ace3-427e-928a-acda64af126d with URI http://ec2-1-2-3-4.compute-1.amazonaws.com:8080/jnlpJars/slave.jar\n\nSo I'm assuming that the mesos slaves do have to have to have the jnlpjars stuff deployed to them in order for jenkins to communicate and kick of a slave build.  I'll work on this some more and let you know how it goes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27431555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27439697", "body": "So it looks like I can curl that URI from the mesos slave and also the executor directories are empty just like on the mesos slave UI sandbox page.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27439697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27441345", "body": "Ok it's working now somehow.  I think I might have had an existing jnlp process running that was not triggered by mesos-plugin which was probably causing the executor to fail.  Once I kill -9 that existing jnlp process I am able to see the mesos-slave start up it's own slave.jar and communicate with jenkins server.  Now I just have typical jenkins problems.  :-)  Thanks for your help Vinod!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27441345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "caniszczyk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27441599", "body": "Please feel free to blog about your usage if things work out, we'd love to hear about it. Also, we'd love any contributions as the project is still young!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27441599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "cloudbees-pull-request-builder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27990860", "body": "[plugins \u00bb mesos-plugin #2](https://jenkins.ci.cloudbees.com/job/plugins/job/mesos-plugin/2/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27990860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27999440", "body": "[plugins \u00bb mesos-plugin #3](https://jenkins.ci.cloudbees.com/job/plugins/job/mesos-plugin/3/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27999440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/28018118", "body": "[plugins \u00bb mesos-plugin #4](https://jenkins.ci.cloudbees.com/job/plugins/job/mesos-plugin/4/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/28018118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33213027", "body": "[plugins \u00bb mesos-plugin #11](https://jenkins.ci.cloudbees.com/job/plugins/job/mesos-plugin/11/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33213027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33311320", "body": "[plugins \u00bb mesos-plugin #12](https://jenkins.ci.cloudbees.com/job/plugins/job/mesos-plugin/12/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33311320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jenkinsadmin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27995684", "body": "Thank you for a pull request! Please check [this document](http://jenkins-ci.org/pull-request-greeting) for how the Jenkins project handles pull requests\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/27995684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33220770", "body": "Thank you for a pull request! Please check [this document](http://jenkins-ci.org/pull-request-greeting) for how the Jenkins project handles pull requests\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33220770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "brugidou": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/30521286", "body": "I confirm the issue\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/30521286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "scivm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31275541", "body": "ok, That must be it.  I installed from jenkins plugins repo.  I will try to\nbuild from source.\n\nOn Fri, Dec 27, 2013 at 8:52 PM, Vinod Kone notifications@github.comwrote:\n\n> What version of the plugin are you using? This has been fixed on the\n> master branch but hasn't been published to the jenkins plugins repo yet. If\n> you build the plugin from the source it should work. Let me know if it\n> doesn't.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/mesos-plugin/issues/6#issuecomment-31274940\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/31275541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32799914", "body": "The IP address will be determined by libprocess, take a look at the following initialization of **ip**:\nhttps://github.com/apache/mesos/blob/0.16.0-rc3/3rdparty/libprocess/src/process.cpp#L1385\n\nThis can be overridden by specifying LIBPROCESS_IP in the environment in which you run the plugin. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32799914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mbdas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32826677", "body": "I am going to do a pull request soon.\nEssentially a race condition when Jenkins provisions a slave but which never gets scheduled for lack of resource and the race condition is between Jenkins slave termination and it getting actually scheduled because resource freed up. \n\nI am also fixing the restart issue where unless someone again goes to the configure page, scheduler is not started.\n\nThx for writing the plugin. It's really helpful. I fully expect to add the necessary enhancements and make it production ready.\n\nThx\n\nSent from my iPhone\n\n> On Jan 20, 2014, at 7:08 PM, Vinod Kone notifications@github.com wrote:\n> \n> Hey mbdas, I'm a bit confused about the scenario that you mentioned. So you launch 3 Jenkins jobs and the Jenkins plugin launches 2 mesos executors( == Jenkins slaves) but only one of them registers with Jenkins master? Do the logs say why the other Jenkins slave didn't register? How many mesos slaves are you running?\n> \n> Maybe if you can share some logs (Jenkins master logs, Mesos master and slave logs) that would help us diagnose the issue better.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32826677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33212895", "body": "One thing to note this is tested with mesos 0.17.0  built from source but I did not include the changed pom.xml in the commit since that release is not available yet.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33212895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33265387", "body": "Sent a pull request.\nThx\n\nSent from my iPhone\n\n> On Jan 20, 2014, at 7:08 PM, Vinod Kone notifications@github.com wrote:\n> \n> Hey mbdas, I'm a bit confused about the scenario that you mentioned. So you launch 3 Jenkins jobs and the Jenkins plugin launches 2 mesos executors( == Jenkins slaves) but only one of them registers with Jenkins master? Do the logs say why the other Jenkins slave didn't register? How many mesos slaves are you running?\n> \n> Maybe if you can share some logs (Jenkins master logs, Mesos master and slave logs) that would help us diagnose the issue better.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33265387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33311302", "body": "Made the requestJenkinsSlave() method synchronized as well because there is a possibility of ConcurrentModificationException as we are iterating the request list in 2 other places and this one adds item. Just to be safe. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/33311302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9178023", "body": "http://docs.oracle.com/javase/7/docs/api/java/util/ConcurrentModificationException.html\nhttp://stackoverflow.com/questions/5113016/getting-a-concurrentmodificationexception-thrown-when-removing-an-element-from-a\n\nI am no java expert but seems calling remove of iterator safer approach.\n\nBut let me know what you want. I have few pull requests in the pipeline :)\n\nThx\n\nSent from my iPhone\n\n> On Jan 26, 2014, at 2:11 PM, Vinod Kone notifications@github.com wrote:\n> \n> In src/main/java/org/jenkinsci/plugins/mesos/JenkinsScheduler.java:\n> \n> > @@ -133,8 +134,24 @@ public void terminateJenkinsSlave(String name) {\n> >        LOGGER.info(\"Killing mesos task \" + taskId);\n> >        driver.killTask(taskId);\n> >      } else {\n> > -      LOGGER.warning(\"Asked to kill unknown mesos task \" + taskId);\n> > -        // This is handling the situation that a slave was provisioned but it never\n> > -        // got scheduled because of resource scarcity and jenkins later tries to remove\n> > -        // the offline slave but since it was not scheduled we have to remove it from\n> > -        // the request queue. The method has been also synchronized because there is a race\n> > -        // between this removal request from jenkins and a resource getting freed up in mesos\n> > -        // resulting in scheduling the slave and resulting in orphaned task/slave not monitored\n> > -        // by Jenkins.\n> > -        for(Iterator<Request> li = requests.iterator(); li.hasNext();) {\n> >   I prefer to not use iterators unless absolutely necessary, because it makes the code less readable. Would you mind reverting this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9178023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9353432", "body": "Will address these tonight.\n\nSent from my iPhone\n\n> On Jan 30, 2014, at 5:41 PM, Vinod Kone notifications@github.com wrote:\n> \n> In src/main/java/org/jenkinsci/plugins/mesos/MesosCloud.java:\n> \n> > @@ -176,8 +206,6 @@ public boolean canProvision(Label label) {\n> >      // Provisioning is simply creating a task for a jenkins slave.\n> >      // Therefore, we can always provision as long as the label\n> >      // matches \"mesos\".\n> > -    // TODO(vinod): The framework may not have the resources necessary\n> >   Yes. Please revert this TODO.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/pulls/comments/9353432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "cghsystems": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32845967", "body": "Thats exactly what I was looking for. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/issues/comments/32845967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/12246826", "body": "typo\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/12246826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "Snoopinator": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/13643434", "body": "Hi, I'm no java developper but as far as I tested, shouldn't \"equals\" be replaced by \"contains\" on line 38 ?. A job can be launched on a mesos cloud if the job label is contained in label field in the cloud definition. Currently if the cloud label field contains more strings than the job label field, the job runs but the workspace browing failswhile the slave is offline.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/13643434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "micahlmartin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/15693464", "body": "Is there a reason is this hardcoded and does not honor the settings in the main jenkins configuration?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/15693464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "sathiya-mit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16467051", "body": "Done with the changes and squashed my commits.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16467051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sebbrandt87": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16572348", "body": "ah sry no the external containerizers are not deprecated, are they?!\nhttps://github.com/apache/mesos/blob/master/CHANGELOG#L250\n\nIt is still within the source and there is just an experimental feature of mesos to use non external engine daemon like docker or rkt anymore.\nhttps://github.com/apache/mesos/blob/master/CHANGELOG#L27\n\nSo please add this again.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/mesos-plugin/comments/16572348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}