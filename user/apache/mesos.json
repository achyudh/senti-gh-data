{"_default": {"1": {"ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19287295", "body": "@h0tbird Please file a JIRA ticket if this is an issue for you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20769217", "body": "Doesn't look like we need to make this copy here and the non-const ref `Offer::Operation& operation` below? (The adjustments are already made in the master?)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20769217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}, {"url": "https://api.github.com/repos/apache/mesos/commits/55b66c624f5a2e44fcf87bdcab8932a2c7a2c284", "message": "Added Developer Guide to documentation.\n\nThis guide was started with the intent to capture \"tribal knowledge\"\nabout Mesos development. I've added several general practices and\npatterns I've had explained to me by various Mesos developers, and also\nadded a Windows section with design patterns I had documented\nexternally.\n\nReview: https://reviews.apache.org/r/65113"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/22940762", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/22940762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "miroswan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/258", "title": "Update api-client-libraries.md", "body": "* Adding Go client for the Mesos Operator API", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhitaoli": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/213", "title": "Update vendored protobuf tar.gz to 3.2.0.", "body": "The content of `3rdparty/protobuf-3.2.0.tar.gz` is generated by:\r\n- On a Mac OS, download and untar protobuf v3.2.0 source at\r\n  https://github.com/google/protobuf/archive/v3.2.0.tar.gz;\r\n- Run `./autogen.sh`;\r\n- Recompress and tar by `tar -czvf`.\r\n\r\nReview: https://reviews.apache.org/r/58358", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19363756", "body": "@kamilchm can you file a ticket on issues.apache.org?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xoho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/4057433", "body": "Need to update the link at http://mesos.apache.org/documentation/ to reflect the merge of \"Using ZooKeeper\" into \"High Availability\".  The link on the page http://mesos.apache.org/documentation/ still points to https://github.com/apache/mesos/blob/master/docs/Using-ZooKeeper.textile when it should point to https://github.com/apache/mesos/blob/master/docs/High-Availability.md.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/4057433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stelcheck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/5607832", "body": "I am having an issue in Chronos where it seems that when the Chronos framework tries to register, it registers with localhost (see https://github.com/airbnb/chronos/issues/193), and therefore unless the master is on the same machine as Chronos the registration never completes.\n\nCould that be causing the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/5607832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/8892794", "body": "Is there a memory leak here? Why not call `freeaddrinfo` before returning?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/8892934", "body": "Filed in reviewboard for the above concern\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/18398184", "body": "sweet! I didn't realize this made it into 1.0\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/18398184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "i-chaochen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/11352747", "body": "Hi, I tried to install the latest mesos(0.22.1) on AWS by the steps from mesos documentation \nhttp://mesos.apache.org/documentation/latest/ec2-scripts/\n\n// I can launch spark cluster on AWS in eu-west-1a with same key and key-id\nWhen I setted up my security key and key id ready to launch mesos cluster, it is constantly failed at \"Invalid availability zone\" error.\n\n// the reason I tried launch cluster on eu-west-1 because my key is generated on eu-west-1\nI also have tried eu-west-1, eu-west-1b and eu-west-1c, neither of ways can succeeded.\n\nI have printed out the opts below the Launch slaves(the launch script is stopped at here), is it normal?\nopts:\n{'ami': 'ami-4517dc2c', 'ft': 1, 'branch': 'master', 'zone': 'eu-west-1a', 'resume': False, 'ebs_vol_size': 0, 'master_instance_type': '', 'identity_file': 'awskey.pem', 'proxy_port': None, 'instance_type': 'm1.large', 'key_pair': 'awskey', 'swap': 1024, 'slaves': 1, 'download': 'none', 'spot_price': None, 'os': 'amazon64', 'wait': 60}\n\nDo you have idea how to fix it? Any helps would be appreciated!\nBest regards,\n\n./mesos-ec2 -k awskey -i awskey.pem --zone=eu-west-1a launch test01-mesos\nSetting up security groups...\nChecking for running cluster...\nLaunching instances...\nERROR:boto:400 Bad Request\nERROR:boto:<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\nTraceback (most recent call last):\nFile \"./mesos_ec2.py\", line 571, in \nmain()\nFile \"./mesos_ec2.py\", line 478, in main\nconn, opts, cluster_name)\nFile \"./mesos_ec2.py\", line 261, in launch_cluster\nblock_device_map = block_map)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/image.py\", line 329, in run\ntenancy=tenancy, dry_run=dry_run)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/connection.py\", line 973, in run_instances\nverb='POST')\nFile \"/usr/local/lib/python2.7/dist-packages/boto/connection.py\", line 1208, in get_object\nraise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/11352979", "body": "I can launch the cluster by default \"us-east-1b\" , but I changed default as \"eu-west-1a\" in mesos_ec2.py, it still can't launch and the same problem as the above.\n\nDo you have any good idea to fix it?\n\nRegards\n\nPS:\nI also have noticed from AWS console that all security groups have been created in us-east-1b, even I set the zone as \"eu-west-1a\", and none of mesos security groups have been created in eu-west-1. \n\nSo, is it I used a wrong way to launch the script or there is a bug in mesos_ec2.py?\n\nAny feedback would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ozdanborne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/13504480", "body": "typo: `of` should be `or`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/13504480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "westurner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940222", "body": "These image URIs now appear to 404ing:\n- https://mesos.apache.org/documentation/latest/architecture/\n  - `../images` seems to work\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940223", "body": "@jonorossi \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940273", "body": "Thanks!\n\nSo the paths for the .md files are\n\n```\n./images/img.PNG\n./doc.md\n```\n\nWhereas the site-deployed paths are:\n\n```\n/documentation/latest/images/img.PNG\n/documentation/latest/doc/\n```\n\nCurrently:\n- images display w/ GitHub\n- images 404 w/ the site\n\n... I'll copy this to JIRA when I get a minute.\nOn Dec 12, 2015 1:31 AM, \"Jonathon Rossi\" notifications@github.com wrote:\n\n> @westurner https://github.com/westurner IIRC the architecture images\n> were 404s beforehand even with an absolute URL because the files didn't\n> live there. There were few images that were actually working beforehand,\n> most images were broken. The previous comment to this one (260acd0\n> https://github.com/apache/mesos/commit/260acd03b45c9a203a53bc92171aedadbb970dad)\n> in the PR actually fixed the script so the deployment would post-process\n> the markdown as it did with links. There is still something going wrong\n> with the deployment (i.e. manual running of the script and getting\n> committed to subversion).\n> \n> I've mentioned in a couple of mailing list threads that we need to make\n> this process automated via the Jenkins server. @davelester\n> https://github.com/davelester was helping to organise this with the\n> Apache ops guys as he is the web site maintainer.\n> \n> Here is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/commit/3c264c0929d328b1f8bedac3ad2fddadf782ec71#commitcomment-14940262\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jonorossi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940262", "body": "@westurner IIRC the architecture images were 404s beforehand even with an absolute URL because the files didn't live there. There were few images that were actually working beforehand, most images were broken. The previous comment to this one (260acd03b45c9a203a53bc92171aedadbb970dad) in the PR actually fixed the script so the deployment would post-process the markdown as it did with links. There is still something going wrong with the deployment (i.e. manual running of the script and getting committed to subversion).\n\nI've mentioned in a couple of mailing list threads that we need to make this process automated via the Jenkins server. @davelester was helping to organise this with the Apache ops guys as he is the web site maintainer.\n\nHere is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940317", "body": "I don't recall the paths exactly but the script in the Git repo should be pretty easy to follow.\n\nThis is the subversion repo where the site gets automatically deployed from when committed. The plan was for the \"source\" directory (and just about every else except publish) to be deleted because that is replaced by it all living the the Git repo now. I suspect the old Rakefile in the svn repo has been run rather than the updated Git one.\n\nhttp://svn.apache.org/viewvc/mesos/site/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "h0tbird": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19286203", "body": "Where is `W_EXITCODE` declared?\n\n```\n../../src/slave/containerizer/mesos/containerizer.cpp: In lambda function:\n../../src/slave/containerizer/mesos/containerizer.cpp:2282:35: error: 'W_EXITCODE' was not declared in this scope\n       return W_EXITCODE(0, SIGKILL);\n```\n\n**EDIT:** This is a non-posix W\\* function. C libraries like musl dont define them.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19286203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19287343", "body": "Done: [MESOS-6310](https://issues.apache.org/jira/browse/MESOS-6310)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kamilchm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19360216", "body": "Why this was reverted? I found it to be an issue on NixOS https://github.com/NixOS/nixpkgs/pull/19064\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19360216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19366004", "body": "Sure, I'll do to it tomorrow with more details.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19366004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/20303015", "body": "I've encountered permission denied problems when I ran Marathon with different user than *root* set in NixOS service config. ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20303015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cstrahan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20300335", "body": "@kamilchm Which error, specifically, is caused by this?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20300335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thinker0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/23351430", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/23351430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/24904496", "body": "Created an issue for this [MESOS-8073](https://issues.apache.org/jira/browse/MESOS-8073)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/24904496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9f5ef3a497151a7539172db3f30bfc329b5fa81", "message": "Flattened continuation chains in containerizer for readability.\n\nReview: https://reviews.apache.org/r/61811/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19287295", "body": "@h0tbird Please file a JIRA ticket if this is an issue for you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20769217", "body": "Doesn't look like we need to make this copy here and the non-const ref `Offer::Operation& operation` below? (The adjustments are already made in the master?)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20769217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/22940762", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/22940762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "miroswan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/258", "title": "Update api-client-libraries.md", "body": "* Adding Go client for the Mesos Operator API", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhitaoli": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/213", "title": "Update vendored protobuf tar.gz to 3.2.0.", "body": "The content of `3rdparty/protobuf-3.2.0.tar.gz` is generated by:\r\n- On a Mac OS, download and untar protobuf v3.2.0 source at\r\n  https://github.com/google/protobuf/archive/v3.2.0.tar.gz;\r\n- Run `./autogen.sh`;\r\n- Recompress and tar by `tar -czvf`.\r\n\r\nReview: https://reviews.apache.org/r/58358", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19363756", "body": "@kamilchm can you file a ticket on issues.apache.org?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xoho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/4057433", "body": "Need to update the link at http://mesos.apache.org/documentation/ to reflect the merge of \"Using ZooKeeper\" into \"High Availability\".  The link on the page http://mesos.apache.org/documentation/ still points to https://github.com/apache/mesos/blob/master/docs/Using-ZooKeeper.textile when it should point to https://github.com/apache/mesos/blob/master/docs/High-Availability.md.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/4057433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stelcheck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/5607832", "body": "I am having an issue in Chronos where it seems that when the Chronos framework tries to register, it registers with localhost (see https://github.com/airbnb/chronos/issues/193), and therefore unless the master is on the same machine as Chronos the registration never completes.\n\nCould that be causing the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/5607832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/8892794", "body": "Is there a memory leak here? Why not call `freeaddrinfo` before returning?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/8892934", "body": "Filed in reviewboard for the above concern\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/18398184", "body": "sweet! I didn't realize this made it into 1.0\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/18398184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "i-chaochen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/11352747", "body": "Hi, I tried to install the latest mesos(0.22.1) on AWS by the steps from mesos documentation \nhttp://mesos.apache.org/documentation/latest/ec2-scripts/\n\n// I can launch spark cluster on AWS in eu-west-1a with same key and key-id\nWhen I setted up my security key and key id ready to launch mesos cluster, it is constantly failed at \"Invalid availability zone\" error.\n\n// the reason I tried launch cluster on eu-west-1 because my key is generated on eu-west-1\nI also have tried eu-west-1, eu-west-1b and eu-west-1c, neither of ways can succeeded.\n\nI have printed out the opts below the Launch slaves(the launch script is stopped at here), is it normal?\nopts:\n{'ami': 'ami-4517dc2c', 'ft': 1, 'branch': 'master', 'zone': 'eu-west-1a', 'resume': False, 'ebs_vol_size': 0, 'master_instance_type': '', 'identity_file': 'awskey.pem', 'proxy_port': None, 'instance_type': 'm1.large', 'key_pair': 'awskey', 'swap': 1024, 'slaves': 1, 'download': 'none', 'spot_price': None, 'os': 'amazon64', 'wait': 60}\n\nDo you have idea how to fix it? Any helps would be appreciated!\nBest regards,\n\n./mesos-ec2 -k awskey -i awskey.pem --zone=eu-west-1a launch test01-mesos\nSetting up security groups...\nChecking for running cluster...\nLaunching instances...\nERROR:boto:400 Bad Request\nERROR:boto:<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\nTraceback (most recent call last):\nFile \"./mesos_ec2.py\", line 571, in \nmain()\nFile \"./mesos_ec2.py\", line 478, in main\nconn, opts, cluster_name)\nFile \"./mesos_ec2.py\", line 261, in launch_cluster\nblock_device_map = block_map)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/image.py\", line 329, in run\ntenancy=tenancy, dry_run=dry_run)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/connection.py\", line 973, in run_instances\nverb='POST')\nFile \"/usr/local/lib/python2.7/dist-packages/boto/connection.py\", line 1208, in get_object\nraise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/11352979", "body": "I can launch the cluster by default \"us-east-1b\" , but I changed default as \"eu-west-1a\" in mesos_ec2.py, it still can't launch and the same problem as the above.\n\nDo you have any good idea to fix it?\n\nRegards\n\nPS:\nI also have noticed from AWS console that all security groups have been created in us-east-1b, even I set the zone as \"eu-west-1a\", and none of mesos security groups have been created in eu-west-1. \n\nSo, is it I used a wrong way to launch the script or there is a bug in mesos_ec2.py?\n\nAny feedback would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ozdanborne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/13504480", "body": "typo: `of` should be `or`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/13504480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "westurner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940222", "body": "These image URIs now appear to 404ing:\n- https://mesos.apache.org/documentation/latest/architecture/\n  - `../images` seems to work\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940223", "body": "@jonorossi \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940273", "body": "Thanks!\n\nSo the paths for the .md files are\n\n```\n./images/img.PNG\n./doc.md\n```\n\nWhereas the site-deployed paths are:\n\n```\n/documentation/latest/images/img.PNG\n/documentation/latest/doc/\n```\n\nCurrently:\n- images display w/ GitHub\n- images 404 w/ the site\n\n... I'll copy this to JIRA when I get a minute.\nOn Dec 12, 2015 1:31 AM, \"Jonathon Rossi\" notifications@github.com wrote:\n\n> @westurner https://github.com/westurner IIRC the architecture images\n> were 404s beforehand even with an absolute URL because the files didn't\n> live there. There were few images that were actually working beforehand,\n> most images were broken. The previous comment to this one (260acd0\n> https://github.com/apache/mesos/commit/260acd03b45c9a203a53bc92171aedadbb970dad)\n> in the PR actually fixed the script so the deployment would post-process\n> the markdown as it did with links. There is still something going wrong\n> with the deployment (i.e. manual running of the script and getting\n> committed to subversion).\n> \n> I've mentioned in a couple of mailing list threads that we need to make\n> this process automated via the Jenkins server. @davelester\n> https://github.com/davelester was helping to organise this with the\n> Apache ops guys as he is the web site maintainer.\n> \n> Here is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/commit/3c264c0929d328b1f8bedac3ad2fddadf782ec71#commitcomment-14940262\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jonorossi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940262", "body": "@westurner IIRC the architecture images were 404s beforehand even with an absolute URL because the files didn't live there. There were few images that were actually working beforehand, most images were broken. The previous comment to this one (260acd03b45c9a203a53bc92171aedadbb970dad) in the PR actually fixed the script so the deployment would post-process the markdown as it did with links. There is still something going wrong with the deployment (i.e. manual running of the script and getting committed to subversion).\n\nI've mentioned in a couple of mailing list threads that we need to make this process automated via the Jenkins server. @davelester was helping to organise this with the Apache ops guys as he is the web site maintainer.\n\nHere is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940317", "body": "I don't recall the paths exactly but the script in the Git repo should be pretty easy to follow.\n\nThis is the subversion repo where the site gets automatically deployed from when committed. The plan was for the \"source\" directory (and just about every else except publish) to be deleted because that is replaced by it all living the the Git repo now. I suspect the old Rakefile in the svn repo has been run rather than the updated Git one.\n\nhttp://svn.apache.org/viewvc/mesos/site/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "h0tbird": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19286203", "body": "Where is `W_EXITCODE` declared?\n\n```\n../../src/slave/containerizer/mesos/containerizer.cpp: In lambda function:\n../../src/slave/containerizer/mesos/containerizer.cpp:2282:35: error: 'W_EXITCODE' was not declared in this scope\n       return W_EXITCODE(0, SIGKILL);\n```\n\n**EDIT:** This is a non-posix W\\* function. C libraries like musl dont define them.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19286203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19287343", "body": "Done: [MESOS-6310](https://issues.apache.org/jira/browse/MESOS-6310)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kamilchm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19360216", "body": "Why this was reverted? I found it to be an issue on NixOS https://github.com/NixOS/nixpkgs/pull/19064\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19360216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19366004", "body": "Sure, I'll do to it tomorrow with more details.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19366004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/20303015", "body": "I've encountered permission denied problems when I ran Marathon with different user than *root* set in NixOS service config. ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20303015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cstrahan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20300335", "body": "@kamilchm Which error, specifically, is caused by this?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20300335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thinker0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/23351430", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/23351430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/24904496", "body": "Created an issue for this [MESOS-8073](https://issues.apache.org/jira/browse/MESOS-8073)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/24904496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "3": {"rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9f5ef3a497151a7539172db3f30bfc329b5fa81", "message": "Flattened continuation chains in containerizer for readability.\n\nReview: https://reviews.apache.org/r/61811/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19287295", "body": "@h0tbird Please file a JIRA ticket if this is an issue for you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20769217", "body": "Doesn't look like we need to make this copy here and the non-const ref `Offer::Operation& operation` below? (The adjustments are already made in the master?)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20769217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/22940762", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/22940762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "miroswan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/258", "title": "Update api-client-libraries.md", "body": "* Adding Go client for the Mesos Operator API", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhitaoli": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/213", "title": "Update vendored protobuf tar.gz to 3.2.0.", "body": "The content of `3rdparty/protobuf-3.2.0.tar.gz` is generated by:\r\n- On a Mac OS, download and untar protobuf v3.2.0 source at\r\n  https://github.com/google/protobuf/archive/v3.2.0.tar.gz;\r\n- Run `./autogen.sh`;\r\n- Recompress and tar by `tar -czvf`.\r\n\r\nReview: https://reviews.apache.org/r/58358", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19363756", "body": "@kamilchm can you file a ticket on issues.apache.org?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xoho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/4057433", "body": "Need to update the link at http://mesos.apache.org/documentation/ to reflect the merge of \"Using ZooKeeper\" into \"High Availability\".  The link on the page http://mesos.apache.org/documentation/ still points to https://github.com/apache/mesos/blob/master/docs/Using-ZooKeeper.textile when it should point to https://github.com/apache/mesos/blob/master/docs/High-Availability.md.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/4057433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stelcheck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/5607832", "body": "I am having an issue in Chronos where it seems that when the Chronos framework tries to register, it registers with localhost (see https://github.com/airbnb/chronos/issues/193), and therefore unless the master is on the same machine as Chronos the registration never completes.\n\nCould that be causing the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/5607832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/8892794", "body": "Is there a memory leak here? Why not call `freeaddrinfo` before returning?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/8892934", "body": "Filed in reviewboard for the above concern\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/18398184", "body": "sweet! I didn't realize this made it into 1.0\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/18398184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "i-chaochen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/11352747", "body": "Hi, I tried to install the latest mesos(0.22.1) on AWS by the steps from mesos documentation \nhttp://mesos.apache.org/documentation/latest/ec2-scripts/\n\n// I can launch spark cluster on AWS in eu-west-1a with same key and key-id\nWhen I setted up my security key and key id ready to launch mesos cluster, it is constantly failed at \"Invalid availability zone\" error.\n\n// the reason I tried launch cluster on eu-west-1 because my key is generated on eu-west-1\nI also have tried eu-west-1, eu-west-1b and eu-west-1c, neither of ways can succeeded.\n\nI have printed out the opts below the Launch slaves(the launch script is stopped at here), is it normal?\nopts:\n{'ami': 'ami-4517dc2c', 'ft': 1, 'branch': 'master', 'zone': 'eu-west-1a', 'resume': False, 'ebs_vol_size': 0, 'master_instance_type': '', 'identity_file': 'awskey.pem', 'proxy_port': None, 'instance_type': 'm1.large', 'key_pair': 'awskey', 'swap': 1024, 'slaves': 1, 'download': 'none', 'spot_price': None, 'os': 'amazon64', 'wait': 60}\n\nDo you have idea how to fix it? Any helps would be appreciated!\nBest regards,\n\n./mesos-ec2 -k awskey -i awskey.pem --zone=eu-west-1a launch test01-mesos\nSetting up security groups...\nChecking for running cluster...\nLaunching instances...\nERROR:boto:400 Bad Request\nERROR:boto:<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\nTraceback (most recent call last):\nFile \"./mesos_ec2.py\", line 571, in \nmain()\nFile \"./mesos_ec2.py\", line 478, in main\nconn, opts, cluster_name)\nFile \"./mesos_ec2.py\", line 261, in launch_cluster\nblock_device_map = block_map)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/image.py\", line 329, in run\ntenancy=tenancy, dry_run=dry_run)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/connection.py\", line 973, in run_instances\nverb='POST')\nFile \"/usr/local/lib/python2.7/dist-packages/boto/connection.py\", line 1208, in get_object\nraise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/11352979", "body": "I can launch the cluster by default \"us-east-1b\" , but I changed default as \"eu-west-1a\" in mesos_ec2.py, it still can't launch and the same problem as the above.\n\nDo you have any good idea to fix it?\n\nRegards\n\nPS:\nI also have noticed from AWS console that all security groups have been created in us-east-1b, even I set the zone as \"eu-west-1a\", and none of mesos security groups have been created in eu-west-1. \n\nSo, is it I used a wrong way to launch the script or there is a bug in mesos_ec2.py?\n\nAny feedback would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ozdanborne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/13504480", "body": "typo: `of` should be `or`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/13504480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "westurner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940222", "body": "These image URIs now appear to 404ing:\n- https://mesos.apache.org/documentation/latest/architecture/\n  - `../images` seems to work\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940223", "body": "@jonorossi \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940273", "body": "Thanks!\n\nSo the paths for the .md files are\n\n```\n./images/img.PNG\n./doc.md\n```\n\nWhereas the site-deployed paths are:\n\n```\n/documentation/latest/images/img.PNG\n/documentation/latest/doc/\n```\n\nCurrently:\n- images display w/ GitHub\n- images 404 w/ the site\n\n... I'll copy this to JIRA when I get a minute.\nOn Dec 12, 2015 1:31 AM, \"Jonathon Rossi\" notifications@github.com wrote:\n\n> @westurner https://github.com/westurner IIRC the architecture images\n> were 404s beforehand even with an absolute URL because the files didn't\n> live there. There were few images that were actually working beforehand,\n> most images were broken. The previous comment to this one (260acd0\n> https://github.com/apache/mesos/commit/260acd03b45c9a203a53bc92171aedadbb970dad)\n> in the PR actually fixed the script so the deployment would post-process\n> the markdown as it did with links. There is still something going wrong\n> with the deployment (i.e. manual running of the script and getting\n> committed to subversion).\n> \n> I've mentioned in a couple of mailing list threads that we need to make\n> this process automated via the Jenkins server. @davelester\n> https://github.com/davelester was helping to organise this with the\n> Apache ops guys as he is the web site maintainer.\n> \n> Here is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/commit/3c264c0929d328b1f8bedac3ad2fddadf782ec71#commitcomment-14940262\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jonorossi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940262", "body": "@westurner IIRC the architecture images were 404s beforehand even with an absolute URL because the files didn't live there. There were few images that were actually working beforehand, most images were broken. The previous comment to this one (260acd03b45c9a203a53bc92171aedadbb970dad) in the PR actually fixed the script so the deployment would post-process the markdown as it did with links. There is still something going wrong with the deployment (i.e. manual running of the script and getting committed to subversion).\n\nI've mentioned in a couple of mailing list threads that we need to make this process automated via the Jenkins server. @davelester was helping to organise this with the Apache ops guys as he is the web site maintainer.\n\nHere is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940317", "body": "I don't recall the paths exactly but the script in the Git repo should be pretty easy to follow.\n\nThis is the subversion repo where the site gets automatically deployed from when committed. The plan was for the \"source\" directory (and just about every else except publish) to be deleted because that is replaced by it all living the the Git repo now. I suspect the old Rakefile in the svn repo has been run rather than the updated Git one.\n\nhttp://svn.apache.org/viewvc/mesos/site/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "h0tbird": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19286203", "body": "Where is `W_EXITCODE` declared?\n\n```\n../../src/slave/containerizer/mesos/containerizer.cpp: In lambda function:\n../../src/slave/containerizer/mesos/containerizer.cpp:2282:35: error: 'W_EXITCODE' was not declared in this scope\n       return W_EXITCODE(0, SIGKILL);\n```\n\n**EDIT:** This is a non-posix W\\* function. C libraries like musl dont define them.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19286203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19287343", "body": "Done: [MESOS-6310](https://issues.apache.org/jira/browse/MESOS-6310)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kamilchm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19360216", "body": "Why this was reverted? I found it to be an issue on NixOS https://github.com/NixOS/nixpkgs/pull/19064\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19360216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19366004", "body": "Sure, I'll do to it tomorrow with more details.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19366004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/20303015", "body": "I've encountered permission denied problems when I ran Marathon with different user than *root* set in NixOS service config. ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20303015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cstrahan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20300335", "body": "@kamilchm Which error, specifically, is caused by this?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20300335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thinker0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/23351430", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/23351430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/24904496", "body": "Created an issue for this [MESOS-8073](https://issues.apache.org/jira/browse/MESOS-8073)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/24904496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "4": {"rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9f5ef3a497151a7539172db3f30bfc329b5fa81", "message": "Flattened continuation chains in containerizer for readability.\n\nReview: https://reviews.apache.org/r/61811/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "miroswan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/258", "title": "Update api-client-libraries.md", "body": "* Adding Go client for the Mesos Operator API", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhitaoli": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/213", "title": "Update vendored protobuf tar.gz to 3.2.0.", "body": "The content of `3rdparty/protobuf-3.2.0.tar.gz` is generated by:\r\n- On a Mac OS, download and untar protobuf v3.2.0 source at\r\n  https://github.com/google/protobuf/archive/v3.2.0.tar.gz;\r\n- Run `./autogen.sh`;\r\n- Recompress and tar by `tar -czvf`.\r\n\r\nReview: https://reviews.apache.org/r/58358", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "5": {"rukletsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a9f5ef3a497151a7539172db3f30bfc329b5fa81", "message": "Flattened continuation chains in containerizer for readability.\n\nReview: https://reviews.apache.org/r/61811/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/19cf3068b81355818a9c4cdb797883f2b73cdbce", "message": "Rewrote some comments in switchboard.cpp for clarity."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622", "body": "It looks like the common pattern is to switch on the type. Could you please follow this pattern? You can convert `has_*()` into `CHECK`s.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/70072622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ArmandGrillet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/634c8af2618c57a1405d20717fa909b399486f37", "message": "Updated tests to use `createCallSubscribe`.\n\nUpdate all the tests that send v1 API SUBSCRIBE calls\nto use the `createCallSubscribe` test helper.\n\nReview: https://reviews.apache.org/r/63661/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbannier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/eb901173b8aa43b9fd1ab0f727ff5187982c4449", "message": "Added libprocess benchmarks to cmake build setup.\n\nTo make sure that `benchmarks` is built as part of the tests we add a\ndependency of `libprocess-tests` on `benchmarks` even though no actual\ncompile- or runtime dependency exists.\n\nReview: https://reviews.apache.org/r/65166/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19287295", "body": "@h0tbird Please file a JIRA ticket if this is an issue for you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nfnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8cf6b0882e8e393702c673e2b29ac6781cec0b85", "message": "Added a resource provider test case.\n\nReview: https://reviews.apache.org/r/65126/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/75659c9613b768cde6ca8afe7fbdaa1306b0cef8", "message": "Added a helper function for resource provider tests.\n\nReview: https://reviews.apache.org/r/65125/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/f6d7cd6da41b0d43c0923dea35531775850c0b5e", "message": "Moved agent response code into 'protobuf_utils.cpp'.\n\nReview: https://reviews.apache.org/r/65043/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qianzhangxa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/a3e1f9b82ec966017ffe1f9767b93965a7af9670", "message": "Updated Qian Zhang's entry in the contributors list."}, {"url": "https://api.github.com/repos/apache/mesos/commits/2c5da1b668de91e33831caafb18a3b4d71b26c69", "message": "Detached `virtualLatestPath` when recovering the executor.\n\nPreviously we miss to detach `/frameworks/FID/executors/EID/runs/latest`\nwhen we find the latest run of the executor was completed in the method\n`Framework::recoverExecutor`, that is a leak.\n\nReview: https://reviews.apache.org/r/65167"}, {"url": "https://api.github.com/repos/apache/mesos/commits/9585a2173970589f91858301c66479827c1370a9", "message": "Updated `ROOT_TaskSandboxPersistentVolume` to check `/files` endpoint.\n\nReview: https://reviews.apache.org/r/65070"}, {"url": "https://api.github.com/repos/apache/mesos/commits/e126254edd6abdad7f765dfa97ac8f695c88aca7", "message": "Made task's volume directory visible in the /files endpoints.\n\nIn MESOS-7225, we made a task can access any volumes specified in its\ndisk resources from its own sandbox by introducing a workaround to the\ndefault executor, i.e., add a `SANDBOX_PATH` volume with type `PARENT`\nto the corresponding nested container. It will be translated into a bind\nmount in the nested container's mount namespace, thus not visible in the\nhost mount namespace, that means the task's volume directory can not be\nvisible in Mesos UI since it operates in the host mount namespace.\n\nIn this patch, to make the task's volume directory visible in Mesos UI,\nwe attached the executor's volume directory to it, so when users browse\ntask's volume directory in Mesos UI, what they actually browse is the\nexecutor's volume directory. Note when calling `Files::attach()`, the\nthird argument `authorized` is not specified, that is because it is\nalready specified when we do the attach for the executor's sandbox and\nit is also applied to the executor's tasks.\n\nReview: https://reviews.apache.org/r/64978"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5225a49c495bc7e3362bcee2d460d8c99111c7f4", "message": "Detached the virtual paths regardless of the result of gc.\n\nPreviously we only detach the following paths when the gc for the\nexecutor's sandbox succeeds.\n  1. /agent_workdir/frameworks/FID/executors/EID/runs/CID\n  2. /agent_workdir/frameworks/FID/executors/EID/runs/latest\n  3. /frameworks/FID/executors/EID/runs/latest\n\nBut the problem is, such gc may not always succeed, e.g., it may fail\ndue to the parent directory of the executor's sandbox already gc'ed.\n\nNow in this patch, we will detach those paths regardless of the result\nof gc.\n\nReview: https://reviews.apache.org/r/65156"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmahler": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bc9fe648038b6139cc9df709fdd58208ce0a08aa", "message": "Eliminated some unnecessary copying in the agent's HTTP operator API.\n\nReview: https://reviews.apache.org/r/65204"}, {"url": "https://api.github.com/repos/apache/mesos/commits/7d8ae37b022ac82c6945ff07ac980017f347b45e", "message": "Added a default move constructor for Result.\n\nReview: https://reviews.apache.org/r/65200"}, {"url": "https://api.github.com/repos/apache/mesos/commits/1ead3e669ed06198cb96a9ab901ad86df835402e", "message": "Added the v1 operator API performance improvements to the CHANGELOG."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271", "body": "Hey deric, we've since merged that file with the 'High Availability' document. We'll update the website to kill the reference to it, thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22743271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089", "body": "The incubator repository is now obsolete, given we've graduated and migrated to a new git repository.\n\nAs an FYI, we currently only use Apache's Review Board for code reviews. However, I'd love to have some tooling in place to accept simple github pull requests like this one.\n\nWe also purely use JIRA as a means for tracking issues, I filed an issue here: https://issues.apache.org/jira/browse/MESOS-665\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/23239089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807", "body": "Hi Andrew, we use Apache's ReviewBoard for patches, although we'd love to see some tooling in place so that people can send simple pull requests like this one!\n\nhttps://reviews.apache.org/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24624807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556", "body": "Awesome! Can you send this via the apache ReviewBoard?\n\nhttps://reviews.apache.org/groups/mesos/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27272556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186", "body": "Hi Ken, it looks like the asf bot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46711186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932", "body": "I'm not sure that /tmp/mesos is the best example for this as it implies that it is ok for the data to be wiped when /tmp is cleaned by the OS.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/15443932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014", "body": "Can we omit \"core facility\" here? It seems inconsistent with the rest of the items in this list, where we've just included the organization name.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/48921014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpeach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/cc010f509a9a1a8639ffef1985549352812fbc14", "message": "Forced the Docker image delete on build failure.\n\nWhen a Docker build fails, force the `rmi` operation so that we don't\nleave orphan containers on the ASF build agents."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupta-ak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/8964137f68015c40af2fc850d3c9cb71895454c4", "message": "Windows: Updated networking documentation.\n\nThe networking docs now describe how the Docker network modes in the\n`Network` enum work on Windows, since the enum only has Linux network\nmodes.\n\nReview: https://reviews.apache.org/r/63861/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6b35c93baf4445686caea6ca12788fe7593e0dd8", "message": "Windows: Mapped the Docker network info types.\n\nThe Network enum in DockerInfo is specific to Linux containers. `HOST`\ndoesn't exist on Windows and `BRIDGE` is `NAT` on Windows. The current\ndefault docker network setting was always `HOST`, which broke the\nWindows docker executor. Now, if a specific network isn't given, the\nnetwork mode will default to `HOST` on Linux agents and `NAT` on Windows\nagents. Also, `BRIDGE` mode will be translated to `NAT` on Windows.\n\nReview: https://reviews.apache.org/r/63860/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/eccd0a9f9aa53acd2b1daf7512868eb6faff93a7", "message": "Windows: Fixed mock signal values in stout.\n\nRemoved `SIGSTOP` and `SIGCONT` on Windows, since they are meaningless,\nand never unused. Also, fixed the WEXITSTATUS macro to cast the exit\ncode instead of bit-masking it, since Windows exit codes are 32 bit\nunsigned ints.\n\nReview: https://reviews.apache.org/r/63859/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xujyan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/24a746d85780051d862db0697b63c3c52db4362a", "message": "Improved documentation on resource reservations.\n\nAdded explanation for authorizations on static reservations.\n\nReview: https://reviews.apache.org/r/64516"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ae515379e8447b9f6ac8416f3a69cec57b5d7ba5", "message": "Used `reserve_resources` ACL for static reservations.\n\nReview: https://reviews.apache.org/r/64515"}, {"url": "https://api.github.com/repos/apache/mesos/commits/5d0d35236c3b0db3b2f3363244fc45b0928a0541", "message": "Refactor out `authorizeReserveResources` that takes a `Resources`.\n\nThis allows us to authorize static resource reservations that don't\ncome from `Offer::Operation::Reserve`.\n\nReview: https://reviews.apache.org/r/64514"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20769217", "body": "Doesn't look like we need to make this copy here and the non-const ref `Offer::Operation& operation` below? (The adjustments are already made in the master?)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20769217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jieyu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/14f4fdfae7d3f3a6d2dbc139c8a21c81b0e4ec20", "message": "Fixed some style issues in CHANGELOG."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chhsia0": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/bf2515d881a5fea8d0002978aa4f9ab553943c91", "message": "Documented the change in the Protobuf requirement.\n\nReview: https://reviews.apache.org/r/64823/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abudnik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/52a55debebdba2f40361dafc5c10cf9d1b1a584d", "message": "Fixed flaky EOFBeforeRecv test.\n\nThis patch is a small correction of commit d4185d4a11.\nBefore this patch, if EOF event for a ssl socket is received before\na client called `recv`, then this EOF event is lost. This leads to\nhanging `recv` on the ssl socket after calling `shutdown`.\n\nReview: https://reviews.apache.org/r/65179/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/ff6915822140fb243d0711102922969e03c85f2d", "message": "Updated comments in IOSwitchboard.\n\nThis is addendum to review https://reviews.apache.org/r/65122\n\nReview: https://reviews.apache.org/r/65190/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/6d19caac8bc1a11e986f7f78796371062d2eff39", "message": "Fixed race condition in IOSwitchboard for ATTACH_CONTAINER_INPUT call.\n\nPreviously, IOSwitchboard terminated itself after io redirect had\nbeen finished and occasionally before an http response had been sent\nto the agent for `ATTACH_CONTAINER_INPUT` request. This patch ensures\nthat termination of the IOSwitchboard server process does not occur\nbefore input stream is closed and an HTTP response is send to the\nwriter.\n\nReview: https://reviews.apache.org/r/65122/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengzhugithub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9e2f9a2401a7665872f9cb2d994ca5013cd852c9", "message": "Added an performance benchmark for master `GetState` v1 api.\n\nThis test is based on the master failover benchmark. Note that\nit does not include executors for now.\n\nReview: https://reviews.apache.org/r/64969/"}, {"url": "https://api.github.com/repos/apache/mesos/commits/aded41aecb5aab988313689c2b0664b86d45eb1f", "message": "Used jsonify in http serialization for better performance.\n\nThis change avoids building an in-memory JSON::Object in favor\nof using jsonify to directly output the serialized JSON from\nthe protobuf.\n\nReview: https://reviews.apache.org/r/65063/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andschwa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/mesos/commits/9b1fda56a04da9dafadd117a21cdf92d24e50483", "message": "Updated C++ Style Guide.\n\nAdded three missing style notes:\n\n* Use of `::` for global namespace\n* Put `template <typename T>` on own line\n* Prefer `->foo()` to `.get().foo()`\n\nReview: https://reviews.apache.org/r/65114"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/22940762", "body": "\ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/22940762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "miroswan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/258", "title": "Update api-client-libraries.md", "body": "* Adding Go client for the Mesos Operator API", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pleia2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/256", "title": "Correct spelling errors in the docs", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nhandler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/255", "title": "Add curl examples to operator-http-api", "body": "When reading this document, many people will want to test out the\r\nrequests against their own environment. Providing curl examples will\r\nhelp assist with this task.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "packtpartner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/249", "title": "Update presentations.md", "body": "Added a new Video course.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haoyixin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/221", "title": "Fixed a bug in the logging of cni isolator.", "body": "the old errno would always be 0, and we can't get the reason that why execute ifconfig failed.\r\n\r\nso, we use the return value of spawn for WSTRINGIFYing error in log.\r\n\r\nand this fix format issue @haosdent ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shendabin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/216", "title": "1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhitaoli": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/213", "title": "Update vendored protobuf tar.gz to 3.2.0.", "body": "The content of `3rdparty/protobuf-3.2.0.tar.gz` is generated by:\r\n- On a Mac OS, download and untar protobuf v3.2.0 source at\r\n  https://github.com/google/protobuf/archive/v3.2.0.tar.gz;\r\n- Run `./autogen.sh`;\r\n- Recompress and tar by `tar -czvf`.\r\n\r\nReview: https://reviews.apache.org/r/58358", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361", "body": "Can we restructure these two sentences as this is not very clear.\n\nMaybe consider something among:\n\n```\n// Used to determine the Unix user that an executor or task should be\n// launched as.\n//\n// If using MesosSchedulerDriver and this field is set to an empty string, MesosSchedulerDriver\n// will automagically set it to the current user.\n//\n// If using HTTP API, this field must be explicitly set.\n```\n\nSame for the other comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/71003361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "aaronjwood": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/205", "title": "Clarify existence of FrameworkID in SUBSCRIBE calls.", "body": "I wanted to clarify how `FrameworkID` should or shouldn't be set in `SUBSCRIBE` calls. Spoke with Anand about this earlier today when I was running into issues with resubscribing.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avarsha-ibm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/191", "title": "Adding support for s390x architecture", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CVTJNII": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/190", "title": "Ensure curl is present on Ubuntu", "body": "When running on a clean Ubuntu install curl may not be present.  The following error was seen while experimenting with the ubuntu:14.04 Docker container:\r\n\r\n```\r\nReceived status update TASK_FAILED for task 'test'\r\n  message: 'Failed to launch container: Failed to perform 'curl': ABORT: (../../../3rdparty/libprocess/include/process/posix/subprocess.hpp:214): Failed to os::execvpe on path 'curl': No such file or directory\r\n*** Aborted at 1480435360 (unix time) try \"date -d @1480435360\" if you are using GNU date ***\r\nPC: @     0x7f1d40711c37 (unknown)\r\n*** SIGABRT (@0x61) received by PID 97 (TID 0x7f1d38ef5700) from PID 97; stack trace: ***\r\n    @     0x7f1d40fca330 (unknown)\r\n    @     0x7f1d40711c37 (unknown)\r\n    @     0x7f1d40715028 (unknown)\r\n    @           0x46e1fc _Abort()\r\n    @           0x46e22a _Abort()\r\n    @     0x7f1d4648d0e1 process::internal::childMain()\r\n    @     0x7f1d46491f7b _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EE6__callIiJEJLm0ELm1ELm2ELm3ELm4ELm5ELm6ELm7ELm8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE\r\n    @     0x7f1d46491394 _ZNSt5_BindIFPFiRKSsPPcS3_RKN7process10Subprocess2IO20InputFileDescriptorsERKNS6_21OutputFileDescriptorsESC_bPiRKSt6vectorINS5_9ChildHookESaISF_EEESsS3_S3_S7_SA_SA_bSD_SH_EEclIJEiEET0_DpOT_\r\n    @     0x7f1d464904f0 std::_Function_handler<>::_M_invoke()\r\n    @           0x4780b0 std::function<>::operator()()\r\n    @     0x7f1d4524f325 process::defaultClone()\r\n    @     0x7f1d4648fb3d std::_Function_handler<>::_M_invoke()\r\n    @     0x7f1d4648f3c3 std::function<>::operator()()\r\n    @     0x7f1d4648d93d process::internal::cloneChild()\r\n    @     0x7f1d4648b8c5 process::subprocess()\r\n    @     0x7f1d45b967f1 mesos::uri::curl()\r\n    @     0x7f1d45b96e18 mesos::uri::curl()\r\n    @     0x7f1d45b991b8 mesos::uri::DockerFetcherPluginProcess::fetch()\r\n    @     0x7f1d45ba485a _ZZN7process8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS2_3URIERKSsS5_SsEENS_6FutureIT_EERKNS_3PIDIT0_EEMSE_FSC_T1_T2_ET3_T4_ENKUlPNS_11ProcessBaseEE_clESP_\r\n    @     0x7f1d45baba29 _ZNSt17_Function_handlerIFvPN7process11ProcessBaseEEZNS0_8dispatchI7NothingN5mesos3uri26DockerFetcherPluginProcessERKNS6_3URIERKSsS9_SsEENS0_6FutureIT_EERKNS0_3PIDIT0_EEMSI_FSG_T1_T2_ET3_T4_EUlS2_E_E9_M_invokeERKSt9_Any_dataS2_\r\n    @     0x7f1d46441071 std::function<>::operator()()\r\n    @     0x7f1d46423db1 process::ProcessBase::visit()\r\n    @     0x7f1d4642c1c6 process::DispatchEvent::visit()\r\n    @     0x7f1d4504084c process::ProcessBase::serve()\r\n    @     0x7f1d464200a6 process::ProcessManager::resume()\r\n    @     0x7f1d4641cd31 _ZZN7process14ProcessManager12init_threadsEvENKUt_clEv\r\n    @     0x7f1d4642b96e _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEE9_M_invokeIIEEEvSt12_Index_tupleIIXspT_EEE\r\n    @     0x7f1d4642b8c5 _ZNSt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEclEv\r\n    @     0x7f1d4642b85e _ZNSt6thread5_ImplISt12_Bind_simpleIFZN7process14ProcessManager12init_threadsEvEUt_vEEE6_M_runEv\r\n    @     0x7f1d40d67a60 (unknown)\r\n    @     0x7f1d40fc2184 start_thread\r\n    @     0x7f1d407d537d (unknown)\r\n' \r\n  source: SOURCE_AGENT\r\n  reason: REASON_CONTAINER_LAUNCH_FAILED\r\n```\r\n\r\nThis is resolved by running 'apt-get install curl' which this PR adds to the getting started instructions.\r\n\r\nThis PR only adds Curl to the Ubuntu instructions as it is believed to already be present on CentOS:\r\n\r\n```shell\r\n$ for dist in ubuntu:14.04 ubuntu:16.04 centos:6.6 centos:7; do echo \"$dist: $(docker run $dist curl --version 2>&1 | head -n 1)\"; done\r\nubuntu:14.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\nubuntu:16.04: docker: Error response from daemon: oci runtime error: exec: \"curl\": executable file not found in $PATH.\r\ncentos:6.6: curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.15.3 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\ncentos:7: curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.19.1 Basic ECC zlib/1.2.7 libidn/1.28 libssh2/1.4.3\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jneimanmesos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/178", "title": "WIP: Mesos Documentation Project Reorg Proposal", "body": "This is an initial proposal for reorganizing the Mesos Documentation. \r\n\r\nOur goal is to satisfy the needs of Operators, Developers, and Contributors by:\r\n\r\n  - Revising, restructuring, and expanding existing topics.\r\n  - Authoring new topics, such as _Quick Start_ and _What is Mesos?_.\r\n  - Reorganizing the table of contents.\r\n  - Providing role-specific views of the table of contents.\r\n\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haosdent": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/158", "title": "Fixed MESOS-5925 Building Mesos in Docker 1.12 on OS X", "body": "- Replaced gmock-1.7.0.tar.gz with a correct permissions version.\n- Replaced gperftools-2.5.tar.gz with a correct permissions version.\n\nBecause I found upload binary changes does not work in https://reviews.apache.org/r/51079/ and  https://reviews.apache.org/r/51080/,  I open this pull request.\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393", "body": "Looks good to me. Could you put it after `[New York, NY]`, because it is sorted by alphabetically. By the way, you need find a committer help you submit this.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58294393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507", "body": "Hi, why remove this condition `if (initializing || consecutiveFailures > 0) {`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69151507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934", "body": "Oh, got it. Could you follow https://github.com/apache/mesos/blob/master/docs/submitting-a-patch.md to submit the patch at https://reviews.apache.org/groups/mesos/ \nWe use reviewboard to review code changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122", "body": "The path incorrect here?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69599122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291", "body": "I post a quick fix at https://reviews.apache.org/r/49641/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69601291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021", "body": "OK, LGTM. If you are not familiar with review board, I could help you to post this patch there.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69700021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063", "body": "> 1) let the framework persist task health status before acknowledging the update\n\nThis approach looks better. @brat002 May you mind close this pull request and let me create a ticket in https://issues.apache.org/jira/browse/MESOS to track this?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69842063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brat002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/118", "title": "Make Mesos healtchecks compatible with Marathon", "body": "https://github.com/mesosphere/marathon/issues/916\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156", "body": "We need to update Health status every time when it triggered.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69152156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525", "body": "Could anybody make correct pull request? I am not C programmer and not 100% sure in these changes. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69314525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561", "body": "It will be great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69706561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "frankscholten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/105", "title": "MESOS-3139 Added first draft CMake build docs.", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/104", "title": "MESOS-3932 Suppressed boost auto_ptr compile warnings.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ayouwei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/69", "title": "update module doc:  add parameter -c to build command", "body": "without -c parameter, get error:\n\n/usr/lib/gcc/x86_64-redhat-linux/4.8.3/../../../../lib64/crt1.o: In function `_start':\n(.text+0x20): undefined reference to`main'\ncollect2: error: ld returned 1 exit status\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/mesos/pulls/65", "title": "Process dispatch", "body": "## Generic Asynchronous Dispatcher   \n## Motivation\n\n  Since mesos code is based on the actor model and dispatching an interface  \nasynchronously is a large part of the code base, generalizing the higher level concept of  \nasynchronously dispatching an interface would eliminate the need to manually \nprogram the dispatch boilerplate.                                         \n\nAn example usage:  \nFor a simple interface like:                                                     \n\n``` C\nclass Interface                                                                  \n{                                                                                \n  virtual Future<size_t> writeToFile(const char* data) = 0;                      \n  virtual ~Interface();                                                          \n};     \n```\n\nToday the developer has to do the following:                                     \n\na.  Write a wrapper class that implements the same interface to add the  \n    dispatching boilerplate.  \nb.  Spend precious time in reviews.  \nc.  Risk introducing bugs.                                                       \n\n  None of the above steps add any value to the executable binary.                \n\nThe wrapper class would look like:                                               \n\n``` C\n\n// -- hpp file                                                                   \nclass InterfaceProcess;                                                          \n\nclass InterfaceImpl : public Interface                                           \n{                                                                                \npublic:                                                                          \n  Try<Owned<InterfaceImpl>> create(const Flags& flags);                          \n\n  virtual Future<size_t> writeToFile(const char* data);                          \n\n  ~InterfaceImpl();\nprivate:                                                                         \n  Owned<InterfaceProcess> process;                                               \n};                                                                               \n\n// -- cpp file                                                                   \nTry<Owned<InterfaceImpl>> create(const Flags& flags)                             \n{                                                                                \n  // Code to create the InterfaceProcess class.                                  \n}                                                                                \n\nFuture Future<size_t> InterfaceImpl::writeToFile(const char* data)               \n{                                                                                \n  process->dispatch(                                                             \n    &InterfaceProcess::writeToFile,                                              \n    data);                                                                       \n}                                                                                \n\nInterfaceImpl::InterfaceImpl()                                                   \n{                                                                                \n  // Code to spawn the process                                                   \n}                                                                                \n\nInterfaceImpl::~InterfaceImpl()                                                  \n{                                                                                \n  // Code to stop the process.                                                   \n}   \n```\n\nAt the caller/client site, the code would look like:                             \n\n``` C\nTry<Owned<Interface>> in = InterfaceImpl::create(flags);                         \nFuture<size_t> result =                                                          \n  in->writeToFile(data);                                                                       \n```\n## Proposal                                                                         \n\n  We should use C++'s rich language semnatics to express the intent and avoid  \nthe boilerplate we write manually.  \n  The basic intent of the code that leads to all the boilerplate above is:       \n\na. An interface that provides a set of functionality.  \nb. An implementation of the interface.  \nc. Ability to dispatch that interface asynchronously using actor.                \n\nC++ has a rich set of generics that can be used to express above.                \n## Components                                                                       \n1. ProcessDispatcher  \n   This component will \"dispatch\" an interface implementation asychronously using \n   the process framework.  \n   This component can be expressed as:                                            \n   \n   ``` C\n   ProcessDispatcher<Interface, InterfaceImplmentation>   \n   ```\n2. DispatchInterface  \n   Any interface that provides an implementation that can be \"dispatched\" can be  \n   expressed using this component.  \n   This component can be expressed as:                                            \n\n``` C\nDispatchable<Interface>  \n```\n## Usage:\n1. Simple usage  \n\n``` C\nTry<Owned<Dispatchable<Interface>>> dispatcher =                                 \n  ProcessDispatcher<Interface, InterfaceImpl>::create(flags);                    \n\nFuture<size_t> result =                                                          \n  dispatcher->dispatch(                                                          \n    Interface::writeToFile,                                                      \n    data);                                                                       \n```\n1. Collecting the interface in a container                                       \n   \n   ``` C\n   vector<Owned<Dispatchable<Interface>>> dispatchCollection;                       \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher1 =                                \n   ProcessDispatcher<Interface, InterfaceImpl1>::create(flags);                   \n   \n   Try<Owned<Dispatchable<Interface>>> dispatcher2 =                                \n   ProcessDispatcher<Interface, InterfaceImpl2>::create(\"test\");                  \n   \n   dispatchCollection.push_back(dispatcher1);                                       \n   dispatchCollection.push_back(dispatcher2);    \n   \n   ```\n\nThe advantages of using the generic dispatcher:\n- Saves time by avoiding to write all the boilerplate and going through review  \n  cycles.  \n- Less bugs.  \n- Focus on real problem and not boilerplate.  \n- Less code to represent a primitive.  \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hshoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015", "body": "Just realized this isn't right way to submit a patch. My bad. Github's easy file editing to pull request got me.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22281015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "deric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636", "body": "Ok cool, replace it with the link to `master/docs/High-Availability.md` and we can close the issue. It's hard to find the current version of documentation. Btw. the incubator repository won't be used anymore?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/22933636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ankurcha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222", "body": ":+1: \n\nI submitted a pretty much equivalent pull request #6. Although, I may suggest being consistent and using markdown for all docs rather than just a single file.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/24979222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Du-Li": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133", "body": "Yes. This change together with another CLI mesos-upload were submitted to the ReviewBoard last Friday at the Mesos Hackathon.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/27323133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davelester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534", "body": "Just committed this, thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/31990534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955", "body": "Thanks for this Du, closing this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35659955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146", "body": "Thanks, CloudPhysics was added to the #PoweredByMesos page a while ago so we've closed this issue.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534", "body": "Thanks for this previous contribution; this was fixed in the documentation a few months back so we've closed this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35660534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution along with @ankurcha!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. Unfortunately, we made the change from textile -> markdown without this patch, but appreciate your contribution!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660", "body": "Thanks for contributing this; we previously didn't have a way to accept these types of pull requests but now do. If this PR is still relevant, please reopen it and we'll see that it is reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35661660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163", "body": "Thanks! Could you also update this pull request to remove the link to logging-and-debugging.md in home.md?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37085163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644", "body": "Thanks! I just committed this, but it looks like asfbot didn't close this when I committed your patch. Could you close this request?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48945644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417", "body": "Looks good :) (I'm just writing something to test the IRC relaying of this)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35667417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "CruncherBigData": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223", "body": "great thanks. Will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/35760223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vinodkone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863", "body": "also. please rebase off the master.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/37211863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19363756", "body": "@kamilchm can you file a ticket on issues.apache.org?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19363756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904", "body": "Does this comment still apply? AFAICT MESOS-1797 doesn't apply to ZK 3.4.8 since that issue has been resolved in ZK 3.4.7. Looks all the patch does is apply PPC specific fixes for which you already submitted a review https://reviews.apache.org/r/45376/.\n\nI would recommend to kill the zookeper.patch stuff in this review altogether since 3.4.8 doesn't need any patches per se. Then in https://reviews.apache.org/r/45376/ you can add back the patch stuff and mention that you need the patch to compile it on PPC.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58094904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "h4ck3rm1k3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917", "body": "Updated the commit to rebase it and remove the other patches.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/40812917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sirupsen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515", "body": "oops, opened the PR to the wrong repo :blush: This was for our internal fork :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/42228515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yifan-gu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827", "body": "Pushed via review board.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/44363827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kensipe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823", "body": "done deal.  Thx!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/46719823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adgaudio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126", "body": "Awesome!  thanks :)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/48981126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tnachen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289", "body": "hi @MartinWeindel, can you post on reviewboard instead? That's how all the mesos patches are reviewed.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53287289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808", "body": "@kmatzen Thanks for the PR, we usually take reviewboard patches.\nThe biggest problem for adding privileged flag is that it changes the default local loopback address of the container, and then launching docker container as an executor I believe will start failing.\nLet's try to get your patch ready so we can merge it.\nCan you add a unit test in docker_containerizer_tests that mimics the ROOT_DOCKER_Launch_Executor_Bridged test, but also add the priviledged flag and see if the unit test pass or fail?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58532808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "MartinWeindel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852", "body": "post on reviewboard will follow\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/53337852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "minid33": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671", "body": "@kmatzen Looks like this is the way your code enters an Apache project, I'd love for this change to go in, I need it a lot.\n\nhttp://mesos.apache.org/documentation/latest/mesos-developers-guide/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/issues/comments/58530671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xoho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/4057433", "body": "Need to update the link at http://mesos.apache.org/documentation/ to reflect the merge of \"Using ZooKeeper\" into \"High Availability\".  The link on the page http://mesos.apache.org/documentation/ still points to https://github.com/apache/mesos/blob/master/docs/Using-ZooKeeper.textile when it should point to https://github.com/apache/mesos/blob/master/docs/High-Availability.md.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/4057433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stelcheck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/5607832", "body": "I am having an issue in Chronos where it seems that when the Chronos framework tries to register, it registers with localhost (see https://github.com/airbnb/chronos/issues/193), and therefore unless the master is on the same machine as Chronos the registration never completes.\n\nCould that be causing the issue?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/5607832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/8892794", "body": "Is there a memory leak here? Why not call `freeaddrinfo` before returning?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/8892934", "body": "Filed in reviewboard for the above concern\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/8892934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/18398184", "body": "sweet! I didn't realize this made it into 1.0\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/18398184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "i-chaochen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/11352747", "body": "Hi, I tried to install the latest mesos(0.22.1) on AWS by the steps from mesos documentation \nhttp://mesos.apache.org/documentation/latest/ec2-scripts/\n\n// I can launch spark cluster on AWS in eu-west-1a with same key and key-id\nWhen I setted up my security key and key id ready to launch mesos cluster, it is constantly failed at \"Invalid availability zone\" error.\n\n// the reason I tried launch cluster on eu-west-1 because my key is generated on eu-west-1\nI also have tried eu-west-1, eu-west-1b and eu-west-1c, neither of ways can succeeded.\n\nI have printed out the opts below the Launch slaves(the launch script is stopped at here), is it normal?\nopts:\n{'ami': 'ami-4517dc2c', 'ft': 1, 'branch': 'master', 'zone': 'eu-west-1a', 'resume': False, 'ebs_vol_size': 0, 'master_instance_type': '', 'identity_file': 'awskey.pem', 'proxy_port': None, 'instance_type': 'm1.large', 'key_pair': 'awskey', 'swap': 1024, 'slaves': 1, 'download': 'none', 'spot_price': None, 'os': 'amazon64', 'wait': 60}\n\nDo you have idea how to fix it? Any helps would be appreciated!\nBest regards,\n\n./mesos-ec2 -k awskey -i awskey.pem --zone=eu-west-1a launch test01-mesos\nSetting up security groups...\nChecking for running cluster...\nLaunching instances...\nERROR:boto:400 Bad Request\nERROR:boto:<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\nTraceback (most recent call last):\nFile \"./mesos_ec2.py\", line 571, in \nmain()\nFile \"./mesos_ec2.py\", line 478, in main\nconn, opts, cluster_name)\nFile \"./mesos_ec2.py\", line 261, in launch_cluster\nblock_device_map = block_map)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/image.py\", line 329, in run\ntenancy=tenancy, dry_run=dry_run)\nFile \"/usr/local/lib/python2.7/dist-packages/boto/ec2/connection.py\", line 973, in run_instances\nverb='POST')\nFile \"/usr/local/lib/python2.7/dist-packages/boto/connection.py\", line 1208, in get_object\nraise self.ResponseError(response.status, response.reason, body)\nboto.exception.EC2ResponseError: EC2ResponseError: 400 Bad Request\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nInvalidParameterValueInvalid availability zone: [eu-west-1a]273c2517-bb07-4b79-a481-bbe7d898341a\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/11352979", "body": "I can launch the cluster by default \"us-east-1b\" , but I changed default as \"eu-west-1a\" in mesos_ec2.py, it still can't launch and the same problem as the above.\n\nDo you have any good idea to fix it?\n\nRegards\n\nPS:\nI also have noticed from AWS console that all security groups have been created in us-east-1b, even I set the zone as \"eu-west-1a\", and none of mesos security groups have been created in eu-west-1. \n\nSo, is it I used a wrong way to launch the script or there is a bug in mesos_ec2.py?\n\nAny feedback would be appreciated!\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/11352979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ozdanborne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/13504480", "body": "typo: `of` should be `or`\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/13504480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "westurner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940222", "body": "These image URIs now appear to 404ing:\n- https://mesos.apache.org/documentation/latest/architecture/\n  - `../images` seems to work\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940223", "body": "@jonorossi \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940273", "body": "Thanks!\n\nSo the paths for the .md files are\n\n```\n./images/img.PNG\n./doc.md\n```\n\nWhereas the site-deployed paths are:\n\n```\n/documentation/latest/images/img.PNG\n/documentation/latest/doc/\n```\n\nCurrently:\n- images display w/ GitHub\n- images 404 w/ the site\n\n... I'll copy this to JIRA when I get a minute.\nOn Dec 12, 2015 1:31 AM, \"Jonathon Rossi\" notifications@github.com wrote:\n\n> @westurner https://github.com/westurner IIRC the architecture images\n> were 404s beforehand even with an absolute URL because the files didn't\n> live there. There were few images that were actually working beforehand,\n> most images were broken. The previous comment to this one (260acd0\n> https://github.com/apache/mesos/commit/260acd03b45c9a203a53bc92171aedadbb970dad)\n> in the PR actually fixed the script so the deployment would post-process\n> the markdown as it did with links. There is still something going wrong\n> with the deployment (i.e. manual running of the script and getting\n> committed to subversion).\n> \n> I've mentioned in a couple of mailing list threads that we need to make\n> this process automated via the Jenkins server. @davelester\n> https://github.com/davelester was helping to organise this with the\n> Apache ops guys as he is the web site maintainer.\n> \n> Here is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/mesos/commit/3c264c0929d328b1f8bedac3ad2fddadf782ec71#commitcomment-14940262\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jonorossi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/14940262", "body": "@westurner IIRC the architecture images were 404s beforehand even with an absolute URL because the files didn't live there. There were few images that were actually working beforehand, most images were broken. The previous comment to this one (260acd03b45c9a203a53bc92171aedadbb970dad) in the PR actually fixed the script so the deployment would post-process the markdown as it did with links. There is still something going wrong with the deployment (i.e. manual running of the script and getting committed to subversion).\n\nI've mentioned in a couple of mailing list threads that we need to make this process automated via the Jenkins server. @davelester was helping to organise this with the Apache ops guys as he is the web site maintainer.\n\nHere is the JIRA issue: https://issues.apache.org/jira/browse/MESOS-3687\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/comments/14940317", "body": "I don't recall the paths exactly but the script in the Git repo should be pretty easy to follow.\n\nThis is the subversion repo where the site gets automatically deployed from when committed. The plan was for the \"source\" directory (and just about every else except publish) to be deleted because that is replaced by it all living the the Git repo now. I suspect the old Rakefile in the svn repo has been run rather than the updated Git one.\n\nhttp://svn.apache.org/viewvc/mesos/site/\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/14940317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "h0tbird": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19286203", "body": "Where is `W_EXITCODE` declared?\n\n```\n../../src/slave/containerizer/mesos/containerizer.cpp: In lambda function:\n../../src/slave/containerizer/mesos/containerizer.cpp:2282:35: error: 'W_EXITCODE' was not declared in this scope\n       return W_EXITCODE(0, SIGKILL);\n```\n\n**EDIT:** This is a non-posix W\\* function. C libraries like musl dont define them.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19286203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19287343", "body": "Done: [MESOS-6310](https://issues.apache.org/jira/browse/MESOS-6310)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19287343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kamilchm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/19360216", "body": "Why this was reverted? I found it to be an issue on NixOS https://github.com/NixOS/nixpkgs/pull/19064\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19360216/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/19366004", "body": "Sure, I'll do to it tomorrow with more details.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/19366004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/mesos/comments/20303015", "body": "I've encountered permission denied problems when I ran Marathon with different user than *root* set in NixOS service config. ", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20303015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cstrahan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/20300335", "body": "@kamilchm Which error, specifically, is caused by this?", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/20300335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thinker0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/23351430", "body": "+1", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/23351430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "janisz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/mesos/comments/24904496", "body": "Created an issue for this [MESOS-8073](https://issues.apache.org/jira/browse/MESOS-8073)", "reactions": {"url": "https://api.github.com/repos/apache/mesos/comments/24904496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205", "body": "Can we use same Dockerfile as we are using on Jenkins? Take a look at [support/docker_build.sh](https://github.com/apache/mesos/blob/42e8d6fb8b894c08b4b0c7cc40036fe630489bba/support/docker_build.sh)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/77374205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dominichamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566", "body": "typo: requires\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/9956566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "GregBowyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797", "body": "Sorry not sure what you mean, do you want the args to come through automake in general, rather than being fixed directly in the ext_modules.py ?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30103797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "timothysc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159", "body": "Why are the compilation args not explicitly flowing through?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30099159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482", "body": "@GregBowyer - yup. \n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/30134482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chenzhiwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254", "body": "Thank your for pointing this, I will remove this comment. And for the zookeeper patch file I think I already removed it.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/58131254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tillt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598", "body": "We commonly use capital initials for product/project and organization names. Maybe clarifying that we are not trying to \"revert\" our slave->agent naming scheme here :). Then also trying to adjust the style a bit for consistency of this document...\n\nHow about this?\n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. This provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69628598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803", "body": "The PR is not updated though, or am I missing something? ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69632803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dhilipkumars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222", "body": "I totally agree. :-) my bad i should have done that in the first place. Now its more clearer. \n\n```\nMrRedis is a Mesos framework for provisioning Redis in-memory cache instances. The scheduler provides auto Redis master election, auto recovery of Redis slaves and comes with the CLI and a UI.\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69630222/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046", "body": "Its updated now ;-) . Thanks in Advance\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69636046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "drexin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011", "body": "Could we please make this behavior optional? In a cluster with lots of tasks this would create a lot of unnecessary traffic.\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69773011/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ConnorDoyle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476", "body": "+1 to @drexin's comment; cutting down communication between the task host and the scheduler was the original motivation behind implementing health checks in the Mesos agent :)\n\nOther options: 1) let the framework persist task health status before acknowledging the update 2) have a deeper look at the status updates that are synthesized by the master during reconciliation, maybe trigger the executor to send the current health?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/69823476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gyliu513": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380", "body": "Can you please put your name right under Line 134 https://github.com/apache/mesos/blob/master/docs/contributors.yaml#L134 to keep alpha order for this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456", "body": "Sure, please go ahead ;-)\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caogj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432", "body": "OK, and it will be my pleasure to re-order other contributors, can i?\n", "reactions": {"url": "https://api.github.com/repos/apache/mesos/pulls/comments/73799432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}