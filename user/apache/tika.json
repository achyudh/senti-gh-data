{"_default": {"1": {"dameikle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5f3102fc80b8bb8ef919153e000a0f7258621cba", "message": "TIKA-2509: Updated to use configured ImageMagick path"}, {"url": "https://api.github.com/repos/apache/tika/commits/214b8923fdf0dae1e6866d5b75f4780306842c0d", "message": "TIKA-2509: Updated to ignore python warnings during rotation script"}, {"url": "https://api.github.com/repos/apache/tika/commits/0b9aa9b5efde795f6b863c987abff5be07530a41", "message": "TIKA-2509: Updated to use configured ImageMagick path"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Gagravarr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/7f6072ca26dccf1d791c426d4c32068535ddae8a", "message": "Merge branch 'BenRomberg-TIKA-1191'"}, {"url": "https://api.github.com/repos/apache/tika/commits/cadbc405519e5adbada1ddb6d2d4beff1f953072", "message": "AC3 magic detection tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/982003761bdadfc1dcf32b105800d59e5b622c83", "message": "Changelog update"}, {"url": "https://api.github.com/repos/apache/tika/commits/10cd2055b43c6983aa4e7d95da53680355f39bac", "message": "Mime magic for AC3 and EAC3 files"}, {"url": "https://api.github.com/repos/apache/tika/commits/1bddca4c382c40dc12a4f3ad674ecec08f9a4347", "message": "Test AC3 and EAC3 files, produced by ffmpeg from testWAV.wav"}, {"url": "https://api.github.com/repos/apache/tika/commits/700b38acb6443c30b4b05312a2010826fc618477", "message": "TIKA-1141 Few more well-known JS library headers"}, {"url": "https://api.github.com/repos/apache/tika/commits/97699598f000139b1222b785d634b3c8a8e216c7", "message": "TIKA-1141 - There is no unique magic for JavaScript files, no matter how much we might like there to be... However, to avoid mis-detection, for a few common JS libraries with HTML snippets near their start, include magic for these files as JS"}, {"url": "https://api.github.com/repos/apache/tika/commits/c2c73e9239e8957a390008bdf94df93e73def086", "message": "TIKA-2531 Unit test to ensure that, for Encyrpted RAR files which we do not yet support, a helpful EncryptedDocumentException is thrown"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242", "body": "Is Java libpst 0.8.1 available in maven central? Only I'm not able to see it - http://repo1.maven.org/maven2/com/pff/java-libpst/ only shows 0.7\n\n(We can only accept dependencies that are in Maven Central)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711", "body": "It is ASF policy that releases that are pushed to Maven Central (which ours are) must not depend on external repos, and may only depend on other resources in Central. There's quite a few blog posts explaining the rationale for this if you google\n\nIf possible, ask the libpst author to upload to central via the sonatype oss repo - https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide . First release can be a faff, but once setup it's generally only a few mins extra work (or at least that's what I've found!). If they aren't willing/able, it's possible for someone else to push it for them, see https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847", "body": "I've added some stuff on the maven central requirements to the contributing page http://tika.apache.org/contribute.html\n\nAs for building Tika with libpst 0.8.1, if it's in a non-standard repo, you can always add that to your tika parsers pom, then bump the dependency and build locally. If not, you'll need to build a pom for it, install it in a repo or your local m2 repo cache, then bump the tika parsers dependency\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223", "body": "As a general rule, if possible please separate out whitespace changes from code changes, to help make it easier to review the patches. (Github can help, since ?w=1 will exclude the whitespace, but it's an extra step). Also I think we prefer explicit includes to wildcard ones, but might be best to double check that on the dev list\n\nCode wise, looks fine at a first glance, will try to do a more detailed review later before committing (assuming no-one else beats me to it!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "BenRomberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/6a398bd3f6245543091fd7c0e9e4facb34a26882", "message": "fix for TIKA-1191 contributed by BenRomberg"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tballison": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5adc0a629c482311216780c9649e0fd624e4a2e9", "message": "fix date format in Changes.txt...bad for release process"}, {"url": "https://api.github.com/repos/apache/tika/commits/33f3855bf36a0d119f77e0dbb3ccf1b8af5d082d", "message": "2.0.0, here we come!"}, {"url": "https://api.github.com/repos/apache/tika/commits/533354d1a0e7e0b3b4ced7b7958f6e34041bf502", "message": "TIKA-2524 -- add an XPS parser"}, {"url": "https://api.github.com/repos/apache/tika/commits/6087955514973b6173bc3c1df5f057a6b52b0c98", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/b054df2be2f43c4944ff66f7d9fd2ceb1655d9c0", "message": "[maven-release-plugin] prepare release 1.17-rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/6f33bae5c9cc35bab7eccc7017850803e6dc252b", "message": "roll back to start rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/af3d017f5476a565862f71ea1cc7fff1bc2cca09", "message": "update changes for next release cycle"}, {"url": "https://api.github.com/repos/apache/tika/commits/c069ad5b83ee9690257aea8fbd6aa124583f4296", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/94777e32b1c536a6f8e3e2a97813dfa46cd75ef9", "message": "[maven-release-plugin] prepare release 1.17-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/b071ab15e6f85ac200c01e7159634f054cdc932e", "message": "add missing license headers.  THANK YOU RAT!"}, {"url": "https://api.github.com/repos/apache/tika/commits/f983eb41766331395655a372584255023f3fd049", "message": "Update CHANGES.txt for 1.17 release."}, {"url": "https://api.github.com/repos/apache/tika/commits/f57e0e78c3882c5003cf15b18375a334944d24dd", "message": "TIKA-2521"}, {"url": "https://api.github.com/repos/apache/tika/commits/90d624588483f379180c812b7235bb2222be9c2e", "message": "TIKA-2483 -- add in all children of zip and tar to prevent overwriting of\nchild file types by the PackageParser.  Ensure that our semi-manual list\nis updated when there are changes to TikaConfig."}, {"url": "https://api.github.com/repos/apache/tika/commits/95baca2b58538ec1d75fc5b6c80fd06b7eebb7dc", "message": "TIKA-2519 clean up, fix bug in MultiThreadedTikaTest files that failed to prevent\nfiles that caused exceptions; revert new ChmBlockInfo() to private"}, {"url": "https://api.github.com/repos/apache/tika/commits/2169cae44277a18430e4de462b4ae5b1dfb8956b", "message": "Fix thread-safety in ChmExtractor (TIKA-2519)."}, {"url": "https://api.github.com/repos/apache/tika/commits/6b2b626f61cf95c7a92fe0687e50855a2cc0d42b", "message": "TIKA-2503 upgrade to httpcomponents 4.5.4"}, {"url": "https://api.github.com/repos/apache/tika/commits/e83844cd346ab387b68c97fd38fd18dda80e6c99", "message": "TIKA-2516 upgrade to cxf 3.0.16"}, {"url": "https://api.github.com/repos/apache/tika/commits/ac9f24e261e18afe0b43b577aafa59313552d386", "message": "Merge remote-tracking branch 'origin/master'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717313", "body": "Let us know what else you find!  Thank you for bringing this to our attention.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21109698", "body": "Thank you, and sorry, that's the start of TIKA-1879.  Will fix those when I commit that.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109698/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "genekhart": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/217", "title": "fix for TIKA-2545 contributed by genekhart", "body": "For original inputstreams smaller than buffersize, should create bytearrayinputstream with bounds determined by size of original input, not pass in entire buffer.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcaracuel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/216", "title": "Implementation of TIKA-2542 by mcaracuel", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/214", "title": "TIKA-2479 - Handle empty cells in XLSX", "body": "The POI parser doesn't emit `cell` events for empty cells (by design),\r\nbut they do provide some sample code for how to handle sparse events.\r\nThis commit updates `XSSFExcelExtractorDecorator` to emit empty `tr`\r\nand `td` elements for the missing cells.\r\n\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=57775\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=61937", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "med-ali-bannour": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/212", "title": " NetCDF-Java Library", "body": " NetCDF-Java Library with the version 4.5.5 is old, i think it should be updated to new version because this library made a problem for me when actually try to migrate Guava library.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bitsgalore": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/209", "title": "Tika 2468 Mimetype patterns and magic for Lotus 1-2-3 and Quattro Pro spreadsheet formats", "body": "This patch adds version-specific mimetype patterns for Lotus 1-2-3 and Quattro Pro spreadsheets. \r\n\r\nThe magic patterns were adapted from the UK National Archive's [PRONOM](https://www.nationalarchives.gov.uk/PRONOM/Default.aspx) registry. Some additional info below: \r\n\r\n## License\r\n\r\nPRONOM is published under the Open Government license:\r\n\r\n<http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/>\r\n\r\nI added an attribution to this source in NOTICE, as per:\r\n\r\n<https://www.apache.org/legal/resolved.html>\r\n\r\n## Sample files\r\n\r\nI also included sample files for all of these formats to test-documents:\r\n\r\n* I created the .wks, .wb1 and .wb2 samples from a copy of Quattro Pro 6.0 running under Windows 3.11 on a virtual machine. \r\n\r\n* The .wk4 and .123 sample files (note 'lotusftp' name suffix) were taken from the Internet Archive's mirror of the old Lotus FTP site:  \r\n\r\n<https://archive.org/details/2012_11_24_ftp_lotus_com>\r\n\r\n* The .wk1, .wk3, .wq1 and .wq2 samples are old files from my personal collection.\r\n\r\nBelow the detection results for all Lotus / Quattro Pro files in *test-documents* (including the previously existing ones):\r\n\r\n|Filename|mimeype|\r\n|:--|:--|\r\n|testLotus123.wks|application/vnd.lotus-1-2-3; version=1|\r\n|testLotus123.wk1|application/vnd.lotus-1-2-3; version=2|\r\n|testLotus123.wk3|application/vnd.lotus-1-2-3; version=3|\r\n|testLotus123-lotusftp.wk4|application/vnd.lotus-1-2-3; version=4|\r\n|testLotus123-lotusftp.123|application/vnd.lotus-1-2-3; version=97+9.x|\r\n|testQuattro.wq1|application/x-quattro-pro; version=1-4|\r\n|testQuattro.wq2|application/x-quattro-pro; version=5|\r\n|testQuattro.wb1|application/x-quattro-pro; version=1+5|\r\n|testQuattro.wb2|application/x-quattro-pro; version=6|\r\n|testQUATTRO.wb3|application/x-quattro-pro; version=7-8|\r\n|testQUATTRO.qpw|application/x-quattro-pro; version=9|\r\n\r\n## Possible issues\r\n\r\nCouple of small things to watch here. First of all I wasn't quite sure how to use the \"version\" field for the following format/version combinations:\r\n\r\n* `\"application/vnd.lotus-1-2-3;version=97+9.x\"`\r\n* `\"application/x-quattro-pro;version=1-4\"`\r\n* `\"application/x-quattro-pro;version=1+5\"`\r\n\r\nThis all looks a bit ugly to me; maybe there's a better way to do this. Also, the versioning for the Quattro Pro formats is weird because Quattro Pro for DOS 4 was follwed up by version 1 for Windows, which was in turn followed by version 5! Perhaps the \"1+5\" entry should be changed to simply \"5\" (which is not strictly correct, but possibly less confusing).\r\n\r\nOther thing was that my attempts to include glob patterns for Lotus 1 (.wks) resulted in a conflict with `\"application/vnd.ms-works\"`, so I commented them out nof the Lotus definitions for now. I'm don't quite follow the underlying rules/logic, maybe there's some way to include them after all.\r\n\r\n## Addition 19 September:  added WordPerfect 4.2 mimetype definition\r\n\r\nI also include a mimetype definition for WordPerfect 4.2, which is derived from the trID pattern by Philip Storry. From the TrID website I understand its is released under a AGPL license:\r\n \r\n<http://mark0.net/soft-tridscan-e.html>\r\n\r\nNot 100% clear to me if this is compatible with the Apache license. If not, perhaps the WP definition should be left out.\r\n\r\nI provided a sample file as well. \r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jerni-zu393": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/185", "title": "TikaFix ---Contribution by jerni-zu393", "body": "I have added the magic bits for three files (*.keystore/.jks , *.apk , *.aac). It can be detect the file types even the files should not have \".\"extensions .\r\n\r\nI have attached here below the sample files for testing purpose .\r\n\r\n[keystore.tar.gz](https://github.com/apache/tika/files/1077097/keystore.tar.gz)\r\n\r\n[apktest.zip](https://github.com/apache/tika/files/1077108/apktest.zip)\r\n[aactest.zip](https://github.com/apache/tika/files/1077115/aactest.zip)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thammegowda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/184", "title": "TIKA-2393 Fix Sentiment parser model URLs", "body": "Sentiment parser test models URLs are pointed to a specific commit in git instead of HEAD of the master.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21858496", "body": "Thanks. Noted: In the future, I will keep an eye.\r\nHis IDE probably cut it because of the width > 80 chars!  For now please update your PR \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21858496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21901585", "body": "@smadha\r\n> Can you please manual merge instead of me updating PR? \r\n\r\nDo you mean undo/edit these changes directly on master branch? I am not sure if that's a good idea!\r\n\r\n>I'll have to merge this PR in my branch and it'll make commit history look weird, what say?\r\n\r\nSince these changes are now in master, rebasing your PR to the latest commit on master is recommended! \r\n\r\n>  it'll make commit history look weird,\r\n\r\nNope, it doesn't... Merging with upstream master doesn't mess up your PR log\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21901585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640", "body": "@smadha Awesome PR. \nJust one little issue. Please specify charset to `IOUtils#toString();`\n\nOtherwise, the `mvn install` fails (forbidden api)\n\n![fix](https://cloud.githubusercontent.com/assets/1865964/11890743/84067a3a-a50c-11e5-8b63-4dfe7cdc7cac.png)\n\n## \n\nEDIT:\nAs the REST API content will be UTF8, \n`String respJson = IOUtils.toString(resp.getEntity().getContent(), StandardCharsets.UTF_8);` should pass the check\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "user667": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/171", "title": "TIKA-2340 cleanup of direct dependencies / fix locale-dependent test case", "body": "This is an effort of dependency cleanup (with the help of mvn dependency:analyze and others). Not sure if this is acceptable without TIKA ticket number (or as such), I'll be glad to adjust this PR.\r\n\r\nWe've been updating to a recent (1.6-1.14) tika version lately and found a delta of +40libs/+20MB and went on to investigate. Turns out tika-parsers relies on a lot of transitive dependencies.\r\n\r\nThese commits try to specify (some) direct dependencies for libraries that are used in imports of parser classes. Additionally one of the test cases failed on my local setup with a non-default-English locale.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wildloop": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/167", "title": "New tabbed TikaGUI with Html preview and lucene query.", "body": "Rendering XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\nLucene queries UI, auto-indexing (in RAM) tested documents.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/152", "title": "Mapping PDF document TextPosition to XHTML span attributes, Lucene queries", "body": "Mapping PDF document TextPosition to XHTML span attributes (e.g. coordinates to style). \r\nRendering  XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\n\r\nScreen with parsed sample invoice found here: https://slicedinvoices.com/pdf/wordpress-pdf-invoice-plugin-sample.pdf\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23103024/4c3129ac-f6b4-11e6-9b43-3875d36eb48a.png)\r\n\r\nLucene queries UI, auto-indexing (in RAM) tested documents:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23108126/c3a12970-f708-11e6-8683-b9cbfb21c5fa.png)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wko27": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/166", "title": "fix for TIKA-2044 contributed by wko27", "body": null, "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukaszozimek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/160", "title": "TIKA-2312 proposition of exposing ID3TagsAndAudio", "body": "[Issue Link]\r\nhttps://issues.apache.org/jira/browse/TIKA-2312", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "essiembre": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/143", "title": "New XFDL parser for TIKA-2222 contributed by pascal.essiembre", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AravindRam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/131", "title": "fix for TIKA-2053 contributed by AravindRam", "body": "Integrated Tag Ratio into Text Parser\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rgauss": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/92", "title": "TIKA-774: ExifTool Parser", "body": "Contribution of tika-exiftool for review\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zetisam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/86", "title": "fix for TIKA-1841 contributed by zetisam", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946", "body": "Comitted as\nhttp://svn.apache.org/viewvc?view=revision&revision=1570860\n\nThanks, closing this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487", "body": "Issue closed, so closing this PR too.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625", "body": "Fixed with commit\nhttp://svn.apache.org/viewvc?view=revision&revision=1596612\n\nClosing this PR as commit above implements this change\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrismattmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781", "body": "forgot to add license header in test file. Have added it in.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519", "body": "Looks like the latest version of Tika 1.6 trunk has a similar capability - can you check it out? If it looks good to you, maybe we can close it out. thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343", "body": "Hi @vilmospapp there are currently conflicts here. Can you check into this?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090", "body": "I was able to solve the conflicts and merge this. Thanks @vilmospapp !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822", "body": "@vilmospapp FYI ^^ above? Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643", "body": "Thanks @grossws so what you are saying is that since I already merged #15, we're good, and #17 can be closed? Can you and/or @vilmospapp close #17?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134", "body": "Hi @hlavki thanks. Can you please explain what this does? Does it add a test that exposes the bug? \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001", "body": "Thanks @hlavki is the solution something we can put into a patch? If so I'd be happy to help get it in to the sources.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534", "body": "I would prefer to keep these as explicit imports.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548", "body": "not sure about these formatting changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572", "body": "please remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580", "body": "not sure why this was reformatted.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592", "body": "reformatting unneeded. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985", "body": "can you remove the commented out lines @jeremybmerrill \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995", "body": "also remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032", "body": "remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088", "body": "remove all these commented lines\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081", "body": "Should be set to some default, e.g., /path/to/grobid-home\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083", "body": "also needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461", "body": "please remove star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628", "body": "no star imports :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814", "body": "no commented code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834", "body": "ALv2 header please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974", "body": "no commented out code please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004", "body": "no commented out code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494", "body": "@thammegowda can you remove this line? commented code.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777", "body": "needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jrhe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435", "body": "Why do you only accept deps that in in Maven Central? No its not. I guess I need to pester the author of libpst to publish it?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880", "body": "Cheers for the help. The java packaging situation has changed a lot since used it!\n\nIs there anyway I can build tika with java-libpst 0.8.1 in the meanwhile?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mkr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823", "body": "Whitespace / indentation changes: They are in a separate commit and happen as a result of moving all extraction code into the try / finally block in 1b053d1. Would you want them in a separate pull request? Let me know what the wildcard import policy is and I adjust my IDE settings.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grossws": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519", "body": "Does it lead to permgen leak (via threadlocal holding classloader tree) in servlet containers/app servers?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229", "body": "This PR make `ThreadLocal<SimpleDateFormat>` useless since you create SDF twice in `handleDateTags` and destroy it then.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302", "body": "@vilmospapp, @chrismattmann, it seems that Tomcat (where I saw such problem) is quite paranoidal about thread locals. Its check is usually done before GC throw out weak references (`ThreadLocalMap.Entry` is a `WeakReference`), so Tomcat logs something like:\n\n```\n06-Oct-2014 19:37:41.009 SEVERE [RMI TCP Connection(14)-127.0.0.1] org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks The web application [] created a ThreadLocal with \n  key of type [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1] (value [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1@3a97b29a]) \n  and a value of type [java.text.SimpleDateFormat] (value [java.text.SimpleDateFormat@6b2ed43a]) \n  but failed to remove it when the web application was stopped. \n  Threads are going to be renewed over time to try and avoid a probable memory leak.\n```\n\nIf I force several GCs after application undeploy this thread local is usually collected. I think you can remove PR #17 and let this PR merge into tika.\n\nTo test that it's collected I created simple servlet:\n\n``` java\n@WebServlet(name = \"t\", urlPatterns = {\"/t\"})\npublic class AppServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n    Metadata metadata = new Metadata();\n    try {\n      new ImageMetadataExtractor(metadata).parseJpeg(new File(\"/home/gross/repo/tl-test/test.jpeg\"));\n    } catch (SAXException | TikaException e) {\n      throw new ServletException(e);\n    }\n    resp.getWriter()\n        .append(metadata.get(TIFF.ORIGINAL_DATE));\n  }\n}\n```\n\nWhich is deployed to tomcat 8 with VM running with `-XX:+PrintGCDetails -XX:+TraceClassUnloading` to see class unloading and GC executions. To force GC I used `jcmd <pid> GC.run` or _Perform GC_ in `jvisualvm`.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193", "body": "See PR #15\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438", "body": "Also, about different webapp (or things that use non-trivial classloader configuration) memory leaks: http://wiki.apache.org/tomcat/MemoryLeakProtection\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434", "body": "So, you have SDF that is created on first `get()` in `handleDateTags(...)` and removed in finally block. Then there's no reason to store it in `ThreadLocal`. It's more inefficient than local variable.\n\nI think that private static SimpleDateFormat plus some syncronized format method for it will be more efficient and obvious method to fix issue.\n\n``` java\nstatic class ExifHandler implements DirectoryHandler {\n  private static final SimpleDateFormat DATE_UNSPECIFIED_TZ = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n\n  private synchronized String formatDateWithoutTimeZone(Date datetime) {\n    return DATE_UNSPECIFIED_TZ.format(datetime);\n  }\n\n  // ...\n  public void handleDateTags(Directory directory, Metadata metadata) {\n    // ...\n    String datetimeNoTimeZone = formatDateWithoutTimeZone(...);\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "vilmospapp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110", "body": "@chrismattmann , @grossws \nBased on the documentation (http://docs.oracle.com/javase/7/docs/api/java/lang/ThreadLocal.html):\n\n```\nEach thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive\n and the ThreadLocal instance is accessible; after a thread goes away, all of its copies of thread-local \ninstances are subject to garbage collection (unless other references to these copies exist)\n```\n\nI think it should be garbage collected.  Anyway it could be answered in details if we could see how the heap behaves  in a system with high load. (Perhaps with some (4-5) thread dumps within 1-3 seconds after each other to see whether GC removes the variables or not.) I have no such test environment, but if someone has, and creates the heap and thread dump, I can verify it.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011", "body": "Hi @chrismattmann and @grossws \n\nI read about this possibility a bit, and found this blog: http://java.jiderhamn.se/2012/01/29/classloader-leaks-iv-threadlocal-dangers-and-why-threadglobal-may-have-been-a-more-appropriate-name/\n\nBased on this, I think,  we should enclose the get() method calls with a try-finally block, and in the finally block call the remove() on the thread local to avoid keeping the references.\n\nIf both of you agree, I would create the modification and send another pull request.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970", "body": "Hi @grossws \n\nThat's true, but my other option would be to add the remove() call in a finalizer, but there's no guarantee, that it will be invoked. Do you have better idea?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330", "body": "Hi @grossws \n\nI modified it, so the destroy will run only once. Anyway the main point in using this is to avoid concurrency issues related to SDF, not only caching the SDF for later usage.\n\nAnyway thanks for the detailed information commented on https://github.com/apache/tika/pull/15\n\nBased on that, I think it's better to have this finally block based destroy to avoid the possible memory leak.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hlavki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577", "body": "Hi Chris, yes, it adds test that exposes the bug. But today I've found solution and it needs commons-logging.jar on classpath of forked process.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002", "body": "this is patch proposal https://github.com/hlavki/tika/commit/22c2ad8655c1e7f352974da4f1eb44f9317769e7\nBUT!\n1. I copied commons-logging-1.2.jar to tika-core resources\n2. commons-logging classes are bundled into bootstrap jar of ForkParser\n3. LogFactory is excluded from classloading in ClassLoaderProxy.java\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skingreek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/6794517", "body": "ignoring this error leads to degraded performance if XHTMLContentHandler is wrapped into WriteOutContentHandler\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/6794517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "vulpes8": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717141", "body": "Thanks!", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nguyenhoan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20942591", "body": "Hi @tballison \r\nWe are a team of researchers from Iowa State, The University of Texs at Dallas and Oregon State University, USA. We are investigating common/repeated code changes.\r\nWe have four short questions regarding the change in the image below which is part of this commit.\r\n![image](https://cloud.githubusercontent.com/assets/2257582/23089664/9f9ae53c-f552-11e6-82e1-7e06c6a8bcef.png)\r\n\r\nQuestions:\r\n\r\nQ1- Is the change at these lines similar to any other changes (from other locations of the same commit or from other commits)? (yes, no, not sure)\r\n\r\nQ2- Can you briefly describe the change and why you made it? (for example, checking parameter before calling the method to avoid a Null Pointer Exception)\r\n\r\nQ3- Can you give it a name? (for example, Null Check)\r\n\r\nQ4- Would you like to have this change automated by a tool? (Yes, No, Already automated)\r\n\r\nThe data collected from the answers will never be associated with you or your project. Our questions are about recurring code changes from the developer community, not about personal information. All the data is merged across recurring changes from GitHub repositories. We will publish aggregated data from the trends of the whole community. \r\nWe have a long tradition of developing refactoring tools and contributing them freely to the Eclipse, Netbeans, Android Studio under their respective FLOSS licenses. For example, look at some of our recently released refactoring tools: http://refactoring.info/tools/ \r\n\r\nThank you,\r\nHoan Nguyen https://sites.google.com/site/nguyenanhhoan/\r\nMichael Hilton http://web.engr.oregonstate.edu/~hiltonm/\r\nTien Nguyen http://www.utdallas.edu/~tien.n.nguyen/\r\nDanny Dig http://eecs.oregonstate.edu/people/dig-danny\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20942591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mattcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21109652", "body": "@tballison the values are all the same. Is this intentional?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/23984454", "body": "@tballison I think this is never used.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/23984454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "smadha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21847995", "body": "In future please avoid space/newline changes. In this case it caused a conflict with my PR #168 :)", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21847995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21888269", "body": "Can you please manual merge instead of me updating PR? I'll have to merge this PR in my branch and it'll make commit history look weird, what say?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21888269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/24268592", "body": "@ThejanW Seems like this got missed in InceptionVideoRestDockerfile. I think we need a better way to abstract out the common installation. I", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ThejanW": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24268737", "body": "@smadha I was thinking about using a baseDockerfile. What do you think?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jkff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24706413", "body": "Unfortunately this is not correct and not consistent with the `equals()` method. Are there any tests for `Metadata`? I believe with this implementation e.g. creating a HashSet with a single Metadata in it, and checking for .contains(equivalent but not the same Metadata object), would _always_ return a wrong result of `false`.\r\n\r\n`metadata` is a `Map<String, String[]>` and its hashCode() will call hashCode() on the `String[]` objects, which is *not* computed from the contents of the array, only its identity - Java arrays don't implement hashCode() or equals(). This is, likely, also the reason why `equals()` is not implemented as `return metadata.equals(other.metadata())`.\r\n\r\nThe proper implementation is to loop over the metadata and compute a combined hash code of the keys and values, using some method of hashing a key/array(value) pair and some method for combining the hashes for these pairs. You need to also be mindful of:\r\n\r\n- Whether the order of iteration over keys matters. I suppose not. Then you need to make sure your hash code does not depend on this order.\r\n- Whether the order of iteration over multiple values of a single key matters. I suppose the answer is also no, and then the same caveat applies.\r\n\r\nThe easiest way to hash an unordered collection of something is to hash each element and add up the hashes.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24706413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/comments/24888980", "body": "Why not use a regular foreach loop?\r\n\r\n    for (Entry<String, String[]> entry : metadata.entrySet()) {\r\n      h += getMetadataEntryHashCode(entry);\r\n    }", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24888980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uschindler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261", "body": "Use \"\".equals(header.getFileName()) syntax, because this will cause NullPointerException if the wide file name is not available. Alternatively add a null check.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943", "body": "Hi,\nthis comment was more about code style: If you use equals to compare 2 things, it is always better to have the part that is static and/or final and for sure not null (in this case: the string literal) first. Then you don't eben have to think about if it could be null or not. If you check your code with PMD it will suggest this to you.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kongxianghe1234": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077", "body": " you said is better, but member variables should not be null , Come to this issue , What i mean is that var header has two methods 1. getFileNameString()    2. getFileNameW()  . Your unit test case just cover iso-8859-1 encoding \ntip:https://github.com/apache/tika/blob/trunk/tika-parsers/src/test/resources/test-documents/test-documents.rar\ni have tested for chinese and other language , it didn't work , please \ntry to debug for this and you will find you have to check for the charset of the fieName.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "tokee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954", "body": "My IDE tricked me there. I'll put them back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035", "body": "Remove what? Formatting changes? I have tried that (sending new pull request in a few minutes).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063", "body": "True, although my reformatting followed the indentation level. I have changed it back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "2": {"dameikle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5f3102fc80b8bb8ef919153e000a0f7258621cba", "message": "TIKA-2509: Updated to use configured ImageMagick path"}, {"url": "https://api.github.com/repos/apache/tika/commits/214b8923fdf0dae1e6866d5b75f4780306842c0d", "message": "TIKA-2509: Updated to ignore python warnings during rotation script"}, {"url": "https://api.github.com/repos/apache/tika/commits/0b9aa9b5efde795f6b863c987abff5be07530a41", "message": "TIKA-2509: Updated to use configured ImageMagick path"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Gagravarr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/7f6072ca26dccf1d791c426d4c32068535ddae8a", "message": "Merge branch 'BenRomberg-TIKA-1191'"}, {"url": "https://api.github.com/repos/apache/tika/commits/cadbc405519e5adbada1ddb6d2d4beff1f953072", "message": "AC3 magic detection tests"}, {"url": "https://api.github.com/repos/apache/tika/commits/982003761bdadfc1dcf32b105800d59e5b622c83", "message": "Changelog update"}, {"url": "https://api.github.com/repos/apache/tika/commits/10cd2055b43c6983aa4e7d95da53680355f39bac", "message": "Mime magic for AC3 and EAC3 files"}, {"url": "https://api.github.com/repos/apache/tika/commits/1bddca4c382c40dc12a4f3ad674ecec08f9a4347", "message": "Test AC3 and EAC3 files, produced by ffmpeg from testWAV.wav"}, {"url": "https://api.github.com/repos/apache/tika/commits/700b38acb6443c30b4b05312a2010826fc618477", "message": "TIKA-1141 Few more well-known JS library headers"}, {"url": "https://api.github.com/repos/apache/tika/commits/97699598f000139b1222b785d634b3c8a8e216c7", "message": "TIKA-1141 - There is no unique magic for JavaScript files, no matter how much we might like there to be... However, to avoid mis-detection, for a few common JS libraries with HTML snippets near their start, include magic for these files as JS"}, {"url": "https://api.github.com/repos/apache/tika/commits/c2c73e9239e8957a390008bdf94df93e73def086", "message": "TIKA-2531 Unit test to ensure that, for Encyrpted RAR files which we do not yet support, a helpful EncryptedDocumentException is thrown"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242", "body": "Is Java libpst 0.8.1 available in maven central? Only I'm not able to see it - http://repo1.maven.org/maven2/com/pff/java-libpst/ only shows 0.7\n\n(We can only accept dependencies that are in Maven Central)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711", "body": "It is ASF policy that releases that are pushed to Maven Central (which ours are) must not depend on external repos, and may only depend on other resources in Central. There's quite a few blog posts explaining the rationale for this if you google\n\nIf possible, ask the libpst author to upload to central via the sonatype oss repo - https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide . First release can be a faff, but once setup it's generally only a few mins extra work (or at least that's what I've found!). If they aren't willing/able, it's possible for someone else to push it for them, see https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46691711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847", "body": "I've added some stuff on the maven central requirements to the contributing page http://tika.apache.org/contribute.html\n\nAs for building Tika with libpst 0.8.1, if it's in a non-standard repo, you can always add that to your tika parsers pom, then bump the dependency and build locally. If not, you'll need to build a pom for it, install it in a repo or your local m2 repo cache, then bump the tika parsers dependency\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46697847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223", "body": "As a general rule, if possible please separate out whitespace changes from code changes, to help make it easier to review the patches. (Github can help, since ?w=1 will exclude the whitespace, but it's an extra step). Also I think we prefer explicit includes to wildcard ones, but might be best to double check that on the dev list\n\nCode wise, looks fine at a first glance, will try to do a more detailed review later before committing (assuming no-one else beats me to it!)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48599223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "BenRomberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/6a398bd3f6245543091fd7c0e9e4facb34a26882", "message": "fix for TIKA-1191 contributed by BenRomberg"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tballison": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/tika/commits/5adc0a629c482311216780c9649e0fd624e4a2e9", "message": "fix date format in Changes.txt...bad for release process"}, {"url": "https://api.github.com/repos/apache/tika/commits/33f3855bf36a0d119f77e0dbb3ccf1b8af5d082d", "message": "2.0.0, here we come!"}, {"url": "https://api.github.com/repos/apache/tika/commits/533354d1a0e7e0b3b4ced7b7958f6e34041bf502", "message": "TIKA-2524 -- add an XPS parser"}, {"url": "https://api.github.com/repos/apache/tika/commits/6087955514973b6173bc3c1df5f057a6b52b0c98", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/b054df2be2f43c4944ff66f7d9fd2ceb1655d9c0", "message": "[maven-release-plugin] prepare release 1.17-rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/6f33bae5c9cc35bab7eccc7017850803e6dc252b", "message": "roll back to start rc2"}, {"url": "https://api.github.com/repos/apache/tika/commits/af3d017f5476a565862f71ea1cc7fff1bc2cca09", "message": "update changes for next release cycle"}, {"url": "https://api.github.com/repos/apache/tika/commits/c069ad5b83ee9690257aea8fbd6aa124583f4296", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/tika/commits/94777e32b1c536a6f8e3e2a97813dfa46cd75ef9", "message": "[maven-release-plugin] prepare release 1.17-rc1"}, {"url": "https://api.github.com/repos/apache/tika/commits/b071ab15e6f85ac200c01e7159634f054cdc932e", "message": "add missing license headers.  THANK YOU RAT!"}, {"url": "https://api.github.com/repos/apache/tika/commits/f983eb41766331395655a372584255023f3fd049", "message": "Update CHANGES.txt for 1.17 release."}, {"url": "https://api.github.com/repos/apache/tika/commits/f57e0e78c3882c5003cf15b18375a334944d24dd", "message": "TIKA-2521"}, {"url": "https://api.github.com/repos/apache/tika/commits/90d624588483f379180c812b7235bb2222be9c2e", "message": "TIKA-2483 -- add in all children of zip and tar to prevent overwriting of\nchild file types by the PackageParser.  Ensure that our semi-manual list\nis updated when there are changes to TikaConfig."}, {"url": "https://api.github.com/repos/apache/tika/commits/95baca2b58538ec1d75fc5b6c80fd06b7eebb7dc", "message": "TIKA-2519 clean up, fix bug in MultiThreadedTikaTest files that failed to prevent\nfiles that caused exceptions; revert new ChmBlockInfo() to private"}, {"url": "https://api.github.com/repos/apache/tika/commits/2169cae44277a18430e4de462b4ae5b1dfb8956b", "message": "Fix thread-safety in ChmExtractor (TIKA-2519)."}, {"url": "https://api.github.com/repos/apache/tika/commits/6b2b626f61cf95c7a92fe0687e50855a2cc0d42b", "message": "TIKA-2503 upgrade to httpcomponents 4.5.4"}, {"url": "https://api.github.com/repos/apache/tika/commits/e83844cd346ab387b68c97fd38fd18dda80e6c99", "message": "TIKA-2516 upgrade to cxf 3.0.16"}, {"url": "https://api.github.com/repos/apache/tika/commits/ac9f24e261e18afe0b43b577aafa59313552d386", "message": "Merge remote-tracking branch 'origin/master'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717313", "body": "Let us know what else you find!  Thank you for bringing this to our attention.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21109698", "body": "Thank you, and sorry, that's the start of TIKA-1879.  Will fix those when I commit that.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109698/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "genekhart": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/217", "title": "fix for TIKA-2545 contributed by genekhart", "body": "For original inputstreams smaller than buffersize, should create bytearrayinputstream with bounds determined by size of original input, not pass in entire buffer.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcaracuel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/216", "title": "Implementation of TIKA-2542 by mcaracuel", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/214", "title": "TIKA-2479 - Handle empty cells in XLSX", "body": "The POI parser doesn't emit `cell` events for empty cells (by design),\r\nbut they do provide some sample code for how to handle sparse events.\r\nThis commit updates `XSSFExcelExtractorDecorator` to emit empty `tr`\r\nand `td` elements for the missing cells.\r\n\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=57775\r\nSee also: https://bz.apache.org/bugzilla/show_bug.cgi?id=61937", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "med-ali-bannour": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/212", "title": " NetCDF-Java Library", "body": " NetCDF-Java Library with the version 4.5.5 is old, i think it should be updated to new version because this library made a problem for me when actually try to migrate Guava library.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bitsgalore": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/209", "title": "Tika 2468 Mimetype patterns and magic for Lotus 1-2-3 and Quattro Pro spreadsheet formats", "body": "This patch adds version-specific mimetype patterns for Lotus 1-2-3 and Quattro Pro spreadsheets. \r\n\r\nThe magic patterns were adapted from the UK National Archive's [PRONOM](https://www.nationalarchives.gov.uk/PRONOM/Default.aspx) registry. Some additional info below: \r\n\r\n## License\r\n\r\nPRONOM is published under the Open Government license:\r\n\r\n<http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/>\r\n\r\nI added an attribution to this source in NOTICE, as per:\r\n\r\n<https://www.apache.org/legal/resolved.html>\r\n\r\n## Sample files\r\n\r\nI also included sample files for all of these formats to test-documents:\r\n\r\n* I created the .wks, .wb1 and .wb2 samples from a copy of Quattro Pro 6.0 running under Windows 3.11 on a virtual machine. \r\n\r\n* The .wk4 and .123 sample files (note 'lotusftp' name suffix) were taken from the Internet Archive's mirror of the old Lotus FTP site:  \r\n\r\n<https://archive.org/details/2012_11_24_ftp_lotus_com>\r\n\r\n* The .wk1, .wk3, .wq1 and .wq2 samples are old files from my personal collection.\r\n\r\nBelow the detection results for all Lotus / Quattro Pro files in *test-documents* (including the previously existing ones):\r\n\r\n|Filename|mimeype|\r\n|:--|:--|\r\n|testLotus123.wks|application/vnd.lotus-1-2-3; version=1|\r\n|testLotus123.wk1|application/vnd.lotus-1-2-3; version=2|\r\n|testLotus123.wk3|application/vnd.lotus-1-2-3; version=3|\r\n|testLotus123-lotusftp.wk4|application/vnd.lotus-1-2-3; version=4|\r\n|testLotus123-lotusftp.123|application/vnd.lotus-1-2-3; version=97+9.x|\r\n|testQuattro.wq1|application/x-quattro-pro; version=1-4|\r\n|testQuattro.wq2|application/x-quattro-pro; version=5|\r\n|testQuattro.wb1|application/x-quattro-pro; version=1+5|\r\n|testQuattro.wb2|application/x-quattro-pro; version=6|\r\n|testQUATTRO.wb3|application/x-quattro-pro; version=7-8|\r\n|testQUATTRO.qpw|application/x-quattro-pro; version=9|\r\n\r\n## Possible issues\r\n\r\nCouple of small things to watch here. First of all I wasn't quite sure how to use the \"version\" field for the following format/version combinations:\r\n\r\n* `\"application/vnd.lotus-1-2-3;version=97+9.x\"`\r\n* `\"application/x-quattro-pro;version=1-4\"`\r\n* `\"application/x-quattro-pro;version=1+5\"`\r\n\r\nThis all looks a bit ugly to me; maybe there's a better way to do this. Also, the versioning for the Quattro Pro formats is weird because Quattro Pro for DOS 4 was follwed up by version 1 for Windows, which was in turn followed by version 5! Perhaps the \"1+5\" entry should be changed to simply \"5\" (which is not strictly correct, but possibly less confusing).\r\n\r\nOther thing was that my attempts to include glob patterns for Lotus 1 (.wks) resulted in a conflict with `\"application/vnd.ms-works\"`, so I commented them out nof the Lotus definitions for now. I'm don't quite follow the underlying rules/logic, maybe there's some way to include them after all.\r\n\r\n## Addition 19 September:  added WordPerfect 4.2 mimetype definition\r\n\r\nI also include a mimetype definition for WordPerfect 4.2, which is derived from the trID pattern by Philip Storry. From the TrID website I understand its is released under a AGPL license:\r\n \r\n<http://mark0.net/soft-tridscan-e.html>\r\n\r\nNot 100% clear to me if this is compatible with the Apache license. If not, perhaps the WP definition should be left out.\r\n\r\nI provided a sample file as well. \r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jerni-zu393": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/185", "title": "TikaFix ---Contribution by jerni-zu393", "body": "I have added the magic bits for three files (*.keystore/.jks , *.apk , *.aac). It can be detect the file types even the files should not have \".\"extensions .\r\n\r\nI have attached here below the sample files for testing purpose .\r\n\r\n[keystore.tar.gz](https://github.com/apache/tika/files/1077097/keystore.tar.gz)\r\n\r\n[apktest.zip](https://github.com/apache/tika/files/1077108/apktest.zip)\r\n[aactest.zip](https://github.com/apache/tika/files/1077115/aactest.zip)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thammegowda": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/184", "title": "TIKA-2393 Fix Sentiment parser model URLs", "body": "Sentiment parser test models URLs are pointed to a specific commit in git instead of HEAD of the master.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21858496", "body": "Thanks. Noted: In the future, I will keep an eye.\r\nHis IDE probably cut it because of the width > 80 chars!  For now please update your PR \ud83d\udc4d ", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21858496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21901585", "body": "@smadha\r\n> Can you please manual merge instead of me updating PR? \r\n\r\nDo you mean undo/edit these changes directly on master branch? I am not sure if that's a good idea!\r\n\r\n>I'll have to merge this PR in my branch and it'll make commit history look weird, what say?\r\n\r\nSince these changes are now in master, rebasing your PR to the latest commit on master is recommended! \r\n\r\n>  it'll make commit history look weird,\r\n\r\nNope, it doesn't... Merging with upstream master doesn't mess up your PR log\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21901585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640", "body": "@smadha Awesome PR. \nJust one little issue. Please specify charset to `IOUtils#toString();`\n\nOtherwise, the `mvn install` fails (forbidden api)\n\n![fix](https://cloud.githubusercontent.com/assets/1865964/11890743/84067a3a-a50c-11e5-8b63-4dfe7cdc7cac.png)\n\n## \n\nEDIT:\nAs the REST API content will be UTF8, \n`String respJson = IOUtils.toString(resp.getEntity().getContent(), StandardCharsets.UTF_8);` should pass the check\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/47997640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "user667": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/171", "title": "TIKA-2340 cleanup of direct dependencies / fix locale-dependent test case", "body": "This is an effort of dependency cleanup (with the help of mvn dependency:analyze and others). Not sure if this is acceptable without TIKA ticket number (or as such), I'll be glad to adjust this PR.\r\n\r\nWe've been updating to a recent (1.6-1.14) tika version lately and found a delta of +40libs/+20MB and went on to investigate. Turns out tika-parsers relies on a lot of transitive dependencies.\r\n\r\nThese commits try to specify (some) direct dependencies for libraries that are used in imports of parser classes. Additionally one of the test cases failed on my local setup with a non-default-English locale.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wildloop": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/167", "title": "New tabbed TikaGUI with Html preview and lucene query.", "body": "Rendering XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\nLucene queries UI, auto-indexing (in RAM) tested documents.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/152", "title": "Mapping PDF document TextPosition to XHTML span attributes, Lucene queries", "body": "Mapping PDF document TextPosition to XHTML span attributes (e.g. coordinates to style). \r\nRendering  XHTML using JFX WebView (it looks like parsed PDF).\r\nI've changed Tika App GUI card layout to JTabbedPane, it's easier to use.\r\n\r\nScreen with parsed sample invoice found here: https://slicedinvoices.com/pdf/wordpress-pdf-invoice-plugin-sample.pdf\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23103024/4c3129ac-f6b4-11e6-9b43-3875d36eb48a.png)\r\n\r\nLucene queries UI, auto-indexing (in RAM) tested documents:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2461648/23108126/c3a12970-f708-11e6-8683-b9cbfb21c5fa.png)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wko27": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/166", "title": "fix for TIKA-2044 contributed by wko27", "body": null, "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukaszozimek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/160", "title": "TIKA-2312 proposition of exposing ID3TagsAndAudio", "body": "[Issue Link]\r\nhttps://issues.apache.org/jira/browse/TIKA-2312", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "essiembre": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/143", "title": "New XFDL parser for TIKA-2222 contributed by pascal.essiembre", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AravindRam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/131", "title": "fix for TIKA-2053 contributed by AravindRam", "body": "Integrated Tag Ratio into Text Parser\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rgauss": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/92", "title": "TIKA-774: ExifTool Parser", "body": "Contribution of tika-exiftool for review\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zetisam": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/tika/pulls/86", "title": "fix for TIKA-1841 contributed by zetisam", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946", "body": "Comitted as\nhttp://svn.apache.org/viewvc?view=revision&revision=1570860\n\nThanks, closing this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/35887946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487", "body": "Issue closed, so closing this PR too.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/42438487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625", "body": "Fixed with commit\nhttp://svn.apache.org/viewvc?view=revision&revision=1596612\n\nClosing this PR as commit above implements this change\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/43891625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrismattmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781", "body": "forgot to add license header in test file. Have added it in.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46095781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519", "body": "Looks like the latest version of Tika 1.6 trunk has a similar capability - can you check it out? If it looks good to you, maybe we can close it out. thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46122519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343", "body": "Hi @vilmospapp there are currently conflicts here. Can you check into this?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57882343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090", "body": "I was able to solve the conflicts and merge this. Thanks @vilmospapp !\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57892090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822", "body": "@vilmospapp FYI ^^ above? Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57942822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643", "body": "Thanks @grossws so what you are saying is that since I already merged #15, we're good, and #17 can be closed? Can you and/or @vilmospapp close #17?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58172643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134", "body": "Hi @hlavki thanks. Can you please explain what this does? Does it add a test that exposes the bug? \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001", "body": "Thanks @hlavki is the solution something we can put into a patch? If so I'd be happy to help get it in to the sources.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58176001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534", "body": "I would prefer to keep these as explicit imports.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548", "body": "not sure about these formatting changes.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572", "body": "please remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580", "body": "not sure why this was reformatted.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592", "body": "reformatting unneeded. \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603", "body": "unneeded reformatting.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24708603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985", "body": "can you remove the commented out lines @jeremybmerrill \n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995", "body": "also remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33508995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032", "body": "remove\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088", "body": "remove all these commented lines\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/33509088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081", "body": "Should be set to some default, e.g., /path/to/grobid-home\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083", "body": "also needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/36050083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461", "body": "please remove star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628", "body": "no star imports :)\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814", "body": "no commented code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834", "body": "ALv2 header please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974", "body": "no commented out code please\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44430974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004", "body": "no commented out code\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089", "body": "no star imports\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44431089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494", "body": "@thammegowda can you remove this line? commented code.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/44881494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777", "body": "needs to be generalized.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/45565777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jrhe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435", "body": "Why do you only accept deps that in in Maven Central? No its not. I guess I need to pester the author of libpst to publish it?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46688435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880", "body": "Cheers for the help. The java packaging situation has changed a lot since used it!\n\nIs there anyway I can build tika with java-libpst 0.8.1 in the meanwhile?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/46693880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mkr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823", "body": "Whitespace / indentation changes: They are in a separate commit and happen as a result of moving all extraction code into the try / finally block in 1b053d1. Would you want them in a separate pull request? Let me know what the wildcard import policy is and I adjust my IDE settings.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/48602823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grossws": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519", "body": "Does it lead to permgen leak (via threadlocal holding classloader tree) in servlet containers/app servers?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57935519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229", "body": "This PR make `ThreadLocal<SimpleDateFormat>` useless since you create SDF twice in `handleDateTags` and destroy it then.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58011229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302", "body": "@vilmospapp, @chrismattmann, it seems that Tomcat (where I saw such problem) is quite paranoidal about thread locals. Its check is usually done before GC throw out weak references (`ThreadLocalMap.Entry` is a `WeakReference`), so Tomcat logs something like:\n\n```\n06-Oct-2014 19:37:41.009 SEVERE [RMI TCP Connection(14)-127.0.0.1] org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks The web application [] created a ThreadLocal with \n  key of type [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1] (value [org.apache.tika.parser.image.ImageMetadataExtractor$ExifHandler$1@3a97b29a]) \n  and a value of type [java.text.SimpleDateFormat] (value [java.text.SimpleDateFormat@6b2ed43a]) \n  but failed to remove it when the web application was stopped. \n  Threads are going to be renewed over time to try and avoid a probable memory leak.\n```\n\nIf I force several GCs after application undeploy this thread local is usually collected. I think you can remove PR #17 and let this PR merge into tika.\n\nTo test that it's collected I created simple servlet:\n\n``` java\n@WebServlet(name = \"t\", urlPatterns = {\"/t\"})\npublic class AppServlet extends HttpServlet {\n  @Override\n  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n    Metadata metadata = new Metadata();\n    try {\n      new ImageMetadataExtractor(metadata).parseJpeg(new File(\"/home/gross/repo/tl-test/test.jpeg\"));\n    } catch (SAXException | TikaException e) {\n      throw new ServletException(e);\n    }\n    resp.getWriter()\n        .append(metadata.get(TIFF.ORIGINAL_DATE));\n  }\n}\n```\n\nWhich is deployed to tomcat 8 with VM running with `-XX:+PrintGCDetails -XX:+TraceClassUnloading` to see class unloading and GC executions. To force GC I used `jcmd <pid> GC.run` or _Perform GC_ in `jvisualvm`.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58043302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193", "body": "See PR #15\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438", "body": "Also, about different webapp (or things that use non-trivial classloader configuration) memory leaks: http://wiki.apache.org/tomcat/MemoryLeakProtection\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58085438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434", "body": "So, you have SDF that is created on first `get()` in `handleDateTags(...)` and removed in finally block. Then there's no reason to store it in `ThreadLocal`. It's more inefficient than local variable.\n\nI think that private static SimpleDateFormat plus some syncronized format method for it will be more efficient and obvious method to fix issue.\n\n``` java\nstatic class ExifHandler implements DirectoryHandler {\n  private static final SimpleDateFormat DATE_UNSPECIFIED_TZ = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n\n  private synchronized String formatDateWithoutTimeZone(Date datetime) {\n    return DATE_UNSPECIFIED_TZ.format(datetime);\n  }\n\n  // ...\n  public void handleDateTags(Directory directory, Metadata metadata) {\n    // ...\n    String datetimeNoTimeZone = formatDateWithoutTimeZone(...);\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58094434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "vilmospapp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110", "body": "@chrismattmann , @grossws \nBased on the documentation (http://docs.oracle.com/javase/7/docs/api/java/lang/ThreadLocal.html):\n\n```\nEach thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive\n and the ThreadLocal instance is accessible; after a thread goes away, all of its copies of thread-local \ninstances are subject to garbage collection (unless other references to these copies exist)\n```\n\nI think it should be garbage collected.  Anyway it could be answered in details if we could see how the heap behaves  in a system with high load. (Perhaps with some (4-5) thread dumps within 1-3 seconds after each other to see whether GC removes the variables or not.) I have no such test environment, but if someone has, and creates the heap and thread dump, I can verify it.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57982110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011", "body": "Hi @chrismattmann and @grossws \n\nI read about this possibility a bit, and found this blog: http://java.jiderhamn.se/2012/01/29/classloader-leaks-iv-threadlocal-dangers-and-why-threadglobal-may-have-been-a-more-appropriate-name/\n\nBased on this, I think,  we should enclose the get() method calls with a try-finally block, and in the finally block call the remove() on the thread local to avoid keeping the references.\n\nIf both of you agree, I would create the modification and send another pull request.\n\nCheers,\nVilmos\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/57985011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970", "body": "Hi @grossws \n\nThat's true, but my other option would be to add the remove() call in a finalizer, but there's no guarantee, that it will be invoked. Do you have better idea?\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58012970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330", "body": "Hi @grossws \n\nI modified it, so the destroy will run only once. Anyway the main point in using this is to avoid concurrency issues related to SDF, not only caching the SDF for later usage.\n\nAnyway thanks for the detailed information commented on https://github.com/apache/tika/pull/15\n\nBased on that, I think it's better to have this finally block based destroy to avoid the possible memory leak.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58088330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hlavki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577", "body": "Hi Chris, yes, it adds test that exposes the bug. But today I've found solution and it needs commons-logging.jar on classpath of forked process.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58175577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002", "body": "this is patch proposal https://github.com/hlavki/tika/commit/22c2ad8655c1e7f352974da4f1eb44f9317769e7\nBUT!\n1. I copied commons-logging-1.2.jar to tika-core resources\n2. commons-logging classes are bundled into bootstrap jar of ForkParser\n3. LogFactory is excluded from classloading in ClassLoaderProxy.java\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/issues/comments/58193002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skingreek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/6794517", "body": "ignoring this error leads to degraded performance if XHTMLContentHandler is wrapped into WriteOutContentHandler\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/6794517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "vulpes8": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20717141", "body": "Thanks!", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20717141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nguyenhoan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/20942591", "body": "Hi @tballison \r\nWe are a team of researchers from Iowa State, The University of Texs at Dallas and Oregon State University, USA. We are investigating common/repeated code changes.\r\nWe have four short questions regarding the change in the image below which is part of this commit.\r\n![image](https://cloud.githubusercontent.com/assets/2257582/23089664/9f9ae53c-f552-11e6-82e1-7e06c6a8bcef.png)\r\n\r\nQuestions:\r\n\r\nQ1- Is the change at these lines similar to any other changes (from other locations of the same commit or from other commits)? (yes, no, not sure)\r\n\r\nQ2- Can you briefly describe the change and why you made it? (for example, checking parameter before calling the method to avoid a Null Pointer Exception)\r\n\r\nQ3- Can you give it a name? (for example, Null Check)\r\n\r\nQ4- Would you like to have this change automated by a tool? (Yes, No, Already automated)\r\n\r\nThe data collected from the answers will never be associated with you or your project. Our questions are about recurring code changes from the developer community, not about personal information. All the data is merged across recurring changes from GitHub repositories. We will publish aggregated data from the trends of the whole community. \r\nWe have a long tradition of developing refactoring tools and contributing them freely to the Eclipse, Netbeans, Android Studio under their respective FLOSS licenses. For example, look at some of our recently released refactoring tools: http://refactoring.info/tools/ \r\n\r\nThank you,\r\nHoan Nguyen https://sites.google.com/site/nguyenanhhoan/\r\nMichael Hilton http://web.engr.oregonstate.edu/~hiltonm/\r\nTien Nguyen http://www.utdallas.edu/~tien.n.nguyen/\r\nDanny Dig http://eecs.oregonstate.edu/people/dig-danny\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/20942591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mattcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21109652", "body": "@tballison the values are all the same. Is this intentional?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21109652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/23984454", "body": "@tballison I think this is never used.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/23984454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "smadha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/21847995", "body": "In future please avoid space/newline changes. In this case it caused a conflict with my PR #168 :)", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21847995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/21888269", "body": "Can you please manual merge instead of me updating PR? I'll have to merge this PR in my branch and it'll make commit history look weird, what say?", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/21888269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/tika/comments/24268592", "body": "@ThejanW Seems like this got missed in InceptionVideoRestDockerfile. I think we need a better way to abstract out the common installation. I", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ThejanW": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24268737", "body": "@smadha I was thinking about using a baseDockerfile. What do you think?\r\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24268737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jkff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/tika/comments/24706413", "body": "Unfortunately this is not correct and not consistent with the `equals()` method. Are there any tests for `Metadata`? I believe with this implementation e.g. creating a HashSet with a single Metadata in it, and checking for .contains(equivalent but not the same Metadata object), would _always_ return a wrong result of `false`.\r\n\r\n`metadata` is a `Map<String, String[]>` and its hashCode() will call hashCode() on the `String[]` objects, which is *not* computed from the contents of the array, only its identity - Java arrays don't implement hashCode() or equals(). This is, likely, also the reason why `equals()` is not implemented as `return metadata.equals(other.metadata())`.\r\n\r\nThe proper implementation is to loop over the metadata and compute a combined hash code of the keys and values, using some method of hashing a key/array(value) pair and some method for combining the hashes for these pairs. You need to also be mindful of:\r\n\r\n- Whether the order of iteration over keys matters. I suppose not. Then you need to make sure your hash code does not depend on this order.\r\n- Whether the order of iteration over multiple values of a single key matters. I suppose the answer is also no, and then the same caveat applies.\r\n\r\nThe easiest way to hash an unordered collection of something is to hash each element and add up the hashes.", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24706413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/comments/24888980", "body": "Why not use a regular foreach loop?\r\n\r\n    for (Entry<String, String[]> entry : metadata.entrySet()) {\r\n      h += getMetadataEntryHashCode(entry);\r\n    }", "reactions": {"url": "https://api.github.com/repos/apache/tika/comments/24888980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "uschindler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261", "body": "Use \"\".equals(header.getFileName()) syntax, because this will cause NullPointerException if the wide file name is not available. Alternatively add a null check.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24153261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943", "body": "Hi,\nthis comment was more about code style: If you use equals to compare 2 things, it is always better to have the part that is static and/or final and for sure not null (in this case: the string literal) first. Then you don't eben have to think about if it could be null or not. If you check your code with PMD it will suggest this to you.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24161943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kongxianghe1234": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077", "body": " you said is better, but member variables should not be null , Come to this issue , What i mean is that var header has two methods 1. getFileNameString()    2. getFileNameW()  . Your unit test case just cover iso-8859-1 encoding \ntip:https://github.com/apache/tika/blob/trunk/tika-parsers/src/test/resources/test-documents/test-documents.rar\ni have tested for chinese and other language , it didn't work , please \ntry to debug for this and you will find you have to check for the charset of the fieName.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24160077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "tokee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954", "body": "My IDE tricked me there. I'll put them back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24710954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035", "body": "Remove what? Formatting changes? I have tried that (sending new pull request in a few minutes).\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063", "body": "True, although my reformatting followed the indentation level. I have changed it back.\n", "reactions": {"url": "https://api.github.com/repos/apache/tika/pulls/comments/24711063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}