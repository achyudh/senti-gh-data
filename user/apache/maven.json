{"_default": {"1": {"khmarbaise": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/2b336ff150b12aeae9bd0d2a61f1e8d02504492f", "message": "[MNG-6312] Update Maven Wagon dependency\n o Upgrade wagon version to 3.0.0 based on CVE-2015-6748\n   in shaded jsoup."}, {"url": "https://api.github.com/repos/apache/maven/commits/68a9d79671a7d385a204300994e06b1a19964bf4", "message": "[MNG-6332] Cleaned up mvn.cmd Script"}, {"url": "https://api.github.com/repos/apache/maven/commits/abd73da3a492ee544c6102840fc012409a4ac83d", "message": "[MNG-6331] Remove maven-bundle-pugin from build pluginManagement"}, {"url": "https://api.github.com/repos/apache/maven/commits/6b83f7e6bb38cf49c43251c0d84bcae61800fd1a", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Followup removed unused declarations."}, {"url": "https://api.github.com/repos/apache/maven/commits/2295c17b45f46cae0daa46105e0a7856505a108f", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Checkin that only the three expression changelist,\n   revision and sha1 are valid in a version.\n o Added some tests."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238", "body": "As far as I know we use JUnit 4.12 where you can @Rule for exceptions checking? WDYT ? \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374", "body": "Hi, WDYT means What Do You Think ? I wanted that you shared your opinion.....\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452", "body": "Can you tell me why you have removed those part of the file and changed the id's ? I don't see any good reason to remove those parts and renaming the id's ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hboutemy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/58cf490c696cebfb0cc3dce31fed68658b16626f", "message": "[MNG-6308] added packaging in Building message footer and summary"}, {"url": "https://api.github.com/repos/apache/maven/commits/c2e3b3e301a96e36670206db0c215f3026937d33", "message": "[MNG-6308] display groupId:artifactId in Building message header"}, {"url": "https://api.github.com/repos/apache/maven/commits/98d2e197d111d4863d1e420a9f9c1548690bc7e1", "message": "[MNG-6308] added unit test for \"Building\" message"}, {"url": "https://api.github.com/repos/apache/maven/commits/f5f76c70e1828a7e6c6267fc4bc53abc35c19ce7", "message": "[MNG-6302] display progress at end of \"Building\" line"}, {"url": "https://api.github.com/repos/apache/maven/commits/c19e9dcac3d200094c770521b9b1b10df76f26c4", "message": "[MNG-6242] detect Cygwin/Mingw pseudo terminal for Jansi"}, {"url": "https://api.github.com/repos/apache/maven/commits/4f530c4f006b8d22da90d968a1d32797280804b9", "message": "[MNG-6196] removed remaining Monkey patching, not really necessary\n\ndone after Emmanuel Bourg #118 PR idea"}, {"url": "https://api.github.com/repos/apache/maven/commits/eb2db7b28664dbaac6a59a2189c70d92e455dcea", "message": "[MNG-6196] updated slf4j to 1.7.25\n\n[SLF4J-394] use new slf4j methods done for us\n[SLF4J-395] use slf4j-simple System.out cache"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439921", "body": "on a pure theoretical point of view, I know it looks awkward\non a practical point of view:\n1. did you ever try to write a plugin descriptor by hand? or do you always let plugin-tools generate the descriptor (like the vast majority of plugin developers)?\n2. are you able to give us a xsd description for the configuration element content? and that fits into Modello descriptor, since Modello generates the xsd from .mdo?\n\nI'm not a big xsd expert: any help appreciated to fix the plugin.mdo I wrote to at least document the descriptor \"from a human point of view\" (ie not seeing in general that I had to cheat with configuration element)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440157", "body": "I'm a big fan of XML having an XSD too, we should be able to get along with each other :)\n\nI had to reverse engineer too to write the plugin.mdo that actually documents the descriptor structure as much as possible: but the real source of information is still source code and examples, since this .mdo is only intended as documentation, it's not used by Maven core at all\n\nbut every plugin.xml is really used by Maven core to inject content, so it's really what maven knows from any plugin/mojo: if you look at a plugin.xml in any plugin, you'll see type information in every parameter/type and configuration/name of param/@implementation (= what I couldn't really describe as xsd, and even less make it generated from Modello)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440196", "body": "true\nIn fact, I don't know precisely what is checked during value injection at runtime: this code was written before generics existed, so generics weren't implemented in plugin.xml at this time. I don't know if newer veresion could do something about it: what I know is that whan I updated plugin-tools, I chose not to try to change anything at this level for the moment\n\nnow is perhaps the right moment to have a review on this\nnotice that github comment are probably not the best place, since they are not sent to Maven developer's list: so this discussion is only happening between us: we need more Maven developers to have a chance to actually implement such a feature\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438815", "body": "a typo from a search/replace \"cause\" -> \"t\" :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568586", "body": "ok, MNG-6115 description had not been updated\r\nI'll do the changes", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568727", "body": "didn't know this new method :)", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568734", "body": "I'm doing it, while at it", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514", "body": "\"quiet-transfer-logs\", for consistency with other options, please\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615", "body": "if you try this with current HEAD, Checkstyle will remember you our key coding convention, with spaces around parenthesis :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747", "body": "should be a( \"Caused by\" ).reset().a( \": \" )\nfixed while merging in Maven\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "rfscholte": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/df5169bdf9fead590d48e23fb182d7f73f1deb3d", "message": "[MNG-6330] Parents relativePath not verified anymore"}, {"url": "https://api.github.com/repos/apache/maven/commits/98af937bc6298e82e489b5f0cd3fb0a1c3d37109", "message": "[MNG-6300] Multi module release creates empty directories in war file instead of jars"}, {"url": "https://api.github.com/repos/apache/maven/commits/909fb7c59b87286b6eae36195f65db4776ccf92a", "message": "Merge branch 'MNG-6296'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephenc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/eee06f7d7c736cbc1668dc7eae5dc21fd4b1075f", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/a670c2ea1f592563b756b31d650c9a6db553fbdb", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/5411c5a9c4d327d7217ae966be3d1ead807ebfd8", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/3f04e94ea45033fa2768f40148b5e06a141e066e", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/35f3586eccb1cd7bf3a6585aaa1aeb8f0cd0516b", "message": "Start using some of the jenkinsEnv stuff"}, {"url": "https://api.github.com/repos/apache/maven/commits/5919b7450d2e01f079e930d92df7910af39d489a", "message": "Update DOAP"}, {"url": "https://api.github.com/repos/apache/maven/commits/69c512a8203030f3fee657673b0416bc2a121eae", "message": "Add the serverId to scm-publish so that we do not need to rely on cached svn credentials"}, {"url": "https://api.github.com/repos/apache/maven/commits/3d0efa36963c217527230228a11ab44050ca1b10", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/138edd61fd100ec658bfa2d307c43b76940a5d7d", "message": "[maven-release-plugin] prepare release maven-3.5.2"}, {"url": "https://api.github.com/repos/apache/maven/commits/4b95ad9fce6dfe7eec2be88f5837e96c7fbd7292", "message": "Revert \"MNG-6209 better executeMojo thread context classloader\"\n\nThis reverts commit ec629f7d511eb910b4e80112a9fbe85ed8786f10."}, {"url": "https://api.github.com/repos/apache/maven/commits/cae779e4fbc6565a581f2c6adf9fb15348005603", "message": "Revert \"[MNG-6275] Maven Embedder compatible fix\"\n\nThis reverts commit 27a2bda3f4a8f5385c4cab360ed7365d3d3d3c09."}, {"url": "https://api.github.com/repos/apache/maven/commits/542a7a89156263b34d1472e9d9c1a2795afccd2d", "message": "[MNG-6275] Defang the tests when their core assumption is invalid.\n\n- The tests assume that the JRE has a ScriptEngineFactory\n- Not all JREs have a ScriptEngineFactory (I'm looking at Azul's Zulu Open JDK 7 builds)\n- Ideally we'd skip these tests using Assume.assumeThat(...) but PlexusTestCase doesn't support\n  AssumptionViolatedException for marking tests as skipped.\n\nIssue identified during testing of the 3.5.1 release candidate"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "slachiewicz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/866582d296ed80f36f33e5293cd07647185e0e43", "message": "[MNG-6306] Replace use of Guava in maven-resolver-provider with a lighter weight alternative\n\nThis closes #138"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/154", "title": "[MNG-5967] Correct Mockito scope to test", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/153", "title": "[MNG-6069] Migrate to non deprecated parts of Commons CLI", "body": "Without 2nd commit 719234d when I set -Dstyle.color=never is not working correctly and returns value \"true\" not \"never\"", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/152", "title": "[MNG-5992] Upgrade default version of maven-release-plugin to 2.5.3", "body": "Fix password printout to logs\r\n\r\nCredit to: Ryan J. McDonough", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/150", "title": "[ MNG-6335] Update Mockito to 2.12.0", "body": "Also change scope to test", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/149", "title": "Upgrade maven-checkstyle-plugin to 3.0.0 (Checkstyle 6.18) and fix errors", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coder-hugo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/b2afafe5a252d9f86b3e43cce8a06dc9cdc7a6d7", "message": "Parse properties before configuring the logging settings"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/135", "title": "[MNG-6296] Parse properties before configuring the logging settings", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rmannibucau": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4d49d3b05b2e3d3a4530bb27e8cc162ab50baa7c", "message": "logging the module count to let the user identify how many module are still to be executed/processed"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ChristianSchulte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/148", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/147", "title": "[MNG-5527] Dependency management import should support relocations.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/146", "title": "[MNG-4463] Dependency management import should support version ranges.", "body": "Closes #64 without merging. ITs are pending to be committed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/145", "title": "[MNG-6112] Central repository in the 4.0.0 super POM should declare u\u2026", "body": "\u2026pdate policy 'never'.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/144", "title": "[MNG-2893] Update the DefaultPluginManager to not use a project depMa\u2026", "body": "\u2026n for controlling it's transitive dependencies", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/143", "title": "[MNG-5359] Declared execution in PluginMgmt gets bound to lifecycle (\u2026", "body": "\u2026regression)", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/142", "title": "[MNG-6114] Profiles from the global settings should be ordered before\u2026", "body": "\u2026 profiles from the user settings.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/141", "title": "[MNG-6164] Collections inconsistently immutable.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/124", "title": "Make resolver debug log messages for projects and plugins consistent.", "body": "The graph returned by the resolver after resolution is logged at debug level. This pull request only updates those debug log messages to be consistent across project and plugin resolution and to provide as much information as possible to make users aware of what is going on.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/107", "title": " Fixes to various JIRA issues.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dconneely": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/140", "title": "Add org.slf4j.event to exported packages", "body": "maven-core should export org.slf4j.event.* from slf4j-api 1.7.15 or later.\r\nFor example, this package is where the `Level` class is located.\r\n\r\nOtherwise, issues similar to MNG-5842 and MNG-5845 will arise with plugins that use Slf4j themselves (or more likely plugins that use libraries that use Slf4j).\r\n\r\nDiscovered while working on in-house Maven plugin that failed with `java.lang.NoClassDefFoundError: org/slf4j/event/Level`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bengtsod": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/139", "title": "[MNG-6298] 3.5.2: ClassNotFoundException", "body": "Adding exportedPackage to find class:\r\njavax.annotation.security.RolesAllowed\r\n\r\nFirst maven commit :) Works but might be deeper issue", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msimacek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/134", "title": "[MNG-6294] Convert MavenPluginValidator into a plexus component", "body": "Patch for https://issues.apache.org/jira/browse/MNG-6294", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jtnord": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/133", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "https://github.com/ChristianSchulte/maven/commit/679a34b86e3d69b7a832481c7f21e5eab367cd11 cherry picked into master\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-5600", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ankon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/132", "title": "Fix the Javadoc to use a proper @link tag when pointing to ProjectBuilder", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MichaelWarnecke": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/131", "title": "[MNG-6213] Validate scope in dependencyManagement", "body": "This is a patch for MNG-6213: https://issues.apache.org/jira/browse/MNG-6213", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "etzelc": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/128", "title": "[MNG-6256] Surround variables in echo command with double quotes", "body": "This is a patch for issue MNG-6256. https://issues.apache.org/jira/browse/MNG-6256", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "grkvlt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/127", "title": "[MNG-6255] Fix concat_lines in mvn to deal with CRLF", "body": "Change `tr` command to deal with CRLF line endings properly.\r\n\r\nThis was triggered by running the `mvn` shell script on a Windows machine (with the Git bash shell and utilities) against a GitHub repository generated on a Mac, which contained a `.mvn/jvm.config` file with CRLF line endings.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-6255 for further details.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharabaddin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/126", "title": "Update code style quikstart-arhetype", "body": "correct code style(most standart)\r\nand change correct history \"Hello, World!\"", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dbmeneses": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/125", "title": "[MNG-5965] Parallel build multiplies work if multiple goals are given", "body": "\r\n[mng-5965.zip](https://github.com/apache/maven/files/1124059/mng-5965.zip)\r\nThis p/r should also fix MNG-5705.\r\n\r\n### Problem\r\nWhen multiple tasks are given so that they are grouped in different task segments, the MultiThreadedBuilder fails. \r\nThe reason is that it creates project segments, which is a set of unique pairs of (module, task).\r\nIt then handles each task separately, and it will schedules the build of the task for **all** root module in those pairs, instead of scheduling only the root modules which are associated with that particular task.\r\n\r\n### Example\r\nFor example, given the project with the following hierarchy of modules:\r\n```\r\nroot\r\n-- module1\r\n```\r\n\r\nIf we run `mvn task1 task2`, being task2 an aggregating task, we get the following project segments:\r\n   (task1, root), (task1, module1), (task2, root).\r\n\r\nThe MultiThreadedBuilder will first handle task1, and will schedule the build of: (task1, root), (task1, root).\r\nEach of these builds will then recursively build its children, meaning that _task1 will be executed twice for every module in the project_.\r\n\r\n### Fix\r\nThis fix changes the builder so that it considers the project segments of each task segment separately, by creating a ConcurrencyDependencyGraph for each task segment.\r\n\r\n\r\n### Related\r\nI believe that MNG-5705 is a consequence of the same problem, because the builder will not count correctly the number of projects that are built because of the shared ConcurrencyDependencyGraph, resulting in a NPE.\r\n\r\n### Test\r\nI opened a separate P/R to add an IT for this issue: https://github.com/apache/maven-integration-testing/pull/22\r\n\r\nIt uses a very simple multi module project, which is attached here too.\r\n\r\nTo reproduce:\r\n```\r\nmvn clean install:help install -T10\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Summary:\r\n[INFO] \r\n[INFO] module-1 ........................................... SUCCESS [  0.069 s]\r\n[INFO] module-2 ........................................... SUCCESS [  0.069 s]\r\n[INFO] base-project ....................................... SUCCESS [  0.001 s]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 0.197 s (Wall Clock)\r\n[INFO] Finished at: 2017-07-05T11:06:42+02:00\r\n[INFO] Final Memory: 8M/240M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] NullPointerException\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n```\r\n\r\nNote the clean goal being executed twice for each module, and the NPE (as described by MNG-5705).\r\n\r\nExpected result, after the fix:\r\n```\r\n/tmp/apache-maven-3.5.1-SNAPSHOT/bin/mvn clean install:help install -T10\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-install-plugin:2.4:help (default-cli) @ base-project ---\r\n[INFO] Maven Install Plugin 2.4\r\n  Copies the project artifacts to the user's local repository.\r\n\r\nThis plugin has 3 goals:\r\n\r\ninstall:help\r\n  Display help information on maven-install-plugin.\r\n  Call mvn install:help -Ddetail=true -Dgoal=<goal-name> to display parameter\r\n  details.\r\n\r\ninstall:install\r\n  Installs the project's main artifact, and any other artifacts attached by\r\n  other plugins in the lifecycle, to the local repository.\r\n\r\ninstall:install-file\r\n  Installs a file in the local repository.\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebourg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/118", "title": "Upgrade SLF4J to 1.7.25", "body": "The changes to SLF4J required to support maven-slf4j-provider have been [released ](https://jira.qos.ch/browse/SLF4J-394) in the version 1.7.25. If I'm not mistaken it should be possible to remove the patching tweak now.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/117", "title": "[MNG-5756] Java home output in mvn -v is misleading", "body": "Renamed previous printing of JRE to \"JRE used\" and provided\r\nseparate mechanism to actually tell value of JAVA_HOME", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcelosv": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/115", "title": "Change out JAVA_HOME. Add JRE used. JRE used print /jre and JAVA_HOME\u2026", "body": "I read the discursion of issue MNG-5756 and I change code out for JAVA_HOME and JRE.\r\nNow, print two information to JAVA.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevin-canadian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/112", "title": "Fix snapshot regular expression", "body": "The snapshot regular expression should only match an explicit period.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "olamy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504", "body": "patch applied.\nYou can close this pr \nThanks !\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749", "body": "to run integration test\ngit clone https://git-wip-us.apache.org/repos/asf/maven-integration-testing.git\ncd maven-integration-testing\nmvn clean install -Prun-its (with M2_HOME to your fresh maven core build or -DmavenHome=path to your maven core build)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "mcculls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735", "body": "Cheers\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355", "body": "Note that https://jira.codehaus.org/browse/MNG-5446 / https://github.com/apache/maven-integration-testing/pull/3 is also required to clean up an IT that depends on some broken behaviour in the old Data configurator that's now fixed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860", "body": "Verified that this patch has been applied, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862", "body": "Applied by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=8b97b0a2dae4ab8b8b5cc614ca58b329af2ce6ff - thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=c5f161a8d6855222be1bc3cb167d46bb18aaf167\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=34a8c6ce3b54ff28cdf682df2699b2849c717182\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/2817036", "body": "Was this commit meant to bring in Eclipse/Aether as well? This breaks the build as the code still depends on org.sonatype.aether.*\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/2817036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jvanzyl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222", "body": "Applied at Apache.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327", "body": "Applied. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209", "body": "Commited on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134", "body": "Committed on 65863e0a28298b6d95bfbbf7cc28953f6ba91f93\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313", "body": "We'll just go for the 1.0.0 as its out now but I need to do some testing first.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504", "body": "Committed on Committed on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901", "body": "Please squash this commit and I'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937", "body": "The link: [MNG-3092](https://jira.codehaus.org/browse/MNG-3092)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035", "body": "`mvn clean install test integration-test` passes with this change.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752", "body": "Also did the following at @stephenc\u2019s suggestion, in case that is more exacting:\n\n```\nrm -rf ~/.m2\nM2_HOME=/tmp/maven ant all\n/tmp/maven/bin/mvn clean install -Prun-its -B -U -V\n```\n\nwhich worked though\n\n```\n[WARNING] The requested profile \"run-its\" could not be activated because it does not exist.\n```\n\nReally there should be a pull request builder for this sort of thing, so I do not have to guess what tests you expect to be run!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130", "body": "I get the same errors from my branch as from the `master` commit it is based on:\n\n```\nTests in error: \n  MavenITmng3983PluginResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:58 \u00bb Verification\n  MavenITmng3970DepResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3948ParentResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredHttp:123 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredDAV:175 \u00bb Verification\n  MavenITmng3372DirectInvocationOfPluginsTest>AbstractMavenIntegrationTestCase.runTest:220->testDependencyTreeInvocation:83 \u00bb Verification\n\nTests run: 716, Failures: 0, Errors: 6, Skipped: 0\n```\n\nMaybe due to my use of a `*`-mirror? Another reason to have a standard PR builder which is known to pass all trunk tests.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335", "body": "Claimed merged in 2eb419ed95ccfdd80c5755890e649a49274cceca.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kunalsomani": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395", "body": "Are you going to merge into main branch?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "seblm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353", "body": "I've followed [this guide](http://maven.apache.org/guides/development/guide-m2-development.html#Dont_forget_tests) to run the integration tests. Result was ok (but took a lot of time :smile:)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337", "body": "@jvanzyl please let me know if you want something else to be done on this pull request before you could merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186", "body": "Agreed, closing this out.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "michael-o": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998", "body": "Nice, I think the wording of the log message contains a duplicate:\n\n\"Using the builder %s with a thread count of %s\", that result in \"Using the builder XyzBuilder with a thread count of 4\". Builder is printer twice, in my opinion unnecessary.\n\nHow about \"Using the %s implemenation with a thread count of %d\"?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928", "body": "Emberassing, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804694", "body": "Don't! Always through a NPE if null is passed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/13810086", "body": "Right, see my ongoing effort on this: https://issues.apache.org/jira/browse/MNG-5649\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13810086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402248", "body": "Why is this `close` necessary? The new `try` clause should handle it, shouldn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402248/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402253", "body": "Same as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438684", "body": "What is 'td'?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19860040", "body": "It would likely to improve readability but given that this is internal stuff, I see no huge gain here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19860040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567994", "body": "As far as I remember from the ticket, we agreed to use `lib/ext` because this is for the user and `lib` is solely for us.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567995", "body": "See above.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568011", "body": "Changes on `CLIManager` from 5fb4bc9a237ad2c19c5851b89d0ed810d2eff02d are missing. Especially, ` (disables output color)` on batch mode and log file.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568013", "body": "Go for `System.lineSeparator()`, if this `static` is necessary at all.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568028", "body": "Use `PrintStream`s ability like `print()` or `println()` to avoid `NEWLINE` at all and don't invoke `toString()` on objects with `PrintStream`. [It will do for you](https://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html#print(java.lang.Object)).", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568261", "body": "This should be namespaced and contain all attributes just like other assemblies here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623249", "body": "Here is trailing whitespace", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623254", "body": "This block contains trailing whitespace too.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655729", "body": "consists of...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655730", "body": "Javadoc...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234", "body": "Please remove that whitespace\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541", "body": "This should resolve to a release version.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297", "body": "Not related to the PR, please remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348", "body": "Please use Commons Lang as I have done it recently on other modules in Maven.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272", "body": "Indent as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937", "body": "Why is this check not present in the shell script?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941", "body": "This should go to `stderr`.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "nerro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484", "body": "Make sense. I will correct it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431", "body": "copy-paste is not always good :smile: => typo in word \"implementation\"\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870", "body": "Testing integration with the maven dev ML, please ignore :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "nmusienko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davidmoten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439715", "body": "what a mess, xml without schema!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440111", "body": "I was interested in writing tooling around composing plugins maximising\ntype safety for example but was disappointed that the definition of a\nplugin's configuration was not something I could reverse engineer\nsatisfactorily from the plugin.xml and in the process discovered that the\nplugin.XML didn't have an xsd making more guesswork out of the process. I\nused xpath to get stuff out of it in the end but I stopped work when I\nrealised that my only hope was parsing plugins' source code.\n\nI'm a big fan of XML always having an xsd but I probably won't be able to\ncheck out modello and get an xsd happening in the near future and I'm\nassuming for my interests that it won't help much either. I wonder if real\ntype information for configuration will turn up in plugin.xml sometime?\n\nThanks for chasing it.\nD\nOn 25 May 2014 18:14, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> on a pure principle, I know it looks awkward\n> on a practical one:\n> 1. did you ever try to write a plugin descriptor by hand? or do you always\n> let plugin-tools generate the descriptor (like the vast majority of plugin\n> developers)?\n> 2. are you able to give us a xsd description for the configuration element\n> content? and that fits into Modello descriptor, since Modello generates the\n> xsd from .mdo?\n> \n> I'm not a big xsd expert: any help appreciated to fix the plugin.mdo I\n> wrote to at least document the descriptor \"from a human point of view\" (ie\n> not seeing in general that I had to cheat with configuration element)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6439921\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440162", "body": "Yep some type information but limited. Collections of type T for instance\nthere is no mention of T in plugin.xml\nOn 25 May 2014 19:52, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> I'm a big fan of XML having an XSD too, we should be able to get along\n> with each other :)\n> \n> I had to reverse engineer too to write the plugin.mdo that actually\n> documents the descriptor structure as much as possible: but the real source\n> of information is still source code and examples, since this .mdo is only\n> intended as documentation, it's not used by Maven core at all\n> \n> but every plugin.xml is really used by Maven core to inject content, so\n> it's really what maven knows from any plugin/mojo: if you look at a\n> plugin.xml in any plugin, you'll see type information in every\n> parameter/type and configuration/name of param/@implementationhttps://github.com/implementation(= what I couldn't really describe as xsd, and even less make it generated\n> from Modello)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6440157\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "barthel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804883", "body": "+1\nBut, I'm oriented on the current used pattern like in #setRepositoryEventDispatcher or #setSyncContextFactory.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trajano": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/19856369", "body": "Perhaps the string could be built using String.format() instead of StringBuilder.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19856369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/19862572", "body": "Its more for people who would want to try and learn.  But then there's a lot of other things to look at too https://sonarqube.com/dashboard/index?id=org.apache.maven%3Amaven I put in a PR #97 that would at least help bring it up sooner.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19862572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kwin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741", "body": "This <prerequisites> is still supported for Maven Plugins (https://issues.apache.org/jira/browse/MNG-5501?focusedCommentId=14419813&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14419813), therefore rather than deprecating that I would add a hint, that this should only be used for packaging \"plugin\".\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jdillon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607", "body": "Yup, working on that; marked the PR as WIP until I can get this sorted out\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rajivpjs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276", "body": "I will work on this and have this done shortly. What do you mean by WDYT?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078", "body": "oh ok!!!\n\nI think it is a great idea. Usually, when I want to test for Exceptions I use annotation approach like having @Test(expected = Exception.class). However, looking at the existing examples of Apache I couldn't find any. So, I actually learnt the Rule approach is kind of equivalent. I am just applying the change.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082", "body": "Well spotted. Sorry, this was accidental. I will revert this change shortly.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rpatrick00": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111", "body": "Like it or not, sh and cmd are different and have different capabilities.  In the sh script, we know that the directory exists because of the check for existence of the POM file.  I easily can add the POM file existence test to the cmd script and print the same errors if the pom file does not exist.\n\nIn the cmd script, I need to check for the existence of the extracted directory because if, for some reason, the directory extracted doesn't exist (e.g., a bug in the extraction code), the user gets a cryptic error.  The same is not true for the sh script.\n\nI will add the redundant check to the sh script too just for symmetry purposes...\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117", "body": "OK\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsoref": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624", "body": "This would be an api change. I'm not even sure if this is a correct word.\r\nI'm fairly confident that you are using two spellings for the same concept.", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "2": {"khmarbaise": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/2b336ff150b12aeae9bd0d2a61f1e8d02504492f", "message": "[MNG-6312] Update Maven Wagon dependency\n o Upgrade wagon version to 3.0.0 based on CVE-2015-6748\n   in shaded jsoup."}, {"url": "https://api.github.com/repos/apache/maven/commits/68a9d79671a7d385a204300994e06b1a19964bf4", "message": "[MNG-6332] Cleaned up mvn.cmd Script"}, {"url": "https://api.github.com/repos/apache/maven/commits/abd73da3a492ee544c6102840fc012409a4ac83d", "message": "[MNG-6331] Remove maven-bundle-pugin from build pluginManagement"}, {"url": "https://api.github.com/repos/apache/maven/commits/6b83f7e6bb38cf49c43251c0d84bcae61800fd1a", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Followup removed unused declarations."}, {"url": "https://api.github.com/repos/apache/maven/commits/2295c17b45f46cae0daa46105e0a7856505a108f", "message": "[MNG-6305] Validation of CI friendly version incorrect\n o Checkin that only the three expression changelist,\n   revision and sha1 are valid in a version.\n o Added some tests."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238", "body": "As far as I know we use JUnit 4.12 where you can @Rule for exceptions checking? WDYT ? \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71401238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374", "body": "Hi, WDYT means What Do You Think ? I wanted that you shared your opinion.....\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71406374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452", "body": "Can you tell me why you have removed those part of the file and changed the id's ? I don't see any good reason to remove those parts and renaming the id's ?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71971452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hboutemy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/58cf490c696cebfb0cc3dce31fed68658b16626f", "message": "[MNG-6308] added packaging in Building message footer and summary"}, {"url": "https://api.github.com/repos/apache/maven/commits/c2e3b3e301a96e36670206db0c215f3026937d33", "message": "[MNG-6308] display groupId:artifactId in Building message header"}, {"url": "https://api.github.com/repos/apache/maven/commits/98d2e197d111d4863d1e420a9f9c1548690bc7e1", "message": "[MNG-6308] added unit test for \"Building\" message"}, {"url": "https://api.github.com/repos/apache/maven/commits/f5f76c70e1828a7e6c6267fc4bc53abc35c19ce7", "message": "[MNG-6302] display progress at end of \"Building\" line"}, {"url": "https://api.github.com/repos/apache/maven/commits/c19e9dcac3d200094c770521b9b1b10df76f26c4", "message": "[MNG-6242] detect Cygwin/Mingw pseudo terminal for Jansi"}, {"url": "https://api.github.com/repos/apache/maven/commits/4f530c4f006b8d22da90d968a1d32797280804b9", "message": "[MNG-6196] removed remaining Monkey patching, not really necessary\n\ndone after Emmanuel Bourg #118 PR idea"}, {"url": "https://api.github.com/repos/apache/maven/commits/eb2db7b28664dbaac6a59a2189c70d92e455dcea", "message": "[MNG-6196] updated slf4j to 1.7.25\n\n[SLF4J-394] use new slf4j methods done for us\n[SLF4J-395] use slf4j-simple System.out cache"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439921", "body": "on a pure theoretical point of view, I know it looks awkward\non a practical point of view:\n1. did you ever try to write a plugin descriptor by hand? or do you always let plugin-tools generate the descriptor (like the vast majority of plugin developers)?\n2. are you able to give us a xsd description for the configuration element content? and that fits into Modello descriptor, since Modello generates the xsd from .mdo?\n\nI'm not a big xsd expert: any help appreciated to fix the plugin.mdo I wrote to at least document the descriptor \"from a human point of view\" (ie not seeing in general that I had to cheat with configuration element)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440157", "body": "I'm a big fan of XML having an XSD too, we should be able to get along with each other :)\n\nI had to reverse engineer too to write the plugin.mdo that actually documents the descriptor structure as much as possible: but the real source of information is still source code and examples, since this .mdo is only intended as documentation, it's not used by Maven core at all\n\nbut every plugin.xml is really used by Maven core to inject content, so it's really what maven knows from any plugin/mojo: if you look at a plugin.xml in any plugin, you'll see type information in every parameter/type and configuration/name of param/@implementation (= what I couldn't really describe as xsd, and even less make it generated from Modello)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440196", "body": "true\nIn fact, I don't know precisely what is checked during value injection at runtime: this code was written before generics existed, so generics weren't implemented in plugin.xml at this time. I don't know if newer veresion could do something about it: what I know is that whan I updated plugin-tools, I chose not to try to change anything at this level for the moment\n\nnow is perhaps the right moment to have a review on this\nnotice that github comment are probably not the best place, since they are not sent to Maven developer's list: so this discussion is only happening between us: we need more Maven developers to have a chance to actually implement such a feature\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438815", "body": "a typo from a search/replace \"cause\" -> \"t\" :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568586", "body": "ok, MNG-6115 description had not been updated\r\nI'll do the changes", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568727", "body": "didn't know this new method :)", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568734", "body": "I'm doing it, while at it", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514", "body": "\"quiet-transfer-logs\", for consistency with other options, please\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615", "body": "if you try this with current HEAD, Checkstyle will remember you our key coding convention, with spaces around parenthesis :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19627615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747", "body": "should be a( \"Caused by\" ).reset().a( \": \" )\nfixed while merging in Maven\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/66704747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "rfscholte": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/df5169bdf9fead590d48e23fb182d7f73f1deb3d", "message": "[MNG-6330] Parents relativePath not verified anymore"}, {"url": "https://api.github.com/repos/apache/maven/commits/98af937bc6298e82e489b5f0cd3fb0a1c3d37109", "message": "[MNG-6300] Multi module release creates empty directories in war file instead of jars"}, {"url": "https://api.github.com/repos/apache/maven/commits/909fb7c59b87286b6eae36195f65db4776ccf92a", "message": "Merge branch 'MNG-6296'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephenc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/eee06f7d7c736cbc1668dc7eae5dc21fd4b1075f", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/a670c2ea1f592563b756b31d650c9a6db553fbdb", "message": "Ensure any forked Maven executions are not spied on by Jenkins"}, {"url": "https://api.github.com/repos/apache/maven/commits/5411c5a9c4d327d7217ae966be3d1ead807ebfd8", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/3f04e94ea45033fa2768f40148b5e06a141e066e", "message": "Syntax"}, {"url": "https://api.github.com/repos/apache/maven/commits/35f3586eccb1cd7bf3a6585aaa1aeb8f0cd0516b", "message": "Start using some of the jenkinsEnv stuff"}, {"url": "https://api.github.com/repos/apache/maven/commits/5919b7450d2e01f079e930d92df7910af39d489a", "message": "Update DOAP"}, {"url": "https://api.github.com/repos/apache/maven/commits/69c512a8203030f3fee657673b0416bc2a121eae", "message": "Add the serverId to scm-publish so that we do not need to rely on cached svn credentials"}, {"url": "https://api.github.com/repos/apache/maven/commits/3d0efa36963c217527230228a11ab44050ca1b10", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/apache/maven/commits/138edd61fd100ec658bfa2d307c43b76940a5d7d", "message": "[maven-release-plugin] prepare release maven-3.5.2"}, {"url": "https://api.github.com/repos/apache/maven/commits/4b95ad9fce6dfe7eec2be88f5837e96c7fbd7292", "message": "Revert \"MNG-6209 better executeMojo thread context classloader\"\n\nThis reverts commit ec629f7d511eb910b4e80112a9fbe85ed8786f10."}, {"url": "https://api.github.com/repos/apache/maven/commits/cae779e4fbc6565a581f2c6adf9fb15348005603", "message": "Revert \"[MNG-6275] Maven Embedder compatible fix\"\n\nThis reverts commit 27a2bda3f4a8f5385c4cab360ed7365d3d3d3c09."}, {"url": "https://api.github.com/repos/apache/maven/commits/542a7a89156263b34d1472e9d9c1a2795afccd2d", "message": "[MNG-6275] Defang the tests when their core assumption is invalid.\n\n- The tests assume that the JRE has a ScriptEngineFactory\n- Not all JREs have a ScriptEngineFactory (I'm looking at Azul's Zulu Open JDK 7 builds)\n- Ideally we'd skip these tests using Assume.assumeThat(...) but PlexusTestCase doesn't support\n  AssumptionViolatedException for marking tests as skipped.\n\nIssue identified during testing of the 3.5.1 release candidate"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "slachiewicz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/866582d296ed80f36f33e5293cd07647185e0e43", "message": "[MNG-6306] Replace use of Guava in maven-resolver-provider with a lighter weight alternative\n\nThis closes #138"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/154", "title": "[MNG-5967] Correct Mockito scope to test", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/153", "title": "[MNG-6069] Migrate to non deprecated parts of Commons CLI", "body": "Without 2nd commit 719234d when I set -Dstyle.color=never is not working correctly and returns value \"true\" not \"never\"", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/152", "title": "[MNG-5992] Upgrade default version of maven-release-plugin to 2.5.3", "body": "Fix password printout to logs\r\n\r\nCredit to: Ryan J. McDonough", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/150", "title": "[ MNG-6335] Update Mockito to 2.12.0", "body": "Also change scope to test", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/149", "title": "Upgrade maven-checkstyle-plugin to 3.0.0 (Checkstyle 6.18) and fix errors", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coder-hugo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/b2afafe5a252d9f86b3e43cce8a06dc9cdc7a6d7", "message": "Parse properties before configuring the logging settings"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/135", "title": "[MNG-6296] Parse properties before configuring the logging settings", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rmannibucau": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/maven/commits/4d49d3b05b2e3d3a4530bb27e8cc162ab50baa7c", "message": "logging the module count to let the user identify how many module are still to be executed/processed"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ChristianSchulte": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/148", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/147", "title": "[MNG-5527] Dependency management import should support relocations.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/146", "title": "[MNG-4463] Dependency management import should support version ranges.", "body": "Closes #64 without merging. ITs are pending to be committed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/145", "title": "[MNG-6112] Central repository in the 4.0.0 super POM should declare u\u2026", "body": "\u2026pdate policy 'never'.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/144", "title": "[MNG-2893] Update the DefaultPluginManager to not use a project depMa\u2026", "body": "\u2026n for controlling it's transitive dependencies", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/143", "title": "[MNG-5359] Declared execution in PluginMgmt gets bound to lifecycle (\u2026", "body": "\u2026regression)", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/142", "title": "[MNG-6114] Profiles from the global settings should be ordered before\u2026", "body": "\u2026 profiles from the user settings.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/141", "title": "[MNG-6164] Collections inconsistently immutable.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/124", "title": "Make resolver debug log messages for projects and plugins consistent.", "body": "The graph returned by the resolver after resolution is logged at debug level. This pull request only updates those debug log messages to be consistent across project and plugin resolution and to provide as much information as possible to make users aware of what is going on.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/pulls/107", "title": " Fixes to various JIRA issues.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dconneely": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/140", "title": "Add org.slf4j.event to exported packages", "body": "maven-core should export org.slf4j.event.* from slf4j-api 1.7.15 or later.\r\nFor example, this package is where the `Level` class is located.\r\n\r\nOtherwise, issues similar to MNG-5842 and MNG-5845 will arise with plugins that use Slf4j themselves (or more likely plugins that use libraries that use Slf4j).\r\n\r\nDiscovered while working on in-house Maven plugin that failed with `java.lang.NoClassDefFoundError: org/slf4j/event/Level`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bengtsod": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/139", "title": "[MNG-6298] 3.5.2: ClassNotFoundException", "body": "Adding exportedPackage to find class:\r\njavax.annotation.security.RolesAllowed\r\n\r\nFirst maven commit :) Works but might be deeper issue", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "msimacek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/134", "title": "[MNG-6294] Convert MavenPluginValidator into a plexus component", "body": "Patch for https://issues.apache.org/jira/browse/MNG-6294", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jtnord": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/133", "title": "[MNG-5600] Dependency management import should support exclusions.", "body": "https://github.com/ChristianSchulte/maven/commit/679a34b86e3d69b7a832481c7f21e5eab367cd11 cherry picked into master\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-5600", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ankon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/132", "title": "Fix the Javadoc to use a proper @link tag when pointing to ProjectBuilder", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MichaelWarnecke": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/131", "title": "[MNG-6213] Validate scope in dependencyManagement", "body": "This is a patch for MNG-6213: https://issues.apache.org/jira/browse/MNG-6213", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "etzelc": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/128", "title": "[MNG-6256] Surround variables in echo command with double quotes", "body": "This is a patch for issue MNG-6256. https://issues.apache.org/jira/browse/MNG-6256", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "grkvlt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/127", "title": "[MNG-6255] Fix concat_lines in mvn to deal with CRLF", "body": "Change `tr` command to deal with CRLF line endings properly.\r\n\r\nThis was triggered by running the `mvn` shell script on a Windows machine (with the Git bash shell and utilities) against a GitHub repository generated on a Mac, which contained a `.mvn/jvm.config` file with CRLF line endings.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-6255 for further details.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sharabaddin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/126", "title": "Update code style quikstart-arhetype", "body": "correct code style(most standart)\r\nand change correct history \"Hello, World!\"", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dbmeneses": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/125", "title": "[MNG-5965] Parallel build multiplies work if multiple goals are given", "body": "\r\n[mng-5965.zip](https://github.com/apache/maven/files/1124059/mng-5965.zip)\r\nThis p/r should also fix MNG-5705.\r\n\r\n### Problem\r\nWhen multiple tasks are given so that they are grouped in different task segments, the MultiThreadedBuilder fails. \r\nThe reason is that it creates project segments, which is a set of unique pairs of (module, task).\r\nIt then handles each task separately, and it will schedules the build of the task for **all** root module in those pairs, instead of scheduling only the root modules which are associated with that particular task.\r\n\r\n### Example\r\nFor example, given the project with the following hierarchy of modules:\r\n```\r\nroot\r\n-- module1\r\n```\r\n\r\nIf we run `mvn task1 task2`, being task2 an aggregating task, we get the following project segments:\r\n   (task1, root), (task1, module1), (task2, root).\r\n\r\nThe MultiThreadedBuilder will first handle task1, and will schedule the build of: (task1, root), (task1, root).\r\nEach of these builds will then recursively build its children, meaning that _task1 will be executed twice for every module in the project_.\r\n\r\n### Fix\r\nThis fix changes the builder so that it considers the project segments of each task segment separately, by creating a ConcurrencyDependencyGraph for each task segment.\r\n\r\n\r\n### Related\r\nI believe that MNG-5705 is a consequence of the same problem, because the builder will not count correctly the number of projects that are built because of the shared ConcurrencyDependencyGraph, resulting in a NPE.\r\n\r\n### Test\r\nI opened a separate P/R to add an IT for this issue: https://github.com/apache/maven-integration-testing/pull/22\r\n\r\nIt uses a very simple multi module project, which is attached here too.\r\n\r\nTo reproduce:\r\n```\r\nmvn clean install:help install -T10\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Summary:\r\n[INFO] \r\n[INFO] module-1 ........................................... SUCCESS [  0.069 s]\r\n[INFO] module-2 ........................................... SUCCESS [  0.069 s]\r\n[INFO] base-project ....................................... SUCCESS [  0.001 s]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 0.197 s (Wall Clock)\r\n[INFO] Finished at: 2017-07-05T11:06:42+02:00\r\n[INFO] Final Memory: 8M/240M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] NullPointerException\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n```\r\n\r\nNote the clean goal being executed twice for each module, and the NPE (as described by MNG-5705).\r\n\r\nExpected result, after the fix:\r\n```\r\n/tmp/apache-maven-3.5.1-SNAPSHOT/bin/mvn clean install:help install -T10\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-install-plugin:2.4:help (default-cli) @ base-project ---\r\n[INFO] Maven Install Plugin 2.4\r\n  Copies the project artifacts to the user's local repository.\r\n\r\nThis plugin has 3 goals:\r\n\r\ninstall:help\r\n  Display help information on maven-install-plugin.\r\n  Call mvn install:help -Ddetail=true -Dgoal=<goal-name> to display parameter\r\n  details.\r\n\r\ninstall:install\r\n  Installs the project's main artifact, and any other artifacts attached by\r\n  other plugins in the lifecycle, to the local repository.\r\n\r\ninstall:install-file\r\n  Installs a file in the local repository.\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ebourg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/118", "title": "Upgrade SLF4J to 1.7.25", "body": "The changes to SLF4J required to support maven-slf4j-provider have been [released ](https://jira.qos.ch/browse/SLF4J-394) in the version 1.7.25. If I'm not mistaken it should be possible to remove the patching tweak now.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eis": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/117", "title": "[MNG-5756] Java home output in mvn -v is misleading", "body": "Renamed previous printing of JRE to \"JRE used\" and provided\r\nseparate mechanism to actually tell value of JAVA_HOME", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcelosv": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/115", "title": "Change out JAVA_HOME. Add JRE used. JRE used print /jre and JAVA_HOME\u2026", "body": "I read the discursion of issue MNG-5756 and I change code out for JAVA_HOME and JRE.\r\nNow, print two information to JAVA.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevin-canadian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/maven/pulls/112", "title": "Fix snapshot regular expression", "body": "The snapshot regular expression should only match an explicit period.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "olamy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504", "body": "patch applied.\nYou can close this pr \nThanks !\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14465504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749", "body": "to run integration test\ngit clone https://git-wip-us.apache.org/repos/asf/maven-integration-testing.git\ncd maven-integration-testing\nmvn clean install -Prun-its (with M2_HOME to your fresh maven core build or -DmavenHome=path to your maven core build)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17331749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "mcculls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735", "body": "Cheers\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14472735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355", "body": "Note that https://jira.codehaus.org/browse/MNG-5446 / https://github.com/apache/maven-integration-testing/pull/3 is also required to clean up an IT that depends on some broken behaviour in the old Data configurator that's now fixed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14842355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860", "body": "Verified that this patch has been applied, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14861860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862", "body": "Applied by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=8b97b0a2dae4ab8b8b5cc614ca58b329af2ce6ff - thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15076862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=c5f161a8d6855222be1bc3cb167d46bb18aaf167\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15133729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359", "body": "Merged by @jvanzyl in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=34a8c6ce3b54ff28cdf682df2699b2849c717182\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15349359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/2817036", "body": "Was this commit meant to bring in Eclipse/Aether as well? This breaks the build as the code still depends on org.sonatype.aether.*\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/2817036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jvanzyl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222", "body": "Applied at Apache.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14841222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327", "body": "Applied. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/14995327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209", "body": "Commited on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43700209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134", "body": "Committed on 65863e0a28298b6d95bfbbf7cc28953f6ba91f93\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313", "body": "We'll just go for the 1.0.0 as its out now but I need to do some testing first.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504", "body": "Committed on Committed on bef7fac6e3495dae57a44e6a5902afd89c74b196\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43701504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901", "body": "Please squash this commit and I'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44266901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937", "body": "The link: [MNG-3092](https://jira.codehaus.org/browse/MNG-3092)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/15639937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035", "body": "`mvn clean install test integration-test` passes with this change.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752", "body": "Also did the following at @stephenc\u2019s suggestion, in case that is more exacting:\n\n```\nrm -rf ~/.m2\nM2_HOME=/tmp/maven ant all\n/tmp/maven/bin/mvn clean install -Prun-its -B -U -V\n```\n\nwhich worked though\n\n```\n[WARNING] The requested profile \"run-its\" could not be activated because it does not exist.\n```\n\nReally there should be a pull request builder for this sort of thing, so I do not have to guess what tests you expect to be run!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17176752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130", "body": "I get the same errors from my branch as from the `master` commit it is based on:\n\n```\nTests in error: \n  MavenITmng3983PluginResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:58 \u00bb Verification\n  MavenITmng3970DepResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3948ParentResolutionFromProfileReposTest>AbstractMavenIntegrationTestCase.runTest:220->testitFromPom:78 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredHttp:123 \u00bb Verification\n  MavenITmng3652UserAgentHeaderTest>AbstractMavenIntegrationTestCase.runTest:220->testmng3652_UnConfiguredDAV:175 \u00bb Verification\n  MavenITmng3372DirectInvocationOfPluginsTest>AbstractMavenIntegrationTestCase.runTest:220->testDependencyTreeInvocation:83 \u00bb Verification\n\nTests run: 716, Failures: 0, Errors: 6, Skipped: 0\n```\n\nMaybe due to my use of a `*`-mirror? Another reason to have a standard PR builder which is known to pass all trunk tests.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17513130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335", "body": "Claimed merged in 2eb419ed95ccfdd80c5755890e649a49274cceca.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/31657335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kunalsomani": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395", "body": "Are you going to merge into main branch?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/17094395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "seblm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353", "body": "I've followed [this guide](http://maven.apache.org/guides/development/guide-m2-development.html#Dont_forget_tests) to run the integration tests. Result was ok (but took a lot of time :smile:)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/42782353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337", "body": "@jvanzyl please let me know if you want something else to be done on this pull request before you could merge it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43689337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cstamas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186", "body": "Agreed, closing this out.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/43733186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "michael-o": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998", "body": "Nice, I think the wording of the log message contains a duplicate:\n\n\"Using the builder %s with a thread count of %s\", that result in \"Using the builder XyzBuilder with a thread count of 4\". Builder is printer twice, in my opinion unnecessary.\n\nHow about \"Using the %s implemenation with a thread count of %d\"?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44029998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928", "body": "Emberassing, thanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44084928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804694", "body": "Don't! Always through a NPE if null is passed.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/13810086", "body": "Right, see my ongoing effort on this: https://issues.apache.org/jira/browse/MNG-5649\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13810086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402248", "body": "Why is this `close` necessary? The new `try` clause should handle it, shouldn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402248/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/18402253", "body": "Same as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/18402253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19438684", "body": "What is 'td'?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19438684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/19860040", "body": "It would likely to improve readability but given that this is internal stuff, I see no huge gain here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19860040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567994", "body": "As far as I remember from the ticket, we agreed to use `lib/ext` because this is for the user and `lib` is solely for us.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20567995", "body": "See above.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20567995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568011", "body": "Changes on `CLIManager` from 5fb4bc9a237ad2c19c5851b89d0ed810d2eff02d are missing. Especially, ` (disables output color)` on batch mode and log file.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568013", "body": "Go for `System.lineSeparator()`, if this `static` is necessary at all.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568028", "body": "Use `PrintStream`s ability like `print()` or `println()` to avoid `NEWLINE` at all and don't invoke `toString()` on objects with `PrintStream`. [It will do for you](https://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html#print(java.lang.Object)).", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20568261", "body": "This should be namespaced and contain all attributes just like other assemblies here.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20568261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623249", "body": "Here is trailing whitespace", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20623254", "body": "This block contains trailing whitespace too.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20623254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655729", "body": "consists of...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/comments/20655730", "body": "Javadoc...", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/20655730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234", "body": "Please remove that whitespace\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/19860234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541", "body": "This should resolve to a release version.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297", "body": "Not related to the PR, please remove.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348", "body": "Please use Commons Lang as I have done it recently on other modules in Maven.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/42421348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272", "body": "Indent as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444", "body": "Unrelated change, revert!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/67234444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937", "body": "Why is this check not present in the shell script?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941", "body": "This should go to `stderr`.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86662941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "nerro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484", "body": "Make sense. I will correct it.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44082484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431", "body": "copy-paste is not always good :smile: => typo in word \"implementation\"\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44083431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Humbedooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870", "body": "Testing integration with the maven dev ML, please ignore :)\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44127870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "nmusienko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/apache/maven/issues/comments/44252636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davidmoten": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/6439715", "body": "what a mess, xml without schema!\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6439715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440111", "body": "I was interested in writing tooling around composing plugins maximising\ntype safety for example but was disappointed that the definition of a\nplugin's configuration was not something I could reverse engineer\nsatisfactorily from the plugin.xml and in the process discovered that the\nplugin.XML didn't have an xsd making more guesswork out of the process. I\nused xpath to get stuff out of it in the end but I stopped work when I\nrealised that my only hope was parsing plugins' source code.\n\nI'm a big fan of XML always having an xsd but I probably won't be able to\ncheck out modello and get an xsd happening in the near future and I'm\nassuming for my interests that it won't help much either. I wonder if real\ntype information for configuration will turn up in plugin.xml sometime?\n\nThanks for chasing it.\nD\nOn 25 May 2014 18:14, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> on a pure principle, I know it looks awkward\n> on a practical one:\n> 1. did you ever try to write a plugin descriptor by hand? or do you always\n> let plugin-tools generate the descriptor (like the vast majority of plugin\n> developers)?\n> 2. are you able to give us a xsd description for the configuration element\n> content? and that fits into Modello descriptor, since Modello generates the\n> xsd from .mdo?\n> \n> I'm not a big xsd expert: any help appreciated to fix the plugin.mdo I\n> wrote to at least document the descriptor \"from a human point of view\" (ie\n> not seeing in general that I had to cheat with configuration element)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6439921\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/6440162", "body": "Yep some type information but limited. Collections of type T for instance\nthere is no mention of T in plugin.xml\nOn 25 May 2014 19:52, \"Herv\u00e9 Boutemy\" notifications@github.com wrote:\n\n> I'm a big fan of XML having an XSD too, we should be able to get along\n> with each other :)\n> \n> I had to reverse engineer too to write the plugin.mdo that actually\n> documents the descriptor structure as much as possible: but the real source\n> of information is still source code and examples, since this .mdo is only\n> intended as documentation, it's not used by Maven core at all\n> \n> but every plugin.xml is really used by Maven core to inject content, so\n> it's really what maven knows from any plugin/mojo: if you look at a\n> plugin.xml in any plugin, you'll see type information in every\n> parameter/type and configuration/name of param/@implementationhttps://github.com/implementation(= what I couldn't really describe as xsd, and even less make it generated\n> from Modello)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/apache/maven/commit/19247f363bee07d1afc6f8902f4083fd890fc47a#commitcomment-6440157\n> .\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/6440162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "barthel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/13804883", "body": "+1\nBut, I'm oriented on the current used pattern like in #setRepositoryEventDispatcher or #setSyncContextFactory.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/13804883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trajano": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/maven/comments/19856369", "body": "Perhaps the string could be built using String.format() instead of StringBuilder.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19856369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/comments/19862572", "body": "Its more for people who would want to try and learn.  But then there's a lot of other things to look at too https://sonarqube.com/dashboard/index?id=org.apache.maven%3Amaven I put in a PR #97 that would at least help bring it up sooner.", "reactions": {"url": "https://api.github.com/repos/apache/maven/comments/19862572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kwin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741", "body": "This <prerequisites> is still supported for Maven Plugins (https://issues.apache.org/jira/browse/MNG-5501?focusedCommentId=14419813&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14419813), therefore rather than deprecating that I would add a hint, that this should only be used for packaging \"plugin\".\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/32460741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "jdillon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607", "body": "Yup, working on that; marked the PR as WIP until I can get this sorted out\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/64118607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rajivpjs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276", "body": "I will work on this and have this done shortly. What do you mean by WDYT?\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71405276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078", "body": "oh ok!!!\n\nI think it is a great idea. Usually, when I want to test for Exceptions I use annotation approach like having @Test(expected = Exception.class). However, looking at the existing examples of Apache I couldn't find any. So, I actually learnt the Rule approach is kind of equivalent. I am just applying the change.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/71407078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082", "body": "Well spotted. Sorry, this was accidental. I will revert this change shortly.\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/72126082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rpatrick00": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111", "body": "Like it or not, sh and cmd are different and have different capabilities.  In the sh script, we know that the directory exists because of the check for existence of the POM file.  I easily can add the POM file existence test to the cmd script and print the same errors if the pom file does not exist.\n\nIn the cmd script, I need to check for the existence of the extracted directory because if, for some reason, the directory extracted doesn't exist (e.g., a bug in the extraction code), the user gets a cryptic error.  The same is not true for the sh script.\n\nI will add the redundant check to the sh script too just for symmetry purposes...\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117", "body": "OK\n", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/86667117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsoref": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624", "body": "This would be an api change. I'm not even sure if this is a correct word.\r\nI'm fairly confident that you are using two spellings for the same concept.", "reactions": {"url": "https://api.github.com/repos/apache/maven/pulls/comments/97253624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}