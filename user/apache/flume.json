{"_default": {"1": {"szaboferee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/ffc5554438aceb24eabc9815511285f069084968", "message": "FLUME-3115. Update netty library\n\nThis change upgrades the netty library to 3.10.6 and also adds netty-all 4.1.17\n\nThis closes #155\n\nReviewers: Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8466766538ed7e8325abf81392008b1d9de8a1f6", "message": "FLUME-3201. Fix SyslogUtil to handle RFC3164 format in December correctly\n\nThis closes #188\n\nReviewers: Tristan Stevens, Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c7b95a746ba8ffd0337540e3233032d2b071c648", "message": "FLUME-3159. Setting JdbcChannel test connection to in-memory derby\n\nThis patch changes the JdbcChannel tests to use in-memory derby to make parallel\ntest run possible.\n\nThis closes #177\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8b3fad52b2da1510fa066ded2816b9cfc35f22e1", "message": "Changing javax.jms to geronimo jms spec\n\njavax.jms has GNU GPL licence which is not compatible with Apache\n\nThis closes #172\n\nReviewers: Miklos Csanady, Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/773555c5c7d09650f8f4173ced232954b1a3a361", "message": "FLUME-3127. Upgrade libfb303 library dependency\n\n- thrift version changed to 0.9.3\n- thrift objects generated with the new version\n- deprecated method calls updated in ScribeSource\n- cross-compatibility tested with Flume 1.6 and 1.7\n\nThis closes #163\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcsanady": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/8324af363216a45603830909c19a3b26e6625205", "message": "FLUME-3194 upgrade derby to the latest version\n\nCurrent derby version contains security vulnerabilities.\nThis update will upgrade to a later version.\n\nThis closes #184\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d116f9707d5b5da501b1bb9a5fca812db7ce849b", "message": "FLUME-3158: Upgrade surefire version and config\n\nSet surefire version to the latest and configure it\nto rerun failed tests.\nThis way the flaky tests will not break the build as often.\n\nThis closes #182\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ed288acba39bfd611c10b338e36224c1415c2c4c", "message": "FLUME-3186. Make asyncHbaseClient config parameters available from Flume config\n\nThis patch adds the ability to set the asyncHbaseClient's config parameters via\nthe Flume configuration.\n\nThis closes #178\n\nReviewers: Ferenc Szabo, Denes Arvay\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d434d23dadc411e5d7486447316172c495d70f22", "message": "FLUME-3173. Upgrade joda-time to 2.9.9\n\nThis closes #169\n\nReviewers: Marcell Hegedus\n\n(Miklos Csanady via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/180", "title": "FLUME-3190: flume shutdown hook issue when both hbase and hdfs sink a\u2026", "body": "When both hdfs and hbase sink are in use, during shutdown (KILL SIGTERM), the hdfs sink won't be able to rename/close the .tmp hdfs file because the underlying filesystem could be closed earlier when shutting down the other component.\r\n\r\nThis change registers a new ShutdownHook in the hadoop's ShutdownHookManager, which will prevent other hooks to run until Flume stops itself.\r\n\r\nTested on a cluster which could reproduce the error before the change, but eliminated after.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rgoers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/fbc7a68e7e8cafe3265af649f6c56f665fd10b19", "message": "Merge branch 'trunk' into flume-2050"}, {"url": "https://api.github.com/repos/apache/flume/commits/6813d9cbdde5a677453f5aa429715ce96c4540e0", "message": "Upgrade to Log4j 2.10.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/e4fd6ab31f54259b7dde33b7a30c3a098da3c07f", "message": "Remove more references to log4j 1"}, {"url": "https://api.github.com/repos/apache/flume/commits/6b6605c06ff09224378159aa5466b593c5876e28", "message": "Update configuration to match log4j 1.x"}, {"url": "https://api.github.com/repos/apache/flume/commits/4bb5e88eccf7e9676eb527bd0fa7ecfc9bce50f2", "message": "FLUME-2050 - modify pattern layout so NDC is ignored if it has no data"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a07fbf04004662c095b80474a0cdc9a922cde33", "message": "FLUME-2050 remove spurious files"}, {"url": "https://api.github.com/repos/apache/flume/commits/140ea5d2808b7f6fce496e5e2d175821f302f25b", "message": "FLUME-2050 Upgrade to Log4j 2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andrasbeni": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/e4312ad1acfd28e23405e6775374948fa35d5e40", "message": "FLUME-199. Remove hardcoded ports from unit tests\n\nMany unit tests use hardcoded port numbers which leads to flakiness and causes\nproblems when running builds in parallel.\nThis patch fixes this issue by searching for available ports instead of the\nhardcoded ones.\n\nThis closes #124\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Andras Beni via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/108", "title": "FLUME-3056 TestApplication hangs indefinitely", "body": "Skip configuration handling in Application while stop() is running", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmgstevens": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/580f781341b42672f234af069b9190ff1cc00dca", "message": "FLUME-2698. Upgrade Jetty Version\n\nUpdate Jetty version to 9.4.6.\nBeside the version upgrade this patch exposes the new Jetty's configuration\nvariables on the HTTPSource to provide users the possibility of fine-tuning\nthe HTTPSource.\n\nThis closes #158\n\nReviewers: Ferenc Szabo, Mike Percy, Miklos Csanady, Denes Arvay\n\n(Tristan Stevens via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/54e2728a8e141ee63704018c4497bbe083c0f75f", "message": "FLUME-3046. Kafka Sink and Source Configuration Improvements\n\nThis patch fixes the infinite loop between Kafka source and Kafka sink\nby introducing the following configuration parameters in those components:\n- topicHeader in Kafka source to specify the name of the header where it\n  stores the topic name where the event comes from.\n- setTopicHeader in Kafka source to control whether the topic name is stored\n  in the given header.\n- topicHeader in Kafka sink to configure the name of the header which\n  is used to specify in which topic to send the event.\n- allowTopicOverride in Kafka sink to control whether the target topic's name\n  can be overridden by the specified header.\n\nThis closes #105\n\nReviewers: Attila Simon\n\n(Tristan Stevens via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adenes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/99f591994468633fc6f8701c5fc53e0214b6da4f", "message": "Fix source assembly\n\nflume-checkstyle breaks the assembly because its parent is not the flume-parent\nRemoving the moduleSets definition from the src assembly solved the issue.\nFiles are added based on fileSets, the resulting tarball's content equals\nto the result of the dev-support/generate-source-release.sh in a clean\nworking directory.\n\nThis closes #175\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/82e9f4d4845934ea77c26be491dc5a856970c7bd", "message": "FLUME-3164. Update version to 1.9.0-SNAPSHOT in pom.xmls and documentation files"}, {"url": "https://api.github.com/repos/apache/flume/commits/7e6c3f1f4122648b2ed9ca5a77f57b7139a369cc", "message": "FLUME-3166. Update LICENSE\n\nAdding geronimo-jms_1.1_spec jar to the Apache licensed list."}, {"url": "https://api.github.com/repos/apache/flume/commits/2bdb8323eb1abb28d443471b19a3a5bdae58f0bb", "message": "FLUME-3178. Update RELEASE-NOTES for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/0c4260801c6dfee0003e437b0a7ca5a6cc7391f3", "message": "FLUME-3168. Update CHANGELOG for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/b359f32e324fb815c0506f3bad016187a0b7765e", "message": "Set the copyright date dynamically in documentation footer\n\nDisplay \"2009-current year\" instead of the hardcoded \"2009-2012\".\n\nThis closes #171\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1541f089a5dec9b21549f6a6e961ef835a8b68bb", "message": "FLUME-3175. Turn off doclint for javadoc generation\n\nWith Java 8's new doclint feature the javadoc generation breaks due to the\nstrict checking so adding -Xdoclint:none to the maven-javadoc-plugin's\nconfiguration.\n\nThis closes #168\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a3f3c76f01d8a2c204b94dec7d3c7b3c68e7136", "message": "Fix NetCat UDP Source table in FlumeUserGuide.rst\n\nThis closes #170\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/13771c905316052d3e94aeb3b4a0d49a27c0f852", "message": "FLUME-1520. Timestamp interceptor should support custom headers\n\nThis change adds a configuration parameter to the TimestampInterceptor\nfor the user to be able to define the name of the timestamp header.\n\nReviewers: Tristan Stevens, Attila Simon\n\n(Hari Shreedharan, Tristan Stevens, Attila Simon via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/115", "title": "Doc fix: Size of files created by HDFS Sink won't necessarily match the configured rollSize value", "body": "Updated the description of the HDFS Sink's `hdfs.rollSize` property to reflect the actual behaviour: it keeps track of the size of the incoming events' body thus the size of the created files won't necessarily match the configured value.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018", "body": "There are a couple of copy-paste lines here and there, could you please refactor it a little bit?\ne.g. extract the `reader.readEvents-reader.commit` loops to a method.\nThe assertion part (`listFiles`, checking the count, removing from the `expectedLeftFiles`, checking the emptiness of it) might be possible to extract too, to improve the readability of the code. (e.g. `void assertExpectedLeftFiles(String... expectedFileNames)`)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145", "body": "Wrong indentation, it should be in line with the `Assert` above.\nNote: we use 2 spaces for indentation.\nYou can verify whether your code conforms to Flume's code formatting guidelines by running checkstyle on it: `mvn clean verify -DskipTests -Drat.skip`, please run it, there are a couple of other warnings too.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269", "body": "I tried it, there is no difference regardless of whether it's excluded or not. Moreover I discovered that removing all the project dirs from the exclude list has no impact on the files in the src package. I suppose `**/target/**` does the job.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591", "body": "As it's about the output of a shell script I don't expect to have non-ascii characters, that's why I decided to use iso-8859-1 by default. I might be wrong so I'm open to reconsider this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313", "body": "You are right, thanks, will commit the fix soon.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bessbd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/5405fc68c657fe6f2aabe14aa5cd19c781a032ea", "message": "Add README.md and doap_Flume.rdf to the generated release artifacts\n\nThis closes #69\n\n(Cherry-picked from flume-1.7 branch by Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19431057", "body": "@satiatcloudera \nI have reformatted your commit message so that it conforms the release guideline: https://cwiki.apache.org/confluence/display/FLUME/How+to+Release and the previous related commits (see 5e400ea8c471ef41c12dd8ad2079ac8a351ec509 and d40abcbfbf31528dbbb1739118ddb1dc60bfbeeb)\n\nAlso, afaik, git commit messages are only modifiable by rewriting history ( https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History ), which should be avoided ( http://stackoverflow.com/questions/1491001/what-are-the-practical-consequences-of-rewriting-git-history ).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007", "body": "When I remove the MAVEN_SKIP_RC setting, the build fails.\n\nI think, that line is required. I'll include a comment about this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951", "body": "This should be FLUME\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039", "body": "Jira -> JIRA?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174", "body": "Maybe we should update this for pull requests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035", "body": "Why iso-8859-1?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228", "body": "Maybe we should add the \"Reviewers:\" line here (and \"This closes #x\") if it's a pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "asdf2014": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/194", "title": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup", "body": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup.\r\n\r\nGet more details from my blog: [yuzhouwan.com](https://yuzhouwan.com/posts/31915#LongAdder).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Guangxian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/193", "title": "FLUME-3207:Fix some typos in TestReliableSpoolingFileEventReader", "body": "There is a mistake in `testConsumeFileOldestWithLexicographicalComparision`\r\n```java\r\npublic void testConsumeFileOldestWithLexicographicalComparision()\r\n      throws IOException, InterruptedException {\r\n    ReliableEventReader reader =\r\n        new ReliableSpoolingFileEventReader.Builder().spoolDirectory(WORK_DIR)\r\n                                                     .consumeOrder(ConsumeOrder.OLDEST)\r\n                                                     .build();\r\n    File file1 = new File(WORK_DIR, \"new-file1\");\r\n    File file2 = new File(WORK_DIR, \"new-file2\");\r\n    File file3 = new File(WORK_DIR, \"new-file3\");\r\n    Thread.sleep(1000L);\r\n    FileUtils.write(file3, \"New file3 created.\\n\");\r\n    FileUtils.write(file2, \"New file2 created.\\n\");\r\n    FileUtils.write(file1, \"New file1 created.\\n\");\r\n    file1.setLastModified(file3.lastModified());\r\n    file1.setLastModified(file2.lastModified());\r\n    // file ages are same now they need to be ordered\r\n    // lexicographically (file1, file2, file3).\r\n    List<String> actual = Lists.newLinkedList();\r\n    readEventsForFilesInDir(WORK_DIR, reader, actual);\r\n    List<String> expected = Lists.newLinkedList();\r\n    createExpectedFromFilesInSetup(expected);\r\n    expected.add(\"\"); // Empty file was added in the last in setup.\r\n    expected.add(\"New file1 created.\");\r\n    expected.add(\"New file2 created.\");\r\n    expected.add(\"New file3 created.\");\r\n    Assert.assertEquals(expected, actual);\r\n  }\r\n```\r\nThe code is incorrect. To set the same modify time for the three files, code should be:\r\n```java\r\nfile2.setLastModified(file1.lastModified());\r\nfile3.setLastModified(file1.lastModified());\r\n```\r\nTest `testConsumeFileYoungestWithLexicographicalComparision` has the same mistake.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/192", "title": "FLUME-3205:Remove unnecessary 'synchronized' in ResettableFileInputStream", "body": "I found no concurrent access to ResettableFileInputStream object in flume code.\r\nRemove 'synchronized' will improve performance of SpoolDirectorySource.\r\nTested with a file of 200MB\uff0cwith 'synchronized' it took 9 seconds to read the file.\r\nWithout 'synchronized' it took 7 seconds.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wtx626": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/191", "title": "dataset sink support non-avro", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanwei002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/187", "title": "Flume 1.8", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vegiapparao": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/185", "title": "Feature/kafka 2.12 1.0.0", "body": "This PR has the changes to get Apache Flume working with the latest version if Kafka client.  We had issues getting one of the authentication types working with older version of Kafka client.  Its working with Kafka_2.12_1.0.0.\r\n\r\nFew tests are failing (most of the times they are related to VM crash/time out)  in flume-kafka-channel project, I will be fixing them, but I am creating this PR for an early feedback.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ishitbatra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/179", "title": "comments added", "body": "comments are added", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunLuo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/176", "title": "add redis channel", "body": "In some cases, we need events can not be lost. But we don't want to install zk & kafka. \r\nTo make event deliver only once and to deploy many flume agents in different nodes but share only one channel, we developed redis channel. \r\nWe already use the redis channel in out production environment, and we want to feed back to flume.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "movit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/173", "title": "FLUME-3179 Fix file channel size", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HbnKing": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/167", "title": "modifying log4j file read repeatedly error", "body": "The  `log4j `files always segmentalized  the file by date and  log file size . but the  `taildirSource` regard it as a new file    .so the  data collected repeatly.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zyfo2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/159", "title": "FLUME-3149 reduce cpu cost for taildir file source while still maintaining reliability by using posFile in memory channel", "body": "File channel tracks transferred events and use transnational mechanism to make transfer recoverable. However, it increases CPU cost due to frequent system calls like write, read, etc. The Cpu cost could be very high if the transfer rate is high. \r\nIn contrast, Memory channel has no such issue which requires only about 10% of CPU cost in the same environment but it's not recovered if the system is down accidentally.\r\nFor sources like taildir, I propose we could write position file in memory channel to achieve reliability and reduce CPU cost.\r\nAfter testing on my own production environment, CPU usage dropped from 13% to 3% and still maintain reliability.  \uff08Transfer rate: 1Mb/s ,  kafka sink, file channel -> memory channel with pos file)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dufeng-g": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/150", "title": "Flume 1.7", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lingjinjiang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/147", "title": "[FLUME-3133] Add a 'ipHeader' config in both tcp and udp syslog source", "body": "When I use the syslog source, I use the \"host\" header to tell where the event come from.However, when change the format of syslog service, the \"host\" header willl be missing.\r\n\r\nSo I add a new config named \"ipHeader\" which looks like the \"portHeader\" in Multiport Syslog TCP Source.\r\nWhen this config is specified, a header will be added.\r\n\r\nFor more detail: \r\nhttps://issues.apache.org/jira/browse/FLUME-3133", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/113", "title": "[FLUME-3068] Ignore hidden files in TaildirMatcher", "body": "[https://issues.apache.org/jira/browse/FLUME-3068](url)\r\nWhen using the taildir to monitor a directory, hidden files in the directory are tailed by the source.\r\nAs the hidden files are often temp files, config files or the files which not want to be tailed, so it's necessary to ignore the hidden file when using the taildir source. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ShaoboAi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/145", "title": "bugfix type incompatible", "body": " ChannelSelectorConfigurationType cannot equal  ChannelConfigurationType", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gangken": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/144", "title": "Flume-2786. Fixed nested monitor lockout with polling trial of application lock.", "body": "This issue was discussed at [FLUME-2786](https://issues.apache.org/jira/browse/FLUME-2786), and I'd uploaded a patch for 1.6.0. Now I tried to apply the patch to trunk.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TeddyBear1314": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/140", "title": "small fix correct typo", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukangping": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/138", "title": "[FLUME-3090]Cassandra Sink module.", "body": "Here is the basic module for cassandra sink, which is used in our product code for collecting specific log event into the cassandra table.\r\nThere are 2 event serialization options: JsonCassandraEventSerializer and RegexCassandraEventSerializer.  For the property configuration, should be specified as:\r\n\r\na1.sinks.k1.type = cassandra\r\na1.sinks.k1.serializer = org.apache.flume.sink.cassandra.JsonCassandraEventSerializer\r\na1.sinks.k1.cassandra.contactPoints = 172.30.10.241\r\na1.sinks.k1.cassandra.username = test\r\na1.sinks.k1.cassandra.password = test\r\na1.sinks.k1.cassandra.keyspace =test_keyspace\r\na1.sinks.k1.cassandra.table = test_table\r\na1.sinks.k1.datetime.format = yyyy/MM/dd HH:mm:ss\r\n\r\nCheers.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stakafum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/136", "title": "[FLUME-3098] Add Amazon Kinesis Stream Sink", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/133", "title": "[FLUME-3096] add Google Cloud Pub/Sub Source", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iaiengxia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/135", "title": "[FLUME-3095]add capacity unit support in configuration file", "body": "FLUME-3095\r\nBy the way I want to ask, how to modify the **User Guide Documentation**", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "leocook": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/130", "title": "bugfix: when the file is rename, it's pos becomes to 0,and it will be send to\u2026", "body": "when the file is rename, it's pos change to 0,and it will be send to channel repeatedly.It looks like a bug to me,when I collect log what create by log4j etc.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scottkp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/123", "title": "Added support for Filter Queries read from config file", "body": "Added support for optional property in config file for Twitter Source. E.g. if keywords property is provided:\r\n...\r\na1.sources.r1.type = org.apache.flume.source.twitter.TwitterSource\r\na1.sources.r1.keywords = word1,word2,word3\r\n...\r\n\r\nOtherwise, existing functionality of twitterStream.sample() is invoked.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "geoffroyvergne": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/119", "title": "Elasticsearch5 sink", "body": "Hi Flume team,\r\nI worked for my company on this patch to be able to use ElasticSearch 5 with flume.\r\nWe heavy use Flume with Hadoop and ElasticSearch as well.\r\nWe are testing this patch that seams to work properly\r\nI thought it could be helpfull for some of your users\r\n\r\nLet me know if you have any questions\r\n\r\nGeoffroy", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hangc0276": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/114", "title": "\"idleFuture\" should reset to \"null\" after idle bucket closed", "body": "If we use \"idleTimeout\" to roll file, once the flush() method called, it will start a delayed thread to close the idle bucketWriter. The delayed thread will call close() method to check whether the \"idleFuture\" is done, and close opened file. If the \"idleFuture\" is running when checking, the idleFuture.isDone() method will return false, and the idleFuture won't be set to \"null\". When the bucketWriter calls flush() on the next time, the \"idleFuture\" is not \"null\" and idleFutrue.cancel(false) method returns false due to the \"idleFuture\" has completed in the last call. So new thread won't be created to close current idle bucketWriter and keeps current file openning.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chenjianwei3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/112", "title": "\"[FLUME-3067][Shell]Defalut JAVA_OPTS \"-Xmx20m\" may be conflicted with cuctom defines.\"", "body": "When write a Flume bootstrap shell, set the environment variable FLUME_JAVA_OPTS with the defined values as the min(-Xms) \r\nand max(-Xmx) heap size for the JVM, then call \"bin/flime-ng\" to start Flume. \r\nSucceed to start, but the defalut \"-Xmx20m\" is still in process JVM options.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bharatjiitd": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/110", "title": "FLUME-3023 {variable} substitution doesn't work for property 'fileSuffix'", "body": "Escaped the suffix before passing it to bucket writer. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "keyki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189", "body": "We are planning to start flume agents dynamically and it comes handy to be able to override parameters of a base configuration file without actually touching and modifying it, for example change the bind port.  \n\nExample:  \n\nagent.sources.avro-collection-source.bind = localhost\nagent.sources.avro-collection-source.port = 50000\nagent.sinks.hdfs-sink.hdfs.path = hdfs://localhost:9000/flume\nagent.channels.memoryChannel.capacity = 20000\n\nflume-ng agent -n agent -f flume.conf \n-o avro-collection-source.bind=0.0.0.0 \n-o avro-collection-source.port=30000\n-o hdfs-sink.hdfs.path=hdfs://localhost:9000/data\n-o memoryChannel.capacity=30000\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051", "body": "Hi Jarcec,\n\nHere is the link, https://issues.apache.org/jira/browse/FLUME-2351\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jarcec": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909", "body": "Hi Krisztian,\nwould you mind opening a new Flume JIRA and submitting your patch there? Due to the formalities and different licences we can't accept pull requests from Github.\n\nhttp://issues.apache.org/jira/browse/FLUME\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531", "body": "Thank you Krisztian, The flume folks should be able to look into it shortly!\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "harishreedharan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526", "body": "Flume does not accept PRs. Could you file a jira here: https://issues.apache.org/jira/browse/FLUME and submit this as a patch? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263", "body": "We don't do pull requests. Could you please create a patch file and attach it to the jira you created? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948", "body": "Yep, a committer will review he patch. Thanks @SeekerResource!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "martinschaef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415", "body": "I'm not familiar with jira ... I guess I created an issue and not a patch. But its a one-liner anyway.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fangjian0423": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503", "body": "hello, should we close the serializer in HBaseSink, isn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422", "body": "yeah, I created a issue in jira before: https://issues.apache.org/jira/browse/FLUME-2745.   But I can not assign to anybody.  Thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lucarosellini": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957", "body": "@harishreedharan attached the patch to a new jira issue: https://issues.apache.org/jira/browse/FLUME-2782\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guitoun3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098", "body": "Ok, Jira is there : https://issues.apache.org/jira/browse/FLUME-2755\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gherreros": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151", "body": "Added patch file to the ticket. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "omallassi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555", "body": "@harishreedharan done there https://issues.apache.org/jira/browse/FLUME-2784 \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alvarogala": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578", "body": "Hi gherreros, I have been fighting this trouble for some days. Thank you for the patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SeekerResource": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437", "body": "@harishreedharan\nhi harishreedharan, i have created FLUME-2781 and attached the patch, is that ok? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skadilover": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/16637387", "body": "custmer can rotae file as\n\norder.log\norder2016-03-11-1.log\norder2016-03-11-2.log\norder2016-03-11-3.log\n\nthis may be better\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/16637387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "simonati": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19430684", "body": "@bessbd I'm pretty sure this wasn't my original commit message. Would you mind adding at least the jira reference?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19430684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19431495", "body": "Could you please point me to the part of the guideline which says that jira reference should be removed from license file changes? Sorry I couldn't find it. \n\nOn the other hand I guess since rewriting would already affect another commit (couldn't catch this mistake early) we have to live with it.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365", "body": "I guess it is still a TODO informing the rest of flume that ExecSource stopped unexpectedly.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178", "body": "I'm vaguely guessing that the original comment aimed to take a note about a behavior - which is also specified in the user guide as well - that during startup of ExecSource if the executed command fails it will do that \"silently\" instead of and this is a TODO.\n\nExample config:\n\n> tier1.sources = source1\n> tier1.channels = channel1\n> tier1.sinks = sink1\n> tier1.channels.channel1.type = file\n> tier1.channels.channel1.capacity = 10000\n> tier1.sinks.sink1.channel = channel1\n> tier1.sources.source1.channels = channel1\n> tier1.sources.source1.type = exec\n> tier1.sources.source1.command = tail -F /tmp/dirwhichdoesntexist/input.log\n> tier1.sinks.sink1.type = logger\n\nSince the user guide also mentions it I'm fine with removing the TODO comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603", "body": "+1 on this change. It solves the problem of leaking semaphore caused by rollBacks. (Essentially rollback should be a \"purely drop all temporal changes\" and commit should be a \"check if temporal changes are applicable then apply\")\n\nAdditionally please note that doCommit is still able to leak as acquiring the queueRemaining and bytesRemaining semaphores are outside of the synchronised block. (Purely moving them inside the block would have a huge perf penalty in situations when channel is nearly full and keepAlive was set) I would recommend a two level check (one without wait within the synchronised block and another upfront check which could wait)  in a separate change.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760", "body": "Shouldn't license be the first thing of every source file? If yes than it is interesting that it passed RAT check. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mpercy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19531391", "body": "How about just MAVEN_OPTS=\"...\" mvn clean install -DskipTests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531393", "body": "Is this needed for something?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531397", "body": "Can skip this with the above command I think\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650", "body": "Please add a comment at the top of the test with a description. You can leave out @throws clauses and all of that junk that is not really additionally helpful to developers reading the test code\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789", "body": "Please increase your batch size to at least 2 events\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839", "body": "The test is pretty good but please make the following modifications:\n1. Add multiple events to the channel.\n2. Call process() multiple times.\n3. Ensure that the file is readable by a reader after multiple batches have been flushed.\n4. Test all of the following codecs: bzip2, gzip, snappy\n\nYou probably would want to extract a helper method to avoid copy / paste for testing all the codecs\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829", "body": "Please also rebase on trunk. We've added a checkstyle plugin to the Maven build that will run and tell you what's wrong. In this case, the line exceeds 100 chars.\n\nA reasonable way for you to build Flume and run your test while invoking checkstyle is:\n\nmvn clean install -DfailIfNoTests=false -Dtest=TestHDFSEventSink\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982", "body": "> > Test all of the following codecs: bzip2, gzip, snappy\n> \n> Snappy and gzip require the native hadoop libraries. Do you know of a work around here to enable that?\n\nI believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work.\n\n>  I thought that writing one event (and thus a corresponding batch size of one) would suffice. Is there a scenario that I'm missing where multiple events would be different?\n\nI want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082", "body": "Should we also add this line to the `<fileSets> <exclude>` section in this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973", "body": "Ok thanks Denes! LGTM\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686", "body": "No need to specify the URL here; it may even change in the future since this doesn't point to a git hash or anything\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465", "body": "I don't really understand the purpose of this, actually I don't think it makes any sense because the startup is async and start() only fails synchronously. There isn't really another mechanism that I know of to \"inform the rest of flume that ExecSource stopped unexpectedly\". Or is there, and I just don't know about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708", "body": "Okay thanks. Yeah I feel that we should only put actionable TODOs in the code.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256", "body": "Do you have evidence that this line is required? If so, can you please add a comment about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kevinconaway": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003", "body": "> Test all of the following codecs: bzip2, gzip, snappy\n\nSnappy and gzip require the native hadoop libraries.  Do you know of a work around here to enable that?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311", "body": "> Add multiple events to the channel.\n> Please increase your batch size to at least 2 events\n\nThe idea behind this test (and this is why your request for documentation is a good one ;)) is to simulate what happens when a batch of events is written to the file (and thus hsync'd to hdfs) but the file is _not_ yet closed.  In that case, the data that we wrote should still be readable.  With that in mind, I thought that writing one event (and thus a corresponding batch size of one) would suffice.  Is there a scenario that I'm missing where multiple events would be different?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317", "body": "> I believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work\n\nDeflate works without the native libraries.  Snappy and gzip do not.  The gzip check is actually done by the `SequenceFile.Writer` for some reason: https://github.com/apache/hadoop/blob/bad85f3e3a53b5fb692c77df6c11dcf968ad7e62/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java#L1151\n\n> I want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n\nUnderstood, thanks for clarifying.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "andrearota": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281", "body": "Thank you @adenes for your suggestions. I have refactored the test code and fixed code style violations.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"szaboferee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/ffc5554438aceb24eabc9815511285f069084968", "message": "FLUME-3115. Update netty library\n\nThis change upgrades the netty library to 3.10.6 and also adds netty-all 4.1.17\n\nThis closes #155\n\nReviewers: Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8466766538ed7e8325abf81392008b1d9de8a1f6", "message": "FLUME-3201. Fix SyslogUtil to handle RFC3164 format in December correctly\n\nThis closes #188\n\nReviewers: Tristan Stevens, Miklos Csanady\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/c7b95a746ba8ffd0337540e3233032d2b071c648", "message": "FLUME-3159. Setting JdbcChannel test connection to in-memory derby\n\nThis patch changes the JdbcChannel tests to use in-memory derby to make parallel\ntest run possible.\n\nThis closes #177\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/8b3fad52b2da1510fa066ded2816b9cfc35f22e1", "message": "Changing javax.jms to geronimo jms spec\n\njavax.jms has GNU GPL licence which is not compatible with Apache\n\nThis closes #172\n\nReviewers: Miklos Csanady, Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/773555c5c7d09650f8f4173ced232954b1a3a361", "message": "FLUME-3127. Upgrade libfb303 library dependency\n\n- thrift version changed to 0.9.3\n- thrift objects generated with the new version\n- deprecated method calls updated in ScribeSource\n- cross-compatibility tested with Flume 1.6 and 1.7\n\nThis closes #163\n\nReviewers: Denes Arvay\n\n(Ferenc Szabo via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcsanady": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/8324af363216a45603830909c19a3b26e6625205", "message": "FLUME-3194 upgrade derby to the latest version\n\nCurrent derby version contains security vulnerabilities.\nThis update will upgrade to a later version.\n\nThis closes #184\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d116f9707d5b5da501b1bb9a5fca812db7ce849b", "message": "FLUME-3158: Upgrade surefire version and config\n\nSet surefire version to the latest and configure it\nto rerun failed tests.\nThis way the flaky tests will not break the build as often.\n\nThis closes #182\n\nReviewers: Ferenc Szabo\n\n(Miklos Csanady via Ferenc Szabo)"}, {"url": "https://api.github.com/repos/apache/flume/commits/ed288acba39bfd611c10b338e36224c1415c2c4c", "message": "FLUME-3186. Make asyncHbaseClient config parameters available from Flume config\n\nThis patch adds the ability to set the asyncHbaseClient's config parameters via\nthe Flume configuration.\n\nThis closes #178\n\nReviewers: Ferenc Szabo, Denes Arvay\n\n(Miklos Csanady via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/d434d23dadc411e5d7486447316172c495d70f22", "message": "FLUME-3173. Upgrade joda-time to 2.9.9\n\nThis closes #169\n\nReviewers: Marcell Hegedus\n\n(Miklos Csanady via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/180", "title": "FLUME-3190: flume shutdown hook issue when both hbase and hdfs sink a\u2026", "body": "When both hdfs and hbase sink are in use, during shutdown (KILL SIGTERM), the hdfs sink won't be able to rename/close the .tmp hdfs file because the underlying filesystem could be closed earlier when shutting down the other component.\r\n\r\nThis change registers a new ShutdownHook in the hadoop's ShutdownHookManager, which will prevent other hooks to run until Flume stops itself.\r\n\r\nTested on a cluster which could reproduce the error before the change, but eliminated after.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rgoers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/fbc7a68e7e8cafe3265af649f6c56f665fd10b19", "message": "Merge branch 'trunk' into flume-2050"}, {"url": "https://api.github.com/repos/apache/flume/commits/6813d9cbdde5a677453f5aa429715ce96c4540e0", "message": "Upgrade to Log4j 2.10.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/e4fd6ab31f54259b7dde33b7a30c3a098da3c07f", "message": "Remove more references to log4j 1"}, {"url": "https://api.github.com/repos/apache/flume/commits/6b6605c06ff09224378159aa5466b593c5876e28", "message": "Update configuration to match log4j 1.x"}, {"url": "https://api.github.com/repos/apache/flume/commits/4bb5e88eccf7e9676eb527bd0fa7ecfc9bce50f2", "message": "FLUME-2050 - modify pattern layout so NDC is ignored if it has no data"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a07fbf04004662c095b80474a0cdc9a922cde33", "message": "FLUME-2050 remove spurious files"}, {"url": "https://api.github.com/repos/apache/flume/commits/140ea5d2808b7f6fce496e5e2d175821f302f25b", "message": "FLUME-2050 Upgrade to Log4j 2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andrasbeni": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/e4312ad1acfd28e23405e6775374948fa35d5e40", "message": "FLUME-199. Remove hardcoded ports from unit tests\n\nMany unit tests use hardcoded port numbers which leads to flakiness and causes\nproblems when running builds in parallel.\nThis patch fixes this issue by searching for available ports instead of the\nhardcoded ones.\n\nThis closes #124\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Andras Beni via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/108", "title": "FLUME-3056 TestApplication hangs indefinitely", "body": "Skip configuration handling in Application while stop() is running", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmgstevens": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/580f781341b42672f234af069b9190ff1cc00dca", "message": "FLUME-2698. Upgrade Jetty Version\n\nUpdate Jetty version to 9.4.6.\nBeside the version upgrade this patch exposes the new Jetty's configuration\nvariables on the HTTPSource to provide users the possibility of fine-tuning\nthe HTTPSource.\n\nThis closes #158\n\nReviewers: Ferenc Szabo, Mike Percy, Miklos Csanady, Denes Arvay\n\n(Tristan Stevens via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/54e2728a8e141ee63704018c4497bbe083c0f75f", "message": "FLUME-3046. Kafka Sink and Source Configuration Improvements\n\nThis patch fixes the infinite loop between Kafka source and Kafka sink\nby introducing the following configuration parameters in those components:\n- topicHeader in Kafka source to specify the name of the header where it\n  stores the topic name where the event comes from.\n- setTopicHeader in Kafka source to control whether the topic name is stored\n  in the given header.\n- topicHeader in Kafka sink to configure the name of the header which\n  is used to specify in which topic to send the event.\n- allowTopicOverride in Kafka sink to control whether the target topic's name\n  can be overridden by the specified header.\n\nThis closes #105\n\nReviewers: Attila Simon\n\n(Tristan Stevens via Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adenes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/99f591994468633fc6f8701c5fc53e0214b6da4f", "message": "Fix source assembly\n\nflume-checkstyle breaks the assembly because its parent is not the flume-parent\nRemoving the moduleSets definition from the src assembly solved the issue.\nFiles are added based on fileSets, the resulting tarball's content equals\nto the result of the dev-support/generate-source-release.sh in a clean\nworking directory.\n\nThis closes #175\n\nReviewers: Miklos Csanady, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/82e9f4d4845934ea77c26be491dc5a856970c7bd", "message": "FLUME-3164. Update version to 1.9.0-SNAPSHOT in pom.xmls and documentation files"}, {"url": "https://api.github.com/repos/apache/flume/commits/7e6c3f1f4122648b2ed9ca5a77f57b7139a369cc", "message": "FLUME-3166. Update LICENSE\n\nAdding geronimo-jms_1.1_spec jar to the Apache licensed list."}, {"url": "https://api.github.com/repos/apache/flume/commits/2bdb8323eb1abb28d443471b19a3a5bdae58f0bb", "message": "FLUME-3178. Update RELEASE-NOTES for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/0c4260801c6dfee0003e437b0a7ca5a6cc7391f3", "message": "FLUME-3168. Update CHANGELOG for 1.8.0"}, {"url": "https://api.github.com/repos/apache/flume/commits/b359f32e324fb815c0506f3bad016187a0b7765e", "message": "Set the copyright date dynamically in documentation footer\n\nDisplay \"2009-current year\" instead of the hardcoded \"2009-2012\".\n\nThis closes #171\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/1541f089a5dec9b21549f6a6e961ef835a8b68bb", "message": "FLUME-3175. Turn off doclint for javadoc generation\n\nWith Java 8's new doclint feature the javadoc generation breaks due to the\nstrict checking so adding -Xdoclint:none to the maven-javadoc-plugin's\nconfiguration.\n\nThis closes #168\n\nReviewers: Bessenyei Bal\u00e1zs Don\u00e1t, Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/4a3f3c76f01d8a2c204b94dec7d3c7b3c68e7136", "message": "Fix NetCat UDP Source table in FlumeUserGuide.rst\n\nThis closes #170\n\nReviewers: Ferenc Szabo\n\n(Denes Arvay via Denes Arvay)"}, {"url": "https://api.github.com/repos/apache/flume/commits/13771c905316052d3e94aeb3b4a0d49a27c0f852", "message": "FLUME-1520. Timestamp interceptor should support custom headers\n\nThis change adds a configuration parameter to the TimestampInterceptor\nfor the user to be able to define the name of the timestamp header.\n\nReviewers: Tristan Stevens, Attila Simon\n\n(Hari Shreedharan, Tristan Stevens, Attila Simon via Denes Arvay)"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/115", "title": "Doc fix: Size of files created by HDFS Sink won't necessarily match the configured rollSize value", "body": "Updated the description of the HDFS Sink's `hdfs.rollSize` property to reflect the actual behaviour: it keeps track of the size of the incoming events' body thus the size of the created files won't necessarily match the configured value.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018", "body": "There are a couple of copy-paste lines here and there, could you please refactor it a little bit?\ne.g. extract the `reader.readEvents-reader.commit` loops to a method.\nThe assertion part (`listFiles`, checking the count, removing from the `expectedLeftFiles`, checking the emptiness of it) might be possible to extract too, to improve the readability of the code. (e.g. `void assertExpectedLeftFiles(String... expectedFileNames)`)\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77815018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145", "body": "Wrong indentation, it should be in line with the `Assert` above.\nNote: we use 2 spaces for indentation.\nYou can verify whether your code conforms to Flume's code formatting guidelines by running checkstyle on it: `mvn clean verify -DskipTests -Drat.skip`, please run it, there are a couple of other warnings too.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/77816145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269", "body": "I tried it, there is no difference regardless of whether it's excluded or not. Moreover I discovered that removing all the project dirs from the exclude list has no impact on the files in the src package. I suppose `**/target/**` does the job.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591", "body": "As it's about the output of a shell script I don't expect to have non-ascii characters, that's why I decided to use iso-8859-1 by default. I might be wrong so I'm open to reconsider this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86110591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313", "body": "You are right, thanks, will commit the fix soon.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88275313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bessbd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/flume/commits/5405fc68c657fe6f2aabe14aa5cd19c781a032ea", "message": "Add README.md and doap_Flume.rdf to the generated release artifacts\n\nThis closes #69\n\n(Cherry-picked from flume-1.7 branch by Denes Arvay)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19431057", "body": "@satiatcloudera \nI have reformatted your commit message so that it conforms the release guideline: https://cwiki.apache.org/confluence/display/FLUME/How+to+Release and the previous related commits (see 5e400ea8c471ef41c12dd8ad2079ac8a351ec509 and d40abcbfbf31528dbbb1739118ddb1dc60bfbeeb)\n\nAlso, afaik, git commit messages are only modifiable by rewriting history ( https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History ), which should be avoided ( http://stackoverflow.com/questions/1491001/what-are-the-practical-consequences-of-rewriting-git-history ).\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007", "body": "When I remove the MAVEN_SKIP_RC setting, the build fails.\n\nI think, that line is required. I'll include a comment about this.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84609007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951", "body": "This should be FLUME\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85072951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039", "body": "Jira -> JIRA?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174", "body": "Maybe we should update this for pull requests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85073174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035", "body": "Why iso-8859-1?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/85332035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228", "body": "Maybe we should add the \"Reviewers:\" line here (and \"This closes #x\") if it's a pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84885228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "asdf2014": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/194", "title": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup", "body": "Using `volatile + ConcurrentHashMap + LongAdder` instead of `syncrhonzied + HashMap + AtomicLong` for CounterGroup.\r\n\r\nGet more details from my blog: [yuzhouwan.com](https://yuzhouwan.com/posts/31915#LongAdder).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Guangxian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/193", "title": "FLUME-3207:Fix some typos in TestReliableSpoolingFileEventReader", "body": "There is a mistake in `testConsumeFileOldestWithLexicographicalComparision`\r\n```java\r\npublic void testConsumeFileOldestWithLexicographicalComparision()\r\n      throws IOException, InterruptedException {\r\n    ReliableEventReader reader =\r\n        new ReliableSpoolingFileEventReader.Builder().spoolDirectory(WORK_DIR)\r\n                                                     .consumeOrder(ConsumeOrder.OLDEST)\r\n                                                     .build();\r\n    File file1 = new File(WORK_DIR, \"new-file1\");\r\n    File file2 = new File(WORK_DIR, \"new-file2\");\r\n    File file3 = new File(WORK_DIR, \"new-file3\");\r\n    Thread.sleep(1000L);\r\n    FileUtils.write(file3, \"New file3 created.\\n\");\r\n    FileUtils.write(file2, \"New file2 created.\\n\");\r\n    FileUtils.write(file1, \"New file1 created.\\n\");\r\n    file1.setLastModified(file3.lastModified());\r\n    file1.setLastModified(file2.lastModified());\r\n    // file ages are same now they need to be ordered\r\n    // lexicographically (file1, file2, file3).\r\n    List<String> actual = Lists.newLinkedList();\r\n    readEventsForFilesInDir(WORK_DIR, reader, actual);\r\n    List<String> expected = Lists.newLinkedList();\r\n    createExpectedFromFilesInSetup(expected);\r\n    expected.add(\"\"); // Empty file was added in the last in setup.\r\n    expected.add(\"New file1 created.\");\r\n    expected.add(\"New file2 created.\");\r\n    expected.add(\"New file3 created.\");\r\n    Assert.assertEquals(expected, actual);\r\n  }\r\n```\r\nThe code is incorrect. To set the same modify time for the three files, code should be:\r\n```java\r\nfile2.setLastModified(file1.lastModified());\r\nfile3.setLastModified(file1.lastModified());\r\n```\r\nTest `testConsumeFileYoungestWithLexicographicalComparision` has the same mistake.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/192", "title": "FLUME-3205:Remove unnecessary 'synchronized' in ResettableFileInputStream", "body": "I found no concurrent access to ResettableFileInputStream object in flume code.\r\nRemove 'synchronized' will improve performance of SpoolDirectorySource.\r\nTested with a file of 200MB\uff0cwith 'synchronized' it took 9 seconds to read the file.\r\nWithout 'synchronized' it took 7 seconds.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wtx626": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/191", "title": "dataset sink support non-avro", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanwei002": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/187", "title": "Flume 1.8", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vegiapparao": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/185", "title": "Feature/kafka 2.12 1.0.0", "body": "This PR has the changes to get Apache Flume working with the latest version if Kafka client.  We had issues getting one of the authentication types working with older version of Kafka client.  Its working with Kafka_2.12_1.0.0.\r\n\r\nFew tests are failing (most of the times they are related to VM crash/time out)  in flume-kafka-channel project, I will be fixing them, but I am creating this PR for an early feedback.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ishitbatra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/179", "title": "comments added", "body": "comments are added", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunLuo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/176", "title": "add redis channel", "body": "In some cases, we need events can not be lost. But we don't want to install zk & kafka. \r\nTo make event deliver only once and to deploy many flume agents in different nodes but share only one channel, we developed redis channel. \r\nWe already use the redis channel in out production environment, and we want to feed back to flume.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "movit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/173", "title": "FLUME-3179 Fix file channel size", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HbnKing": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/167", "title": "modifying log4j file read repeatedly error", "body": "The  `log4j `files always segmentalized  the file by date and  log file size . but the  `taildirSource` regard it as a new file    .so the  data collected repeatly.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zyfo2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/159", "title": "FLUME-3149 reduce cpu cost for taildir file source while still maintaining reliability by using posFile in memory channel", "body": "File channel tracks transferred events and use transnational mechanism to make transfer recoverable. However, it increases CPU cost due to frequent system calls like write, read, etc. The Cpu cost could be very high if the transfer rate is high. \r\nIn contrast, Memory channel has no such issue which requires only about 10% of CPU cost in the same environment but it's not recovered if the system is down accidentally.\r\nFor sources like taildir, I propose we could write position file in memory channel to achieve reliability and reduce CPU cost.\r\nAfter testing on my own production environment, CPU usage dropped from 13% to 3% and still maintain reliability.  \uff08Transfer rate: 1Mb/s ,  kafka sink, file channel -> memory channel with pos file)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dufeng-g": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/150", "title": "Flume 1.7", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lingjinjiang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/147", "title": "[FLUME-3133] Add a 'ipHeader' config in both tcp and udp syslog source", "body": "When I use the syslog source, I use the \"host\" header to tell where the event come from.However, when change the format of syslog service, the \"host\" header willl be missing.\r\n\r\nSo I add a new config named \"ipHeader\" which looks like the \"portHeader\" in Multiport Syslog TCP Source.\r\nWhen this config is specified, a header will be added.\r\n\r\nFor more detail: \r\nhttps://issues.apache.org/jira/browse/FLUME-3133", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/pulls/113", "title": "[FLUME-3068] Ignore hidden files in TaildirMatcher", "body": "[https://issues.apache.org/jira/browse/FLUME-3068](url)\r\nWhen using the taildir to monitor a directory, hidden files in the directory are tailed by the source.\r\nAs the hidden files are often temp files, config files or the files which not want to be tailed, so it's necessary to ignore the hidden file when using the taildir source. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ShaoboAi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/145", "title": "bugfix type incompatible", "body": " ChannelSelectorConfigurationType cannot equal  ChannelConfigurationType", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gangken": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/144", "title": "Flume-2786. Fixed nested monitor lockout with polling trial of application lock.", "body": "This issue was discussed at [FLUME-2786](https://issues.apache.org/jira/browse/FLUME-2786), and I'd uploaded a patch for 1.6.0. Now I tried to apply the patch to trunk.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TeddyBear1314": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/140", "title": "small fix correct typo", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukangping": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/138", "title": "[FLUME-3090]Cassandra Sink module.", "body": "Here is the basic module for cassandra sink, which is used in our product code for collecting specific log event into the cassandra table.\r\nThere are 2 event serialization options: JsonCassandraEventSerializer and RegexCassandraEventSerializer.  For the property configuration, should be specified as:\r\n\r\na1.sinks.k1.type = cassandra\r\na1.sinks.k1.serializer = org.apache.flume.sink.cassandra.JsonCassandraEventSerializer\r\na1.sinks.k1.cassandra.contactPoints = 172.30.10.241\r\na1.sinks.k1.cassandra.username = test\r\na1.sinks.k1.cassandra.password = test\r\na1.sinks.k1.cassandra.keyspace =test_keyspace\r\na1.sinks.k1.cassandra.table = test_table\r\na1.sinks.k1.datetime.format = yyyy/MM/dd HH:mm:ss\r\n\r\nCheers.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stakafum": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/136", "title": "[FLUME-3098] Add Amazon Kinesis Stream Sink", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/133", "title": "[FLUME-3096] add Google Cloud Pub/Sub Source", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iaiengxia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/135", "title": "[FLUME-3095]add capacity unit support in configuration file", "body": "FLUME-3095\r\nBy the way I want to ask, how to modify the **User Guide Documentation**", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "leocook": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/130", "title": "bugfix: when the file is rename, it's pos becomes to 0,and it will be send to\u2026", "body": "when the file is rename, it's pos change to 0,and it will be send to channel repeatedly.It looks like a bug to me,when I collect log what create by log4j etc.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scottkp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/123", "title": "Added support for Filter Queries read from config file", "body": "Added support for optional property in config file for Twitter Source. E.g. if keywords property is provided:\r\n...\r\na1.sources.r1.type = org.apache.flume.source.twitter.TwitterSource\r\na1.sources.r1.keywords = word1,word2,word3\r\n...\r\n\r\nOtherwise, existing functionality of twitterStream.sample() is invoked.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "geoffroyvergne": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/119", "title": "Elasticsearch5 sink", "body": "Hi Flume team,\r\nI worked for my company on this patch to be able to use ElasticSearch 5 with flume.\r\nWe heavy use Flume with Hadoop and ElasticSearch as well.\r\nWe are testing this patch that seams to work properly\r\nI thought it could be helpfull for some of your users\r\n\r\nLet me know if you have any questions\r\n\r\nGeoffroy", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hangc0276": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/114", "title": "\"idleFuture\" should reset to \"null\" after idle bucket closed", "body": "If we use \"idleTimeout\" to roll file, once the flush() method called, it will start a delayed thread to close the idle bucketWriter. The delayed thread will call close() method to check whether the \"idleFuture\" is done, and close opened file. If the \"idleFuture\" is running when checking, the idleFuture.isDone() method will return false, and the idleFuture won't be set to \"null\". When the bucketWriter calls flush() on the next time, the \"idleFuture\" is not \"null\" and idleFutrue.cancel(false) method returns false due to the \"idleFuture\" has completed in the last call. So new thread won't be created to close current idle bucketWriter and keeps current file openning.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chenjianwei3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/112", "title": "\"[FLUME-3067][Shell]Defalut JAVA_OPTS \"-Xmx20m\" may be conflicted with cuctom defines.\"", "body": "When write a Flume bootstrap shell, set the environment variable FLUME_JAVA_OPTS with the defined values as the min(-Xms) \r\nand max(-Xmx) heap size for the JVM, then call \"bin/flime-ng\" to start Flume. \r\nSucceed to start, but the defalut \"-Xmx20m\" is still in process JVM options.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bharatjiitd": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/flume/pulls/110", "title": "FLUME-3023 {variable} substitution doesn't work for property 'fileSuffix'", "body": "Escaped the suffix before passing it to bucket writer. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "keyki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189", "body": "We are planning to start flume agents dynamically and it comes handy to be able to override parameters of a base configuration file without actually touching and modifying it, for example change the bind port.  \n\nExample:  \n\nagent.sources.avro-collection-source.bind = localhost\nagent.sources.avro-collection-source.port = 50000\nagent.sinks.hdfs-sink.hdfs.path = hdfs://localhost:9000/flume\nagent.channels.memoryChannel.capacity = 20000\n\nflume-ng agent -n agent -f flume.conf \n-o avro-collection-source.bind=0.0.0.0 \n-o avro-collection-source.port=30000\n-o hdfs-sink.hdfs.path=hdfs://localhost:9000/data\n-o memoryChannel.capacity=30000\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39106189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051", "body": "Hi Jarcec,\n\nHere is the link, https://issues.apache.org/jira/browse/FLUME-2351\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39115051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jarcec": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909", "body": "Hi Krisztian,\nwould you mind opening a new Flume JIRA and submitting your patch there? Due to the formalities and different licences we can't accept pull requests from Github.\n\nhttp://issues.apache.org/jira/browse/FLUME\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39110909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531", "body": "Thank you Krisztian, The flume folks should be able to look into it shortly!\n\nJarcec\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/39640531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "harishreedharan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526", "body": "Flume does not accept PRs. Could you file a jira here: https://issues.apache.org/jira/browse/FLUME and submit this as a patch? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94963526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263", "body": "We don't do pull requests. Could you please create a patch file and attach it to the jira you created? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810", "body": " We don't accept pull requests. Could you please attach the patch to a jira here: https://issues.apache.org/jira/browse/FLUME ? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137236810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948", "body": "Yep, a committer will review he patch. Thanks @SeekerResource!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145730948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "martinschaef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415", "body": "I'm not familiar with jira ... I guess I created an issue and not a patch. But its a one-liner anyway.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/94966415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fangjian0423": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503", "body": "hello, should we close the serializer in HBaseSink, isn't it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/121512503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422", "body": "yeah, I created a issue in jira before: https://issues.apache.org/jira/browse/FLUME-2745.   But I can not assign to anybody.  Thanks\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137329422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lucarosellini": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957", "body": "@harishreedharan attached the patch to a new jira issue: https://issues.apache.org/jira/browse/FLUME-2782\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137357957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guitoun3": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098", "body": "Ok, Jira is there : https://issues.apache.org/jira/browse/FLUME-2755\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137381098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gherreros": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151", "body": "Added patch file to the ticket. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137407151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "omallassi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555", "body": "@harishreedharan done there https://issues.apache.org/jira/browse/FLUME-2784 \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/137658555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "alvarogala": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578", "body": "Hi gherreros, I have been fighting this trouble for some days. Thank you for the patch!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/138620578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "SeekerResource": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437", "body": "@harishreedharan\nhi harishreedharan, i have created FLUME-2781 and attached the patch, is that ok? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/issues/comments/145380437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skadilover": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/16637387", "body": "custmer can rotae file as\n\norder.log\norder2016-03-11-1.log\norder2016-03-11-2.log\norder2016-03-11-3.log\n\nthis may be better\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/16637387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "simonati": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19430684", "body": "@bessbd I'm pretty sure this wasn't my original commit message. Would you mind adding at least the jira reference?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19430684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19431495", "body": "Could you please point me to the part of the guideline which says that jira reference should be removed from license file changes? Sorry I couldn't find it. \n\nOn the other hand I guess since rewriting would already affect another commit (couldn't catch this mistake early) we have to live with it.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19431495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365", "body": "I guess it is still a TODO informing the rest of flume that ExecSource stopped unexpectedly.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83441365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178", "body": "I'm vaguely guessing that the original comment aimed to take a note about a behavior - which is also specified in the user guide as well - that during startup of ExecSource if the executed command fails it will do that \"silently\" instead of and this is a TODO.\n\nExample config:\n\n> tier1.sources = source1\n> tier1.channels = channel1\n> tier1.sinks = sink1\n> tier1.channels.channel1.type = file\n> tier1.channels.channel1.capacity = 10000\n> tier1.sinks.sink1.channel = channel1\n> tier1.sources.source1.channels = channel1\n> tier1.sources.source1.type = exec\n> tier1.sources.source1.command = tail -F /tmp/dirwhichdoesntexist/input.log\n> tier1.sinks.sink1.type = logger\n\nSince the user guide also mentions it I'm fine with removing the TODO comment.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83639178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603", "body": "+1 on this change. It solves the problem of leaking semaphore caused by rollBacks. (Essentially rollback should be a \"purely drop all temporal changes\" and commit should be a \"check if temporal changes are applicable then apply\")\n\nAdditionally please note that doCommit is still able to leak as acquiring the queueRemaining and bytesRemaining semaphores are outside of the synchronised block. (Purely moving them inside the block would have a huge perf penalty in situations when channel is nearly full and keepAlive was set) I would recommend a two level check (one without wait within the synchronised block and another upfront check which could wait)  in a separate change.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/86597603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760", "body": "Shouldn't license be the first thing of every source file? If yes than it is interesting that it passed RAT check. \n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/88272760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mpercy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/flume/comments/19531391", "body": "How about just MAVEN_OPTS=\"...\" mvn clean install -DskipTests\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531393", "body": "Is this needed for something?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/comments/19531397", "body": "Can skip this with the above command I think\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/comments/19531397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650", "body": "Please add a comment at the top of the test with a description. You can leave out @throws clauses and all of that junk that is not really additionally helpful to developers reading the test code\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789", "body": "Please increase your batch size to at least 2 events\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70695789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839", "body": "The test is pretty good but please make the following modifications:\n1. Add multiple events to the channel.\n2. Call process() multiple times.\n3. Ensure that the file is readable by a reader after multiple batches have been flushed.\n4. Test all of the following codecs: bzip2, gzip, snappy\n\nYou probably would want to extract a helper method to avoid copy / paste for testing all the codecs\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70696839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829", "body": "Please also rebase on trunk. We've added a checkstyle plugin to the Maven build that will run and tell you what's wrong. In this case, the line exceeds 100 chars.\n\nA reasonable way for you to build Flume and run your test while invoking checkstyle is:\n\nmvn clean install -DfailIfNoTests=false -Dtest=TestHDFSEventSink\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70697829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982", "body": "> > Test all of the following codecs: bzip2, gzip, snappy\n> \n> Snappy and gzip require the native hadoop libraries. Do you know of a work around here to enable that?\n\nI believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work.\n\n>  I thought that writing one event (and thus a corresponding batch size of one) would suffice. Is there a scenario that I'm missing where multiple events would be different?\n\nI want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71053982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082", "body": "Should we also add this line to the `<fileSets> <exclude>` section in this file?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82808082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973", "body": "Ok thanks Denes! LGTM\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/82813973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686", "body": "No need to specify the URL here; it may even change in the future since this doesn't point to a git hash or anything\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83047686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465", "body": "I don't really understand the purpose of this, actually I don't think it makes any sense because the startup is async and start() only fails synchronously. There isn't really another mechanism that I know of to \"inform the rest of flume that ExecSource stopped unexpectedly\". Or is there, and I just don't know about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83624465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708", "body": "Okay thanks. Yeah I feel that we should only put actionable TODOs in the code.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/83666708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256", "body": "Do you have evidence that this line is required? If so, can you please add a comment about it?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/84608256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kevinconaway": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003", "body": "> Test all of the following codecs: bzip2, gzip, snappy\n\nSnappy and gzip require the native hadoop libraries.  Do you know of a work around here to enable that?\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70698003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311", "body": "> Add multiple events to the channel.\n> Please increase your batch size to at least 2 events\n\nThe idea behind this test (and this is why your request for documentation is a good one ;)) is to simulate what happens when a batch of events is written to the file (and thus hsync'd to hdfs) but the file is _not_ yet closed.  In that case, the data that we wrote should still be readable.  With that in mind, I thought that writing one event (and thus a corresponding batch size of one) would suffice.  Is there a scenario that I'm missing where multiple events would be different?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/70699311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317", "body": "> I believe there are pure Java versions of some compression strategies, particularly deflate and gzip. Maybe not snappy though... Please try deflate and gzip and let me know if it doesn't appear to work\n\nDeflate works without the native libraries.  Snappy and gzip do not.  The gzip check is actually done by the `SequenceFile.Writer` for some reason: https://github.com/apache/hadoop/blob/bad85f3e3a53b5fb692c77df6c11dcf968ad7e62/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java#L1151\n\n> I want to make sure that multiple batches concatenated is still readable in all cases. I suppose more than one event per batch doesn't add much coverage, but certainly we need to test multiple batches in order to ensure that the SequenceFile framing is working properly across multiple sync() calls on the same file.\n\nUnderstood, thanks for clarifying.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/71135317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "andrearota": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281", "body": "Thank you @adenes for your suggestions. I have refactored the test code and fixed code style violations.\n", "reactions": {"url": "https://api.github.com/repos/apache/flume/pulls/comments/78280281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}