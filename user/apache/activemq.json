{"_default": {"1": {"gtully": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/ec6fa190999160676cab900038b268b2d40a4d5c", "message": "[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached"}, {"url": "https://api.github.com/repos/apache/activemq/commits/8c77e9553eaf2062b937c68737a5128d0f9a4347", "message": "[AMQ-6880] fix filter match logic when transport connector updateClusterFilter is in play"}, {"url": "https://api.github.com/repos/apache/activemq/commits/22f8f88ddbe050fc991ef816152e1169af29c834", "message": "[NO JIRA] harden test occasional failure"}, {"url": "https://api.github.com/repos/apache/activemq/commits/dd6dcc188c80888e2fac37646189ae3b407c1043", "message": "fix regression - ensure connector created for remote jmx assertion"}, {"url": "https://api.github.com/repos/apache/activemq/commits/9d98ee253fbe3e2134e7242abd572c6e64a6f6b2", "message": "sync code default with config default to use jvm mbean server"}, {"url": "https://api.github.com/repos/apache/activemq/commits/151e17abfed83e16734d9775e6862b1d1241282a", "message": "[AMQ-6854] - periodic log warn on store limits reached in the same way"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016", "body": "can you add a junit test that exercises this feature, that will protect it into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718", "body": "can you rebase your changes from trunk? It will then be trivial to apply for the next release\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947", "body": "would it be possible to add a unit test - there are a bunch of karaf feature tests and even seems to be one for the client feature - maybe that can be modified to demo the problem\nhttps://github.com/apache/activemq/blob/trunk/activemq-karaf-itest/src/test/java/org/apache/activemq/karaf/itest/ActiveMQClientBundleTest.java\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176", "body": "please provide a junit test case with the patch. that will protect your fix into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365", "body": "org.apache.activemq.store.jdbc.TransactionContext#close already has that logic... maybe see if those two apis can follow the same pattern as the rest and leverage the existing close?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cshannon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/4535e8f097c993364026c00ed40777c71a36a6ea", "message": "AMQ-6884 - Replacing printStackTrace() with logging statement"}, {"url": "https://api.github.com/repos/apache/activemq/commits/56baba96c657d4e44b88955a964d6c92ff39b822", "message": "AMQ-6875 - Use the correct destination for Virtual destination consumers\nwhen using Virtual Topics"}, {"url": "https://api.github.com/repos/apache/activemq/commits/5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a", "message": "AMQ-6871 - By default only send generic platform details\n\nThe default behavior by the OpenWire client will be to send generic\nplatform details to the server with a new flag to send more specific\ninformation."}, {"url": "https://api.github.com/repos/apache/activemq/commits/08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1", "message": "(AMQ-6858) - add extra precautionary check for demand subs\n\nalso remove test that intermittently fails with timing issues"}, {"url": "https://api.github.com/repos/apache/activemq/commits/2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e", "message": "(AMQ-6858) - test fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hzbarcea": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/12c649c2d9116a10d6157f02a6026acd5033e036", "message": "This closes #85. Won't fix. Thanks @jwcarman for contribution, sorry for not picking it up in time."}, {"url": "https://api.github.com/repos/apache/activemq/commits/6e9ceb222ccca30cc052feff3e203d2a4352a481", "message": "This closes #268."}, {"url": "https://api.github.com/repos/apache/activemq/commits/b06e26ca1e2fc50088bb6423403a802461b53879", "message": "This closes #75, closes #265, closes #266"}, {"url": "https://api.github.com/repos/apache/activemq/commits/87db137597affedf7d27c4c1c8935a2608d8d8f1", "message": "[no jira] update targetNamespace version for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/fc4ebd2bc93b39de92a4d2453e8ed9227d9dc435", "message": "[no jira] add targetNamespace for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/e4d38d615b0bb2c5e55d63d2db781fdb580bc638", "message": "This closes #236. Invalid."}, {"url": "https://api.github.com/repos/apache/activemq/commits/25b70f61eeccf3c6ed4221d001048f8e8cb65896", "message": "This closes #264"}, {"url": "https://api.github.com/repos/apache/activemq/commits/ab2711abb10ebda3950a8b005780f6b01c189780", "message": "This closes #267."}, {"url": "https://api.github.com/repos/apache/activemq/commits/52480a4af860d9493896b8c3e2597cd81f11310e", "message": "This closes #228. Thanks @catull and @lichtin for patch"}, {"url": "https://api.github.com/repos/apache/activemq/commits/04eedc3bc41ecbed8237f4be422446c5f4d54146", "message": "This closes #226. Thanks ecki for PR"}, {"url": "https://api.github.com/repos/apache/activemq/commits/69eba7cf379c3a7d3ec95ed4f5f6e917b547e5ff", "message": "[no jira] Fix invalid xml for broker config"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247", "body": "@tabish121 of course you're right. I missed something in the commit, it was an incomplete optimization to avoid multiple conditions in the 'if'. Full tests now on the complete fix, coming up shortly.\n\nThat said, do you see any problem with the approach?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "snurmine": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/39caca7cf6593c167f00e89842b16812edbc578f", "message": "AMQ-6327 - Remove System.out.println"}, {"url": "https://api.github.com/repos/apache/activemq/commits/051e2b791c88e09a0f7cdecfb53eb2fd52c1d39c", "message": "AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/269", "title": "AMQ-6781: The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "body": "The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "splatch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/a8a032af091ae2f6d1affe95b37bb424214d1990", "message": "AMQ-6861 Allow customisation of network bridge creation logic."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "catull": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/b40e5f93bdfdecad84f880edce23c4ae8af9a76d", "message": "[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ecki": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/26eab53723b11b82d3e6439950777b51182b6203", "message": "Javadoc typo fix and cleanup\n\nThis mostly fixes the url1/url2 copy and paste problem. It uses a bit more readable property syntax and introduces a single sentence (plain text) summary for class Javadoc and adds some links."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tabish121": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/d3e439378405afb699fcbfc63d9342fbb6ad77ce", "message": "AMQ-6874 Update Qpid JMS to 0.28.0 and proton-j to 0.24.0\n\nThis updates the AMQP libs Qpid JMS and Proton-J, also updates netty to\n4.1.18.Final to match the version used for Qpid JMS"}, {"url": "https://api.github.com/repos/apache/activemq/commits/36a2871301e9e75c198294d31756b49a22a21fc8", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nFix missing cast on value out of current proton release."}, {"url": "https://api.github.com/repos/apache/activemq/commits/e7bce023de48591475781ba024104f8010a696fc", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nUse the spec defined values when casting the Map from the\nApplicationProperties section."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524", "body": "Recommend you create a patch that applies cleanly against the activemq trunk git repo:\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440", "body": "Patch applied on trunk, many thanks.  \n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049", "body": "This bit looks to filter any response that isn't a ShutdownInfo or a RemoveInfo response which I don't think you would want to do.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "superawesome": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/272", "title": "replicated LevelDB fix and debugging output", "body": "I know LevelDB is now deprecated, and this may not get merged because of that. I certainly don't want to become its maintainer. I had an unhealthy cluster, and did not want to try and migrate it while in that state. This is just a small change to get it healthy again after a slave encountered this error:\r\n\r\nUnexpected session error: java.net.ProtocolException: Maximum protocol buffer length exeeded\r\n\r\nIn my case I believe this is due to having too many LevelDB log files to replicate (a separate LevelDB bug, which I intend to investigate now that this cluster is healthy again).\r\n\r\n2 commits in this PR:\r\n\r\n1) debugging output to track that down and make it more ... debuggable.\r\n\r\n2) a 2-character change to increase a buffer size by 4x, to \"fix\" the problem.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javahongxi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/270", "title": "Update README.md", "body": "only test", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsgonz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/263", "title": "Race condition makes messages queued in the session be delivered before messages queued in consumers. #256", "body": "Create new PR to trigger CI.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "graben": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/258", "title": "AMQ-6805: Add new implementation based on OSGi Declarative Services t\u2026", "body": "\u2026o make OSGi services available for broker configuration", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dtrebbien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/257", "title": "Misc. fixes", "body": "While testing my [SLF4J Helper](http://plugins.netbeans.org/plugin/72557/) plugin for NetBeans IDE, I found some fixes and minor improvements that can be made.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kimmking": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/238", "title": "add ClientIdFilterDispatchPolicy and testcase", "body": "ClientIdFilterDispatchPolicy dispatches messages in a topic to a given client. Then the message with a \"PTP_CLIENTID\" property, can be received by a mqtt client with the same clientId.\r\n\r\nMany developer have been insterested to use this feature:\r\nhttp://blog.csdn.net/kimmking/article/details/17449019", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sigee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/237", "title": "Remove unnecessary boxing / unboxing", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amarkevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/235", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/233", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RomanIsko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/232", "title": "set name for primary key on create table", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alaendle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/230", "title": "Unit test illustrating AMQ-6636.", "body": "Hope this is the right way to contribute.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thodimi1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/227", "title": "SSL Connection leaks", "body": "There are possibilities to create a denial of service attack just by opening TCP connection to a SSL port and keep it open. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomyLobo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/206", "title": "Add missing runlevels to Default-Start", "body": "According to the manual (and the `runlevel` command), Debian starts in runlevel 2 by default:\nhttps://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_sysv_style_init\n\nSo in order for ActiveMQ to start up when a Debian VM starts, you have to add it to these runlevels.\n\nWorkaround: `insserv -v activemq,start=2`\n\nSide-effects:\nRedHat doesn't use runlevels 2 and 4, so it should be fine:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/s1-boot-init-shutdown-sysv.html\n\nSLES doesn't use runlevel 4, but it does use runlevel 2 for \"Local multiuser mode without remote network (NFS, etc.)\":\nhttps://www.suse.com/documentation/sles11/book_sle_admin/data/sec_boot_init.html\n\nSo the only side-effect on these systems is that SLES will try to run ActiveMQ in Local multiuser mode without remote network (and probably fail).\nI think that is an acceptable side-effect since people booting Debian into runlevel 2 is a _lot_ more common due to it being the default.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/16482860", "body": "This variable is used in line 10, i.e. too early.\nThis problem still exists in 5.13.0.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16482860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/16493882", "body": "Apparently this is tracked as [AMQ-6189](https://issues.apache.org/jira/browse/AMQ-6189).\nI made a PR (#172) to fix this problem.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16493882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144485", "body": "This doesn't actually invoke checkStopRunning.\nInstead, it checks if the string \"checkStopRunning\" is empty, which it isn't.\n\nIn other words, this whole if body is never evaluated.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144618", "body": "Luckily this piece of code isn't that important, as it's just responsible for showing a different message (\"FINISHED\" instead of \"TERMINATED\").\n\nNevertheless, someone should clean this mess up.\nSome of us are still on non-systemd distros :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fjollberg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/199", "title": "Make start script work on busybox", "body": "The current version of the activemq start script uses options to ps which are unavailable \nin busybox.\n\nSuggested change refactors the start script to remove duplicated code to find a java process \ngiven a pidfile and makes it work on busybox.\n\nI have limited possibilities of verifying the change on different platforms but it is confirmed to\nwork on at least Mac OS X in addition to busybox and should work on platforms where \nprevious \"ps -p\" command worked.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pdudits": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/197", "title": "https://issues.apache.org/jira/browse/AMQ-6391", "body": "Test case for multiple connections participating in one phase commit,\ncausing leak in ConnectionStateTracker.\n\nKeep all the connections participating in an transaction in a static multimap\nsimilar to the one in TransactionContext.\n\nEven though Garry  says that static fields may cause issues in OSGi, I am offering this as a solution. This static map has same lifecycle, classloading and  source bundle as the one already present in TransactionContext, therefore I assume it cannot really make things worse.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/174", "title": "https://issues.apache.org/jira/browse/AMQ-6209", "body": "SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching messages of a consumer queue.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jenshadlich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/167", "title": "[AMQ-6160] fix NPE; use messageId.getFutureOrSequenceLong() as sequen\u2026", "body": "\u2026ceId if entryLocator is NULL\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pbruski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/165", "title": "AMQ-6135 ActiveMQ HTTP module should support Openwire serialisation", "body": "I am submitting this on behalf of Atlassian, the appropriate CCLAs are in place.\n\nWe have that code running in production and we didn't have any problems reports.\nI assumed rather strict backward compatibility and interoperability requirements, not sure if that's needed.  Well, at least the interoperability should be there.\nIn any case, it's easier to have them removed than to implement them as an afterthought.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emopers": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/160", "title": "TransportConnection does not synchronize iteration on synchronized list", "body": "In TransportConnection.java:861, the synchronized list returned by cs.getTempDestinations() is iterated\nin an unsynchronized manner, but according to the [Oracle Java 7 API specification](http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#synchronizedList%28java.util.List%29),\nthis is not thread-safe and can lead to non-deterministic behavior. This pull request adds a fix by synchronizing the iteration on the list returned by cs.getTempDestinations().\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjnygard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/126", "title": "Fix class loading issues for SSL/nonSSL connectors", "body": "- This resolves issues loading SSL and nonSSL RAR connectors in Glassfish 3.x\n- proposed fix for AMQ-5873\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hauenstein": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/114", "title": "https://issues.apache.org/jira/browse/AMQ-5265", "body": "This is a revision of AMQ-5265 -- the original fix didn't quite clean up all of the mbeans that MBeanBridgeDestination created, as [noted in the original issue by Tarek Hammoud](https://issues.apache.org/jira/browse/AMQ-5265?focusedCommentId=14527137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14527137).  The key for the map used to track the ObjectNames was an ActiveMQDestination (which uses the destination's physical name for its equals() implementation) caused the inbound and outbound entries in the map to randomly replace each other.\n\nLike Tarek, I could reproduce this issue using 5.11.1 with two networked brokers (full duplex) with a client publishing to a topic.  After I restart a broker, the logs on the non-restarted broker show the MBeanBridgeDestination reporting many InstanceAlreadyExistsExceptions when trying to register the unintentionally-duplicated mbeans.\n\nPlease let me know if this makes sense or if there are any changes you would suggest (ex: is there a reasonable way or an example I could follow to add a unit test for something like this?).  Thanks!\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bric3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/109", "title": "Renames env script to avoid possible POSIX env shadowing", "body": "Got an issue with other shell scripts, turns out that when one prepends `$PATH` by `activemq/bin`, `env` is shadowed by ActiveMQ's `env`.\n\nThat means that script that want to run commands in customized environment will simple don't be executed like : \n\n``` sh\nenv A=aaa B=bbb mv ...\n```\n\nWorse such lines won't fail, because this will return the `0` exit status. The workaround is simple, i.e. append in `%PATH` instead of prepend. But a proper fix is needed. This PR proposes to rename the shell script from `env` to `activemq-env`.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PiotrKlimczak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/91", "title": "AMQ-4693 Adds Kerberos 5 authentication and connection encryption over TLS", "body": "Basing on RFC2712\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008", "body": "Hmmm. My patch to different issues is here. Not sure why?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205", "body": "created new pull request:\nhttps://github.com/apache/activemq/pull/42\nIt is very same except do not contains unecessary commits as was pulled from dedicated branch.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260", "body": "Unit test needed\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "burtonator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/65", "title": "Burton concurrent destination gc", "body": "Improves performance of concurrent destination GC dramatically. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "soul2zimate": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/63", "title": "revise set and get methods name of Activation Spec properties \"Redeliver...", "body": "...yBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" to allow configuration through @ActivationConfigProperty.\n\nhttps://issues.apache.org/jira/browse/AMQ-5613\n\nActivation Spec properties[1] \"RedeliveryBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" can not be used within @ActivationConfigProperty, in contrast, it accepts \"backOffMultiplier\" and \"useExponentialBackOff\".\n\n[1] http://activemq.apache.org/resource-adapter-properties.html\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scoopex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/61", "title": "AMQ-5503 - Make init script more reliable", "body": "See https://issues.apache.org/jira/browse/AMQ-5503\nUnfortunately the merge of this fix was delayed without any communicated reason.\nTherefore i recreated the pull request.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armsargis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186", "body": "Issued opened and patch summited(and applied by ActiveMQ team) using instruction from: http://activemq.apache.org/how-can-i-contribute.html.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "janstey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832", "body": "Closed as per \"[DISCUSS] Combine windows and unix distros\" thread on dev list.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "alexcojocaru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304", "body": "Done; see https://github.com/apache/activemq/pull/8\n\nClosing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zmhassan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857", "body": "![amq-errorhandler](https://cloud.githubusercontent.com/assets/1269759/2807893/4e3d9926-ccfd-11e3-9947-f0e8d460dc06.png)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139", "body": "This code isn't building maybe an error. I'm going to close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420", "body": "I will remove the hardcoded JMSDestination and push up new code by end of day\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454", "body": "I think I added this by accident I will remove this\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526", "body": "We are not using this Javascript file so I think it will be safe to delete this one.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565", "body": "I don't think we need the bootstrap-theme because we get everything from bootstrap.min.css. I will delete this also\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590", "body": "I am converting the CSS for the table to bootstrap styles that are provided by bootstrap javascript css library.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616", "body": "I will remove this comments because we don't need it here.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682", "body": "The reason why I do this is because the user needs to get redirected back to the page they where on when they deleted something. For example if I'm on the 15th page in browse.jsp and I delete something. I shouldn't start from the first page.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749", "body": "I will remove unnecessary comments\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807", "body": "I think this may be a repeat of the functions used in PaginQueue so it will be safe to delete the functions that are not being used. I will delete these functions and push up new code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841", "body": "I should also get rid of the console.log because its not nice to have it here. Just need it for debugging purposes.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862", "body": "I will also deleted commented out code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsherman1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433", "body": "Patch for https://issues.apache.org/jira/browse/AMQ-5177\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davsclaus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472", "body": "Thanks there were 2 other places I fixed that and committed on master. \n\nCan you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476", "body": "Thanks for the PR. Its merged. Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482", "body": "Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493", "body": "We need an unit test, if not we cannot accept this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501", "body": "This has been applied. Can you close this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jwcarman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240", "body": "Sure thing! :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305", "body": "Yes. I was mimicking the existing code I believe\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dhirajsb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642", "body": "Closed in favor of PR 22\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118", "body": "Resolved merge conflicts\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sobkowiak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835", "body": "The solution from 5.9.x is not enough. I'll open a new pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486", "body": "Pull request applied in commit 25600944e662279ec1113acd4d27e9c64ba8415f\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877", "body": "Solved in commit 6902eaefc46d640ad25c6fa29216bd6efb48c0c4\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "dkulp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055", "body": "Hadrian merged this to trunk.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825", "body": "Tim committed this (with some mods discussed on IRC).\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "traylz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437", "body": "Timothy Bish applied patch. See https://issues.apache.org/jira/browse/AMQ-5281?focusedCommentId=14100884&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14100884\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PavloVasylchenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/11394484", "body": "Http schema should be registered too if we uses https transport, since proxy can use only http.\nhttps://github.com/apache/activemq/blob/master/activemq-http/src/main/java/org/apache/activemq/transport/https/HttpsClientTransport.java#L51\nHere only https transport is registered and if we set proxy we will get \"Scheme 'http' not registered.\" error.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/11394484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tritschler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/14296964", "body": "No more shutdown ?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/14296964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "JonathanMalek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/17740568", "body": "This particular change creates a problem for a prefix of the form: `*.*.`\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/17740568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trejkaz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/21907488", "body": "Interestingly this pull request did suggest making serializablePackages private. I wonder what went wrong between this pull request and what actually got committed...\r\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/21907488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gelin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/23457488", "body": "This breaks stomp, mqtt and other (non openwire) protocols. Because only openwire transport grabs this \"wireFormat.host\" property while other protocols not.\r\nSo, when you try to connect to, for example stomp://localhost:61613, the exception with message \"Invalid connect parameters: {wireFormat.host=localhost}\" appears.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/23457488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "peteryhwong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417", "body": "I think we should ensure the brackets conform to Egyptian Brackets as the style used by the rest of the source file.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886", "body": "Can these not be final?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "clebertsuconic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809", "body": "if that is an issue.. this would be dead slow for the server...\r\n\r\nif there's any issues around this.. this fix is not good anyways.\r\n\r\nAs Tim said.. you need a test.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gemmellr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072", "body": "It's actually an example of Qpid Proton, rather than the linked Qpid Messaging API.\r\n\r\nMore specifically however, its an example of the old 'Messenger' API, which has seen little attention for some time due and wouldn't be recommended for new users. PROTON-1585 even removed the examples for it at Qpid .\r\n\r\nI'd suggest the example actually be removed instead, or else updated to use the newer Proton reactive APIs, e.g. demonstrated by http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/examples/index.html and http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/book/tutorial.html ", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}, "2": {"gtully": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/ec6fa190999160676cab900038b268b2d40a4d5c", "message": "[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached"}, {"url": "https://api.github.com/repos/apache/activemq/commits/8c77e9553eaf2062b937c68737a5128d0f9a4347", "message": "[AMQ-6880] fix filter match logic when transport connector updateClusterFilter is in play"}, {"url": "https://api.github.com/repos/apache/activemq/commits/22f8f88ddbe050fc991ef816152e1169af29c834", "message": "[NO JIRA] harden test occasional failure"}, {"url": "https://api.github.com/repos/apache/activemq/commits/dd6dcc188c80888e2fac37646189ae3b407c1043", "message": "fix regression - ensure connector created for remote jmx assertion"}, {"url": "https://api.github.com/repos/apache/activemq/commits/9d98ee253fbe3e2134e7242abd572c6e64a6f6b2", "message": "sync code default with config default to use jvm mbean server"}, {"url": "https://api.github.com/repos/apache/activemq/commits/151e17abfed83e16734d9775e6862b1d1241282a", "message": "[AMQ-6854] - periodic log warn on store limits reached in the same way"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016", "body": "can you add a junit test that exercises this feature, that will protect it into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718", "body": "can you rebase your changes from trunk? It will then be trivial to apply for the next release\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947", "body": "would it be possible to add a unit test - there are a bunch of karaf feature tests and even seems to be one for the client feature - maybe that can be modified to demo the problem\nhttps://github.com/apache/activemq/blob/trunk/activemq-karaf-itest/src/test/java/org/apache/activemq/karaf/itest/ActiveMQClientBundleTest.java\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176", "body": "please provide a junit test case with the patch. that will protect your fix into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365", "body": "org.apache.activemq.store.jdbc.TransactionContext#close already has that logic... maybe see if those two apis can follow the same pattern as the rest and leverage the existing close?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cshannon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/4535e8f097c993364026c00ed40777c71a36a6ea", "message": "AMQ-6884 - Replacing printStackTrace() with logging statement"}, {"url": "https://api.github.com/repos/apache/activemq/commits/56baba96c657d4e44b88955a964d6c92ff39b822", "message": "AMQ-6875 - Use the correct destination for Virtual destination consumers\nwhen using Virtual Topics"}, {"url": "https://api.github.com/repos/apache/activemq/commits/5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a", "message": "AMQ-6871 - By default only send generic platform details\n\nThe default behavior by the OpenWire client will be to send generic\nplatform details to the server with a new flag to send more specific\ninformation."}, {"url": "https://api.github.com/repos/apache/activemq/commits/08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1", "message": "(AMQ-6858) - add extra precautionary check for demand subs\n\nalso remove test that intermittently fails with timing issues"}, {"url": "https://api.github.com/repos/apache/activemq/commits/2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e", "message": "(AMQ-6858) - test fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hzbarcea": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/12c649c2d9116a10d6157f02a6026acd5033e036", "message": "This closes #85. Won't fix. Thanks @jwcarman for contribution, sorry for not picking it up in time."}, {"url": "https://api.github.com/repos/apache/activemq/commits/6e9ceb222ccca30cc052feff3e203d2a4352a481", "message": "This closes #268."}, {"url": "https://api.github.com/repos/apache/activemq/commits/b06e26ca1e2fc50088bb6423403a802461b53879", "message": "This closes #75, closes #265, closes #266"}, {"url": "https://api.github.com/repos/apache/activemq/commits/87db137597affedf7d27c4c1c8935a2608d8d8f1", "message": "[no jira] update targetNamespace version for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/fc4ebd2bc93b39de92a4d2453e8ed9227d9dc435", "message": "[no jira] add targetNamespace for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/e4d38d615b0bb2c5e55d63d2db781fdb580bc638", "message": "This closes #236. Invalid."}, {"url": "https://api.github.com/repos/apache/activemq/commits/25b70f61eeccf3c6ed4221d001048f8e8cb65896", "message": "This closes #264"}, {"url": "https://api.github.com/repos/apache/activemq/commits/ab2711abb10ebda3950a8b005780f6b01c189780", "message": "This closes #267."}, {"url": "https://api.github.com/repos/apache/activemq/commits/52480a4af860d9493896b8c3e2597cd81f11310e", "message": "This closes #228. Thanks @catull and @lichtin for patch"}, {"url": "https://api.github.com/repos/apache/activemq/commits/04eedc3bc41ecbed8237f4be422446c5f4d54146", "message": "This closes #226. Thanks ecki for PR"}, {"url": "https://api.github.com/repos/apache/activemq/commits/69eba7cf379c3a7d3ec95ed4f5f6e917b547e5ff", "message": "[no jira] Fix invalid xml for broker config"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247", "body": "@tabish121 of course you're right. I missed something in the commit, it was an incomplete optimization to avoid multiple conditions in the 'if'. Full tests now on the complete fix, coming up shortly.\n\nThat said, do you see any problem with the approach?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "snurmine": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/39caca7cf6593c167f00e89842b16812edbc578f", "message": "AMQ-6327 - Remove System.out.println"}, {"url": "https://api.github.com/repos/apache/activemq/commits/051e2b791c88e09a0f7cdecfb53eb2fd52c1d39c", "message": "AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/269", "title": "AMQ-6781: The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "body": "The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "splatch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/a8a032af091ae2f6d1affe95b37bb424214d1990", "message": "AMQ-6861 Allow customisation of network bridge creation logic."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "catull": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/b40e5f93bdfdecad84f880edce23c4ae8af9a76d", "message": "[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ecki": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/26eab53723b11b82d3e6439950777b51182b6203", "message": "Javadoc typo fix and cleanup\n\nThis mostly fixes the url1/url2 copy and paste problem. It uses a bit more readable property syntax and introduces a single sentence (plain text) summary for class Javadoc and adds some links."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tabish121": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/d3e439378405afb699fcbfc63d9342fbb6ad77ce", "message": "AMQ-6874 Update Qpid JMS to 0.28.0 and proton-j to 0.24.0\n\nThis updates the AMQP libs Qpid JMS and Proton-J, also updates netty to\n4.1.18.Final to match the version used for Qpid JMS"}, {"url": "https://api.github.com/repos/apache/activemq/commits/36a2871301e9e75c198294d31756b49a22a21fc8", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nFix missing cast on value out of current proton release."}, {"url": "https://api.github.com/repos/apache/activemq/commits/e7bce023de48591475781ba024104f8010a696fc", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nUse the spec defined values when casting the Map from the\nApplicationProperties section."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524", "body": "Recommend you create a patch that applies cleanly against the activemq trunk git repo:\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440", "body": "Patch applied on trunk, many thanks.  \n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049", "body": "This bit looks to filter any response that isn't a ShutdownInfo or a RemoveInfo response which I don't think you would want to do.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "superawesome": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/272", "title": "replicated LevelDB fix and debugging output", "body": "I know LevelDB is now deprecated, and this may not get merged because of that. I certainly don't want to become its maintainer. I had an unhealthy cluster, and did not want to try and migrate it while in that state. This is just a small change to get it healthy again after a slave encountered this error:\r\n\r\nUnexpected session error: java.net.ProtocolException: Maximum protocol buffer length exeeded\r\n\r\nIn my case I believe this is due to having too many LevelDB log files to replicate (a separate LevelDB bug, which I intend to investigate now that this cluster is healthy again).\r\n\r\n2 commits in this PR:\r\n\r\n1) debugging output to track that down and make it more ... debuggable.\r\n\r\n2) a 2-character change to increase a buffer size by 4x, to \"fix\" the problem.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javahongxi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/270", "title": "Update README.md", "body": "only test", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsgonz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/263", "title": "Race condition makes messages queued in the session be delivered before messages queued in consumers. #256", "body": "Create new PR to trigger CI.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "graben": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/258", "title": "AMQ-6805: Add new implementation based on OSGi Declarative Services t\u2026", "body": "\u2026o make OSGi services available for broker configuration", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dtrebbien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/257", "title": "Misc. fixes", "body": "While testing my [SLF4J Helper](http://plugins.netbeans.org/plugin/72557/) plugin for NetBeans IDE, I found some fixes and minor improvements that can be made.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kimmking": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/238", "title": "add ClientIdFilterDispatchPolicy and testcase", "body": "ClientIdFilterDispatchPolicy dispatches messages in a topic to a given client. Then the message with a \"PTP_CLIENTID\" property, can be received by a mqtt client with the same clientId.\r\n\r\nMany developer have been insterested to use this feature:\r\nhttp://blog.csdn.net/kimmking/article/details/17449019", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sigee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/237", "title": "Remove unnecessary boxing / unboxing", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amarkevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/235", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/233", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RomanIsko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/232", "title": "set name for primary key on create table", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alaendle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/230", "title": "Unit test illustrating AMQ-6636.", "body": "Hope this is the right way to contribute.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thodimi1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/227", "title": "SSL Connection leaks", "body": "There are possibilities to create a denial of service attack just by opening TCP connection to a SSL port and keep it open. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomyLobo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/206", "title": "Add missing runlevels to Default-Start", "body": "According to the manual (and the `runlevel` command), Debian starts in runlevel 2 by default:\nhttps://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_sysv_style_init\n\nSo in order for ActiveMQ to start up when a Debian VM starts, you have to add it to these runlevels.\n\nWorkaround: `insserv -v activemq,start=2`\n\nSide-effects:\nRedHat doesn't use runlevels 2 and 4, so it should be fine:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/s1-boot-init-shutdown-sysv.html\n\nSLES doesn't use runlevel 4, but it does use runlevel 2 for \"Local multiuser mode without remote network (NFS, etc.)\":\nhttps://www.suse.com/documentation/sles11/book_sle_admin/data/sec_boot_init.html\n\nSo the only side-effect on these systems is that SLES will try to run ActiveMQ in Local multiuser mode without remote network (and probably fail).\nI think that is an acceptable side-effect since people booting Debian into runlevel 2 is a _lot_ more common due to it being the default.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/16482860", "body": "This variable is used in line 10, i.e. too early.\nThis problem still exists in 5.13.0.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16482860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/16493882", "body": "Apparently this is tracked as [AMQ-6189](https://issues.apache.org/jira/browse/AMQ-6189).\nI made a PR (#172) to fix this problem.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16493882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144485", "body": "This doesn't actually invoke checkStopRunning.\nInstead, it checks if the string \"checkStopRunning\" is empty, which it isn't.\n\nIn other words, this whole if body is never evaluated.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144618", "body": "Luckily this piece of code isn't that important, as it's just responsible for showing a different message (\"FINISHED\" instead of \"TERMINATED\").\n\nNevertheless, someone should clean this mess up.\nSome of us are still on non-systemd distros :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fjollberg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/199", "title": "Make start script work on busybox", "body": "The current version of the activemq start script uses options to ps which are unavailable \nin busybox.\n\nSuggested change refactors the start script to remove duplicated code to find a java process \ngiven a pidfile and makes it work on busybox.\n\nI have limited possibilities of verifying the change on different platforms but it is confirmed to\nwork on at least Mac OS X in addition to busybox and should work on platforms where \nprevious \"ps -p\" command worked.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pdudits": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/197", "title": "https://issues.apache.org/jira/browse/AMQ-6391", "body": "Test case for multiple connections participating in one phase commit,\ncausing leak in ConnectionStateTracker.\n\nKeep all the connections participating in an transaction in a static multimap\nsimilar to the one in TransactionContext.\n\nEven though Garry  says that static fields may cause issues in OSGi, I am offering this as a solution. This static map has same lifecycle, classloading and  source bundle as the one already present in TransactionContext, therefore I assume it cannot really make things worse.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/174", "title": "https://issues.apache.org/jira/browse/AMQ-6209", "body": "SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching messages of a consumer queue.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jenshadlich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/167", "title": "[AMQ-6160] fix NPE; use messageId.getFutureOrSequenceLong() as sequen\u2026", "body": "\u2026ceId if entryLocator is NULL\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pbruski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/165", "title": "AMQ-6135 ActiveMQ HTTP module should support Openwire serialisation", "body": "I am submitting this on behalf of Atlassian, the appropriate CCLAs are in place.\n\nWe have that code running in production and we didn't have any problems reports.\nI assumed rather strict backward compatibility and interoperability requirements, not sure if that's needed.  Well, at least the interoperability should be there.\nIn any case, it's easier to have them removed than to implement them as an afterthought.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emopers": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/160", "title": "TransportConnection does not synchronize iteration on synchronized list", "body": "In TransportConnection.java:861, the synchronized list returned by cs.getTempDestinations() is iterated\nin an unsynchronized manner, but according to the [Oracle Java 7 API specification](http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#synchronizedList%28java.util.List%29),\nthis is not thread-safe and can lead to non-deterministic behavior. This pull request adds a fix by synchronizing the iteration on the list returned by cs.getTempDestinations().\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjnygard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/126", "title": "Fix class loading issues for SSL/nonSSL connectors", "body": "- This resolves issues loading SSL and nonSSL RAR connectors in Glassfish 3.x\n- proposed fix for AMQ-5873\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hauenstein": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/114", "title": "https://issues.apache.org/jira/browse/AMQ-5265", "body": "This is a revision of AMQ-5265 -- the original fix didn't quite clean up all of the mbeans that MBeanBridgeDestination created, as [noted in the original issue by Tarek Hammoud](https://issues.apache.org/jira/browse/AMQ-5265?focusedCommentId=14527137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14527137).  The key for the map used to track the ObjectNames was an ActiveMQDestination (which uses the destination's physical name for its equals() implementation) caused the inbound and outbound entries in the map to randomly replace each other.\n\nLike Tarek, I could reproduce this issue using 5.11.1 with two networked brokers (full duplex) with a client publishing to a topic.  After I restart a broker, the logs on the non-restarted broker show the MBeanBridgeDestination reporting many InstanceAlreadyExistsExceptions when trying to register the unintentionally-duplicated mbeans.\n\nPlease let me know if this makes sense or if there are any changes you would suggest (ex: is there a reasonable way or an example I could follow to add a unit test for something like this?).  Thanks!\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bric3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/109", "title": "Renames env script to avoid possible POSIX env shadowing", "body": "Got an issue with other shell scripts, turns out that when one prepends `$PATH` by `activemq/bin`, `env` is shadowed by ActiveMQ's `env`.\n\nThat means that script that want to run commands in customized environment will simple don't be executed like : \n\n``` sh\nenv A=aaa B=bbb mv ...\n```\n\nWorse such lines won't fail, because this will return the `0` exit status. The workaround is simple, i.e. append in `%PATH` instead of prepend. But a proper fix is needed. This PR proposes to rename the shell script from `env` to `activemq-env`.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PiotrKlimczak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/91", "title": "AMQ-4693 Adds Kerberos 5 authentication and connection encryption over TLS", "body": "Basing on RFC2712\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008", "body": "Hmmm. My patch to different issues is here. Not sure why?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205", "body": "created new pull request:\nhttps://github.com/apache/activemq/pull/42\nIt is very same except do not contains unecessary commits as was pulled from dedicated branch.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260", "body": "Unit test needed\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "burtonator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/65", "title": "Burton concurrent destination gc", "body": "Improves performance of concurrent destination GC dramatically. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "soul2zimate": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/63", "title": "revise set and get methods name of Activation Spec properties \"Redeliver...", "body": "...yBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" to allow configuration through @ActivationConfigProperty.\n\nhttps://issues.apache.org/jira/browse/AMQ-5613\n\nActivation Spec properties[1] \"RedeliveryBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" can not be used within @ActivationConfigProperty, in contrast, it accepts \"backOffMultiplier\" and \"useExponentialBackOff\".\n\n[1] http://activemq.apache.org/resource-adapter-properties.html\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scoopex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/61", "title": "AMQ-5503 - Make init script more reliable", "body": "See https://issues.apache.org/jira/browse/AMQ-5503\nUnfortunately the merge of this fix was delayed without any communicated reason.\nTherefore i recreated the pull request.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armsargis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186", "body": "Issued opened and patch summited(and applied by ActiveMQ team) using instruction from: http://activemq.apache.org/how-can-i-contribute.html.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "janstey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832", "body": "Closed as per \"[DISCUSS] Combine windows and unix distros\" thread on dev list.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "alexcojocaru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304", "body": "Done; see https://github.com/apache/activemq/pull/8\n\nClosing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zmhassan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857", "body": "![amq-errorhandler](https://cloud.githubusercontent.com/assets/1269759/2807893/4e3d9926-ccfd-11e3-9947-f0e8d460dc06.png)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139", "body": "This code isn't building maybe an error. I'm going to close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420", "body": "I will remove the hardcoded JMSDestination and push up new code by end of day\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454", "body": "I think I added this by accident I will remove this\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526", "body": "We are not using this Javascript file so I think it will be safe to delete this one.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565", "body": "I don't think we need the bootstrap-theme because we get everything from bootstrap.min.css. I will delete this also\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590", "body": "I am converting the CSS for the table to bootstrap styles that are provided by bootstrap javascript css library.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616", "body": "I will remove this comments because we don't need it here.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682", "body": "The reason why I do this is because the user needs to get redirected back to the page they where on when they deleted something. For example if I'm on the 15th page in browse.jsp and I delete something. I shouldn't start from the first page.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749", "body": "I will remove unnecessary comments\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807", "body": "I think this may be a repeat of the functions used in PaginQueue so it will be safe to delete the functions that are not being used. I will delete these functions and push up new code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841", "body": "I should also get rid of the console.log because its not nice to have it here. Just need it for debugging purposes.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862", "body": "I will also deleted commented out code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsherman1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433", "body": "Patch for https://issues.apache.org/jira/browse/AMQ-5177\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davsclaus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472", "body": "Thanks there were 2 other places I fixed that and committed on master. \n\nCan you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476", "body": "Thanks for the PR. Its merged. Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482", "body": "Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493", "body": "We need an unit test, if not we cannot accept this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501", "body": "This has been applied. Can you close this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jwcarman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240", "body": "Sure thing! :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305", "body": "Yes. I was mimicking the existing code I believe\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dhirajsb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642", "body": "Closed in favor of PR 22\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118", "body": "Resolved merge conflicts\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sobkowiak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835", "body": "The solution from 5.9.x is not enough. I'll open a new pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486", "body": "Pull request applied in commit 25600944e662279ec1113acd4d27e9c64ba8415f\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877", "body": "Solved in commit 6902eaefc46d640ad25c6fa29216bd6efb48c0c4\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "dkulp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055", "body": "Hadrian merged this to trunk.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825", "body": "Tim committed this (with some mods discussed on IRC).\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "traylz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437", "body": "Timothy Bish applied patch. See https://issues.apache.org/jira/browse/AMQ-5281?focusedCommentId=14100884&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14100884\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PavloVasylchenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/11394484", "body": "Http schema should be registered too if we uses https transport, since proxy can use only http.\nhttps://github.com/apache/activemq/blob/master/activemq-http/src/main/java/org/apache/activemq/transport/https/HttpsClientTransport.java#L51\nHere only https transport is registered and if we set proxy we will get \"Scheme 'http' not registered.\" error.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/11394484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tritschler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/14296964", "body": "No more shutdown ?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/14296964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "JonathanMalek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/17740568", "body": "This particular change creates a problem for a prefix of the form: `*.*.`\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/17740568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trejkaz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/21907488", "body": "Interestingly this pull request did suggest making serializablePackages private. I wonder what went wrong between this pull request and what actually got committed...\r\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/21907488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gelin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/23457488", "body": "This breaks stomp, mqtt and other (non openwire) protocols. Because only openwire transport grabs this \"wireFormat.host\" property while other protocols not.\r\nSo, when you try to connect to, for example stomp://localhost:61613, the exception with message \"Invalid connect parameters: {wireFormat.host=localhost}\" appears.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/23457488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "peteryhwong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417", "body": "I think we should ensure the brackets conform to Egyptian Brackets as the style used by the rest of the source file.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886", "body": "Can these not be final?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "clebertsuconic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809", "body": "if that is an issue.. this would be dead slow for the server...\r\n\r\nif there's any issues around this.. this fix is not good anyways.\r\n\r\nAs Tim said.. you need a test.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gemmellr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072", "body": "It's actually an example of Qpid Proton, rather than the linked Qpid Messaging API.\r\n\r\nMore specifically however, its an example of the old 'Messenger' API, which has seen little attention for some time due and wouldn't be recommended for new users. PROTON-1585 even removed the examples for it at Qpid .\r\n\r\nI'd suggest the example actually be removed instead, or else updated to use the newer Proton reactive APIs, e.g. demonstrated by http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/examples/index.html and http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/book/tutorial.html ", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}, "3": {"gtully": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/ec6fa190999160676cab900038b268b2d40a4d5c", "message": "[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached"}, {"url": "https://api.github.com/repos/apache/activemq/commits/8c77e9553eaf2062b937c68737a5128d0f9a4347", "message": "[AMQ-6880] fix filter match logic when transport connector updateClusterFilter is in play"}, {"url": "https://api.github.com/repos/apache/activemq/commits/22f8f88ddbe050fc991ef816152e1169af29c834", "message": "[NO JIRA] harden test occasional failure"}, {"url": "https://api.github.com/repos/apache/activemq/commits/dd6dcc188c80888e2fac37646189ae3b407c1043", "message": "fix regression - ensure connector created for remote jmx assertion"}, {"url": "https://api.github.com/repos/apache/activemq/commits/9d98ee253fbe3e2134e7242abd572c6e64a6f6b2", "message": "sync code default with config default to use jvm mbean server"}, {"url": "https://api.github.com/repos/apache/activemq/commits/151e17abfed83e16734d9775e6862b1d1241282a", "message": "[AMQ-6854] - periodic log warn on store limits reached in the same way"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016", "body": "can you add a junit test that exercises this feature, that will protect it into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718", "body": "can you rebase your changes from trunk? It will then be trivial to apply for the next release\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947", "body": "would it be possible to add a unit test - there are a bunch of karaf feature tests and even seems to be one for the client feature - maybe that can be modified to demo the problem\nhttps://github.com/apache/activemq/blob/trunk/activemq-karaf-itest/src/test/java/org/apache/activemq/karaf/itest/ActiveMQClientBundleTest.java\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176", "body": "please provide a junit test case with the patch. that will protect your fix into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365", "body": "org.apache.activemq.store.jdbc.TransactionContext#close already has that logic... maybe see if those two apis can follow the same pattern as the rest and leverage the existing close?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cshannon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/4535e8f097c993364026c00ed40777c71a36a6ea", "message": "AMQ-6884 - Replacing printStackTrace() with logging statement"}, {"url": "https://api.github.com/repos/apache/activemq/commits/56baba96c657d4e44b88955a964d6c92ff39b822", "message": "AMQ-6875 - Use the correct destination for Virtual destination consumers\nwhen using Virtual Topics"}, {"url": "https://api.github.com/repos/apache/activemq/commits/5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a", "message": "AMQ-6871 - By default only send generic platform details\n\nThe default behavior by the OpenWire client will be to send generic\nplatform details to the server with a new flag to send more specific\ninformation."}, {"url": "https://api.github.com/repos/apache/activemq/commits/08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1", "message": "(AMQ-6858) - add extra precautionary check for demand subs\n\nalso remove test that intermittently fails with timing issues"}, {"url": "https://api.github.com/repos/apache/activemq/commits/2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e", "message": "(AMQ-6858) - test fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hzbarcea": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/12c649c2d9116a10d6157f02a6026acd5033e036", "message": "This closes #85. Won't fix. Thanks @jwcarman for contribution, sorry for not picking it up in time."}, {"url": "https://api.github.com/repos/apache/activemq/commits/6e9ceb222ccca30cc052feff3e203d2a4352a481", "message": "This closes #268."}, {"url": "https://api.github.com/repos/apache/activemq/commits/b06e26ca1e2fc50088bb6423403a802461b53879", "message": "This closes #75, closes #265, closes #266"}, {"url": "https://api.github.com/repos/apache/activemq/commits/87db137597affedf7d27c4c1c8935a2608d8d8f1", "message": "[no jira] update targetNamespace version for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/fc4ebd2bc93b39de92a4d2453e8ed9227d9dc435", "message": "[no jira] add targetNamespace for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/e4d38d615b0bb2c5e55d63d2db781fdb580bc638", "message": "This closes #236. Invalid."}, {"url": "https://api.github.com/repos/apache/activemq/commits/25b70f61eeccf3c6ed4221d001048f8e8cb65896", "message": "This closes #264"}, {"url": "https://api.github.com/repos/apache/activemq/commits/ab2711abb10ebda3950a8b005780f6b01c189780", "message": "This closes #267."}, {"url": "https://api.github.com/repos/apache/activemq/commits/52480a4af860d9493896b8c3e2597cd81f11310e", "message": "This closes #228. Thanks @catull and @lichtin for patch"}, {"url": "https://api.github.com/repos/apache/activemq/commits/04eedc3bc41ecbed8237f4be422446c5f4d54146", "message": "This closes #226. Thanks ecki for PR"}, {"url": "https://api.github.com/repos/apache/activemq/commits/69eba7cf379c3a7d3ec95ed4f5f6e917b547e5ff", "message": "[no jira] Fix invalid xml for broker config"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247", "body": "@tabish121 of course you're right. I missed something in the commit, it was an incomplete optimization to avoid multiple conditions in the 'if'. Full tests now on the complete fix, coming up shortly.\n\nThat said, do you see any problem with the approach?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "snurmine": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/39caca7cf6593c167f00e89842b16812edbc578f", "message": "AMQ-6327 - Remove System.out.println"}, {"url": "https://api.github.com/repos/apache/activemq/commits/051e2b791c88e09a0f7cdecfb53eb2fd52c1d39c", "message": "AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/269", "title": "AMQ-6781: The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "body": "The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "splatch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/a8a032af091ae2f6d1affe95b37bb424214d1990", "message": "AMQ-6861 Allow customisation of network bridge creation logic."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "catull": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/b40e5f93bdfdecad84f880edce23c4ae8af9a76d", "message": "[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ecki": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/26eab53723b11b82d3e6439950777b51182b6203", "message": "Javadoc typo fix and cleanup\n\nThis mostly fixes the url1/url2 copy and paste problem. It uses a bit more readable property syntax and introduces a single sentence (plain text) summary for class Javadoc and adds some links."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tabish121": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/d3e439378405afb699fcbfc63d9342fbb6ad77ce", "message": "AMQ-6874 Update Qpid JMS to 0.28.0 and proton-j to 0.24.0\n\nThis updates the AMQP libs Qpid JMS and Proton-J, also updates netty to\n4.1.18.Final to match the version used for Qpid JMS"}, {"url": "https://api.github.com/repos/apache/activemq/commits/36a2871301e9e75c198294d31756b49a22a21fc8", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nFix missing cast on value out of current proton release."}, {"url": "https://api.github.com/repos/apache/activemq/commits/e7bce023de48591475781ba024104f8010a696fc", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nUse the spec defined values when casting the Map from the\nApplicationProperties section."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524", "body": "Recommend you create a patch that applies cleanly against the activemq trunk git repo:\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440", "body": "Patch applied on trunk, many thanks.  \n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049", "body": "This bit looks to filter any response that isn't a ShutdownInfo or a RemoveInfo response which I don't think you would want to do.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "superawesome": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/272", "title": "replicated LevelDB fix and debugging output", "body": "I know LevelDB is now deprecated, and this may not get merged because of that. I certainly don't want to become its maintainer. I had an unhealthy cluster, and did not want to try and migrate it while in that state. This is just a small change to get it healthy again after a slave encountered this error:\r\n\r\nUnexpected session error: java.net.ProtocolException: Maximum protocol buffer length exeeded\r\n\r\nIn my case I believe this is due to having too many LevelDB log files to replicate (a separate LevelDB bug, which I intend to investigate now that this cluster is healthy again).\r\n\r\n2 commits in this PR:\r\n\r\n1) debugging output to track that down and make it more ... debuggable.\r\n\r\n2) a 2-character change to increase a buffer size by 4x, to \"fix\" the problem.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javahongxi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/270", "title": "Update README.md", "body": "only test", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsgonz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/263", "title": "Race condition makes messages queued in the session be delivered before messages queued in consumers. #256", "body": "Create new PR to trigger CI.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "graben": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/258", "title": "AMQ-6805: Add new implementation based on OSGi Declarative Services t\u2026", "body": "\u2026o make OSGi services available for broker configuration", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dtrebbien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/257", "title": "Misc. fixes", "body": "While testing my [SLF4J Helper](http://plugins.netbeans.org/plugin/72557/) plugin for NetBeans IDE, I found some fixes and minor improvements that can be made.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kimmking": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/238", "title": "add ClientIdFilterDispatchPolicy and testcase", "body": "ClientIdFilterDispatchPolicy dispatches messages in a topic to a given client. Then the message with a \"PTP_CLIENTID\" property, can be received by a mqtt client with the same clientId.\r\n\r\nMany developer have been insterested to use this feature:\r\nhttp://blog.csdn.net/kimmking/article/details/17449019", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sigee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/237", "title": "Remove unnecessary boxing / unboxing", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amarkevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/235", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/233", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RomanIsko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/232", "title": "set name for primary key on create table", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alaendle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/230", "title": "Unit test illustrating AMQ-6636.", "body": "Hope this is the right way to contribute.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thodimi1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/227", "title": "SSL Connection leaks", "body": "There are possibilities to create a denial of service attack just by opening TCP connection to a SSL port and keep it open. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomyLobo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/206", "title": "Add missing runlevels to Default-Start", "body": "According to the manual (and the `runlevel` command), Debian starts in runlevel 2 by default:\nhttps://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_sysv_style_init\n\nSo in order for ActiveMQ to start up when a Debian VM starts, you have to add it to these runlevels.\n\nWorkaround: `insserv -v activemq,start=2`\n\nSide-effects:\nRedHat doesn't use runlevels 2 and 4, so it should be fine:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/s1-boot-init-shutdown-sysv.html\n\nSLES doesn't use runlevel 4, but it does use runlevel 2 for \"Local multiuser mode without remote network (NFS, etc.)\":\nhttps://www.suse.com/documentation/sles11/book_sle_admin/data/sec_boot_init.html\n\nSo the only side-effect on these systems is that SLES will try to run ActiveMQ in Local multiuser mode without remote network (and probably fail).\nI think that is an acceptable side-effect since people booting Debian into runlevel 2 is a _lot_ more common due to it being the default.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fjollberg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/199", "title": "Make start script work on busybox", "body": "The current version of the activemq start script uses options to ps which are unavailable \nin busybox.\n\nSuggested change refactors the start script to remove duplicated code to find a java process \ngiven a pidfile and makes it work on busybox.\n\nI have limited possibilities of verifying the change on different platforms but it is confirmed to\nwork on at least Mac OS X in addition to busybox and should work on platforms where \nprevious \"ps -p\" command worked.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pdudits": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/197", "title": "https://issues.apache.org/jira/browse/AMQ-6391", "body": "Test case for multiple connections participating in one phase commit,\ncausing leak in ConnectionStateTracker.\n\nKeep all the connections participating in an transaction in a static multimap\nsimilar to the one in TransactionContext.\n\nEven though Garry  says that static fields may cause issues in OSGi, I am offering this as a solution. This static map has same lifecycle, classloading and  source bundle as the one already present in TransactionContext, therefore I assume it cannot really make things worse.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/174", "title": "https://issues.apache.org/jira/browse/AMQ-6209", "body": "SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching messages of a consumer queue.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jenshadlich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/167", "title": "[AMQ-6160] fix NPE; use messageId.getFutureOrSequenceLong() as sequen\u2026", "body": "\u2026ceId if entryLocator is NULL\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pbruski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/165", "title": "AMQ-6135 ActiveMQ HTTP module should support Openwire serialisation", "body": "I am submitting this on behalf of Atlassian, the appropriate CCLAs are in place.\n\nWe have that code running in production and we didn't have any problems reports.\nI assumed rather strict backward compatibility and interoperability requirements, not sure if that's needed.  Well, at least the interoperability should be there.\nIn any case, it's easier to have them removed than to implement them as an afterthought.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emopers": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/160", "title": "TransportConnection does not synchronize iteration on synchronized list", "body": "In TransportConnection.java:861, the synchronized list returned by cs.getTempDestinations() is iterated\nin an unsynchronized manner, but according to the [Oracle Java 7 API specification](http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#synchronizedList%28java.util.List%29),\nthis is not thread-safe and can lead to non-deterministic behavior. This pull request adds a fix by synchronizing the iteration on the list returned by cs.getTempDestinations().\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjnygard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/126", "title": "Fix class loading issues for SSL/nonSSL connectors", "body": "- This resolves issues loading SSL and nonSSL RAR connectors in Glassfish 3.x\n- proposed fix for AMQ-5873\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hauenstein": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/114", "title": "https://issues.apache.org/jira/browse/AMQ-5265", "body": "This is a revision of AMQ-5265 -- the original fix didn't quite clean up all of the mbeans that MBeanBridgeDestination created, as [noted in the original issue by Tarek Hammoud](https://issues.apache.org/jira/browse/AMQ-5265?focusedCommentId=14527137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14527137).  The key for the map used to track the ObjectNames was an ActiveMQDestination (which uses the destination's physical name for its equals() implementation) caused the inbound and outbound entries in the map to randomly replace each other.\n\nLike Tarek, I could reproduce this issue using 5.11.1 with two networked brokers (full duplex) with a client publishing to a topic.  After I restart a broker, the logs on the non-restarted broker show the MBeanBridgeDestination reporting many InstanceAlreadyExistsExceptions when trying to register the unintentionally-duplicated mbeans.\n\nPlease let me know if this makes sense or if there are any changes you would suggest (ex: is there a reasonable way or an example I could follow to add a unit test for something like this?).  Thanks!\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bric3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/109", "title": "Renames env script to avoid possible POSIX env shadowing", "body": "Got an issue with other shell scripts, turns out that when one prepends `$PATH` by `activemq/bin`, `env` is shadowed by ActiveMQ's `env`.\n\nThat means that script that want to run commands in customized environment will simple don't be executed like : \n\n``` sh\nenv A=aaa B=bbb mv ...\n```\n\nWorse such lines won't fail, because this will return the `0` exit status. The workaround is simple, i.e. append in `%PATH` instead of prepend. But a proper fix is needed. This PR proposes to rename the shell script from `env` to `activemq-env`.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PiotrKlimczak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/91", "title": "AMQ-4693 Adds Kerberos 5 authentication and connection encryption over TLS", "body": "Basing on RFC2712\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008", "body": "Hmmm. My patch to different issues is here. Not sure why?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205", "body": "created new pull request:\nhttps://github.com/apache/activemq/pull/42\nIt is very same except do not contains unecessary commits as was pulled from dedicated branch.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260", "body": "Unit test needed\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "burtonator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/65", "title": "Burton concurrent destination gc", "body": "Improves performance of concurrent destination GC dramatically. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "soul2zimate": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/63", "title": "revise set and get methods name of Activation Spec properties \"Redeliver...", "body": "...yBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" to allow configuration through @ActivationConfigProperty.\n\nhttps://issues.apache.org/jira/browse/AMQ-5613\n\nActivation Spec properties[1] \"RedeliveryBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" can not be used within @ActivationConfigProperty, in contrast, it accepts \"backOffMultiplier\" and \"useExponentialBackOff\".\n\n[1] http://activemq.apache.org/resource-adapter-properties.html\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scoopex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/61", "title": "AMQ-5503 - Make init script more reliable", "body": "See https://issues.apache.org/jira/browse/AMQ-5503\nUnfortunately the merge of this fix was delayed without any communicated reason.\nTherefore i recreated the pull request.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armsargis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186", "body": "Issued opened and patch summited(and applied by ActiveMQ team) using instruction from: http://activemq.apache.org/how-can-i-contribute.html.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "janstey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832", "body": "Closed as per \"[DISCUSS] Combine windows and unix distros\" thread on dev list.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "alexcojocaru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304", "body": "Done; see https://github.com/apache/activemq/pull/8\n\nClosing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zmhassan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857", "body": "![amq-errorhandler](https://cloud.githubusercontent.com/assets/1269759/2807893/4e3d9926-ccfd-11e3-9947-f0e8d460dc06.png)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139", "body": "This code isn't building maybe an error. I'm going to close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420", "body": "I will remove the hardcoded JMSDestination and push up new code by end of day\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454", "body": "I think I added this by accident I will remove this\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526", "body": "We are not using this Javascript file so I think it will be safe to delete this one.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565", "body": "I don't think we need the bootstrap-theme because we get everything from bootstrap.min.css. I will delete this also\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590", "body": "I am converting the CSS for the table to bootstrap styles that are provided by bootstrap javascript css library.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616", "body": "I will remove this comments because we don't need it here.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682", "body": "The reason why I do this is because the user needs to get redirected back to the page they where on when they deleted something. For example if I'm on the 15th page in browse.jsp and I delete something. I shouldn't start from the first page.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749", "body": "I will remove unnecessary comments\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807", "body": "I think this may be a repeat of the functions used in PaginQueue so it will be safe to delete the functions that are not being used. I will delete these functions and push up new code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841", "body": "I should also get rid of the console.log because its not nice to have it here. Just need it for debugging purposes.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862", "body": "I will also deleted commented out code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsherman1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433", "body": "Patch for https://issues.apache.org/jira/browse/AMQ-5177\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davsclaus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472", "body": "Thanks there were 2 other places I fixed that and committed on master. \n\nCan you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476", "body": "Thanks for the PR. Its merged. Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482", "body": "Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493", "body": "We need an unit test, if not we cannot accept this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501", "body": "This has been applied. Can you close this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jwcarman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240", "body": "Sure thing! :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305", "body": "Yes. I was mimicking the existing code I believe\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dhirajsb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642", "body": "Closed in favor of PR 22\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118", "body": "Resolved merge conflicts\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sobkowiak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835", "body": "The solution from 5.9.x is not enough. I'll open a new pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486", "body": "Pull request applied in commit 25600944e662279ec1113acd4d27e9c64ba8415f\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877", "body": "Solved in commit 6902eaefc46d640ad25c6fa29216bd6efb48c0c4\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "dkulp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055", "body": "Hadrian merged this to trunk.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825", "body": "Tim committed this (with some mods discussed on IRC).\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "traylz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437", "body": "Timothy Bish applied patch. See https://issues.apache.org/jira/browse/AMQ-5281?focusedCommentId=14100884&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14100884\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "peteryhwong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417", "body": "I think we should ensure the brackets conform to Egyptian Brackets as the style used by the rest of the source file.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886", "body": "Can these not be final?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "clebertsuconic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809", "body": "if that is an issue.. this would be dead slow for the server...\r\n\r\nif there's any issues around this.. this fix is not good anyways.\r\n\r\nAs Tim said.. you need a test.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gemmellr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072", "body": "It's actually an example of Qpid Proton, rather than the linked Qpid Messaging API.\r\n\r\nMore specifically however, its an example of the old 'Messenger' API, which has seen little attention for some time due and wouldn't be recommended for new users. PROTON-1585 even removed the examples for it at Qpid .\r\n\r\nI'd suggest the example actually be removed instead, or else updated to use the newer Proton reactive APIs, e.g. demonstrated by http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/examples/index.html and http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/book/tutorial.html ", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}, "4": {"gtully": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/ec6fa190999160676cab900038b268b2d40a4d5c", "message": "[AMQ-6815] rework to drop the batch reference from Location such that batches are free for gc when index pages are agressively cached"}, {"url": "https://api.github.com/repos/apache/activemq/commits/8c77e9553eaf2062b937c68737a5128d0f9a4347", "message": "[AMQ-6880] fix filter match logic when transport connector updateClusterFilter is in play"}, {"url": "https://api.github.com/repos/apache/activemq/commits/22f8f88ddbe050fc991ef816152e1169af29c834", "message": "[NO JIRA] harden test occasional failure"}, {"url": "https://api.github.com/repos/apache/activemq/commits/dd6dcc188c80888e2fac37646189ae3b407c1043", "message": "fix regression - ensure connector created for remote jmx assertion"}, {"url": "https://api.github.com/repos/apache/activemq/commits/9d98ee253fbe3e2134e7242abd572c6e64a6f6b2", "message": "sync code default with config default to use jvm mbean server"}, {"url": "https://api.github.com/repos/apache/activemq/commits/151e17abfed83e16734d9775e6862b1d1241282a", "message": "[AMQ-6854] - periodic log warn on store limits reached in the same way"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016", "body": "can you add a junit test that exercises this feature, that will protect it into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/31002016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718", "body": "can you rebase your changes from trunk? It will then be trivial to apply for the next release\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32598718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947", "body": "would it be possible to add a unit test - there are a bunch of karaf feature tests and even seems to be one for the client feature - maybe that can be modified to demo the problem\nhttps://github.com/apache/activemq/blob/trunk/activemq-karaf-itest/src/test/java/org/apache/activemq/karaf/itest/ActiveMQClientBundleTest.java\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/46831947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176", "body": "please provide a junit test case with the patch. that will protect your fix into the future.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51318176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365", "body": "org.apache.activemq.store.jdbc.TransactionContext#close already has that logic... maybe see if those two apis can follow the same pattern as the rest and leverage the existing close?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51775365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cshannon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/4535e8f097c993364026c00ed40777c71a36a6ea", "message": "AMQ-6884 - Replacing printStackTrace() with logging statement"}, {"url": "https://api.github.com/repos/apache/activemq/commits/56baba96c657d4e44b88955a964d6c92ff39b822", "message": "AMQ-6875 - Use the correct destination for Virtual destination consumers\nwhen using Virtual Topics"}, {"url": "https://api.github.com/repos/apache/activemq/commits/5fa0bbd5156f29d97dcf48fd9fdb6a0488a8df1a", "message": "AMQ-6871 - By default only send generic platform details\n\nThe default behavior by the OpenWire client will be to send generic\nplatform details to the server with a new flag to send more specific\ninformation."}, {"url": "https://api.github.com/repos/apache/activemq/commits/08aa5118ffcd8dfc4ec813d799a61ef1ee4421d1", "message": "(AMQ-6858) - add extra precautionary check for demand subs\n\nalso remove test that intermittently fails with timing issues"}, {"url": "https://api.github.com/repos/apache/activemq/commits/2e3a7f6114fae1ffb9c19ee4af2f4541fdfc238e", "message": "(AMQ-6858) - test fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hzbarcea": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/12c649c2d9116a10d6157f02a6026acd5033e036", "message": "This closes #85. Won't fix. Thanks @jwcarman for contribution, sorry for not picking it up in time."}, {"url": "https://api.github.com/repos/apache/activemq/commits/6e9ceb222ccca30cc052feff3e203d2a4352a481", "message": "This closes #268."}, {"url": "https://api.github.com/repos/apache/activemq/commits/b06e26ca1e2fc50088bb6423403a802461b53879", "message": "This closes #75, closes #265, closes #266"}, {"url": "https://api.github.com/repos/apache/activemq/commits/87db137597affedf7d27c4c1c8935a2608d8d8f1", "message": "[no jira] update targetNamespace version for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/fc4ebd2bc93b39de92a4d2453e8ed9227d9dc435", "message": "[no jira] add targetNamespace for karaf features"}, {"url": "https://api.github.com/repos/apache/activemq/commits/e4d38d615b0bb2c5e55d63d2db781fdb580bc638", "message": "This closes #236. Invalid."}, {"url": "https://api.github.com/repos/apache/activemq/commits/25b70f61eeccf3c6ed4221d001048f8e8cb65896", "message": "This closes #264"}, {"url": "https://api.github.com/repos/apache/activemq/commits/ab2711abb10ebda3950a8b005780f6b01c189780", "message": "This closes #267."}, {"url": "https://api.github.com/repos/apache/activemq/commits/52480a4af860d9493896b8c3e2597cd81f11310e", "message": "This closes #228. Thanks @catull and @lichtin for patch"}, {"url": "https://api.github.com/repos/apache/activemq/commits/04eedc3bc41ecbed8237f4be422446c5f4d54146", "message": "This closes #226. Thanks ecki for PR"}, {"url": "https://api.github.com/repos/apache/activemq/commits/69eba7cf379c3a7d3ec95ed4f5f6e917b547e5ff", "message": "[no jira] Fix invalid xml for broker config"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247", "body": "@tabish121 of course you're right. I missed something in the commit, it was an incomplete optimization to avoid multiple conditions in the 'if'. Full tests now on the complete fix, coming up shortly.\n\nThat said, do you see any problem with the approach?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86220247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "snurmine": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/39caca7cf6593c167f00e89842b16812edbc578f", "message": "AMQ-6327 - Remove System.out.println"}, {"url": "https://api.github.com/repos/apache/activemq/commits/051e2b791c88e09a0f7cdecfb53eb2fd52c1d39c", "message": "AMQ-6327 - getNextScheduledTime() returns incorrect time when working with day of month"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/269", "title": "AMQ-6781: The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "body": "The ActiveMQ Web Console doesn\u2019t support a plus (+) sign in the ClientID", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "splatch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/a8a032af091ae2f6d1affe95b37bb424214d1990", "message": "AMQ-6861 Allow customisation of network bridge creation logic."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "catull": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/b40e5f93bdfdecad84f880edce23c4ae8af9a76d", "message": "[AMQ-6601] AMQ with master and slave broker, shutting down slave causes dead-lock."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ecki": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/26eab53723b11b82d3e6439950777b51182b6203", "message": "Javadoc typo fix and cleanup\n\nThis mostly fixes the url1/url2 copy and paste problem. It uses a bit more readable property syntax and introduces a single sentence (plain text) summary for class Javadoc and adds some links."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tabish121": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/activemq/commits/d3e439378405afb699fcbfc63d9342fbb6ad77ce", "message": "AMQ-6874 Update Qpid JMS to 0.28.0 and proton-j to 0.24.0\n\nThis updates the AMQP libs Qpid JMS and Proton-J, also updates netty to\n4.1.18.Final to match the version used for Qpid JMS"}, {"url": "https://api.github.com/repos/apache/activemq/commits/36a2871301e9e75c198294d31756b49a22a21fc8", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nFix missing cast on value out of current proton release."}, {"url": "https://api.github.com/repos/apache/activemq/commits/e7bce023de48591475781ba024104f8010a696fc", "message": "AMQ-6872 Use correct type casts on ApplicationProperties Map\n\nUse the spec defined values when casting the Map from the\nApplicationProperties section."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524", "body": "Recommend you create a patch that applies cleanly against the activemq trunk git repo:\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32774524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440", "body": "Patch applied on trunk, many thanks.  \n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32787440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049", "body": "This bit looks to filter any response that isn't a ShutdownInfo or a RemoveInfo response which I don't think you would want to do.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/86219049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "superawesome": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/272", "title": "replicated LevelDB fix and debugging output", "body": "I know LevelDB is now deprecated, and this may not get merged because of that. I certainly don't want to become its maintainer. I had an unhealthy cluster, and did not want to try and migrate it while in that state. This is just a small change to get it healthy again after a slave encountered this error:\r\n\r\nUnexpected session error: java.net.ProtocolException: Maximum protocol buffer length exeeded\r\n\r\nIn my case I believe this is due to having too many LevelDB log files to replicate (a separate LevelDB bug, which I intend to investigate now that this cluster is healthy again).\r\n\r\n2 commits in this PR:\r\n\r\n1) debugging output to track that down and make it more ... debuggable.\r\n\r\n2) a 2-character change to increase a buffer size by 4x, to \"fix\" the problem.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javahongxi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/270", "title": "Update README.md", "body": "only test", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsgonz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/263", "title": "Race condition makes messages queued in the session be delivered before messages queued in consumers. #256", "body": "Create new PR to trigger CI.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "graben": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/258", "title": "AMQ-6805: Add new implementation based on OSGi Declarative Services t\u2026", "body": "\u2026o make OSGi services available for broker configuration", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dtrebbien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/257", "title": "Misc. fixes", "body": "While testing my [SLF4J Helper](http://plugins.netbeans.org/plugin/72557/) plugin for NetBeans IDE, I found some fixes and minor improvements that can be made.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kimmking": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/238", "title": "add ClientIdFilterDispatchPolicy and testcase", "body": "ClientIdFilterDispatchPolicy dispatches messages in a topic to a given client. Then the message with a \"PTP_CLIENTID\" property, can be received by a mqtt client with the same clientId.\r\n\r\nMany developer have been insterested to use this feature:\r\nhttp://blog.csdn.net/kimmking/article/details/17449019", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sigee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/237", "title": "Remove unnecessary boxing / unboxing", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amarkevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/235", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/233", "title": "AMQ-6556 Support system property proxy settings for HTTP(S) client", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RomanIsko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/232", "title": "set name for primary key on create table", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alaendle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/230", "title": "Unit test illustrating AMQ-6636.", "body": "Hope this is the right way to contribute.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thodimi1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/227", "title": "SSL Connection leaks", "body": "There are possibilities to create a denial of service attack just by opening TCP connection to a SSL port and keep it open. ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomyLobo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/206", "title": "Add missing runlevels to Default-Start", "body": "According to the manual (and the `runlevel` command), Debian starts in runlevel 2 by default:\nhttps://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_sysv_style_init\n\nSo in order for ActiveMQ to start up when a Debian VM starts, you have to add it to these runlevels.\n\nWorkaround: `insserv -v activemq,start=2`\n\nSide-effects:\nRedHat doesn't use runlevels 2 and 4, so it should be fine:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Reference_Guide/s1-boot-init-shutdown-sysv.html\n\nSLES doesn't use runlevel 4, but it does use runlevel 2 for \"Local multiuser mode without remote network (NFS, etc.)\":\nhttps://www.suse.com/documentation/sles11/book_sle_admin/data/sec_boot_init.html\n\nSo the only side-effect on these systems is that SLES will try to run ActiveMQ in Local multiuser mode without remote network (and probably fail).\nI think that is an acceptable side-effect since people booting Debian into runlevel 2 is a _lot_ more common due to it being the default.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/16482860", "body": "This variable is used in line 10, i.e. too early.\nThis problem still exists in 5.13.0.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16482860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/16493882", "body": "Apparently this is tracked as [AMQ-6189](https://issues.apache.org/jira/browse/AMQ-6189).\nI made a PR (#172) to fix this problem.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/16493882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144485", "body": "This doesn't actually invoke checkStopRunning.\nInstead, it checks if the string \"checkStopRunning\" is empty, which it isn't.\n\nIn other words, this whole if body is never evaluated.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/comments/18144618", "body": "Luckily this piece of code isn't that important, as it's just responsible for showing a different message (\"FINISHED\" instead of \"TERMINATED\").\n\nNevertheless, someone should clean this mess up.\nSome of us are still on non-systemd distros :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/18144618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fjollberg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/199", "title": "Make start script work on busybox", "body": "The current version of the activemq start script uses options to ps which are unavailable \nin busybox.\n\nSuggested change refactors the start script to remove duplicated code to find a java process \ngiven a pidfile and makes it work on busybox.\n\nI have limited possibilities of verifying the change on different platforms but it is confirmed to\nwork on at least Mac OS X in addition to busybox and should work on platforms where \nprevious \"ps -p\" command worked.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pdudits": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/197", "title": "https://issues.apache.org/jira/browse/AMQ-6391", "body": "Test case for multiple connections participating in one phase commit,\ncausing leak in ConnectionStateTracker.\n\nKeep all the connections participating in an transaction in a static multimap\nsimilar to the one in TransactionContext.\n\nEven though Garry  says that static fields may cause issues in OSGi, I am offering this as a solution. This static map has same lifecycle, classloading and  source bundle as the one already present in TransactionContext, therefore I assume it cannot really make things worse.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/174", "title": "https://issues.apache.org/jira/browse/AMQ-6209", "body": "SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching messages of a consumer queue.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jenshadlich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/167", "title": "[AMQ-6160] fix NPE; use messageId.getFutureOrSequenceLong() as sequen\u2026", "body": "\u2026ceId if entryLocator is NULL\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pbruski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/165", "title": "AMQ-6135 ActiveMQ HTTP module should support Openwire serialisation", "body": "I am submitting this on behalf of Atlassian, the appropriate CCLAs are in place.\n\nWe have that code running in production and we didn't have any problems reports.\nI assumed rather strict backward compatibility and interoperability requirements, not sure if that's needed.  Well, at least the interoperability should be there.\nIn any case, it's easier to have them removed than to implement them as an afterthought.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emopers": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/160", "title": "TransportConnection does not synchronize iteration on synchronized list", "body": "In TransportConnection.java:861, the synchronized list returned by cs.getTempDestinations() is iterated\nin an unsynchronized manner, but according to the [Oracle Java 7 API specification](http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#synchronizedList%28java.util.List%29),\nthis is not thread-safe and can lead to non-deterministic behavior. This pull request adds a fix by synchronizing the iteration on the list returned by cs.getTempDestinations().\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjnygard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/126", "title": "Fix class loading issues for SSL/nonSSL connectors", "body": "- This resolves issues loading SSL and nonSSL RAR connectors in Glassfish 3.x\n- proposed fix for AMQ-5873\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hauenstein": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/114", "title": "https://issues.apache.org/jira/browse/AMQ-5265", "body": "This is a revision of AMQ-5265 -- the original fix didn't quite clean up all of the mbeans that MBeanBridgeDestination created, as [noted in the original issue by Tarek Hammoud](https://issues.apache.org/jira/browse/AMQ-5265?focusedCommentId=14527137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14527137).  The key for the map used to track the ObjectNames was an ActiveMQDestination (which uses the destination's physical name for its equals() implementation) caused the inbound and outbound entries in the map to randomly replace each other.\n\nLike Tarek, I could reproduce this issue using 5.11.1 with two networked brokers (full duplex) with a client publishing to a topic.  After I restart a broker, the logs on the non-restarted broker show the MBeanBridgeDestination reporting many InstanceAlreadyExistsExceptions when trying to register the unintentionally-duplicated mbeans.\n\nPlease let me know if this makes sense or if there are any changes you would suggest (ex: is there a reasonable way or an example I could follow to add a unit test for something like this?).  Thanks!\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bric3": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/109", "title": "Renames env script to avoid possible POSIX env shadowing", "body": "Got an issue with other shell scripts, turns out that when one prepends `$PATH` by `activemq/bin`, `env` is shadowed by ActiveMQ's `env`.\n\nThat means that script that want to run commands in customized environment will simple don't be executed like : \n\n``` sh\nenv A=aaa B=bbb mv ...\n```\n\nWorse such lines won't fail, because this will return the `0` exit status. The workaround is simple, i.e. append in `%PATH` instead of prepend. But a proper fix is needed. This PR proposes to rename the shell script from `env` to `activemq-env`.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PiotrKlimczak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/91", "title": "AMQ-4693 Adds Kerberos 5 authentication and connection encryption over TLS", "body": "Basing on RFC2712\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008", "body": "Hmmm. My patch to different issues is here. Not sure why?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51362008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205", "body": "created new pull request:\nhttps://github.com/apache/activemq/pull/42\nIt is very same except do not contains unecessary commits as was pulled from dedicated branch.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260", "body": "Unit test needed\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/51365260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "burtonator": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/65", "title": "Burton concurrent destination gc", "body": "Improves performance of concurrent destination GC dramatically. \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "soul2zimate": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/63", "title": "revise set and get methods name of Activation Spec properties \"Redeliver...", "body": "...yBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" to allow configuration through @ActivationConfigProperty.\n\nhttps://issues.apache.org/jira/browse/AMQ-5613\n\nActivation Spec properties[1] \"RedeliveryBackOffMultiplier\" and \"RedeliveryUseExponentialBackOff\" can not be used within @ActivationConfigProperty, in contrast, it accepts \"backOffMultiplier\" and \"useExponentialBackOff\".\n\n[1] http://activemq.apache.org/resource-adapter-properties.html\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scoopex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/activemq/pulls/61", "title": "AMQ-5503 - Make init script more reliable", "body": "See https://issues.apache.org/jira/browse/AMQ-5503\nUnfortunately the merge of this fix was delayed without any communicated reason.\nTherefore i recreated the pull request.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armsargis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186", "body": "Issued opened and patch summited(and applied by ActiveMQ team) using instruction from: http://activemq.apache.org/how-can-i-contribute.html.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/963186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "janstey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832", "body": "Closed as per \"[DISCUSS] Combine windows and unix distros\" thread on dev list.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/16691832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "alexcojocaru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304", "body": "Done; see https://github.com/apache/activemq/pull/8\n\nClosing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/32773304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zmhassan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857", "body": "![amq-errorhandler](https://cloud.githubusercontent.com/assets/1269759/2807893/4e3d9926-ccfd-11e3-9947-f0e8d460dc06.png)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41459857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139", "body": "This code isn't building maybe an error. I'm going to close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/41486139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420", "body": "I will remove the hardcoded JMSDestination and push up new code by end of day\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454", "body": "I think I added this by accident I will remove this\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526", "body": "We are not using this Javascript file so I think it will be safe to delete this one.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565", "body": "I don't think we need the bootstrap-theme because we get everything from bootstrap.min.css. I will delete this also\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590", "body": "I am converting the CSS for the table to bootstrap styles that are provided by bootstrap javascript css library.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616", "body": "I will remove this comments because we don't need it here.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682", "body": "The reason why I do this is because the user needs to get redirected back to the page they where on when they deleted something. For example if I'm on the 15th page in browse.jsp and I delete something. I shouldn't start from the first page.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749", "body": "I will remove unnecessary comments\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807", "body": "I think this may be a repeat of the functions used in PaginQueue so it will be safe to delete the functions that are not being used. I will delete these functions and push up new code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841", "body": "I should also get rid of the console.log because its not nice to have it here. Just need it for debugging purposes.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862", "body": "I will also deleted commented out code.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/9916862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jsherman1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433", "body": "Patch for https://issues.apache.org/jira/browse/AMQ-5177\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42711433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davsclaus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472", "body": "Thanks there were 2 other places I fixed that and committed on master. \n\nCan you close this PR?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476", "body": "Thanks for the PR. Its merged. Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482", "body": "Can you close this PR\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493", "body": "We need an unit test, if not we cannot accept this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501", "body": "This has been applied. Can you close this PR.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42765501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jwcarman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240", "body": "Sure thing! :)\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/42771240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305", "body": "Yes. I was mimicking the existing code I believe\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36929305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dhirajsb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642", "body": "Closed in favor of PR 22\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/43445642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118", "body": "Resolved merge conflicts\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/50431118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sobkowiak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835", "body": "The solution from 5.9.x is not enough. I'll open a new pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45110835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486", "body": "Pull request applied in commit 25600944e662279ec1113acd4d27e9c64ba8415f\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/45231486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877", "body": "Solved in commit 6902eaefc46d640ad25c6fa29216bd6efb48c0c4\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/47199877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "dkulp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055", "body": "Hadrian merged this to trunk.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48644055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825", "body": "Tim committed this (with some mods discussed on IRC).\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/48660825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "traylz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437", "body": "Timothy Bish applied patch. See https://issues.apache.org/jira/browse/AMQ-5281?focusedCommentId=14100884&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14100884\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/issues/comments/53106437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PavloVasylchenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/11394484", "body": "Http schema should be registered too if we uses https transport, since proxy can use only http.\nhttps://github.com/apache/activemq/blob/master/activemq-http/src/main/java/org/apache/activemq/transport/https/HttpsClientTransport.java#L51\nHere only https transport is registered and if we set proxy we will get \"Scheme 'http' not registered.\" error.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/11394484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tritschler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/14296964", "body": "No more shutdown ?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/14296964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "JonathanMalek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/17740568", "body": "This particular change creates a problem for a prefix of the form: `*.*.`\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/17740568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trejkaz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/21907488", "body": "Interestingly this pull request did suggest making serializablePackages private. I wonder what went wrong between this pull request and what actually got committed...\r\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/21907488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gelin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/activemq/comments/23457488", "body": "This breaks stomp, mqtt and other (non openwire) protocols. Because only openwire transport grabs this \"wireFormat.host\" property while other protocols not.\r\nSo, when you try to connect to, for example stomp://localhost:61613, the exception with message \"Invalid connect parameters: {wireFormat.host=localhost}\" appears.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/comments/23457488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "peteryhwong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417", "body": "I think we should ensure the brackets conform to Egyptian Brackets as the style used by the rest of the source file.\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/29611417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886", "body": "Can these not be final?\n", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/36925886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "clebertsuconic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809", "body": "if that is an issue.. this would be dead slow for the server...\r\n\r\nif there's any issues around this.. this fix is not good anyways.\r\n\r\nAs Tim said.. you need a test.", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/121006809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gemmellr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072", "body": "It's actually an example of Qpid Proton, rather than the linked Qpid Messaging API.\r\n\r\nMore specifically however, its an example of the old 'Messenger' API, which has seen little attention for some time due and wouldn't be recommended for new users. PROTON-1585 even removed the examples for it at Qpid .\r\n\r\nI'd suggest the example actually be removed instead, or else updated to use the newer Proton reactive APIs, e.g. demonstrated by http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/examples/index.html and http://qpid.apache.org/releases/qpid-proton-0.17.0/proton/python/book/tutorial.html ", "reactions": {"url": "https://api.github.com/repos/apache/activemq/pulls/comments/143233072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}