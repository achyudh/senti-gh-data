{"_default": {"1": {"gemmellr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/1198ceeffef4c5df1bf864013774bd25c184af39", "message": "NO-JIRA: update year in NOTICE file"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/76439860", "body": "testing comment via GitHub\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/76439860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "kgiusti": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/3c40c5797287e317d357fd885d4457d9d2dd9520", "message": "DISPATCH-914: correctly free mutex from qd_connector_t"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/0f521c0debe1cb06bcff5245e5b0260407cc6c55", "message": "NO-JIRA - Run Valgrind in quiet mode.\n\nThis prevents failures in tests that parse the output of qdmanage and\nqdstat."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/4844313b988d91406ab966c2abd91e661062b881", "message": "DISPATCH-89: Parse tree updates\n\nModification of the parse tree to support MQTT and AMQP 0-10 wildcard\npatterns. This closes #234"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/244", "title": "DISPATCH-89: Exchange Binding forwarder (experimental)", "body": "Adds a forwarder that models the pre AMQP 1.0 model of exchanges and\r\nbindings.  Exchanges can be added via management and bound to outgoing\r\ntarget addresses.  MQTT wildcard patterns are also supported.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ganeshmurthy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/791592a935fd2d9998fbf42fe4442d92cb999568", "message": "DISPATCH-907 - Added code to qdmanage to handle integer types"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/4a173e1ec0f7e0e8f9d7d37b9549d4f9c9d37fb0", "message": "DISPATCH-894 - Made the following changes to make the system tests work on CentOS 6.\n1. Modified system tests to use unittest2 instead of unittest test framework.\n2. Modified tests/CMakeLists.txt to use the unit2 test runner.\n3. Fixed some tests to use backwards compatible assert functions.\n4. Remove unused imports in tests"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/58ce3a208e698b716b26966b1ce0b723967c351b", "message": "NO-JIRA - Reverted previous change that modified calls to Proton API functions pn_proactor_connect and pn_proactor_connect"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/86ef580e429beb68ac4167e8f96ca284f2668dd2", "message": "DISPATCH-831 - Set the default value of cost in connector to be 1 instead of '1'"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/04718cfeb23ee51c86a09f218654c51f410203ca", "message": "NO-JIRA - Adjusted calls to pn_listener_accept and pn_proactor_connect due to Proton API changes"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/6d73659c3cfe1f9b0bbbf4c88c1cb966ab509778", "message": "NO-JIRA - Added Apache license information to a couple of files"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/245", "title": "DISPATCH-878 - Added code to display the actual listening port if 0(z\u2026", "body": "\u2026ero) is set as the listening port", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/148871056", "body": "You can use - sasldblistusers2 -f qdrouterd.sasldb - to see the user names (passwords will not be displayed)\n\nsaslpasswd2 can be used to add.modify users. \n\nI am not aware of other credential management tools.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/148871056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149642357", "body": "I have introduced an important change to the tests/CMakeLists.txt. The python system tests are copied into the build/tests folder and executed from there. I made sure that all tests pass when I ran \"ctest -VV\" from the build folder. \n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149642357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149642762", "body": "Does the CI system execute \"ctest -VV\" to run the tests?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149642762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149644099", "body": "I was talking about this to crolke yesterday and the thought was that running all tests from the same folder (in this case build/tests) will make it look uniform instead of running some tests from source and some tests from build\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149644099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149651181", "body": "ted-ross, do you still want me to run the \"configured\" tests from the build folder and the non-configured ones from the source folder? \n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149651181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149690231", "body": "ted-ross, I will close this PR and create a new PR which will include the server.c change that you pointed out earlier. \n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149690231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149692279", "body": "Created a new pull request. Hopefully this will satisfy all parties involved.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149692279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149900387", "body": "This pull request is still open.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149900387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149909805", "body": "Found a few more things that needs attention. I am closing this pull request\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149909805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/151166811", "body": "Make sure you have the latest proton before testing this PR. It needs Ken's fix - https://github.com/apache/qpid-proton/commit/aceb43d20ad890e7dd9cd66d66dccec871695076\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/151166811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/155155826", "body": "Any idea where the code to handle the -h option is? \n\nAlso, if -v is not available, the following line must be removed in tools/qdstat - \n\nparser.add_option(\"-v\", \"--verbose\", help=\"Show maximum detail\",        action=\"store_true\", dest=\"verbose\")\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/155155826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/229161780", "body": "Hi Jiri,\n   Thanks for your patch. I have committed it to master. Please close this pull request. \nThanks.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/229161780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/231760469", "body": "This pull request has been rebased with master and ready to commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/231760469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/19723194", "body": "@RoddieKieley please make sure you put in a more descriptive commit message in the future.\r\n\r\nYour commit message --> DISPATCH-352 initial implementation. \r\nExample of more detailed commit message --> DISPATCH-352 - Added checks to make sure that the router config file exists and is not empty\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/19723194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189881", "body": "qdr_delivery_t objects are maintained by dispatch. proton does not have knowledge of these objects.", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42528705", "body": "I will go ahead and make this fix.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42528705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "grs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/eed8bb65497b23e512072f5ea9fefd8ed73921ef", "message": "DISPATCH-901: authorization from remote auth service\n\nIf the client specifies its desire for the ADDRESS-AUTHZ capacbility, the authorization service, if it supports this, will return a\nset of permissions in the properties of the open frame. The properties will have an address-authz key, whose value is a map of address (or wildcard pattern) to an array of permissions.\nThe only permissions recognised at present by this patch are 'send' and 'recv'."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/f8a1c9c975f3f8d859a4d57ce0d705fe4bd12e68", "message": "DISPATCH-912: move setting rhost from connection-bound to remote-open event to ensure proton has retrieved the necessary info"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bhardesty": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/e9f8502ea393720c451f99d9a2a34e3e2332c09a", "message": "DISPATCH-906 - Create procedure for integrating dispatch router with kerberos. This closes #241"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ErnieAllen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/c36f3af0d1ad38d90dd5b738bc3e40577f07ae1d", "message": "DISPATCH-909 Work around no host on some connections"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/8468525688a5985b2f54e3aba8afe8749362c695", "message": "DISPATCH-909 Preparing for new overview charts page"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/770edaf17e40bdf40add2b3ecfdc00a0897ee9ad", "message": "DISPATCH-909 Handle inter-router connections with blank host"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/cabc6f07552ee078046e01662fa81c9fa1ab56e3", "message": "DISPATCH-903 Use c3 library for charts"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/9b2b64ff913a959db7bcfb749864e5ce3b8ebb94", "message": "removing rhea since it is incorporated in dispatch-management.js"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alanconway": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/33feac55c690a9b7c7e7e251deb076a14b5692f2", "message": "DISPATCH-893: Compile fails using libwebsockets 7\n\nUpdated cmake files to require libwebsockets 2.1.0, the earliest version known\nto work. If we need HTTP support on platforms that don't support it, we should\nreconsider our options."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/892a413f84753de859e5d84a425b241197e7efe1", "message": "DISPATCH-739: Fix invalid read valgrind error in tests.\n\nChanged server shutdown order so that context objects are not used after free\nby logger."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/4c98f54136c7e5c306be540d53be24423ece714e", "message": "DISPATCH-739: Fix memory leak in http server showing in unit tests\n\nMaybe not a leak in a deployed broker but fixed it anyway to keep tests clean."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/5738079016236efb02554c6cd4536c4d8295f59a", "message": "DISPATCH-739: Fix memory leaks in unit tests, missing frees\n\nAdd missing frees in tests."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ted-ross": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/ac9c414f25d6238ed91b134291f00ef82bb5236c", "message": "DISPATCH-872 - Shortened the header for dropped unsettleds and added help text to the qdstat man page."}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/b5dcaffac9d7af9a6afa0c6f23cf91b45b4d8209", "message": "DISPATCH-872 - PR from gmurthy - Added link counter for dropped-presettled deliveries.\nThis closes #226"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/918c8f7c7ba337e44aba96ebde60fd6e3d03c1c3", "message": "DISPATCH-885 - PR from gmurthy - Compose zero-length string/symbol/binary when a null pointer is provided.\nThis closes #223"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/44ee33fc864758177cdada83bcde145f6c1964b5", "message": "DISPATCH-884 - PR from gmurthy - Add support for configured SSL protocols.\nThis closes #233"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/3bf8cfe9c326a74a076cb7e1e3ff0cee43137d10", "message": "DISPATCH-900 - PR from gmurthy, remove references to unused management entity which was moved to the core agent.\nThis closes #235"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/5ca979d53c7761e36ff95052971c1009f29441fc", "message": "DISPATCH-905 - Added a general get-as-string facility for proton data elements.  Use this facility for the port field in the failover list.\nThis closes #237"}], "pull_requests": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/204", "title": "DISPATCH-845 - Added connection-scoped link-route destinations.", "body": "Link route destinations can be dynamically created for a connection based on a connection property in the OPEN frame.  The lifecycle of the link-route addresses tracks the connection.\r\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/146205391", "body": "This should not be a NO-JIRA commit.  You should open a Jira for this feature.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/146205391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/155157739", "body": "On 11/09/2015 01:58 PM, Ganesh Murthy wrote:\n\n> Any idea where the code to handle the -h option is?\n\nThe --help option is handled by the optparse module.\n\n> Also, if -v is not available, the following line must be removed in tools/qdstat -\n> \n> parser.add_option(\"-v\", \"--verbose\", help=\"Show maximum detail\",        action=\"store_true\", dest=\"verbose\")\n\nThe -v option is valid as a modifier to other options.  \"qdstat -v\" is \nnot a valid command line as -v is not a standalone option.  \"qdstat -n \n-v\" is valid and will show more detail than \"qdstat -n\".\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/apache/qpid-dispatch/pull/30#issuecomment-155155826\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/155157739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164567660", "body": "I think you should raise a Jira for this, so this addition can be mentioned in the next release notes.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164567660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/193769869", "body": "Please don't merge this patch.  The use of \"label\" as the name is going to cause a problem when DISPATCH-179 is merged.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/193769869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/204449228", "body": "This looks good, feel free to commit it.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/204449228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/212044795", "body": "This looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/212044795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/219496913", "body": "This looks good.  Please re-base to master and commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/219496913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/219497479", "body": "+1  Please re-base to master and commit.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/219497479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/231374207", "body": "Two points on this change:\n- There are no tests included\n- Does this change work in all cases?  Specifically, does the proper visibility occur on the ingress router as well as the other routers in the link's path?  Also, does this work for both sender and receiver links?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/231374207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/38930178", "body": "Now that this is a public function, it should have a name that starts with \"qd_\".\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/38930178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/38930284", "body": "Is this include necessary?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/38930284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256608", "body": "You can combine these into one statement:  ctx->uid = qd_server->next_connection_id++;\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256741", "body": "We should set the context unconditionally on all transports.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256762", "body": "Same comment as above.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256821", "body": "This should be called \"connection_id\".\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256898", "body": "It would be more accurate to call this function \"qd_transport_tracer\".\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41256898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41393944", "body": "Router B shouldn't need two inter-router connections.  One will do.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/41393944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42527876", "body": "Why do you move the tests to the build folder when you could simply run them from the source folder here?  Then you could run the \"configured\" tests from the build folder and the non-configured ones from the source folder.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42527876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42528135", "body": "I think you should treat the username and password independently.  You shouldn't assume that there will always be both present.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/42528135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/44312255", "body": "The new information is misleading (-v should not be in there and -h should).\nRather than reproducing a subset of the already existing help, why not just add a line that says \"use --help for more information\"?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/44312255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45268045", "body": "Why do you need this?  The body is always an empty map.  I don't see any need to pass it into the core.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45268045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45271010", "body": "These constant strings are redundant with the ones below in the columns array.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45271010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45271118", "body": "This should be done outside the core.  The core isn't adding any value here.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45271118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45612666", "body": "I don't think this is needed.  The \"outer\" agent should register its callbacks once at initialization time.  It is not safe to register new handlers for each request that comes in and it's not necessary to repeatedly register the same handler.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45612666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45612985", "body": "I think a more descriptive name is needed here.  Something like qd_router_agent_on_message.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45612985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45614085", "body": "This function's signature suggests that it is simply checking the message body.  In fact, it also has the side effect of composing the error message for the response.  I think it would be better to stick with the simple check.  The calling logic will then be clearer to understand as it will either go forward with the request or create an error response based on the outcome of this check.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45614085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45614279", "body": "Rather than have a proliferation of nearly identical type-specific validation functions, why not do a more general check on the appropriate attribute-name array?  This way, you can write the logic once for all types.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/45614279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/46554871", "body": "Rather than duplicate this entry for both listener and connector, you could put this in the \"addrPort\" annotation.  Like addr and port, protocolFamily is common to both entity types.\n\nYou have a default of IPv4 in the connector.  That is inconsistent with the document string.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/46554871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/46555717", "body": "You should include 0 as a valid option as well.  It has a specific behavior.  Likewise on connector.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/46555717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559159", "body": "Why not just set the maintainer to dev@qpid.apache.org ?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559389", "body": "This would not be necessary if you installed proton in /usr like you did with dispatch.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559626", "body": "This is inconsistent with the dockerfile text.  qpid-dispatch is installed in /usr, not /usr/local (and proton should be as well).\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47559626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47560145", "body": "I don't think the username is required here.  If a username is used, it must be the username for the Docker Index subscription (not the apache or local username).  It's ok to omit the username in the image title if there's no plan to push the image to the Docker Index.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47560145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47560859", "body": "This might be a bit too much information for the readme.  We don't want to write a Docker tutorial.\nThis section, \"Customizing Docker files\", is a bit mis-named.  What is described does not customize the Dockerfile.  It simply changes the image to launch a shell so the user can make non-persistent modifications to the running image.  Note that any modifications that are made will be lost once the container is shut down.\nTo make a customized image is a bit more involved and is certainly beyond the scope of a Dispatch Router readme.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/47560859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/52058434", "body": "Taking away this test removes the protection it provided and means that test_cursor may be referenced-as-null in the body of the following switch statement.  Here's a test case that I think may cause a problem with this change:  The body (from the tag forward) contains only E0 with no data following.  This is a malformed field, but it would cause next_octet to be called with a null cursor.\nA better solution would be to leave the test in place, but allow it to pass only if the tag is a 4x-class tag (i.e. zero length).\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/52058434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/52073887", "body": "This looks ok.  One minor change that's needed:  tag is an unsigned char, so tag_bit must be of the same type.  Also, 0xF0 represents 4 bits so tag_bit might not be the best name.  The spec calls it a subcategory.  Maybe use that.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/52073887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/56070842", "body": "This seems a bit of overkill.  There's only one column that's updatable in this entity type.  Why allow all the non-updatable columns?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/56070842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/56071049", "body": "There are constants defined for this.  Using the numeric literal will cause bugs later when columns are inevitable moved around.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/comments/56071049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ChugR": {"issues": [], "commits": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/2c60d30ad964e350c9ab8c17665bc442f9df0356", "message": "DISPATCH-898: Remove unimplemented attribute from schema and code"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/commits/e2966e159d26ce3a0bc117ca003520ddeb15f055", "message": "DISPATCH-897: document vhostUserGroupSettings section\n\nRemove the standalone .txt description file and move the section\ninto qdrouter.json. Configuration files defining vhostUserGroupSettings\nobjects just use .json file format."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/148835284", "body": "How do we manage these credentials internally? Or when viewed through the management interface?\nWill 'qdmanage query' show the credentials in plain text?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/148835284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149681423", "body": "I tried this new branch and I think it's better for tests (*.py) all to end up in the <build>/tests folder.\nAt first the test failed. The problem was that the *.pyc files are all in the <source>/tests folder and there was a stale system_tests_sasl_plain.pyc that was running.\nIf all the .py files are in the build folder then the source is pristine and the build artifacts from one build are not interfering with another build.\nEither way the new test passes for me on Fedora 21.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/149681423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "enkeys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/217", "title": "NO-JIRA - Change format of README from ReStructuredText to AsciiDoc", "body": "- Renamed README to README.md\r\n- Added badges for Travis build status and Apache 2.0 license\r\n- In README\u00a0moved 'Dependencies' under 'Building and testing'", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lulf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/pulls/111", "title": "DISPATCH-476: Add support for groupId property for matching link routes and auto links", "body": "This is a proposed alternative for supporting a mapping of multiple connections - multiple link\r\nroutes/autolinks by grouping them on a 'groupId' identifier. The corresponding group is selected based on a connection property 'qd.route-container-group'.\r\n\r\nWe have discussed this approach previously, and somewhat decided that we should take a different approach. I wanted to implement this approach as a way of learning more of the router internals, so consider this PR a POC that you can close if you think this feature is not useful, though I do think it gives a lot of flexibility with little increase in complexity.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "asfbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/76440015", "body": "Robbie Gemmell  on dev@qpid.apache.org replies:\nTesting comment via email.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/76440015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164851114", "body": "\"Gibson, Jack\"  on dev@qpid.apache.org replies:\n+1 on not being for production.  There are number things besides what has\nbeen pointed out that we=B9ve learned from running dispatch on Docker such\nas parameterization, config injection, security (both image & SSL)  that\nneed to be addressed.  Though I am really, really happy the community is\ndoing so I don=B9t have to going forward. That being said, I hope y=B9all\ndidn=B9t start from scratch on these ;)\n\nJack Gibson\nChief Architect\nCore Payments Platforms - PayPal\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164851114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "scholzj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164594810", "body": "I think the idea is good for Dispatch development and testing. But the images are IMHO not really sufficient for some \"more serious\" use (because they are always based on the Git master, because they contain all the compilers which are not necessary to run the image etc.). Maybe the README.md should be more clear about that, so that nobody takes image built using these docker files and uses it in production?\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/164594810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "jdanekrh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/226187874", "body": "@ganeshmurthy What do you think about my\n1. Add a Port type to python/qpid_dispatch_internal/management/schema.py, do the conversion to int as part of validation.\n2. Convert port to int in python/qpid_dispatch_internal/management/agent.py in ListenerEntity and ConnectorEntity, either in validate, create, or init method.\n3. Catch the error code in qdpn_listener and qdpn_connector and do a if strcmp(port, \"amqp\") ... there, Or call into Url.Port() in Python to avoid code duplication.\n\ndilemma? Is one of these preferable? I went with 2, but other may make more sense. Or surely even other options could be suggested.\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/226187874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eric2a": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/230053828", "body": "password attribute can take an env variable or literal value.\npassword: env:string\nor\npassword: literal:string\n", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/issues/comments/230053828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dskarbek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189814", "body": "why can't proton do the decref?  Would be much better to have them be parallel.  If there's a good reason that Proton can't take care of this, then that should be stated here as well.", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189919", "body": "So, then, what reference from Proton are you talking about?  This is a reference counting scheme, so there must have been an extra \"inc-ref\" that you are accounting for here.  Where does that inc-ref come from, why doesn't this dec-ref parallel it?", "reactions": {"url": "https://api.github.com/repos/apache/qpid-dispatch/comments/20189919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}