{"_default": {"1": {"Novantix": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3573", "title": "Cannot rearrange/move tabs.", "body": "The ability for moving, rearranging and possibly even pinning frequently use tabs in the tab bar so it does not disappear when scrolling to other tabs would be excellent.\r\n\r\n I want to learn programming to be able to start contributing to Firefox on ios but as of yet I am not of ability to do so. \r\n\r\nAnyone that could possibly implement this feature would be fantastic!", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xuxueyong": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3559", "title": "compile error", "body": "Share module compiled, reported No such module SwiftyJSON, hoping to give advice, how to do it", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gregz83": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3553", "title": "No Clear Browsing History button", "body": "In Firefox for Android, when you go to the History tab, there is a \"Clear Browsing History\" button directly at the bottom, which provides a quick and easy way to delete your History.  Firefox for iOS lacks this.\r\n\r\nPlease add this to the iOS version.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rleaplaza": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3547", "title": "Unable to inspect a date element in a bootstrap datepicker", "body": "Hi, I'm using selenim webdriver and I have a problem to inspect a date element in a bootstrap datepicker.\r\n\r\nWhen I click an specific date and try to inspect it, the control datepicker hides, its happening with firefox 57 and google chrome 63.0.\r\nSteps\r\nPut the cursor over a bootstrap datepicker with no icon, it displays the calendar.\r\n\r\nClick on an specific date, try to inspect it.\r\n\r\nThe calendar hides and cannot see the date html through console.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "youngwifemoliy": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3527", "title": "if tabbar can be fixed,it is great", "body": "if tabbar can be fixed,it is great", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jaxondu": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3508", "title": "Provide option to enlarge font size", "body": "Some site uses small fixed font which is hard to read even on 5.5 inch screen. For example Hacker News. It would be useful to provide settings to adjust the base font size, similar to what is possible on Firefox desktop. UCBrowser is one example of mobile browser that implements this feature.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3508/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dowZhang": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3507", "title": "No such module", "body": "When I bulid this project accoding to the document of readme.But the shared framework have something wrong it's \"swift compiler Error \" and \"No such module 'XCGLogger'\".How can i do.Please help me.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mopperwhite": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3472", "title": "Night Mode for Websites with Dark Backgound", "body": "Websites with dark background color like Steam became dramatically bright when I was using the night mode.\r\n\r\n![img_2599](https://user-images.githubusercontent.com/5031868/32937856-185a43b2-cbb5-11e7-8d6e-c74f27fa0d7a.PNG)\r\n\r\n\r\n \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aranasaurus": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3451", "title": "readerModeBar (and status bar) should hide on scrolling down.", "body": "Currently when using reader mode, the readerModeBar and status bar are always visible (and light-colored). I expect reader mode to be full screen with no chrome whatsoever (like Safari). \r\n\r\nI went looking through the BrowserViewController and didn\u2019t see anything related to scroll events, so if it\u2019s not possible to hide the bar completely, it\u2019d be nice if it at least respected the dark mode toggle. Currently if you turn on reader mode and set it to dark, you\u2019re stuck with a bright light-gray bar at the top along with the default status bar.", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3451/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "t-kitsune": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3426", "title": "Provide an option to blur the app when you leave it", "body": "This works in private mode, but I believe because Firefox is focused on the privacy of each and everyone of its users, that providing an option to blur Firefox when you're in the app switcher or you go home, that Firefox would be _quite literally_, the most private browser available on iOS. ", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3426/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Delphine": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3288", "title": "Localize mozilla.org Firefox iOS test page", "body": "Can we get https://www.mozilla.org/en-US/firefox/ios/testflight localized?\r\nIt says that \"This pre-release program (\u201cProgram\u201d) is only available in English.\" however this is not true. We currently have this available in 61 languages.\r\n\r\nI believe that if we localize this page, we would get much more testers worldwide and more eyes on this project. This will help in turn ensure much better quality overall. \r\n\r\n@peiying2: Do you have any idea on how to kickstart this process on your side (this is a mozilla.org website). thanks!", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jhugman": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3272", "title": "ScreenGraph evolution", "body": "#### Preamble\r\n`ScreenGraph.swift` is a way of describing an iOS app as a graph of screen states. It is written with `XCUITest` and GameplayKit. \r\n\r\nIts primary use case is to make setup and tear down of UI tests trivial and less brittle.\r\n\r\nThis issue identifies a number of issues with `ScreenGraph`, problems test authors have identified, and potential fixes for them. It does not intend to go into the implementation details.\r\n\r\n### Introduction\r\n`ScreenGraph.swift` has been a great success. Since we've introduced it the QA folk have really taken to it, making our UI tests much more readable, and less brittle in the face of changing UI.\r\n\r\nThis is well and good, however, the intention of `ScreenGraph` is not just to make testing easier: \r\n\r\n * to serve as an easily readable way of describing the UI of the app, either as the raw swift file `FxScreenGraph.swift`, or as an image. \r\n * capable of\r\n driving the localization screenshots process. These attempt to represent all strings the user will see that are shipped by the app. They _need_ to be comprehensive.\r\n\r\n![pre-photon-graph](https://user-images.githubusercontent.com/99338/31352950-87feaaba-ad28-11e7-8e36-40d54b6874e9.png)\r\n\r\nHowever there are a bunch of times where we'd like to improve things. \r\n\r\n * there is no internal way of **representing actions that change the app state**. e.g. switching to and from Private Browsing Mode.\r\n * there is no internal way of **representing parameterized actions that change the app state** e.g. \r\n * there is no way of representing **multiple actions that achieve the same thing**. e.g. opening a URL by typing it into the URL bar or long pressing and pasting from the URL bar.\r\n * there is no real way of **representing actions that changes the graph**. e.g. some of the graph is not accessible if the passcode is not set.\r\n\r\nAll of these things have led to hacks and compromises: \r\n\r\n * hacking the shape of the graph, most notably in the duplication of the graph nodes for `BrowserTab` and `HomeScreenPanels`. \r\n * many menus and context menus aren't very well represented in the graph. e.g. alternative user routes to do things, and thus not well tested, or represented in screenshots.\r\n * adding progressively more methods to the `navigator` extension,  e.g. `openURL`, increasing test and L10n screenshot complexity.\r\n * lots of brittle tests trying to work with the hacked up graph and hacked up navigator.\r\n * makes the process of writing screenshot code more and more labor intensive.\r\n\r\nAnd these hacks, have lead to graphs (and thus tests) that have not been especially easy to grok, or re-use (e.g. for screenshots).\r\n\r\n![post-photon-graph](https://user-images.githubusercontent.com/99338/31352988-a6661d08-ad28-11e7-872f-8530672c1c52.png)\r\n\r\nThe rest of this document introduces some concepts, and API to solve these problems.\r\n\r\n### Strawman Proposal\r\n#### Rename existing concepts\r\n\r\n- `Scene` becomes: `ScreenState`.\r\n- `createScene` becomes: `addScreenState`\r\n- In gesture methods, `to:` becomes `transitionTo:` [not yet implemented]\r\n\r\n```swift\r\nlet map = ScreenGraph()\r\nmap.addScreenState(LoadedTab) { screenState in \r\n  screenState.tap(app.button(\"TabToolbar.menuButton\"), transitionTo: LoadedTabMenu)\r\n  screenState.noop(transitionTo: URLBarAvailable)\r\n  screenState.tap(app.buttons[\"TabLocationView.pageOptionsButton\"], transitionTo: PageOptionsMenu)\r\n}\r\n```\r\n#### New concept: `UserState`\r\nThese are objects representing the user's mental model of the state of the app.\r\n\r\nThey are a way of communicating data from the tests to the graph.\r\n\r\n```swift\r\nclass FxState: UserState {\r\n  var url = \"\"\r\n  var hasPasscode = false\r\n  var tabCount = 0\r\n  var isPrivate = false\r\n}\r\n\r\nlet map = ScreenGraph()\r\nmap.initialUserState = FxState()\r\n```\r\n\r\n`userState` is available from the `navigator`. The `BaseTestCase` should probably make `userState` available as a property.\r\n\r\n```swift\r\nnavigator.userState.url = \"https://mozilla.com\"\r\nXCTAssertFalse(navigator.userState.isPrivate)\r\n```\r\n\r\nThe user state is supposed to very simple, and very easy to evolve as you write your tests.\r\n\r\nThe user state can record the state of the app as it transitions into the screen state.\r\n\r\n```swift\r\nmap.addScreenState(LoadedTab) { screenState in\r\n  \u2026\r\n  screenState.onEnter() { userState in \r\n    userState.url = app.textField.text()\r\n  }\r\n  \u2026\r\n}\r\n```\r\n\r\n#### New concept: `ScreenAction` nodes\r\nThese are nodes on the graph that represent actions the user might take. They can represent multiple ways to do the same thing; they can read or write the `userState`.\r\n\r\nActions do not need to be added to the `map`, but can be created as gestures. You might think of them as named gestures.\r\n\r\nActions can read and write to the `userState`.\r\n\r\n```swift\r\nmap.addScreenState(TabTray) {\r\n  screenState.tap(app.button[\"tabTray.privateBrowsingMask\"], forAction: TogglePBM) { userState in \r\n    userState.isPrivate = !userState.isPrivate\r\n  }\r\n}\r\n```\r\n\r\nTests can perform actions using the `navigator`.\r\n\r\n```swift\r\nnavigator.performAction(TogglePBM)\r\nnavigator.toggleOn(userState.isPrivate, withAction: TogglePBM)\r\nnavigator.toggleOff(userState.isPrivate, withAction: TogglePBM)\r\n```\r\n\r\nActions can be lead to other actions, which may transition to screen states. These might be thought of \"aliases\", but are really action nodes which only have other action nodes joined to them.\r\n\r\n```swift\r\nmap.addScreenState(URLBarAvailable) { screenState in\r\n  screenState.gesture(forAction: TypeURLAction, LoadURLAction, transitionTo: LoadedTab) { userState in \r\n    let urlString = userState.url\r\n    let urlBar = app.textField[\"URLBar\"]\r\n    urlBar.tap()\r\n    urlBar.type(\"\\(urlString)\\r\")  \r\n  }\r\n\r\n  screenState.gesture(forAction: PasteURLAction, LoadURLAction, transitionTo: LoadedTab) { userState in \r\n    let urlString = userState.url\r\n    let urlBar = app.textField[\"URLBar\"]\r\n\r\n    UIPasteboard.general.string = urlString\r\n\r\n    urlBar.longPress()\r\n    app.menuButton[\"pasteURL\"].tap()\r\n  }\r\n}\r\n``` \r\n\r\nTests may use the `navigator` to perform the task, with whichever action is quickest; or a specific action to achieve the task.\r\n\r\n```swift\r\nnavigator.userState.url = \"https://mozilla.com\"\r\nnavigator.performAction(LoadURLAction)\r\n\r\nnavigator.performAction(TypeURLAction)\r\nXCTAssertTrue(navigator.userState.url.beginsWith(\"https://mozilla.com\"))\r\n```\r\n\r\nScreen actions can also have code run each time they are performed.\r\n```swift\r\nmap.addScreenAction(LoadURLAction) { userState in\r\n  userState.tabCount += 1\r\n}\r\n```\r\n\r\nScreen Actions can optionally lead directly to `ScreenState`s.\r\n\r\n```swift\r\nmap.addScreenAction(LoadURLAction, transitionTo: LoadedTab)\r\n```\r\n\r\nWithout leading to a screen state, the final screen state of the navigator is to return to the state from which the action was taken. `dismissOnUse` is respected, so in the chain `BrowserTab` -> `BrowserTabMenu` -> `ToggleNoImageMode`, if `BrowserTabMenu` is `dismissOnUse`, then the navigator would assume the screen would reset to `BrowserTab`.\r\n\r\n#### New concept: predicates\r\nThese are based on the well known `NSPredicate`.\r\n\r\n##### Using predicates to change the navigable graph.\r\nBuilding on `userState` and Screen Actions, predicates enable us to describe the application more fully, and enable the `navigator` to choose different routes through the graph based upon the `userState`. \r\n\r\nRecall: transitions between screen states, and between screen actions and between screen actions and screen states are all edges on the same graph.\r\n\r\nPredicates are string queries over the `userState` object. Edges can be made conditional on the `userState`.\r\n\r\n```swift\r\nmap.addScreenState(SettingsScreen) { screenState in \r\n  \u2026\r\n  let passcodeSettings = table.cells[\"TouchIDPasscode\"]\r\n  screenState.tap(passcodeSettings, PasscodeSettingsOn, if: \"hasPasscode == true\")\r\n  screenState.tap(passcodeSettings, PasscodeSettingsOff, if: \"hasPasscode == false\")\r\n  \u2026\r\n}\r\n```\r\n\r\nThis might allow the test author to: \r\n\r\n```swift\r\nnavigator.userState.passcode = \"1234\"\r\nnavigator.performAction(EnablePasscodeAction)\r\n```\r\n\r\n##### Predicate generalizes `screenState.existsWhen`\r\nWe are more used to seeing predicates when applied to `XCUIElement`s, especially around waiting for elements to appear or disappear. \r\n\r\n```swift\r\nmap.addScreenState(LoadedTab) { screenState in\r\n  \u2026\r\n  // wait for the progress bar to disappear.\r\n  screenState.onEnterWaitFor(\"exists != true\", element: app.progressBars(boundBy: 1))\r\n  \u2026\r\n}\r\n```\r\n\r\n`element` can be `Any` object.\r\n\r\nThere is some limited functionality to wait for an element if a `userState` predicate is true.\r\n\r\n```swift\r\nscreenState.onEnterWaitFor(\"exists != true\", element: app.progressBars(boundBy: 1), if: \"loadNormally == false\")\r\n```\r\n\r\n\r\n\r\n### Request for Comments\r\nNone of this is implemented.\r\n\r\nImplementation effort is relatively low; tests are currently being updated for photon. The L10N screenshots have not been started. We should make these changes sooner rather than later.\r\n\r\n * Have I missed any use cases?\r\n * Does the proposed API solve the use cases we need to solve?\r\n * Can the proposed API be nicer for\u2013/more usable by\u2013 test authors?\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c7b9aef5d16024a9b2cf4bc3fbfbb23022eb61aa", "message": "Bug \t1427911 \u2014 Remove close tab menu item from iPads (#3576) r=garvan\n\nwhen top tabs are visible."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "farhanpatel": {"issues": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3193", "title": "daringfireball.net favicon not showing up", "body": "@garvankeeley adding this bug, editing to link to buddybuild feedback\r\n\r\n [Link to buddybuild feedback from build 6123](https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/feedback?fid=59c09b203a598b00015e7f55&bnum=6123)\r\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/3193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5c80018d6ba1dca0a5ad7a674c99dee450c9b36b", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications  (#3568)\n\n* adamnemeceks changes without whitespace changes.\r\n\r\n* Fix review nits.\r\n\r\n* Build errors: change string.endsWith to hasSuffix,\r\nNotification name was wrong\r\nisGIF not used correctly"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/903fbda9cc56e7f3c4d652c4bb76de6dd401e34f", "message": "Bug 1420887 - Find in Page bar needs a width constraint. (#3560)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8b7be4a2c1e299147ad5d5cb404bb721b2b1b7fb", "message": "Bug 1302815 - Switch Firefox iOS to use list.json (#3555)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/829034cb94e7433ccdbaf73cdf5acf8f7d39c70b", "message": "Bug 1425933 - Call hasURLs before trying to access pasteboard URL (#3561)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/64f73d717b7a62907f2403b4a32bb0598d1f0c92", "message": "Bug 1424413 - make sure webViewWebContentProcessDidTerminate is passed to delegates. (#3562)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/3ac4dfea9279f9d19754a65dbbe9ca07d7fbc11d", "message": "No Bug - Add quotes around 1Password cartfile entry."}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/621029bf0b95bc41aefebec757b82e8cfe6b2b67", "message": "Bug 1425304 - Update Cartfile to point to latest 1Password App Extension (#3556)"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3581", "title": "Bug 1399083 - Remove swiftrouter and refactor our deep links.", "body": "This removes swiftrouter completely! We wern't using it for anything complicated just some basic string matching. \r\n\r\nThe new router uses enums to route around the app. I've written tests for this and although the tests wouldn't really work to test what we had before its still useful as documentation on how the deep links should work. \r\n\r\nI've moved a lot of the configuration and routing into a different file. Having things in the AppDelegate are hard to test so moving it out made sense. \r\n\r\nThere is one important change though. Deep links can now be made by any app. Before the deeplinks (not /open-url) used to make sure that it was an extension or notification before navigating. For simplicity sake I just decided to remove it. \r\n\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3571", "title": "Bug 1415720 - Separate onboarding view from configuration. This will allow us to customize onboarding via LP.", "body": "The introViewController was very tightly coupled to our current intro slides. I've abstracted out the slides into `IntroCard`s that can be created on initialization of the ViewController. This will allow us to A/B test our onboarding. \r\n\r\nI haven't made the necessary LP changes. I will probably need to clarify with the MMA team first exactly what it is they want to test and how that will be represented in the LP backend. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "isabelrios": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/878238d182900690aa56f98254b5850a9c5e983d", "message": "Bug 1429733 - Adapt iPad XCUITests to the deletion of the Close Tab Button from PAM (#3578)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/2cd6c837d60309945a3f02b126a3777909fbe85e", "message": "Bug 1429080 - NewXCUITest Open a PDF and check different options (#3575)\n\nremove debug line and two new tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eee19705c7a53e61c1ecf895e95dd3b7a6b63f05", "message": "Bug 1428840 - Fix SearchEngine XCUITest due to Unsuccessfully entered WebpageLoading intermittent error (#3572)\n\ncomment amazon search line"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/8455287fd90b8c5c766bdd36d10704cf39c2e735", "message": "Bug 1424851 - New XCUITest Add to reading list from private mode (#3544)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/a484fc6f9e1247ad1aa512bb92b8df7cd0ac804d", "message": "Bug 1421303 - New XCUITests: New Tab Settings (#3538)\n\naddressing reviewers comments\r\n\r\nfixing warning about NSLocalizedString"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/b37f5a423b07c87c1f07d02c121b471799b01c1f", "message": "Bug 1424857 - NewXCUITest Close All Tabs Private Mode (#3545)"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3518", "title": "Bug1422492 - Fix OpenSumoXCUITest timeout error on iPad", "body": "This test is failing both in v10.x and master:\r\ntestHelpOpensSUMOInTab()\r\n\r\nLocally with this change it passes all the times, lets see after a few runs on BB", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "justindarc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e26f073c9f8caef6c5c5beef8a68f96c99f6d97f", "message": "Bug 1430753 - [Regression] Pin to top Sites does not work (#3584)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/77b5fdc20d21e3016780076e4216d75f2d2dd483", "message": "Bug 1406165 - Remove Favicons.js as a TabHelper. (#3541)\n\n* Bug 1406165 - Remove Favicons.js as a TabHelper.\r\n\r\n* Switched from NotificationCenter to TabEvents.\r\n\r\n* Addressed review comments. Fixed tests.\r\n\r\n* Addressed more nits and that damn DevelopmentTeam stuff in project.pbxproj :-/"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3585", "title": "Bug 1408127 - Integrate a pre-processor for user scripts", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3543", "title": "Bug 1420267 - New (about:blank) tab instead of Google Maps app", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3455", "title": "Bug 1417034 - Don't treat SQLITE_NULL as an integer.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomcc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/e8a32bd09f44352d998f236bf1ea5cd1edc099dd", "message": "Bug 1374760 - Include os information in sync ping (#3447)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/baa9e523e148935e5d1db1c7f662fecce516b353", "message": "Bug 1415746 - Fix sync ping recording failed outgoing records under the \"sentFailed\" property. (#3445)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "garvankeeley": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0d452107e66a9e97af52808fbd0b3b40b70f111b", "message": "Bug 1427693: TP webfont block breaking sites, let's not block this (#3580)\n\n* Bug 1427693: TP webfont block breaking sites, let's not block this"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/9e663f9204765983f20dfb6f3f4f0edde1e6fd54", "message": " Bug 1429882: deprecations fix for openURL and String.characters (#3577)\n\n* Part 1, openURL.\r\n* Part 2: remove use of String.characters\r\nUse String.count and String.isEmpty instead\r\n* Missed .characters usage for index, indexOf, map, reduce\r\nRemoved openURL() wrapper call in screengraph tests"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/5a86c9b756b15ecd70361b6c43399b86f7670e52", "message": "Bug 1424053 - SQL debugging for trace, explain, and timing (#3533)\n\n- Add sql EXPLAIN QUERY PLAN debugging\r\n- sqlite trace added.\r\n- Add perf timing to SwiftData"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3583", "title": "Bug 1429006: stackview parent of find-in-page needs to be set full BVC width", "body": "Center the subviews so the non-full width snackbars will show at their correct max width (for instance the Save Login prompt).", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3579", "title": "Bug 1430273: update TP blocklists", "body": "Attempting to fix https://bugzilla.mozilla.org/show_bug.cgi?id=1427693 by updating the blocklists. This bug is related to Strict mode blocking icons on walmart.com, which may actually be correct behaviour, but the lists are out-of-date, so we need to update them to be sure.\r\n\r\n(UPDATE:  this doesn't fix the bug, created bug 1430273 instead for this issue)\r\n\r\nUpdated file are from https://github.com/mozilla-services/shavar-prod-lists\r\nCommit: e969a342103ef081438028d76a6d01b0a3ccd039\r\n\r\nIt is useful to compare file sizes as a sanity check. To me they look correct.\r\nHere is the list sizes on master:\r\n\r\n```\r\n$ ls -lh\r\n-rw-r--r--  1 gkeeley  staff   302K 12 Jan 16:52 disconnect-advertising.json\r\n-rw-r--r--  1 gkeeley  staff    47K 12 Jan 16:52 disconnect-analytics.json\r\n-rw-r--r--  1 gkeeley  staff   813K 12 Jan 16:52 disconnect-content.json\r\n-rw-r--r--  1 gkeeley  staff    42K 12 Jan 16:52 disconnect-social.json\r\n```\r\nand this PR\r\n```\r\n$ ls -lh\r\n-rw-r--r--  1 gkeeley  staff   294K 12 Jan 16:49 disconnect-advertising.json\r\n-rw-r--r--  1 gkeeley  staff    48K 12 Jan 16:49 disconnect-analytics.json\r\n-rw-r--r--  1 gkeeley  staff   806K 12 Jan 16:49 disconnect-content.json\r\n-rw-r--r--  1 gkeeley  staff    41K 12 Jan 16:49 disconnect-social.json\r\n```", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3569", "title": "Bug 1427992: Add negative size check to PDF scrollview crash guard", "body": "In theory, it should be possible to stop this internal crash by blocking\r\nthe cases where bad values are passed up through the view hierarchy.\r\nThe only case left I can see is the size is negative,  so I added a guard for that case.\r\n\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1427992\r\n  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3554", "title": "Bug 1169322: Use a temp table to speed up frecency query.", "body": "https://bugzilla.mozilla.org/show_bug.cgi?id=1169322\r\n\r\nMultiple views are recalculated on every keystroke, but one can assume\r\nthe database is unchanging while in the autocomplete view state.\r\nThus, create a temporary table when the autocomplete state is entered to\r\nreduce the number of queries.\r\nAlso, joining result sets with favicon tables is adding 15-20% more time\r\nto the query, and the client code never uses this data in the result\r\ntable. The client view that shows the favicons (correctly) looks up the\r\nfavicon for a site as needed.\r\n\r\niPhone5 queries are 2.5-3 sec per keystroke, with this patch they are\r\n0.4 sec consistently. There will be some overhead to create the temp\r\n  table, however it is off main, and the overall perf is so much better\r\nI don't notice any issues.\r\n\r\nThe next thing to do is to remove the favicon sql joins from the code.\r\nI think it is a valuable cleanup task.\r\n  ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eoger": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/7e038a2eb6051a3fc53265393283f59b73dc95ff", "message": "Bug 1426307 - Store only derived keys instead of storing kB/kA. (#3574) r=rnewman, garvan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/717b71c94993cef87eb5121f48ab8c254d3cf01d", "message": "Bug 1419942 - Sync settings screen enhancements (#3491)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "npark-mozilla": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/18a70a5e2d3104ab8aa42419bb06ad609c5dc127", "message": "Bug 1428904 - Fix LoginManager/closeLoginManager routine (#3570)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/0376ed2388463a7bc2fdff1d907b91da4cb13135", "message": "Bug 1428065 - in testListFiltering UITest, the login lists are not filtered in time (#3565)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/eaf597f9ca392b275b10c6ff148f0b047a7c4fe6", "message": "Bug 1427832 - Use replaceText() to enter URL instead of typeText() (#3563)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4e23d7e2a476708b74305e9df36f19f059ff1609", "message": "Bug 1337907 [swift-3-regression] SessionRestore crashes when migrating from swift2.3 build to swift3.0 build (#3450)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamnemecek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/c515d82faf7c2f0c3657d6bfcd1edbd2dce4053f", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications (#3558)"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/4921a8d37904b5b7ee3c7701ce868d1b86c14019", "message": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications (#3557) r=farhan"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/commits/39783de096c6e490472b8603c0262cf352b73c45", "message": "Bug 1420521 - Refactor TimeConstants.swift (#3506)\n\n* * use shorthand for date formatters\r\n\r\n* * more refactoring in timeconstants.swift"}], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3486", "title": "Bug 1419650 - Use type inference where possible to remove unneeded static type specifications", "body": "* use built in functions hasPrefix, hasSuffix in lieu of rolling custom ones\r\n* define notifications as static extensions on notification.name\r\n* use type inference where possible", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chuckSaldana": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3564", "title": "Bug 1413715 - Added alternative constraints for iPhone X in landscape\u2026", "body": "- Added constraints for background view to work well for iPhone X, iOS 11.\r\n- Fixed background color of header view.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jhonatasrm": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3542", "title": "Bug 1419634 - Highlights behind the notch on the iPhone X when in landscape", "body": "See: https://bugzilla.mozilla.org/show_bug.cgi?id=1419634", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "st3fan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3496", "title": "Always enable file sharing", "body": null, "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62764532", "body": "NSDictionary takes AnyObject? and I think the JSON serialization does proper checks on that. The test for nil is just there because the backend expects a string and not a nil value.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62764532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63663832", "body": "This looks good. Let's merge it in.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63663832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63666563", "body": "Other than the Locking code I think this is good to merge. I'm no against the Locking code but I think we need to figure out if we really need it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63666563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63668871", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63668871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63706606", "body": "Not looking at details of the actual code, I think this is fine. Brute force away.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/63706606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64411723", "body": "Manually merged.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64411723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64424745", "body": "This is an interesting solution but I think doing it with a `UIScrollView` subclass is too complicated.\n\nHow about this instead:\n- Create a plain container `UIView` and put the login items in there\n- Add the container to the viewcontroller\n- Start listening for keyboardWillShow and keyboardWillHide notifications\n- When you receive a show or hide notification, resize the containerview: decrease/increase its height with the height of the keyboard. (the notification's `userInfo` contains the keyboard height and also animation settings - if you animate the containerView height change with the same settings you get a nice synchronous resize of the login dialog while the keyboard goes up)\n- In the container view you can use just constraints to make sure the dialog items are properly positioned. If they all fit in the top part when the keyboard is showing then there should be no dynamic changes needed. Otherwise you can also show/hide or reposition items in the notification handlers. \n\nIf you want to use autolayout for the container view, then you can add constraints to it to snap to the viewcontroller's view as usual. For the constraint at the bottom, keep a reference to the `NSLayoutConstraint` instance that you created and then instead of changing the container's view `frame`, just change the constraint's `constant` property. (Which should be padding between the bottom of the viewcontrollers view and the container view. Changes to constraints are animated if done within an animation block.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64424745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66398085", "body": "Looks good to me! Merge it!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66398085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66624157", "body": "@ncalexan I can't comment inline on `TokenServerClient` because it was already in the repo so here are a few things that I noticed:\n- I think `TokenServerToken.uid` should be a int64. The SQL schema for our server uses a BigInteger which is int64 on Postgres.\n- Maybe you already have something in mind for error handing, but I was thinking of adding a `isUserRecoverable` or `canBeRetried` flag to errors that are returned. This does not make sense in case of malformed JSON of course, but if there is something like a temporary network error or a HTTP 5xx Try Later then we can set that flag which can result in code that retries later or some UI popping up asking the user to try it again at a later time. Right now it is difficult to see what is fatal and what is not.\n- For all the different `NSError`s, should we assign a unique `code`?\n- Do we need to localize those errors? Not sure if they will be presented to a user. If true then  we simply need to use NSLocalizedString() for the error message.\n- Should every client have it's own `Alamofire.Manager` ? Or should we share a single instance that can be used for all http clients in this project? (I don't know)\n- Instead of `TokenServerClient.tokenFromJSON` .. maybe it is nicer to have a `TokenServerToken.init(json: JSON)?` If that initializer returns an optional then it can also do the validation and simply return null if the JSON is invalid or incomplete.\n\nThe tests look good. Are we going to add integration tests later that talk to a real token server? I have some at https://github.com/st3fan/bookmarks/blob/master/FirefoxAccountsTests/FXATokenClientTest.m - We can ask Services to spin up an instance on EC2 and run the token server.\n\n(To make testing this stuff easier I have written a REST API to generate MockMyID assertions. That means we can skip the MockMyIDFactory and just obain an assertion and key pair from a simple REST API and then submit that to production and staging token servers to see if our code is compatible against those. See https://github.com/st3fan/moz-mockmyid-api/blob/master/README.md)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66624157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365125", "body": "Yeah I am ok with that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365589", "body": "Nope. User scripts are loaded globally. So any page that uses a top level variable named ReaderMode will run into trouble.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365621", "body": "On Android it is used to display error messages. The flow on Android is a bit different and I don't think we will actually use the reader-message element for that.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/19916175", "body": "Can we enable this code? I disabled it because it did not work for some reason. But I think it will be good if we can open bookmarks in Safari.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/19916175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20292840", "body": "Yeah I don't think the accountManager should be so deeply integrated in the `TabBarViewController`. Ideally the `TabBarViewController` is just a generic component very much like the standard `UITabBarController` is. I think it should just manage a bunch a view controller and a button bar but not know anything about the details of those view controllers.\n\nThis also means that all the view controllers can simply be `UIViewController` instances instead of `ToolbarViewController` instances. (Why would the Bookmarks view have to know anything about the account manager?)\n\nI think we need to design things, specially view controllers, as much as standalone components that you can take and use in a different app. Not that we would do that at this point, but if that is possible then it is a good indication that you have decoupled it correctly.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20292840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293007", "body": "It is better to add and remove observers in the `viewWillAppear` and `viewWillDisappear` lifecycle methods I think.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293237", "body": "How about giving `TabViewController` an API that lets us move all the application specific logic into the class that owns the TabBarViewController? (Probably the app delegate)\n\nI think our `AppDelegate` would then also be the observer of `PanelsNotificationName` notifications, and simpy instal the new panels on the `TabBarViewController`.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20293237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587318", "body": "Shouldn't all those strings be `NSLocalizableString()`s?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20587318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ColdGrub1384": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3489", "title": "Added files downloads", "body": "# Feature\r\n\r\nI added files downloads: When a file URL is clicked, the file is downloaded and opened in an ActivityViewController.\r\n\r\nScreen recording: https://vimeo.com/244105656\r\n\r\nI added localized strings constants for \"Downloading...\", \"Open\", \"Download finished!\", \"Click Open to view the file\" and \"Error downloading file!\".\r\nBut I don't see where is the .strings file, so I only need to translate these strings.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vbudhram": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3471", "title": "Bug 1414010 - Reenable FxA Leanplum A/B test", "body": "This PR re-enables FxA Leanplum support. To do this ,it exposes two functions `getEnabled()`, which checks to see if Leanplum has started and if it is enabled for the given locale. And it exposes `isFxAPrePushEnabled()`, which checks an external Leanplum variable `useFxAPrePush` to determine with we should use pre permissions dialog.\r\n\r\nReference https://bugzilla.mozilla.org/show_bug.cgi?id=1414010#c0\r\nLeanplum A/B test: https://www.leanplum.com/dashboard#/6554650862157824/experiments/5724582465241088\r\n\r\n## Pull Request Checklist\r\n\r\n- [ ] My patch has gone through review and I have addressed review comments\r\n- [ ] My patch has a standard commit message that looks like `Bug 12345678 \r\n- [ ] I have marked the bug with `[needsuplift]`\r\n\r\n## Notes for testing this patch\r\n\r\nThis PR requires you to use the development iOS Leanplum API keys.\r\n", "author_association": "COLLABORATOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alyssais": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3466", "title": "Bug 1417864 - Don't use the URL keyboard in custom search title", "body": "Previously, `CustomSearchEngineTextView` set the keyboard type of every text view it created to `.URL`, which prevented spaces being entered using the keyboard.\r\n\r\nThis commit changes that text field so that it uses the standard keyboard, but with word-based autocapitalization so custom search titles are title-cased.\r\n\r\n## Pull Request Checklist\r\n\r\n- [ ] My patch has gone through review and I have addressed review comments\r\n- [x] My patch has a standard commit message that looks like `Bug 12345678 - This fixes something something`\r\n\r\n- [ ] I have updated the *Unit Tests* to cover new or changed functionality\r\n- [ ] I have updated the *UI Tests* to cover new or changed functionality\r\n- [ ] I have marked the bug with `[needsuplift]`\r\n- [ ] I have made sure that localizable strings use `NSLocalizableString()`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joeyg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/3117", "title": "Bug 1395353 - Display Livemark Feed", "body": "This PR changes the way Live Bookmarks are displayed in the Firefox iOS app. Instead of providing a link to the site, this PR downloads the Atom or RSS feed and displays the feed items in a list providing easy access to the feed items.\r\n\r\nNotes:\r\n - I used FeedKit (https://github.com/nmdias/FeedKit) as part of this PR. It is under MIT license and seemed to be actively maintained. Open to suggestions here.\r\n - Live Bookmarks (\"Livemarks\" in the code) have a icon associated with them in the Firefox desktop app. Does anyone have a mobile version of this icon? https://hg.mozilla.org/mozilla-central/raw-file/3529b653ede2/browser/themes/osx/page-livemarks.png\r\n - This PR does not support subscribing to Live Bookmarks in the Firefox iOS app - I plan to do that work separately.\r\n - Feed items are not opened in Reader View - should they be?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mauryat": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/2526", "title": "Bug 1246448 - Re-filter login search results in-memory", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bhavnapanchal": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/2484", "title": "Bug #2481 Could not access window created using window.open('about:blank' .... code", "body": "ISSUE https://github.com/mozilla-mobile/firefox-ios/issues/2481\r\n\r\n[Reason]\r\nabout: url scheme was going to ignore and consider as not valid url scheme for open model/tab in browser.\r\n\r\n[Solution]\r\nAdd about in array of valid url scheme for open model/tab\r\n\r\n[Test url]\r\nhttps://bhavnapanchal.github.io/firefoxpopuptest.github.io/\r\n\r\n[Side note]\r\nI could not understand why other schemes are not added into list or why\r\nthat list is added here.\r\n\r\nI think we should remove that logic or reconfirm valid url scheme list (SchemesAllowedToOpenPopups).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wesj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62590969", "body": "Not the PR I wanted. Fixing up.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/62590969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64290121", "body": "I accidentally made a new PR with this. Closing\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64290121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64478015", "body": "Lets talk about the Locking at the work week\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64478015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156184", "body": "This method is similar to what we do in Android: http://mxr.mozilla.org/mozilla-central/source/mobile/android/base/home/BrowserSearch.java#430 I think we could steal some (all?) of that code here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156314", "body": "What's going on in these touch methods? I assume we're just ignoring touches if there's a completion? That feels a bit annoying. Again, Android actually watches for selection/cursor changes and does different things depending on if you could the autocompletion text or the regular text:\n\nhttp://mxr.mozilla.org/mozilla-central/source/mobile/android/base/toolbar/ToolbarEditText.java#441\n\nMaybe good for a follow up (but if this isn't the behavior we want, I don't think we should check in the touchesX() overrides.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156373", "body": "I would probably name these methods without locationTextField. i.e. didBeginEditing, didCommit, and didEnterText. That matches WKWebView (but these method names could wind up too generic.... I also think making a generic AutocompleteTextField would actually be nice, and these are sorta url-specific. Maybe that's someone else's project.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156382", "body": "What are these numbers? A comment about what's going on here would be helpful.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156564", "body": "Oops. I forgot about this strange syntax. Christmas break :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156569", "body": "I'm not sure what this method does from its name. If its a getter, can we use a getter?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156596", "body": "Why is there a separate if statement here? is completedAndMarkedString ever set outside of the above block?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156610", "body": "Not having the caret when the completion is active seems sad. Follow up to fix?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156781", "body": "Something in here should probably be async, shouldn't it? i.e. the completion might take some time to find? I'm tempted with the history api to make this method return an NSOperation so that we have some way to cancel in progress tasks. But I'd also like to just tie this to the list history api. I wonder if we can do something like:\n\n```\nlocationTextField.textChangeDelegate = tabsViewController\ntabsViewController {\n    func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool {\n       // When the text changes, fire off an async history request\n       history.filter(searchString) { sites in\n             viewController.data = sites\n             locationTextField.autocompletion = findCompletion(sites, searchString)\n       }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9156781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721202", "body": "I usually avoid declaring types if they're implies like this.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721244", "body": "I've been declaring these guids as NOT NULL and just assigning them when an item is added lately. i.e.\n\nif item.guid == nil { item.guid = generateGuid(); }\nargs.append(item.guid)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721246", "body": "You may want to add a parameter or method here to remove a single entry. I assume you'll probably also have markAsRead and things like that, but we can do that later :)\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721257", "body": "Likewise, is there any reason to let these be null ever?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721289", "body": "heh. Yeah. I agree, not a great decision.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721373", "body": "Does this fulfill need to happen after your asserts in here?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721378", "body": "I actually should have removed this now if I didn't. We do table versioning per-table now, so you just need to override the version: Int field in your ReadingListTable.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9721378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "thebnich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64277311", "body": "Looks good to me. Should probably squash most/all of these commits unless they make sense individually.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/64277311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65834978", "body": "Thanks for the fix. Can you please squash your changes into a single commit?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65834978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65837557", "body": "Closing as dupe of #30.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65837557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66322624", "body": "The sentence is correct as is. There are two independent clauses, so a coordinating conjunction (\"so\") is needed to avoid a comma splice.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66322624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66377071", "body": "Changed FxWebView to Browser, which now uses composition to wrap a WebView instead of subclassing.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66377071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66683535", "body": "Looks good to me!\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66683535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66844544", "body": "Several style nits, but I think this approach looks good. But I'd prefer to wait for tab support to land first since we'll have to figure out how to make the toolbar work with multiple WebViews.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66844544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66845043", "body": "Also, can you please squash your commits together (either into a single commit, or two commits: one for the progress bar UI, and one that uses KVO to update that UI)?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66845043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740009", "body": "This block is almost exactly the same as the block in Clients.swift, with some minor differences. Can we factor this out into a shared method?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740058", "body": "Nit: drop newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8740058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937205", "body": "Nit: whitespace\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937229", "body": "Nit: remove newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937315", "body": "private\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8937315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9364976", "body": "What do you think of moving this class to your BrowserLocationView.swift? It's a pretty small class that I'd consider a part of the location view, and we could keep it private if we kept it there.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9364976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365303", "body": "If we want to match Android's behavior, you could also look for \"m\" or \"mobile\": http://mxr.mozilla.org/mozilla-central/source/toolkit/components/reader/AboutReader.jsm?force=1#556.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365372", "body": "What is <code>%READER-MESSAGE%</code> supposed to be used for?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365482", "body": "Adding a namespace seems like a good idea, but \"_firefox_ReaderMode\" is kinda ugly. Any reason we can't just use \"ReaderMode\"? The only namespace collisions we should have is with our own user scripts, right? If so, the _firefox_ prefix seems superfluous.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9365482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20265768", "body": "I'm mixed on this. It's nice to enforce an Account being set on construction, but we break compatibility with anything relying on this constructor. This reminds me of Android's View, where it has only the context/attrs/defStyle params, and you have to use separate setters for anything else you need to pass in.\n\nAlthough I'm generally against storyboards over code, I think they are occasionally useful for throwing together quick prototypes. Blocking off this constructor prevents IB compatibility altogether. Are we OK with that?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20265768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20333775", "body": "Nit: If we're following the conventions at https://github.com/raywenderlich/swift-style-guide#classes-and-structures, we should drop the space before the colon (\"cell: \" and not \"cell : \"). Here and throughout.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20333775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334725", "body": "I think we changed these to be set in the initializer. Rebase?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334754", "body": "Nit: no semicolons (here and elsewhere). Also, make this private?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20334754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335436", "body": "A bit nicer to use 'for i in 0..panels.count'.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335458", "body": "Nit: newline\nnewline\nnewline\nnewline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335515", "body": "What's this data2? Doesn't look like you're using it.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335531", "body": "Nit: newline\nnewline\nnewline\nnewline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335547", "body": "Nit: fix missing EOF newline\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335864", "body": "What's going on here? Why would we want to allow setting nil items?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20335864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336139", "body": "Blegh, when will _selectedButtonIndex be -1? Can we force it to always be set to something? This code is quickly growing complex.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336961", "body": "Missing an override here? Or do you not include override for protocols? (I don't remember and I can't test it now).\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20336961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337567", "body": "Can you add a few comments in the block above describe what this is doing (sorting the items based on prefs, I think)? It's not immediately clear what's happening here.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337855", "body": "Dispatch async to background thread, then dispatch async to the main thread. I've seen this somewhere before! :)\n\nFile a bug to factor this out into something AsyncTask-ish? We'll probably be using this pattern a lot.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20337855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338159", "body": "This isn't threadsafe is it? The Controllers array and the actual controllers in this array are manipulated on the UI thread. Also worried about self.accountManager below. If we're going to start throwing things onto other threads, we need to be sure those things are built with thread safety in mind.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338230", "body": "Nit: Put init at the top of the class\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338550", "body": "viewWithTag() is pretty terrible here since we have to use magic numbers to get refs to these views. If we must use nibs, can we set up IBOutlets? Otherwise, just set this up in code and hold the ref?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20338550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20683251", "body": "Yeah, hence the TODO right above it. :)\n\nI figure this is best left for bug 1092387 once we've established a localization plan.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20683251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678794", "body": "What's the point of this @objc annotation?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678880", "body": "Nit: We generally use trailing braces instead of putting them on a new line.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20678880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679098", "body": "Any reason to prefer \"(item, error) -> Void\" over just \"item, error\"?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679699", "body": "A comment would be useful here -- it's difficult to tell what's going on in this big code blob.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20679699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680189", "body": "For the sake of future-proofing, maybe this should be using account prefs instead of using NSUserDefaults directly. Maybe a TODO item once we have an Account here that we can use?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680397", "body": "Ack, NSLayoutConstraint is nasty. Any reason you aren't using Snappy for these?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680492", "body": "Nit: Not sure what these empty \"//\" lines mean -- I'd just remove them.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/pulls/comments/20680492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "raheelahmad": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65737945", "body": "Please use optional chaining instead of forced unwrapping, for the sake of safety.\n\nSo, this:\n\n``` swift\ncell.nameLabel?.text = ...\n```\n\ninstead of:\n\n``` swift\ncell.nameLabel!.text = ...\n```\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65737945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nghialv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65739502", "body": "Thanks @raheelahmad . I have just changed to optional chaining.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65739502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hikari-no-yume": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65784633", "body": "This works for me and fixes building, will it be merged?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65784633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65843653", "body": "@thebnich whoever merges it could do this, mind\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65843653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "modocache": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65814697", "body": "I encountered the same issue, but I was using Xcode 6.2 beta. Also, I think this is a duplicate of #30.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65814697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "RyanMaciel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65827756", "body": "I was on 6.1.1. Also I believe the optional chaining changes were around the same time as in #30, but yes, it is a duplicate.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65827756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rnewman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65841156", "body": "Thanks for taking the time to do this, but this is third-party code, so we won't take this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65841156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "grgcombs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65948526", "body": "That's _less_ complicated than a UIScrollView that adjusts insets?\n\nConditional visibility of views based on their ability to fit within a view with all the relevant constraints seems like a bigger headache. Would you be calling the (expensive) system layout size methods more than once?  The nice thing about the scroll view approach is that it only lays out content with constraints once and then pushes an inset on keyboard. No conditional visibility logic needed. \n\nBut maybe I'm over thinking it?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/65948526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ncalexan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66525570", "body": "@wesj @thebnich y'all might have opinions too.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66525570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Chuongv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66829324", "body": "Closing this one due to merge conflicts. Will resolve this one in the next pull request.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/issues/comments/66829324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ddzcoeur": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8847136", "body": "how to login?\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/8847136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "palewar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9038074", "body": "@thebnich Thanks. Will be careful about this in future.\n", "reactions": {"url": "https://api.github.com/repos/mozilla-mobile/firefox-ios/comments/9038074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}}}}