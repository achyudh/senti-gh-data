{"_default": {"1": {"MobileRez": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/259", "title": "Xamairn.Auth causing System.IO.FileNotFoundException when trying to build", "body": "# Xamarin.Auth Issue\r\n\r\nWhen building with a .net standard 2.0 project app errors with:\r\n\t\tException while loading assemblies: System.IO.FileNotFoundException: Could not load assembly 'Xamarin.Auth, Version=1.3.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\nFile name: 'Xamarin.Auth.dll'\r\n   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters) in /Users/builder/data/lanes/5749/ef47226b/source/xamarin-android/external/Java.Interop/src/Java.Interop.Tools.Cecil/Java.Interop.Tools.Cecil/DirectoryAssemblyResolver.cs:line 229\r\n   at Xamarin.Android.Tasks.ResolveAssemblies.AddAssemblyReferences(DirectoryAssemblyResolver resolver, ICollection`1 assemblies, AssemblyDefinition assembly, Boolean topLevel)\r\n   at Xamarin.Android.Tasks.ResolveAssemblies.Execute(DirectoryAssemblyResolver resolver)\tLvlUpHealth.Android\t\t\t\r\n\r\nyes its installed on all platforms. \r\n\r\n manually adding missing references to project cleaning, deleting obj and bin folders and rebuilding does not solve the issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 4.5.0\r\n- [ ] component version = 1.5.0.3 \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. make new .net standard 2.0 project\r\n2. add Xamarin.Auth.XamarinForms to project\r\n3. attempt to build\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = 4.7.02556\r\n-\t[] Xamairn version = 4.8.0.757 (7f9ec2a)\r\n\r\n\r\n### Expected behaviour\r\n\r\napp should build with out errors. \r\n\r\n### Actual behaviour\r\n\r\napp errors and refuses to build. installing nuget packages manually does not work\r\n\r\n\r\n\r\n*IF IT IS A NEW FEATURE REQUEST, INCLUDE THIS PART:*\r\n\r\n### Feature description\r\n\r\nWrite a description of the feature. How should it work? How should it look?\r\nInclude some graphics if this could help!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Emixam23": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/258", "title": "Method 'Android.Support.CustomTabs.CustomTabsIntent.LaunchUrl' not found.", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = 26.0.1.0\r\n- [ ] xamarin forms version = 2.5.0.121934\r\n- .NET Core 2.0 & Android 8\r\n\r\n### Steps to reproduce\r\n\r\n1. Update Xamarin.Forms, Xamarin.Android.*, Xamarin.auth to the versions above\r\n2. create a Auth client with **isUsingNativeUI = true**\r\n\r\n        // An example of code\r\n        public OAuth2Authenticator Authenticator(Action<User> onCompleted, Action<string> onError)\r\n        {\r\n            OAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n                clientId,\r\n                clientSecret,\r\n                Scope,\r\n                new Uri(AuthorizeUrl),\r\n                new Uri(redirectUri),\r\n                new Uri(AccessTokenUrl),\r\n                null,\r\n                isUsingNativeUI)\r\n            {\r\n                AllowCancel = true,\r\n                ShowErrors = false\r\n            };\r\n\r\n            authenticator.Completed += OnAuthCompleted;\r\n            authenticator.Error += OnAuthError;\r\n\r\n            OnCompleted = onCompleted;\r\n            OnError = onError;\r\n\r\n            return authenticator;\r\n        }\r\n\r\n3. Build & Deploy\r\n\r\n> System.MissingMethodException\r\n> Method 'Android.Support.CustomTabs.CustomTabsIntent.LaunchUrl' not found.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/231", "title": "Xamarin.Auth UWP side", "body": "Hi,\r\n\r\nI would like to know how does work the redirection (OnSuccess) on UWP because I stay on google and I the webview doesn't get closed.. \r\n\r\nI know that, on Android, I need the following class :\r\n\r\n    using System;\r\n    using Android.App;\r\n    using Android.Content;\r\n    using Android.Content.PM;\r\n    using Android.OS;\r\n    using PROJECT.Sources.Components;\r\n\r\n    namespace PROJECT.Droid.Sources.DependencyServices\r\n    {\r\n    \t[Activity(Label = \"CustomUrlSchemeInterceptorActivity\", NoHistory = true, LaunchMode = LaunchMode.SingleTop)]\r\n    \t[IntentFilter(\r\n    \t\tnew[] { Intent.ActionView },\r\n    \t\tCategories = new[] { Intent.CategoryDefault, Intent.CategoryBrowsable },\r\n    \t\tDataSchemes = new[] { \"com.googleusercontent.apps.xxxxxxxxxx=xxxxxxxxxxxxxxx\", \"http://www.facebook.com/connect/login_success.html\" },\r\n    \t\tDataPath = \"/oauth2redirect\")]\r\n    \tpublic class CustomUrlSchemeInterceptorActivity : Activity\r\n    \t{\r\n    \t\tprotected override void OnCreate(Bundle savedInstanceState)\r\n    \t\t{\r\n    \t\t\tbase.OnCreate(savedInstanceState);\r\n\r\n    \t\t\t// Convert Android.Net.Url to Uri\r\n    \t\t\tvar uri = new Uri(Intent.Data.ToString());\r\n\r\n    \t\t\t// Load redirectUrl page\r\n    \t\t\tAuthenticationState.Authenticator.OnPageLoading(uri);\r\n\r\n    \t\t\tFinish();\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\nBut what about UWP?\r\n\r\nThank for any help !", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/224", "title": "Xamarin Auth - Facebook & GooglePlus", "body": "I'm currently begining to work with `Xamarin.Auth` and I'm facing 2 problems for which I'm stuck since 1 day and half..\r\n\r\nI have this piece of code :\r\n\r\n    public class OAuth\r\n\t{\r\n\t\tprivate Account account;\r\n\t\tprivate AccountStore store;\r\n\r\n\t\t// These values do not need changing\r\n\t\tpublic string Scope;\r\n\t\tpublic string AuthorizeUrl;\r\n\t\tpublic string AccessTokenUrl;\r\n\t\tpublic string UserInfoUrl;\r\n\r\n\t\tstring clientId;\r\n\t\tstring redirectUri;\r\n\r\n        private Func<JObject, User> OAuthParser;\r\n\r\n        private Action<User> OnCompleted;\r\n        private Action<string> OnError;\r\n\r\n        public OAuth()\r\n        {\r\n            account = null;\r\n            store = null;\r\n\r\n            Scope = \"\";\r\n            AuthorizeUrl = \"\";\r\n            AccessTokenUrl = \"\";\r\n            UserInfoUrl = \"\";\r\n\r\n            clientId = \"\";\r\n            redirectUri = \"\";\r\n        }\r\n\r\n\t\tpublic OAuth Facebook()\r\n\t\t{\r\n\t\t\t// These values do not need changing\r\n\t\t\tScope = \"public_profile\";\r\n\t\t\tAuthorizeUrl = \"https://m.facebook.com/dialog/oauth/\";\r\n\t\t\tAccessTokenUrl = \"\";\r\n\t\t\tUserInfoUrl = \"\";\r\n\r\n\t\t\tswitch (Device.RuntimePlatform)\r\n\t\t\t{\r\n\t\t\t\tcase Device.iOS:\r\n\t\t\t\t\tclientId = \"<insert IOS client ID here>\";\r\n\t\t\t\t\tredirectUri = \"<insert IOS redirect URL here>:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Device.Android:\r\n\t\t\t\t\tclientId = \"206316176526191\";\r\n\t\t\t\t\tredirectUri = \"http://www.facebook.com/connect/login_success.html\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tOAuthParser = ParseFacebookResponse;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n        public OAuth GooglePlus()\r\n\t\t{\r\n\t\t\t// These values do not need changing\r\n\t\t\tScope = \"https://www.googleapis.com/auth/userinfo.email\";\r\n\t\t\tAuthorizeUrl = \"https://accounts.google.com/o/oauth2/auth\";\r\n\t\t\tAccessTokenUrl = \"https://www.googleapis.com/oauth2/v4/token\";\r\n\t\t\tUserInfoUrl = \"https://www.googleapis.com/oauth2/v2/userinfo\";\r\n\r\n\t\t\tswitch (Device.RuntimePlatform)\r\n\t\t\t{\r\n\t\t\t\tcase Device.iOS:\r\n\t\t\t\t\tclientId = \"<insert IOS client ID here>\";\r\n\t\t\t\t\tredirectUri = \"<insert IOS redirect URL here>:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase Device.Android:\r\n\t\t\t\t\tclientId = \"548539660999-muighch5brcrbae8r53js0ggdad5jt45.apps.googleusercontent.com\";\r\n\t\t\t\t\tredirectUri = \"com.googleusercontent.apps.548539660999-muighch5brcrbae8r53js0ggdad5jt45:/oauth2redirect\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tOAuthParser = ParseGooglePlusResponse;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tpublic OAuth2Authenticator Authenticator(Action<User> onCompleted, Action<string> onError)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n                clientId,\r\n                null,\r\n                Scope,\r\n                new Uri(AuthorizeUrl),\r\n                new Uri(redirectUri),\r\n                new Uri(AccessTokenUrl),\r\n                null,\r\n                false);\r\n\r\n        authenticator.Completed += OnAuthCompleted;\r\n        authenticator.Error += OnAuthError;\r\n\r\n            OnCompleted = onCompleted;\r\n            OnError = onError;\r\n\r\n            return authenticator;\r\n\t\t}\r\n\r\n        private async void OnAuthCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n        {\r\n\t\tOAuth2Authenticator OAuth2Authenticator = sender as OAuth2Authenticator;\r\n\t\tif (OAuth2Authenticator != null)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator.Completed -= OnAuthCompleted;\r\n\t\t\tOAuth2Authenticator.Error -= OnAuthError;\r\n\t\t}\r\n\r\n\t\t//User user = null;\r\n\t\tif (e.IsAuthenticated)\r\n\t\t{\r\n\t\t\t// If the user is authenticated, request their basic user data from Google\r\n\t\t\t// UserInfoUrl = https://www.googleapis.com/oauth2/v2/userinfo\r\n\t\t\tvar request = new OAuth2Request(\"GET\", new Uri(UserInfoUrl), null, e.Account);\r\n\t\t\tvar response = await request.GetResponseAsync();\r\n\t\t\tif (response != null)\r\n\t\t\t{\r\n                    // Deserialize the data and store it in the account store\r\n                    // The users email address will be used to identify data in SimpleDB\r\n                    string str = await response.GetResponseTextAsync();\r\n                    JObject jobject = JObject.Parse(str);\r\n                    User user = OAuthParser(jobject);\r\n\r\n                    OnCompleted(user);\r\n\t\t\t}\r\n\r\n\t\t\tif (account != null)\r\n\t\t\t{\r\n\t\t\t\tstore.Delete(account, App.AppName);\r\n\t\t\t}\r\n\r\n\t\t\tawait store.SaveAsync(account = e.Account, App.AppName);\r\n\t\t}\r\n    }\r\n\r\n    private void OnAuthError(object sender, AuthenticatorErrorEventArgs e)\r\n    {\r\n            OAuth2Authenticator OAuth2Authenticator = sender as OAuth2Authenticator;\r\n\r\n\t\tif (OAuth2Authenticator != null)\r\n\t\t{\r\n\t\t\tOAuth2Authenticator.Completed -= OnAuthCompleted;\r\n\t\t\tOAuth2Authenticator.Error -= OnAuthError;\r\n\t\t}\r\n\r\n\t\tOnError(\"Authentication error: \" + e.Message);\r\n    }\r\n\r\n        private static User ParseGooglePlusResponse(JObject jobject)\r\n        {\r\n            try\r\n            {\r\n                User user = new User()\r\n                {\r\n                    Email = jobject[\"email\"].ToString(),\r\n                    Pseudo = jobject[\"name\"].ToString(),\r\n                    Firstname = jobject[\"given_name\"].ToString(),\r\n                    Surname = jobject[\"family_name\"].ToString(),\r\n                    Image = jobject[\"picture\"].ToString(),\r\n                    Password = \"girafe\"\r\n                };\r\n                return user;\r\n            }\r\n            catch (Exception e) \r\n            { Debug.WriteLine(e.ToString()); }\r\n            return null;\r\n        }\r\n\r\n\t\tprivate static User ParseFacebookResponse(JObject jobject)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n                Debug.WriteLine(jobject);\r\n\t\t\t\tUser user = new User()\r\n\t\t\t\t{\r\n\t\t\t\t\tEmail = jobject[\"email\"].ToString(),\r\n\t\t\t\t\tPseudo = jobject[\"name\"].ToString(),\r\n\t\t\t\t\tFirstname = jobject[\"given_name\"].ToString(),\r\n\t\t\t\t\tSurname = jobject[\"family_name\"].ToString(),\r\n\t\t\t\t\tImage = jobject[\"picture\"].ToString(),\r\n\t\t\t\t\tPassword = \"girafe\"\r\n\t\t\t\t};\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\tcatch (Exception e)\r\n\t\t\t{ Debug.WriteLine(e.ToString()); }\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\nSo, I'm using this class like that:\r\n\r\n    private void FacebookAuthConnection()\r\n        {\r\n            AuthenticationState.Authenticator = OAuthService.Facebook().Authenticator(OAuthLoginCompleted, OAuthLoginError);\r\n            Presenter.Login(AuthenticationState.Authenticator);\r\n        }\r\n\r\nHowever, the problems are coming.. First, GooglePlus works, but I got an alert on my android phone that says *\"Chrome Custom Tabs Doesn't Close ...\"*, so the application crashes with an empty stack trace... I searched on the web and the only thing I got is to turn false the last parameter of `new OAuth2Authenticator();`, which doesn't work since google doesn't allow it from a webview...\r\n\r\nSo I was like, ok my code works, I get the user infos blablabla, let's try with facebook if it works from the native browser. However, I can't find the parameters URL...\r\n\r\n    Scope = \"\";\r\n    AuthorizeUrl = \"\";\r\n    AccessTokenUrl = \"\";\r\n    UserInfoUrl = \"\";\r\n\r\n - **Scope** seems to be `public_profile`\r\n - **AuthorizationUrl** would be `https://m.facebook.com/dialog/oauth/`\r\n\r\nBut what about the 2 others? I have them for Google+.\r\n\r\nI'm really stuck and I feel like, each new seconds that passes, I get more and more frustrated...\r\n\r\nThank !", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anthonyliriano": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/256", "title": "Xamarin.Auth.AccountStoreException", "body": "[SOLVED]", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SuhanKoh": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/255", "title": "Is refreshing the page available in the api?", "body": "Hello, just wondering if there is something in the code that let me refresh the screen? or go back to the first page?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/235", "title": "Capture the screen (prevent showing offline page)?", "body": "Is there a way to override the page when you call Authenticate while you're offline?\r\nRight now it will display the default offline page (android will show the whole URL on the screen).\r\n\r\n### Steps to reproduce\r\n\r\n1. Turn on airplane mode\r\n2. Call Xamarin.Auth authentication\r\n3. It should show the offline page.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Brosten": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/254", "title": "ClearCookiesBeforeLogin doesn't seem to work on UWP", "body": "- [x ] nuget version = 1.5.0.3\r\n- [ ] component version = 2.5.x\r\n\r\n....\r\nauth.ClearCookiesBeforeLogin = true;\r\nvar presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\npresenter.Login(auth);\r\n....\r\n\r\nThe second time I call presenter.Login() on UWP, I get redirected to the \"Successful login\" page (redirectUrl). This does NOT happen och Android or iOS. \r\nI guess the correct behaviour when ClearCookiesBeforeLogin =true is to show the auth-login page, without any knowledge of prior sessions?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/250", "title": "UWP shows blank page in desktop, but works on phone", "body": "- [x ] nuget version = 1.5.0.3\r\n\r\nWe have our own OAuth2 server/provider.\r\nTo use it, we use this code in the UWP LoginPage-renderer\r\n```\r\n            var auth = new OAuth2Authenticator(\r\n               clientId: \"Our.ClientId\",\r\n               scope: \"Our.Scope\",\r\n               authorizeUrl: new Uri(\"https://ourUrl.se/connect/authorize\"),\r\n               redirectUrl: new Uri(\"https://ourUrl.se/loginsuccessful.html\")\r\n\r\n  Frame rootFrame = Window.Current.Content as Frame;\r\n            rootFrame.Navigate(auth.GetUI(), auth);\r\n```\r\n\r\nThis works great if used on a Windows Phone (10), but when running it local (on my desktop), I just end up on a blank screen. (Instead of the login screen provided by our Oauth2 server). iOS and Android works like a charm.\r\n\r\nAlso interesting is that using microsoft settings (https://login.live.com/oauth20_authorize.srf etc...) does work both on Windows phone and Desktop.\r\n\r\nSo... what differs between our Environment and Microsofts?\r\n- We don't use a ClientSecret or an AccessTokenUrl\r\n- Our oauth-server seems to do some kind of redirection... When given a url like this:\r\nhttps://ourOauth2Server.se/connect/authorize?client_id=xyz&redirect_uri=xyz&response_type=token&scope=xyz&state=xyz\r\nwe become redirected to something like this:\r\nhttps://ourOauth2Server.se/login?signin=someGuid\r\n- The url created by xamarin auth, for our server has _response_type=token_. Microsoft has _response_type=code_.\r\n\r\nAny id\u00e9a if the problem is on our oauth2-server or in Xamarin Auth ?\r\n\r\nRegards\r\nAndreas Brosten\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/243", "title": "Unable to pop AuthenticatorPage from the Navigationstack", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n**I'm trying this on a Samsung Galaxy S7 phone (running Android 7.0)**\r\n\r\n- [x ] nuget version = 1.5.0.3\r\n- [ ] component version = \r\n- [ x] sample\r\nJust in simple code behind...\r\n\r\n      private void Button_OnClicked(object sender, EventArgs e)\r\n      {\r\n         var auth = GetOAuth2Authenticator();\r\n         auth.Completed += AuthOnCompleted;\r\n         auth.Error += AuthOnError;\r\n         auth.ShowErrors = false;\r\n         var login_page = new AuthenticatorPage(auth);\r\n         Navigation.PushModalAsync(login_page);\r\n      }\r\n\r\n      private void AuthOnError(object sender, AuthenticatorErrorEventArgs authenticatorErrorEventArgs)\r\n      {\r\n         Navigation.PopModalAsync();\r\n      }\r\n\r\n      private void AuthOnCompleted(object sender, AuthenticatorCompletedEventArgs authenticatorCompletedEventArgs)\r\n      {\r\n         System.Diagnostics.Debug.WriteLine(\"AuthOnCompleted\");\r\n      }\r\n\r\n      private OAuth2Authenticator GetOAuth2Authenticator()\r\n      {\r\n         return new OAuth2Authenticator(\r\n            clientId: \"*****************\",\r\n            clientSecret: \"***************************\",\r\n            scope: \"wl.basic\",\r\n            authorizeUrl: new Uri(\"https://login.live.com/oauth20_authorize.srf\"),\r\n            redirectUrl: new Uri(\"https://login.live.com/oauth20_desktop.srf\"),\r\n            accessTokenUrl: new Uri(\"https://login.live.com/oauth20_token.srf\"),\r\n            isUsingNativeUI: false\r\n         );\r\n      }\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Start app\r\n2. Click the button wired to the \"button click event\"\r\n3. Click the back-button on the MS Auth page\r\n\r\nPlatform:\r\n\r\n-\t[x] .NET version = .Net framework 4.5\r\n-\t[x] mono version = v8.0 (Android target version)\r\n\r\n\r\n### Expected behaviour\r\nI'd like to come back to the page that Pushed the AuthenticatorPage (My MainPage).\r\n\r\n### Actual behaviour\r\nThe AuthenticatorPage seems to be popped from the ModalStack, but a page with title \"Authenticate\" is still shown on my screen.\r\n\r\nCan also add that the Error-event is raised four times, all of them saying:\r\n\"_OAuth Error = The user has denied access to the scope requested by the client application._\"\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mathieumack": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/253", "title": "Be able to add settings on the Android Web view", "body": "# Xamarin.Auth Issue\r\n\r\n### Feature description\r\n\r\nWhen we used the Xamarin.Android assembly for our application we have some errors on the page rendering Inside the webview.\r\nOur OAuth provider says that we need to update the webView object settings to add these lines :\r\nwebView.getSettings().setUseWideViewPort(true);\r\nwebView.getSettings().setLoadWithOverviewMode(true);\r\n(Java version of the code sample).\r\n\r\nHow can I change these settings of the WebView in order to manage this specific Oauth provider constraints ?\r\n\r\nIs it possible to change the webView property in the WebAuthenticatorActivity partial class to a public field (line 40 https://github.com/xamarin/Xamarin.Auth/blob/master/source/Core/Xamarin.Auth.XamarinAndroid/PlatformSpecific/WebAuthenticatorActivity.cs) ?\r\nBy the Intent sended when I call the GetUI() method, I will be able to cast the object as WebAuthenticatorActivity object, and change the webView settings.\r\n\r\nThanks for your help.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/253/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "georgethms10": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/252", "title": "Showing  \"the user+denied+your+request\" Popup on clicking cancel in LinkedIn authentication screen", "body": "# Xamarin.Auth Issue\r\n\r\nShowing \"the user+denied+your+request\" Popup on clicking cancel in LinkedIn authentication screen\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3 IOS\r\n- [ ] nuget version = 1.3.1 ANDROID\r\n### Steps to reproduce\r\n\r\n1.Click the liked in login button \r\n2.In the linkedIn authentication page click cancel\r\n3.An error message is shown \"the user+denied+your+request\"\r\n\r\nPlatform:\r\n-   Android and IOS both this error message is shown\r\n-\t[] .NET version = \r\n-\t[] mono version = 5.4.1\r\n\r\n\r\n### Expected behaviour\r\nThe error message has no meaning. No need of that error message\r\nTell us what should happen\r\nThe error message has no meaning. No need of that error message. It should simply go back to the application with showing error message.\r\n### Actual behaviour\r\nIts shows error message  **\"the user+denied+your+request\"** and the cancel callback is hit two times\r\nTell us what happens instead\r\nCan you also include a screen shot?\r\n<img width=\"400\" alt=\"screen shot 2017-12-06 at 12 57 11 pm\" src=\"https://user-images.githubusercontent.com/6296111/33649904-c6c814ae-da85-11e7-8169-c17d6becdfa2.png\">\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdonogma": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/251", "title": "please update the xamarin component store to indicate UWP / windows support", "body": "if this supports UWP then please ship a working build with UWP to the xamarin component store.\r\n\r\nafter hours of searching i cam across this repository however xamarin component store outdated.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ataparia": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/248", "title": "\"Error Authenticating - Invalid grant\" when you use the OAuth2Authenticator constructor with access token url parameter", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = \r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Construct OAuth2Authenticator object instance and pass in the AccessTokenUrl parameter. \r\nEg. \r\n var authenticator = new OAuth2Authenticator(\r\n                                        authServerInfo.ClientId,\r\n                                        null,\r\n                                        authServerInfo.Scope,\r\n                                        new Uri(authServerInfo.AuthorizationServerUrl),\r\n                                        new Uri(authServerInfo.RedirectUrl),\r\n                                        new Uri(authServerInfo.AccessTokenUrl),\r\n                                        null,\r\n                                        true)\r\n                {\r\n                    ShowErrors = false,\r\n                    AllowCancel = false\r\n                };              \r\n2.Subscribe to Completed and Error handlers on the authenticator object.\r\n3.Run the application\r\n\r\nNote: Once you authenticate and allow for the access, the code flow always comes to the Error handler with the following error - \"Error Authenticating - Invalid grant\". However if you construct the OAuth2Authenticator object without the AccessTokenUrl parameter, things work great but the code returns the access token directly instead of the code.\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = 4.5\r\n-\t[] mono version = \r\n\r\n\r\n### Expected behaviour\r\nNo matter how the OAuth2Authenticator object is constructed(with or without the AccessTokenUrl parameter), after successful authentication, \"Completed\" event should fire.\r\n\r\nTell us what should happen\r\nWhen OAuth2Authenticator object is constructed with the AccessTokenUrl parameter, Error even handler fires even after successful authentication.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benczuk": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/247", "title": "ComicBook.Droid 1.5.0 broken", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] component version = 1.5.0.3\r\n- [ ] sample ComicBook.Droid\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Pull tag 1.5.0 (or commit 1.5.0.3) from git\r\n2. Build and run ComicBook.droid in Visual studio on physical android device\r\n3. Select native UI, Custom renderers, push modal async\r\n4. Press Google auth and complete process\r\n5. Browser is redirected to google.com, custom URL handler does not fire\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = \r\n-\t[] mono version = \r\n\r\n\r\n### Expected behaviour\r\n\r\ncustomer url handler triggered, process completes\r\n\r\n### Actual behaviour\r\n\r\ngoogle.com loaded in browser, break point on custom url activity not hit.\r\n\r\nSame behavior is observed in my App\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "FlashTek": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/246", "title": "Using OAuthLoginPresenter with OAuth1Authenticator on UWP causes Exception", "body": "# Xamarin.Auth Issue\r\n\r\nI am using this code to show a `OAuthLoginPresenter` on Android without any problem. \r\n\r\n    _authenticator = new Xamarin.Auth.OAuth1Authenticator(consumerKey, consumerSecret, requestTokenUrl, authorizeUrl, accessTokenUrl, callbackUrl, null, true);\r\n    _authenticator.ShowErrors = true;\r\n\r\n    var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n    presenter.Login(_authenticator);\r\n\r\nWhen I try to execute the same code on the UWP app, I get this error:\r\n\r\n    Unable to cast object of type 'Xamarin.Auth.OAuth1Authenticator' to type 'Xamarin.Auth.OAuth2Authenticator'.\r\n\r\nwhich is probably caused by the `OnNavigate` method inside `WebAuthenticatorPage.xaml.cs`. Is there another way to use the `OAuthLoginPresenter` with `OAuth1` on Android and the UWP? Is this a bug, or am I using the interface in a wrong way?\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n\r\nPlatform: Universal Windows, Windows 10 Fall Creators Update\r\n\r\n\r\nEdit: Possibly a duplicate of [this ](https://github.com/xamarin/Xamarin.Auth/issues/236) report?", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomQv": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/244", "title": "NullReferenceException in presenter.Login on Windows-desktop", "body": "I'm trying to use Xamarin.Auth 1.5.0.3 in a Windows.Forms app, but get NullReferenceException  in \r\n\r\nvar presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\npresenter.Login(authenticator);\r\n\r\nI followed [this tutorial](https://developer.xamarin.com/guides/xamarin-forms/cloud-services/authentication/oauth/) but I also need Windows.Forms and Xamarin.Mac. Most probably I need to change something because its desktop and not mobile, but was is the correct way to initialise the Login-UI on desktop?\r\n\r\nThanks\r\nTom\r\n\r\n\r\n\r\nSystem.NullReferenceException occurred\r\n  HResult=0x80004003\r\n  Message=Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt.\r\n  Source=Xamarin.Auth\r\n  StackTrace:\r\n   at Xamarin.Auth.Presenters.OAuthLoginPresenter.Login(Authenticator authenticator)\r\n   at Test.Win.Form1.btnLoginGoogle_Click(Object sender, EventArgs e) in C:\\Users\\Tom\\QuoVadis\\QvxCloud\\Test.Win\\Form1.cs:line 50\r\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   at System.Windows.Forms.Button.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n   at System.Windows.Forms.UnsafeNativeMethods.DispatchMessageW(MSG& msg)\r\n   at System.Windows.Forms.Application.ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop(IntPtr dwComponentID, Int32 reason, Int32 pvLoopData)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Int32 reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Int32 reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.Run(Form mainForm)\r\n   at Test.Win.Program.Main() in C:\\Users\\Tom\\QuoVadis\\QvxCloud\\Test.Win\\Program.cs:line 19\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "marcelinhovt": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/242", "title": "NativeUi for Instagram works?", "body": "I tried a lot of ways to implement a NativeUi for Instagram but is not working. Redirects me to my redirectpage and nothing works.\r\nIf nativeui = false, works perfect.", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RadoslawKubas": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/240", "title": "Facebook NativeUi - how to change user?", "body": "I'm trying to implement Facebook NativeUI authentication in Xamarin.Forms PCL project for iOS, and have following problem.\r\n\r\nI created authenticator  in PCL library like this\r\n\r\n```\r\nauthenticator = new OAuth2Authenticator(\r\n                    clientId: ClientId,\r\n                    scope: \"\",\r\n                    authorizeUrl: new Uri(\"https://m.facebook.com/v2.10/dialog/oauth \"),\r\n                    redirectUrl: new Uri($\"fb{ClientId}://authorize\"),\r\n                    getUsernameAsync: null,\r\n                    isUsingNativeUI: true\r\n                )\r\n                {\r\n                    AllowCancel = true,\r\n                    ShowErrors = false\r\n                };\r\n\r\n            authenticator.Completed += OnFacebookAuthCompleted;\r\n            authenticator.Error += OnFacebookAuthError;\r\n\r\n            AuthenticationState.Authenticator = authenticator;\r\n\r\n            var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n            presenter.Login(authenticator);\r\n```\r\n\r\nIt works fine, user can login without any problem with his user and password.\r\n\r\nThe problem is when user want to login with another Facebook account. Next time login screen looks like that:\r\n\r\n![s1](https://user-images.githubusercontent.com/30774825/31774460-1871dc88-b4e6-11e7-8892-98042d112663.png)\r\n\r\nIt is perfect if user want to use same account, but if want to login with another and click \"Cancel\" application receive Error message (\"OAuth Error = Permissions+error\") and browser redirect to new blank page like that:\r\n\r\n![s2](https://user-images.githubusercontent.com/30774825/31774705-c68582ca-b4e6-11e7-8bd1-fa28c76c436d.png)\r\n\r\nAnd next time still offer login again to same account. \r\n\r\nThe only way to login to another account is to delete app and install it again.\r\n\r\nI guess, it is not a bug but some my mistake, but can't find any solution myself. When using Facebook not native or Google native everything works fine, but in this case have no idea what to do.\r\n\r\nHow can I force app to forget previous account?\r\n\r\nAnd another question, is there a way to close native browser page after unsuccessfully login? When user login successfully the page close itself but in case of error stay on blank page like in this example.\r\n ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bartdkmediahuis": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/239", "title": "AndroidAccountStore - LoadEmptyKeyStore - KeyStore was not initialized", "body": "# Xamarin.Auth Issue\r\n\r\n### Version\r\n- [ ] nuget version = 1.5.0\r\n\r\n### Steps to reproduce\r\n\r\n1. Hard to reproduce this issue, since we only have exception logs of end-users facing this problem. \r\n\r\n```\r\nException: KeyStore was not initialized\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <506a42a3a126462eb26f593d3ae1120c>:0 \r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <742a6edd960b4fb699cb9ccbd74061bf>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0001f] in <742a6edd960b4fb699cb9ccbd74061bf>:0 \r\n  at Java.Security.KeyStore.Aliases () [0x0000a] in <11c47835c3f94ca5b4ed0336efc2f1d9>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForServiceAsync (System.String serviceId) [0x00012] in <8f2237247f7844b1a995cb5465cdbfbe>:0 \r\n```\r\nWondering if this specific code is still required ? (**AndroidAccountStore**)\r\n\r\n<summary>Work around Bug https://bugzilla.xamarin.com/show_bug.cgi?id=6766 </summary>\r\nvoid LoadEmptyKeyStore(char[] password)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/239/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DVDPT": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/237", "title": "UWP, Desktop Back button not showing, when AllowCancel = true. [Fix Inside]", "body": "# UWP, Desktop Back button not showing\r\n\r\n\r\n### Version\r\n\r\nAny\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a Xamarin.Forms, app\r\n2. Initialize a `OAuth2Authenticator` (set AllowCancel to true) and run `OAuthLoginPresenter.PlatformLogin(auth)` on UWP Desktop\r\n3. Note that the back button does not show, forcing the user to close the app in order to go back.\r\n\r\nPlatform:\r\n\r\nUWP Any version on the Desktop\r\n\r\n\r\n### Expected behaviour\r\nWhen AllowCancel is set to true, the back button should appear\r\n\r\n\r\n### Actual behaviour\r\n\r\nThe back button doesn't appear\r\n\r\n\r\n### Fix source code\r\n\r\nToo lazy to clone and create a pull request for it, so I leave the source here, if you can't integrate it without a pull request let me know:\r\n\r\n```\r\n public class PlatformOAuthLoginPresenter\r\n    {\r\n        private readonly bool _hasHardwareButton;\r\n        private Frame _rootFrame;\r\n        private Authenticator _authenticator;\r\n\r\n        public PlatformOAuthLoginPresenter()\r\n        {\r\n            _hasHardwareButton = ApiInformation.IsTypePresent(\"Windows.Phone.UI.Input.HardwareButtons\");\r\n        }\r\n\r\n        public void Login(Authenticator authenticator)\r\n        {\r\n            _authenticator = authenticator;\r\n            authenticator.Completed += AuthenticatorCompleted;\r\n            System.Type pageType = authenticator.GetUI();\r\n\r\n            _rootFrame = Window.Current.Content as Frame;\r\n            _rootFrame.Navigate(pageType, authenticator);\r\n\r\n\r\n            if (!_hasHardwareButton && _authenticator.AllowCancel)\r\n            {\r\n                var navManager = SystemNavigationManager.GetForCurrentView();\r\n                navManager.AppViewBackButtonVisibility = AppViewBackButtonVisibility.Visible;\r\n                navManager.BackRequested += MyPlatformOAuthLoginPresenter_BackRequested;\r\n            }\r\n        }\r\n\r\n        private void MyPlatformOAuthLoginPresenter_BackRequested(object sender, BackRequestedEventArgs e)\r\n        {\r\n            if (_rootFrame.CanGoBack)\r\n            {\r\n                _rootFrame.GoBack();\r\n                _authenticator.OnCancelled();\r\n            }\r\n        }\r\n\r\n        void AuthenticatorCompleted(object sender, AuthenticatorCompletedEventArgs e)\r\n        {\r\n            if (!_hasHardwareButton && _authenticator.AllowCancel)\r\n                SystemNavigationManager.GetForCurrentView().BackRequested -= MyPlatformOAuthLoginPresenter_BackRequested;\r\n\r\n            ((Authenticator)sender).Completed -= AuthenticatorCompleted;\r\n        }\r\n    }\r\n```\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kookpot": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/236", "title": "WebAuthenticatorPage not working with OAuth1Authenticator in UWP", "body": "https://github.com/xamarin/Xamarin.Auth/blob/c584e5395f598b98b82bd22cfe079f135b0ffeda/source/Xamarin.Auth.UniversalWindowsPlatform/WebAuthenticatorPage.Events.xaml.cs#L28", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DuarthVader": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/234", "title": "../iOS/MTOUCH: Error MT2002: Failed to resolve \"System.Json.JsonValue\" reference from \"Xamarin.Auth, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null\" (MT2002) (project_name.iOS)", "body": "# Xamarin.Auth Issue\r\n### Version\r\n\r\n- [ ] nuget version = 4.3.0.2418\r\n- [x] component version = 1.5.0.3\r\n- [ ] sample\r\n\r\n\r\n### Steps to reproduce\r\nRelease:\r\n1. Compile iOS project\r\n\r\nDebug:\r\n1. Click play to run app in simulator.\r\n2. Perform any login atempt (in my app: Facebook, Google, Linked In)\r\n3. Fails due to error seen in screenshot below.\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = .NET Core\r\n                                     Runtime: /usr/local/share/dotnet/dotnet\r\n                                     Runtime Version: 2.0.0\r\n                                     SDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\n                                     SDK Version: 2.0.0\r\n                                     MSBuild SDKs: \r\n                                     /Library/Frameworks/Mono.framework/Versions/\r\n                                     5.2.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n-\t[] mono version = 5.2.0.224 (d15-3/14f2c81) (64-bit)\r\n\r\n### Expected behaviour\r\n\r\nRelease: Compile project in order to generate .ipa\r\nDebug: Get auth login response, convert into JsonValue in order to deserialize response.\r\n\r\n### Actual behaviour\r\n\r\nRelease: Compilation error\r\n\r\n![captura de pantalla 2017-09-26 a las 13 27 40](https://user-images.githubusercontent.com/1272447/30858123-89100530-a2be-11e7-8b52-24e3ab7f2e6d.png)\r\n\r\nDebug: When app is about to come back to my LoginViewModel I receive this exception:\r\n\r\n![captura de pantalla 2017-09-26 a las 13 32 24](https://user-images.githubusercontent.com/1272447/30858283-51c86792-a2bf-11e7-9ca9-9d11e818f616.png)\r\n\r\n![captura de pantalla 2017-09-26 a las 13 32 40](https://user-images.githubusercontent.com/1272447/30858289-5b3f169a-a2bf-11e7-863a-8d5bb1e87798.png)\r\n\r\nIf it helps I'm coding my project in visual studio community 2017 for Mac.\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Clemon-R": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/233", "title": "Bug size of the window with Facebook Authentificator on IOS", "body": "# Xamarin.Auth Issue\r\n\r\nHello,\r\n\r\nI have a problem with facebook authentificator, \"the window is too small to continue.\"\r\n![image001](https://user-images.githubusercontent.com/23109272/30797218-6e8afa2e-a1d5-11e7-8bc3-29524daf6030.png)\r\n\r\n\r\nwith this code:\r\nOAuth2Authenticator authenticator = new OAuth2Authenticator(\"XXXXXXXXXXXX\",\r\n                \"public_profile,publish_actions,manage_pages,publish_pages\",\r\n                new Uri(\"https://m.facebook.com/dialog/oauth\"),\r\n                new Uri(\"https://www.facebook.com/connect/login_success.html\"));\r\n\r\nThis bug happen only on IOS\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dagostinelli": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/229", "title": "Can't actually add a reference to Xamarin.Auth.Extensions in the PCL", "body": "# Xamarin.Auth.Extensions Issue\r\n\r\nThis might be related to this https://github.com/xamarin/Xamarin.Auth/issues/171\r\n\r\n### Version\r\n```\r\n<package id=\"Xamarin.Auth\" version=\"1.5.0.3\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n<package id=\"Xamarin.Auth.Extensions\" version=\"1.5.0.3\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n<package id=\"Xamarin.Forms\" version=\"2.3.4.270\" targetFramework=\"portable45-net45+win8+wp8+wpa81\" />\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Attempt to install the Xamarin.Auth.Extensions package after already installing Xamarin.Auth nuget package.  Do this in a PCL.\r\n2. Look at your project References.  Notice anything missing?  What's missing is the extensions dll.  \r\n\r\nI attempted to add the DLL manually.  It turns out that the DLL in the Xamarin.Auth.Extensions package is called Xamarin.Auth.  Bug?\r\n\r\nNeedless to say, the result is that and object called `OAuth2AuthenticatorExtensions` is not available for use in source code.\r\n\r\n### Comments\r\n\r\nWhile we are on it...\r\n- Having this whole refresh token stuff outside of the main Xamarin.Auth project seems really odd.  [It's part of the spec](https://tools.ietf.org/html/rfc6749#section-1.5)  Maybe it wasn't part of the spec at one time?  I read [this link](https://github.com/xamarin/Xamarin.Auth/pull/79) and [this link](https://lostechies.com/jimmybogard/2014/11/13/mobile-authentication-with-xamarin-auth-and-refresh-tokens/) about the rationale behind separating it.  Still... seems a like this needs to get merged now.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dschneid85": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/228", "title": "oAuth2 with implict flow for OpenID", "body": "Hello,\r\n\r\nI use your oauth framework to authenticate with our own oauth server.\r\nThis server is an connect2id server which implement the openid standard.\r\nWe would like to use the oauth2 implict flow with your framework but this isn't possible.\r\nThe connect2id server required for the implict flow the response_type=id_token or response_type=id_token%20token.\r\nTherefore the nonce parameter is also required. So I have to set this parameter if I use the implict flow.\r\nCheck this in the open id standard https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth. I think your oAuth framework should be worked according to the open id standard.\r\nWhat I have did I checked out your github project and changed a bit the class OAuth2Authenticator.cs.\r\nI added the nonce parameter and changed the response_type to id_token token. Then your code works fine for me.\r\nAnother problem what I have is how can I change the title page of the embedded webview. The title can I changed (authenticator.Title ) but not the icon and the background color.\r\nIs there any way to change this?\r\n\r\nBest regards,\r\n\r\nDaniel", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "patsadow2": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/227", "title": "Toolbar", "body": "Hello,\r\n Is there any magic way to remove ugly toolbar ??\r\n\r\nBr ;)", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zati-": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/226", "title": "Browser doesn't close itself on Android with native renderers", "body": "# Xamarin.Auth Issue\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] Xamarin Forms = 2.3.4.270\r\n \r\n\r\n### Steps to reproduce\r\n\r\nCall OAuth2Autenticator on Android with native renderers, using presenter or AuthenticatorPage. \r\nCustom URL scheme is registered\r\n \r\n```\r\n     OAuth2Authenticator authenticator = new OAuth2Authenticator(\r\n              \"mobile\",\r\n              \"secret\",\r\n              \"openid profile api1\",\r\n              new Uri(Settings.Server + \"/connect/authorize\"),\r\n              new Uri(\"myapplogin://localhost/oauth2redirect\"),\r\n              new Uri(Settings.Server + \"/connect/token\"),\r\n              null,\r\n              true);\r\n            authenticator.Completed += Authenticator_Completed;\r\n            var presenter = new Xamarin.Auth.Presenters.OAuthLoginPresenter();\r\n            presenter.Login(authenticator);\r\n```\r\n``\r\nCustom URL scheme interceptor Activity and `Authenticator_Completed` are called. \r\n\r\n\r\nPlatform:\r\n\r\n-\t[] .NET version = Xamarin 4.6.0.299\r\n-\t[] Android SDK = 7.1\r\n-\t[] Authentication server : custom platform using IdentityServer4\r\n-\t[] Android : tested on Moto X Android 6.0 with Chrome, and Visual Studio Android Emulator with Android 6.0 and Browser\r\n\r\n### Expected behaviour\r\n\r\nWeb browser should close itself after authentication\r\n\r\n### Actual behaviour\r\nThe web browser doesn't close itself after authentication. This is working well on IOS (both native and not) and on Android when `isUsingNativeUi=false`\r\n\r\n![image](https://user-images.githubusercontent.com/10127729/30133675-0340e6d6-9355-11e7-98eb-46c7bc4c5fd9.png)\r\n\r\n\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/226/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vandersteen": {"issues": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/223", "title": "KeyStore was not initialized", "body": "# Xamarin.Auth Issue\r\n\r\nRecently I am getting KeyStore was not initialised exception when trying to do anything with the AccountStore (in Xamarin Forms).\r\n\r\n*IF BUG, INCLUDE THIS PART:*\r\n\r\n### Version\r\n\r\n- [ ] nuget version = 1.5.0.3\r\n- [ ] Forms = 2.3.4.267\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n\r\nclass App : Application\r\n{\r\n       public App()\r\n       {\r\n               MainPage = ...;\r\n\r\n               var accountStore = AccountStore.Create(Forms.Context);\r\n               var account = accountStore.FindAccountsForService (\"x\").FirstOrDefault ();\r\n       }\r\n}\r\n```\r\n\r\n### Actual behaviour\r\n\r\n```\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <6cd960837cc24c26bab2a0a29b597627>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x0001f] in <6cd960837cc24c26bab2a0a29b597627>:0 \r\n  at Java.Security.KeyStore.Aliases () [0x0000a] in <d278c06ad5684d6882c743a94a93ebc2>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForServiceAsync (System.String serviceId) [0x00011] in <347784a7d58c449896f76cefd9e360c2>:0 \r\n  at Xamarin.Auth.AndroidAccountStore.FindAccountsForService (System.String serviceId) [0x00000] in C:\\cxa\\source\\Xamarin.Auth.LinkSource\\Evolve16.Labs\\Security\\CryptoUtilities.cs:19 \r\n  --- End of managed Java.Security.KeyStoreException stack trace ---\r\njava.security.KeyStoreException: KeyStore was not initialized\r\n\tat java.security.KeyStore.throwNotInitialized(KeyStore.java:96)\r\n\tat java.security.KeyStore.aliases(KeyStore.java:424)\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/223/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "moljac": {"issues": [], "commits": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/f99b70cb684ed52b2672fa3c13b9f7810d3ad33c", "message": "cake updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4d6c4b96ab3fbae2e92f1a2e1f7efa4ac8729f7e", "message": "project updates Android TargetFramework"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/abe15efa24a989654c1c6f5ea6b99b761680595b", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/45b4494668a25f53ec49837b20ffc8ebf0eaddfd", "message": "moved triaging repro sample"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/4ef22eb86085fa879f45d28e17a9989f2a5e7818", "message": "projects updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e50f1e80b753c536e2b8824701f7674d545f8d8d", "message": "moved bug repro project to bugs-triaging folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c0e760dba63de3e9c70e62766f887b02657f8aff", "message": "Flickr 3 AppTypes added"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/02a264c26504bfb8a3f1734a1ad8c3e7aac880b9", "message": ".NET Standard does not like <Name /> tag for project reference[s]"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/811b17c9218c321535d152298f2143ca15996b54", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/XamarinForms/Xamarin.Auth.Forms.NetStandard16/Xamarin.Auth.Forms.NetStandard16.csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/53484ae13cd7d8357b0e8c92c2d243e170e696ee", "message": "reference fixes for .NET Standard - detected in Xamarin.Social builds"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c4596409d67b9662900771ed5c18f2263e983bd3", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth\n\n# Conflicts:\n#\tsource/Extensions/Xamarin.Auth.Extensions.NetStandard16/Xamarin.Auth.Extensions.NetStandard16.csproj\n#\tsource/XamarinForms/Xamarin.Auth.Forms.NetStandard16/Xamarin.Auth.Forms.NetStandard16.csproj"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/00e1282cc930ffb36d24af9ff18ecaedb2c8dfeb", "message": "conditional references (projects nugets)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c8320589263b243fb7675dcdcb2fa76d0c8f63da", "message": "NetStandard removed from Mac Solutions"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/1067b9659cee8f2abccc1fb4d3ca1981a0b02f9f", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/16037ea584983aedb3e26ddd6092ffca21e5a114", "message": "cake build update (removed fixes for various nuget issues)"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/44194d03287db1966b28f2c74a7dd6063fe2e5e1", "message": "solution update for CI build tests"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e63ee630d5ae7d85865334f0dde38763c4db47e7", "message": "UWP updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/636a66492fcc46c0cffb054e58d47fb5e8eaeb32", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/a4ee9fb83f221ef63fdfe566ac2ce4a36d2036e8", "message": "build.cake update"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/abc6cac6797484aaf7237a9b7533f849b2491362", "message": "project references path fix"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/08adf2157e122465829e00a8eede8009c053c5f4", "message": "build cake updates"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/bbe1216700fe2ae5c229b8153637d67229207a0d", "message": "Merge branch 'master' of https://github.com/xamarin/Xamarin.Auth"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/5a34b10535d7a479a623db3598450d48579e057a", "message": "samples/bugs-triaging/ folder added for repros\nsome samples moved to samples/bugs-triaging/ folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c22c401482b29887f9a65c2231a9d7f8e74f4051", "message": "cake build script fixes for new structure"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/8abb4f49c11593402ebf5918de37451bf7062bb9", "message": "Solutions fixed for new paths"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c39acd0f4c977d7ee5f00aad2351b3d472951f12", "message": "Xamarin.Forms projects' paths fixed to match new structure with Core/"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/faa34ec6850ce979801accee76a5dab31f81f76a", "message": "Extensions projects fixed to match new paths"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/820c0388beae316e2750de823f2084c5a845de4c", "message": "code restructuring for .NET STandard and vNext\nCore/ folder created\nOAuth core projects moved to Core/ folder"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/c4d561094edd84be543e752099b42520c535794e", "message": "old stale guid for iOS project removed"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/commits/e4b8e8f18f574487c77b97fae2538277357feb7b", "message": "old uwp project removed"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dlemstra": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/249", "title": "Added option to use a bearer token instead of query string parameters in OAuth2Request", "body": "# Xamarin.Auth Pull Request\r\n\r\nFixes #61.\r\n\r\n### Checklist\r\n\r\n- [ ] I have included examples or tests\r\n- [ ] I have updated the change log\r\n- [ ] I am listed in the CONTRIBUTORS file\r\n- [x] I have cleaned up the commit history (use rebase and squash)\r\n\r\n### Changes proposed in this pull request:\r\n\r\n- Added option to use a bearer token instead of query string parameters in the OAuth2Request, for more details see #61.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattleibow": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/192", "title": "Updated the projects to use shared projects instead of file linking", "body": "Instead of using file linking, which is error prone, use a single shared project for each group.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/180", "title": "Refactor Project Files", "body": "This PR has 2 main aims:\r\n\r\n 1. Replace all the linked files with a single Shared Project\r\n 2. Collapse the Windows projects into the minimal required.\r\n\r\n## 1. Shared Projects\r\nSwitching to Shared Projects reduces the overhead of managing the individual file links. Also, it removes the need for the \"unused\" LinkSource class library.\r\n\r\n## 2. Windows Projects\r\nCollapsing the Windows projects into 3 projects reduces overhead. Previously, there were quite a few (10 for just the core source). This has been reduced to just 3 for the core source:\r\n\r\n 1. Windows Phone 8.x (Silverlight)\r\n 2. Windows 8.1 (Phone & Store)\r\n 3. Windows 10\r\n\r\nFor the Xamarin.Forms projects, there is now just 4:\r\n\r\n 1. Windows Phone 8.x (Silverlight)\r\n 2. Windows 8.1 (Phone)\r\n 3. Windows 8.1 (Store)\r\n 4. Windows 10\r\n\r\nIn addition to the platform projects, the Extensions project is now just the single PCL.\r\n\r\nFinally, as a result of shared projects, I was able to remove a few files that had the same code by using them in the Shared Project. Most notably were the platform specific code for Windows.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MrXemiu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/145", "title": "Updates to OAuth2Request regarding alternative values for the access token's parameter name", "body": "\u2026f the optional argument 'accessTokenParameterName';\r\n\r\nUpdated OAuth2Request.GetAuthorizationHeader() to accept an optional argument 'accessTokenParameterName' to create auth headers from non-standard access token value names.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamhewitt627": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/119", "title": "Correct access from ValueData", "body": "When loading an older keychain entry that has the password in Generic (version 1.2.2, at the very least) we can't just use ValueData. It being null (since 1.2.2 didn't set it) throws ArgumentNullException inside NSString.FromData.\n\nGoes with #118.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AlecDTucker": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/94", "title": "Marshalled NavigationService.GoBack to UI Thread", "body": "Added code to marshal the NavigationService.GoBack call to the UI thread\nto avoid an invalid cross thread access exception when using OAuth1 on\nWindows Phone\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anthonyresq": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/93", "title": "wp8 silverlight implementation - with openid client", "body": "the current experimental-winphone branch doesn't easily allow for a cross platform solution.\n\nI've taken most of the code from it, but change the GetUI to return a user control. This way a ViewRenderer can SetNativeControl to the returned UserControl in the windows phone renderer.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzaugg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/91", "title": "OAuth2Authenticator changes to work with joind.in OAuth", "body": "Joind.in OAuth implimentation is somewhat non-standard. For example, they require a URL parameter of \"api_key\" and send the access code back on the URL. These changes were required to work with this API, but they do not break any other previously working sites.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "YoupHulsebos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/88", "title": "Added IsAuthenticated check", "body": "Added ability to check if there already is a authenticated user when the\nauthentication resumes.\nThis enables scenario's where multiple applications use the same\naccounts (and login screen). Now the login screen can be cancelt if a\ndifferent application already signed in.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ddobrev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/84", "title": "Replaced catching FileNotFoundException with a check", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "srgb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/82", "title": "Some OAuth2 providers do not work with the redirect_uri being sent", "body": "The OAuth2 redirect_uri is an optional parameter - see https://tools.ietf.org/html/rfc6749#section-4.1.1\nI have added a new SendRedirectUrl property (defaulting to true for compatibility) that allows turning off   sending the redirect_uri parameter in the authorization request. The reason for this is that I am trying to integrate with a provider that returns 400 if this parameter is supplied as they mandate that the only URI used is the oine set in their developer dashboard.\nObviously naming of the property is subjective so could be changed, but hopefully you can see what I'm trying to achieve.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "braneworks": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/80", "title": "Changed SecAccessible.WhenUnLocked to AfterFirstUnLocked", "body": "Change allows for keychain access when the screen is locked (needed for ibeacons if you are also accessing the keychain for use auth, etc)\n(this is recommended method by Apple)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jbogard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/79", "title": "Adding method to request a refresh token", "body": "Closes #47. You still typically need to subclass and override GetInitialUrlAsync:\n\n```\npublic override Task<Uri> GetInitialUrlAsync()\n{\n    string uriString = string.Format(\n        \"{0}?client_id={1}&redirect_uri={2}&response_type={3}&scope={4}&state={5}&access_type=offline&approval_prompt=force\",\n        this.AuthorizeUrl.AbsoluteUri,\n        Uri.EscapeDataString(this.ClientId),\n        Uri.EscapeDataString(this.RedirectUrl.AbsoluteUri),\n        this.AccessTokenUrl == null ? \"token\" : \"code\",\n        Uri.EscapeDataString(this.Scope),\n        Uri.EscapeDataString(this.RequestState));\n    var url = new Uri(uriString);\n\n    return Task.FromResult(url);\n}\n```\n\nBut I found that method varied per OAuth provider a bit, and I still want other changes so I didn't bother messing with the URI.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevbowl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/78", "title": "winphone + enhancements", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KrisVandermotten": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/76", "title": "bug fix in SslCertificateEqualityComparer", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saramgsilva": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/64", "title": "Sample: Using Xamarin.Auth.OAuth2Authenticator with async/await", "body": "The Xamarin.Auth don\u00b4t allow to authenticate using async/await, a feature that is fundamental in C# apps, this pull request add a sample for Xamarin.Android and Xamarin.IOS that uses async/await solution.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hardye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/63", "title": "Fix : Android password field now hides the user input in FormAuthenticatorActivity", "body": "In Android, when using fields configured with type `FormAuthenticatorFieldType.Password` in a `FormAuthenticatorActivity`, they display their values just like regular text fields. This pull request fixes the issue and gets password fields to hide their input values as expected.\n\nSubmitted under an [Apache 2.0 license](http://www.apache.org/licenses/LICENSE-2.0.html).\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsauve": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/62", "title": "Add new property to disable the escaping of scope parameter.", "body": "By default, the OAuth2Authenticator escapes the scope parameter. When multiple scopes are provided (example: \"basic+comments+relationships+likes\"), some OAuth2 providers (such as Instagram) return an HTTP 400 BAD REQUEST on authentication. This is because the encoding of the \"+\" character to \"%2B\" is not accepted by some OAuth2 providers (such as Instagram). This commit adds a property named DoNotEscapeScope that can be set to true to circumvent the issue.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iouri-s": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/59", "title": "MakeSecretOptional", "body": "Make client secret == null a valid scenario for authentication code\ngrant. The changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/58", "title": "IgnoreErrorsWhenCompleted", "body": "Add a protected property IgnoreErrorsWhenCompleted to ignore errors when\ncompleted.\nDerived classes need to set it to true when redirecting an OAuth flow to an unreachable URL, e.g.\nhttp://localhost.\nThe changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/57", "title": "OnCreatingInitialUrl virtual method", "body": "Add a new protected virtual method to allow derived classes to alter initial page parameters. The changes are submitted under the Apache license and were made to provide support for authenticating with Azure Active Directory.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roycornelissen": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/56", "title": "Added option for providing your own KeyStore password", "body": "Fix for issue #55:\n\nInstead of using a hard coded KeyStore password, the application should\nprovide its own from a safe origin. Otherwise the\nXamarin.Social.Accounts keystone in all apps that use the Xamarin.Auth\ncomponents can be easily breached by just looking at the source code on\nGitHub.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11871905", "body": "Correct, I will add this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11871905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11887316", "body": "A null check was already in there but I've changed the notation to match the coding style of the rest of the codebase. Will come along in next commit.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11887316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "anton-makarevich": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/52", "title": "Wp local", "body": "*attenpt to serialize cookies on WP (not sure whether it actually works)\n*Xamarin.Auth support for Windows 8 (Windows Store) apps. The big issues with it is win8 webview can't clear cookies... but it's working - tested on facebook.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "livetocode": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/49", "title": "Bug fix when using GoogleApps authentication", "body": "Hi,\n\nThanks for your excellent component. However, I had an issue when using it with Google Apps:\nthe authentication workflow worked great except that it was always displaying an error dialog that could simply get dismissed.\nAfter a lot of investigation, I was able to narrow down the problem to just a few lines of code to fix it:\nGoogle was redirecting to the registered callback (localhost) but the WebView was not able to connect to the host, as of course, our application is not a server!\nSo, I simply forced the WebView to ignore any redirect to a localhost server. I had to do it after your OnPageLoading processing, to let it detect the redirect containing the authorization code.\nAlso, I had to check in the LoadFailed event that the error code was not a 102, because this what the WebView throws when a navigation is stopped.\n\nI extended your sample app to demonstrate the behaviour, using a custom Google app created in my domain.\nIf you want to verify what happens without my fix, just comment my code in the ShouldStartLoad event.\n\nHope this helps,\n\nMorgan\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "migueldeicaza": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11246309", "body": "It works if you open the README.md file\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11246309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405448", "body": "@praeclarum  Frank, would you mind reviewing this patch?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405479", "body": "@praeclarum Frank, would you mind checking this one too?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405500", "body": "Eric, do we still need this patch?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14843954", "body": "I reformatted the source code already and committed it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14843954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "michaeljgray": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11269749", "body": "So it does. That's really silly.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/11269749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ermau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405613", "body": "> Eric, do we still need this patch?\n\nYes.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13405613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14819206", "body": "Is the addition of proxy support integral to DropBox support?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14819206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823252", "body": "Would you mind separating it into two clean pull requests, with corrected spacing?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14850232", "body": "You need to supply the OAuth2Authenticator with a `GetUsernameAsyncFunc` method with something like what @ybigus has posted. This is an optional argument to the constructor. It's just a generic authenticator, it does not know how to retrieve the username.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14850232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17362640", "body": "I'm thinking this was the wrong approach after all. If you already have an `Account` object, why would you be going through the auth process again? You can just start making requests at that point. The original behavior of just clearing the cookies seems like the best idea, now that I understand the reasoning behind it.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17362640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17401861", "body": "I wonder if perhaps the better approach would be to automatically preserve cookies, and have an explicit ClearCookies() for the dev to use when the user wants to change accounts.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17401861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426246", "body": "Hi @gaearon,\n\nCould you please split this into two separate pull requests? These are two very unrelated features and there's already a proposal for Json responses in the issues section.\n\nAlso, while not required, it'd be nice if we could avoid unrelated commits like 32b8b7e and a5eaea0 and squash commit/reverts like 4f57a32 and 49020e1.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426969", "body": "> I'm not sure how split pull request and/or get rid of unrelated commits except for branching from origin and cherry-picking them one by one, which is what I plan to do a bit later.\n\nThis is basically what you'd have to do since it's after the fact. Branch per feature is a habit that's good to get into.\n\n> Meanwhile, can you please let me know if you plan to add the Safari thing, so I don't waste time if not?\n\nFair enough. There was a little confusion on my part about what exactly you were trying to accomplish original (forums & stackoverflow), but your description here made it click. Let me review the API and code some more and I'll come back to this.\n\n> Also, I'm still not sure about the license (see last paragraph).\n\nI'll leave this for @migueldeicaza to respond to.\n\n> Also, I suppose it's better to somehow rewrite history before submitting the pull request?\n\nYes, absolutely (although it's a bit trickier if multiple people are working on the branch/feature you mean to push). A cleaner commit history is always more likely to get accepted in any open source project, as it's easier to review and adds less cruft to the project. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427071", "body": "> As for Dictionary, I later changed this to be a utility method in WebEx, so I suppose it doesn't matter (because it's still internal).\n\nAha, apologies, I was looking at an individual commit instead of the end result.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427514", "body": ">  I'm not sure how it can be implemented in Android\n\nThis will be an issue, we'll have to ensure that this functionality can be implemented across the board before we'll add it to the public API. It may be possible, but we'll have to be sure first.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18933254", "body": "@gaearon Was a little quick on the merge, can you state what license you're submitting this under?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18933254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3352624", "body": "@jonlipsky,\n\n> First, Are there any plans to add proxy support into Xamarin.Auth? I have a major customer that needs this, so I could never use the standard release of Xamarin.Auth unless I can specify a proxy and I can't figure out a way to add proxy support without customizing it.\n\nNo \"plans\", but we'll look into this.\n\n> Without \"OnPageFailed\", I can watch for that URL in \"OnPageLoading\" to know that I authenticated successfully; however when the web view fails to load that URL (after OnPageLoading get's called), a series of UIAlert's are shown.\n\nI see, the original need wasn't clear because there was already an error mechanism, but it was not being used (corrected in ad0eacf). However, in cde10c4ec, `OnPageLoaded` was changed to `OnPageEncountered` and is before the page starts loading on iOS, using this may solve your issue. We might need to make tweaks since it tells iOS it's ok to load the page, but it's a start and a better place to handle this.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3352624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7859452", "body": "There is no official Xamarin NuGet package for Xamarin.Auth.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7859452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3348184", "body": "Did you mean `\"&\" : \"?\"` ?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3348184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11861026", "body": "This needs an null argument check for `password`\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11861026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11904506", "body": "Whoops, you're right! I think I saw the one and assumed it was for `context`, even though it's in green. Sorry about that.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/11904506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "praeclarum": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411554", "body": "Sorry for the delay! Thanks for the commit.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411593", "body": "Jon, would you mind resyncing with master to update this pull request?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13411593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17376649", "body": ":-)\n\nYeah I guess I lost the train of my own reasoning. Should be easy to revert.\u00a0\n\u2014\nSent from Mailbox for iPhone\n\nOn Thu, May 2, 2013 at 10:28 PM, Eric Maupin notifications@github.com\nwrote:\n\n> ## I'm thinking this was the wrong approach after all. If you already have an `Account` object, why would you be going through the auth process again, you can just start making requests at that point. The original behavior of just clearing the cookies seems like the best idea, now that I understand the reasoning behind it.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/xamarin/Xamarin.Auth/pull/15#issuecomment-17362640\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/17376649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/2155581", "body": "This also fixes a bug on iOS 5 when the webView.Request.Url is null.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/2155581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jonlipsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13416104", "body": "Sure, no problem.  When I get to my hotel tonight (I'm on my way to Seattle right now) I'll resync.\n\nSent from my iPad\n\nOn Feb 11, 2013, at 4:16 PM, \"Frank A. Krueger\" notifications@github.com wrote:\n\n> Jon, would you mind resyncing with master to update this pull request?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13416104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823078", "body": "No, the proxy support has nothing to do with DropBox.  The proxy support is simply there because a large portion of my corporate user base is behind a proxy.\n\nOn Mar 12, 2013, at 10:04 PM, Eric Maupin notifications@github.com wrote:\n\n> Is the addition of proxy support integral to DropBox support?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14823078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14841390", "body": "Yes, I can try; however to be honest I don't use Git at all, so I'm not really sure how to do that.  (For all of my projects we still use Subversion and trying to get anything done with Git seems like speaking a foreign language.)\n\nOn Mar 12, 2013, at 10:59 PM, Eric Maupin notifications@github.com wrote:\n\n> Would you mind separating it into two clean pull requests, with corrected spacing?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14841390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3297275", "body": "Hi...  I finally wanted to switch over to the official version of Xamarin.Auth; however because these two additions weren't accepted (OnPageFailed and Proxy support) I can't switch over. \n\nFirst, Are there any plans to add proxy support into Xamarin.Auth?  I have a major customer that needs this, so I could never use the standard release of Xamarin.Auth unless I can specify a proxy and I can't figure out a way to add proxy support without customizing it.\n\nSecond, I can't find anyway to write a DropboxAuthenticator without having the support for \"OnPageFailed\" like I had added.  The reason is that when Dropbox successfully authenticates, it will redirect to a url formatted like \"db-<app id>://1/connect?oauth_token=<token>&oauth_token_secret=<secret>f&uid=<user id>\".  Obviously, this won't load in the browser; however if there was a support for OnPageFailed, then you could support OAuth authentication when it redirects to a non-web URL when successfully authenticated.\n\nWithout \"OnPageFailed\", I can watch for that URL in \"OnPageLoading\" to know that I authenticated successfully; however when the web view fails to load that URL (after OnPageLoading get's called), a series of UIAlert's are shown. \n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/3297275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3353557", "body": "Yes, I meant \"&\" and \"?\".  That's what I have in my personal copy.\n\nOn Mar 12, 2013, at 11:00 PM, Eric Maupin notifications@github.com wrote:\n\n> In src/Xamarin.Auth/OAuth1Authenticator.cs:\n> \n> > @@ -141,12 +141,15 @@ public OAuth1Authenticator (string consumerKey, string consumerSecret, Uri reque\n> >                 token = r[\"oauth_token\"];\n> >                 tokenSecret = r[\"oauth_token_secret\"];\n> > -               var url = authorizeUrl.AbsoluteUri + \"?oauth_token=\" + Uri.EscapeDataString (token);\n> > -                string paramType = authorizeUrl.AbsoluteUri.IndexOf(\"?\") >= 0 ? \"&\" : \"&\";\n> >   Did you mean \"&\" : \"?\" ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/3353557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "ErikSchierboom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13425611", "body": "You're welcome. What a great library you have made, kudos!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/13425611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ybigus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14787894", "body": "same for me...  but actually after:\nvar request = new OAuth2Request (\"GET\", new Uri (\"https://graph.facebook.com/me\"), null, eventArgs.Account);\nrequest.GetResponseAsync().ContinueWith (t => {\n    if (t.IsFaulted)\n        Console.WriteLine (\"Error: \" + t.Exception.InnerException.Message);\n    else {\n        string json = t.Result.GetResponseText();\n        Console.WriteLine (json);\n    }\n});\nyou shoud have all this data\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/14787894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gaearon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18425053", "body": "I should've used a branch for this\u2014sorry, this is my first time sending a pull request.\nI'll recreate it now.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18425053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426480", "body": "@ermau Thanks for taking a look.\n\nI'm not sure how split pull request and/or get rid of unrelated commits except for branching from origin and cherry-picking them one by one, which is what I plan to do a bit later.\n\nMeanwhile, can you please let me know if you plan to add the Safari thing, so I don't waste time if not?\nAlso, I'm still not sure about the license (see last paragraph).\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426540", "body": "Also, I suppose it's better to somehow rewrite history before submitting the PR? The code in earlier commits is very different from the later commits, and so it doesn't really make sense to include it?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426845", "body": "As for `Dictionary`, I later changed this to be a utility method in `WebEx`, so I suppose it doesn't matter (because it's still internal).\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18426845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427073", "body": "Got it, thanks.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/issues/comments/18427073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "giggio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7857880", "body": "I just pulled down the nuget for version 1.2.2.0, and this is not available yet. Any idea of when this is being published?\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/7857880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Lapinou42": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/22698189", "body": "Hello, \r\nsince you added the NoHistory flag, when the user start the custom tabs to sign in, if he closes the app (to background) then launch again, the custom tab is closed. The thing if we use authentication with phone number. So something, users switch to app Messages to see his code number then go back to the app. ", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/comments/22698189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Therzok": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812044", "body": "Style: Space before parentheses `(`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812050", "body": "Style: Space before parentheses `(`.\n", "reactions": {"url": "https://api.github.com/repos/xamarin/Xamarin.Auth/pulls/comments/18812050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}