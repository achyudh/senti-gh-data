{"_default": {"1": {"fsaintjacques": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/24", "title": "Automatic group detection is incomplete", "body": "See the [libtwiddle](https://fsaintjacques.github.io/libtwiddle/#HEAD) documentation, there should be 2 distinct group called `bitmap` and `bitmap_rle`, yet they get merged into `bitmap`. I believe the following [code](https://github.com/libgit2/docurium/blob/master/lib/docurium.rb#L366-L370) makes a bold assumption where the first word splited by `_` is the group name. \n\nWould there be a way to specify the group which a function lives in? For example, in libgit2, we can see the following [header](https://github.com/libgit2/libgit2/blob/master/include/git2/types.h#L12-L17) in most files.\n\nSome suggestions\n- Use a special comment in each function, say `@group`\n- Have the user provide a list of groups in the config file and bind a function to the longest prefix matching group in the list\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/24/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rofl0r": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/22", "title": "\"screenshot\" links in README dead", "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/22/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cirosantilli": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/17", "title": "Add callback typedefs to the API documentation.", "body": "Callback typedefs are not being put in the documentation. E.g.: https://libgit2.github.com/libgit2/#HEAD/group/diff/git_diff_blob_to_buffer uses `git_diff_file_cb`, which it defined and documented publicly at: https://github.com/libgit2/libgit2/blob/master/include/git2/diff.h#L416. It would be really helpful to have links to those callbacks to understand how to call the functions that use them. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/17/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lu-zero": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/14", "title": "Support multiple include paths", "body": "I'm evaluating docurium for Libav and seems that it doesn't support multiple include paths (ideally I'd have [\"libavcodec\", \"libavformat\", ...] and such as input.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/14/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/comments/5212444", "body": "typo template in the type attribute\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/comments/5212444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "carlosmn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/d2b8ef9affaea5f35af0f3cd79b9720774bd88c6", "message": "Remove screenshots from README\n\nSkitch either doesn't have them anymore or they're under some new\nURL. Either way, remove these broken links."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ab40a15468d955e39cdac7593f347abc9fdbbac1", "message": "Bump version to 0.5.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d9518f6453e1f880e814382d2d0b29a0fc633b63", "message": "Define DOCURIUM when parsing\n\nDefine DOCURIUM to 1 when parsing the headers to let the source code\nknow it's being run for documentation parsing and give it a chance to\nperform any workarounds they might need."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e4b1e6553f86edfaed912963476386c2e013e0ee", "message": "Don't override a user-specified LLVM_CONFIG"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8cc236d3c7bc02e75529c7a99ddd475178557340", "message": "Remove bogus split into lines inside a single comment block\n\nWe had wrongly assumed that the comment blocks inside paragraphs\ncorrespond to the different lines, but an expression such as\n\n    `<branchname>@{upstream}`\n\nmakes clang return each symbol in its own block. Adding newlines between\neach of them makes us render bad data."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0574a3d72fd9fac5fd2e892fde6f89c72ce28961", "message": "Merge pull request #23 from niess/master\n\nSome tweaks and more love for callbacks"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5990e5178d7fa89e6d35a25f58a8372e62db0e73", "message": "Bump version to 0.4.2"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5826a6cb78f605de166ac3fa176e29fa3f46440d", "message": "Don't include RCs in the version list\n\nRelease candidates have the API of the release and they're not\ninteresting for posterity anyhow."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c4a27329f4ea596a8d6218b0b395e9816fe97083", "message": "Sort the function history\n\nWe lost the sorting when we introduced concurrency in parsing the\ndifferent versions. Bring it back."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f7a9aa4c720aa1b615a6ab61de6136f204a2d4dc", "message": "Bump version to 0.4.1"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/26156c2ec241f75df5076fa9298cd748f0d85577", "message": "Wait for the data to load before rendering\n\nWhen setting the version, that can trigger an asynchronous request to\ndownload the json file. We were assuming the new data was set when the\nfunction returned, which meant on a new load, we were not rendering the\nright version, but whatever happened to be loaded before.\n\nUse a callback to render the views only once the new data has been\ndownloaded and set (or immediately if we're already in the right\nversion)."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c878f2a123bcfc9a90486970630e0892716af61a", "message": "Use the generic llvm-config for library detection"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1ae3a2def172bf6011fd1b6c9e00158052c343bf", "message": "Update underscore and backbone"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9eb147d6c3060779b42502c066221a1b2bddb3b8", "message": "Get rid of unused js"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a0143c321bb7bb94e2cf662eb7c50c6acc1e25d6", "message": "Merge branch 'callbacks'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4dd60af237ae6b21ff725a312464ef97622eaaaf", "message": "Show callbacks in the search results"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/adfbfbbc31ca46a09fb455529686ef26c3121377", "message": "Link to callbacks from the function view\n\nCallbacks don't get a history view or appear in the \"also in this\ngroup\", as they're not quite functions."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c53572a726a7567107608ad316c7c56377716196", "message": "Export the callbacks"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d8182b62bc3f9dc339c791d1edd42f20ba4e830b", "message": "Tag the callback types"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a7cb8a39ba170fd1d7e3bce002dd5d84bd2217c0", "message": "Merge pull request #18 from libgit2/vendor-css\n\nVendor the css and refer to it instead"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4cd6f71d9af292c01db4d0bdde8b8a3dbdaf84e5", "message": "Make the CSS path relative\n\nInstead of hard-coding libgit2's location, detect how deep the example\nis and use a relative path, allowing for use in different projects."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/51f60051439b87cacd26ad241ef89a809660a9b1", "message": "Merge branch 'master' into vendor-css"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/11f1191987671e4bd43943df5058536f7849f8b3", "message": "Merge pull request #20 from Therzok/master\n\nRequire redcarpet compat."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081686", "body": "They're not clearly highlighted as links, so it just looks (to me, at least) like they were wrongly rendered. So they should either be marked more clearly or the underline taken away.\n\nI never knew they were links.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081792", "body": "> Open a PR that fixes the CSS then...\n\nLazy open source developers... :p\n\n> I can't really think of a more obvious way to mark a link than to underline it. :)\n\nColours come to mind. If the colour is indistinguishable from normal text, I assume it's just underlined text, but maybe I'm just not a web person. Alternatively, leaving the link unmarked until you hover over it, and have some sort of header (which we should probably have anyway) saying that you can click on the functions to get to the documentation.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358256", "body": "Running this against current libgit2 I get an odd thing. In `lib/docurium.rb:293` it has `[\"GIT_STATUS` as one of the types which messes up with the regex.\n\nDoing an ugly hack to make it build, the javascript then fails with the same kind of error `Uncaught SyntaxError: Invalid regular expression: /[\"GIT_ATTR_CHECK /: Unterminated character class`\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358886", "body": "This seems to fix this particular issue, though I can't see the description of the functions in the namespace overview.\n\n``` diff\ndiff --git a/lib/docurium/cparser.rb b/lib/docurium/cparser.rb\nindex 7c31775..3a4f156 100644\n--- a/lib/docurium/cparser.rb\n+++ b/lib/docurium/cparser.rb\n@@ -59,7 +59,7 @@ class Docurium\n         d[:tdef] = nil\n       elsif d[:body] =~ /\\A\\#\\s*define\\s+(\\w+)/\n         names = []\n-        d[:body].scan(/\\#\\s*define\\s+(\\w+)/) { |m| names << m.to_s }\n+        d[:body].scan(/\\#\\s*define\\s+(\\w+)/) { |m| names << m[0].to_s }\n         d[:tdef] = nil\n         names.uniq!\n         if names.length == 1\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7364716", "body": "And with this patch the UI shows the comments\n\n``` diff\n\ndiff --git a/site/js/docurium.js b/site/js/docurium.js\nindex 5154f21..b5a9cbd 100644\n--- a/site/js/docurium.js\n+++ b/site/js/docurium.js\n@@ -382,7 +382,10 @@ $(function() {\n         argsText = '( ' + fdata[f]['argline'] + ' )'\n         link = $('<a>').attr('href', '#' + groupLink(gname, f)).append(f)\n         $('.content').append($('<h2>').append(link).append($('<small>').append(argsText)))\n-        $('.content').append($('<pre>').append(fdata[f]['rawComments']))\n+        description = fdata[f]['description']\n+       if(fdata[f]['comments'])\n+               description += \"\\n\\n\" + fdata[f]['comments']\n+       $('.content').append($('<pre>').append(description))\n       }\n       return false\n     },\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7364716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7552734", "body": "This is also more by empirical evidence than knowing what's going on, but we also need this fix\n\n``` diff\ndiff --git a/lib/docurium.rb b/lib/docurium.rb\nindex 592d581..a5f888b 100644\n--- a/lib/docurium.rb\n+++ b/lib/docurium.rb\n@@ -387,7 +387,7 @@ class Docurium\n\n     end\n\n-    @data[:files] << file_map.values\n+    @data[:files] << file_map.values[0]\n   end\n\n   def mkdir_temp\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7552734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17783994", "body": "Finally got this into the main branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17783994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784084", "body": "Thanks. These changes made it in as part of other fixes.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784123", "body": "FTR, this is about the top links that should point to the examples under `network/`\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30856107", "body": "Thanks, but I updated the gemspec before noticing this PR.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30856107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/34748012", "body": "Cool, I'll see if I can get time to do that and remember what I was doing.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/34748012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/61407931", "body": "The ruby ecosystem has a habit of breaking on minor changes. I'm not seeing this on my computer but that's probably because I just haven't updated the gems.\n\nI guess we'll just have to require the compat layer now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/61407931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18817135", "body": "This hardcoding seems unnecessary, since we control what gets written out and have the file at `ex/css.css`, simply `href=\"css.css\"` should be enough, no?\n\nI hear rumours that people other than libgit2 use this project, so they'd probably appreciate it if we didn't hardcode our url into it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18817135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18896112", "body": "The `api.docurium` file has a `github` field which we could use to determine whether the project is hosted on GitHub, so we could base some logic off of that, but I agree it's al going to be somewhat ugly no matter what.\n\nIf we include `{{css}}` somwhere and pass in the contents of the CSS file, it should work, even if it means larger file sizes.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18896112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/19529208", "body": "I think what I'm going to do here is calculate the relative path of the example to the css file. We know where the css file is and we know the path to the file, so we can count the slashes and put the right amount of '../' in a string to pass to mustache.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/19529208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "niess": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/1bfdc4d7d55342bd76e02c0022a21f13c8e76cc1", "message": "Corrected a bug resulting in function's group not being displayed."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4a4d1e9edf2e0f1d70c6cc0165210b38d7749850", "message": "Patching a regexp bug.\n\nExact matching of `returned by/argument in` is now allowed."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/04a516bf64b26b93fa8b75aec736254ed68a221e", "message": "Some cosmetic tunnings.\n\nAlso link doesn't show the current function anymore.\nAdded commas separator and dot for the list of links to Argument in/returned by, in structures."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1810453499a87262faa07b153d33dec094edd67b", "message": "Added a callback entry to the sidebar.\n\nCallbacks appear in the `Types` menu. In addition if a type is missing, e.g. opaques structures, the corresponding sub-menu doesnt appear anymore."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/773fdd377dc0aea5e1168b1d25faadbd2c0ee274", "message": "Added callbacks to the struct usage info.\n\nCallbacks as well as functions are now shown in the stats of a structure usage."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1457e6e962408172748083d8b6d39ffa66c19276", "message": "Force string encoding to UTF-8.\n\nThis prevents a crash when symbols, e.g. &alpha; are encoded using .to_json."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Therzok": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/03e66b1d8d712002d211e091a6ee7fc23882028b", "message": "Possible extra line in README."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tiennou": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/26", "title": "Quality of life tweaks", "body": "This is a collection of fixes + features I got while learning how it works.\r\n\r\n9f038b0 is the main one. It fixes the rendering mess of bulleted [structs comments](https://libgit2.github.com/libgit2/#HEAD/type/git_repository_init_options).\r\n\r\nb3a09b3 adds a `cm doc --for=$version` option so you're not forced to build *all* versions each time (which is nice :wink:).\r\n\r\n22b9c5c is a style change that makes struct members render like function parameters descriptions. It can be dropped. I was just looking at how the HTML worked.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vmg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081629", "body": "...They are linked to the actual API documentation for that function. What's wrong with that? :p\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081693", "body": "Open a PR that fixes the CSS then... I can't really think of a more obvious way to mark a link than to underline it. :)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081806", "body": "/cc @schacon on this.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "cholin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/5381231", "body": "in ruby1.9 there is no `each` method for strings. instead you have to use `each_line` now.\nYou have to change  `block[:comments].each` to `block[:comments].each_line` in [lib/docorium.rb](https://github.com/schacon/docurium/blob/master/lib/docurium.rb#L420)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/5381231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "arrbee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6413324", "body": "@tanoku Take a look if you get a moment.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6413324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6415961", "body": "Man, the diff on docurium.rb is incredibly annoying - a bunch of spurious matches for \"end\" lines in the middle of the function breaks up the function definitions in a painful manner.\n\nIt might help to review this if I gave a little summary of the differences...\n\nI started out just making small changes to the existing version, but ultimately I found that analyzing the headers line-by-line was inconvenient and required me to carry around a lot more state as I went from one line to the next. Instead, I decided to split the file on `/**` comment beginnings, with the idea that there would generally be a `/**` comment block followed immediately by something that was being documented. Then I just needed to write code to figure out what that something was.\n\nSo the `parse_header` method does that - it splits the file on `/**` and then assumes that each chunk will be: `/** header content */ <thing to be documented>; <irrelevant other stuff>;` through the end of the file. It keeps track of which line of the file you're on (which is a little trickier with this method - hence the use of `x.scan(\"\\n\").length` in various places) and it has some minor fix ups to deal with inline `/**< blah */` or even `/** blah */` comments that occur on individual lines inside an enum or a struct.\n\nAfter `parse_header` has found a `[ comment, body ]` pair, it passes the record off to a series of recognizer functions that try to interpret the body content. Actually, it creates a `Docurium::CParser` object and calls the `parse_declaration_block` method which dispatches to the various `detect_<xyz>` methods in series.\n\nOnce one detect method successfully identifies the body content, the whole record is passed to a parser function that pulls apart the body and, if necessary, the block comment contents, in order to completely describe the item. These are the various `parse_<type>` methods of the CParser object. `parse_header` proceeds pair by pair through the file generating a list of records describing the things it finds.\n\nFinally, the whole record list is passed off to the new `update_globals` function which takes each record and extracts the data into the specific format that docurium expects. I wrote the parser and record generator somewhat independently of what docurium expects; this function translates the parsed data into the existing structures for backwards compatibility.\n\nAnyhow, hopefully that will act as a bit of a guide to understanding what's going on. My Ruby coding is a little rusty, so feel free to pick things apart and make me fix it up.\n\nProbably the `parse_header` function should be moved into the `Docurium::CParser` object at some point, since it really doesn't make sense to use the CParser without it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6415961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/9382191", "body": "Heya, @carlosmn! Let's get this stuff merged. If I merge this, do you want to open another PR from your branch with the bug fixes?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/9382191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315620", "body": "Automated post :unamused: one of > 50 made programmatically by user at the same time.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316299", "body": "> Yikes, that's no fun. Can I help triage them?\n\nThis response does not make sense. You made the automated posts across many different repositories at GitHub. I made this note so the other owners of this repository would understand why the details of the issue you opened appear to have no actual knowledge of this project.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "tmc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24352093", "body": "This project moved to only building to a branch but didn't update documentation or code or default generated config.\nChange your 'output' to 'branch' and 'cm doc' will put commit new docs on that branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24352093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "noname22": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24353038", "body": "How... inconvenient. We have a separate repository for the web page, so generating the documentation to a branch of the library repo doesn't really make much sense. Not too hard to work around the issue though.\n\nThanks for helping out!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24353038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bf4": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315763", "body": "Yikes, that's no fun.  Can I help triage them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316115", "body": "Wait, I only created one in this org.  https://github.com/bf4/gemproject/commit/7182872217af47c8aefa5c3b7e0ef7e07c415b76#diff-ec1fb48b6d52b84c9fd5ed9ad06326beR2395  \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316941", "body": "@arrbee You are correct. I had thought, from what you wrote, that I made a lot of issues for the org.  I posted too soon.  \n\nI since checked which issues I created and confirmed it was only one for you.  As you can imagine, I don't want to annoy people.  There's a fine line between explaining where the PR comes from and actually saying automated.  People respond a lot more nicely if I don't explicitly say I generated the issue from the command-line.  In any case, I follow up on every issue I create.  I'm more of a cyborg.\n\nAnyhow, I'll make a PR now, if you'd like that.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30420766", "body": "bump :smile: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30420766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865785", "body": "It's the thought that counts :) \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865821", "body": "Great, thanks! :rainbow: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jameswalmsley": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/44633815", "body": "I did fork docurium a long time a go (when it seemed like the project was no longer active) to add such a feature. Now I've seen that docurium is active again I shall back-port my features to it and make a pull-request.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/44633815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "schacon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18861630", "body": "Hm, yeah, I'm sure there's a good way to do this, I'm just a little rusty on how this library works exactly. The main issue is that there are example files in both `ex/file` and `ex/network/file` so relative links don't work without more magic. I have to make them absolute. but that means that I have to hardcode the `libgit2` in there I believe (like `/libgit2/ex/css.css`). So stupid.\n\nIt may actually be easier to just slap the css itself into this template file rather than linking it. Not super efficient, but it's simpler and bulletproof.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18861630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}