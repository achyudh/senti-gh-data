{"_default": {"1": {"egor-agafonov": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3367", "title": "windows 10, vs 2017: error C2220: warning treated as error - no 'object' file generated", "body": "Hi, I followed installation instructions from CMakeLists.txt:\r\n- installed GFLAGS, SNAPPY, LZ4 and ZLIB\r\n- edited file thirdparty.inc accordingly \r\ncmake -G \"Visual Studio 15 Win64\" -DWITH_GFLAGS=1 -DWITH_SNAPPY=1 -DWITH_LZ4=1 -DWITH_ZLIB=1 ..\r\nmsbuild rocksdb.sln /p:Configuration=Release\r\nGot problem: \r\n....\\util\\compression.h(61): error C2220: warning treated as error - no 'object' file generated [...\\build\\rocksdb.vcxproj]\r\n\r\nCan anybody help me please?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lwjyqjykn": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3355", "title": "RocksDB do not well in parallel with write/read and close", "body": "We use rocksdbjni for write/read and close in parallel, then coredump, follow are the coredump infos, is anyone meet this problem, how do you solve it.\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007fedcc553cd, pid=4904, tid=4416\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n C  [librocksdbjni6164768070392737012.dll+0x2f53cd]  rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const & __ptr64>::KeyIsAfterNode+0x7d\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007fedcf9b1ea, pid=5284, tid=5112\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni1393172717064025021.dll+0x2fb1ea]  rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const & __ptr64>::Insert<0>+0xb4a\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007feeb70da64, pid=5728, tid=3372\r\n\r\n JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni4086279910858052465.dll+0x4fda64]  rocksdb::MemTable::Add+0x374\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n\r\n\r\n```\r\n A fatal error has been detected by the Java Runtime Environment:\r\n\r\n  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x000007feeb60aa38, pid=5976, tid=4400\r\n\r\n Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode windows-amd64 compressed oops)\r\n Problematic frame:\r\n C  [librocksdbjni3909728769303213122.dll+0x3faa38]  std::unique_ptr<rocksdb::ColumnFamilySet,std::default_delete<rocksdb::ColumnFamilySet> >::get+0x28\r\n\r\n Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n\r\n If you would like to submit a bug report, please visit:\r\n   http://bugreport.java.com/bugreport/crash.jsp\r\n The crash happened outside the Java Virtual Machine in native code.\r\n See problematic frame for where to report the bug.\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3320", "title": "OS is corrput for stoping rocksdb when compaction", "body": "We do a massive of read-modify-write with rokcsdbjava, after serveral hours, invoke another thread to stop the rocksdb instance without stoping read-modify-write progress, then OS is corrput. And there is a disk full of writing, we cann't do anything in this server for serveral hours. We check rocksdb LOG, only discover \"Shutdown: canceling all background work\", then some compaction log infos, but we don't find \"Shutdown complete\" info, is it means rocksdb doesn't stop successfully, and if this will trigger brush write and OS corrupt.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sagar0": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3347", "title": "Test failures on PowerPC arch", "body": "@adamretter alerted us that `make check` is failing on PPC64le (powerpc 64-bit little-endian) architecture on RocksDB master HEAD. On investigating further, I noticed a couple of tests have been failing since RocksDB 5.7 release. \r\nThe two specific tests that are failing are: \r\n- FullBloomTest.FullVaryingLengths\r\n- DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n\r\nI narrowed the issue down to be due to ccf5f08f882038e8b481fafa0a0c0b1a04f6a390 introduced in #2579 . The tests work without this commit and fail with this commit included. \r\n\r\n### Steps to reproduce the behavior\r\nEither\r\n`make check`\r\nOR\r\n```\r\nmake bloom_test db_properties_test\r\nTMP_DIR=/dev/shm ./bloom_test --gtest_filter=FullBloomTest.FullVaryingLengths\r\nTMP_DIR=/dev/shm ./db_properties_test --gtest_filter=DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n```\r\nHere's the output:\r\n\r\n```\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ make bloom_test db_properties_test -j8\r\n...\r\n...\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ TMP_DIR=/dev/shm ./bloom_test --gtest_filter=FullBloomTest.FullVaryingLengths\r\nNote: Google Test filter = FullBloomTest.FullVaryingLengths\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from FullBloomTest\r\n[ RUN      ] FullBloomTest.FullVaryingLengths\r\nFalse positives:  0.00% @ length =      1 ; bytes =    133\r\nFalse positives:  0.00% @ length =      2 ; bytes =    133\r\nFalse positives:  0.00% @ length =      3 ; bytes =    133\r\nFalse positives:  0.00% @ length =      4 ; bytes =    133\r\nFalse positives:  0.00% @ length =      5 ; bytes =    133\r\nFalse positives:  0.00% @ length =      6 ; bytes =    133\r\nFalse positives:  0.00% @ length =      7 ; bytes =    133\r\nFalse positives:  0.00% @ length =      8 ; bytes =    133\r\nFalse positives:  0.00% @ length =      9 ; bytes =    133\r\nFalse positives:  0.00% @ length =     10 ; bytes =    133\r\nFalse positives:  0.00% @ length =     20 ; bytes =    133\r\nFalse positives:  0.00% @ length =     30 ; bytes =    133\r\nFalse positives:  0.02% @ length =     40 ; bytes =    133\r\nFalse positives:  0.04% @ length =     50 ; bytes =    133\r\nFalse positives:  0.15% @ length =     60 ; bytes =    133\r\nFalse positives:  0.27% @ length =     70 ; bytes =    133\r\nFalse positives:  0.59% @ length =     80 ; bytes =    133\r\nFalse positives:  0.83% @ length =     90 ; bytes =    133\r\nFalse positives:  1.17% @ length =    100 ; bytes =    133\r\nutil/bloom_test.cc:287: Failure\r\nExpected: (FilterSize()) <= ((size_t)((length * 10 / 8) + 128 + 5)), actual: 389 vs 383\r\n200\r\n[  FAILED  ] FullBloomTest.FullVaryingLengths (8 ms)\r\n[----------] 1 test from FullBloomTest (8 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test case ran. (8 ms total)\r\n[  PASSED  ] 0 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] FullBloomTest.FullVaryingLengths\r\n\r\n 1 FAILED TEST\r\n\r\n\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ TMP_DIR=/dev/shm ./db_properties_test --gtest_filter=DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\nNote: Google Test filter = DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from DBPropertiesTest\r\n[ RUN      ] DBPropertiesTest.AggregatedTablePropertiesAtLevel\r\ndb/db_properties_test.cc:200: Failure\r\nExpected: (static_cast<double>(dbl_a - dbl_b) / (dbl_a + dbl_b)) < (bias), actual: 0.599198 vs 0.5\r\n...\r\n```\r\n\r\nArch and OS details on the machine I have access to shows:\r\n```\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ uname -a\r\nLinux hortonworks-2 4.4.0-101-generic #124-Ubuntu SMP Fri Nov 10 18:29:11 UTC 2017 ppc64le ppc64le ppc64le GNU/Linux\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$\r\nubuntu@hortonworks-2:/tmp/rdb/rocksdb$ cat /proc/cpuinfo\r\nprocessor       : 0\r\ncpu             : POWER8E (raw), altivec supported\r\nclock           : 3425.000000MHz\r\nrevision        : 2.1 (pvr 004b 0201)\r\n...\r\ntimebase        : 512000000\r\nplatform        : pSeries\r\nmodel           : IBM pSeries (emulated by qemu)\r\nmachine         : CHRP IBM pSeries (emulated by qemu)\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/68829ed89cec64186557dc0860fc693c118ff1c6", "message": "Revert Snappy version upgrade\n\nSummary:\nJava static builds are again broken, this time due Snappy version upgrade introduced in 90c1d81975a03b0f8b352ddc614fbc99c2496ddd (#3331).\n\nThis is due to two reasons:\n1. The new Snappy packages should now be downloaded from https://github.com/google/snappy/archive/<pkg.tar.gz> instead of https://github.com/google/snappy/releases/download/<pkg.tar.gz> which we are using now.\n1. In addition to the the above URL change, Snappy changed its build from using autotools to CMake based : https://github.com/google/snappy/blame/e69d9f880677f2aa3488c80b953ec4309f0dfa2e/README.md#L65-L72\n\nSo more changes are needed if we are going to upgrade to 1.1.7. Hence reverting the version upgrade until we figure them out.\nCloses https://github.com/facebook/rocksdb/pull/3363\n\nDifferential Revision: D6716983\n\nPulled By: sagar0\n\nfbshipit-source-id: f451a1bc5eb0bb090f4da07bc3e5ba72cf89aefa"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/e446d14093283f5eec4057901a08669cad46865c", "message": "Fix PowerPC dynamic java build\n\nSummary:\nJava build on PPC64le has been broken since a few months, due to #2716. Fixing it with the least amount of changes.\n(We should cleanup a little around this code when time permits).\n\nThis should fix the build failures seen in http://140.211.168.68:8080/job/Rocksdb/ .\nCloses https://github.com/facebook/rocksdb/pull/3359\n\nDifferential Revision: D6712938\n\nPulled By: sagar0\n\nfbshipit-source-id: 3046e8f072180693de2af4762934ec1ace309ca4"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/677f249d6d388780658a79732545b77a276f8e07", "message": "Fix Travis build failures in CMake RocksJava\n\nSummary:\nFixed RocksJava travis build failure due to a missing file in java/CMakeLists.txt. (from #3332).\nCloses https://github.com/facebook/rocksdb/pull/3344\n\nDifferential Revision: D6686472\n\nPulled By: sagar0\n\nfbshipit-source-id: dd3281dff1342c3a7235c402890420aa56db0fe3"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3282", "title": "Improve performance of long range scans with readahead", "body": "This change improves the performance of iterators doing long range scans (e.g. big/full table scans in MyRocks) by using readahead and prefetching additional data on each disk IO. This prefetching is automatically enabled on noticing more than 2 IOs for the same table file during iteration. The readahead size starts with 8KB and is exponentially increased on each additional sequential IO, up to a max of 16 MB. This helps in cutting down the number of IOs needed to complete the range scan. \r\n\r\nThe prefetched data is stored by the OS in page cache. So this currently works only for non direct-reads use-cases i.e applications which use page cache. \r\n\r\nThanks to @siying for the original idea and implementation.\r\n\r\n**Benchmarks:**\r\nData fill:\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=fillrandom -num=1000000000 -compression_type=\"none\" -level_compaction_dynamic_level_bytes\r\n```\r\nDo a long range scan: Seekrandom with large number of nexts\r\n```\r\nTEST_TMPDIR=/data/users/$USER/benchmarks/iter ./db_bench -benchmarks=seekrandom -duration=60 -num=1000000000 -use_existing_db -seek_nexts=10000 -statistics -histogram\r\n```\r\n\r\nPage cache was cleared before each experiment with the command:\r\n```\r\nsudo sh -c \"echo 3 > /proc/sys/vm/drop_caches\"\r\n```\r\n```\r\nBefore:\r\nseekrandom   :   34020.945 micros/op 29 ops/sec;   32.5 MB/s (1636 of 1999 found)\r\nWith this change:\r\nseekrandom   :    9611.361 micros/op 104 ops/sec;  115.1 MB/s (5702 of 6999 found)\r\n```\r\n~3.5X performance improvement.\r\n\r\nAlso verified with strace and gdb that the readahead size is increasing as expected. \r\n```\r\nstrace -e readahead -f -T -t -p <db_bench process pid>\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "javeme": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3336", "title": "support StringAppendOperator(delim_char) constructor in java-api", "body": "### Expected behavior\r\nwe should support `new StringAppendOperator(delim_char)` constructor in java-api, which is already supported in [c++ implementation](https://github.com/facebook/rocksdb/blob/72502cf2270db7323d447cc7a504dbea251d432a/utilities/merge_operators/string_append/stringappend.cc#L19).\r\n\r\n### Actual behavior\r\nwe can only use [`new StringAppendOperator()`](https://github.com/facebook/rocksdb/blob/3c327ac2d0fd50bbd82fe1f1af5de909dad769e6/java/src/main/java/org/rocksdb/StringAppendOperator.java#L14) constructor without parameter.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3337", "title": "Support StringAppendOperator(delimiter_char) constructor in java-api", "body": "Fixes #3336", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xiaoweizw": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3326", "title": "rocksdbjni coredump at rocksdb::WriteThread::EnterAsBatchGroupLeader()", "body": "we have used rocksdbjni, but when process batch write, generator coredump due to abort signal. \r\nHas anyone meet this problem and how should this problem be solved? Thank you very much.\r\ncoredump detail information:\r\nProgram terminated with signal 6, Aborted.\r\n(gdb) bt\r\n#0  0x00002b17cbbf8625 in raise () from /lib64/libc.so.6\r\n#1  0x00002b17cbbf9e05 in abort () from /lib64/libc.so.6\r\n#2  0x00002b17cc8810b5 in os::abort(bool) ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#3  0x00002b17cca23443 in VMError::report_and_die() ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#4  0x00002b17cc8865bf in JVM_handle_linux_signal ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#5  0x00002b17cc87cb03 in signalHandler(int, siginfo*, void*) ()\r\n   from /usr/java/jdk1.8.0_121/jre/lib/amd64/server/libjvm.so\r\n#6  <signal handler called>\r\n#7  0x00002b1806881a95 in rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::Writer**, rocksdb::autovector<rocksdb::WriteThread::Writer*, 8ul>*) ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n#8  0x00002b18067de00f in rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool) ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n#9  0x00002b18067df9eb in rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*) () from /tmp/librocksdbjni6424814419910142735.so\r\n#10 0x00002b1806758a3f in Java_org_rocksdb_RocksDB_write0 ()\r\n   from /tmp/librocksdbjni6424814419910142735.so\r\n \r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wolfkdy": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3318", "title": "MemoryLeak&Potential Deadlock", "body": "https://github.com/facebook/rocksdb/blob/b5c99cc908a7e34fa65d588b2706c33000786935/utilities/transactions/pessimistic_transaction_db.cc#L115\r\n\r\nIt should be wrapped by a unique_ptr<>\r\nDestructor is not called, so potential row-lock ( or key-lock\uff09may be leaked", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gcsideal": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3315", "title": "PPC 64 bit BigEndian ASM compilation fault", "body": "### Expected behavior\r\nSuccessful compilation on ppc64 as happened with the 5.8.8 version.\r\n\r\n### Actual behavior\r\nAs of RocksDB 5.9.2 and with the previously used GCC 7.2 compilation fails with:\r\n  CC       util/crc32c_ppc_asm.o\r\nutil/crc32c_ppc_asm.S: Assembler messages:\r\nutil/crc32c_ppc_asm.S:109: Error: invalid operands (*UND* and *ABS* sections) for `&'\r\nutil/crc32c_ppc_asm.S:109: Error: invalid operands (*UND* and *ABS* sections) for `&'\r\n[...]\r\nutil/crc32c_ppc_asm.S:88: Error: unsupported relocation against v20\r\nutil/crc32c_ppc_asm.S:89: Error: unsupported relocation against v21\r\n[...]\r\nutil/crc32c_ppc_asm.S:745: Error: unsupported relocation against v20\r\nMakefile:1812: recipe for target 'util/crc32c_ppc_asm.o' failed\r\n\r\n### Steps to reproduce the behavior\r\nTry to compile on a ppc64 machine.\r\nFull build log: https://buildd.debian.org/status/fetch.php?pkg=rocksdb&arch=ppc64&ver=5.9.2-1&stamp=1514504777&raw=0", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kl3eo": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3314", "title": "Slowdown in read after ~ 15 million records in DB", "body": "The manner we did the test is following: writing 1 mln. (key:value) pairs (time checked) - each key is bigint, value is ~200bytes, - then reading them back to csv format (time checked). Then adding other 1 million records, reading 2 million records, etc. The fact is until we reached 15 million records, the time necessary for reading grew proportionally with the growing of the number of records to read. After that, there was a serious non-linearity, so the time grew much more with the number of millions of records to read. I would not be much surprised if the linearity stopped at 100 mln. records, but 10-15 million seems rather low. Am I missing something important in setup, or this is normal and well-known behaviour of RocksDb?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "publicocean0": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3311", "title": "error compiling last roskdb source in ubuntu ", "body": "\r\n\r\n\r\n\r\n### Actual behavior\r\n```\r\nIn file included from /usr/include/c++/6/memory:81:0,\r\n                 from ./java/./rocksjni/comparatorjnicallback.h:13,\r\n                 from java/rocksjni/comparatorjnicallback.cc:9:\r\n/usr/include/c++/6/bits/unique_ptr.h: In instantiation of \u2018void std::unique_ptr<_Tp [], _Dp>::reset(_Up) [with _Up = char*; <template-parameter-2-2> = void; _Tp = const char; _Dp = std::default_delete<const char []>]\u2019:\r\n/usr/include/c++/6/bits/unique_ptr.h:539:9:   required from \u2018typename std::enable_if<std::__and_<std::__and_<std::is_array<_Up>, std::is_same<typename std::unique_ptr<_Tp [], _Dp>::_Pointer::type, _Tp*>, std::is_same<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Up, _Ep>::element_type*>, std::is_convertible<typename std::unique_ptr<_Up, _Ep>::element_type (*)[], _Tp (*)[]>, std::__or_<std::__and_<std::is_reference<_Dp>, std::is_same<_T2, _U2> >, std::__and_<std::__not_<std::is_reference<_Dp> >, std::is_convertible<_Ep, _Dp> > > >, std::is_assignable<_T2&, _U2&&> >::value, std::unique_ptr<_Tp [], _Dp>&>::type std::unique_ptr<_Tp [], _Dp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Up = char []; _Ep = std::default_delete<char []>; _Tp = const char; _Dp = std::default_delete<const char []>; typename std::enable_if<std::__and_<std::__and_<std::is_array<_Up>, std::is_same<typename std::unique_ptr<_Tp [], _Dp>::_Pointer::type, _Tp*>, std::is_same<typename std::unique_ptr<_Up, _Ep>::pointer, typename std::unique_ptr<_Up, _Ep>::element_type*>, std::is_convertible<typename std::unique_ptr<_Up, _Ep>::element_type (*)[], _Tp (*)[]>, std::__or_<std::__and_<std::is_reference<_Dp>, std::is_same<_T2, _U2> >, std::__and_<std::__not_<std::is_reference<_Dp> >, std::is_convertible<_Ep, _Dp> > > >, std::is_assignable<_T2&, _U2&&> >::value, std::unique_ptr<_Tp [], _Dp>&>::type = std::unique_ptr<const char []>&]\u2019\r\njava/rocksjni/comparatorjnicallback.cc:34:21:   required from here\r\n/usr/include/c++/6/bits/unique_ptr.h:614:6: error: no matching function for call to \u2018swap(const char*&, char*&)\u2019\r\n  swap(std::get<0>(_M_t), __p);\r\n\r\n```\r\n### Steps to reproduce the behavior\r\nmake -j8 rocksdbjava\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3369", "title": "JNI transactions  is working.", "body": "hi, \r\nI merged and fixed compilation problems for extending transations in JNI starting from adamretter code. Actually it seams to work correctly ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zengqingfu1442": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3310", "title": "LZ4 not supported or corrupted LZ4 compressed block contents", "body": "The lz4 compression can't work in my rocksbd now.\r\n[dzeng@dzeng rocksdb-33efdde8316759f1efc6a2a228c5efcf01f09cbc]$ ./db_sanity_test /mnt/sfx-card-root/dfs/dn/disk/rocksdb573/ create\r\nCreating...\r\nBasic -- OK\r\nSpecialComparator -- OK\r\nZlibCompression -- OK\r\nZlibCompressionVersion2 -- OK\r\nLZ4Compression -- Corruption: LZ4 not supported or corrupted LZ4 compressed block contents\r\nFAIL\r\nLZ4HCCompression -- Corruption: LZ4HC not supported or corrupted LZ4HC compressed block contents\r\nFAIL\r\nZSTDCompression -- OK\r\nCSSZlibCompression -- mypid = 7029, dev_name = /dev/sfx0, dev_num = 0\r\nOK\r\nCSSZlibCompressionVersion2 -- OK\r\nPlainTable -- OK\r\nBloomFilter -- OK\r\nThe sst file of lz4 can't be generated under LZ4Compression dir.\r\nFrom the LOG under LZ4Compression, I can see such error:\r\n 2017/12/27-17:29:08.114337 7fa3c1ccfa00 [db/version_set.cc:2969] Recovered from manifest file:/mnt/sfx-card-root/dfs/dn/disk/rocksdb573/LZ4Compression/MANIFEST-000001 succeeded,manifest_file_number is 1, next_file_number is 3, last_sequence is 0, log_number is 0,prev_log_number is 0,max_column_family is 0\r\n 2017/12/27-17:29:08.114344 7fa3c1ccfa00 [db/version_set.cc:2977] Column family [default] (ID 0), log number is 0\r\n 2017/12/27-17:29:08.115443 7fa3c1ccfa00 [db/db_impl_open.cc:1111] DB pointer 0x220adb0\r\n 2017/12/27-17:29:13.279864 7fa3c1ccfa00 [db/db_impl_write.cc:1128] [default] New memtable created with log file: #6. Immutable memtables: 0.\r\n 2017/12/27-17:29:13.279921 7fa3b5ef5700 [db/db_impl_compaction_flush.cc:50] [JOB 2] Syncing log #3\r\n 2017/12/27-17:29:13.304067 7fa3b5ef5700 (Original Log Time 2017/12/27-17:29:13.279910) [db/db_impl_compaction_flush.cc:1216] Calling FlushMemTableToOutputFile with column family [default], flush slots available 1, compaction slots available 1, flush slots scheduled 1, compaction slots scheduled 0\r\n 2017/12/27-17:29:13.304075 7fa3b5ef5700 [db/flush_job.cc:264] [default] [JOB 2] Flushing memtable with next log file: 6\r\n 2017/12/27-17:29:13.304106 7fa3b5ef5700 EVENT_LOG_v1 {\"time_micros\": 1514366953304093, \"job\": 2, \"event\": \"flush_started\", \"num_memtables\": 1, \"num_entries\": 1000000, \"num_deletes\": 0, \"memory_usage\": 42651544}\r\n 2017/12/27-17:29:13.304113 7fa3b5ef5700 [db/flush_job.cc:293] [default] [JOB 2] Level-0 flush table #7: started\r\n 2017/12/27-17:29:13.702675 7fa3b5ef5700 [db/flush_job.cc:324] [default] [JOB 2] Level-0 flush table #7: 13976059 bytes Corruption: LZ4 not supported or corrupted LZ4 compressed block contents\r\n**2017/12/27-17:29:13.702897 7fa3b5ef5700 [ERROR] [db/db_impl_compaction_flush.cc:1255] Waiting after background flush error: Corruption: LZ4 not supported or corrupted LZ4 compressed block contentsAccumulated background error counts: 1**\r\n2017/12/27-17:29:13.702903 7fa3b5ef5700 (Original Log Time 2017/12/27-17:29:13.702885) EVENT_LOG_v1 {\"time_micros\": 1514366953702877, \"job\": 2, \"event\": \"flush_finished\", \"lsm_state\": [0, 0, 0, 0, 0, 0, 0], \"immutable_memtables\": 1}\r\n2017/12/27-17:29:13.702934 7fa3c1ccfa00 [db/db_impl.cc:222] Shutdown: canceling all background work\r\n2017/12/27-17:29:14.705500 7fa3c1ccfa00 [db/db_impl.cc:348] Shutdown complete\r\n\r\n\r\nBut I can scan the key-values of lz4 by ldb tool.\r\n[dzeng@dzeng rocksdb-33efdde8316759f1efc6a2a228c5efcf01f09cbc]$ ./ldb --db=/mnt/sfx-card-root/dfs/dn/disk/rocksdb573/LZ4Compression scan | less\r\nkey0 : value0\r\nkey1 : value1\r\nkey10 : value10\r\nkey100 : value100\r\nkey1000 : value1000\r\nkey10000 : value10000\r\nkey100000 : value100000\r\n..\r\n...", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3306", "title": "How to understand the compaction levels?", "body": "How to understand the compaction levels?https://github.com/facebook/rocksdb/wiki/Leveled-Compaction\r\nIf level_compaction_dynamic_level_bytes=false\r\nFor example, if max_bytes_for_level_base = 123456, max_bytes_for_level_multiplier = 10 and max_bytes_for_level_multiplier_additional is not set, then size of L1, L2, L3 and L4 will be 16384, 163840, 1638400, and 16384000, respectively.\r\n\r\nBut L1's target will be max_bytes_for_level_base. And then Target_Size(Ln+1) = Target_Size(Ln) * max_bytes_for_level_multiplier * max_bytes_for_level_multiplier_additional[n]. max_bytes_for_level_multiplier_additional is by default all 1.\r\n\r\nWhy is the size of L1 not 123456?\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sjmind": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3307", "title": "UnsatisfiedLinkError when RocksDB.loadLibrary()", "body": "```\r\npackage a;\r\n\r\nimport org.rocksdb.RocksDB;\r\n\r\n/**\r\n * @author z72069\r\n */\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        RocksDB.loadLibrary();\r\n    }\r\n}\r\n```\r\n\r\n```\r\nException in thread \"main\" java.lang.UnsatisfiedLinkError: C:\\Users\\z72069\\AppData\\Local\\Temp\\librocksdbjni1453993472684985674.dll: P\u52cb\u0002\r\n\tat java.lang.ClassLoader$NativeLibrary.load(Native Method)\r\n\tat java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941)\r\n\tat java.lang.ClassLoader.loadLibrary(ClassLoader.java:1824)\r\n\tat java.lang.Runtime.load0(Runtime.java:809)\r\n\tat java.lang.System.load(System.java:1086)\r\n\tat org.rocksdb.NativeLibraryLoader.loadLibraryFromJar(NativeLibraryLoader.java:78)\r\n\tat org.rocksdb.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:56)\r\n\tat org.rocksdb.RocksDB.loadLibrary(RocksDB.java:64)\r\n\tat org.rocksdb.RocksDB.<clinit>(RocksDB.java:35)\r\n\tat a.Main.main(Main.java:20)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n```\r\n\r\nIt's different from #1715 , VC Redist 2015 x64 had been installed.\r\n![ss171225](https://user-images.githubusercontent.com/11039107/34337771-4b893634-e99d-11e7-89f4-6ca7d72eee78.png)\r\n\r\nVersion 5.5.1, 5.7.3, 5.8.6 have the problem. Version 5.0.1 is ok.\r\n\r\nOS: Windows 7(6.1.7601)\r\nJDK: jdk7u80, jdk8u121\r\nVC redist 2015 x64, VC redist 2008, .Net Framework 4.0,4.5 installed.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zilti": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3305", "title": "Making it work for those poor NetBSD users out there: max_align_t", "body": "Hi! This is mostly a heads-up. I tried to compile it on NetBSD and stumbled over `max_align_t`. used in util/arena.h. The solution is to add this to the util/arena.h file:\r\n\r\n```c\r\n/* Some platforms lack max_align_t.  The check for _GCC_MAX_ALIGN_T is\r\n   a hack in case the configure-time test was done with g++ even though\r\n   we are currently compiling with gcc.  */\r\n#if ! (0 || defined _GCC_MAX_ALIGN_T)\r\n/* On the x86, the maximum storage alignment of double, long, etc. is 4,\r\n   but GCC's C11 ABI for x86 says that max_align_t has an alignment of 8,\r\n   and the C11 standard allows this.  Work around this problem by\r\n   using __alignof__ (which returns 8 for double) rather than _Alignof\r\n   (which returns 4), and align each union member accordingly.  */\r\n# ifdef __GNUC__\r\n#  define _GL_STDDEF_ALIGNAS(type) \\\r\n     __attribute__ ((__aligned__ (__alignof__ (type))))\r\n# else\r\n#  define _GL_STDDEF_ALIGNAS(type) /* */\r\n# endif\r\ntypedef union\r\n{\r\n  char *__p _GL_STDDEF_ALIGNAS (char *);\r\n  double __d _GL_STDDEF_ALIGNAS (double);\r\n  long double __ld _GL_STDDEF_ALIGNAS (long double);\r\n  long int __i _GL_STDDEF_ALIGNAS (long int);\r\n} max_align_t;\r\n#endif\r\n```\r\n\r\nsomewhere before the reference to `max_align_t`. Feel free to copy this snippet into your code and use it under your license; no need to mention me anywhere. I don't claim any rights on it.", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhangjinpeng1987": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3291", "title": "calculate scores failed", "body": "When i set level_compaction_dynamic_level_bytes on for an existed DB, and then turn off it again, this will cause calculating scores failed. Look at the statistics in log, the scores for L3 L4 L5 are inf.\r\n```\r\n** Compaction Stats [write] **\r\nLevel    Files   Size     Score \r\n----------------------------\r\n  L0      3/0    6.92 MB   0.8   \r\n  L1     65/0   510.06 MB   1.0 \r\n  L2     98/0   509.38 MB   inf  \r\n  L3    695/0    4.89 GB   inf      \r\n  L4   6727/0   49.07 GB   inf    \r\n  L5  12541/0   57.89 GB   inf    \r\n  L6    224/0   804.98 MB   0.0     \r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3139", "title": "expose SstFileReader", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3068", "title": "support set global seqno for external file", "body": "Before ingesting external file, we usually need to verify the checksum of the external file to guarantee the file is not corrupted. \r\nWhen ingesting fail before version change has been added to MANIFEST, but after global_seqno has been set with `move_files = true and allow_global_seqno = true` mode(actually use hard link instead of move), if we restart the ingesting process, checksum verify will fail because of the global_seqno has been changed. So we need to reset the global sequence number to zero before verify.\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anuscool": {"issues": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/3287", "title": "librocksdb.a error", "body": "librocksdb.a(db_impl.o): relocation R_X86_64_32S against `_ZTVN7rocksdb12SnapshotImplE' can not be used when making a shared object; recompile with -fPIC\r\n[INFO] /home/anupam/Arm_Project/project_oss/old_rocksdb/librocksdb.a: error adding symbols: Bad value\r\n\r\ncan any one help me to resolve this issue?", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/3287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ajkr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/46e599fc6b47e47c1a988189114085c2b13ab49e", "message": "fix live WALs purged while file deletions disabled\n\nSummary:\nWhen calling `DisableFileDeletions` followed by `GetSortedWalFiles`, we guarantee the files returned by the latter call won't be deleted until after file deletions are re-enabled. However, `GetSortedWalFiles` didn't omit files already planned for deletion via `PurgeObsoleteFiles`, so the guarantee could be broken.\n\nWe fix it by making `GetSortedWalFiles` wait for the number of pending purges to hit zero if file deletions are disabled. This condition is eventually met since `PurgeObsoleteFiles` is guaranteed to be called for the existing pending purges, and new purges cannot be scheduled while file deletions are disabled. Once the condition is met, `GetSortedWalFiles` simply returns the content of DB and archive directories, which nobody can delete (except for deletion scheduler, for which I plan to fix this bug later) until deletions are re-enabled.\nCloses https://github.com/facebook/rocksdb/pull/3341\n\nDifferential Revision: D6681131\n\nPulled By: ajkr\n\nfbshipit-source-id: 90b1e2f2362ea9ef715623841c0826611a817634"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/266d85fbec80b129dbb6be28e75fe383a429b778", "message": "fix DBTest.AutomaticConflictsWithManualCompaction\n\nSummary:\nAfter af92d4ad112f192693f6017f24f9ae1b00e1f053, only exclusive manual compaction can have conflict. dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac updated the conflict-checking test case accordingly. But we missed the point that exclusive manual compaction can only conflict with automatic compactions scheduled after it, since it waits on pending automatic compactions before it begins running.\n\nThis PR updates the test case to ensure the automatic compactions are scheduled after the manual compaction starts but before it finishes, thus ensuring a conflict. I also cleaned up the test case to use less space as I saw it cause out-of-space error on travis.\nCloses https://github.com/facebook/rocksdb/pull/3375\n\nDifferential Revision: D6735162\n\nPulled By: ajkr\n\nfbshipit-source-id: 020530a4e150a4786792dce7cec5d66b420cb884"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/43549c7d59c40dee7af1c955cb23a7dfa1227e5a", "message": "Prevent unnecessary calls to PurgeObsoleteFiles\n\nSummary:\nSplit `JobContext::HaveSomethingToDelete` into two functions: itself and `JobContext::HaveSomethingToClean`. Now we won't call `DBImpl::PurgeObsoleteFiles` in cases where we really just need to call `JobContext::Clean`. The change is needed because I want to track pending calls to `PurgeObsoleteFiles` for a bug fix, which is much simpler if we only call it after `FindObsoleteFiles` finds files to delete.\nCloses https://github.com/facebook/rocksdb/pull/3350\n\nDifferential Revision: D6690609\n\nPulled By: ajkr\n\nfbshipit-source-id: 61502e7469288afe16a663a1b7df345baeaf246f"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/ba295cda29daee3ffe58549542804efdfd969784", "message": "replace DBTest.HugeNumbersOfLevel with a more targeted test case\n\nSummary:\nThis test often causes out-of-space error when run on travis. We don't want such stress tests in our unit test suite.\n\nThe bug in #596, which this test intends to expose, can be repro'd as long as the bottommost level(s) are empty when CompactRange is called. I rewrote the test to cover this simple case without writing a lot of data.\nCloses https://github.com/facebook/rocksdb/pull/3362\n\nDifferential Revision: D6710417\n\nPulled By: ajkr\n\nfbshipit-source-id: 9a1ec85e738c813ac2fee29f1d5302065ecb54c5"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/6d7e3b9faf3b4043a6c28a31e2ac2828e1a47420", "message": "fix Gemfile.lock nokogiri dependencies\n\nSummary:\nI installed the ruby dependencies and ran `bundle update nokogiri`. It depends on a newer version of \"mini_portile2\" which I missed in 9c2f64e1488d577746686189d4d127dcf3a7f6e0. Now `bundle install` works again.\nCloses https://github.com/facebook/rocksdb/pull/3361\n\nDifferential Revision: D6710164\n\nPulled By: ajkr\n\nfbshipit-source-id: 9a08d6cc6400ef495b715b3d68b04ce3f3367031"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/9c2f64e1488d577746686189d4d127dcf3a7f6e0", "message": "Update Gemfile.lock\n\nSummary:\nbump nokogiri number\nCloses https://github.com/facebook/rocksdb/pull/3358\n\nDifferential Revision: D6708596\n\nPulled By: ajkr\n\nfbshipit-source-id: 6662c3ba4994374ecf8a13928e915b655a980b70"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/0c6e8be9e205d434a29418410155397f2a762e58", "message": "Fix directory name for db_basic_test\n\nSummary:\nIt was using the same directory as `db_options_test` so transiently failed when unit tests were run in parallel.\nCloses https://github.com/facebook/rocksdb/pull/3352\n\nDifferential Revision: D6691649\n\nPulled By: ajkr\n\nfbshipit-source-id: bee433484fec4faedd5cadf2db3c92fdcc99a170"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/bafec6bb30c8da09558f1af4278dcbe1defbdfa1", "message": "Fix checkpoint_test directory setup/cleanup\n\nSummary:\n- Change directory name from \"db_test\" to \"checkpoint_test\". Previously it used the same directory as `db_test`\n- Systematically cleanup snapshot and snapshot staging directories before each test. Previously a failed test run caused subsequent runs to fail, particularly when the first failure caused \"snapshot.tmp\" to not be cleaned up.\nCloses https://github.com/facebook/rocksdb/pull/3351\n\nDifferential Revision: D6691015\n\nPulled By: ajkr\n\nfbshipit-source-id: 4fc2ac2e21ff2617ea0e96297c5132b5f2eefd79"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/0f0d2ab95a2107256498e7be2bbd3d4e8c0c7c32", "message": "fix DBImpl instance variable naming\n\nSummary:\ngot confused while reading `FindObsoleteFiles` due to thinking it's a local variable, so renamed it properly\nCloses https://github.com/facebook/rocksdb/pull/3342\n\nDifferential Revision: D6684797\n\nPulled By: ajkr\n\nfbshipit-source-id: a4df0aae1cccce99d4dd4d164aadc85b17707132"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3275", "title": "fix for checkpoint directory with trailing slash(es)", "body": "previously if `checkpoint_dir` contained a trailing slash, we'd attempt to create the `.tmp` directory under `checkpoint_dir` due to simply concatenating `checkpoint_dir + \".tmp\"`. This failed because `checkpoint_dir` hadn't been created yet and our directory creation is non-recursive. This PR fixes the issue by always creating the `.tmp` directory in the same parent as `checkpoint_dir` by stripping trailing slashes before concatenating.\r\n\r\nTest Plan:\r\n\r\ncommand: `./ldb checkpoint --db=/data/compaction_bench/dbbench/ --checkpoint_dir=/data/compaction_bench/dbbench_checkpoint/`\r\n\r\noutput before this PR: `Failed: IO error: While mkdir: /data/compaction_bench/dbbench_checkpoint6/.tmp: No such file or directory`\r\n\r\noutput after this PR: `OK`", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2987", "title": "Apply compression dictionary to file from which it was generated", "body": "- Move sampling logic from `CompactionJob` to `BlockBasedTableBuilder` as now we generate dictionary per file rather than per subcompaction.\r\n- Buffer uncompressed data blocks and all keys in-memory. We take a second pass through these during `Finish()` to compress/write data blocks and generate the index. The keys are buffered for convenience, even though they're redundantly stored in the uncompressed data blocks, so we can replay them to `OnKeyAdded` and `AddIndexEntry`.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2973", "title": "log decimal TID on linux", "body": "identify the thread using the output of `gettid()` syscall on Linux, which is a system-wide unique ID, unlike `pthread_self()`. Also changed from hex to decimal to be compatible with tools like `top`.\r\n\r\nTest Plan:\r\n\r\n- make check -j64\r\n- run db_bench and correlate `top` entries with log entries\r\n\r\n```\r\n$ top -H\r\n...\r\n782508 andrewkr  20   0  319272  47864   8884 R 99.7  0.0   0:04.18  4 db_bench\r\n...\r\n```\r\n\r\n```\r\n$ grep '782508' /dev/shm/dbbench/LOG | head -1\r\n2017/10/05-13:23:17.517942 782508 [db/db_impl_write.cc:1162] [default] New memtable created with log file: #6. Immutable memtables: 0.\r\n```", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yiwu-arbug": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/dc360df81ec48e56a5d9cee4adb7f11ef0ca82ac", "message": "Fix multiple build failures\n\nSummary:\n* Fix DBTest.CompactRangeWithEmptyBottomLevel lite build failure\n* Fix DBTest.AutomaticConflictsWithManualCompaction failure introduce by #3366\n* Fix BlockBasedTableTest::IndexUncompressed should be disabled if snappy is disabled\n* Fix ASAN failure with DBBasicTest::DBClose test\nCloses https://github.com/facebook/rocksdb/pull/3373\n\nDifferential Revision: D6732313\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 1eb9b9d9a8d795f56188fa9770db9353f6fdedc5"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/46ec52499eb0bab57f9b649b11ca9161f93ba06b", "message": "Fix db_bench write being disabled in lite build\n\nSummary:\nThe macro was added by mistake in #2372\nCloses https://github.com/facebook/rocksdb/pull/3343\n\nDifferential Revision: D6681356\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 4180172fb0eaef4189c07f219241e0c261c03461"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/30a017fecae60aa7b87c4a1e283b6ac027724a92", "message": "Blob DB: avoid having a separate read of checksum\n\nSummary:\nPreviously on a blob db read, we are making a read of the blob value, and then make another read to get CRC checksum. I'm combining the two read into one.\n\nreadrandom db_bench with 1G database with base db size of 13M, value size 1k:\n`./db_bench --db=/home/yiwu/tmp/db_bench --use_blob_db --value_size=1024 --num=1000000 --benchmarks=readrandom --use_existing_db --cache_size=32000000`\nmaster: throughput 234MB/s, get micros p50 5.984 p95 9.998 p99 20.817 p100 787\nthis PR: throughput 261MB/s, get micros p50 5.157 p95 9.928 p99 20.724 p100 190\nCloses https://github.com/facebook/rocksdb/pull/3301\n\nDifferential Revision: D6615950\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 052410c6d8539ec0cc305d53793bbc8f3616baa3"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3378", "title": "Fix Flush() keep waiting after flush finish", "body": "Summary:\r\nFlush() call could be waiting indefinitely if min_write_buffer_number_to_merge is used. Consider the sequence:\r\n1. User call Flush() with flush_options.wait = true\r\n2. The manual flush started in the background\r\n3. New memtable become immutable because of writes. The new memtable will not trigger flush if min_write_buffer_number_to_merge is not reached.\r\n4. The manual flush finish.\r\n\r\nBecause of the new memtable created at step 3 not being flush, previous logic of WaitForFlushMemTable() keep waiting, despite the memtables it intent to flush has been flushed.\r\n\r\nHere instead of checking if there are any more memtables to flush, WaitForFlushMemTable() also check the sequence number of the earliest memtable. If the sequence is larger than the sequence number at the time flush was initiated, it means all the memtable at the time of flush start has all been flush.\r\n\r\nTest Plan:\r\nSee the new test. Without the fix the test will stuck at WaitForFlushMemTable() and never finishes.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3097", "title": "Write path error handling cleanup", "body": "Summary:\r\nFixing the bug where concurrent writes may get Status::OK while it actually gets IOError on WAL write. This happens when multiple writes form a write batch group, and the leader get an IOError while writing to WAL. The leader failed to pass the error to followers in the group, and the followers end up return Status::OK() while actually writing nothing. The bug only affect writes in a batch group. Future writes after the batch group will correctly return immediately with the IOError.\r\n\r\nCloses #3096 \r\n\r\nTest Plan:\r\nSee the new test.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vogel76": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/bf6f03f3cdbc51637820655c07151fe4e2efda3f", "message": "Issue #3370 Broken CMakeLists.txt\n\nSummary:\nIssue #3370 Simple fixes to make RocksDB project working also as a submodule of other bigger one.\nCloses https://github.com/facebook/rocksdb/pull/3372\n\nDifferential Revision: D6729595\n\nPulled By: ajkr\n\nfbshipit-source-id: eee2589e7a7c4322873dff8510eebd050301c54c"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/af92d4ad112f192693f6017f24f9ae1b00e1f053", "message": "Avoid too frequent MaybeScheduleFlushOrCompaction() call\n\nSummary:\nIf there's manual compaction in the queue, then \"HaveManualCompaction(compaction_queue_.front())\" will return true, and this cause too frequent MaybeScheduleFlushOrCompaction().\n\nhttps://github.com/facebook/rocksdb/issues/3198\nCloses https://github.com/facebook/rocksdb/pull/3366\n\nDifferential Revision: D6729575\n\nPulled By: ajkr\n\nfbshipit-source-id: 96da04f8fd33297b1ccaec3badd9090403da29b0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thatsafunnyname": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/45828c721536e2145be6f825e563955d39948f02", "message": "Consider an increase to buffer size when reading option file, from 4K to 8K.\n\nSummary:\nHello and thank you for RocksDB,\n\nWhile looking into the buffered io used when an `OPTIONS` file is read I noticed the `OPTIONS` files produced by RocksDB 5.8.8 (and head of master) were just over 4096 bytes in size, resulting in the version of glibc I am using (glibc-2.17-196.el7) (on the filesystem used) being passed a 4K buffer for the `fread_unlocked` call and 2 system call reads using a 4096 buffer being used to read the contents of the `OPTIONS` file.\n\n  If the buffer size is increased to 8192 then 1 system call read is used to read the contents.\n\n  As I think the buffer size is just used for reading `OPTIONS` files, and I thought it likely that `OPTIONS` files have increased in size (as more options are added), I thought I would suggest an increase.\n\n[  If the comments from the top of the `OPTIONS` file are removed, and white space from the start of lines is removed then the size can be reduced to be under 4K, but as more options are added the size seems likely to grow again. ]\n\nCreate a new database:\n\n```\n> ./ldb --create_if_missing --db=/tmp/rdb_tmp put 1 1\nOK\n```\n\nThe OPTIONS file is 4252 bytes:\n\n```\n> stat /tmp/rdb_tmp/OPTIONS* | head -n 2\n  File: \u2018/tmp/rdb_tmp/OPTIONS-000005\u2019\n  Size: 4252            Blocks: 16         IO Block: 4096   regular file\n```\n\nBefore, the 4096 byte buffer is used from 2 system read calls:\n\n```\n> strace -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 |\n    grep -A 1 'RocksDB option file'\nread(3, \"# This is a RocksDB option file.\"..., 4096) = 4096\nread(3, \"e\\n  metadata_block_size=4096\\n  c\"..., 4096) = 156\n```\n\nltrace shows 4096 passed to fread_unlocked\n\n```\n> ltrace -S -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 |\n    grep -C 3 'RocksDB option file'\n[pid 51013] fread_unlocked(0x7ffd5fbf2d50, 1, 4096, 0x7fd2e084e780 <unfinished ...>\n[pid 51013] fstat@SYS(3, 0x7ffd5fbf28f0)         = 0\n[pid 51013] mmap@SYS(nil, 4096, 3, 34, -1, 0)    = 0x7fd2e318c000\n[pid 51013] read@SYS(3, \"# This is a RocksDB option file.\"..., 4096) = 4096\n[pid 51013] <... fread_unlocked resumed> )       = 4096\n...\n```\n\nAfter, the 8192 byte buffer is used from 1 system read call:\n\n```\n> strace -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 | grep -A 1 'RocksDB option file'\nread(3, \"# This is a RocksDB option file.\"..., 8192) = 4252\nread(3, \"\", 4096)                       = 0\n```\n\nltrace shows 8192 passed to fread_unlocked\n\n```\n> ltrace -S -f ./ldb --try_load_options --db=/tmp/rdb_tmp get DOES_NOT_EXIST 2>&1 | grep -C 3 'RocksDB option file'\n[pid 146611] fread_unlocked(0x7ffcfba382f0, 1, 8192, 0x7fc4e844e780 <unfinished ...>\n[pid 146611] fstat@SYS(3, 0x7ffcfba380f0)        = 0\n[pid 146611] mmap@SYS(nil, 4096, 3, 34, -1, 0)   = 0x7fc4eaee0000\n[pid 146611] read@SYS(3, \"# This is a RocksDB option file.\"..., 8192) = 4252\n[pid 146611] read@SYS(3, \"\", 4096)               = 0\n[pid 146611] <... fread_unlocked resumed> )      = 4252\n[pid 146611] feof(0x7fc4e844e780)                = 1\n```\nCloses https://github.com/facebook/rocksdb/pull/3294\n\nDifferential Revision: D6653684\n\nPulled By: ajkr\n\nfbshipit-source-id: 222f25f5442fefe1dcec18c700bd9e235bb63491"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xiaosuo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/0a7ba0e54826a01fb2117d3b2431973d25763242", "message": "Fix memleak when DB::DeleteFile()\n\nSummary:\nBecause the corresponding read_first_record_cache_ item wasn't\nerased, memory leaked.\nCloses https://github.com/facebook/rocksdb/pull/1712\n\nDifferential Revision: D4363654\n\nPulled By: ajkr\n\nfbshipit-source-id: 7da1adcfc8c380e4ffe05b8769fc2221ad17a225"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "newpoo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/204af1ecccb6ed8110ee04cf9130594cfcb3af27", "message": "add WriteBatch::WriteBatch(std::string&&)\n\nSummary:\nto save a string copy for some use cases.\n\nThe change is pretty straightforward, please feel free to let me know if you want to suggest any tests for it.\nCloses https://github.com/facebook/rocksdb/pull/3349\n\nDifferential Revision: D6706828\n\nPulled By: yiwu-arbug\n\nfbshipit-source-id: 873ce4442937bdc030b395c7f99228eda7f59eb7"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamretter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/d4da02d147e6ab331a0450e67368839c2e22c291", "message": "Add Jenkins for PPC64le build status badge\n\nSummary: Closes https://github.com/facebook/rocksdb/pull/3356\n\nDifferential Revision: D6706909\n\nPulled By: sagar0\n\nfbshipit-source-id: 6e4757d9eceab3e8a6c1b83c1be4108e86576cb2"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/a53c571d2d69e212922c92f275258ede328652ab", "message": "FreeBSD build support for RocksDB and RocksJava\n\nSummary:\nTested on a clean FreeBSD 11.01 x64.\n\nCloses https://github.com/facebook/rocksdb/pull/1423\nCloses https://github.com/facebook/rocksdb/pull/3357\n\nDifferential Revision: D6705868\n\nPulled By: sagar0\n\nfbshipit-source-id: cbccbbdafd4f42922512ca03619a5d5583a425fd"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/398d72fa614b809cc4df153092e0665b57b170d2", "message": "Add autotune and #getBytesPerSecond() to RocksJava RateLimiter\n\nSummary: Closes https://github.com/facebook/rocksdb/pull/3332\n\nDifferential Revision: D6667680\n\nPulled By: ajkr\n\nfbshipit-source-id: b2bb6889257850a4eb6f6cbd7106f62df7b82730"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3334", "title": "Java wrapper for Native Comparators", "body": "This is an abstraction for working with custom Comparators implemented in native C++ code from Java. Native code must directly extend `rocksdb::Comparator`. When the native code comparator is compiled into the RocksDB codebase, you can then create a Java Class, and JNI stub to wrap it.\r\n\r\nUseful if the C++/JNI barrier overhead is too much for your applications comparator performance.\r\n\r\nAn example is provided in `java/rocksjni/native_comparator_wrapper_test.cc` and `java/src/main/java/org/rocksdb/NativeComparatorWrapperTest.java`.\r\n  \r\n  ", "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3065", "title": "Added bytes XOR merge operator", "body": "Closes https://github.com/facebook/rocksdb/pull/575\r\n\r\nI fixed the merge conflicts etc.", "author_association": "COLLABORATOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yuslepukhin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/b010116d8263db1ba3f6ea5b30f9886243320a59", "message": "Eliminate some redundant block reads.\n\nSummary:\nRe-use metadata for reading Compression Dictionary on BlockBased\n  table open, this saves two reads from disk.\n  This helps to our 999 percentile in 5.6.1 where prefetch buffer is  not present.\nCloses https://github.com/facebook/rocksdb/pull/3354\n\nDifferential Revision: D6695753\n\nPulled By: ajkr\n\nfbshipit-source-id: bb8acd9e9e66e65b89c548ab8940570ae360333c"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3325", "title": "Demonstrate async IO with coroutines", "body": "  with async/coroutine_random_access_test.cc windows only test.\r\n  RandomAccessFileReader::RequestRead() is a clone of Read() for test purposes.\r\n  demonstrates minimal would be changes to Read() with the insertion of 3 keywords\r\n  and keeping the source code intact.\r\n  Some scaffolding is required but it is all on the side and does not affect the code flow.\r\n  The downside that we would need to keep track that all functions on the way\r\n  down to I/O become coroutines and make use of co_await and co_return if they returning\r\n  anything (usually status). A separate AppVeyor build would be enough to make sure we are OK.\r\n  Use VS 2017 to build. It might work on 2015, I have not tried yet.\r\n  Use -DWITH_COROUTINES=1 to enable coroutines.\r\n  The output on my box is:\r\n  [==========] Running 2 tests from 1 test case.\r\n  [----------] Global test environment set-up.\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0\r\n  Thread ID before co_await: 240 after co_await: 27328\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 2600 after co_await: 27328\r\n  Thread ID before co_await: 17928 after co_await: 9420\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 28480 after co_await: 30912\r\n  Thread ID before co_await: 25000 after co_await: 15280\r\n  Thread ID before co_await: 14312 after co_await: 21532\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 19940 after co_await: 14912\r\n  Thread ID before co_await: 7188 after co_await: 9420\r\n  Thread ID before co_await: 360 after co_await: 7012\r\n  Thread ID before co_await: 28892 after co_await: 27328\r\n  Thread ID before co_await: 14744 after co_await: 26552\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 13904 after co_await: 12556\r\n  Thread ID before co_await: 15712 after co_await: 28904\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/0 (235 ms)\r\n  [ RUN      ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1\r\n  Thread ID before co_await: 240 after co_await: 13428\r\n  Read:7936 bytes, status: OK\r\n  Wait completed\r\n  Thread ID before co_await: 26040 after co_await: 13428\r\n  Thread ID before co_await: 10276 after co_await: 14276\r\n  Read:7935 bytes, status: OK\r\n  Read:Thread ID before co_await: 7396Thread ID before co_await: 20800 after co_await: 18884\r\n  Thread ID before co_await: 20684 after co_await: 26680\r\n  Thread ID before co_await: 16728 after co_await: 18724\r\n  Thread ID before co_await: 27968 after co_await: 7148\r\n  after co_await: 13428\r\n  Thread ID before co_await: 27496 after co_await: 22984\r\n  Read:Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 21056 after co_await: 2012\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 29944 after co_await: 2896\r\n  7935Read:7935 bytes, status: OK\r\n  bytes, status: OK\r\n  Thread ID before co_await: 10464 after co_await: 31984\r\n  Read:7935 bytes, status: OK\r\n  Thread ID before co_await: 15656 after co_await: 22984\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  Read:7935 bytes, status: OK\r\n  [       OK ] TestAsyncRead/RandomAccessCoroutineTest.TestAsyncRead/1 (230 ms)\r\n  [----------] 2 tests from TestAsyncRead/RandomAccessCoroutineTest (467 ms total)\r\n\r\n  [----------] Global test environment tear-down\r\n  [==========] 2 tests from 1 test case ran. (468 ms total)\r\n  [  PASSED  ] 2 tests.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3063", "title": "Async 5.6.1", "body": "This is the second iteration of async. This includes two major things: 1) Get code refactored for more inlining. 2) Async iterators implementation.\r\n\r\nIn my perf runs I no longer see the difference on windows while running single thread against RAM drive.\r\n\r\nHowever, if this is still no acceptable I am prepared to restore sync interfaces and leave async path on the side. Async iteration is implemented on the side.\r\n\r\nWe may need another meeting with better preparation to explain how things work.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "siying": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/a478e8569778266abf78fa67a860e805ac7fb86d", "message": "Remove GCC parameter \"-march=native\" for ARM\n\nSummary:\nMost popular versions of GCC can't identify platform on ARM if \"-march=native\" is specified. Remove it to unblock most people.\nCloses https://github.com/facebook/rocksdb/pull/3346\n\nDifferential Revision: D6690544\n\nPulled By: siying\n\nfbshipit-source-id: bbaba9fe2645b6b37144b36ea75beeff88992b49"}, {"url": "https://api.github.com/repos/facebook/rocksdb/commits/6aa95f4d0fc904d2865c13f59051576619ca9811", "message": "Fix a wrong log formatting\n\nSummary:\nI experienced weird segfault because of this mismatch of type in log formatting. Fix it.\nCloses https://github.com/facebook/rocksdb/pull/3345\n\nDifferential Revision: D6687224\n\nPulled By: siying\n\nfbshipit-source-id: c51fb1c008b7ebc3efdc353a4adad3e8f5b3e9de"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3340", "title": "Preload some files even if options.max_open_files", "body": "Summary:\r\nChoose to preload some files if options.max_open_files != -1. This can slightly narrow the gap of performance between options.max_open_files is -1 and a large number. To avoid a significant regression to DB reopen speed if options.max_open_files != -1. Limit the files to preload in DB open time to 16.\r\n\r\nTest Plan: Run all existing tests.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/6049155", "body": "@liukai , when you mention \"another team encountered an error\", which error do you mean?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6049155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631405", "body": "Please follow the coding convention. You can do \"make format\" and it will fix some code convention problems for you.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631422", "body": "nit: \"else if\" is more intuitive to read to me.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495910", "body": "Can we just replace line 79?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495983", "body": "I mean guard MAP_HUGETLB in the same way as OS_LINUX in line 79.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12495983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "maysamyabandeh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/00b33c2474ef5fc07f10b7bf4c5684eebe4436c6", "message": "WritePrepared Txn: address some pending TODOs\n\nSummary:\nThis patch addresses a couple of minor TODOs for WritePrepared Txn such as double checking some assert statements at runtime as well, skip extra AddPrepared in non-2pc transactions, and safety check for infinite loops.\nCloses https://github.com/facebook/rocksdb/pull/3302\n\nDifferential Revision: D6617002\n\nPulled By: maysamyabandeh\n\nfbshipit-source-id: ef6673c139cb49f64c0879508d2f573b78609aca"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrislusf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/rocksdb/commits/24e2c1640d9808a9dc18b770427aa024670f5edf", "message": "add support for allow_ingest_behind in C API\n\nSummary:\nhttps://github.com/facebook/rocksdb/wiki/Creating-and-Ingesting-SST-files\n\nNeed to expose these functions in the C API to be used by Go bindings.\nCloses https://github.com/facebook/rocksdb/pull/3011\n\nDifferential Revision: D6679563\n\nPulled By: sagar0\n\nfbshipit-source-id: 536f844ddaeb0172c6d7e416d2a75e8f9e57c8ef"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "topilski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3377", "title": "Fixed get version on windows, moved throwing exceptions into cc file.", "body": "Fixes for msys2 and mingw, hide exceptions into cpp  file.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IslamAbdelRahman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3360", "title": "Support skipping bloom filters for SstFileWriter", "body": "Add an option for SstFileWriter to skip building bloom filters", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "quark-zju": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3339", "title": "crc32: suppress -Wimplicit-fallthrough warnings", "body": "Workaround a bunch of \"implicit-fallthrough\" compiler errors, like:\r\n\r\n```\r\nutil/crc32c.cc:533:7: error: this statement may fall through [-Werror=implicit-fallthrough=]\r\n   crc = _mm_crc32_u64(crc, *(uint64_t*)(buf + offset));\r\n       ^\r\nutil/crc32c.cc:1016:9: note: in expansion of macro \u2018CRCsinglet\u2019\r\n         CRCsinglet(crc0, next, -2 * 8);\r\n         ^~~~~~~~~~\r\nutil/crc32c.cc:1017:7: note: here\r\n       case 1:\r\n```\r\n\r\nTest Plan:\r\nBuild rocksdb using gcc 7.2.0 on Arch Linux with success.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benclay": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3338", "title": "Callback bridge for Java-based CompactionFilter", "body": "Similar to `AbstractCompactionFilterFactory` and `AbstractComparator`, this diff contains an abstract base class for `rocksdb::CompactionFilter` written in Java. It uses a similar set of techniques to cache relevant field / method IDs at startup, passes scalars back into Java and relies on threadlocals to avoid `DirectSlice` finalize churn.\r\n\r\nUsing this implementation we've been able to run a Java compaction filter under Manhattan production workloads with a ~10% performance reduction.  It's not free but is good enough for some usecases.\r\n\r\nThere are a few unresolved issues with this implementation that I wanted to discuss with the community. They're marked with `TODO(benclay)` below.\r\n\r\n- Detaching compaction threads after every callback is extremely expensive. On our OpenJDK8 JVM the `DetachCurrentThread` call internally serializes on a mutex while releasing monitors, causing compactions and thus writes to eventually stall.  As a result, in this diff **we are not detaching at all**.  However, I am concerned about upstreaming this as-is this because folks might explicitly take locks in their CompactionFilter implementations and need those monitors to be automatically released.  I am looking for feedback from the community on this problem.  There are a few solutions from Rocks side I can think of, but am open to more ideas:\r\n  - Add a lifecycle hook (perhaps to CompactionFilterFactory?) when the compaction thread is shutting down. At that point we can detach the thread from the JVM.  This still risks the thread crashing and never detaching though.\r\n  - Implement a batching interface to CompactionFilter so we aren't making so many roundtrips and the detach cost is amortized.  This would help performance more generally but is probably more invasive - I haven't looked into the implications on Rocks side.\r\n  - Detach every Nth call - this seems very racy and doesn't guarantee that the thread detaches on the final call, so it seems like a non-starter.\r\n- I couldn't take advantage of @adamretter 's `RocksCallbackObject` regime because Java disallows multiple inheritance and I needed to inherit from `AbstractCompactionFilter`.  Right now that class and its C++ companion `JniCallback` are fairly basic, but over time could export some useful performance enhancements.  I thought about shimming a new `ICompactionFilter` interface **below** `AbstractCompactionFilter` and have that be the primary unit for interacting with `ColumnFamilyOptions`. Upon further examination that will somewhat break the tradition of having abstract base classes with package-private `nativeHandle_` member variables, which is how `ColumnFamilyOptions` is binding the `CompactionFilter` handle on the C++ side.  Open to suggestions here as well.\r\n\r\n@sagar0 @adamretter \r\n \r\nEDIT: There is a test issue that I'm still chasing down.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "miasantreble": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3333", "title": "Use block cache to track memory usage when ReadOptions.fill_cache=false", "body": "ReadOptions.fill_cache is set in compaction inputs and can be set by users in their queries too. It tells RocksDB not to put a data block used to block cache.\r\n\r\nThe memory used by the data block is, however, not trackable by users.\r\n\r\nTo make the system more manageable, we can cost the block to block cache while using it, and then release it after using.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3272", "title": "[WIP] Skip obsolete files during recovery", "body": "Right now during crash recovery Rocksdb replays all logs found in order of log number and relies on `recovering_log_number_` to ignore duplicate replays. This PR simplifies the process by first collecting the smallest log number(`min_log_num`) among all column families from the manifest, and skipping all obsolete WAL logs whose log number is strictly smaller than `min_log_num`.\r\n\r\nThis change might cause some regression in txn related tests and will be updated soon.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2977", "title": "fix condition for fsync wal before deletion", "body": "fixing the condition for fsync: it should be number of CF greater than 1 instead of 0", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gritzko": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3304", "title": "expose WAL iterator in the C API", "body": "A minor change: I wrapped TransactionLogIterator for the C API.\r\nI needed that for the golang binding.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "falkevik": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3292", "title": "Add possibility to change ttl on open DB", "body": "We have seen cases where it could be good to change TTL on already open DB.\r\nChange ttl in TtlCompactionFilterFactory on open db.\r\nNext time a filter is created, it will filter accroding to the set TTL.\r\n\r\nIs this something that could be useful for others?\r\nAny downsides?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "double16": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3143", "title": "Add shared library for musl-libc", "body": "Add the jni library for musl-libc, specifically for incorporating into Alpine based docker images. The classifier is `musl64`.\r\n\r\nI have signed the CLA electronically.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pdvian": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3106", "title": "options: Fix coverity issues", "body": "Summary:\r\noptions/cf_options.cc:\r\n 77      memtable_insert_with_hint_prefix_extractor(\r\n\r\nCID 1396208 (#1 of 1): Uninitialized scalar field (UNINIT_CTOR)\r\n2. uninit_member: Non-static class member info_log_level is not initialized in this constructor nor in any functions that it calls.\r\n 78          cf_options.memtable_insert_with_hint_prefix_extractor.get()) {}\r\n\r\ninclude/rocksdb/advanced_options.h:\r\n\r\nAdvancedColumnFamilyOptions::AdvancedColumnFamilyOptions() {\r\n 40  assert(memtable_factory.get() != nullptr);\r\n\r\nCID 1405359 (#1 of 1): Uninitialized scalar field (UNINIT_CTOR)\r\n2. uninit_member: Non-static class member max_mem_compaction_level is not initialized in this constructor nor in any functions that it calls.\r\n 41}\r\n\r\nAs max_mem_compaction_level is not supported anymore, undefine it.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PhaniShekhar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3102", "title": "Support for Column family specific paths.", "body": "In this change, an option to set different paths for different column families is added.\r\nThis option is set via cf_paths setting of ColumnFamilyOptions. This option will work in a similar fashion to db_paths setting. Cf_paths is a vector of Dbpath values which contains a pair of the absolute path and target size. Multiple levels in a Column family can go to different paths if cf_paths has more than one path. \r\nTo maintain backward compatibility, if cf_paths is not specified for a column family, db_paths setting will be used. Note that, if db_paths setting is also not specified, RocksDB already has code to use db_name as the only path. \r\n\r\nChanges : \r\n1) A new member \"cf_paths\" is added to ImmutableCfOptions. This is set, based on cf_paths setting of ColumnFamilyOptions and db_paths setting of ImmutableDbOptions.  This member is used to identify the path information whenever files are accessed. \r\n2) Validation checks are added for cf_paths setting based on existing checks for db_paths setting.\r\n3) DestroyDB, PurgeObsoleteFiles etc. are edited to support multiple cf_paths.\r\n4) Unit tests are added appropriately.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dcclyde": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3059", "title": "Fix DeleteFilesInRange so keys never reappear", "body": "In the previous implementation of DeleteFilesInRange, keys could reappear if we drop a wider range at a higher level, making the tombstone in the upper level disappear while the key it covered in the lower level doesn't. The second commit in this pull request reimplements DeleteFilesInRange to use the following strategy:\r\n1) Initialize the deletion range to the lower and upper bounds specified by the user.\r\n2) Start from the bottom level and iterate upward. At each level:\r\n    i) pick the widest clean-cut set of files that fall entirely in the range.\r\n    ii) Reset the deletion range to the min and max userkeys of the clean-cut set of files from step (i).\r\n\r\nTo support this, the first commit in this pull request modifies several functions VersionStorageInfo to accept ranges with no lower and/or upper bound. This is a \"fix\" in the sense that the functions' comments already promised the new behaviour.\r\n\r\nI've added a new unit test in db_compaction_test which passes now but fails when using the old implementation.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cooljiansir": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/3001", "title": "handle error with kSkipAnyCorruptedRecords", "body": "in kSkipAnyCorruptedRecords mode, continue to replay the log.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cld378632668": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/2978", "title": "stats_dump_period_sec(60), //1min", "body": "stats_dump_period_sec(60), //1min", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694841", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40266010", "body": "Thanks. \n\nFrom the failure I get, it looks like it doesn't like an Options variable. What is this test supposed to do?\n\n---\n\nFrom: Lei Jin [notifications@github.com]\nSent: Friday, April 11, 2014 5:00 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nsignal test is meant to trigger a segment fault. So that is expected. But merge_test failure is not expected. I just ran merge_test on my machine, it works for me.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40265556.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40266010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40267892", "body": "I downloaded it this morning as a zip file from,\n\nhttps://github.com/facebook/rocksdb\n\nFrom: Lei Jin [mailto:notifications@github.com]\nSent: Friday, April 11, 2014 6:03 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\ninclude/rocksdb/options.h:772 is the constructor of Options(). It is not possible to be on the call stack of db/merge_test.cc:344. Are you sure it is copied correctly?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40267674.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40267892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40271657", "body": "Whatever it was, rocksdb seems to be running fine with the application I am testing it with \u263a.\n\nFrom: Ethan Hamilton\nSent: Friday, April 11, 2014 6:12 PM\nTo: facebook/rocksdb; facebook/rocksdb\nSubject: RE: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI downloaded it this morning as a zip file from,\n\nhttps://github.com/facebook/rocksdb\n\nFrom: Lei Jin [mailto:notifications@github.com]\nSent: Friday, April 11, 2014 6:03 PM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\ninclude/rocksdb/options.h:772 is the constructor of Options(). It is not possible to be on the call stack of db/merge_test.cc:344. Are you sure it is copied correctly?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40267674.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40271657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40400441", "body": "Thanks Igor,\n\nThis is strange, in debug mode, the test passes,\n\n$ ./merge_test\nTest read-modify-write counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nCompaction started ...\nCompaction ended\na: 3\nb: 1225\nTest merge-based counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest merge in memtable...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest Partial-Merge\nOpening database with TTL\nTest read-modify-write counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nCompaction started ...\nCompaction ended\na: 3\nb: 1225\nTest merge-based counters...\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest merge in memtable...\nOpening database with TTL\na: 3\n1\n2\na: 3\nb: 1225\n3\nTest Partial-Merge\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\nOpening database with TTL\n\nBut in release mode I get,\n\n$ ./merge_test\nTest read-modify-write counters...\n1\n2\n3\nCompaction started ...\nCompaction ended\nTest merge-based counters...\n1\n2\n3\nTest merge in memtable...\n1\n2\n3\nTest Partial-Merge\ndb/merge_test.cc:344: failed: 10 == 0\n#0   ./merge_test() [0x423083] Options  /home/fgomez/rocksdb/rocksdb-master/./include/rocksdb/options.h:772\n#1   ./merge_test() [0x406a94] ~basic_string    /usr/include/c++/4.8/bits/basic_string.h:539\n#2   /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fc0876b8de5] ??        ??:0\n#3   ./merge_test() [0x41f7a2] _start   ??:?\n\nWith respect to the version of gcc that I used for the above,\n\n]$ gcc --version\ngcc (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nOn Friday I was running things on a machine that had two different versions of the gcc runtime, so to isolate the problems I am now compiling, building, linking on a machine that has only the gcc compiler mentioned above.\n\nIn any case, I have integrated rocksdb with our app and things seem to work fine. What is the \u201cmerge test\u201d actually testing?\n\nThanks,\n\nEthan.\n\nFrom: Igor Canadi [mailto:notifications@github.com]\nSent: Monday, April 14, 2014 10:19 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\n@ehamiltohttps://github.com/ehamilto signal_test is expected (if you run unit tests using the command make check we don't actually run signal_test). merge_test is not expected.\n\nCan you try doing; ./merge_test? That will give us correct line on which the test fails. (if you're running optimized code, our stack trace seems off)\n\nThanks!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40392804.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40400441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40402259", "body": "For the one that passes (ie, debug mode),\n\nmake clean; make dbg\n\nFor the one that doesn\u2019t ,\n\nmake release\n\nFrom: Igor Canadi [mailto:notifications@github.com]\nSent: Monday, April 14, 2014 11:35 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nCan you send me the exact line how you compiled merge_test?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40401715.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40402259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40406943", "body": "That was fast :).\n\nOne quick question. Was this an issue with the example code, build process or something that affected the core of rocksdb?\n\nThanks,\n\nEthan. \n\n---\n\nFrom: Igor Canadi [notifications@github.com]\nSent: Monday, April 14, 2014 11:43 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI'm able to reproduce, thanks for the report, we'll fix this asap\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40402735.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40406943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40407117", "body": "Never mind, I see that the issue was with the example code from the fix.\n\nThanks for getting it fixed so quickly.\n\nBest,\n\nEthan. \n\n---\n\nFrom: Ethan Hamilton\nSent: Monday, April 14, 2014 12:21 PM\nTo: facebook/rocksdb; facebook/rocksdb\nCc: Ethan Hamilton\nSubject: RE: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nThat was fast :).\n\nOne quick question. Was this an issue with the example code, build process or something that affected the core of rocksdb?\n\nThanks,\n\nEthan.\n\n---\n\nFrom: Igor Canadi [notifications@github.com]\nSent: Monday, April 14, 2014 11:43 AM\nTo: facebook/rocksdb\nCc: Ethan Hamilton\nSubject: Re: [rocksdb] Only 2 tests fail after install/build : signal_test and merge_test (#117)\n\nI'm able to reproduce, thanks for the report, we'll fix this asap\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/117#issuecomment-40402735.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/40407117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694842", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43151761", "body": "Thanks Igor!\n\nWe are using both disk and SSD. The write rate is pretty intensive, and it resembles the scenario called \u201cBulk Load of keys in Random Order\u201d here (the rate is also in the tens of MB/s) ,\n\nhttps://github.com/facebook/rocksdb/wiki/Performance-Benchmarks\n\nWould you mind to be a bit more specific about how to set the options to enable this scenario? Now I am using,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            rocksdb::Status status = rocksdb::DB::Open(options, \"directory\", &m_rdb);\n```\n\nWould this work,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            options. target_file_size_base = 200; // Do I put 200 or 200000000?\n\n                            options.max_bytes_for_level_base = 512; // Do I put 512 or 512000000?\n\n                            rocksdb::Status status = rocksdb::DB::Open(options, \"directory\", &m_rdb);\n```\n\nThank you in advance!\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 4:23 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are the optimal parameters? (#149)\n\nAlso set max_bytes_for_level_base to 512MB. Default is too small, it's 10MB.\n\nWe are planning to write tuning book that should make this much easier. :)\n\nWhat's your write rate? SSD or disk?\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/rocksdb/issues/149#issuecomment-43150370 .  https://github.com/notifications/beacon/7267817__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxNTcyODk2NiwiZGF0YSI6eyJpZCI6MzIyNTU4MDR9fQ==--18c34a235ce6978154367f84bb6eda901d447d1b.gif \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43151761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43152657", "body": "Hi there!\n\nTwo of the previous emails went to the \u201cjunk\u201d folder, so I missed them L.\n\nSo, to summarize, are those parameters OK? Or should I set write_buffer_size\nto also 200? Or 64? \n\nWith respect to the question of the disks, in either case (ie SSD or disk) ,\nthe 100 Gb will be contained in a single partition. \n\nThanks,\n\nEthan.\n\nFrom: Ethan Hamilton [mailto:ehamilto@tibco.com] \nSent: Wednesday, May 14, 2014 4:38 PM\nTo: 'facebook/rocksdb'\nSubject: RE: [rocksdb] I want to run a test on a 100 Gb dataset, what are\nthe optimal parameters? (#149)\n\nThanks Igor!\n\nWe are using both disk and SSD. The write rate is pretty intensive, and it\nresembles the scenario called \u201cBulk Load of keys in Random Order\u201d here (the\nrate is also in the tens of MB/s) ,\n\nhttps://github.com/facebook/rocksdb/wiki/Performance-Benchmarks\n\nWould you mind to be a bit more specific about how to set the options to\nenable this scenario? Now I am using,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            rocksdb::Status status =\n```\n\nrocksdb::DB::Open(options, \"directory\", &m_rdb);\n\nWould this work,\n\n```\n                            rocksdb::Options options;\n\n                            options.create_if_missing = true;\n\n                            options. target_file_size_base = 200; // Do\n```\n\nI put 200 or 200000000?\n\n```\n                            options.max_bytes_for_level_base = 512; //\n```\n\nDo I put 512 or 512000000?\n\n```\n                            rocksdb::Status status =\n```\n\nrocksdb::DB::Open(options, \"directory\", &m_rdb);\n\nThank you in advance!\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 4:23 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are\nthe optimal parameters? (#149)\n\nAlso set max_bytes_for_level_base to 512MB. Default is too small, it's 10MB.\n\nWe are planning to write tuning book that should make this much easier. :)\n\nWhat's your write rate? SSD or disk?\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/rocksdb/issues/149#issuecomment-43150370 .\n<https://github.com/notifications/beacon/7267817__eyJzY29wZSI6Ik5ld3NpZXM6Qm\nVhY29uIiwiZXhwaXJlcyI6MTcxNTcyODk2NiwiZGF0YSI6eyJpZCI6MzIyNTU4MDR9fQ==--18c3\n4a235ce6978154367f84bb6eda901d447d1b.gif> \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43152657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43166001", "body": "Thanks!\n\nI figured the values indeed looking at the examples,\n\n```\n                            rocksdb::Options options;\n\n                            options.write_buffer_size = 256*1024*1024;\n\n                            options.target_file_size_base  = 256*1024*1024;\n\n                            options.max_bytes_for_level_base = 512*1024*1024;\n\n                            options.create_if_missing = true;\n```\n\nApparently, the following is not available in the version that I have (which is from a couple of months back)\n\n  options.IncreaseParallelism();\n\n  options.OptimizeLevelStyleCompaction();\n\nI am running the test and so far so good. It is more to get a feel of what kind of performance we can expect from RocksDB. Feel free to close this issue.\n\nThank you for taking your time addressing my questions. \n\nBest,\n\nEthan. \n\nFrom: Igor Canadi [mailto:notifications@github.com] \nSent: Wednesday, May 14, 2014 8:47 PM\nTo: facebook/rocksdb\nCc: ehamilto\nSubject: Re: [rocksdb] I want to run a test on a 100 Gb dataset, what are the optimal parameters? (#149)\n\nTo get more information on what specific options mean, take a look at include/rocksdb/options.h. Documentation there is somewhat verbose.\n\nAlso, look at implementations of the functions I mentioned above. You might want to consider Universal style compaction if your write rate is really high (tens of MB/s). This wiki page does a good job of describing Universal style compaction: https://github.com/facebook/rocksdb/wiki/Rocksdb-Architecture-Guide\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/rocksdb/issues/149#issuecomment-43165761 .Image removed by sender.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/43166001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694843", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694844", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694846", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694848", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694850", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694853", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694854", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694858", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694859", "body": "Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/127694859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60173960", "body": "thread apply all bt full\n\nThread 34 (Thread 0x7f68d6d54700 (LWP 28441)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=8, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 8\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d6d54700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d6d54700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088257627904, 1613666937563492894, 0, 0, 140088257628608, 140088257627904, -1678355924575342050, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 33 (Thread 0x7f68da95a700 (LWP 28435)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=2, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 2\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68da95a700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68da95a700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088320567040, 1613666937563492894, 0, 0, 140088320567744, 140088320567040, -1678346584095215074, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 32 (Thread 0x7f68ddb5f700 (LWP 28429)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=60675866, __nbytes=4006, __buf=0x7f68ddb5cd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6864a984e0, offset=60675866, n=4006, result=0x7f68ddb5cd10, scratch=0x7f68ddb5cd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68ddb5cd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6864a984e0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68ddb5cd10, buf=buf@entry=0x7f68ddb5cd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68ddb5e150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002?\ufffd\\231\\003\\355\\021\\343\\363\\233\\265#\\273y\\334_\\316Yo\\202\\252\\001\\000\\000\\000\\000\\000\\000\\000b\\234\\217\\000\u06623\\350\\343\u04a5\\037\\320\ufffd\\230\\246\\360\\274\\276\\020\\254K\\366>\\177\\200\\206\\347\\247B\\324:\\274\\312\\373\\277\\367~\\>\\036\\t\\n\\230\\000lO\\324V?\\273\\365\\024\\223\\a\\331,s\\244\\250\\347noo\\203\\064.F\\361;{,B\\006\\204RR\\261\\327\\344\\272\\065 \\200l\\234\\234\\205\\063\\343I<\\a0\\306(\\364i>\\355\\271\\302\\361\\270F~\\037\\324\\303s{\\245W\\022\\061m\\002m\\365\\033\\221HKt\ufffd\\232M\\037\\t\u0727Er}\\307b\\234\\257\\036e\\037\\272\\224\\\"\\303(\\274\\222\\215\u043a\\006H\\207K\\276I6\\t\\021Z\\247\\356\\353_j\\022\\203\\332\\344\\315G8\\212\\\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68ddb5e150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68ddb5e270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6864251600, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68ddb5e4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\344\\265\\335h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\350\\265\\335h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\344\\265\\335h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68ddb5e2a0 \"\\205\\020\\252\\223\\205\\322\\005\ufffd\\210\\221\\277\\t\\232\\256\\367\\034\\200\\346\\265\\335h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\252\\223\\205\\322\\005\ufffd\\210\\221\\277\\t\\232\\256\\367\\034\\200\\346\\265\\335h\\177\\000\\000 \\343\\265\\335h\\177\\000\\000\\000\\343\\265\\335h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 60675866, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6865acdf76 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6864251af0, read_options=..., key=..., handle_context=0x7f68ddb5e6d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a00829a0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68ddb5e510 \"?\ufffd\\231\\336uf\\213)\\336\\020\\304\\065\\263\\353B\\230j\\326\\071\\313\\001\\177c\\251\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"?\ufffd\\231\\336uf\\213)\\336\\020\\304\\065\\263\\353B\\230j\\326\\071\\313\\001\\177c\\251\\t\\000\\000\\000\\021Q\u05ad\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6865acdf70 \"\\232\\256\\367\\034\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6865a77ab0 \"\", restarts_ = 391080, num_restarts_ = 16749, current_ = 353457, restart_index_ = 15141, key_ = {key_ = 0x7f68ddb5e460 \"?\ufffd\\232J\\002\\377\\377\\377\\377\\377\\377\\377_\\271\u04ab\\b\\002\\323\\n\\001\", buf_size_ = 32, key_size_ = 12, space_ = \"?\ufffd\\232J\\002\\377\\377\\377\\377\\377\\377\\377_\\271\u04ab\\b\\002\\323\\n\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6865acdf70 \"\\232\\256\\367\\034\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68ddb5e6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68642519a0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68ddb5ea60, status=status@entry=0x7f68ddb5ea70, merge_context=merge_context@entry=0x7f68ddb5e810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68ddb5ea60, merge_operator = 0x0, merge_context = 0x7f68ddb5e810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 166, start_index_in_curr_level_ = 166, user_key_ = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c41c0\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68ddb5ea60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68ddb5f650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68ddb5e8c8 \"\\034?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", kstart_ = 0x7f68ddb5e8c9 \"?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\", end_ = 0x7f68ddb5e8e5 \"\\021Q\u05ad\\251\\217\\240)\\002\\235\\256\\021\\n\", space_ = \"\\034?\ufffd\\231\\271p\\244S\\266n\\334\\006B\\r(\\321\\033\\372\\304\\002\\207\\002\\235\\256\\021\\n\\000\\000\\000\\021Q\u05ad\\251\\217\\240)\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\240h\\177\\000\\000\\200\\006\", '\\000' <repeats 14 times>, \"t\\006\\000\\000\\000\\000\\000\\000\\300\\371\\265\\335h\\177\\000\\000\\000\\367\\265\\335h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\026J\\\"\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\026J\\\"\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68ddb5ea60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68ddb5ea60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68ddb5f700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68ddb5f700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088373016320, 1613666937563492894, 0, 0, 140088373017024, 140088373016320, -1678330916591390178, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 31 (Thread 0x7f68d7755700 (LWP 28440)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=7, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 7\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d7755700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d7755700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088268117760, 1613666937563492894, 0, 0, 140088268118464, 140088268117760, -1678352353846906338, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 30 (Thread 0x7f68d8b57700 (LWP 28438)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=5, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 5\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d8b57700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d8b57700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088289097472, 1613666937563492894, 0, 0, 140088289098176, 140088289097472, -1678341907412700642, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 29 (Thread 0x7f68de560700 (LWP 28428)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=3814409, __nbytes=4007, __buf=0x7f68de55dd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68687e3110, offset=3814409, n=4007, result=0x7f68de55dd10, scratch=0x7f68de55dd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68de55dd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68687e3110, footer=..., options=..., handle=..., contents=contents@entry=0x7f68de55dd10, buf=buf@entry=0x7f68de55dd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68de55f150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\236\\305t\\276\\343\\273\\324\\r\\367\\221\\v\\270e\\\"\\257\u01f9\\312\\004\\266\\001\\000\\000\\000\\000\\000\\000\\000\\371\ufffd\\231R9\\233\\025\u06ff\\245\\240:\\b\\262\\243\\070i\\022\\275\\364P\\037\\022\\204\\313\\335v\\322_E\\206\\025\\204}6e\\301\\355\\064\\214\\t\\320\\371\\036\\374\\065\\037P\\000\\256\\343\\256\\361=g\\341M\\354\\277\\067\\352\\367M)\\312E(\\372\\004\\213s9p\\260\\020&\\373\\300\\305\\067{\\326:jz\\207\\232\\352Iq>\\264\\374\\313\\345\\071+\\264o~^=W\\244\\025\\346\\272}\\027\\vX\\204\\333\\346?\\312\\067\\022l\\342\\362B\\372\\273\\021\\200\\200\\315\\t8]\\307q\\225\\237\\020U\\305x\\222\\236Sx\\300\\037\\va\\a\\b\ufffd\\207\\204\\364\\241\\200Y\\037i\\366\\310\\004\\261\\037\\273\\223rI\\016\\cC\\325\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68de55f150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68de55f270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6868488bd0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68de55f4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\364U\\336h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\370U\\336h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\364U\\336h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68de55f2a0 \"\\205\\020\ufffd\\222\\205\\322\\005\\270\\223\\221\\277\\t\\211\\350\\350\\001\\200\\366U\\336h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\222\\205\\322\\005\\270\\223\\221\\277\\t\\211\\350\\350\\001\\200\\366U\\336h\\177\\000\\000 \\363U\\336h\\177\\000\\000\\000\\363U\\336h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 3814409, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f686954827e \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68684890c0, read_options=..., key=..., handle_context=0x7f68de55f6d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a4073690, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68de55f510 \"\\236\ufffd\\204\\335\\061\\063S\\031_\\206\\270v\\030\\353\\242\\334Y'\\345m\\001\\327&\\003\\n\", buf_size_ = 32, key_size_ = 0, space_ = \"\\236\ufffd\\204\\335\\061\\063S\\031_\\206\\270v\\030\\353\\242\\334Y'\\345m\\001\\327&\\003\\n\\000\\000\\000&f\", <incomplete sequence \\333>}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6869548278 \"\\211\\350\\350\\001\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6869542d50 \"\", restarts_ = 389023, num_restarts_ = 16750, current_ = 21785, restart_index_ = 951, key_ = {key_ = 0x7f68de55f460 \"\\236\\305vS\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\236\\305vS\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\364U\\336h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6869548278 \"\\211\\350\\350\\001\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68de55f6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6868488f70\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68de55fa60, status=status@entry=0x7f68de55fa70, merge_context=merge_context@entry=0x7f68de55f810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68de55fa60, merge_operator = 0x0, merge_context = 0x7f68de55f810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 557, start_index_in_curr_level_ = 557, user_key_ = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c9748\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68de55fa60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68de560650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68de55f8c8 \"\\034\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", kstart_ = 0x7f68de55f8c9 \"\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\", end_ = 0x7f68de55f8e5 \"&fR\\333Dk\\t\", space_ = \"\\034\\236\\305vR\\257i\\fI\\304\\024U\\350$t0\\206\\020\\r\\r\\311\\002\\235\\256\\021\\n\\000\\000\\000&fR\\333Dk\\t\\000\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\244h\\177\\000\\000\\260\\a\", '\\000' <repeats 14 times>, \"\\250\\a\\000\\000\\000\\000\\000\\000\\300\\tV\\336h\\177\\000\\000\\000\\aV\\336h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\006\\252!\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\006\\252!\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68de55fa60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68de55fa60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68de560700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68de560700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088383506176, 1613666937563492894, 0, 0, 140088383506880, 140088383506176, -1678337239320120802, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 28 (Thread 0x7f68def61700 (LWP 28427)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=58310206, __nbytes=4007, __buf=0x7f68def5ed40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6840790b90, offset=58310206, n=4007, result=0x7f68def5ed10, scratch=0x7f68def5ed40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68def5ed40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6840790b90, footer=..., options=..., handle=..., contents=contents@entry=0x7f68def5ed10, buf=buf@entry=0x7f68def5ed40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68def60150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\005w\\202\\\"O\\253\\001\\334\\321\\324\\332\\346\\374\\277\\334BcS\ufffd\\205\\001\\000\\000\\000\\000\\000\\000\\000\\327\\f\\b\\032\\037@\\210(\\264\\210\\364i\\277\\036g\\335)!\ufffd\\236cPI\\211\\236b\\354Or+\\247^\\261\\327x\\360X\\362aP\\376\\000g\\357\\377\\240\\201;\\\"\\020++;\\247\\242\\354Bvi\\v$\\224\\002\\301\\376\\216+Q.\u013e\\033B^\\274l\\277\\313\\004\\276Q\\\"\\247\\210s\u06bb\ufffd\\220\\024\\244\\331\u01f5\\212\\310B\\375\\374\\206\\233\\\\204k\\260\\006\\270\\062\\316\\000\\256\\220\\030\\243\\311P\\262~%9\\242>w4\\037\ufffd\\216\\204\\304e\\340\\374!\\005\\230\\201b`+\\375\\224\\017e\\305\u0629x\\027q\\203\\355\\031\\337\\360\\247\\366\ufffd\\231b\\373r\\273\\033\\245D/\\340Jdg\\327s\\225\\036\\061\\277\\375\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68def60150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68def60270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6840004b60, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68def604b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\004\\366\\336h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\b\\366\\336h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\004\\366\\336h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68def602a0 \"\\205\\020\\251\\222\\205\\322\\005\\263\\223\\221\\277\\t\\276\\374\\346\\033\\200\\006\\366\\336h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\251\\222\\205\\322\\005\\263\\223\\221\\277\\t\\276\\374\\346\\033\\200\\006\\366\\336h\\177\\000\\000 \\003\\366\\336h\\177\\000\\000\\000\\003\\366\\336h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 58310206, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6841898a71 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6840004fc0, read_options=..., key=..., handle_context=0x7f68def606d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f688406a880, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68def60510 \"\\005w\\214\ufffd\\233\\220\\356\\251X\\211_\\t\\277\\243\\372\\210:\\273\\363\\346\\001\\347\\373\\004\\n\", buf_size_ = 32, key_size_ = 0, space_ = \"\\005w\\214\ufffd\\233\\220\\356\\251X\\211_\\t\\277\\243\\372\\210:\\273\\363\\346\\001\\347\\373\\004\\n\\000\\000\\000J^\\345t\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6841898a6b \"\\276\\374\\346\\033\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68418461c0 \"\", restarts_ = 388915, num_restarts_ = 16749, current_ = 338076, restart_index_ = 14551, key_ = {key_ = 0x7f68def60460 \"\\005w\\203\\315\\002\\377\\377\\377\\377\\377\\377\\377\\022\\274\\262\\274\\234b\\232U\\001\", buf_size_ = 32, key_size_ = 12, space_ = \"\\005w\\203\\315\\002\\377\\377\\377\\377\\377\\377\\377\\022\\274\\262\\274\\234b\\232U\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6841898a6b \"\\276\\374\\346\\033\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68def606d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6841eac990\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68def60a60, status=status@entry=0x7f68def60a70, merge_context=merge_context@entry=0x7f68def60810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68def60a60, merge_operator = 0x0, merge_context = 0x7f68def60810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 13, start_index_in_curr_level_ = 13, user_key_ = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c2048\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68def60a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68def61650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68def608c8 \"\\034\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", kstart_ = 0x7f68def608c9 \"\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\", end_ = 0x7f68def608e5 \"J^\\345t(E\\225\\365\\002\\235\\256\\021\\n\", space_ = \"\\034\\005w\\202\\277\u026d\\006\\220\\026\\232G\\262\\342\\277\\336m\\242Y\\273\\227\\002\\235\\256\\021\\n\\000\\000\\000J^\\345t(E\\225\\365\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\204h\\177\\000\\000\\260\\a\", '\\000' <repeats 14 times>, \"\\250\\a\\000\\000\\000\\000\\000\\000\\300\\031\\366\\336h\\177\\000\\000\\000\\027\\366\\336h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\366\\t!\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\366\\t!\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68def60a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68def60a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68def61700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68def61700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088393996032, 1613666937563492894, 0, 0, 140088393996736, 140088393996032, -1678338066638196194, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 27 (Thread 0x7f68e496a700 (LWP 28418)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=346818, __nbytes=4131, __buf=0x7f68e4967d50, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68540190e0, offset=346818, n=4131, result=0x7f68e4967d20, scratch=0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4131\nptr = 0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68540190e0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e4967d20, buf=buf@entry=0x7f68e4967d50 \"`$\\366\\200\\277\\031w\\206\\001\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e4969160, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"`$\\366\\200\\277\\031w\\206\\001\\000\\000\\000\\000\\000\\000\\000n\\317\\344\\260\\032m\\343\\237Q\\370U#n\\221]\\360v\\230t\\310\\001\\276\ufffd\\223\ufffd\\210\\253!\\276 \\343C_1\\232\\220\\t\\233\\350~Z\\t\\274\\071\u02efu\\362\\237\\251\\355 \\315T\\366n\\354\\064\\327\\273<\\205X}a\\177\\256D\\016\\272\\030\\221\\303\\361\\033\\fL\\250c\\214\\337\\347@G\\266\\216{\\031\\374TI:G&oE~\\020\\260\\257&\\324\\b\\242\\211\\375Y6!(\\372\\255\\373\ufffd\\214\ufffd\\246@\\366\\343\\036~\\277eua\\023\\032@n\\277J\\226\\243\\062}e\\251\\261`\\025\\351ptF\\365\\260\\036\\364A\\005{U\\213\\232\\271\\366SS\\016\\266\\223s\\261\\362(H]\\004\\371\\307\\373e\\027\\355\ufffd\\200.g\\021\\004/\ufffd\\213G\\030\\n\\355gGt\\244\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e4969160, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e4969280, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = false, heap_allocated = false, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f685400acf0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e49694c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\272A|h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000\ufffd\\230\\226\\344h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000\\020\\224\\226\\344h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e49692b0 \"\\205\\020\\267\\214\\205\\322\\005\\377\\275\\220\\277\\t\\302\\225\\025\", size_ = 15}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\267\\214\\205\\322\\005\\377\\275\\220\\277\\t\\302\\225\\025\\000\\220\\226\\226\\344h\\177\\000\\000\\060\\223\\226\\344h\\177\\000\\000\\020\\223\\226\\344h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 346818, size_ = 4126, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6854b85fbc \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f685400b160, read_options=..., key=..., handle_context=0x7f68e49696e0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f687c3f48e0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e4969520 \"\\277\\031w\\206\\001\", buf_size_ = 32, key_size_ = 0, space_ = \"\\277\\031w\\206\\001\\000\\000\\000\\000\\000\\000\\000\\065\\267 \\220\\340\\347\\003|h\\177\\000\\000\\000\\001\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6854b85fb7 \"\\302\\225\\025\\236 \", size_ = 5}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0xc00200000, arg2 = 0x600000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6854b85430 \"\", restarts_ = 612956, num_restarts_ = 14508, current_ = 2914, restart_index_ = 70, key_ = {key_ = 0x7f687c41ba60 \"test_data/dup545796.data,0\\001\\231\\276#\\001\", buf_size_ = 34, key_size_ = 34, space_ = \"\\260\\224\\226\\344h\\177\\000\\000\\031\\061J\\000\\000\\000\\000\\000\\300\\224\\226\\344h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6854b85fb7 \"\\302\\225\\025\\236 \", size_ = 5}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e49696e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6854007730\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e4969a70, status=status@entry=0x7f68e4969a80, merge_context=merge_context@entry=0x7f68e4969820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 34}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}, value_found = 0x0, value = 0x7f68e4969a70, merge_operator = 0x0, merge_context = 0x7f68e4969820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 438, start_index_in_curr_level_ = 438, user_key_ = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}, ikey_ = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 34}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", size_ = 26}\nf = 0x7f68484c7d40\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e4969a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e496a650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e49698d8 \"\\\"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e49698d9 \"test_data/dup545795.data,0\\002\\235\\256\\021\\n\", end_ = 0x7f68e49698fb \"\", space_ = \"\\\"test_data/dup545795.data,0\\002\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377\\200\\232\\226\\344h\\177\\000\\000\\377\\377\\377\\377h\\177\\000\\000\\200\\232\\226\\344h\\177\\000\\000\\200\\232\\226\\344h\\177\\000\\000 \\000\\000|h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000K\\000\\000\\000\\000\\000\\000\\000Afi\\033\\227\\200\\377\\377\\006\\000\\000\\000h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\061\", '\\000' <repeats 15 times>, \"[\", '\\000' <repeats 23 times>, \"n\\000\\000\\000w\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e4969a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e4969a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f4f2 in store::Store::get(std::string const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ee52 in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e496a700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e496a700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088488404736, 1613666937563492894, 0, 0, 140088488405440, 140088488404736, -1678386175103749602, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 26 (Thread 0x7f68dc75d700 (LWP 28431)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=14377810, __nbytes=4008, __buf=0x7f68dc75ad40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6840d66180, offset=14377810, n=4008, result=0x7f68dc75ad10, scratch=0x7f68dc75ad40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68dc75ad40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6840d66180, footer=..., options=..., handle=..., contents=contents@entry=0x7f68dc75ad10, buf=buf@entry=0x7f68dc75ad40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68dc75c150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002`\\324i\\232\u04bd.4\\242KZ]\\327X\\341\\207)\\253\\203\\026\\001\\350\ufffd\\212\\t\\000\\000\\000\\004\\323\ufffd\\235)\\314]LHM\\345\\347\\256U\\317\\065\\330#\\305\\t\\017,\\005\\322A\\302\\200$\\220Z\\036j\\016\\272cz\\320\\v\\306\ufffd\\227\u0373\\n\\244\\255{\\341i\\311\\r*8\\342\\r\\357\\366\\020E\\317'\\304s\\364o\u01be\\003\\377J\\271\\243\\277\\200\\370\\255Q=\\341pYP\\206\ufffd\\232ox\\377\\267\\215\\032+\\v\\277\\234`}\\231\\217\\a\\302\\321)\\330\\331\\b\\243(\\224\\061\\255\\316\\330\\332\\031\\213\\232\\247\\071|\\022\u01ae;\\000\\003\\302\\301\\024\\061\\310\\332Zv{\\226\\255v\\233w|\\030\\210\\064\\337h\\253\\002Z\\\\351\\242\\346\\200d\\255\\236}\\370\\071:G\\302:\\016\\373\\302\\020\\262p\\v>LV\\356\\321\u0675\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dc75c150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dc75c270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6841eabe30, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68dc75c4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\304u\\334h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\310u\\334h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\304u\\334h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68dc75c2a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\227\\212\\221\\277\\t\\322\\306\\355\\006\\200\\306u\\334h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\227\\212\\221\\277\\t\\322\\306\\355\\006\\200\\306u\\334h\\177\\000\\000 \\303u\\334h\\177\\000\\000\\000\\303u\\334h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 14377810, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f684170bb86 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6841eac2a0, read_options=..., key=..., handle_context=0x7f68dc75c6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68b4001ed0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68dc75c510 \"`\\324l@;\\241\\315A\\033\\352F\\205\\235\\234[\\022\\027PM\\305\\001A\\261d\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"`\\324l@;\\241\\315A\\033\\352F\\205\\235\\234[\\022\\027PM\\305\\001A\\261d\\t\\000\\000\\000C\\316\\005r\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f684170bb80 \"\\322\\306\\355\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68416f7900 \"\", restarts_ = 391294, num_restarts_ = 16749, current_ = 82545, restart_index_ = 3587, key_ = {key_ = 0x7f68dc75c460 \"`\\324k.\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"`\\324k.\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\304u\\334h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f684170bb80 \"\\322\\306\\355\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68dc75c6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6840efaa80\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68dc75ca60, status=status@entry=0x7f68dc75ca70, merge_context=merge_context@entry=0x7f68dc75c810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68dc75ca60, merge_operator = 0x0, merge_context = 0x7f68dc75c810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 251, start_index_in_curr_level_ = 251, user_key_ = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c5458\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dc75ca60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dc75d650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68dc75c8c8 \"\\034`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", kstart_ = 0x7f68dc75c8c9 \"`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\", end_ = 0x7f68dc75c8e5 \"C\\316\\005r\\216\\235\\354\\064\\002\\235\\256\\021\\n\", space_ = \"\\034`\\324k\\030\\333K\\314Y\\322\u04e1G\\326Pa\\254OO\ufffd\\211\\002\\235\\256\\021\\n\\000\\000\\000C\\316\\005r\\216\\235\\354\\064\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\264h\\177\\000\\000\\220\\b\", '\\000' <repeats 14 times>, \"\\210\\b\\000\\000\\000\\000\\000\\000\\300\\331u\\334h\\177\\000\\000\\000\\327u\\334h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A6\\212#\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\066\\212#\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dc75ca60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68dc75ca60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68dc75d700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68dc75d700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088352036608, 1613666937563492894, 0, 0, 140088352037312, 140088352036608, -1678332566932573666, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 25 (Thread 0x7f68e0363700 (LWP 28425)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=26932090, __nbytes=4008, __buf=0x7f68e0360d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68344f0ca0, offset=26932090, n=4008, result=0x7f68e0360d10, scratch=0x7f68e0360d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68e0360d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68344f0ca0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e0360d10, buf=buf@entry=0x7f68e0360d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e0362150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\u02ba\\377\\ns\\as\\250\\211X[\\261\\216\\277\\260,\\022U3\\266\\001F\\231=\\t\\000\\000\\000\\350B\\226\\Vt\\213G\\206\\000]\\301\\263\\261\\226\\253\\226\\246\\217UN\\235\\336\\024\\002o9\\347\\211.u\\354\\330X=U\\222\\200\\226\\203!kc\\332`_[#\\355\\355+\\n\\362\\304\\355\\253a\\370\\303\\ad\\222\\003\\277\\016\\251w\\332<\\307\\333a\\216})\\236\\036\\234\\316\ufffd\\211\u0760P\\315\\a~\\365\\336\\346^}\\241WB\\320\\323\\335m\\215]V\ufffd\\222 c\\231\\061sM\\344\\212\\365\\066\ufffd\\232\\r,\\022\u036bG%\\265\\214\\322\\342\\241\\367\\030\\210\\354\\026\\357oz\\346<O/.,K{cb\\263\\001u\\332]\\222<\\223`7\\375\\203\\311\\305 \\r@\\234~\\347\\303\\034~\\006\\070\\347Y\\232\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0362150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0362270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68349de5b0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e03624b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`$6\\340h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311(6\\340h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000$6\\340h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e03622a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\223\\212\\221\\277\\t\\372\\346\\353\\f\\200&6\\340h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\223\\212\\221\\277\\t\\372\\346\\353\\f\\200&6\\340h\\177\\000\\000 #6\\340h\\177\\000\\000\\000#6\\340h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 26932090, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835f9faae \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68349dea30, read_options=..., key=..., handle_context=0x7f68e03626d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f6888093d70, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e0362510 \"\u02bb\\004\\241\\037-\\262/\\037\\252@\\b\\221\\277\\256-\\253\\367\\232\\220\\001%\\261\\330\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\u02bb\\004\\241\\037-\\262/\\037\\252@\\b\\221\\277\\256-\\253\\367\\232\\220\\001%\\261\\330\\t\\000\\000\\000\\024c@?\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835f9faa8 \"\\372\\346\\353\\f\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835f79740 \"\", restarts_ = 391621, num_restarts_ = 16749, current_ = 156505, restart_index_ = 6720, key_ = {key_ = 0x7f68e0362460 \"\u02bb\\004{\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\u02bb\\004{\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260$6\\340h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835f9faa8 \"\\372\\346\\353\\f\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e03626d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68349de950\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e0362a60, status=status@entry=0x7f68e0362a70, merge_context=merge_context@entry=0x7f68e0362810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e0362a60, merge_operator = 0x0, merge_context = 0x7f68e0362810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 669, start_index_in_curr_level_ = 669, user_key_ = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484cafc8\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0362a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0363650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e03628c8 \"\\034\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e03628c9 \"\u02bb\\004`_\\004\\223*w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\", end_ = 0x7f68e03628e5 \"\\024c@?y\\244\\372\\342\\002\\235\\256\\021\\n\", space_ = \"\\034\u02bb\\004`_\\004\\223_w\\360\\300\\356T\\310z\\330\\022\\316+z\\002\\235\\256\\021\\n\\000\\000\\000\\024c@?y\\244\\372\\342\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\210h\\177\\000\\000\\360\\a\", '\\000' <repeats 14 times>, \"\\340\\a\\000\\000\\000\\000\\000\\000\\300\\071\\066\\340h\\177\\000\\000\\000\\067\\066\\340h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\326\\311\\037\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\326\\311\\037\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0362a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e0362a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e0363700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e0363700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088414975744, 1613666937563492894, 0, 0, 140088414976448, 140088414975744, -1678393590901657058, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 24 (Thread 0x7f68e1765700 (LWP 28423)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=55330114, __nbytes=4008, __buf=0x7f68e1762d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6835202360, offset=55330114, n=4008, result=0x7f68e1762d10, scratch=0x7f68e1762d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68e1762d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6835202360, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e1762d10, buf=buf@entry=0x7f68e1762d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e1764150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\312}e\\243\\030'\\207\\017YZ\\244\\034F\\rS\\246\\003\\354P\\333\\001\\000\\000\\000\\000\\000\\000\\000\\362\\250+\\267Ld\\231\\206P\\243\\071\\005\\a\\253\\372\\220\\342\\347M\\255`~\\311\\065$\\247\\355\\004\\a\\357I\\242\\263\\177\\263+\ufffd\\227\\223\\314\\325\\372h\\363\\355ag\\205|b\\200\\030\\302\\060%\\030\\061oD\\221\\201\\nV\\231\ufffd\\237SJ\\317r\\304N\\212W\\360\\355/\\202\\265\\205\\366\\242\\272e\\\\\\033\\353$\\310&\\227\\\\Z\\272\\227\\001\\374\\363\\322\u04b0{\\\"Z\\024\\325\\034\\\"P\\002\\242\\324\\363\\272]{Y\\foo\\222\\365\\314\\356\\334\\343\\027\\274\\361\\\\<\\341\\065\\345|6\\331\\301\\224\\375\\245\\227\\021\\347\\361\\261\\244\\037\\367\\002IU\\353RW\\006J[\\017{f\\246P\\031u\\236\\201\\357\\254\\017V\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e1764150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e1764270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68344eff00, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e17644b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`Dv\\341h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311Hv\\341h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000Dv\\341h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e17642a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\213\\212\\221\\277\\t\\302\\212\\261\\032\\200Fv\\341h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\213\\212\\221\\277\\t\\302\\212\\261\\032\\200Fv\\341h\\177\\000\\000 Cv\\341h\\177\\000\\000\\000Cv\\341h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 55330114, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835f5854b \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68344f03f0, read_options=..., key=..., handle_context=0x7f68e17646d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f6898064e50, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e1764510 \"\\312}h\\v\\237\ufffd\\232\\326\\003bx\\277$k\\343v\\250Z\\275\\b\\001\ufffd\\206f\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\312}h\\v\\237\ufffd\\232\\326\\003bx\\277$k\\343v\\250Z\\275\\b\\001\ufffd\\206f\\t\\000\\000\\000;\\340Y\\223\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835f58545 \"\\302\\212\\261\\032\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835f09ba0 \"\", restarts_ = 390618, num_restarts_ = 16749, current_ = 321942, restart_index_ = 13807, key_ = {key_ = 0x7f68e1764460 \"\\312}g\\027\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\312}g\\027\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260Dv\\341h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835f58545 \"\\302\\212\\261\\032\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e17646d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68344f02a0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e1764a60, status=status@entry=0x7f68e1764a70, merge_context=merge_context@entry=0x7f68e1764810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e1764a60, merge_operator = 0x0, merge_context = 0x7f68e1764810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 668, start_index_in_curr_level_ = 668, user_key_ = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484caf90\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e1764a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e1765650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e17648c8 \"\\034\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", kstart_ = 0x7f68e17648c9 \"\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\", end_ = 0x7f68e17648e5 \";\\340Y\\223\\365\\304\\360v\\002\\235\\256\\021\\n\", space_ = \"\\034\\312}g\\026\\244\\323\\004\\220\\302J\\350Y\\322b\\301H\\036b\\342 \\002\\235\\256\\021\\n\\000\\000\\000;\\340Y\\223\\365\\304\\360v\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\230h\\177\\000\\000\\060\\a\", '\\000' <repeats 14 times>, \"\\034\\a\\000\\000\\000\\000\\000\\000\\300Yv\\341h\\177\\000\\000\\000Wv\\341h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\266\\211\\036\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\266\\211\\036\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e1764a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e1764a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e1765700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e1765700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088435955456, 1613666937563492894, 0, 0, 140088435956160, 140088435955456, -1678391944855440866, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 23 (Thread 0x7f68d8156700 (LWP 28439)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=33235625, __nbytes=4008, __buf=0x7f68d81528a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68501751d0, offset=33235625, n=4008, result=0x7f68d8152870, scratch=0x7f68d81528a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d81528a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68501751d0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d8152870, buf=buf@entry=0x7f68d81528a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d8156628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d8153cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\345\\244s\\211\\307\\346\\362Xf\\212t\\232 \\303\\342\\220\\373\\343\\023\\240\\001\\000\\000\\000\\000\\000\\000\\000!X$\\034JfQ|e\\034<N\\367\\000C\\373\\027^\\340cZ\\023\\360\\065f*Jo]`\\347\\027\u0728\\003B\\355X\\333\\027\\257g\\024r\\027&sT<\\241\\242\u05e9\\341\\300*\\252\\217\\244\\222\\234p\\025y\\301\\254n\\f\\266\\272\\313\\030\ufffd\\217\\v\\363\\202\\302\\235\\017\\264\\252\\202\\360\uc834F7^\\200\\307\\364\\233k\\320\\024\\265\\325ql\\251\\033\\237\\065\\351\\066\\321\\331\\302\\065\\270h\\263pI\\267\\314\\327hY\\347\\251@\ufffd\\221\\372vNH\\376\u07e8\\327\\a*\\260\\315'\\220\\244-\u0623\\177\\366x&L\\347\\215x `\\240$\\221?j\\324|\\370A\u03f5\\322k\\355\\354\\234\\364\\065\\272\\035;|\u0168\\030\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d8153cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d8153d60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6850555e10, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 33235625, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68525f7b70 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f683c3536b0) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f68525f7b6a \"\\251\\305\\354\\017\\243\\037\", size_ = 6}\nthis = 0x7f683c3536b0\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f683c3536b0) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f683c48d800) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f683c48d7b0) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f683c85d600) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f683c85d5a0) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168886022, earliest_snapshot=earliest_snapshot@entry=168886022, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d81544f8: 0, input=input@entry=0x7f683c85d5a0, compact=compact@entry=0x7f683c85e950, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f683c353890 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\001\", size_ = 28}\nvalue = {data_ = 0x7f683c3682a9 \"\\237\\230Wu\\346g\\366\\367\\336t\\244\\f\\242,\u0638\\024G\\217`\\224\\223\u0173|e\\037\\357Fr\\200\\273\\264j\\241\\257\", size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168886022\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d8154228 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\", buf_size_ = 32, key_size_ = 20, space_ = \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\000\\000\\000\\000p\\267\\205<h\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f683c353890 \"\\345\\244s\\202d{a\\341\\303/\\001w+\ufffd\\200Z\\235r\\036y\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 849\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d8154268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000x\\270\\205<h\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000p\\267\\205<h\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f683c85e950, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168886022\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1970 Base level 2, seek compaction:0, inputs: [11262(64MB)], [9953(64MB) 9954(64MB) 9955(64MB) 9956(64MB) 9957(64MB) 9958(64MB) 9959(64MB) 9996(38MB) 8756(64MB) 8757(64MB)]\\000\\062\\066(43MB)]\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f683c85d5a0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f683c85b770\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168886022\ntmp = {buffer = \"files[0 11 117 807 0 0 0]\\000\\025\\330h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310H\\025\\330h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310H\\025\\330h\\177\\000\\000\\310H\", <incomplete sequence \\330>}\nis_snapshot_supported = true\nstart_micros = 1413982265885092\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d815522f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d81553b0) at db/db_impl.cc:2321\ncompact = 0x7f683c85e950\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f683d24e160\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d8155050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f683c858430, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"9\\250GT\\000\\000\\000\\000O\\201\\r\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.01 slots available 7\\000\\000\\060 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d8155bc8 \"\", aligned_alloc_ptr_ = 0x7f68d81557c8 \"9\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d81553c8, 0x7f68d81555c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=6, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 6\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d8156700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d8156700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088278607616, 1613666937563492894, 0, 0, 140088278608320, 140088278607616, -1678341084389592546, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 22 (Thread 0x7f68dbd5c700 (LWP 28432)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=0, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 0\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68dbd5c700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68dbd5c700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088341546752, 1613666937563492894, 0, 0, 140088341547456, 140088341546752, -1678344933754031586, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 21 (Thread 0x7f68e2b67700 (LWP 28421)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=35783671, __nbytes=5300, __buf=0x7f68b80f09c0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6868000bf0, offset=35783671, n=5300, result=0x7f68e2b660b0, scratch=0x7f68b80f09c0 \"\\370\\a\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 5300\nptr = 0x7f68b80f09c0 \"\\370\\a\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=file@entry=0x7f6868000bf0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e2b660b0, buf=buf@entry=0x7f68b80f09c0 \"\\370\\a\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004c0009 in rocksdb::ReadAndDecompress (file=0x7f6868000bf0, footer=..., options=..., handle=..., result=0x7f68e2b66160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:336\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = 0x7f68b80f09c0 \"\\370\\a\"\n#5 0x00000000004c018b in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2b66160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:362\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2b66280, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = false, heap_allocated = false, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f686876fd70, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e2b664c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"\\340@\\000\\270h\\177\\000\\000\\033\\000\\000\\000\\000\\000\\000\\000\\331h\\266\\342h\\177\\000\\000\\033\\000\\000\\000\\000\\000\\000\\000\\020d\\266\\342h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e2b662b0 \"\\205\\020\\246\\216\\205\\322\\005\\227\\210\\221\\277\\t\\367\\207\\210\\021\\220f\\266\\342h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\246\\216\\205\\322\\005\\227\\210\\221\\277\\t\\367\\207\\210\\021\\220f\\266\\342h\\177\\000\\000\\060c\\266\\342h\\177\\000\\000\\020c\\266\\342h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 35783671, size_ = 5295, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6869973b8e \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6868770150, read_options=..., key=..., handle_context=0x7f68e2b666e0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x0, arg2 = 0x23802a8, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e2b66520 \"\\273\\001%\\337\\001\", buf_size_ = 32, key_size_ = 0, space_ = \"\\273\\001%\\337\\001\\000\\000\\000\\000\\000\\000\\000\\262j\\217d\\256\\213\\033\\270h\\177\\000\\000\\000\\001\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6869973b88 \"\\367\\207\\210\\021\\257)\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0xc00200000, arg2 = 0x700000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6869922070 \"\", restarts_ = 628376, num_restarts_ = 14517, current_ = 334578, restart_index_ = 7728, key_ = {key_ = 0x7f68b80040e0 \"test_data/dup4299628.data,0\\001\\026\\312\\371\\b\", buf_size_ = 35, key_size_ = 35, space_ = \"\\260d\\266\\342h\\177\\000\\000\\031\\061J\\000\\000\\000\\000\\000\\300d\\266\\342h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6869973b88 \"\\367\\207\\210\\021\\257)\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e2b666e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6868008620\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e2b66a70, status=status@entry=0x7f68e2b66a80, merge_context=merge_context@entry=0x7f68e2b66820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 35}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}, value_found = 0x0, value = 0x7f68e2b66a70, merge_operator = 0x0, merge_context = 0x7f68e2b66820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 429, start_index_in_curr_level_ = 429, user_key_ = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}, ikey_ = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 35}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", size_ = 27}\nf = 0x7f68484c7b48\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2b66a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2b67650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e2b668d8 \"#test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e2b668d9 \"test_data/dup4299628.data,0\\002\\235\\256\\021\\n\", end_ = 0x7f68e2b668fc \"\", space_ = \"#test_data/dup4299628.data,0\\002\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377\\200j\\266\\342h\\177\\000\\000\\377\\377\\377\\377h\\177\\000\\000\\200j\\266\\342h\\177\\000\\000\\200j\\266\\342h\\177\\000\\000 \\000\\000\\270h\\177\\000\\000\\032\\000\\000\\000\\000\\000\\000\\000M\\000\\000\\000\\000\\000\\000\\000A\\226I\\035\\227\\200\\377\\377\\006\\000\\000\\000h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\061\", '\\000' <repeats 15 times>, \"[\", '\\000' <repeats 23 times>, \"n\\000\\000\\000w\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2b66a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e2b66a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f4f2 in store::Store::get(std::string const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ee52 in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e2b67700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e2b67700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088456935168, 1613666937563492894, 0, 0, 140088456935872, 140088456935168, -1678399090607279586, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 20 (Thread 0x7f68d9558700 (LWP 28437)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=65465530, __nbytes=4008, __buf=0x7f68d95548a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68512d1190, offset=65465530, n=4008, result=0x7f68d9554870, scratch=0x7f68d95548a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d95548a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68512d1190, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d9554870, buf=buf@entry=0x7f68d95548a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d9558628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d9555cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\271\\\"=\\320jx!3\\203\ufffd\\225\\216\u07a7\\225w\\005\\372\\035_\\001\\000\\000\\000\\000\\000\\000\\000\\377\\033\\207O4\\214\\021\\227\\325<\\242,#\\371\\300\\004\\n\\340\\322\\020\ubf2a:a\ufffd\\202\\nZ\\a\\a3J\\233\\~\\307Z\\310\\377/\\273{u\\363^\\234\\032\\202\\316\\315!\\306\ufffd\\233\\253q\\245\\320\\361\\214\\001\\256\\356i\\267\\f\\373G2\\v@\\270\\222\\245L\u046d\\351\\257\\342\\021\\006\u0566$\\322'/_\\206^q\\351\u03e5\\366\\025\\065\u0133\\314\\001\\254\\v\\203u\\263\ufffd\\205K\\211*jf_!\\363\\002\\021\\022\\342\\254R\\\"\\346>\\353\\276\\366d\\310E6\\276\\t\\265\\177\\355\\362\\214\\303\\017\\037\\220\u0320\\334z\\022\\313/-\\314\\001iqz\\a\\023\\020\\214\\023\\345i\\336^TzC\\v\\004\\066.\\341\\t1WSUy\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d9555cb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d9555d60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f685080b550, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 65465530, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68521c6971 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f6844da2190) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f68521c696b \"\\272\ufffd\\233\\037\\243\\037\", size_ = 6}\nthis = 0x7f6844da2190\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f6844da2190) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f6844066080) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f6844066030) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f68442b3400) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f68442b33a0) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168867389, earliest_snapshot=earliest_snapshot@entry=168867389, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d95564f8: 0, input=input@entry=0x7f68442b33a0, compact=compact@entry=0x7f6844346de0, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f6844de9af0 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\001\", size_ = 28}\nvalue = {data_ = 0x7f6844de975a \"n\\004,\\004\\377\\301\\334\ufffd\\232\ufffd\\251w5\\232\\210\\327P_\u03f3\\331\\177R\\236C\\326\\020\\bc\\236\\276\\252\\237\\245\\260|>e\\320(\\005\\v\\234\\337C\\206(\\fH\\304Yt8\\370\\276\\032\\362^\\222\\376\\335\\337\\375u\\301\\064\\257 A\\a\\365U\\370\\272\\034\\326\\346\\373s0\\261\\016\\221V\\235\\064\\016\\364\\210\\062q\\312\\023,\\346\\346\\346v\\231\\316\\331\\314|\\270\\\\263\\207U)}\\231\\253i\\222\\067\\233\\235\\060\\336<\\322dE\\204u\\017@\\300\\016\\070\\227v\\313\\061\\325\\240\\352\\322\\002c\\330\\\\214@dU\\241\\230\\224#\\aAz\\273\\022\\253r\\241\\037\\344\\260\\342\\247-~+\\343\ufffd\\220EJ\\035\\016\\306\\364Z\\306^\\032\\262\\267\\333c\\005\\236\\366M\\342\\317Wu\\203\\217\\266\", size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168867389\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d9556228 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\", buf_size_ = 32, key_size_ = 20, space_ = \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\000\\000\\000\\000\\000\\065+Dh\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6844de9af0 \"\\271\\\"=\ufffd\\206\\352\\001\\200\\024\\260\\357\\312\\033.\\225\\220D\\n\\336\\032\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 448\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d9556268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000\\b6+Dh\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000\\065+Dh\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f6844346de0, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168867389\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1967 Base level 2, seek compaction:0, inputs: [11272(64MB)], [9786(64MB) 9787(64MB) 9788(64MB) 9789(64MB) 9790(64MB) 9791(64MB) 9792(64MB) 10581(64MB) 10582(64MB)]\\000mU\\331h\\177\\000\\000\\060mU\\331h\\177\\000\\000\\037\\302a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f68442b33a0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f68442b3500\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 140088299580392, type = 80}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168867389\ntmp = {buffer = \"files[0 14 113 807 0 0 0]\\000U\\331h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310hU\\331h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310hU\\331h\\177\\000\\000\\310h\", <incomplete sequence \\331>}\nis_snapshot_supported = true\nstart_micros = 1413982261964161\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d955722f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d95573b0) at db/db_impl.cc:2321\ncompact = 0x7f6844346de0\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6844002ac0\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d9557050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x7f6878603c30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f6844821b30, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"5\\250GT\\000\\000\\000\\000+\\266\\016\\000\\000\\000\\000\\000[default] Compacting 1@2 + 9@3 files, score 1.01 slots available 7\\000\\000\\000\\066 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d9557bc8 \"\", aligned_alloc_ptr_ = 0x7f68d95577c8 \"5\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d95573c8, 0x7f68d95575c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=4, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 4\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d9558700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d9558700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088299587328, 1613666937563492894, 0, 0, 140088299588032, 140088299587328, -1678339434048409058, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 19 (Thread 0x7f68e3f69700 (LWP 28419)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=56865799, __nbytes=4006, __buf=0x7f68e3f66d50, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6848322700, offset=56865799, n=4006, result=0x7f68e3f66d20, scratch=0x7f68e3f66d50 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68e3f66d50 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6848322700, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e3f66d20, buf=buf@entry=0x7f68e3f66d50 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e3f68160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002s\\210\\247\\\\027\\277Tc\\v~\\031\\340>_\\277\\030\\t\\227>9\\001\\000\\000\\000\\000\\000\\000\\000\\255\\305\\021\\310?\\363\\212dA\\363\\177\\024Y\\036\\245\\071\\263\\372u]\\246\\273\\017\\062\\316\\036\\f%\\240\\255\\\"Y\\334K\\245\\211\\316(\\253\\256\\321\\327\\357V\\366?\\274\\222)\\334j\\332\u05aa\\226#\\200b\\345\\260\\033b[\\257\\305\\\"\\241\\235!\\220\\377\\261V\\300\\062\\071\\250\\b\\255:\\222\\322B\\370\u0476\\351\\324i\\255\\262d\\035\\031S\\367E\\017\\317\\070\\202\\326\\346\\364\\216\\221\\354\u077dqz\\v\\324\\331\\070/\\024VW\\373\\365\\\\244C\\275\\247\\006V_\\277\\252\\035\\252\\334\\340\\063V\\b0\\023\\251-G\\233\\234\\340$\\020\\227\\\"\\361\\247\\201\\324X\\233\\205r\\261\ufffd\\227\\026$\\037\\376\\341\\345\\255\\352\\343\\bx\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3f68160, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3f68280, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6848003fc0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e3f684c0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"p\\204\\366\\343h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\ufffd\\210\\366\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\020\\204\\366\\343h\\177\\000\\000\\220\"\nkey = {data_ = 0x7f68e3f682b0 \"\\205\\020\\272\\223\\205\\322\\005\ufffd\\222\\221\\277\\t\\207\\350\\216\\033\\220\\206\\366\\343h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\272\\223\\205\\322\\005\ufffd\\222\\221\\277\\t\\207\\350\\216\\033\\220\\206\\366\\343h\\177\\000\\000\\060\\203\\366\\343h\\177\\000\\000\\020\\203\\366\\343h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 56865799, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f684a9129a2 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6848103c50, read_options=..., key=..., handle_context=0x7f68e3f686e0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68bc00caa0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e3f68520 \"s\\210\\256\\310-}d!\\276~\\210\\300(\ufffd\\236\\017\\341\\226\u02a7\\001\", <incomplete sequence \\355>, buf_size_ = 32, key_size_ = 0, space_ = \"s\\210\\256\\310-}d!\\276~\\210\\300(\ufffd\\236\\017\\341\\226\u02a7\\001Q\\355\\000\\n\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f684a91299c \"\\207\\350\\216\\033\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x200000, arg2 = 0x700000000, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f684a8c2280 \"\", restarts_ = 389086, num_restarts_ = 16750, current_ = 329485, restart_index_ = 14191, key_ = {key_ = 0x7f68e3f68470 \"s\\210\\250\\264\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"s\\210\\250\\264\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\300\\204\\366\\343h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f684a91299c \"\\207\\350\\216\\033\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e3f686e0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6848008fe0\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e3f68a70, status=status@entry=0x7f68e3f68a80, merge_context=merge_context@entry=0x7f68e3f68820, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e3f68a70, merge_operator = 0x0, merge_context = 0x7f68e3f68820, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 300, start_index_in_curr_level_ = 300, user_key_ = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c5f10\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3f68a70, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3f69650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e3f688d8 \"\\034s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e3f688d9 \"s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\", end_ = 0x7f68e3f688f5 \"\\235\\256\\021\\n\", space_ = \"\\034s\\210\\247\\302\\036<z)G\ufffd\ufffd\\201\\257\\317\ufffd\\211\\323R\\224\\061\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\274h\\177\\000\\000P\\006\", '\\000' <repeats 14 times>, \"<\\006\\000\\000\\000\\000\\000\\000\\300\\231\\366\\343h\\177\\000\\000\\000\\227\\366\\343h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000Av\\t\\034\\227\\200\\377\\377<\\006\\000\\000\\000\\000\\000\\000\\061v\\t\\034\\227\\200\\377\\377e\\000\\000\\000\\000\\000\\000\\000\\031\\000\\000\\000\\000\\000\\000\\000I\\000\\000\\000\\000\\000\\000\\000\\003\\000\\000\\000\\000\\000\\000\\000^\", '\\000' <repeats 22 times>}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3f68a70) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e3f68a70) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f099 in dedup::Decoder::Decoder(store::StoreInterface_, std::string) ()\nNo symbol table info available.\n#17 0x000000000041ab8a in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void*) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e3f69700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e3f69700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088477914880, 1613666937563492894, 0, 0, 140088477915584, 140088477914880, -1678397444561063394, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 18 (Thread 0x7f68d9f59700 (LWP 28436)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=3, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 3\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d9f59700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d9f59700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088310077184, 1613666937563492894, 0, 0, 140088310077888, 140088310077184, -1678340261366484450, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 17 (Thread 0x7f68df962700 (LWP 28426)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=14569178, __nbytes=4006, __buf=0x7f68df95fd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f683c003240, offset=14569178, n=4006, result=0x7f68df95fd10, scratch=0x7f68df95fd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4006\nptr = 0x7f68df95fd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f683c003240, footer=..., options=..., handle=..., contents=contents@entry=0x7f68df95fd10, buf=buf@entry=0x7f68df95fd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68df961150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002R\\003#L\\216\\016\\327\\366z)\\370\\253\\212\\066wG;\\277\\370\\223\\001\\000\\000\\000\\000\\000\\000\\000\\241y\\b\\214vz\\037\\351&Shk2\\n=N\\022|\\027&\\231c%\\265G\\200W\\v\\221\\374H\\260I\\261 \\000\\333\u023c\\270\\027\\247\\252\\253\\023DPr\\351=i\\224&+ry\\271\\306\\063'\\307CRy\\367\\324\\352v%\\375B}\\200-\\375\\204\\001\\001\\353\\377\\276[\\240\\233(\\205\\023\\067\\\"DK\\203u;.\\245B1\\005@\\t\\370.|H\\253e\\343v|\\374H\\221\\214[P\\364~\\243\\252\\372\\237\\330\\003\\177\\310|\\303>\\260\\200\\065:e\\231\\264\\254\\214\\250cip\\226\\302\\003\\321_\\254\\224\\312\\001d\\024gRy\\255\\000nA-\\n{\\221\\211\\355\\261Y\\202\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68df961150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68df961270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f683c002cf0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68df9614b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\024\\226\\337h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\030\\226\\337h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\024\\226\\337h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68df9612a0 \"\\205\\020\\275\\214\\205\\322\\005\\213\\213\\221\\277\\t\ufffd\\235\\371\\006\\200\\026\\226\\337h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\275\\214\\205\\322\\005\\213\\213\\221\\277\\t\ufffd\\235\\371\\006\\200\\026\\226\\337h\\177\\000\\000 \\023\\226\\337h\\177\\000\\000\\000\\023\\226\\337h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 14569178, size_ = 4001, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683da46fb8 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f683c0030b0, read_options=..., key=..., handle_context=0x7f68df9616d0, result_handler=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68ac05f440, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68df961510 \"R\\003$\\371\\277\\361\\247\\322c\\030\\066\\324_\\300\\033\\337\\315l\\365T\\001\\t\\207=\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"R\\003$\\371\\277\\361\\247\\322c\\030\\066\\324_\\300\\033\\337\\315l\\365T\\001\\t\\207=\\t\\000\\000\\000\\031;^/\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f683da46fb2 \"\ufffd\\235\\371\\006\\241\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f683da32670 \"\", restarts_ = 390164, num_restarts_ = 16749, current_ = 84275, restart_index_ = 3635, key_ = {key_ = 0x7f68df961460 \"R\\003$l\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"R\\003$l\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\024\\226\\337h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f683da46fb2 \"\ufffd\\235\\371\\006\\241\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68df9616d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f683c859c40\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68df961a60, status=status@entry=0x7f68df961a70, merge_context=merge_context@entry=0x7f68df961810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68df961a60, merge_operator = 0x0, merge_context = 0x7f68df961810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 212, start_index_in_curr_level_ = 212, user_key_ = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c4bd0\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68df961a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68df962650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68df9618c8 \"\\034R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", kstart_ = 0x7f68df9618c9 \"R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\", end_ = 0x7f68df9618e5 \"\\031;^/\\023b\\204\\371\\002\\235\\256\\021\\n\", space_ = \"\\034R\\003#\\353^lq\\235y3\\vS\\276\\224\\064\\306\\303|[\\216\\002\\235\\256\\021\\n\\000\\000\\000\\031;^/\\023b\\204\\371\\002\\235\\256\\021\\n\\000\\000\\000\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\254h\\177\\000\\000\\200\\b\", '\\000' <repeats 14 times>, \"l\\b\\000\\000\\000\\000\\000\\000\\300)\\226\\337h\\177\\000\\000\\000'\\226\\337h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\346i \\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\346i \\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68df961a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68df961a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68df962700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68df962700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088404485888, 1613666937563492894, 0, 0, 140088404486592, 140088404485888, -1678335593273904610, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 16 (Thread 0x7f68db35b700 (LWP 28433)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=1, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 1\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68db35b700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68db35b700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088331056896, 1613666937563492894, 0, 0, 140088331057600, 140088331056896, -1678343009071812066, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 15 (Thread 0x7f68d4f51700 (LWP 28444)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=62735089, __nbytes=4008, __buf=0x7f68d4f4d8a0, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f68347edf10, offset=62735089, n=4008, result=0x7f68d4f4d870, scratch=0x7f68d4f4d8a0 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68d4f4d8a0 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f68347edf10, footer=..., options=..., handle=..., contents=contents@entry=0x7f68d4f4d870, buf=buf@entry=0x7f68d4f4d8a0 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68d4f51628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68d4f4ecb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002w[\\003\\270\\212^\\022I|\\343_\\330\\304\\030\\270\\245\\n\\317\\326\\325\\001\\000\\000\\000\\000\\000\\000\\000\\346\\305\u0468\\261\\310\\006<\\365g\\265\\372oRo\\333\\357\\235\\330\\026\\223n\\204\\060R\\253\\t\\245\\200\\205\\036\\327\\322a\\232q-\\211X\\241h\\247\\n\\351n\\211\\353^\\026\\341__\\303\\025\\237\\\\351>N\\327\\214\\203\\313D\\215\\342\\251N\\355\\272\\223-Xi\\022a\\343/\\254\\070\\250\\217]-S2}\\017B;\\277-\\230\\336\\303zD\\376\\377bR\\177\\231\\vQ.|\\333\ufffd\\221\\336\\a\\364~\\266\\220\\217/\\340vm\\361\u073f)x07\\206(#ZQ2@\\213A\\374\\276\\224q0x\\020\\005\\003|\\304\\302\u0570\\363\\000\\236FF\\005\\250\\310\\a\\274}\\261\\td}\\245\\334\\353\\tJ9\\021\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d4f4ecb0, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68d4f4ed60, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b61de in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6834001c50, ro=..., index_value=..., input_iter=0x0) at table/block_based_table_reader.cc:957\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 62735089, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683548f5b0 \"\", size_ = 0}\n#8 0x000000000048f816 in rocksdb::(anonymous namespace)::TwoLevelIterator::InitDataBlock (this=0x7f6859eb06f0) at table/two_level_iterator.cc:181\niter = <optimized out>\nhandle = {data_ = 0x7f683548f5aa \"\\361\\205\\365\\035\\243\\037\", size_ = 6}\nthis = 0x7f6859eb06f0\n#9 0x000000000048f9fd in rocksdb::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward (this=0x7f6859eb06f0) at table/two_level_iterator.cc:139\nNo locals.\n#10 0x000000000048fa76 in Next (this=0x7f6858007d30) at ./table/iterator_wrapper.h:55\nNo locals.\n#11 rocksdb::(anonymous namespace)::TwoLevelIterator::Next (this=0x7f6858007ce0) at table/two_level_iterator.cc:118\nNo locals.\n#12 0x000000000048af22 in Next (this=0x7f685887af80) at ./table/iterator_wrapper.h:55\nNo locals.\n#13 rocksdb::MergingIterator::Next (this=0x7f685887af20) at table/merger.cc:187\nNo locals.\n#14 0x000000000044261d in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168930973, earliest_snapshot=earliest_snapshot@entry=168930973, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d4f4f4f8: 0, input=input@entry=0x7f685887af20, compact=compact@entry=0x7f68591bc220, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:2931\nkey = {data_ = 0x7f6859eb1470 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252\\001\", size_ = 28}\nvalue = {data_ = 0x7f6859ec7afa \"\\207\\266\\336\ufffd\\2025\\264\\314\\023o1\\037\\a\\315M\\221\\276\\016\\245\\034LG\\317\\300N\\024\\r\\342/\\355\\352\\065\\350)\\350b \\303#6\\205\\\"Em@\\274w\\351\\027x\\371\u01be\\275\\064F\\373:\\002\\205\\201\\030\\324x9\\024\\b\\304\\035\\363\\374\\305\\022\\222\\257\\217\\223\\001\\262`\u02f2\\r)\\264s\\371P\\027\ufffd\\205\\230;5\\355\\064\\377\ufffd\\220\\360\\326\\374=/\\274~9u\\366\\242U=p\\256\\301\\a@\\211AO\\350\\026\u047e%\\b\\253mM[\\003\\r\\232\\254`G\\314A{\\365e(\\036\\272W\\352\\260\\354\\r\\030?\\223+\\351p,\\362B\\222\\305\\001W\\355h\\201w\\034\\361U\\\\362A\\r\\251p\\226A\\322\\061T\\252Ai\\315|\\331l\ufffd\\202\\233\\220\\341\\274\\334\\b\\301$\\234\", <incomplete sequence \\374>..., size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168930973\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d4f4f228 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252data,05Xh\\177\", buf_size_ = 32, key_size_ = 20, space_ = \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252data,05Xh\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6859eb1470 \"w[\\003\\257A_|_\\367\\066\\206\\300a\\273\\253\\243\\347r\\262\\252\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 557\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d4f4f268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000x\\354\\065Xh\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000p\\353\\065Xh\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#15 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f68591bc220, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168930973\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1972 Base level 2, seek compaction:0, inputs: [11244(64MB) 11245(906KB)], [9567(64MB) 9568(64MB) 9569(64MB) 9570(64MB) 9571(64MB) 9572(64MB) 9573(64MB)]\\000\\000\\000\\020\\372\\364\\324h\\177\\000\\000\\003\\374\\364\\324h\\177\\000\\000`\\245e\", '\\000' <repeats 29 times>...\ninput = std::unique_ptr<rocksdb::Iterator> containing 0x7f685887af20\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f685835eb70\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6356992, type = rocksdb::kTypeDeletion}\ncompaction_filter_from_factory_v2 = std::unique_ptr<rocksdb::CompactionFilterV2> containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168930973\ntmp = {buffer = \"71829981`\\366\\364\\324h\\177\\000\\000\\310\\370\\364\\324h\\177\\000\\000`\\366\\364\\324h\\177\\000\\000\\000eb\\000\\000\\000\\000\\000H\\370\\364\\324h\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\313\\001\\000\\000\\000\\000\\000\\000\\310\\370\\364\\324h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310\\370\\364\\324h\\177\\000\\000\\310\\370\\364\", <incomplete sequence \\324>}\nis_snapshot_supported = true\nstart_micros = 1413982275951984\n#16 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d4f5022f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d4f503b0) at db/db_impl.cc:2321\ncompact = 0x7f68591bc220\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6858007180\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d4f50050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#17 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x7f685c003a50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f68588f5620, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"C\\250GT\\000\\000\\000\\000\\242\\206\\016\\000\\000\\000\\000\\000[default] Compacting 2@2 + 7@3 files, score 1.01 slots available 8\\000\\000\\067\\070\\060 0 0 0]\\n\", '\\000' <repeats 417 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d4f50bc8 \"\", aligned_alloc_ptr_ = 0x7f68d4f507c8 \"\\211\\247GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d4f503c8, 0x7f68d4f505c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#18 0x0000000000496c31 in BGThread (thread_id=11, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#19 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 11\ntp = 0x2378070\n#20 0x000000000055af02 in start_thread (arg=0x7f68d4f51700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d4f51700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088226158336, 1613666937563492894, 0, 0, 140088226159040, 140088226158336, -1678351252187794914, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 14 (Thread 0x7f68e0d64700 (LWP 28424)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=32678579, __nbytes=4007, __buf=0x7f68e0d61d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6848085380, offset=32678579, n=4007, result=0x7f68e0d61d10, scratch=0x7f68e0d61d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e0d61d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6848085380, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e0d61d10, buf=buf@entry=0x7f68e0d61d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e0d63150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\261\\373g\\235\ufffd\ufffd\\210\\034\\374\\301I\\237\\273u\\230\\374\\327\\b\\a\\336\\001\\355\\243\\324\\t\\000\\000\\000\\227\\276\\254\\367\\005\\002\\\ufffd\\206\\215B\\361\\060O%\\225\\215P\\370\\020\\322\\343.%\\332\\323\\016\\250+\\357P\\367\\b+ \\214\\211#%\\016\\303{\\260\\342>\\356\\004\\064\\212=\\213\\004\\016\\306@\\342\\240\\8\\037\\227\\366;(|\\374\\215\\071Z&Q-\\\\222\\061\\300\\234\\335\\346\\344x6\\364\\223\u05a5\\230?\\005\\063\\323\\035E\\226\u04bb\\333e:\\310m\\336\\341H\\331\\333]\\367\\003\\066+\\222\\021>\\264Xc\\033\\233B\\222\\266;\\350\\251F\\t\\377\\004k!\\363\\067\\357O\\032\\300:c\ufffd\\234\\271&\\360\\017R\\331`\\361M>\\270\\246\\251M\\300\\033\\002\\323\\331\\336\\370\\336X\\356r\\320\\005\\274G\\213\\360\\363X\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0d63150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e0d63270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68485c8500, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e0d634b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`4\\326\\340h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\070\\326\\340h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\064\\326\\340h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e0d632a0 \"\\205\\020\\300\\215\\205\\322\\005\ufffd\\207\\221\\277\\t\\263\\305\\312\\017\\200\\066\\326\\340h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\300\\215\\205\\322\\005\ufffd\\207\\221\\277\\t\\263\\305\\312\\017\\200\\066\\326\\340h\\177\\000\\000 3\\326\\340h\\177\\000\\000\\000\\063\\326\\340h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 32678579, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68495a1645 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68493b24c0, read_options=..., key=..., handle_context=0x7f68e0d636d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68905984e0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e0d63510 \"\\261\\373k\\215\\006\\310p\\177E\\341/\ufffd\\204n\\344\\b\\a\\321\\370\\031\\001\\336\\006\\312\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\261\\373k\\215\\006\\310p\\177E\\341/\ufffd\\204n\\344\\b\\a\\321\\370\\031\\001\\336\\006\\312\\t\\000\\000\\000\\005\\177\\215\\242\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f68495a163f \"\\263\\305\\312\\017\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6849572e10 \"\", restarts_ = 391020, num_restarts_ = 16749, current_ = 190496, restart_index_ = 8154, key_ = {key_ = 0x7f68e0d63460 \"\\261\\373k\\271\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\261\\373k\\271\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\064\\326\\340h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f68495a163f \"\\263\\305\\312\\017\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e0d636d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f68480fee20\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e0d63a60, status=status@entry=0x7f68e0d63a70, merge_context=merge_context@entry=0x7f68e0d63810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e0d63a60, merge_operator = 0x0, merge_context = 0x7f68e0d63810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 607, start_index_in_curr_level_ = 607, user_key_ = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484ca238\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0d63a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e0d64650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e0d638c8 \"\\034\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e0d638c9 \"\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\", end_ = 0x7f68e0d638e5 \"\\005\\177\\215\\242\\363jF\\373\\002\\235\\256\\021\\n\", space_ = \"\\034\\261\\373j\\226\\271`\\027R\\212B\\\"\\326W\\200\\235\\274\\210[<%\\002\\235\\256\\021\\n\\000\\000\\000\\005\\177\\215\\242\\363jF\\373\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\220h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300I\\326\\340h\\177\\000\\000\\000G\\326\\340h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\306)\\037\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\306)\\037\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e0d63a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e0d63a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e0d64700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e0d64700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088425465600, 1613666937563492894, 0, 0, 140088425466304, 140088425465600, -1678395515583876578, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 13 (Thread 0x7f68e3568700 (LWP 28420)):\n#0 Slow_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:305\nc = 3481991131\n#1 Fast_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:321\nNo locals.\n#2 rocksdb::crc32c::ExtendImplrocksdb::crc32c::Fast_CRC32 (crc=<optimized out>, buf=<optimized out>, size=<optimized out>) at util/crc32c.cc:353\ne = 0x7f68e3566ce4 \"%\\026\\327.\"\np = <optimized out>\nl = <optimized out>\npval = <optimized out>\nx = <optimized out>\n#3 0x00000000004bf433 in Value (n=4004, data=0x7f68e3565d40 \"\") at ./util/crc32c.h:24\nNo locals.\n#4 rocksdb::ReadBlock (file=<optimized out>, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e3565d10, buf=buf@entry=0x7f68e3565d40 \"\") at table/format.cc:240\nperf_step_timer_block_checksum_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568630}\nvalue = <optimized out>\nactual = 0\ns = <optimized out>\n#5 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e3567150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x7f68e3565d40 \"\", size_ = 4008}\nbuf = \"\\000\\034\\200\\002X\\001\\212\\343L\\r7\\023\\210:\\356\\002Is\\255\ufffd\\203\\364\\351\\f\\001\\000\\000\\000\\000\\000\\000\\000\\233\\276\\035s\\037\\356\\355\ufffd\\217(&$\\342|\\261\\032\\347\\062\\216\\v&\\241W\\227\u043eU\\227\\351f\\245\\247\\363,0\u077f&\\235'3\\251h\\317K?^\\v~\\317|\\024\\247\\037\\251\\065\\373av\\231\\060H#\\301\\325\\364\\322Tg\\216\\301m+\u01b0K\\222\\377O\\364\\271\\263[~\\375\\031\\364\\355]?C\\202\\362a.\\201\\374p\\223\\373^\\326\\336RD\\203i\\220\\276b\\005\ufffd\\2239\\327Q\\257@\\244\\363\\263[\\302\\f\\202\\305V\\224\\302S}\\325\\360\\376y\\312RAL\\177i\\206\\356FX\\212\\307Bf\\203r\\321\\365aPk\\227\\203=\\230\\023?'LJ\\243\\037\\025\\342`\\202\\375\\020\\203\"...\n#6 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3567150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#7 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e3567270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#8 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f683d58f420, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e35674b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`tV\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\311xV\\343h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000tV\\343h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e35672a0 \"\\205\\020\\326\\216\\205\\322\\005\\316\\202\\221\\277\\t\\340\\342\\354\\017\\200vV\\343h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\326\\216\\205\\322\\005\\316\\202\\221\\277\\t\\340\\342\\354\\017\\200vV\\343h\\177\\000\\000 sV\\343h\\177\\000\\000\\000sV\\343h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 33239392, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f683d633115 \"\", size_ = 0}\n#9 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f683d490c10, read_options=..., key=..., handle_context=0x7f68e35676d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68946243a0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e3567510 \"X\\001\\213\\257\\305\\027\\271\\023p\\323\\365'\\220&V\\026\\341Z{\\251\\001\ufffd\\222\\021\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"X\\001\\213\\257\\305\\027\\271\\023p\\323\\365'\\220&V\\026\\341Z{\\251\\001\ufffd\\222\\021\\t\\000\\000\\000\\v\\266\\334\\023\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f683d63310f \"\\340\\342\\354\\017\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f683d603c30 \"\", restarts_ = 393187, num_restarts_ = 16749, current_ = 193728, restart_index_ = 8294, key_ = {key_ = 0x7f68e3567460 \"X\\001\\214\\354\\033\\373\\345\\341Q\\227\\320\\332:\\271H\\027\\214\\200\\357\\021\\001\", buf_size_ = 32, key_size_ = 28, space_ = \"X\\001\\214\\354\\033\\373\\345\\341Q\\227\\320\\332:\\271H\\027\\214\\200\\357\\021\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f683d63310f \"\\340\\342\\354\\017\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#10 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e35676d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f683c857e80\n#11 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e3567a60, status=status@entry=0x7f68e3567a70, merge_context=merge_context@entry=0x7f68e3567810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e3567a60, merge_operator = 0x0, merge_context = 0x7f68e3567810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 228, start_index_in_curr_level_ = 228, user_key_ = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c4f50\n#12 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3567a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e3568650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e35678c8 \"\\034X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e35678c9 \"X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\", end_ = 0x7f68e35678e5 \"\\v\\266\\334\\023\\374`\\266C\\002\\235\\256\\021\\n\", space_ = \"\\034X\\001\\213l\\326\\036\\016\\a\\332\\r\\036\\361\\066\\035\\326)y\\251I\\242\\002\\235\\256\\021\\n\\000\\000\\000\\v\\266\\334\\023\\374`\\266C\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\224h\\177\\000\\000\\240\\a\", '\\000' <repeats 14 times>, \"\\214\\a\\000\\000\\000\\000\\000\\000\\300\\211V\\343h\\177\\000\\000\\000\\207V\\343h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\206\\251\\034\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\206\\251\\034\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#13 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e3567a60) at db/db_impl.cc:3387\nNo locals.\n#14 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e3567a60) at ./include/rocksdb/db.h:213\nNo locals.\n#15 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#16 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#17 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#18 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#19 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#20 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#21 0x000000000055af02 in start_thread (arg=0x7f68e3568700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68e3568700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088467425024, 1613666937563492894, 0, 0, 140088467425728, 140088467425024, -1678396617242988002, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#22 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 12 (Thread 0x7f68e2166700 (LWP 28422)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=553016, __nbytes=4007, __buf=0x7f68e2163d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f683436fcd0, offset=553016, n=4007, result=0x7f68e2163d10, scratch=0x7f68e2163d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e2163d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f683436fcd0, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e2163d10, buf=buf@entry=0x7f68e2163d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e2165150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\u027c\\250\\035\\343;\\305f1\\t&\\255\\257b\\252\\261\\023?\\rE\\001'\\004\\067\\t\\000\\000\\000\\324\\032\\263\\061^\\203\\334\\006\\252\\324\\355xNS2s\\205\\276\\017\\022B>\\356\\327\\323Z\\202{k\\353\\212zuxz\ufffd\\213\\022K\\022\\237\\206\\345\\263\\353,5\\305\\351aG!\\305\\317\\062Q\\321\\312\\302,(\\344\\371\\314\\362/K^\\230\\334\\323^\\027\\070\\061\\272h\\303\\340)i_~\\354R\\353\ufffd\\213\\275\\253\\270$\\306\\345#s\\342\\b/\\367\\006\\225\\340\\265\\323\\317F\\372\\223W]\ufffd\\200\\216,\\300I\\266=\\274%\\211\\261\\202\\270?\\360\\274\\332{\\365\\303\\351+!V\\240\\325\\355\\276h\\\\201\\234\\260F\\002F\\216n\\244K4\\221\\t\\264\\215\ufffd\\214|\\rM\\302sy\\273\\220y\\001n\\237~\\311\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2165150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e2165270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68352023f0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e21654b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`T\\026\\342h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311X\\026\\342h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000T\\026\\342h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e21652a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\207\\212\\221\\277\\t\\270\\340!\", size_ = 15}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\207\\212\\221\\277\\t\\270\\340!\\000\\200V\\026\\342h\\177\\000\\000 S\\026\\342h\\177\\000\\000\\000S\\026\\342h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 553016, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6835e9aaa7 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f68352028c0, read_options=..., key=..., handle_context=0x7f68e21656d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f689c078d60, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e2165510 \"\u027c\\263/c\\351\\032\\365\u0239\\321W\\373|\\336\\003\\003\\322\\302[\\001\\060\\241\\300\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\u027c\\263/c\\351\\032\\365\u0239\\321W\\373|\\336\\003\\003\\322\\302[\\001\\060\\241\\300\\t\\000\\000\\000\\357\\310\\362\\020\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6835e9aaa2 \"\\270\\340!\\242\\037\", size_ = 5}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6835e99ea0 \"\", restarts_ = 390962, num_restarts_ = 16749, current_ = 3059, restart_index_ = 137, key_ = {key_ = 0x7f68e2165460 \"\u027c\\263c\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\u027c\\263c\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260T\\026\\342h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6835e9aaa2 \"\\270\\340!\\242\\037\", size_ = 5}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e21656d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6835202300\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e2165a60, status=status@entry=0x7f68e2165a70, merge_context=merge_context@entry=0x7f68e2165810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e2165a60, merge_operator = 0x0, merge_context = 0x7f68e2165810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 667, start_index_in_curr_level_ = 667, user_key_ = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484caf58\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2165a60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e2166650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e21658c8 \"\\034\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e21658c9 \"\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\", end_ = 0x7f68e21658e5 \"\\357\\310\\362\\020\\017\\061\\244\\252\\002\\235\\256\\021\\n\", space_ = \"\\034\u027c\\262\\364\\220W}\\003F:\\036\\035:\\231|\u0461k=\\237\\002\\235\\256\\021\\n\\000\\000\\000\\357\\310\\362\\020\\017\\061\\244\\252\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\234h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300i\\026\\342h\\177\\000\\000\\000g\\026\\342h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A\\246\\351\\035\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061\\246\\351\\035\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e2165a60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e2165a60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e2166700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e2166700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088446445312, 1613666937563492894, 0, 0, 140088446446016, 140088446445312, -1678398267584171490, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 11 (Thread 0x7f6870cc9700 (LWP 28906)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=0, this=0x2378140) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 0\ntp = 0x2378140\n#3 0x000000000055af02 in start_thread (arg=0x7f6870cc9700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f6870cc9700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140086545782528, 1613666937563492894, 0, 0, 140086545783232, 140086545782528, -1678712231304121826, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 10 (Thread 0x2345940 (LWP 28415)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x000000000041b3b3 in ThreadPool::wait_completion() ()\nNo symbol table info available.\n#2 0x0000000000402874 in main ()\nNo symbol table info available.\n\nThread 9 (Thread 0x7f68d5952700 (LWP 28443)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=10, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 10\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d5952700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d5952700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088236648192, 1613666937563492894, 0, 0, 140088236648896, 140088236648192, -1678348778823503330, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 8 (Thread 0x7f68e536b700 (LWP 28417)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=13683420, __nbytes=4007, __buf=0x7f68e5368d40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f687400d440, offset=13683420, n=4007, result=0x7f68e5368d10, scratch=0x7f68e5368d40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4007\nptr = 0x7f68e5368d40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f687400d440, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e5368d10, buf=buf@entry=0x7f68e5368d40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e536a150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002-Qk\\256\\254\\277!\u0727\\306\\310\\372\\260%\\023\\v\\350=^\\031\\001\\246\\027\\356\\t\\000\\000\\000\\236\ufffd\\204\\353\\342\\\"\\221\\211\\263x%\\036\\062;/\\212\\t\\024k\\245\\335\\330s\\207\\333\\062\\265\\062\\205\\352\\067%\\223l\\334|\ufffd\\237\\203\\312I\\000Z\\\"\\347%\\b\\242\\311!&p\\003V\\004\\327:a\\267PJ\\377\\f?\\020\\223\\200\\037D\\200\\261O\\036\\063$\\276\\t\\355I\\034\\302\\f\u02fb\\301\\062'\\232\\325X\\272\\367[\\252uF\\261\\273z\\204\\265\\266\\222\\066|-\\371E\ufffd\\205\\223\\205\\036\\214]\\304{\u02b2s\\314\\316 \\363\\271\u0124e\\252?I\\326{\\322@i\\325\\067\\020\\025\\350\\377\\264\\026\\020\u017b\\231\\004,|1\\360\\362\\243\\257\\315\\356\\327i+\\230\\000\\273\\217\\252\\060V\\253@k\\330]\\006\\035\\237\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e536a150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e536a270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f687400e250, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e536a4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\244\\066\\345h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\u02686\\345h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\244\\066\\345h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e536a2a0 \"\\205\\020\ufffd\\223\\205\\322\\005\\202\\220\\221\\277\\t\ufffd\\225\\303\\006\\200\\246\\066\\345h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\ufffd\\223\\205\\322\\005\\202\\220\\221\\277\\t\ufffd\\225\\303\\006\\200\\246\\066\\345h\\177\\000\\000 \\243\\066\\345h\\177\\000\\000\\000\\243\\066\\345h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 13683420, size_ = 4002, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f687419fed1 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f687400e670, read_options=..., key=..., handle_context=0x7f68e536a6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at table/block_based_table_reader.cc:1118\nbiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68a8683250, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e536a510 \"-Q\\207E\\357\\n&\ufffd\\200\\311\\036\u05aeRjN/K\\305b\\001\\ti\\246\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"-Q\\207E\\357\\n&\ufffd\\200\\311\\036\u05aeRjN/K\\305b\\001\\ti\\246\\t\\000\\000\\000\\204 \\213\", <incomplete sequence \\313>}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f687419fecb \"\ufffd\\225\\303\\006\\242\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {<rocksdb::Iterator> = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f687418cc10 \"\", restarts_ = 389522, num_restarts_ = 16750, current_ = 78508, restart_index_ = 3414, key_ = {key_ = 0x7f68e536a460 \"-Q\\204w\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"-Q\\204w\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\244\\066\\345h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f687419fecb \"\ufffd\\225\\303\\006\\242\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e536a6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 <rocksdb::MarkKeyMayExist(void*)>) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6874a0a010\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e536aa60, status=status@entry=0x7f68e536aa70, merge_context=merge_context@entry=0x7f68e536a810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e536aa60, merge_operator = 0x0, merge_context = 0x7f68e536a810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 118, start_index_in_curr_level_ = 118, user_key_ = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c3740\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e536aa60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b670}\nsw = {env_ = 0x8c7540 <rocksdb::Env::Default()::default_env>, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e536b650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e536a8c8 \"\\034-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e536a8c9 \"-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\", end_ = 0x7f68e536a8e5 \"\\204 \\213\ufffd\\225\u0467\\024\\002\\235\\256\\021\\n\", space_ = \"\\034-Q\\204vxH\\244\\247\\243c\\b\\a\\307\\347\\225m9\\237\\017\\n\\002\\235\\256\\021\\n\\000\\000\\000\\204 \\213\ufffd\\225\u0467\\024\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\250h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300\\271\\066\\345h\\177\\000\\000\\000\\267\\066\\345h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000AV\\311\\032\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061V\\311\\032\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e536aa60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e536aa60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68e536b700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68e536b700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088498894592, 1613666937563492894, 0, 0, 140088498895296, 140088498894592, -1678382600080346594, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 7 (Thread 0x7f68dd15e700 (LWP 28430)):\n#0 0x000000000055ede7 in pread64 () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x0000000000499db0 in pread (**offset=12650876, __nbytes=4008, __buf=0x7f68dd15bd40, __fd=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/unistd.h:83\nNo locals.\n#2 rocksdb::(anonymous namespace)::PosixRandomAccessFile::Read (this=0x7f6874586660, offset=12650876, n=4008, result=0x7f68dd15bd10, scratch=0x7f68dd15bd40 \"\") at util/env_posix.cc:245\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nr = -1\nleft = 4008\nptr = 0x7f68dd15bd40 \"\"\n#3 0x00000000004bf0b9 in rocksdb::ReadBlock (file=0x7f6874586660, footer=..., options=..., handle=..., contents=contents@entry=0x7f68dd15bd10, buf=buf@entry=0x7f68dd15bd40 \"\") at table/format.cc:218\nperf_step_timer_block_read_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e628}\ns = {code_ = <optimized out>, state_ = 0x0}\n#4 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68dd15d150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x655109 \"\", size_ = 0}\nbuf = \"\\000\\034\\200\\002\\370Mc\\253\\277\\270\\205\\va\\214gR\\365\\353P\\003\\037j8\\210\\001\\000\\000\\000\\000\\000\\000\\000\\371\\233\\230\\t\\255\\231|_\\201\\023\\245\\354\\372S\\\\343\\024\\062]\\203\\307g\\322H\\261\\257\\362F\\201f\\366\\066Q\\232)'\\n\ufffd\\204\\006v\ufffd\\226\\215r\\033z\\312J=p\\353\\234\\347B'\ufffd\\221\\345\\222v.r\\332mD\\\"\\352X\\302\\037\\235\\230U\\341\\323nijFQMZ\\030\\334\\317\\337\\025[\ufffd\\207\\201\\325~VE\\270\u036c\\272Qqs\\016\\210\\312\\341\\023?\\215D\\031\\033\\260\\311Q\\206\\330[\\326\\360\\272\\377_'\ufffd\\237\\262B\\351U@\\340\\351\\220\\345\\347\\334e\\372.\u02e0\\311k@\\374\\270\\f\\343_F\\336\\b\\223\\205\\037\\373.\\345\\363r\\350\\000\\354zKKK\\376\\bvx\\f4\\333\"...\n#5 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dd15d150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#6 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68dd15d270, env=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f68742b6ac0, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68dd15d4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\324\\025\\335h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\311\\330\\025\\335h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\324\\025\\335h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68dd15d2a0 \"\\205\\020\\375\\222\\205\\322\\005\\205\\200\\221\\277\\t\\374\\222\\204\\006\\200\\326\\025\\335h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\375\\222\\205\\322\\005\\205\\200\\221\\277\\t\\374\\222\\204\\006\\200\\326\\025\\335h\\177\\000\\000 \\323\\025\\335h\\177\\000\\000\\000\\323\\025\\335h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 12650876, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f6875045f43 \"\", size_ = 0}\n#8 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6874a0a6d0, read_options=..., key=..., handle_context=0x7f68dd15d6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f688c0674d0, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68dd15d510 \"\\370Md\\227\\262\\374+N[ F\", buf_size_ = 32, key_size_ = 0, space_ = \"\\370Md\\227\\262\\374+N[ F\\000\\251\\243\\312\\375j\\022\\262!\\001\\305\\347\\006\\t\\000\\000\\000z_\\024\\254\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f6875045f3d \"\\374\\222\\204\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f6875033e90 \"\", restarts_ = 393557, num_restarts_ = 16748, current_ = 73886, restart_index_ = 3156, key_ = {key_ = 0x7f68dd15d460 \"\\370Mee\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\370Mee\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\324\\025\\335h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f6875045f3d \"\\374\\222\\204\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#9 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68dd15d6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void_, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6874006700\n#10 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68dd15da60, status=status@entry=0x7f68dd15da70, merge_context=merge_context@entry=0x7f68dd15d810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68dd15da60, merge_operator = 0x0, merge_context = 0x7f68dd15d810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 787, start_index_in_curr_level_ = 787, user_key_ = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484cc998\n#11 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dd15da60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68dd15e650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68dd15d8c8 \"\\034\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", kstart_ = 0x7f68dd15d8c9 \"\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\", end_ = 0x7f68dd15d8e5 \"z_\\024\\254\\002\\334\\005q\\002\\235\\256\\021\\n\", space_ = \"\\034\\370Mc\\366\\356Ps\\244\\335)\\331K\\033\\234\\004\\245\\263-\\360t\\002\\235\\256\\021\\n\\000\\000\\000z_\\024\\254\\002\\334\\005q\\002\\235\\256\\021\\n\\000\\000\\000\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\000|\\000\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\214h\\177\\000\\000\\200\\006\", '\\000' <repeats 14 times>, \"t\\006\\000\\000\\000\\000\\000\\000\\300\\351\\025\\335h\\177\\000\\000\\000\\347\\025\\335h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000A&\\352\\\"\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061&\\352\\\"\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#12 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68dd15da60) at db/db_impl.cc:3387\nNo locals.\n#13 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68dd15da60) at ./include/rocksdb/db.h:213\nNo locals.\n#14 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#15 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#16 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#17 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#18 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#19 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#20 0x000000000055af02 in start_thread (arg=0x7f68dd15e700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68dd15e700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088362526464, 1613666937563492894, 0, 0, 140088362527168, 140088362526464, -1678330093568282082, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#21 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 6 (Thread 0x7f68e5d6c700 (LWP 28416)):\n#0 Slow_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:311\nc = 781169130\n#1 Fast_CRC32 (p=<synthetic pointer>, l=<synthetic pointer>) at util/crc32c.cc:321\nNo locals.\n#2 rocksdb::crc32c::ExtendImplrocksdb::crc32c::Fast_CRC32 (crc=<optimized out>, buf=<optimized out>, size=<optimized out>) at util/crc32c.cc:353\ne = 0x7f68e5d6ace4 \"Y\\261S\\223\"\np = 0x7f68e5d6a370 \"@\\356\\331\\003:\\245v\\316\\357\\r9q:\\330V\\305l\\231BD\\027\u057a\\264)\\005\\370d_\u6fa7\\222m\\030y\\307'\\023\\022\\211\u03f3\\342\\376h2o\ufffd\\200\\v\\223\\202\\337)m|[f\\205j&\\242\\310\\350&\\374\\063\\070\\230M\\022\\005\u05a2\\252\\064;m\\225]\\230\\357\\216W\\022a\\214\\203\\224;\\225\\363\\n\\350\\347\\250\\003=\\273\\310\\354h\\360\\214\\227)\\316\ufffd\\217\\026p(\\275@m6({\\336\\305\\034\\004\\247\\362s\\266\\300\\062\\376\\003\\031\\200\\002b\u0779\\271V\\034\\222~\\\"\\374\\033\\255\\215\\321\ufffd\\226p\\001\"\nl = <optimized out>\npval = <optimized out>\nx = <optimized out>\n#3 0x00000000004bf433 in Value (n=4004, data=0x7f68e5d69d40 \"\") at ./util/crc32c.h:24\nNo locals.\n#4 rocksdb::ReadBlock (file=<optimized out>, footer=..., options=..., handle=..., contents=contents@entry=0x7f68e5d69d10, buf=buf@entry=0x7f68e5d69d40 \"\") at table/format.cc:240\nperf_step_timer_block_checksum_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c630}\nvalue = <optimized out>\nactual = 0\ns = <optimized out>\n#5 0x00000000004bfe33 in rocksdb::ReadAndDecompressFast (file=<optimized out>, footer=..., options=..., handle=..., result=0x7f68e5d6b150, env=env@entry=0x8c7540 rocksdb::Env::Default()::default_env, do_uncompress=do_uncompress@entry=true) at table/format.cc:315\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontents = {data_ = 0x7f68e5d69d40 \"\", size_ = 4008}\nbuf = \"\\000\\034\\200\\002\\232\\062t\\251\\303\\a\\356\\301\\306\u00e7J\\350/\\220\\225}J\\231\\242\\001\\000\\000\\000\\000\\000\\000\\000\\304\\361\\357qk\\234a\\217\\036\\267\\331\\g\\v`[X\\247\\177\\227i\\375\\236L\\251\\017G#\\371\\304mG\\333\\027Q\\327\ufffd\ufffd\\214.\\006z\\326\ufffd\\207/f\\356i\\rq\\261C\\340{@\\304\\003\\233G\\\\\\251q\\233\\267(\\036I\\224\\220\\262\\323f\\215\\022\\222S\\346!\\177\\311\ufffd\\200\\001\\217u\\036\\300\\063\\321,\\375Y:O\u027b\\033\\327\\364!H>\\355o\\263\\244\\372\\375\u03e5\u0221'\\245\\226n\\353\\t\\021\\327e\\266\\254T\\177;;\\361~\\327\\003\\236\\271\\274t\\231!C\\341U\ufffd\\210W}(Z\\216,\\335\\314\\066\\233\\003\\021\\rX%\\244N\\021\\344\\364xx\\364\\252:\\352znf@\\036H\\343\\033\"...\n#6 0x00000000004c01ac in rocksdb::ReadBlockContents (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e5d6b150, env=env@entry=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=do_uncompress@entry=true) at table/format.cc:359\nNo locals.\n#7 0x00000000004b453c in rocksdb::(anonymous namespace)::ReadBlockFromFile (file=<optimized out>, footer=..., options=..., handle=..., result=result@entry=0x7f68e5d6b270, env=0x8c7540 <rocksdb::Env::Default()::default_env>, do_uncompress=true) at table/block_based_table_reader.cc:66\ncontents = {data = {data_ = 0x655109 \"\", size_ = 0}, cachable = true, heap_allocated = true, compression_type = rocksdb::kNoCompression}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#8 0x00000000004b63d8 in rocksdb::BlockBasedTable::NewDataBlockIterator (rep=0x7f6854d45400, ro=..., index_value=..., input_iter=input_iter@entry=0x7f68e5d6b4b0) at table/block_based_table_reader.cc:934\nraw_block = 0x0\ncompressed_cache_key = \"`\\264\\326\\345h\\177\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\u0278\\326\\345h\\177\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\000\\264\\326\\345h\\177\\000\\000\\200\"\nkey = {data_ = 0x7f68e5d6b2a0 \"\\205\\020\\250\\220\\205\\322\\005\ufffd\\221\\221\\277\\t\\250\ufffd\\204\\006\\200\\266\\326\\345h\\177\", size_ = 16}\nckey = {data_ = 0x655109 \"\", size_ = 0}\ncache_key = \"\\205\\020\\250\\220\\205\\322\\005\ufffd\\221\\221\\277\\t\\250\ufffd\\204\\006\\200\\266\\326\\345h\\177\\000\\000 \\263\\326\\345h\\177\\000\\000\\000\\263\\326\\345h\\177\\000\\000>\"\nblock = {value = 0x0, cache_handle = 0x0}\nhandle = {offset_ = 12658088, size_ = 4003, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niter = <optimized out>\nno_io = <optimized out>\ninput = {data_ = 0x7f68550cc4b4 \"\", size_ = 0}\n#9 0x00000000004b7de3 in rocksdb::BlockBasedTable::Get (this=0x7f6854000ce0, read_options=..., key=..., handle_context=0x7f68e5d6b6d0, result_handler=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist_handler=0x472180 rocksdb::MarkKeyMayExist(void*)) at table/block_based_table_reader.cc:1118\nbiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x2378848, arg2 = 0x7f68b0020820, next = 0x0}}, comparator_ = 0x0, data_ = 0x0, restarts_ = 0, num_restarts_ = 0, current_ = 0, restart_index_ = 0, key_ = {key_ = 0x7f68e5d6b510 \"\\232\\062u\\311\\375X\\177\\036\\202G\\215\\035)a#\ufffd\\222(\\205\\322\\001\\245N\\324\\t\", buf_size_ = 32, key_size_ = 0, space_ = \"\\232\\062u\\311\\375X\\177\\036\\202G\\215\\035)a#\ufffd\\222(\\205\\322\\001\\245N\\324\\t\\000\\000\\000\\006g\\351\\016\"}, value_ = {data_ = 0x655109 \"\", size_ = 0}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nhandle_value = {data_ = 0x7f68550cc4ae \"\\250\ufffd\\204\\006\\243\\037\", size_ = 6}\nhandle = {offset_ = 18446744073709551615, size_ = 18446744073709551615, static kNullBlockHandle = {offset_ = 0, size_ = 0, static kNullBlockHandle = <same as static member of an already seen type>}}\nmay_not_exist_in_filter = <optimized out>\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\niiter = {rocksdb::Iterator = {_vptr.Iterator = 0x627ab0 <vtable for rocksdb::BlockIter+16>, cleanup_ = {function = 0x0, arg1 = 0x620570 <vtable for rocksdb::Iterator+16>, arg2 = 0x0, next = 0x0}}, comparator_ = 0x23802a8, data_ = 0x7f68550ba5b0 \"\", restarts_ = 389867, num_restarts_ = 16750, current_ = 73455, restart_index_ = 3158, key_ = {key_ = 0x7f68e5d6b460 \"\\232\\062vD\\002\\377\\377\\377\\377\\377\\377\\377\", buf_size_ = 32, key_size_ = 12, space_ = \"\\232\\062vD\\002\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\260\\264\\326\\345h\\177\\000\\000\\373\\033I\\000\\000\\000\\000\"}, value_ = {data_ = 0x7f68550cc4ae \"\\250\ufffd\\204\\006\\243\\037\", size_ = 6}, status_ = {code_ = rocksdb::Status::kOk, state_ = 0x0}, hash_index_ = 0x0, prefix_index_ = 0x0}\nfilter = 0x0\ndone = false\n#10 0x000000000046dcf4 in rocksdb::TableCache::Get (this=0x2380b30, options=..., internal_comparator=..., fd=..., k=..., arg=arg@entry=0x7f68e5d6b6d0, saver=saver@entry=0x478c10 <rocksdb::SaveValue(void*, rocksdb::ParsedInternalKey const&, rocksdb::Slice const&)>, mark_key_may_exist=mark_key_may_exist@entry=0x472180 rocksdb::MarkKeyMayExist(void*)) at db/table_cache.cc:152\nt = <optimized out>\ns = {code_ = <optimized out>, state_ = 0x0}\nhandle = 0x7f6854002470\n#11 0x00000000004732c4 in rocksdb::Version::Get (this=0x7f6848392cf0, options=..., k=..., value=value@entry=0x7f68e5d6ba60, status=status@entry=0x7f68e5d6ba70, merge_context=merge_context@entry=0x7f68e5d6b810, value_found=value_found@entry=0x0) at db/version_set.cc:819\nikey = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 28}\nsaver = {state = rocksdb::kNotFound, ucmp = 0x2376e90, user_key = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}, value_found = 0x0, value = 0x7f68e5d6ba60, merge_operator = 0x0, merge_context = 0x7f68e5d6b810, logger = 0x237a190, statistics = 0x0}\nfp = {num_levels_ = 4, curr_level_ = 4, search_left_bound_ = 0, search_right_bound_ = -1, file_levels_ = 0x7f6848392d18, search_ended_ = true, curr_file_level_ = 0x7f6848392d50, curr_index_in_curr_level_ = 545, start_index_in_curr_level_ = 545, user_key_ = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}, ikey_ = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 28}, file_indexer_ = 0x7f6848392dd0, user_comparator_ = 0x2376e90, internal_comparator_ = 0x23802a8}\nuser_key = {data_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", size_ = 20}\nf = 0x7f68484c94a8\n#12 0x000000000043da3b in rocksdb::DBImpl::GetImpl (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e5d6ba60, value_found=value_found@entry=0x0) at db/db_impl.cc:3450\nperf_step_timer_get_from_output_files_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c670}\nsw = {env_ = 0x8c7540 rocksdb::Env::Default()::default_env, statistics_ = 0x0, hist_type_ = 0, elapsed_ = 0x0, stats_enabled_ = false, start_time_ = 0}\ncfh = <optimized out>\ncfd = 0x2380280\nsnapshot = 168930973\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nperf_step_timer_get_snapshot_time = {enabled_ = false, env_ = 0x0, start_ = 0, metric_ = 0x7f68e5d6c650}\nmerge_context = {operand_list = std::unique_ptr<std::deque<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> containing 0x0}\nlkey = {start_ = 0x7f68e5d6b8c8 \"\\034\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", kstart_ = 0x7f68e5d6b8c9 \"\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\", end_ = 0x7f68e5d6b8e5 \"\\006g\\351\\016\\360R[\\217\\002\\235\\256\\021\\n\", space_ = \"\\034\\232\\062t\\323\\311_\\253\\232\\203\\377/\\201\\270\\311\\364AB\\204x\\251\\002\\235\\256\\021\\n\\000\\000\\000\\006g\\351\\016\\360R[\\217\\002\\235\\256\\021\\n\\000\\000\\000\\235\\256\\021\\n\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\200\\255\\373\\377\\377\\377\\377 \\000\\000\\260h\\177\\000\\000`\\a\", '\\000' <repeats 14 times>, \"T\\a\\000\\000\\000\\000\\000\\000\\300\\311\\326\\345h\\177\\000\\000\\000\\307\\326\\345h\\177\\000\\000!\\tX\\000\\000\\000\\000\\000AF)\\032\\227\\200\\377\\377\\000\\001\\000\\000\\000\\000\\000\\000\\061F)\\032\\227\\200\\377\\377\\021\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\064\", '\\000' <repeats 15 times>, \"[\\000\\000\\000\\000\\000\\000\"}\n#13 0x000000000043dca9 in rocksdb::DBImpl::Get (this=this@entry=0x237b120, options=..., column_family=<optimized out>, key=..., value=value@entry=0x7f68e5d6ba60) at db/db_impl.cc:3387\nNo locals.\n#14 0x000000000045181a in rocksdb::DB::Get (this=0x237b120, options=..., key=..., value=0x7f68e5d6ba60) at ./include/rocksdb/db.h:213\nNo locals.\n#15 0x000000000041f725 in store::Store::get(std::vector<char, std::allocator<char> > const&, std::vector<char, std::allocator<char> >_) ()\nNo symbol table info available.\n#16 0x000000000041ed6c in dedup::Decoder::next_segment() ()\nNo symbol table info available.\n#17 0x000000000041f173 in dedup::Decoder::read(char_, unsigned long, unsigned long_) ()\nNo symbol table info available.\n#18 0x000000000041abe3 in std::_Function_handler<void (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) ()\nNo symbol table info available.\n#19 0x000000000041b513 in ThreadPool::worker_thread() ()\nNo symbol table info available.\n#20 0x000000000041b679 in ThreadPool::invoke_worker(void_) ()\nNo symbol table info available.\n#21 0x000000000055af02 in start_thread (arg=0x7f68e5d6c700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68e5d6c700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088509384448, 1613666937563492894, 0, 0, 140088509385152, 140088509384448, -1678384524762566114, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#22 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 5 (Thread 0x7f68d4550700 (LWP 28445)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=12, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 12\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d4550700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d4550700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088215668480, 1613666937563492894, 0, 0, 140088215669184, 140088215668480, -1678350424869719522, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 4 (Thread 0x7f68d314e700 (LWP 28447)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=14, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 14\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d314e700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d314e700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088194688768, 1613666937563492894, 0, 0, 140088194689472, 140088194688768, -1678360871303925218, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 3 (Thread 0x7f68d3b4f700 (LWP 28446)):\n#0 pthread_cond_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\nNo locals.\n#1 0x0000000000496abf in BGThread (thread_id=13, this=0x2378070) at util/env_posix.cc:1560\nfunction = <optimized out>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#2 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 13\ntp = 0x2378070\n#3 0x000000000055af02 in start_thread (arg=0x7f68d3b4f700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d3b4f700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088205178624, 1613666937563492894, 0, 0, 140088205179328, 140088205178624, -1678361694327033314, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#4 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 2 (Thread 0x7f68d274d700 (LWP 28448)):\n#0 0x000000000055e881 in write () at ../sysdeps/unix/syscall-template.S:81\nNo locals.\n#1 0x000000000049716e in rocksdb::(anonymous namespace)::PosixWritableFile::Flush (this=0x7f6875c6f880) at util/env_posix.cc:758\ndone = <optimized out>\nleft = 4007\nsrc = 0x7f6875d3f7c0 \"\"\n#2 0x00000000004d17a2 in rocksdb::BlockBasedTableBuilder::Flush (this=this@entry=0x7f68742b74b0) at table/block_based_table_builder.cc:516\nr = 0x7f6875c6ff80\n#3 0x00000000004d1948 in rocksdb::BlockBasedTableBuilder::Add (this=0x7f68742b74b0, key=..., value=...) at table/block_based_table_builder.cc:479\nr = 0x7f6875c6ff80\nshould_flush = <optimized out>\n#4 0x0000000000442389 in rocksdb::DBImpl::ProcessKeyValueCompaction (this=this@entry=0x237b120, is_snapshot_supported=is_snapshot_supported@entry=true, visible_at_tip=visible_at_tip@entry=168867873, earliest_snapshot=earliest_snapshot@entry=168867873, latest_snapshot=latest_snapshot@entry=0, deletion_state=..., bottommost_level=bottommost_level@entry=true, imm_micros=@0x7f68d274b4f8: 0, input=input@entry=0x7f6874012a10, compact=compact@entry=0x7f687400f1f0, is_compaction_v2=is_compaction_v2@entry=false, log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:2891\nkptr = <optimized out>\nkstr = \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\\000\\000\\000\\000\\000\\000\"\nnewkey = {data_ = 0x7f6874005408 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 28}\nseqno = 0\nhas_merge_list = <optimized out>\nkeys = 0x0\nvalues = 0x0\nkey_iter = {<std::iterator<std::random_access_iterator_tag, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const_, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>> = {<No data fields>}, current = <error reading variable>\nvalue_iter = {<std::iterator<std::random_access_iterator_tag, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const_, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>> = {<No data fields>}, current = <error reading variable>\nkey = {data_ = 0x7f6875c6fea0 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 28}\nvalue = {data_ = 0x7f6875d52110 \"X\\375n^\\362\\303?\\t7\\v&\\233\\233\\313.;\\024qH\u02a5\\215\ufffd\\215\ufffd'\ufffd\\206\\246\u0177\\265=\\235z\\364A\\204\\f|d\\321B\\301a\\375D}\\256\\243\\371\\235\\232\ufffd\\237\\215\\016\\343x\\006\\216s\ufffd\\232\\344@Y\\211`\\257Q\\024\\231fosiB\\317_\\366\\361b\u07b1\\253\\071f\\205\u03e087+\\304\\035\\221\\032\\033\\360\\341+\\a\\335\\351\\006\\363\\260\\240D\\261\\261\\376\\267\\221'@_\\006aE\u07aew\\267+L\\025\\212B\\020\\260\\035\\275\\035\\316\\061n&\\334\\067\\065h\\215\\016'\\267\\331\\005(9_\\034\\061\\376&\\330\\364\", <incomplete sequence \\355>, size_ = 256}\ndrop = false\ncurrent_entry_is_merging = <optimized out>\nvisible_in_snapshot = 168867873\nkey_drop_newer_entry = 0\nkey_drop_obsolete = 0\ncurrent_user_key = {key_ = 0x7f68d274b228 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\", <incomplete sequence \\372>, buf_size_ = 32, key_size_ = 20, space_ = \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\000\\000\\000\\000\\000\\337\\063th\\177\\000\"}\ncompaction_filter = 0x0\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nikey = {user_key = {data_ = 0x7f6875c6fea0 \"\\342x\\tAV\\307\\006\ufffd\\216^7\\210\\354\\240\\062j/\\232\\203\\372\\001\", size_ = 20}, sequence = 0, type = rocksdb::kTypeValue}\nhas_current_user_key = <optimized out>\ncompaction_filter_from_factory = std::unique_ptrrocksdb::CompactionFilter containing 0x0\nkey_drop_user = 0\nloop_cnt = 484\ncombined_idx = 0\ncompaction_filter_value = \"\"\ndelete_key = {key_ = 0x7f68d274b268 \"\\275\\256H\", buf_size_ = 32, key_size_ = 0, space_ = \"\\275\\256H\\000\\000\\000\\000\\000\\b\\340\\063th\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000\\337\\063th\\177\\000\"}\nmerge = {user_comparator_ = 0x2376e90, user_merge_operator_ = 0x0, logger_ = 0x237a190, min_partial_merge_operands_ = 2, assert_valid_internal_key_ = false, keys_ = std::deque with 0 elements, operands_ = std::deque with 0 elements, success_ = false}\n#5 0x0000000000444987 in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f687400f1f0, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:3221\nimm_micros = 0\nvisible_at_tip = 168867873\nstats = <optimized out>\nprefix_initialized = false\nscratch = \"Base version 1969 Base level 2, seek compaction:0, inputs: [11260(64MB)], [9964(64MB) 9965(64MB) 9966(64MB) 9967(64MB) 9968(64MB) 9969(64MB) 9970(64MB) 9994(5186KB) 8850(64MB) 9951(64MB)]\\000h\\177\\000\\000\\070\\320a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x7f6874012a10\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f687433df00\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = <optimized out>\nearliest_snapshot = 168867873\ntmp = {buffer = \"files[0 12 116 807 0 0 0]\\000t\\322h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\u0238t\\322h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\u0238t\\322h\\177\\000\\000\u0238\", <incomplete sequence \\322>}\nis_snapshot_supported = true\nstart_micros = 1413982263127845\n#6 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d274c22f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d274c3b0) at db/db_impl.cc:2321\ncompact = 0x7f687400f1f0\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f6874008830\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d274c050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#7 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f6874007390, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"7\\250GT\\000\\000\\000\\000U\\363\\001\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.01 slots available 7\\000\\070\\071 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d274cbc8 \"\", aligned_alloc_ptr_ = 0x7f68d274c7c8 \"7\\250GT\", alloc_bytes_remaining_ = 1024, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 0, values_ = {0x7f68d274c3c8, 0x7f68d274c5c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#8 0x0000000000496c31 in BGThread (thread_id=15, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 <rocksdb::DBImpl::BGWorkCompaction(void_)>\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#9 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 15\ntp = 0x2378070\n#10 0x000000000055af02 in start_thread (arg=0x7f68d274d700) at pthread_create.c:312\n**res = <optimized out>\npd = 0x7f68d274d700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088184198912, 1613666937563492894, 0, 0, 140088184199616, 140088184198912, -1678363344668216802, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#11 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n\nThread 1 (Thread 0x7f68d6353700 (LWP 28442)):\n#0 0x000000000059c428 in **memcmp_sse4_1 ()\nNo symbol table info available.\n#1 0x0000000000492fae in compare (b=..., this=<optimized out>) at ./include/rocksdb/slice.h:127\nmin_len = -8\nr = <optimized out>\n#2 rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (this=<optimized out>, a=..., b=...) at util/comparator.cc:31\nNo locals.\n#3 0x00000000004b0c3e in rocksdb::InternalKeyComparator::Compare (this=<optimized out>, akey=..., bkey=...) at db/dbformat.cc:61\nr = <optimized out>\n#4 0x00000000004822f6 in Compare (b=..., a=..., this=<optimized out>) at ./db/dbformat.h:164\nNo locals.\n#5 BySmallestKey (cmp=<optimized out>, b=0x7f685c9f5670, a=0x7f685c9f5730) at db/version_set.cc:81\nr = <optimized out>\n#6 operator() (this=0x7f685c1ed7c0, this=0x7f685c1ed7c0, f2=0x7f685c9f5670, f1=0x7f685c9f5730) at db/version_set.cc:1502\nNo locals.\n#7 _M_get_insert_unique_pos (__k=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_tree.h:1324\n__x = 0x7f685c9f5700\n__y = 0x7f685c9f5700\n__comp = true\n__j = <optimized out>\n#8 _M_insert_unique<rocksdb::FileMetaData* const&> (__v=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_tree.h:1377\n__res = <optimized out>\n#9 insert (__x=<synthetic pointer>, this=0x7f685c1ed7c0) at /usr/include/c++/4.8/bits/stl_set.h:463\nNo locals.\n#10 rocksdb::VersionSet::Builder::Apply (this=this@entry=0x7f685c002620, edit=<optimized out>) at db/version_set.cc:1658\nlevel = <optimized out>\nf = 0x7f685c9f5730\n__for_range = <optimized out>\ndel = <optimized out>\n#11 0x0000000000476d20 in rocksdb::VersionSet::LogAndApplyHelper (this=this@entry=0x237d100, cfd=cfd@entry=0x2380280, builder=builder@entry=0x7f685c002620, v=v@entry=0x7f685dd6d4c0, edit=<optimized out>, mu=mu@entry=0x237b250) at db/version_set.cc:2064\nNo locals.\n#12 0x000000000047dd78 in rocksdb::VersionSet::LogAndApply (this=0x237d100, column_family_data=0x2380280, edit=0x7f685c003a50, mu=mu@entry=0x237b250, db_directory=0x237f030, new_descriptor_log=new_descriptor_log@entry=false, options=options@entry=0x0) at db/version_set.cc:1834\n__for_range = std::deque with 1 elements = {0x7f68d6351060}\nw = {status = {code_ = rocksdb::Status::kOk, state_ = 0x0}, done = false, cv = {cv_ = {__data = {__lock = 0, __futex = 0, __total_seq = 0, __wakeup_seq = 0, __woken_seq = 0, __mutex = 0x0, __nwaiters = 0, __broadcast_seq = 0}, __size = '\\000' <repeats 47 times>, __align = 0}, mu_ = 0x237b250}, cfd = 0x2380280, edit = 0x7f685c003a50}\nbuilder = std::unique_ptrrocksdb::VersionSet::Builder containing 0x7f685c002620\ns = {code_ = 176, state_ = 0x2200000 <error: Cannot access memory at address 0x2200000>}\nbatch_edits = std::vector of length 0, capacity 0\nv = 0x7f685dd6d4c0\nlast_writer = 0x7f68d6351060\nnew_manifest_file_size = <optimized out>\n#13 0x000000000043c791 in rocksdb::DBImpl::InstallCompactionResults (this=this@entry=0x237b120, compact=compact@entry=0x7f685c014920, log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:2559\nNo locals.\n#14 0x00000000004439ed in rocksdb::DBImpl::DoCompactionWork (this=this@entry=0x237b120, compact=compact@entry=0x7f685c014920, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:3289\nimm_micros = 0\nvisible_at_tip = 168930973\nstats = {micros = <optimized out>, bytes_readn = <optimized out>, bytes_readnp1 = <optimized out>, bytes_written = 623863468, files_in_leveln = <optimized out>, files_in_levelnp1 = <optimized out>, files_out_levelnp1 = <optimized out>, count = <optimized out>}\nprefix_initialized = <optimized out>\nscratch = \"Base version 1972 Base level 2, seek compaction:0, inputs: [11276(64MB)], [10825(64MB) 10873(5082KB) 9691(64MB) 9692(64MB) 9693(64MB) 9694(64MB) 9695(64MB) 9696(64MB) 9697(64MB) 9698(64MB)]\\000\\000\\000\\037\\302a\\000\\000\\000\\000\\000\"...\ninput = std::unique_ptrrocksdb::Iterator containing 0x0\nbackup_input = std::shared_ptr (count 1, weak 0) 0x7f685c004140\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\ncontext = {is_full_compaction = false, is_manual_compaction = false}\nlatest_snapshot = 0\nikey = {user_key = {data_ = 0x655109 \"\", size_ = 0}, sequence = 6414848, type = 10}\ncompaction_filter_from_factory_v2 = std::unique_ptrrocksdb::CompactionFilterV2 containing 0x0\nnum_output_files = 194332\nearliest_snapshot = 168930973\ntmp = {buffer = \"\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\060\\034\\065\\326h\\177\\000\\000 \\034\\065\\326h\\177\\000\\000\\000\\342a\\000\\000\\000\\000\\000\\n\\342a\\000\\000\\000\\000\\000\\v\\000\\000\\000\\000\\000\\000\\000V ]\\000\\000\\000\\000\\000\\310\\030\\065\\326h\\177\\000\\000b(\\\\000\\000\\000\\000\\000\\001\\200\\255\\373\\000\\000\\000\\000\\310\\030\\065\\326h\\177\\000\\000\\310\\030\", <incomplete sequence \\326>}\nis_snapshot_supported = true\nstart_micros = 1413982275951849\n#15 0x00000000004456b8 in rocksdb::DBImpl::BackgroundCompaction (this=this@entry=0x237b120, madeProgress=madeProgress@entry=0x7f68d635222f, deletion_state=..., log_buffer=log_buffer@entry=0x7f68d63523b0) at db/db_impl.cc:2321\ncompact = 0x7f685c014920\nis_manual = <optimized out>\nc = std::unique_ptrrocksdb::Compaction containing 0x7f685c9f1110\nmanual_end_storage = {rep_ = \"\"}\nmanual_end = 0x7f68d6352050\nstatus = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nflush_stat = {code_ = rocksdb::Status::kOk, state_ = 0x0}\n#16 0x000000000044d727 in rocksdb::DBImpl::BackgroundCallCompaction (this=0x237b120) at db/db_impl.cc:2123\nl = {mu_ = 0x237b250}\ns = {code_ = rocksdb::Status::kOk, state_ = 0x0}\nmadeProgress = false\ndeletion_state = {candidate_files = std::vector of length 0, capacity 0, sst_live = std::vector of length 0, capacity 0, sst_delete_files = std::vector of length 0, capacity 0, log_delete_files = std::vector of length 0, capacity 0, memtables_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, superversions_to_free = {num_stack_items_ = 0, values_ = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}, new_superversion = 0x7f685c017a60, manifest_file_number = 0, pending_manifest_file_number = 0, log_number = 0, prev_log_number = 0}\nlog_buffer = {log_level_ = rocksdb::INFO_LEVEL, info_log_ = 0x237a190, arena_ = {_vptr.Arena = 0x620aa0 <vtable for rocksdb::Arena+16>, static kInlineSize = 2048, static kMinBlockSize = 4096, static kMaxBlockSize = 18446744071562067968, inline_block_ = \"C\\250GT\\000\\000\\000\\000\\002\\206\\016\\000\\000\\000\\000\\000[default] Compacting 1@2 + 10@3 files, score 1.02 slots available 9\\000\\071\\064 0 0 0]\\n\", '\\000' <repeats 418 times>..., kBlockSize = 4096, blocks_ = std::vector of length 0, capacity 0, huge_blocks_ = std::vector of length 0, capacity 0, irregular_block_num = 0, unaligned_alloc_ptr_ = 0x7f68d6352bc8 \"\", aligned_alloc_ptr_ = 0x7f68d63529c8 \"\\203\\247GT\", alloc_bytes_remaining_ = 512, blocks_memory_ = 2048}, logs_ = {num_stack_items_ = 1, values_ = {0x7f68d63527c8, 0x7f68d63525c8, 0x55cfee <_L_unlock_722+15>, 0x0, 0x100000000, 0x0, 0x0, 0x0}, vect_ = std::vector of length 0, capacity 0}}\n#17 0x0000000000496c31 in BGThread (thread_id=9, this=0x2378070) at util/env_posix.cc:1616\nfunction = 0x44d940 rocksdb::DBImpl::BGWorkCompaction(void*)\narg = <optimized out>\ndecrease_io_priority = <optimized out>\nlow_io_priority = false\n#18 rocksdb::(anonymous namespace)::PosixEnv::ThreadPool::BGThreadWrapper (arg=<optimized out>) at util/env_posix.cc:1633\nmeta = <optimized out>\nthread_id = 9\ntp = 0x2378070\n#19 0x000000000055af02 in start_thread (arg=0x7f68d6353700) at pthread_create.c:312\n__res = <optimized out>\npd = 0x7f68d6353700\nnow = <optimized out>\nunwind_buf = {cancel_jmp_buf = {{jmp_buf = {140088247138048, 1613666937563492894, 0, 0, 140088247138752, 140088247138048, -1678353999893122530, 1613666547586937374}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, 0x0, 0x0}, data = {prev = 0x0, cleanup = 0x0, canceltype = 0}}}\nnot_first_call = <optimized out>\npagesize_m1 = <optimized out>\nsp = <optimized out>\nfreesize = <optimized out>\n__PRETTY_FUNCTION** = \"start_thread\"\n#20 0x00000000005c1a49 in clone ()\nNo symbol table info available.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60173960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60340094", "body": "I'm not sure what are you asking me for. If you could share what gdb commands would you like me to execute I can do that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60340094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60503580", "body": "Closing since I've verified it's the same issue than #365\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60503580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60456064", "body": "This smells like the same issue I reported in #359 but in this case it was a debug build.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60456064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60532376", "body": "I've found out the way to repro the crash. The problem happens when compaction code fails to open files due to too many open files. Unfortunately, Linux sets the maximum to 1024 by default (ulimit -n), while RocksDB default is max_open_files=5000.\nBy setting a higher value in ulimit the problem goes away and my stress test passes fine. On the other hand, setting it to something quite low like 50 makes RocksDB crash much more easily.\nBesides fixing the crash, maybe the default value for RocksDB should be reconsidered.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60532376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60535245", "body": "Sorry for oversimplifying the ulimit issue. The distributions I've used for development are Ubuntu based, and my deployment is in Scientific Linux, a quite different distribution. Both have it set to 1024 by default, because of that I'm guessing it's a common default, but you're totally right, other distributions may set it to different values.\nIn any case, it's impossible to know what other handles are open in the process, so maybe it's not worth it to change RocksDB default, but it shouldn't crash either :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60535245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60558638", "body": "It does happen in 3.5.1, please see #359 for stack traces on how this looks like in that version and in release build (no assertion, but it crashes anyway).\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60558638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60629068", "body": "https://drive.google.com/file/d/0B5b62mktIEdjdG91LVgzcmhyN2s/view?usp=sharing\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/60629068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/61140026", "body": "3.6.2 doesn't crash, but I'm getting kIOError \"Too many open files\" in a write right after I see this in the LOG:\n2014/10/30-10:55:27.441455 7f8ce4968700 [default] Level-0 flush table #44: started\n2014/10/30-10:55:27.441485 7f8ce4968700 [default] Level-0 flush table #44: 0 bytes IO error: csp.db/000044.sst: Too many open files\n2014/10/30-10:55:27.441558 7f8ced9b2700 (Original Log Time 2014/10/30-10:55:27.441551) Compaction nothing to do\n2014/10/30-10:55:27.814053 7f8ce4968700 Waiting after background flush error: IO error: csp.db/000044.sst: Too many open filesAccumulated background error counts: 1\n\nIs this expected?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/issues/comments/61140026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maoy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4580949", "body": "Did you mean GetLiveTableMetaData?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4580949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4589365", "body": "I'm not sure we are ready to deprecate GetLiveFiles() yet. Looking at GetLiveTableMetaData(), it misses the following:\n- CURRENT and MANIFEST file names (only sst files)\n- manifest file size\n- option to flush.\n\nI don't fully understand the implications but at least the first two items seem pretty important.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4589365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dhruba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4584830", "body": "Yes!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4584830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4590840", "body": "I think you are right \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4590840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103191", "body": "igor: can you instead do\nmake OPT=-O2 -DNDEBUG librocksdb.a\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "gubatron": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4609110", "body": "takes longer to write the commit message than the actual fix, what a nightmare working like that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4609110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "juneng603": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4639997", "body": "depending on your commits, posix_fadvice() or Fadvice will not be anything in Mac OS. Is this no side-effects for the performance on it?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4639997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "liukai": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643173", "body": "As our primary production platform is Linux, We do not (or plan to) run any production workload on mac.\nWe made sure rocksdb can be compiled on OSX just for convenience :-)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4698738", "body": "Igor, -fPIC will break the 3rd party release.\n\nWe'd enable -fPIC only when we are not in development environment. I'll come up with another diff to fix this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4698738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4971181", "body": "@igorcanadi that's right, thank you!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4971181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017237", "body": "merging back might be a little bit difficult. Previous I made changes in performance since comparatively it's like a superset of master branch. Merging back to master will result in quite some conflicts.\n\nDo you have any task depend on this change? \n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103654", "body": "It does take a long time to compile.\n\nTo speed up our daily development, I'll separate that process to `make shared`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273945", "body": "I actually fine with the change.\nWe've resolve this issue once. I think git merge, with all the commit history is smart to avoid doing the conflict resolution in next merge. Even if there's conflict, I think resolving it is very simple :-)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5342960", "body": "Good catch. Will change it my current diff\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5342960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mdcallag": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643282", "body": "Do we make it clear anywhere that is the case? At some point in time InnoDB\nhad to do special things for OSX to make sure that fsync really forced data\nto disk. See\nhttp://dev.mysql.com/doc/refman/5.6/en/innodb-configuration.html or google\nfor more details.\n# if defined(HAVE_DARWIN_THREADS)\n# ifndef F_FULLFSYNC\n\n```\n    /* The following definition is from the Mac OS X 10.3 <sys/fcntl.h>\n```\n\n*/\n# define F_FULLFSYNC 51 /\\* fsync + ask the drive to flush to the media */\n# elif F_FULLFSYNC != 51\n# error \"F_FULLFSYNC != 51: ABI incompatibility with Mac OS X 10.3\"\n# endif\n\n```\n    /* Apple has disabled fsync() for internal disk drives in OS X. That\n    caused corruption for a user when he tested a power outage. Let us\n```\n\nin\n        OS X use a nonstandard flush method recommended by an Apple\n        engineer. */\n\n```\n    if (!srv_have_fullfsync) {\n            /* If we are not on an operating system that supports this,\n            then fall back to a plain fsync. */\n\n            ret = os_file_fsync(file);\n    } else {\n            ret = fcntl(file, F_FULLFSYNC, NULL);\n\n            if (ret) {\n                    /* If we are not on a file system that supports\n```\n\nthis,\n                        then fall back to a plain fsync. */\n                        ret = os_file_fsync(file);\n                }\n        }\n# else\n\nOn Tue, Nov 19, 2013 at 10:24 AM, Kai Liu notifications@github.com wrote:\n\n> As our primary production platform is Linux, We do not (or plan to) run\n> any production workload on mac.\n> We made sure rocksdb can be compiled on OSX just for convenience :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/commit/97d8e573a6f97cbf40b55744110c8268689d510d#commitcomment-4643173\n> .\n## \n\nMark Callaghan\nmdcallag@gmail.com\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4643282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Photonios": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706583", "body": "It should be noted that 'libgflags-dev' is not in all well-known repositories.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706610", "body": "This is exactly my commit.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706692", "body": "Maybe you would like to share, how and why it's different. I guess other people (including myself) would love to know what makes Facebook's environment different from everybody else... :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "igorcanadi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706659", "body": "Yes, the only difference is that we do that check only in non-FB environment - we have other requirements for FB environment.\n\nThanks for your contribution!\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4706659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967549", "body": "@liukai we also need to add -DROCKSDB_FALLOCATE_PRESENT to our fbcode build\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967903", "body": "https://github.com/facebook/rocksdb/commit/52ea1be90aeac4560a4993cda2c48b4dc084f2ce\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4967903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017176", "body": "I think it would be good to merge this diff into master. @liukai thoughts?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017275", "body": "I wasn't thinking about merging this exact diff, but rather doing the same thing (replacing some vectors with autovectors) in master branch. But I have no blocked tasks, so don't worry about it :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5017275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103105", "body": "I do `make release` when I do some regression/performance testing. Creating shared library is taking few minutes (?) and I don't really need it. Can we compile shared library outside of `make release`? Maybe `make librocks.so` or `make shared`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5103105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273584", "body": "Can we remove this rename from the performance branch and then do the rename in master (after the performance is pushed)? Rename will make resolving merge conflicts a bit more difficult.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5273584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5274683", "body": "aaah, great :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5274683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5341963", "body": "yoeref? :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/5341963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975285", "body": "This means lots of memcpy and it's all done inside of the mutex. Can you refactor the code such that InputSummary directly takes `char* output` (parameter of Summary) and returns the size (so that you can keep writing) (maybe Summary can also take `char **output` and advance the pointer automatically)? You can do similar thing with FileSizeSummary.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975384", "body": "Take a look at DBTest::FilesPerLevel()\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/8975384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9550978", "body": "Why do you need both defines? Is there a use case where only one will be present and rocksdb should work correctly/partially?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9550978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551218", "body": "Can you just move all the delete[] uncompressed here outside of the switch? If uncompressed is null, delete is noop, so you're fine even in failure case.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551418", "body": "Is this what `make format` did? We keep the asterisks by the type, not the variable name, so: `int* decompress_size`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551558", "body": "The indent here seems off.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551637", "body": "I'm not familiar with LZ4 compression. Does LZ4HC get uncompressed by LZ4_Uncompress()?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551687", "body": "Good catch :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551724", "body": "We have braces even in one-line ifs\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9551724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836042", "body": "`size_t n = operand_list.size();`\n:)\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836049", "body": "size_t i\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836087", "body": "Is this four space indent? We use two. You might be able to just run `make format` and have it fix all of this for you.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9836087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9837844", "body": "Looks like this causes valgrind failures in c_test. Run the test with `valgrind --leak-check=full ./c_test`. Let me know if you can't repro.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9837844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631885", "body": "Line is longer than 80 chars. Can you please run `make format`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10631885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10664575", "body": "Can you document the format of different footer versions?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10664575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870024", "body": "Can you remove the comments here and in the destructor?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870090", "body": "We don't create a new directory on a NewDirectory() call.\n\nHere are the comments from `include/rocksdb/env.h`:\n\n```\n// Create an object that represents a directory. Will fail if directory\n// doesn't exist. If the directory exists, it will open the directory\n// and create a new Directory object.\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870125", "body": "Style -- space after coma. Can you run `make format`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870143", "body": "Remove `.c_str()` call\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12870143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dyu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/4724246", "body": "For one, they use an ancient version of the linux kernel (2.x with upstream patches).  I'm guessing its probably similar to google (as they have a lot of ex-googlers).\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/4724246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "alberts": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/comments/6070753", "body": "This breaks the build if you try to compile tests with -DNDEBUG... maybe TEST(DBTest, TransactionLogIteratorRace) should be excluded by an ifdef in this case.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/comments/6070753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554876", "body": "Probably not. I'll get rid of the LZ4HC one.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554904", "body": "It would help me if you could make format the master branch before I retry this. make format doesn't seem to be idempotent.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554921", "body": "make format again...\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554937", "body": "Yep. Slower but better compression, but the same fast decompression.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554954", "body": "Just following the style I found. Will fix.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/9554954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caiosba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10632283", "body": "Oh sorry, I ran `make format` before and it pointed nothing:\n\n$ make format\nbuild_tools/format-diff.sh\nNothing needs to be reformatted!\n\nBTW, I fixed it on hand and pushed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/10632283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dallasmarlow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12509042", "body": "@siying looks like you're right, updating the pr now.\n", "reactions": {"url": "https://api.github.com/repos/facebook/rocksdb/pulls/comments/12509042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}