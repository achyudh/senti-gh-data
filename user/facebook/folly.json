{"_default": {"1": {"JohnSmithyy": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/738", "title": "make check failed", "body": "```\r\nMakefile:1797: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2950: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2163: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2316: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n\r\nAnyone have a solution to this?\r\n\r\nI'm running Ubuntu 16.04. ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maikel": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/737", "title": "Poly does not work with noexcept methods", "body": "The `folly/Poly.md` document does not mention `noexcept` at all. Consider this example\r\n\r\n```\r\n#include <folly/Poly.h>\r\n#include <iostream>\r\n\r\nstruct IDrawable {\r\n  template <typename Base> struct Interface : Base {\r\n    void draw(std::ostream& out) const /* noexcept */ {\r\n      folly::poly_call<0>(*this, out);\r\n    }\r\n  };\r\n\r\n  template <typename T> using Members = folly::PolyMembers<&T::draw>;\r\n};\r\n\r\nstruct Circle {\r\n  void draw(std::ostream& out) const /* noexcept */ { out << \"Cirlce.\\n\"; }\r\n};\r\n\r\nusing Drawable = folly::Poly<IDrawable>;\r\n\r\nint main() {\r\n  Drawable obj = Circle{};\r\n  obj.draw(std::cout);\r\n}\r\n```\r\n\r\nUncommenting any `noexcept` breaks on my machine (using clang from 2017-11-25 and folly from 2017-12-25)\r\n\r\nI attached the error message for uncommenting `Circle::draw`'s  `noexcept` specifier.\r\n\r\n[error.log](https://github.com/facebook/folly/files/1639659/error.log)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomGarden": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/735", "title": "folly/folly/experimental/logging/example/main.cpp", "body": "#  log moudle don't work\r\nResently I want use folly's logging moudle.\r\nBut it don't work well.\r\nCompile no problem\u3002\r\n## compile cmd\r\nsources path : https://github.com/facebook/folly/blob/master/folly/experimental/logging/example/main.cpp\r\n```\r\n$ g++ main.c lib.cpp -std=c++14 -o testMain -lfollylogging -lfolly -ldouble-conversion -lglog -lgflags\r\n```\r\n\r\nI don't find any log from function `XLOG()`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZaMaZaN4iK": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/734", "title": "Conan package for Folly", "body": "Hello,\r\nDo you know about [Conan](https://github.com/conan-io/conan)?\r\n[Conan](http://docs.conan.io/en/latest/) is modern dependency manager for C++. And will be great if your library will be available via package manager for other developers.\r\n\r\n[Here](https://github.com/bincrafters/conan-templates) you can find example, how you can create package for the library. \r\n\r\nIf you have any questions, just ask :-)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkudrnac": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/732", "title": "One little goto \ud83e\udd96", "body": "https://github.com/facebook/folly/blob/e7f26d60480810d6c2b724130e35761d75af33fc/folly/String.cpp#L47\r\n\r\n![main-qimg-ed4254c72d3c84c43bef0d32b7ff4172](https://user-images.githubusercontent.com/12230741/34783624-5d2f7bfa-f62c-11e7-9691-5afb55ce78c3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MacroKnow": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/730", "title": "My system time is wrong ,when I make it,it endless loop.", "body": "eg:my system time is  Thurs Jan  5 20:36:04 CST 2017 ,and I preparing install version is v2018.01.01.00 .\r\nautoreconf -ivf \r\n./configure\r\nmake \r\n\r\nthen endless loop\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suspend0": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/728", "title": "Thanks & Happy New Year!", "body": "All folly committers:\r\n\r\nThank you for releasing and maintaining this library. We use a ton of this code. Personally, I have learned a lot by reading it. The effort that goes into the code itself, as well as the management of this OSS project, communication, and issue handling is all top notch and very much appreciated.\r\n\r\nThanks!\r\nDarren.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shadowwalker2718": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/725", "title": "`make check` failed", "body": "```\r\nmake[3]: Entering directory '/opt/share/folly/folly/test'\r\nmake[3]: 'libfollytestmain.la' is up to date.\r\nmake[3]: 'libgtest.la' is up to date.\r\nmake[3]: 'foreach_benchmark' is up to date.\r\nmake[3]: 'benchmark_test' is up to date.\r\nmake[3]: 'concurrent_skiplist_benchmark' is up to date.\r\nmake[3]: 'conv_benchmark' is up to date.\r\nmake[3]: 'sorted_vector_types_test' is up to date.\r\nmake[3]: 'foreach_test' is up to date.\r\nmake[3]: 'hash_test' is up to date.\r\nmake[3]: 'timeout_queue_test' is up to date.\r\nmake[3]: 'conv_test' is up to date.\r\nmake[3]: 'expected_test' is up to date.\r\n/bin/bash ../libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o range_test RangeTest.o libfollytestmain.la -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags \r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o .libs/range_test RangeTest.o  ./.libs/libfollytestmain.a /opt/share/folly/folly/init/.libs/libfollyinit.so /opt/share/folly/folly/.libs/libfolly.so -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags\r\nRangeTest.o: In function `testing::IsEmptyMatcher::gmock_Impl<folly::Range<int const*> const&>::FormatDescription[abi:cxx11](bool) const':\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1770: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2911: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2131: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2302: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vxider": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/711", "title": "Disable test", "body": "Hi,\r\n    I'am trying to cross compile folly to other platform, how can I disable test in `configure`?\r\nHere is my error:\r\n```\r\n./configure --enable-static --disable-shared --with-PACKAGE=MPMCQueue --with-boost=/home/vxider/local/boost --host=x86_64 \r\n\r\n...\r\nconfigure: error: cannot run test program while cross compiling\r\nSee `config.log' for more details\r\n...\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RcRonco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/700", "title": "Compression namespace", "body": "Hi,\r\nWhen compression moved from ```io``` to its own folder the namespace still stayed ```folly::io```, which is quite confusing.\r\nMaybe it should be in its own namespace or in the ```folly``` namespace, or even return the ```compression``` into ```io``` folder.\r\n\r\nIn compression [Utils.h](https://github.com/facebook/folly/blob/master/folly/compression/Utils.h#L30) the namespace ```folly::io::compression``` exists, refactoring the namespaces of the compression folder will make it more consistent, I don`t mind to do it.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tlanwairen123": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/699", "title": "folly configure checking whether the Boost::Context library is available... no", "body": "i try build the folly. there have an error for configure for checking whether the Boost::Context library is available... no\r\nI have install boost and boost_context\uff0chow can i Solve the problem\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yangxingpping": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/698", "title": "win ProducerConsumerQueue", "body": "Installing from vcpkg. Compiling failed when I am try to run ProducerConsumerQueue,with error C2327,C2065. folly::ProducerConsumerQueue<int>::writeIndex is not type name, nor enum.\r\nwriteIndex_ is not declared. It seems like vc++ does not support assign array size with sizeof(writeIndex_).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "newpoo": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/696", "title": "Can we add a callback parameter to IOBuf::wrapBuffer()?", "body": "IOBuf can inform clients when there is no any IOBuf objects refer to the buffer?\r\nSo clients know that it's safe to release the buffer now.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/694", "title": "Streaming Promise", "body": "Would it make sense to create a construct StreamingPromise that can `setValue` multiple times? The use case is that when the call site is something like:\r\n\r\n`\r\nserviceProxy.getResponse().then([](const ResponsePart&  response)\r\n{\r\n    //  Do something with partial response\r\n});\r\n\r\n`\r\n\r\nIt would be great to have the `ServiceProxy::getResponse` return a `Future` that can be set multiple times by the `Promise` that was created the first time it was called.\r\n\r\nIs this the limitation of the Future/Promise paradigm or would it be a good idea to support something like 'StreamingPromise' ?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kelu27": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/690", "title": "Undefined reference", "body": "I'm building folly for mcrouter on ubuntu:16.04:\r\nHere is my error with your last commit https://github.com/facebook/folly/commit/69d97159209c5a77fdf7805155738604233d0b8a:\r\n\r\n`folly/folly/.libs/libfolly.so: undefined reference to folly::AsyncSocketException::getMessage(folly::AsyncSocketException::AsyncSocketExceptionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guodongxiaren": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/687", "title": "dyld: Library not loaded: libboost_context.dylib", "body": "./generate_fingerprint_tables\r\ndyld: Library not loaded: libboost_context.dylib\r\n  Referenced from: /Users/jelly/Documents/Source/folly/folly/./generate_fingerprint_tables\r\n  Reason: image not found\r\nmake[2]: *** [FingerprintTables.cpp] Trace/BPT trap: 5\r\nmake[1]: *** [all-recursive] Error 1\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samdasnake": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/684", "title": "Error with 'libfollybenchmark.la' during make", "body": "I am receiving the following error when I run `make install` to install folly.  I am running Ubuntu 16.04.  Here are the error messages I receive.\r\n`/usr/bin/ld: /usr/local/lib/libdouble-conversion.a(double-conversion.cc.o): relocation R_X86_64_32 against '.bss' can not be used when making a shared object; recompile with -fPIC\r\n/usr/local/lib/libdouble-conversion.a: error adding symbols: Bad value\r\ncollect2: error: ld returned 1 exit status\r\nlibtool:   **_error: error: relink 'libfollybenchmark.la' with the above command before installing it_**\r\nMakefile:1316: recipe for target 'install-libLTLIBRARIES' failed\r\nmake[2]: *** [install-libLTLIBRARIES] Error 1`\r\n\r\nI have tried to install folly directly as well as with the fblualib install_all.sh script.  In both cases I received this same error message.  Does anyone know how I can resolve this issue?  Thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/684/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrch2k10": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/682", "title": "MPMCQueue.h is broken on Xcode 9 and Archlinux GCC 7/Clang 6 and maybe other", "body": "Hi, guys\r\n\r\nI've been trying to use folly and wangle  but MPMCQueue.h fail to compile on any compiler I've tried so far.\r\n\r\nArchLinux Gcc 7 and Clang 5/6\r\nMacOS 10.13 + Xcode 9\r\n\r\nI'm missing something or is a known issue?\r\n\r\nBtw there is no code in that file just the basic includes from one of the examples\r\n\r\nTyVM for your time\r\n```\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/src/asyncserver.cpp:1:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncserver.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncsocketclient.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/Threadpool.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/libpentaprotocol_global.hpp:100:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/ExecutorFilter.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/Service.h:22:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap-inl.h:27:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/concurrent/IOThreadPoolExecutor.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/IOThreadPoolExecutor.h:20:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/ThreadPoolExecutor.h:23:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/LifoSemMPMCQueue.h:20:\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:269:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:275:58: error: expected expression\r\n      while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                         ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:278:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:279:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:286:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:299:53: error: expected expression\r\n    this->enqueueWithTicketBase(ticket-offset, slots, cap, stride,\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:305:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:310:56: error: expected expression\r\n    while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                       ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:315:55: error: expected expression\r\n    maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:316:53: error: expected expression\r\n    this->dequeueWithTicketBase(ticket-offset, slots, cap, stride, elem);\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:352:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:359:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:360:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:390:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:418:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:425:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:449:47: error: expected expression\r\n        if (trySeqlockReadSection(state, slots, cap, stride)) {\r\n                                              ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:454:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:466:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n2 warnings and 20 errors generated.\r\nmake[2]: *** [CMakeFiles/PentaProtocolServer.dir/PentaProto/src/asyncserver.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/PentaProtocolServer.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "capsocrates": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/679", "title": "asm command does not compile in MSVC", "body": "This code\r\n[`    asm volatile(\"\" ::\"m\"(ptr) : \"memory\");`](https://github.com/facebook/folly/blob/94b8816bbdca38914030842554cc955caee59063/folly/Malloc.h#L193)\r\nIntroduced in [this commit](https://github.com/facebook/folly/commit/610c11630a3cbccdc2be0a91b5a6c2f934af3f55) does not compile in MSVC.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArntWork": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/678", "title": "Readme.md wrong for Linking non-default boost libraries?", "body": "The instructions say ./configure --with-boost=$BOOST_ROOT/lib but while trying it on ubuntu 16.04 with latest boost,  we needed ./configure --with-boost=$BOOST_ROOT  (so without the /lib at the end). With /lib it says it cannot find a version of boost context.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KindDragon": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/677", "title": "Issues with Visual C++ compiler", "body": "- [x] [folly/Malloc.h(193)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/Malloc.h#L193): error C2059: syntax error: 'volatile'  PR #688\r\n- [x] [folly/detail/Crc32cDetail.cpp(208)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/detail/Crc32cDetail.cpp#L208): [fatal error C1009: compiler limit: macros nested too deeply](https://github.com/facebook/folly/commit/74102328f60e450de7d1dab40d1772f82549fd96#commitcomment-23423375)\r\n- [x] [folly/executors/NamedThreadFactory.h(38)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/executors/NamedThreadFactory.h#L37-L38): error C2665: 'folly::setThreadName': none of the 2 overloads could convert all the argument types\r\n- [x] folly can't link with static libraries https://gist.github.com/KindDragon/c4e6414bd60242d317bb0387a82dce61#file-package-x64-windows-static-rel-out-log-L2291 PR #693\r\n- [x] [folly/futures/Future-inl.h(242)](https://github.com/facebook/folly/blob/fbc4c23895b0ee3874d9a36401d580a2a8957ba9/folly/futures/Future-inl.h#L242): error C2244: 'folly::SemiFuture<T>::SemiFuture': unable to match function definition to an existing declaration\r\n- [x] [folly/io/async/AsyncSocket.cpp(1589)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/io/async/AsyncSocket.cpp#L1589): error C2039: 'Control': is not a member of 'msghdr'. Win10 SDK define MSG_ERRQUEUE too https://naughter.wordpress.com/2017/07/16/changes-in-the-windows-v10-0-16232-sdk-compared-to-windows-v10-0-15063-sdk-part-one/ PR #689\r\n- [x] [folly/io/async/AsyncSocket.cpp(939)](https://github.com/facebook/folly/blob/master/folly/io/async/AsyncSocket.cpp#L937-L946): error C2065: 'SOL_IP': undeclared identifier\r\n- [x] [folly/stats/Histogram.cpp(43)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/stats/Histogram.cpp#L38-L43): error C5037: 'folly::detail::HistogramBuckets<__int64,folly::detail::Bucket<T>>::getPercentileBucketIdx': an out-of-line definition of a member of a class template cannot have default arguments with [T=int64_t] MSVC 2017U4 PR #691\r\n- [x] [folly/synchronization/CallOnce.h(86)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/synchronization/CallOnce.h#L86): error C2988: unrecognizable template declaration/definition. CallOnce.h(98): note: see reference to class template instantiation 'folly::detail::once_flag<Mutex>' being compiled https://github.com/facebook/folly/commit/b529367b595dd4da7e70569cbea36d30ace4fa39#commitcomment-25665382\r\n- [x] [folly\\Random.cpp(43)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/Random.cpp#L43): error C2672: 'folly::detail::once_flag<folly::SharedMutex>::{dtor}': no matching overloaded function found\r\n\r\n/cc @Orvid ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smellyfis": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/671", "title": "folly v2017.09.11.00 does not pick up libunwind reference", "body": "I am using Gentoo and am trying to build an updated folly ebuild (installation stuff) and autotools did not put in the -lunwind for the linker and I got several unrecognized symbols related. when I added \"-lunwind\" to every libfolly*_LDFLAGS I was able to link properly. I do not generally use autotools so I don't know where it is needed to be placed to pick up that flag dynamically, but i see there is something checking for it in configure.ac.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "navidR": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/669", "title": "Change default build system to CMake", "body": "Considering how it is easy to build applications and libraries using CMake, I created this issue to track this problem of \"when CMake will be available for *nix (and all other) platforms?\"\r\n\r\nRight now CMake support is only available on Windows platform.\r\n\r\nLet me give you an instance, I am building a complex Android application. Most of the networking and file system (while being multi threaded) logic is in NDK and I am using 8,9 different library. Compiling those libraries with Autotools is just like hell (therefore it is totally okay to call it Autohell). But just look at this link and see how it is easy to compile C++ project for NDK : \r\nhttps://developer.android.com/ndk/guides/standalone_toolchain.html\r\n\r\nIf you are not familiar with programming in NDK, I have to say compiling and setting up toolchain and required stuff is way complicated than your actual project (figure of speech), while with CMake and CMake support from Google, it is just adding two or three flags and then compiling your library to whatever arch and API level you are targeting. Folly and Wangle are very useful libraries. The only barrier for me to migrate our company C++/NDK to Folly is Autotools (consider how difficult it is to set up continuous integration for NDK and Autotools).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/669/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D-PorcoRosso": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/667", "title": "Fatal signal 6 (SIGABRT)", "body": "Hi:\r\n\r\nI wrote my jni library and integrated prebuild OpenSSL 1.0.2j to verify files signature correctness.\r\n\r\n\bAnd I exploded my jni library (as an aar file) into application project which used react-native, and run application, the native crash happened.\r\n\r\nCrash log as following text, do you have any idea about this crash?\r\n\r\nA/ReactNativeJNI: Check failed: 0 \r\n                                                                      \r\n--------- beginning of crash\r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13774 (FinalizerDaemon)\r\n                                                            \r\n                                                            [ 08-29 16:23:49.846   571:  571 W/         ]\r\n                                                            debuggerd: handling request: pid=13763 uid=10288 gid=10288 tid=13774\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Build fingerprint: 'google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys'\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Revision: '0'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: ABI: 'arm'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: pid: 13763, tid: 13774, name: FinalizerDaemon  >>> com.xxxxxxxxx.xxxxxxxxx <<<\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG: Abort message: 'Check failed: 0 '\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r0 00000000  r1 000035ce  r2 00000006  r3 00000008\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r4 eb31f978  r5 00000006  r6 eb31f920  r7 0000010c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r8 d1840e18  r9 d183e17e  sl 59a52495  fp d184ff7c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     ip 0000000b  sp eb31f250  lr edfa05c7  pc edfa2e30  cpsr 600f0010\r\n08-29 16:23:50.061 14901-14901/? A/DEBUG: backtrace:\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #00 pc 00049e30  /system/lib/libc.so (tgkill+12)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #01 pc 000475c3  /system/lib/libc.so (pthread_kill+34)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #02 pc 0001d635  /system/lib/libc.so (raise+10)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #03 pc 00019181  /system/lib/libc.so (__libc_android_abort+34)\r\n08-29 16:23:50.063 14901-14901/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #05 pc 0000864b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #06 pc 00009a63  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage4FailEv+10)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #07 pc 0000bd47  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage9SendToLogEv+246)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #08 pc 00009897  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage5FlushEv+102)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #09 pc 0000bf7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google15LogMessageFatalD2Ev+2)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #10 pc 000108dd  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+88)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #11 pc 00010863  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt12_Destroy_auxILb0EE9__destroyIPN5folly7dynamicEEEvT_S5_+16)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #12 pc 00010873  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt6vectorIN5folly7dynamicESaIS1_EED2Ev+8)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #13 pc 000108a3  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+30)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #14 pc 0003256f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #15 pc 00032907  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #16 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #17 pc 00032981  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #18 pc 00032a99  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #19 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #20 pc 0001e009  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #21 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #22 pc 0001df7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #23 pc 0001df9d  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #24 pc 0000afed  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so (_ZN8facebook3jni6detail10HybridData16setNativePointerESt10unique_ptrINS1_15BaseHybridClassESt14default_deleteIS4_EE+112)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #25 pc 0000b05b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #26 pc 00a9a657  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/oat/arm/base.odex (offset 0xa30000)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "4a616d6573205265696c6c79": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/666", "title": "Folly fails to compile with redefinition error", "body": "Configure/Make output:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ autoreconf -ivf && ./configure\r\nautoreconf: Entering directory `.'\r\nautoreconf: configure.ac: not using Gettext\r\nautoreconf: running: aclocal --force -I m4\r\nautoreconf: configure.ac: tracing\r\nautoreconf: running: libtoolize --copy --force\r\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\r\nlibtoolize: copying file 'build-aux/ltmain.sh'\r\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\r\nlibtoolize: copying file 'm4/libtool.m4'\r\nlibtoolize: copying file 'm4/ltoptions.m4'\r\nlibtoolize: copying file 'm4/ltsugar.m4'\r\nlibtoolize: copying file 'm4/ltversion.m4'\r\nlibtoolize: copying file 'm4/lt~obsolete.m4'\r\nautoreconf: running: /usr/bin/autoconf --force\r\nautoreconf: running: /usr/bin/autoheader --force\r\nautoreconf: running: automake --add-missing --copy --force-missing\r\nconfigure.ac:32: installing 'build-aux/compile'\r\nconfigure.ac:27: installing 'build-aux/missing'\r\nMakefile.am: installing 'build-aux/depcomp'\r\nautoreconf: Leaving directory `.'\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\r\nchecking for gawk... no\r\nchecking for mawk... mawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking how to print strings... printf\r\nchecking for style of include used by make... GNU\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for fgrep... /bin/grep -F\r\nchecking for ld used by gcc... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 1572864\r\nchecking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\r\nchecking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... @\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... mt\r\nchecking if mt is a manifest tool... no\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... no\r\nchecking for gcc option to produce PIC... -fPIC -DPIC\r\nchecking if gcc PIC flag -fPIC -DPIC works... yes\r\nchecking if gcc static flag -static works... yes\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking dependency style of g++... gcc3\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for ld used by g++... /usr/bin/ld -m elf_x86_64\r\nchecking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking for g++ option to produce PIC... -fPIC -DPIC\r\nchecking if g++ PIC flag -fPIC -DPIC works... yes\r\nchecking if g++ static flag -static works... yes\r\nchecking if g++ supports -c -o file.o... yes\r\nchecking if g++ supports -c -o file.o... (cached) yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking dynamic linker characteristics... (cached) GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking for gcc... (cached) gcc\r\nchecking whether we are using the GNU C compiler... (cached) yes\r\nchecking whether gcc accepts -g... (cached) yes\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking whether gcc understands -c and -o together... (cached) yes\r\nchecking dependency style of gcc... (cached) gcc3\r\nchecking if g++ supports C++1y features without additional flags... yes\r\nchecking if g++ supports C++1y features with -std=c++1y... yes\r\nchecking if g++ supports C++1y features with -std=gnu++1y... yes\r\nchecking whether -Wshadow-local and -Wshadow-compatible-local are supported... no\r\nchecking for main in -lgflags... yes\r\nchecking for gflags viability... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for GFLAGS... no\r\nconfigure: gflags.pc not found, treating as legacy dependency\r\nchecking for main in -lglog... yes\r\nchecking for glog viability... yes\r\nchecking for GLOG... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking whether compiling and linking against OpenSSL works... yes\r\nchecking for OPENSSL... yes\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking whether the Boost::Context library is available... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking whether the Boost::Program_Options library is available... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking whether the Boost::Thread library is available... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking whether the Boost::Regex library is available... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking whether the Boost::System library is available... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking whether the Boost::Filesystem library is available... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking whether the Boost::Chrono library is available... yes\r\nchecking for exit in -lboost_chrono... yes\r\nchecking for python... /usr/bin/python\r\nchecking for python version... 2.7\r\nchecking for python platform... linux2\r\nchecking for python script directory... ${prefix}/lib/python2.7/dist-packages\r\nchecking for python extension module directory... ${exec_prefix}/lib/python2.7/dist-packages\r\nchecking for ANSI C header files... (cached) yes\r\nchecking features.h usability... yes\r\nchecking features.h presence... yes\r\nchecking for features.h... yes\r\nchecking malloc.h usability... yes\r\nchecking malloc.h presence... yes\r\nchecking for malloc.h... yes\r\nchecking bits/functexcept.h usability... yes\r\nchecking bits/functexcept.h presence... yes\r\nchecking for bits/functexcept.h... yes\r\nchecking bits/c++config.h usability... yes\r\nchecking bits/c++config.h presence... yes\r\nchecking for bits/c++config.h... yes\r\nchecking double-conversion/double-conversion.h usability... yes\r\nchecking double-conversion/double-conversion.h presence... yes\r\nchecking for double-conversion/double-conversion.h... yes\r\nchecking for ceil in -ldouble-conversion... yes\r\nchecking for event_set in -levent... yes\r\nchecking for EVENT... yes\r\nchecking for an ANSI C-conforming const... yes\r\nchecking for inline... inline\r\nchecking for size_t... yes\r\nchecking whether time.h and sys/time.h may both be included... yes\r\nchecking for working volatile... yes\r\nchecking for __int128... yes\r\nchecking for __int128 type traits... yes\r\nchecking for pthread_spinlock_t... yes\r\nchecking for ifunc support... yes\r\nchecking for final and override support... yes\r\nchecking for libc++... no\r\nchecking for c++11 atomic support without GNU Atomic library... yes\r\nchecking for main in -ldl... yes\r\nchecking for liblinux-vdso support... yes\r\nchecking for usable std::is_trivially_copyable... yes\r\nchecking gflags namespace... gflags\r\nchecking for weak symbol support... yes\r\nchecking for wchar support... yes\r\nchecking for unaligned access support... yes\r\nchecking for vsnprintf reporting bad format strings... no\r\nchecking for library containing cplus_demangle_v3_callback... -liberty\r\nchecking for library containing clock_gettime... none required\r\nchecking for pthread_atfork support... yes\r\nchecking for XSI style strerror_r support... no\r\nchecking for ext/random and __gnu_cxx::sfmt19937... yes\r\nchecking for VLA (variable-length array) support... yes\r\nchecking for malloc_size... no\r\nchecking for malloc_usable_size... yes\r\nchecking for memrchr... yes\r\nchecking for pipe2... yes\r\nchecking for preadv... yes\r\nchecking for pwritev... yes\r\nchecking lz4.h usability... yes\r\nchecking lz4.h presence... yes\r\nchecking for lz4.h... yes\r\nchecking for LZ4_decompress_safe in -llz4... yes\r\nchecking snappy.h usability... yes\r\nchecking snappy.h presence... yes\r\nchecking for snappy.h... yes\r\nchecking for main in -lsnappy... yes\r\nchecking zlib.h usability... yes\r\nchecking zlib.h presence... yes\r\nchecking for zlib.h... yes\r\nchecking for main in -lz... yes\r\nchecking lzma.h usability... yes\r\nchecking lzma.h presence... yes\r\nchecking for lzma.h... yes\r\nchecking for main in -llzma... yes\r\nchecking zstd.h usability... no\r\nchecking zstd.h presence... no\r\nchecking for zstd.h... no\r\nchecking bzlib.h usability... no\r\nchecking bzlib.h presence... no\r\nchecking for bzlib.h... no\r\nchecking linux/membarrier.h usability... yes\r\nchecking linux/membarrier.h presence... yes\r\nchecking for linux/membarrier.h... yes\r\nchecking libdwarf/dwarf.h usability... no\r\nchecking libdwarf/dwarf.h presence... no\r\nchecking for libdwarf/dwarf.h... no\r\nchecking dwarf.h usability... no\r\nchecking dwarf.h presence... no\r\nchecking for dwarf.h... no\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating io/test/Makefile\r\nconfig.status: creating libfolly.pc\r\nconfig.status: creating test/Makefile\r\nconfig.status: creating test/function_benchmark/Makefile\r\nconfig.status: creating experimental/Makefile\r\nconfig.status: creating experimental/io/test/Makefile\r\nconfig.status: creating experimental/logging/Makefile\r\nconfig.status: creating experimental/logging/example/Makefile\r\nconfig.status: creating experimental/symbolizer/Makefile\r\nconfig.status: creating init/Makefile\r\nconfig.status: creating stats/test/Makefile\r\nconfig.status: creating config.h\r\nconfig.status: config.h is unchanged\r\nconfig.status: executing folly-config.h commands\r\nconfig.status: creating folly-config.h - prefix FOLLY for config.h defines\r\nconfig.status: folly-config.h is unchanged\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/fun/fboss/external/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/fun/fboss/external/folly/folly'\r\ndepbase=`echo Assume.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF $depbase.Tpo -c -o Assume.lo Assume.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp  -fPIC -DPIC -o .libs/Assume.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp -o Assume.o >/dev/null 2>&1\r\ndepbase=`echo Checksum.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF $depbase.Tpo -c -o Checksum.lo Checksum.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp  -fPIC -DPIC -o .libs/Checksum.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp -o Checksum.o >/dev/null 2>&1\r\ndepbase=`echo ClockGettimeWrappers.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF $depbase.Tpo -c -o ClockGettimeWrappers.lo ClockGettimeWrappers.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp  -fPIC -DPIC -o .libs/ClockGettimeWrappers.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp -o ClockGettimeWrappers.o >/dev/null 2>&1\r\ndepbase=`echo concurrency/CacheLocality.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF $depbase.Tpo -c -o concurrency/CacheLocality.lo concurrency/CacheLocality.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp  -fPIC -DPIC -o concurrency/.libs/CacheLocality.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp -o concurrency/CacheLocality.o >/dev/null 2>&1\r\ndepbase=`echo detail/Futex.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF $depbase.Tpo -c -o detail/Futex.lo detail/Futex.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp  -fPIC -DPIC -o detail/.libs/Futex.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp -o detail/Futex.o >/dev/null 2>&1\r\ndepbase=`echo detail/IPAddress.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF $depbase.Tpo -c -o detail/IPAddress.lo detail/IPAddress.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp  -fPIC -DPIC -o detail/.libs/IPAddress.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp -o detail/IPAddress.o >/dev/null 2>&1\r\ndepbase=`echo detail/StaticSingletonManager.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF $depbase.Tpo -c -o detail/StaticSingletonManager.lo detail/StaticSingletonManager.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp  -fPIC -DPIC -o detail/.libs/StaticSingletonManager.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp -o detail/StaticSingletonManager.o >/dev/null 2>&1\r\ndepbase=`echo detail/ThreadLocalDetail.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF $depbase.Tpo -c -o detail/ThreadLocalDetail.lo detail/ThreadLocalDetail.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF detail/.deps/ThreadLocalDetail.Tpo -c detail/ThreadLocalDetail.cpp  -fPIC -DPIC -o detail/.libs/ThreadLocalDetail.o\r\nIn file included from ./../folly/Foreach.h:320:0,\r\n                 from ./../folly/detail/ThreadLocalDetail.h:30,\r\n                 from detail/ThreadLocalDetail.cpp:16:\r\n./../folly/Foreach-inl.h:222:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:236:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:315:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)'\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:303:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\nMakefile:1902: recipe for target 'detail/ThreadLocalDetail.lo' failed\r\nmake[2]: *** [detail/ThreadLocalDetail.lo] Error 1\r\nmake[2]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:2013: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:1195: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\nfun@woodhouse:\\~/fboss/external/folly/folly$\r\n```\r\n\r\nG++ version info:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ g++ --version\r\ng++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bilosikia": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/665", "title": "ubuntu 17.04 make error", "body": "i have installed all the packages.how can i deal with this?\r\ndetail/Crc32cDetail.cpp: In function \u2018uint64_t folly::crc32_detail::CombineCRC(long unsigned int, uint64_t, uint64_t, uint64_t, const uint64_t*)\u2019:\r\ndetail/Crc32cDetail.cpp:153:31: error: \u2018_mm_cvtsi128_si64\u2019 was not declared in this scope\r\n   crc0 = _mm_cvtsi128_si64(res);\r\n                               ^\r\ndetail/Crc32cDetail.cpp:155:34: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc2 = _mm_crc32_u64(crc2, crc0);\r\n                                  ^\r\ndetail/Crc32cDetail.cpp: In function \u2018void folly::crc32_detail::triplet_loop(long unsigned int, uint64_t&, const unsigned char*&, long unsigned int)\u2019:\r\ndetail/Crc32cDetail.cpp:48:52: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc##0 = _mm_crc32_u64(crc##0, *(buf##0 + offset)); \\\r\n                                                    ^\r\ndetail/Crc32cDetail.cpp:201:9: note: in expansion of macro \u2018CRCtriplet\u2019\r\n         CRCtriplet(crc, next, -128);\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shaneknapp": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/662", "title": "unable to compile folly on ubuntu 16.04 LTS", "body": "i've gone through the installation instructions, installed all of the recommended packages, but building folly fails on the first make.\r\n\r\ni have a hand-rolled boost installation (1.6.2) installed in my homedir, which i compiled w/C++14 support.\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ uname -a\r\nLinux amp-jenkins-staging-master 4.4.0-91-generic #114-Ubuntu SMP Tue Aug 8 11:56:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ ./configure --with-boost=$HOME/boost --prefix=/home/eecs/sknapp/thrift &> configure.out\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ grep boost configure.out\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking for exit in -lboost_chrono... yes\r\n```\r\n\r\nlooks cromulent, right?  well...\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\n/bin/bash ./libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o generate_fingerprint_tables build/GenerateFingerprintTables.o libfollybase.la -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o generate_fingerprint_tables build/GenerateFingerprintTables.o  ./.libs/libfollybase.a -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\n/usr/bin/ld: cannot find -lboost_context\r\n/usr/bin/ld: cannot find -lboost_program_options\r\n/usr/bin/ld: cannot find -lboost_thread\r\n/usr/bin/ld: cannot find -lboost_filesystem\r\n/usr/bin/ld: cannot find -lboost_system\r\n/usr/bin/ld: cannot find -lboost_regex\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1662: recipe for target 'generate_fingerprint_tables' failed\r\nmake[2]: *** [generate_fingerprint_tables] Error 1\r\nmake[2]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1997: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1191: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n\r\n(everything up until this point seems to compile normally)\r\n\r\ni've tried manually setting --with-boost-libdir, updating LD_LIBRARY_PATH, etc etc but i always get the same failure.\r\n\r\nany ideas?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hrjaco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/655", "title": "FutureTimekeepr threads runs forever", "body": "We have a thrift server built on top of fbthrift. We uses future's delayed() function to implement speculative request failover. But after we enable speculative request failover, we noticed that our server cannot be stopped correctly.\r\n\r\nAfter we stop the server, we noticed that our server's main function reaches the end, but the `FutureTimekeepr` still runs, which causes the process not stopped. If we do not enable speculative failover(FutureTimekeepr won't exist), our server can be stopped correctly.\r\n\r\nI noticed the FutureTimekeepr thread is used as a singleton inside ThreadWheelTimekeeper. Any idea why its destructor is not called even after main function reaches the end? thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simpkins": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/e96129da65d3ad2b20aae5a2bf2d22d2d72b8feb", "message": "cmake: fix the test builds\n\nSummary:\n- Fix the locations of some tests that have been moved.\n- Remove some tests that have been deleted.\n- Comment out some tests that depend on parts of folly that are not currently\n  built by the CMake build scripts.\n- Fix a build error in CompressionTest.cpp if FOLLY_HAVE_LIBZ is not defined.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735700\n\nfbshipit-source-id: 89f60751fa7079b2c609d23d85fbed2a0f317b55"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6c511999f92066ed84778bca4491c8d139a3195d", "message": "fix a multiline comment warning\n\nSummary:\nDeterministicScheduleTest.cpp contained several single-line C++ comments that\nended in a trailing backslash.  This makes the preprocessor treat the following\nline as a comment as well, even if it does not start with `//`.  Newer versions\nof gcc emit warnings about this.\n\nThis changes the comment in DeterministicScheduleTest.cpp to use `/* */` to\navoid this issue.\n\nReviewed By: siyengar\n\nDifferential Revision: D6735672\n\nfbshipit-source-id: 162c735507a643ce0dbee58f1f054865237e1eba"}, {"url": "https://api.github.com/repos/facebook/folly/commits/bdd9360c598d80d524de6780cd5be65af56d98fd", "message": "fix some bugs in AsyncSSLSocketTest\n\nSummary:\nA couple of the test functions in AsyncSSLSocketTest maintained two EventBase\nobjects and alternated looping between them.  In some cases it would call\nEventBase::loopOnce() even when there was no work to do.  This call normally\nblocks until an event is ready.  This happened to work when using libevent1,\nbut this appears mostly accidental: with libevent1 EVLOOP_ONCE causes the loop\nto break out even after an \"internal\" I/O event; in libevent2 EVLOOP_ONCE only\nbreaks out after a non-internal event has occurred:\nhttps://github.com/libevent/libevent/commit/0617a818204397790e5e4c9bcb9e91ae5ea7817a\n\nIn these tests it turns out that the internal EventBase NotificationQueue\nalways gets triggered the very first time loopOnce() is called, preventing\nthese tests from hanging when using libevent1.\n\nThis fixes the hang when using libevent2 by removing the initial loopOnce()\ncalls that potentially have nothing to do.  This also consolidates the 2\nEventBase objects into one to avoid having to alternate loopOnce() calls\nbetween them without knowing which one actually has work to do.\n\nThis also fixes an issue where the code never checked the return value of\n`recv()`\n\nReviewed By: yfeldblum, siyengar\n\nDifferential Revision: D6735669\n\nfbshipit-source-id: 5f36106a08866aa8908e82263f83a606399cdf79"}, {"url": "https://api.github.com/repos/facebook/folly/commits/7da4ef82aee382777bb50aadd4af14a482739d10", "message": "suppress warnings in tests for deprecated functions\n\nSummary:\nUpdate ShellTest and PromiseTest to suppress warnings about using deprecated\nfunctions in the tests for those functions.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735670\n\nfbshipit-source-id: 89edcb49d1eff3132398aaef88f5a5cae82e3557"}, {"url": "https://api.github.com/repos/facebook/folly/commits/19db503e08e4ea46a8b4d9a272605006b6245f88", "message": "cmake: fix path to FindGLog.cmake\n\nSummary:\nThe cmake files refer to this package as \"FindGLog\", but the file name on disk\nincorrectly had the 'L' lower cased.  This worked on case-insensitive file\nsystems, but caused cmake to fail when used on a case-sensitive file system.\n\nThis diff fixes the file name to match the name used in the cmake files.  This\nis also more consistent with the existing \"FindGFlags\" and \"FindGMock\"\npackages.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6710439\n\nfbshipit-source-id: 19f6824ef6793e505b5a0080c0fefe0b145a41c3"}, {"url": "https://api.github.com/repos/facebook/folly/commits/337e897a2510b8f1291c6be95b3eb18f0c80cb68", "message": "cmake: remove DOS-style line endings\n\nSummary:\nA number of the files in CMake/ had inconsistent line-endings.  This updates\nfiles using DOS-style CRLF line endings to just use CR instead.  On Windows,\ngit is capable of automatically changing CR to CRLF when checking out the\nrepository working directory.\n\nReviewed By: meyering\n\nDifferential Revision: D6714717\n\nfbshipit-source-id: 82adccf4e522d38fd1cb420869f62e52dbd6c5f1"}, {"url": "https://api.github.com/repos/facebook/folly/commits/b22d1721ed9c062e22b33936e13b39ed1507391a", "message": "cmake: add checks to generate folly-config.h correctly\n\nSummary:\nAdd proper checks to detect and set the values in folly-config.h correctly.\nPreviously the code simply hard-coded values that were appropriate for Windows.\n\nThis does not yet define all of the settings produced by the autoconf build,\nbut it lets the CMake-based build largely succeed on Linux systems.\n\nReviewed By: meyering\n\nDifferential Revision: D6710437\n\nfbshipit-source-id: 80490080ee6322995b740ac2a15181d220c6874a"}, {"url": "https://api.github.com/repos/facebook/folly/commits/03957924ccf4e32d0fbc4dc3198da3249f57b890", "message": "cmake: set compiler flags for non-Windows platforms\n\nSummary:\nUpdate CMakeLists.txt to check the current platform, and to set compiler flags\ncorrectly.  It now uses flags for Microsoft Visual Studio on Windows, and flags\nfor gcc or clang on all other platforms.  Previously it unconditionally used\nMSVC flags.\n\nReviewed By: meyering\n\nDifferential Revision: D6710435\n\nfbshipit-source-id: dbae3097bcadf1ee4a25879dd7770603387c0e4d"}, {"url": "https://api.github.com/repos/facebook/folly/commits/3d9eb7ffc32c2f5f878bb4aee61d30cb8c62a146", "message": "cmake: support using a separate build directory\n\nSummary:\nFix rules in the CMakeLists.txt file that generate source files to first create\ntheir output directory if necessary.  This allows the build to succeed when\nbuilding with a separate build output directory, rather than placing build\nartifacts in the source tree itself.\n\nReviewed By: meyering\n\nDifferential Revision: D6710436\n\nfbshipit-source-id: 786a65a37a70833e7e4a5affe4df292626dbb591"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spalamarchuk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/4bfbe0a10e914c3626e16cfdb9e87508e63b065f", "message": "Add DCHECKs for checking that underlying IOBuf wasn't modified\n\nSummary: Appending/prepending to IOBuf while iterating over it with Cursor is unsafe. This diff adds DCHECKs to catch such cases.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735060\n\nfbshipit-source-id: 7799facc52c53fabd83756ecb26a18c4ebd69677"}, {"url": "https://api.github.com/repos/facebook/folly/commits/86cefd11d497791f00769e69fba550f710906527", "message": "Properly handle appending to the tail of the chain\n\nSummary: Currently appending to the tail of the chain would cause the cursor advancing to the beginning of the chain, which is not correct, instead we should advance to the tail.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6734999\n\nfbshipit-source-id: b8b2585e0475b656f7b6bf4ed39686e2ccb2e432"}, {"url": "https://api.github.com/repos/facebook/folly/commits/afde52ff7655ba79759eafdbee14b3fe47428fce", "message": "Track absolute position of the cursor\n\nSummary:\nStart tracking the position of the cursor from the head of IOBuf chain. This comes at almost no cost (one arithmetic operation on IOBuf advance).\n\nThe main use case for this cursor is Thrift deserialization code. It allows us to stop accumulating `xfer` on every single byte/field/element write and instead get it from Cursor in the end (when we're exiting Thrift code).\nThis allows achieving ~10% better performance of deserialization.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6646813\n\nfbshipit-source-id: 8f796854a24a411698e96afe037695e816813022"}, {"url": "https://api.github.com/repos/facebook/folly/commits/2c730d6fe79b5642133c55545c4ed7570ce2abb9", "message": "Improve fast path of Cursor\n\nSummary:\nThis change simplifies the fastpath by reducing it to bare minimum (i.e. check length, load data) and removes indirection to IOBuf.\nAdditionally it adds `skipNoAdvance` method to have 1-instruction skip.\n\nDisassembly of `read<signed char>` is over 35 instructions (just hot path). With this change it's doesn to 8.\nDisassembly after:\n  Dump of assembler code for function folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>():\n     0x000000000041f0f0 <+0>:     mov    0x18(%rdi),%rax\n     0x000000000041f0f4 <+4>:     lea    0x1(%rax),%rcx\n     0x000000000041f0f8 <+8>:     cmp    0x10(%rdi),%rcx\n     0x000000000041f0fc <+12>:    ja     0x41f105 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>()+21>\n     0x000000000041f0fe <+14>:    mov    (%rax),%al\n     0x000000000041f100 <+16>:    mov    %rcx,0x18(%rdi)\n     0x000000000041f104 <+20>:    retq\n     0x000000000041f105 <+21>:    jmpq   0x41f110 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::readSlow<unsigned char>()>\n\nWith this diff Thrift deserialization becomes ~20% faster (with prod workloads).\n\nThrift benchmark:\nBefore:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   12.98ns   77.03M\n  BinaryProtocol_read_SmallInt                                20.94ns   47.76M\n  BinaryProtocol_read_BigInt                                  20.86ns   47.93M\n  BinaryProtocol_read_SmallString                             34.64ns   28.86M\n  BinaryProtocol_read_BigString                              185.53ns    5.39M\n  BinaryProtocol_read_BigBinary                               67.34ns   14.85M\n  BinaryProtocol_read_LargeBinary                             62.23ns   16.07M\n  BinaryProtocol_read_Mixed                                   58.74ns   17.03M\n  BinaryProtocol_read_SmallListInt                            89.99ns   11.11M\n  BinaryProtocol_read_BigListInt                              39.92us   25.05K\n  BinaryProtocol_read_BigListMixed                           616.20us    1.62K\n  BinaryProtocol_read_LargeListMixed                          83.49ms    11.98\n  CompactProtocol_read_Empty                                  11.28ns   88.67M\n  CompactProtocol_read_SmallInt                               19.15ns   52.22M\n  CompactProtocol_read_BigInt                                 26.14ns   38.25M\n  CompactProtocol_read_SmallString                            31.04ns   32.22M\n  CompactProtocol_read_BigString                             184.55ns    5.42M\n  CompactProtocol_read_BigBinary                              69.73ns   14.34M\n  CompactProtocol_read_LargeBinary                            64.39ns   15.53M\n  CompactProtocol_read_Mixed                                  58.73ns   17.03M\n  CompactProtocol_read_SmallListInt                           76.50ns   13.07M\n  CompactProtocol_read_BigListInt                             25.93us   38.56K\n  CompactProtocol_read_BigListMixed                          623.15us    1.60K\n  CompactProtocol_read_LargeListMixed                         80.57ms    12.41\n  ============================================================================\n\nAfter:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   10.40ns   96.17M\n  BinaryProtocol_read_SmallInt                                15.14ns   66.03M\n  BinaryProtocol_read_BigInt                                  15.19ns   65.84M\n  BinaryProtocol_read_SmallString                             25.19ns   39.70M\n  BinaryProtocol_read_BigString                              172.85ns    5.79M\n  BinaryProtocol_read_BigBinary                               56.88ns   17.58M\n  BinaryProtocol_read_LargeBinary                             56.77ns   17.61M\n  BinaryProtocol_read_Mixed                                   43.98ns   22.74M\n  BinaryProtocol_read_SmallListInt                            58.19ns   17.19M\n  BinaryProtocol_read_BigListInt                              19.75us   50.63K\n  BinaryProtocol_read_BigListMixed                           440.20us    2.27K\n  BinaryProtocol_read_LargeListMixed                          56.94ms    17.56\n  CompactProtocol_read_Empty                                   9.35ns  106.93M\n  CompactProtocol_read_SmallInt                               13.07ns   76.49M\n  CompactProtocol_read_BigInt                                 18.23ns   54.87M\n  CompactProtocol_read_SmallString                            25.61ns   39.05M\n  CompactProtocol_read_BigString                             174.46ns    5.73M\n  CompactProtocol_read_BigBinary                              59.77ns   16.73M\n  CompactProtocol_read_LargeBinary                            60.81ns   16.44M\n  CompactProtocol_read_Mixed                                  42.70ns   23.42M\n  CompactProtocol_read_SmallListInt                           66.89ns   14.95M\n  CompactProtocol_read_BigListInt                             25.08us   39.87K\n  CompactProtocol_read_BigListMixed                          427.93us    2.34K\n  CompactProtocol_read_LargeListMixed                         56.11ms    17.82\n  ============================================================================\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6635325\n\nfbshipit-source-id: 393fc1005689042977c03f37f5a898ebe7814d44"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "djwatson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/a4306bcdf04c95f321a96ab9b0f29de1c1e678f1", "message": "Loop Time\n\nSummary:\nOnly do the exponential loop smoothing once every 10ms.\nIf we need it before then, do it linearly.\n\nAlso, remove one of the now()s by only calling it once.\n\nReviewed By: bmaurer, yfeldblum\n\nDifferential Revision: D6690047\n\nfbshipit-source-id: 8267c01064aabc17cb8e86eb888e6120c99a129f"}, {"url": "https://api.github.com/repos/facebook/folly/commits/8893b8bcd26b41471e77c6882d77404c9a617176", "message": "parkinglot benchmark\n\nSummary: Add benchmark vs. futex\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6639280\n\nfbshipit-source-id: 9735444a7f48011f31603159561675d472cc4411"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plapukhov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/9bf260657e140cace3cab8850d6a40fac3a5cd93", "message": "add tryCreateNetwork()\n\nSummary: Add non-throwing version of createNetwork(), and rework existing code to throw exceptions based on error codes returned by non-throwing version.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6705425\n\nfbshipit-source-id: 268ff64c36e7cceeea3463248d18b7b2cb81390e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yfeldblum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/61cdb3dc27700545a65062e174d1b7f1ac15f088", "message": "Fix Build: folly/synchronization/test/ParkingLotBenchmark.cpp (sign-compare, unused-variable)\n\nSummary: [Folly] Fix Build: `folly/synchronization/test/ParkingLotBenchmark.cpp` (`sign-compare`, `unused-variable`).\n\nReviewed By: djwatson\n\nDifferential Revision: D6733586\n\nfbshipit-source-id: 04b82110e8e0b655e6b3994dbca3bd0b4bd57eef"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cf930032da9b0796d96c14c3b4446a75477c1ef3", "message": "Revert D6725091: [Folly] Use thread-local in RequestContext::getStaticContext\n\nSummary:\nThis reverts commit 9979f39677284b1051cb109b461097495d77ca17\n\nbypass-lint\n\nAn infra SEV is better than not reverting this diff.\nIf you copy this password, see you in SEV Review!\ncause_a_sev_many_files\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: f1e3c80c869aa47684f5fbe79528e68174dee568"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6746259314362d89f3d1d1dbfdf00c9fe18de202", "message": "Use thread-local in RequestContext::getStaticContext\n\nSummary:\n[Folly] Use thread-local in `RequestContext::getStaticContext`.\n\n`folly::SingletonThreadLocal` uses `folly::ThreadLocal`. However, `static FOLLY_TLS` (`static __thread`) is always faster than `folly::ThreadLocal` for thread-local singletons for which iteration is not required.\n\nReviewed By: djwatson\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: 9979f39677284b1051cb109b461097495d77ca17"}, {"url": "https://api.github.com/repos/facebook/folly/commits/1aabda15e688be7a21874c1c8f5252b898bdb312", "message": "Fix missing WaitOptions symbol in autotools build\n\nSummary:\n[Folly] Fix missing `WaitOptions` symbol in autotools build.\n\nCloses #736.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6724950\n\nfbshipit-source-id: 54ac0d1a743aa38fe1a7a2bdce585fced18c5a44"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cd1bdc912603c0358ba733d379a74ae90ab3a437", "message": "Fix copyright lines\n\nSummary: [Folly] Fix copyright lines based on file histories.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6720312\n\nfbshipit-source-id: c70a667a1977e70e2d4451ea624f96163982f681"}, {"url": "https://api.github.com/repos/facebook/folly/commits/e092e957b750dbf24de247b0794cd4b0bb9bfdaf", "message": "Convert newlines in folly/portability/PThread.cpp\n\nSummary:\n[Folly] Convert newlines in `folly/portability/PThread.cpp`.\n\n```\ndos2unix folly/portability/PThread.cpp\n```\n\nReviewed By: meyering\n\nDifferential Revision: D6720343\n\nfbshipit-source-id: b92122b4a7012d7f8d73d293af51b4fcc868c582"}, {"url": "https://api.github.com/repos/facebook/folly/commits/47b2f8dfdc39b149accf9ae830551eee670d98d1", "message": "Promote aligned_malloc and aligned_free\n\nSummary:\n[Folly] Promote `aligned_malloc` and `aligned_free` from `namespace folly::detail` to `namespace folly`.\n\nAnd move them from `folly/portability/Memory.h` to `folly/Memory.h`.\n\nDifferential Revision: D6153394\n\nfbshipit-source-id: eef314d2bc171910ea3c8403da9e9e1d1858ce15"}, {"url": "https://api.github.com/repos/facebook/folly/commits/fd5eeb5f4bb9ad55172e9454f726667e3c325000", "message": "Unsafe pre-sorted construction for sorted-vector containers\n\nSummary:\n[Folly] Unsafe pre-sorted construction for sorted-vector containers.\n\nIf the backing container type can be constructed directly in sorted order or can be determined in advance to be in sorted order, then a special constructor can help code take advantage of this condition by avoiding an extra invocation of `std::sort`.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6708379\n\nfbshipit-source-id: 25d886b0814dc9230c6046ed1e7f199fac47754e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/12552372", "body": "@Orvid - Can you please check this against MSVC and let me know if this helps?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12552372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577338", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "meyering": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/492fad43a76506407008a5394511daf6bba5bccc", "message": "define SKIP_IF\n\nSummary:\nFinding ourselves writing too many identical \"if (expr) SKIP << ...\" statements,\nthis change factors out/encapsulates the functionality.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6727531\n\nfbshipit-source-id: 703abcd5d8c30a6ebab94327a12da4f2d1f7ff74"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleivag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/d7b6ad4972b288f90bf57d7597103c44c244decd", "message": "allow command to accept \"--\" separator\n\nSummary:\nCurrently NestedCommandLineApp does not support `--` to indicate that the following arguments should be parsed as arguments, not nested commands or options.\nThis diff fix that by whitelisting any argument given after \"--\"\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6721144\n\nfbshipit-source-id: 38a850b6ea803dc758c5fe65a21575e5faeac35b"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidtgoldblatt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/98d1077ce0603b0713353d638cb1436a28827af6", "message": "Add Tearable, for concurrently-modified non-atomic objects.\n\nSummary:\nThis adds the Tearable class template, which holds storage for an\narbitrarily-sized object that can be concurrently read or written without any\nexternal synchronization.\n\nReviewed By: yfeldblum, djwatson\n\nDifferential Revision: D6422334\n\nfbshipit-source-id: ee3853bbd393ac8e30dca6439c61606cc5495f92"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "flarnie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/719", "title": "Add `CONTRIBUTING` and `CODE_OF_CONDUCT`", "body": "Hi! I noticed this repo could use some documentation to help new contributors.\r\n\r\n\r\n\r\n**why make this change?:**\r\nRegarding the `CONTRIBUTING.md` -> Including instructions for new contributors to open source is a courtesy that will foster a welcoming and safe open source community at Facebook.\r\n\r\nRegarding the Code of Conduct ->\r\n\r\nFacebook Open Source provides a Code of Conduct statement for all\r\nprojects to follow, to promote a welcoming and safe open source community.\r\n\r\nExposing the COC via a separate markdown file is a standard being\r\npromoted by Github via the Community Profile in order to meet their Open\r\nSource Guide's recommended community standards.\r\n\r\nAs you can see, adding this file will improve [the folly community profile](https://github.com/facebook/folly/community)\r\nchecklist and increase the visibility of our COC.\r\n\r\n**test plan:**\r\nViewing it on my branch -\r\n<img width=\"1014\" alt=\"screen shot 2017-12-03 at 4 10 05 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531641-cd914672-d844-11e7-8e27-4368c85fb5cd.png\">\r\n<img width=\"1006\" alt=\"screen shot 2017-12-03 at 4 10 14 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531642-cda91450-d844-11e7-97fd-513961779e91.png\">\r\n\r\n**issue:**\r\ninternal task t23481323", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "badarihp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/710", "title": "Added addFuture function , which accepts function, expiry time, expir\u2026", "body": "Added new function addFuture which can accept a function, expiry time, and expiry callback function.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dryganets": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/653", "title": "Handle 4-byte unicode code points.", "body": "https://github.com/facebook/folly/pull/640\r\nreworked to have a surrogate check for the 4th symbol.\r\n\r\nWe need it for react-native to make sure that invalid symbols will be correctly skipped in case somebody passes a corrupted string to javascript core.\r\n\r\nNeeds to be backported to 2016.09.26.00 to fix the following issue in react-native:\r\n#10756\r\n```\r\nFatal Exception: java.lang.RuntimeException: Failed to create String from JSON\r\n       at com.facebook.react.bridge.queue.NativeRunnable.run(NativeRunnable.java)\r\n       at android.os.Handler.handleCallback(Handler.java:739)\r\n       at android.os.Handler.dispatchMessage(Handler.java:95)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:31)\r\n       at android.os.Looper.loop(Looper.java:234)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadImpl$3.run(MessageQueueThreadImpl.java:193)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "choeger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/640", "title": "Handle 4-byte unicode code points", "body": "fixes #632\r\n\r\nSigned-off-by: Christoph H\u00f6ger <christoph.hoeger@celeraone.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yeolar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/619", "title": "fixtypo", "body": "Miss putMessages test at folly/io/async/test/NotificationQueueTest.cpp", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petr-tik": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/618", "title": "Hyphen typos", "body": "Removed spaces after some hyphens inside compound words", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tedjp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/554", "title": "IOStreamBuf (istream/basic_streambuf adaptor for IOBuf)", "body": "Allows chained `IOBuf`s to be read via `std::istream` without having to coalesce them into a single contiguous buffer first.\r\n\r\nWorks with any single-byte type, eg. `char` or `uint8_t`. Not currently usable on multi-byte types like `wchar_t` due to the extra complexity involved in recomposing multi-byte characters that are split across `IOBuf` boundaries. (`static_assert` prevents use with multi-byte types.)\r\n\r\nCurrently read-only; cannot be used with a `std::ostream`.\r\n\r\nDepends the `io/test/Makefile.am` changes in #550. I've included the two necessary commits in this pull request. Happy to resubmit this after #550 completes review if that's preferred.\r\n\r\nThere are probably good performance reasons to avoid using this in general \u2014 and perhaps that should be noted in the header \u2014 but it could be useful in conjunction with APIs that can read from an `istream`. My use for this was with Proxygen: passing an incoming message body (chained `IOBuf`) to a 3rd party API.\r\n\r\nThe use of a `.tcc` file for the implementation of most of the templated functions is unusual for Folly but I wanted to keep them out of the general header. It could easily be renamed to `\u2026-impl.h` or whatever the preferred style is.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brunomorishita": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/425", "title": "Remove dependency from boost class noncopyable", "body": "With explicitly deleted member functions in C++11 the boost class noncopyable is not needed anymore\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fabbree": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/399", "title": "Fix for HHWheelTimer assert-fails when destroy() happens after cancel\u2026", "body": "\u2026All() #397\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rigtorp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/378", "title": "Add memory padding and alignment to prevent false sharing", "body": "Ensure no thirdparty thread writes to a cacheline shared by our ringbuffer, readIndex and writeIndex.\nEnsure readIndex and writeIndex are located on different cachelines.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmbeard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/351", "title": "Allow clients of FBVector to customize the growth strategy", "body": "As per the suggestion in the comments of `FBVector.h`, I've added the ability to customize the growth strategy using the `fbvector`'s allocator. If the allocator used implements a non-static member function of type `size_type calculate_capacity(size_type) const` then this will be called in every case where the `fbvector` instance needs to grow. E.g. to use an `N+1` strategy the allocator would look something like...\n\n``` c++\ntemplate<typename T>\nstruct growth_policy_allocator\n{\n  typedef T value_type;\n\n  T* allocate(size_t n)\n  {\n    ...\n  }\n\n  void deallocate(void *p, size_t n)\n  {\n    ...\n  }\n\n  size_t calculate_capacity(size_t current) const // const is required\n  {\n    return current + 1;\n  }\n};\n```\n\nIf the allocate doesn't implement `calculate_capacity` then `fbvector` falls back to its default growth strategy.\n\nI've also added a simple test case for this feature. Compiles and passes on Ubuntu 14.04\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hincoin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/326", "title": "Change memory_order_consume to relaxed in ProducerConsumerQueue", "body": "A few of the functions within ProducerConsumerQueue use `std::memory_order_consume` to load from shared variables, but the consume guarantees aren't used since there's no earlier data dependencies on these variables that need to be propagated. Changing these loads to `std::memory_order_relaxed` offers the same guarantees that are needed for these functions and, under current compiler support, avoids the promotion to `std::memory_order_acquire`. \n\nRelevant post on the [Google group](https://groups.google.com/d/msg/facebook-folly/eGb5gGudGtc/nmBNLFVaJQAJ).\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeanRBurton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/324", "title": "Check for overflow when growing Vectors.", "body": "I don't know if this works, but it is at least in the spirit of the right idea.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975", "body": "Read the files in the folly/docs directory. They are markdown text files, so it's probably simpler to start reading them right here on github.\nThe sources files are also documented. And of course, the test files contain valuable info.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisaycock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471", "body": "I agree with @dribeas. \"Standard Library\" is the correct term.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902", "body": "@tudor Glad I could be of help!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436", "body": "Ok, Standart Library if good enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "avatasia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736", "body": "Why not use STL or Boost, so there is too much programmer in Facebook?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdelong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905", "body": "Merged upstream and pushed\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130", "body": "Thanks; f0ced414840d5c29e6ced3466004dc1a122b51c1\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190", "body": "Thanks; I merged it upstream (so it'll be pushed back out in the next push).\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250", "body": "Thanks for the suggestion.  For now I just added a link to the overview doc to the wiki page.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304", "body": "Just pushed a near-rewrite of FBVector.  Looks like the new assign() no longer has this bug; thanks for reporting it, though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336", "body": "Sorry for the delay asl.  I'm merging these into our local repo now (a couple of them have been fixed already).  They'll be back out in the next public push.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tudor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508", "body": "fixed in 050c1c3d52e4df860911235ac894291b2c089e59\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373", "body": "Merged manually, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390", "body": "The comment is correct. \"iff\" means \"if and only if\", see http://en.wikipedia.org/wiki/If_and_only_if\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835", "body": "Thanks for the comment. I'll be closing this issue because the issue tracker is meant for specific problems with the code.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271", "body": "Yes it does.  Making folly portable outside of gcc 4.6+, Linux x86_64 has never been an explicit goal.  We would welcome patches, though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520", "body": "@asl Before we can accept your changes, you'll have to sign the Facebook Contributor License Agreement: https://developers.facebook.com/opensource/cla\n\nThanks!\n-Tudor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169", "body": "We'll take a look, thanks for letting us know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903", "body": "Did u even took a read on readme files or code itself before saying that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewjcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592", "body": "Thanks for reporting this!  Fixed in 9c2924258bee193d267f85e598ea5abf72cb267f.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641", "body": "We currently don't test/build on OpenSuse, so its not surprising that there are some issues.  I'll look to get an install of this working shortly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "syntheticpp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611", "body": "obsolete\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "asl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398", "body": "Fix for Portability.h is simple:\n\n```\ndiff --git a/folly/Portability.h b/folly/Portability.h\nindex 6d373a2..a9e8d32 100644\n--- a/folly/Portability.h\n+++ b/folly/Portability.h\n@@ -33,7 +33,11 @@\n #undef FOLLY_FINAL\n #undef FOLLY_OVERRIDE\n\n-#ifdef __GNUC__\n+#if defined(__clang__)\n+#  define FOLLY_FINAL final\n+#  define FOLLY_OVERRIDE override\n+#elif defined(__GNUC__)\n+# include <features.h>\n # if __GNUC_PREREQ(4,7)\n #  define FOLLY_FINAL final\n #  define FOLLY_OVERRIDE override\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443", "body": "(sorry, no pull request, I have heavily hacked tree around)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498", "body": "But will provide some fixes soon :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andralex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038", "body": "Thanks! We'll look into this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055", "body": "... and good to see you again, Christian :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412912", "body": "Hi Dave -- this is the initial commit. Some of the files have a long history that is mostly internal to Facebook and peppered with commit information that has sensitive tidbits, so we decided to make the initial commit without a history. Going forward we're looking at ways to make fine-grained commit information available.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dabrahams": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412776", "body": "Inscrutable huge changesets like this one tend to undermine the \"open-source-ness\" of this effort.  Would it be possible to get the actual change history in here?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/comments/1412977", "body": "Oh!  The other commit was marked \"initial.\"  Sorry for the noise.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "BenPope": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/2823909", "body": "I think there is a missing file:\nhttps://github.com/facebook/folly/issues/23\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/2823909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "capitalaslash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4949410", "body": "just to let you know, it was enough for me to move `FOLLY_NORETURN` at beginning of line to make it compile, there is no need to remove it completely with gcc 4.8\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4949410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "denji": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4968026", "body": "@pgriess https://github.com/facebook/folly/issues/42\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4968026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "anatol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/6495310", "body": "This is duplicated file. Exception.h is already present below. This causes build time failure on Linux Arch:\n\n```\n==> Starting package()...\nMaking install in .\nmake[1]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\nmake[2]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /bin/sh ./libtool   --mode=install /usr/bin/install -c   libfolly.la libfollybenchmark.la libfollytimeout_queue.la libfollyfingerprint.la '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly'\nlibtool: install: /usr/bin/install -c .libs/libfolly.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.la\n /usr/bin/install -c -m 644  ApplyTuple.h Arena.h Arena-inl.h AtomicBitSet.h AtomicHashArray.h AtomicHashArray-inl.h AtomicHashMap.h AtomicHashMap-inl.h AtomicStruct.h Baton.h Benchmark.h Bits.h Checksum.h Chrono.h ConcurrentSkipList.h ConcurrentSkipList-inl.h Conv.h CpuId.h CPortability.h Demangle.h DiscriminatedPtr.h DynamicConverter.h dynamic.h dynamic-inl.h Exception.h FBString.h FBVector.h File.h FileUtil.h Fingerprint.h folly-config.h Exception.h ExceptionWrapper.h Foreach.h FormatArg.h Format.h Format-inl.h GroupVarint.h Hash.h IPAddress.h '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/.'\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.la\nlibtool: install: /usr/bin/install -c .libs/libfollytimeout_queue.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollytimeout_queue.la\nlibtool: install: /usr/bin/install -c .libs/libfollyfingerprint.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollyfingerprint.la\nlibtool: install: /usr/bin/install -c .libs/libfolly.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\n/usr/bin/install: will not overwrite just-created \u2018/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/./Exception.h\u2019 with \u2018Exception.h\u2019\nlibtool: install: chmod 644 /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nlibtool: install: ranlib /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nMakefile:922: recipe for target 'install-nobase_follyincludeHEADERS' failed\nmake[2]: *** [install-nobase_follyincludeHEADERS] Error 1\nmake[2]: *** Waiting for unfinished jobs....\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.a\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/6495310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "samveen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10027494", "body": "Would you tag a release with this revision?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10027494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "andrewcox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10043097", "body": "I did this\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10043097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Gownta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10766197", "body": "Long story short, this change should be attributed to @mtodat. See https://github.com/facebook/folly/pull/132 for details.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10766197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954384", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954389", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954416", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @SiebelsTim\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954445", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @gustavotemple\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954458", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @loverszhaokai\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954484", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @cppfool \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370", "body": "If you change ALL such functions in folly, that would be an impactful change.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gustavotemple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10961983", "body": "Thank you very much, @Gownta !\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10961983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Orvid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/11849195", "body": "While doing my port to Windows I've realized that this misses the use of pause in [detail/AtomicHashUtils.h](https://github.com/facebook/folly/blob/master/folly/detail/AtomicHashUtils.h#L33), which, although it does fall back to not using a pause, should be calling the functions added in this instead.\n\nAlso, is there an actual difference between `asm(\"pause\")` and `asm volatile(\"pause\")`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/11849195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12576669", "body": "MSVC is fine with this way of doing it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12576669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577942", "body": "At least, I thought that was the case, apparently I forgot where this was actually used when I tested it, as MSVC is giving me errors about this now :(\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12578031", "body": "I guess an `#ifdef` for MSVC is needed after all.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12578031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13505592", "body": "With the PRs I have open currently, MSVC 2015 can be used for the pieces of Folly that HHVM uses. There is no build system in place for MSVC in the main Folly repo.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13505592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506496", "body": "As long as it's not one of the files removed in [HHVM's CMake file](https://github.com/hhvm/hhvm-third-party/blob/master/folly/CMakeLists.txt#L47) for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as `Subprocess.cpp` is not supported under MSVC) \n\nFor template matching with Format.h under MSVC, there is a fix in [Folly #305](https://github.com/facebook/folly/pull/305/files#diff-9cf63f8fda0a99aa4270be1c2b36f425R777) to help with that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507610", "body": "For everything to compile, you need more than just that PR. HHVM builds Folly via CMake, which generates the project file, so the project file I pass along would be of limited use.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356", "body": "This doesn't quite seem right. Shouldn't it be the other way around?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413", "body": "This should be `#if defined(FOLLY_X64)`, which is what normally wraps the pause calls.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254", "body": "If this weren't in the C portability header, that would be true, but, as it is in the C portability header, I have kept the file compilable as C. I could do an `#ifdef` for C++ for that though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884", "body": "`FindClose` is indeed what I want, as this is closing the find handle, not a normal handle.\n\nThis returns an int because the standard `closedir` API returns an int. I've added a check for errors on the `FindClose` call, but I won't be marking the function for analysis, as this is intended as a functional portability mechanism, not an extensive API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726", "body": "I can certainly do that. My goal with the port was to make as few changes as possible to the code that effects more than just MSVC, which is why I only enabled it for MSVC at the moment.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701", "body": "Yes, it is. Looks like it happened when I was extracting the changes into separate PRs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429", "body": "This is the most permissive license of a proper implementation of this that I could find. It should be the same as the rest of the file, unless I missed something? Re-implementing it is possible, as trying to work around not having it will be more of a pain, as it's used in a few spots in HHVM.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264", "body": "RTM is the release version, it isn't  a prerelease, but there is a good chance that these will be fixed in an update, which is why these are set to go away when the update is released. This is basically future-proofing, as the eventual goal is to remove them completely. \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "korovkin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/13481209", "body": "hey there, what is the status for supporting MSVC ? \nwe would like to use it with MSVC 2015 ? \n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13481209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506060", "body": "thank you very much for the response, thats awesome!\nwhich parts are actually used? Format.h? \nwe are seeing a few issues with MSVC 2015 and template matching with MSVC... \n\nCC @DEGoodmanWilson\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507373", "body": "That's great! \n\nJust to confirm - \nIs PR 305 all is needed to compile it for MSVC 2015? \n\n> On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> \n> As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> \n> For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507387", "body": "One more question - could you please share the SLN file that compiles it? \n\nThanks \n\n> On Sep 29, 2015, at 18:21, H Grosman korovkin@gmail.com wrote:\n> \n> That's great! \n> \n> Just to confirm - \n> Is PR 305 all is needed to compile it for MSVC 2015? \n> \n> > On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> > \n> > As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> > \n> > For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jwatzman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160", "body": "Why not\n\n``` cpp\n    int64_t timeSinceLastAccept = std::max<int64_t>(\n       0,\n       nowMs.time_since_epoch().count() -\n       lastAccepTimestamp_.time_since_epoch().count());\n```\n\nEspecially since we're already assigning this to an `int64_t` result? It seems a lot shorter and cleaner than this large `decltype`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sgolemon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382", "body": "Comment from internal reviewer:\n\nnot every Container supports emplace_back, this change broke a project build (Container == folly::TypedIOBuf<>)\n\ncode using Container = strings::TypedBuffer is also affected\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193", "body": "This broke folly builds on our internal CI, but I think I came up with something suitable for both clang and us\n\n```\ntemplate <typename T> struct iterator_class_is_container {\n  typedef std::reverse_iterator<typename T::iterator> some_iterator;\n  enum { value = has_value_type<T>::value &&\n              std::is_constructible<T, some_iterator, some_iterator>::value };\n};\n\ntemplate <typename T> struct class_is_container\n  : std::conditional<\n      has_iterator<T>::value,\n      iterator_class_is_container<T>,\n      std::false_type\n    >::type {};\n```\n\nA diff containing this is currently up for review as D2170803\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805", "body": "Why not just always use the constexpr values and avoid the #ifdefs?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935", "body": "Maybe reduce this assertion to just:\n\n```\n  ~AtomicLinkedList() {\n    assert(empty());\n  }\n```\n\nAnd avoid duplicating the logic and the ifdefs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508", "body": "Unfortunately, we can't take this.  Could you come up with another approach, or an implementation from a more permissive license?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207", "body": "Shouldn't this be `!defined(_MSC_VER)` ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422", "body": "`uint16_6` looks like a typo, can you confirm that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544", "body": "' provides thousands separation.  So I would say the very least would be something along the lines of:\n\n```\n#ifdef FOLLY_NO_PRINTF_GROUPING\n  \"%ju\",\n#else\n  \"%'ju\",\n#endif\n  static_cast<uintmax_t>(uval));\n```\n\nAnd add a configure check to conditionally set that define.\n\nBetter would be to implement a thousands separating output for non-gnu platforms, but that's a bit more work.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443", "body": "How concerned do we need to be about checking for which pre-relesae we're working with?\nSeems like we can just assume \"MSVC 2015 Latest\" until final comes out.\n\nCan we kill this check and assume the two defines below are just not set?\nMakes the code a lot simpler if so.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ariccio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469", "body": "Since this is for Windows, you might as well annotate `s` with `_Pre_writable_size_(n)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081", "body": "Actually, you might as well go ahead and declare it like this for maximum static analysis effectiveness:\n\n```\n_At_buffer_(s, _Iter_, n, _Post_satisfies_(s[_Iter_] == 0))\nInline void bzero(  _Pre_writable_size_(n) _Out_ void* s, size_t n )\n\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236", "body": "You shouldn't need to explicitly specify the buffer size,  because [Secure Template Overloads](https://msdn.microsoft.com/en-us/library/ms175759.aspx) allow for [template parameter inference](https://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/), which is pretty cool.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309", "body": "`buf` should be `_Out_writes_z_(64)`, and the return value should be `_Ret_writes_maybenull_z_(64)`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824", "body": "Should be `_Field_range_(DT_UNKNOWN, DT_LNK)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904", "body": "`_Field_z_`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281", "body": "Protip : Mark it `_Post_ptr_invalid_` and you'll be able to detect use-after-free and double free bugs.\n\nMarking the function `_At_(dir->hand, _Post_ptr_invalid_)` will do the same for double handle closes.\n\nIs `FindClose` what you wanted to use here, or is it `CloseHandle`?\n\nAlso, why does this return an `int`, if it doesn't check any return values?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513", "body": "Mark `fmt` as `_Printf_format_string_` for format string error detection!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827", "body": "Mark the function as `_Success_( return == 0 )` and `dst` as `_Out_` to detect uninit memory usage.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663", "body": "Fair enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "2": {"JohnSmithyy": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/738", "title": "make check failed", "body": "```\r\nMakefile:1797: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2950: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2163: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2316: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n\r\nAnyone have a solution to this?\r\n\r\nI'm running Ubuntu 16.04. ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maikel": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/737", "title": "Poly does not work with noexcept methods", "body": "The `folly/Poly.md` document does not mention `noexcept` at all. Consider this example\r\n\r\n```\r\n#include <folly/Poly.h>\r\n#include <iostream>\r\n\r\nstruct IDrawable {\r\n  template <typename Base> struct Interface : Base {\r\n    void draw(std::ostream& out) const /* noexcept */ {\r\n      folly::poly_call<0>(*this, out);\r\n    }\r\n  };\r\n\r\n  template <typename T> using Members = folly::PolyMembers<&T::draw>;\r\n};\r\n\r\nstruct Circle {\r\n  void draw(std::ostream& out) const /* noexcept */ { out << \"Cirlce.\\n\"; }\r\n};\r\n\r\nusing Drawable = folly::Poly<IDrawable>;\r\n\r\nint main() {\r\n  Drawable obj = Circle{};\r\n  obj.draw(std::cout);\r\n}\r\n```\r\n\r\nUncommenting any `noexcept` breaks on my machine (using clang from 2017-11-25 and folly from 2017-12-25)\r\n\r\nI attached the error message for uncommenting `Circle::draw`'s  `noexcept` specifier.\r\n\r\n[error.log](https://github.com/facebook/folly/files/1639659/error.log)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomGarden": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/735", "title": "folly/folly/experimental/logging/example/main.cpp", "body": "#  log moudle don't work\r\nResently I want use folly's logging moudle.\r\nBut it don't work well.\r\nCompile no problem\u3002\r\n## compile cmd\r\nsources path : https://github.com/facebook/folly/blob/master/folly/experimental/logging/example/main.cpp\r\n```\r\n$ g++ main.c lib.cpp -std=c++14 -o testMain -lfollylogging -lfolly -ldouble-conversion -lglog -lgflags\r\n```\r\n\r\nI don't find any log from function `XLOG()`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZaMaZaN4iK": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/734", "title": "Conan package for Folly", "body": "Hello,\r\nDo you know about [Conan](https://github.com/conan-io/conan)?\r\n[Conan](http://docs.conan.io/en/latest/) is modern dependency manager for C++. And will be great if your library will be available via package manager for other developers.\r\n\r\n[Here](https://github.com/bincrafters/conan-templates) you can find example, how you can create package for the library. \r\n\r\nIf you have any questions, just ask :-)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkudrnac": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/732", "title": "One little goto \ud83e\udd96", "body": "https://github.com/facebook/folly/blob/e7f26d60480810d6c2b724130e35761d75af33fc/folly/String.cpp#L47\r\n\r\n![main-qimg-ed4254c72d3c84c43bef0d32b7ff4172](https://user-images.githubusercontent.com/12230741/34783624-5d2f7bfa-f62c-11e7-9691-5afb55ce78c3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MacroKnow": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/730", "title": "My system time is wrong ,when I make it,it endless loop.", "body": "eg:my system time is  Thurs Jan  5 20:36:04 CST 2017 ,and I preparing install version is v2018.01.01.00 .\r\nautoreconf -ivf \r\n./configure\r\nmake \r\n\r\nthen endless loop\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suspend0": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/728", "title": "Thanks & Happy New Year!", "body": "All folly committers:\r\n\r\nThank you for releasing and maintaining this library. We use a ton of this code. Personally, I have learned a lot by reading it. The effort that goes into the code itself, as well as the management of this OSS project, communication, and issue handling is all top notch and very much appreciated.\r\n\r\nThanks!\r\nDarren.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shadowwalker2718": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/725", "title": "`make check` failed", "body": "```\r\nmake[3]: Entering directory '/opt/share/folly/folly/test'\r\nmake[3]: 'libfollytestmain.la' is up to date.\r\nmake[3]: 'libgtest.la' is up to date.\r\nmake[3]: 'foreach_benchmark' is up to date.\r\nmake[3]: 'benchmark_test' is up to date.\r\nmake[3]: 'concurrent_skiplist_benchmark' is up to date.\r\nmake[3]: 'conv_benchmark' is up to date.\r\nmake[3]: 'sorted_vector_types_test' is up to date.\r\nmake[3]: 'foreach_test' is up to date.\r\nmake[3]: 'hash_test' is up to date.\r\nmake[3]: 'timeout_queue_test' is up to date.\r\nmake[3]: 'conv_test' is up to date.\r\nmake[3]: 'expected_test' is up to date.\r\n/bin/bash ../libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o range_test RangeTest.o libfollytestmain.la -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags \r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o .libs/range_test RangeTest.o  ./.libs/libfollytestmain.a /opt/share/folly/folly/init/.libs/libfollyinit.so /opt/share/folly/folly/.libs/libfolly.so -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags\r\nRangeTest.o: In function `testing::IsEmptyMatcher::gmock_Impl<folly::Range<int const*> const&>::FormatDescription[abi:cxx11](bool) const':\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1770: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2911: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2131: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2302: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vxider": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/711", "title": "Disable test", "body": "Hi,\r\n    I'am trying to cross compile folly to other platform, how can I disable test in `configure`?\r\nHere is my error:\r\n```\r\n./configure --enable-static --disable-shared --with-PACKAGE=MPMCQueue --with-boost=/home/vxider/local/boost --host=x86_64 \r\n\r\n...\r\nconfigure: error: cannot run test program while cross compiling\r\nSee `config.log' for more details\r\n...\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RcRonco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/700", "title": "Compression namespace", "body": "Hi,\r\nWhen compression moved from ```io``` to its own folder the namespace still stayed ```folly::io```, which is quite confusing.\r\nMaybe it should be in its own namespace or in the ```folly``` namespace, or even return the ```compression``` into ```io``` folder.\r\n\r\nIn compression [Utils.h](https://github.com/facebook/folly/blob/master/folly/compression/Utils.h#L30) the namespace ```folly::io::compression``` exists, refactoring the namespaces of the compression folder will make it more consistent, I don`t mind to do it.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tlanwairen123": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/699", "title": "folly configure checking whether the Boost::Context library is available... no", "body": "i try build the folly. there have an error for configure for checking whether the Boost::Context library is available... no\r\nI have install boost and boost_context\uff0chow can i Solve the problem\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yangxingpping": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/698", "title": "win ProducerConsumerQueue", "body": "Installing from vcpkg. Compiling failed when I am try to run ProducerConsumerQueue,with error C2327,C2065. folly::ProducerConsumerQueue<int>::writeIndex is not type name, nor enum.\r\nwriteIndex_ is not declared. It seems like vc++ does not support assign array size with sizeof(writeIndex_).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "newpoo": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/696", "title": "Can we add a callback parameter to IOBuf::wrapBuffer()?", "body": "IOBuf can inform clients when there is no any IOBuf objects refer to the buffer?\r\nSo clients know that it's safe to release the buffer now.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/694", "title": "Streaming Promise", "body": "Would it make sense to create a construct StreamingPromise that can `setValue` multiple times? The use case is that when the call site is something like:\r\n\r\n`\r\nserviceProxy.getResponse().then([](const ResponsePart&  response)\r\n{\r\n    //  Do something with partial response\r\n});\r\n\r\n`\r\n\r\nIt would be great to have the `ServiceProxy::getResponse` return a `Future` that can be set multiple times by the `Promise` that was created the first time it was called.\r\n\r\nIs this the limitation of the Future/Promise paradigm or would it be a good idea to support something like 'StreamingPromise' ?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kelu27": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/690", "title": "Undefined reference", "body": "I'm building folly for mcrouter on ubuntu:16.04:\r\nHere is my error with your last commit https://github.com/facebook/folly/commit/69d97159209c5a77fdf7805155738604233d0b8a:\r\n\r\n`folly/folly/.libs/libfolly.so: undefined reference to folly::AsyncSocketException::getMessage(folly::AsyncSocketException::AsyncSocketExceptionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guodongxiaren": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/687", "title": "dyld: Library not loaded: libboost_context.dylib", "body": "./generate_fingerprint_tables\r\ndyld: Library not loaded: libboost_context.dylib\r\n  Referenced from: /Users/jelly/Documents/Source/folly/folly/./generate_fingerprint_tables\r\n  Reason: image not found\r\nmake[2]: *** [FingerprintTables.cpp] Trace/BPT trap: 5\r\nmake[1]: *** [all-recursive] Error 1\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samdasnake": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/684", "title": "Error with 'libfollybenchmark.la' during make", "body": "I am receiving the following error when I run `make install` to install folly.  I am running Ubuntu 16.04.  Here are the error messages I receive.\r\n`/usr/bin/ld: /usr/local/lib/libdouble-conversion.a(double-conversion.cc.o): relocation R_X86_64_32 against '.bss' can not be used when making a shared object; recompile with -fPIC\r\n/usr/local/lib/libdouble-conversion.a: error adding symbols: Bad value\r\ncollect2: error: ld returned 1 exit status\r\nlibtool:   **_error: error: relink 'libfollybenchmark.la' with the above command before installing it_**\r\nMakefile:1316: recipe for target 'install-libLTLIBRARIES' failed\r\nmake[2]: *** [install-libLTLIBRARIES] Error 1`\r\n\r\nI have tried to install folly directly as well as with the fblualib install_all.sh script.  In both cases I received this same error message.  Does anyone know how I can resolve this issue?  Thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/684/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrch2k10": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/682", "title": "MPMCQueue.h is broken on Xcode 9 and Archlinux GCC 7/Clang 6 and maybe other", "body": "Hi, guys\r\n\r\nI've been trying to use folly and wangle  but MPMCQueue.h fail to compile on any compiler I've tried so far.\r\n\r\nArchLinux Gcc 7 and Clang 5/6\r\nMacOS 10.13 + Xcode 9\r\n\r\nI'm missing something or is a known issue?\r\n\r\nBtw there is no code in that file just the basic includes from one of the examples\r\n\r\nTyVM for your time\r\n```\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/src/asyncserver.cpp:1:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncserver.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncsocketclient.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/Threadpool.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/libpentaprotocol_global.hpp:100:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/ExecutorFilter.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/Service.h:22:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap-inl.h:27:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/concurrent/IOThreadPoolExecutor.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/IOThreadPoolExecutor.h:20:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/ThreadPoolExecutor.h:23:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/LifoSemMPMCQueue.h:20:\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:269:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:275:58: error: expected expression\r\n      while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                         ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:278:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:279:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:286:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:299:53: error: expected expression\r\n    this->enqueueWithTicketBase(ticket-offset, slots, cap, stride,\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:305:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:310:56: error: expected expression\r\n    while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                       ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:315:55: error: expected expression\r\n    maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:316:53: error: expected expression\r\n    this->dequeueWithTicketBase(ticket-offset, slots, cap, stride, elem);\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:352:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:359:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:360:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:390:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:418:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:425:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:449:47: error: expected expression\r\n        if (trySeqlockReadSection(state, slots, cap, stride)) {\r\n                                              ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:454:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:466:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n2 warnings and 20 errors generated.\r\nmake[2]: *** [CMakeFiles/PentaProtocolServer.dir/PentaProto/src/asyncserver.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/PentaProtocolServer.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "capsocrates": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/679", "title": "asm command does not compile in MSVC", "body": "This code\r\n[`    asm volatile(\"\" ::\"m\"(ptr) : \"memory\");`](https://github.com/facebook/folly/blob/94b8816bbdca38914030842554cc955caee59063/folly/Malloc.h#L193)\r\nIntroduced in [this commit](https://github.com/facebook/folly/commit/610c11630a3cbccdc2be0a91b5a6c2f934af3f55) does not compile in MSVC.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArntWork": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/678", "title": "Readme.md wrong for Linking non-default boost libraries?", "body": "The instructions say ./configure --with-boost=$BOOST_ROOT/lib but while trying it on ubuntu 16.04 with latest boost,  we needed ./configure --with-boost=$BOOST_ROOT  (so without the /lib at the end). With /lib it says it cannot find a version of boost context.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KindDragon": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/677", "title": "Issues with Visual C++ compiler", "body": "- [x] [folly/Malloc.h(193)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/Malloc.h#L193): error C2059: syntax error: 'volatile'  PR #688\r\n- [x] [folly/detail/Crc32cDetail.cpp(208)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/detail/Crc32cDetail.cpp#L208): [fatal error C1009: compiler limit: macros nested too deeply](https://github.com/facebook/folly/commit/74102328f60e450de7d1dab40d1772f82549fd96#commitcomment-23423375)\r\n- [x] [folly/executors/NamedThreadFactory.h(38)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/executors/NamedThreadFactory.h#L37-L38): error C2665: 'folly::setThreadName': none of the 2 overloads could convert all the argument types\r\n- [x] folly can't link with static libraries https://gist.github.com/KindDragon/c4e6414bd60242d317bb0387a82dce61#file-package-x64-windows-static-rel-out-log-L2291 PR #693\r\n- [x] [folly/futures/Future-inl.h(242)](https://github.com/facebook/folly/blob/fbc4c23895b0ee3874d9a36401d580a2a8957ba9/folly/futures/Future-inl.h#L242): error C2244: 'folly::SemiFuture<T>::SemiFuture': unable to match function definition to an existing declaration\r\n- [x] [folly/io/async/AsyncSocket.cpp(1589)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/io/async/AsyncSocket.cpp#L1589): error C2039: 'Control': is not a member of 'msghdr'. Win10 SDK define MSG_ERRQUEUE too https://naughter.wordpress.com/2017/07/16/changes-in-the-windows-v10-0-16232-sdk-compared-to-windows-v10-0-15063-sdk-part-one/ PR #689\r\n- [x] [folly/io/async/AsyncSocket.cpp(939)](https://github.com/facebook/folly/blob/master/folly/io/async/AsyncSocket.cpp#L937-L946): error C2065: 'SOL_IP': undeclared identifier\r\n- [x] [folly/stats/Histogram.cpp(43)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/stats/Histogram.cpp#L38-L43): error C5037: 'folly::detail::HistogramBuckets<__int64,folly::detail::Bucket<T>>::getPercentileBucketIdx': an out-of-line definition of a member of a class template cannot have default arguments with [T=int64_t] MSVC 2017U4 PR #691\r\n- [x] [folly/synchronization/CallOnce.h(86)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/synchronization/CallOnce.h#L86): error C2988: unrecognizable template declaration/definition. CallOnce.h(98): note: see reference to class template instantiation 'folly::detail::once_flag<Mutex>' being compiled https://github.com/facebook/folly/commit/b529367b595dd4da7e70569cbea36d30ace4fa39#commitcomment-25665382\r\n- [x] [folly\\Random.cpp(43)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/Random.cpp#L43): error C2672: 'folly::detail::once_flag<folly::SharedMutex>::{dtor}': no matching overloaded function found\r\n\r\n/cc @Orvid ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smellyfis": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/671", "title": "folly v2017.09.11.00 does not pick up libunwind reference", "body": "I am using Gentoo and am trying to build an updated folly ebuild (installation stuff) and autotools did not put in the -lunwind for the linker and I got several unrecognized symbols related. when I added \"-lunwind\" to every libfolly*_LDFLAGS I was able to link properly. I do not generally use autotools so I don't know where it is needed to be placed to pick up that flag dynamically, but i see there is something checking for it in configure.ac.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "navidR": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/669", "title": "Change default build system to CMake", "body": "Considering how it is easy to build applications and libraries using CMake, I created this issue to track this problem of \"when CMake will be available for *nix (and all other) platforms?\"\r\n\r\nRight now CMake support is only available on Windows platform.\r\n\r\nLet me give you an instance, I am building a complex Android application. Most of the networking and file system (while being multi threaded) logic is in NDK and I am using 8,9 different library. Compiling those libraries with Autotools is just like hell (therefore it is totally okay to call it Autohell). But just look at this link and see how it is easy to compile C++ project for NDK : \r\nhttps://developer.android.com/ndk/guides/standalone_toolchain.html\r\n\r\nIf you are not familiar with programming in NDK, I have to say compiling and setting up toolchain and required stuff is way complicated than your actual project (figure of speech), while with CMake and CMake support from Google, it is just adding two or three flags and then compiling your library to whatever arch and API level you are targeting. Folly and Wangle are very useful libraries. The only barrier for me to migrate our company C++/NDK to Folly is Autotools (consider how difficult it is to set up continuous integration for NDK and Autotools).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/669/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D-PorcoRosso": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/667", "title": "Fatal signal 6 (SIGABRT)", "body": "Hi:\r\n\r\nI wrote my jni library and integrated prebuild OpenSSL 1.0.2j to verify files signature correctness.\r\n\r\n\bAnd I exploded my jni library (as an aar file) into application project which used react-native, and run application, the native crash happened.\r\n\r\nCrash log as following text, do you have any idea about this crash?\r\n\r\nA/ReactNativeJNI: Check failed: 0 \r\n                                                                      \r\n--------- beginning of crash\r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13774 (FinalizerDaemon)\r\n                                                            \r\n                                                            [ 08-29 16:23:49.846   571:  571 W/         ]\r\n                                                            debuggerd: handling request: pid=13763 uid=10288 gid=10288 tid=13774\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Build fingerprint: 'google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys'\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Revision: '0'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: ABI: 'arm'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: pid: 13763, tid: 13774, name: FinalizerDaemon  >>> com.xxxxxxxxx.xxxxxxxxx <<<\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG: Abort message: 'Check failed: 0 '\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r0 00000000  r1 000035ce  r2 00000006  r3 00000008\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r4 eb31f978  r5 00000006  r6 eb31f920  r7 0000010c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r8 d1840e18  r9 d183e17e  sl 59a52495  fp d184ff7c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     ip 0000000b  sp eb31f250  lr edfa05c7  pc edfa2e30  cpsr 600f0010\r\n08-29 16:23:50.061 14901-14901/? A/DEBUG: backtrace:\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #00 pc 00049e30  /system/lib/libc.so (tgkill+12)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #01 pc 000475c3  /system/lib/libc.so (pthread_kill+34)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #02 pc 0001d635  /system/lib/libc.so (raise+10)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #03 pc 00019181  /system/lib/libc.so (__libc_android_abort+34)\r\n08-29 16:23:50.063 14901-14901/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #05 pc 0000864b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #06 pc 00009a63  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage4FailEv+10)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #07 pc 0000bd47  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage9SendToLogEv+246)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #08 pc 00009897  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage5FlushEv+102)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #09 pc 0000bf7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google15LogMessageFatalD2Ev+2)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #10 pc 000108dd  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+88)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #11 pc 00010863  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt12_Destroy_auxILb0EE9__destroyIPN5folly7dynamicEEEvT_S5_+16)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #12 pc 00010873  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt6vectorIN5folly7dynamicESaIS1_EED2Ev+8)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #13 pc 000108a3  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+30)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #14 pc 0003256f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #15 pc 00032907  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #16 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #17 pc 00032981  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #18 pc 00032a99  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #19 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #20 pc 0001e009  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #21 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #22 pc 0001df7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #23 pc 0001df9d  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #24 pc 0000afed  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so (_ZN8facebook3jni6detail10HybridData16setNativePointerESt10unique_ptrINS1_15BaseHybridClassESt14default_deleteIS4_EE+112)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #25 pc 0000b05b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #26 pc 00a9a657  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/oat/arm/base.odex (offset 0xa30000)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "4a616d6573205265696c6c79": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/666", "title": "Folly fails to compile with redefinition error", "body": "Configure/Make output:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ autoreconf -ivf && ./configure\r\nautoreconf: Entering directory `.'\r\nautoreconf: configure.ac: not using Gettext\r\nautoreconf: running: aclocal --force -I m4\r\nautoreconf: configure.ac: tracing\r\nautoreconf: running: libtoolize --copy --force\r\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\r\nlibtoolize: copying file 'build-aux/ltmain.sh'\r\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\r\nlibtoolize: copying file 'm4/libtool.m4'\r\nlibtoolize: copying file 'm4/ltoptions.m4'\r\nlibtoolize: copying file 'm4/ltsugar.m4'\r\nlibtoolize: copying file 'm4/ltversion.m4'\r\nlibtoolize: copying file 'm4/lt~obsolete.m4'\r\nautoreconf: running: /usr/bin/autoconf --force\r\nautoreconf: running: /usr/bin/autoheader --force\r\nautoreconf: running: automake --add-missing --copy --force-missing\r\nconfigure.ac:32: installing 'build-aux/compile'\r\nconfigure.ac:27: installing 'build-aux/missing'\r\nMakefile.am: installing 'build-aux/depcomp'\r\nautoreconf: Leaving directory `.'\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\r\nchecking for gawk... no\r\nchecking for mawk... mawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking how to print strings... printf\r\nchecking for style of include used by make... GNU\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for fgrep... /bin/grep -F\r\nchecking for ld used by gcc... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 1572864\r\nchecking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\r\nchecking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... @\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... mt\r\nchecking if mt is a manifest tool... no\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... no\r\nchecking for gcc option to produce PIC... -fPIC -DPIC\r\nchecking if gcc PIC flag -fPIC -DPIC works... yes\r\nchecking if gcc static flag -static works... yes\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking dependency style of g++... gcc3\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for ld used by g++... /usr/bin/ld -m elf_x86_64\r\nchecking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking for g++ option to produce PIC... -fPIC -DPIC\r\nchecking if g++ PIC flag -fPIC -DPIC works... yes\r\nchecking if g++ static flag -static works... yes\r\nchecking if g++ supports -c -o file.o... yes\r\nchecking if g++ supports -c -o file.o... (cached) yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking dynamic linker characteristics... (cached) GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking for gcc... (cached) gcc\r\nchecking whether we are using the GNU C compiler... (cached) yes\r\nchecking whether gcc accepts -g... (cached) yes\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking whether gcc understands -c and -o together... (cached) yes\r\nchecking dependency style of gcc... (cached) gcc3\r\nchecking if g++ supports C++1y features without additional flags... yes\r\nchecking if g++ supports C++1y features with -std=c++1y... yes\r\nchecking if g++ supports C++1y features with -std=gnu++1y... yes\r\nchecking whether -Wshadow-local and -Wshadow-compatible-local are supported... no\r\nchecking for main in -lgflags... yes\r\nchecking for gflags viability... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for GFLAGS... no\r\nconfigure: gflags.pc not found, treating as legacy dependency\r\nchecking for main in -lglog... yes\r\nchecking for glog viability... yes\r\nchecking for GLOG... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking whether compiling and linking against OpenSSL works... yes\r\nchecking for OPENSSL... yes\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking whether the Boost::Context library is available... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking whether the Boost::Program_Options library is available... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking whether the Boost::Thread library is available... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking whether the Boost::Regex library is available... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking whether the Boost::System library is available... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking whether the Boost::Filesystem library is available... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking whether the Boost::Chrono library is available... yes\r\nchecking for exit in -lboost_chrono... yes\r\nchecking for python... /usr/bin/python\r\nchecking for python version... 2.7\r\nchecking for python platform... linux2\r\nchecking for python script directory... ${prefix}/lib/python2.7/dist-packages\r\nchecking for python extension module directory... ${exec_prefix}/lib/python2.7/dist-packages\r\nchecking for ANSI C header files... (cached) yes\r\nchecking features.h usability... yes\r\nchecking features.h presence... yes\r\nchecking for features.h... yes\r\nchecking malloc.h usability... yes\r\nchecking malloc.h presence... yes\r\nchecking for malloc.h... yes\r\nchecking bits/functexcept.h usability... yes\r\nchecking bits/functexcept.h presence... yes\r\nchecking for bits/functexcept.h... yes\r\nchecking bits/c++config.h usability... yes\r\nchecking bits/c++config.h presence... yes\r\nchecking for bits/c++config.h... yes\r\nchecking double-conversion/double-conversion.h usability... yes\r\nchecking double-conversion/double-conversion.h presence... yes\r\nchecking for double-conversion/double-conversion.h... yes\r\nchecking for ceil in -ldouble-conversion... yes\r\nchecking for event_set in -levent... yes\r\nchecking for EVENT... yes\r\nchecking for an ANSI C-conforming const... yes\r\nchecking for inline... inline\r\nchecking for size_t... yes\r\nchecking whether time.h and sys/time.h may both be included... yes\r\nchecking for working volatile... yes\r\nchecking for __int128... yes\r\nchecking for __int128 type traits... yes\r\nchecking for pthread_spinlock_t... yes\r\nchecking for ifunc support... yes\r\nchecking for final and override support... yes\r\nchecking for libc++... no\r\nchecking for c++11 atomic support without GNU Atomic library... yes\r\nchecking for main in -ldl... yes\r\nchecking for liblinux-vdso support... yes\r\nchecking for usable std::is_trivially_copyable... yes\r\nchecking gflags namespace... gflags\r\nchecking for weak symbol support... yes\r\nchecking for wchar support... yes\r\nchecking for unaligned access support... yes\r\nchecking for vsnprintf reporting bad format strings... no\r\nchecking for library containing cplus_demangle_v3_callback... -liberty\r\nchecking for library containing clock_gettime... none required\r\nchecking for pthread_atfork support... yes\r\nchecking for XSI style strerror_r support... no\r\nchecking for ext/random and __gnu_cxx::sfmt19937... yes\r\nchecking for VLA (variable-length array) support... yes\r\nchecking for malloc_size... no\r\nchecking for malloc_usable_size... yes\r\nchecking for memrchr... yes\r\nchecking for pipe2... yes\r\nchecking for preadv... yes\r\nchecking for pwritev... yes\r\nchecking lz4.h usability... yes\r\nchecking lz4.h presence... yes\r\nchecking for lz4.h... yes\r\nchecking for LZ4_decompress_safe in -llz4... yes\r\nchecking snappy.h usability... yes\r\nchecking snappy.h presence... yes\r\nchecking for snappy.h... yes\r\nchecking for main in -lsnappy... yes\r\nchecking zlib.h usability... yes\r\nchecking zlib.h presence... yes\r\nchecking for zlib.h... yes\r\nchecking for main in -lz... yes\r\nchecking lzma.h usability... yes\r\nchecking lzma.h presence... yes\r\nchecking for lzma.h... yes\r\nchecking for main in -llzma... yes\r\nchecking zstd.h usability... no\r\nchecking zstd.h presence... no\r\nchecking for zstd.h... no\r\nchecking bzlib.h usability... no\r\nchecking bzlib.h presence... no\r\nchecking for bzlib.h... no\r\nchecking linux/membarrier.h usability... yes\r\nchecking linux/membarrier.h presence... yes\r\nchecking for linux/membarrier.h... yes\r\nchecking libdwarf/dwarf.h usability... no\r\nchecking libdwarf/dwarf.h presence... no\r\nchecking for libdwarf/dwarf.h... no\r\nchecking dwarf.h usability... no\r\nchecking dwarf.h presence... no\r\nchecking for dwarf.h... no\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating io/test/Makefile\r\nconfig.status: creating libfolly.pc\r\nconfig.status: creating test/Makefile\r\nconfig.status: creating test/function_benchmark/Makefile\r\nconfig.status: creating experimental/Makefile\r\nconfig.status: creating experimental/io/test/Makefile\r\nconfig.status: creating experimental/logging/Makefile\r\nconfig.status: creating experimental/logging/example/Makefile\r\nconfig.status: creating experimental/symbolizer/Makefile\r\nconfig.status: creating init/Makefile\r\nconfig.status: creating stats/test/Makefile\r\nconfig.status: creating config.h\r\nconfig.status: config.h is unchanged\r\nconfig.status: executing folly-config.h commands\r\nconfig.status: creating folly-config.h - prefix FOLLY for config.h defines\r\nconfig.status: folly-config.h is unchanged\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/fun/fboss/external/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/fun/fboss/external/folly/folly'\r\ndepbase=`echo Assume.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF $depbase.Tpo -c -o Assume.lo Assume.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp  -fPIC -DPIC -o .libs/Assume.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp -o Assume.o >/dev/null 2>&1\r\ndepbase=`echo Checksum.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF $depbase.Tpo -c -o Checksum.lo Checksum.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp  -fPIC -DPIC -o .libs/Checksum.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp -o Checksum.o >/dev/null 2>&1\r\ndepbase=`echo ClockGettimeWrappers.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF $depbase.Tpo -c -o ClockGettimeWrappers.lo ClockGettimeWrappers.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp  -fPIC -DPIC -o .libs/ClockGettimeWrappers.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp -o ClockGettimeWrappers.o >/dev/null 2>&1\r\ndepbase=`echo concurrency/CacheLocality.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF $depbase.Tpo -c -o concurrency/CacheLocality.lo concurrency/CacheLocality.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp  -fPIC -DPIC -o concurrency/.libs/CacheLocality.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp -o concurrency/CacheLocality.o >/dev/null 2>&1\r\ndepbase=`echo detail/Futex.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF $depbase.Tpo -c -o detail/Futex.lo detail/Futex.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp  -fPIC -DPIC -o detail/.libs/Futex.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp -o detail/Futex.o >/dev/null 2>&1\r\ndepbase=`echo detail/IPAddress.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF $depbase.Tpo -c -o detail/IPAddress.lo detail/IPAddress.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp  -fPIC -DPIC -o detail/.libs/IPAddress.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp -o detail/IPAddress.o >/dev/null 2>&1\r\ndepbase=`echo detail/StaticSingletonManager.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF $depbase.Tpo -c -o detail/StaticSingletonManager.lo detail/StaticSingletonManager.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp  -fPIC -DPIC -o detail/.libs/StaticSingletonManager.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp -o detail/StaticSingletonManager.o >/dev/null 2>&1\r\ndepbase=`echo detail/ThreadLocalDetail.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF $depbase.Tpo -c -o detail/ThreadLocalDetail.lo detail/ThreadLocalDetail.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF detail/.deps/ThreadLocalDetail.Tpo -c detail/ThreadLocalDetail.cpp  -fPIC -DPIC -o detail/.libs/ThreadLocalDetail.o\r\nIn file included from ./../folly/Foreach.h:320:0,\r\n                 from ./../folly/detail/ThreadLocalDetail.h:30,\r\n                 from detail/ThreadLocalDetail.cpp:16:\r\n./../folly/Foreach-inl.h:222:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:236:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:315:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)'\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:303:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\nMakefile:1902: recipe for target 'detail/ThreadLocalDetail.lo' failed\r\nmake[2]: *** [detail/ThreadLocalDetail.lo] Error 1\r\nmake[2]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:2013: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:1195: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\nfun@woodhouse:\\~/fboss/external/folly/folly$\r\n```\r\n\r\nG++ version info:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ g++ --version\r\ng++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bilosikia": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/665", "title": "ubuntu 17.04 make error", "body": "i have installed all the packages.how can i deal with this?\r\ndetail/Crc32cDetail.cpp: In function \u2018uint64_t folly::crc32_detail::CombineCRC(long unsigned int, uint64_t, uint64_t, uint64_t, const uint64_t*)\u2019:\r\ndetail/Crc32cDetail.cpp:153:31: error: \u2018_mm_cvtsi128_si64\u2019 was not declared in this scope\r\n   crc0 = _mm_cvtsi128_si64(res);\r\n                               ^\r\ndetail/Crc32cDetail.cpp:155:34: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc2 = _mm_crc32_u64(crc2, crc0);\r\n                                  ^\r\ndetail/Crc32cDetail.cpp: In function \u2018void folly::crc32_detail::triplet_loop(long unsigned int, uint64_t&, const unsigned char*&, long unsigned int)\u2019:\r\ndetail/Crc32cDetail.cpp:48:52: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc##0 = _mm_crc32_u64(crc##0, *(buf##0 + offset)); \\\r\n                                                    ^\r\ndetail/Crc32cDetail.cpp:201:9: note: in expansion of macro \u2018CRCtriplet\u2019\r\n         CRCtriplet(crc, next, -128);\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shaneknapp": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/662", "title": "unable to compile folly on ubuntu 16.04 LTS", "body": "i've gone through the installation instructions, installed all of the recommended packages, but building folly fails on the first make.\r\n\r\ni have a hand-rolled boost installation (1.6.2) installed in my homedir, which i compiled w/C++14 support.\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ uname -a\r\nLinux amp-jenkins-staging-master 4.4.0-91-generic #114-Ubuntu SMP Tue Aug 8 11:56:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ ./configure --with-boost=$HOME/boost --prefix=/home/eecs/sknapp/thrift &> configure.out\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ grep boost configure.out\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking for exit in -lboost_chrono... yes\r\n```\r\n\r\nlooks cromulent, right?  well...\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\n/bin/bash ./libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o generate_fingerprint_tables build/GenerateFingerprintTables.o libfollybase.la -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o generate_fingerprint_tables build/GenerateFingerprintTables.o  ./.libs/libfollybase.a -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\n/usr/bin/ld: cannot find -lboost_context\r\n/usr/bin/ld: cannot find -lboost_program_options\r\n/usr/bin/ld: cannot find -lboost_thread\r\n/usr/bin/ld: cannot find -lboost_filesystem\r\n/usr/bin/ld: cannot find -lboost_system\r\n/usr/bin/ld: cannot find -lboost_regex\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1662: recipe for target 'generate_fingerprint_tables' failed\r\nmake[2]: *** [generate_fingerprint_tables] Error 1\r\nmake[2]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1997: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1191: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n\r\n(everything up until this point seems to compile normally)\r\n\r\ni've tried manually setting --with-boost-libdir, updating LD_LIBRARY_PATH, etc etc but i always get the same failure.\r\n\r\nany ideas?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hrjaco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/655", "title": "FutureTimekeepr threads runs forever", "body": "We have a thrift server built on top of fbthrift. We uses future's delayed() function to implement speculative request failover. But after we enable speculative request failover, we noticed that our server cannot be stopped correctly.\r\n\r\nAfter we stop the server, we noticed that our server's main function reaches the end, but the `FutureTimekeepr` still runs, which causes the process not stopped. If we do not enable speculative failover(FutureTimekeepr won't exist), our server can be stopped correctly.\r\n\r\nI noticed the FutureTimekeepr thread is used as a singleton inside ThreadWheelTimekeeper. Any idea why its destructor is not called even after main function reaches the end? thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simpkins": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/e96129da65d3ad2b20aae5a2bf2d22d2d72b8feb", "message": "cmake: fix the test builds\n\nSummary:\n- Fix the locations of some tests that have been moved.\n- Remove some tests that have been deleted.\n- Comment out some tests that depend on parts of folly that are not currently\n  built by the CMake build scripts.\n- Fix a build error in CompressionTest.cpp if FOLLY_HAVE_LIBZ is not defined.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735700\n\nfbshipit-source-id: 89f60751fa7079b2c609d23d85fbed2a0f317b55"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6c511999f92066ed84778bca4491c8d139a3195d", "message": "fix a multiline comment warning\n\nSummary:\nDeterministicScheduleTest.cpp contained several single-line C++ comments that\nended in a trailing backslash.  This makes the preprocessor treat the following\nline as a comment as well, even if it does not start with `//`.  Newer versions\nof gcc emit warnings about this.\n\nThis changes the comment in DeterministicScheduleTest.cpp to use `/* */` to\navoid this issue.\n\nReviewed By: siyengar\n\nDifferential Revision: D6735672\n\nfbshipit-source-id: 162c735507a643ce0dbee58f1f054865237e1eba"}, {"url": "https://api.github.com/repos/facebook/folly/commits/bdd9360c598d80d524de6780cd5be65af56d98fd", "message": "fix some bugs in AsyncSSLSocketTest\n\nSummary:\nA couple of the test functions in AsyncSSLSocketTest maintained two EventBase\nobjects and alternated looping between them.  In some cases it would call\nEventBase::loopOnce() even when there was no work to do.  This call normally\nblocks until an event is ready.  This happened to work when using libevent1,\nbut this appears mostly accidental: with libevent1 EVLOOP_ONCE causes the loop\nto break out even after an \"internal\" I/O event; in libevent2 EVLOOP_ONCE only\nbreaks out after a non-internal event has occurred:\nhttps://github.com/libevent/libevent/commit/0617a818204397790e5e4c9bcb9e91ae5ea7817a\n\nIn these tests it turns out that the internal EventBase NotificationQueue\nalways gets triggered the very first time loopOnce() is called, preventing\nthese tests from hanging when using libevent1.\n\nThis fixes the hang when using libevent2 by removing the initial loopOnce()\ncalls that potentially have nothing to do.  This also consolidates the 2\nEventBase objects into one to avoid having to alternate loopOnce() calls\nbetween them without knowing which one actually has work to do.\n\nThis also fixes an issue where the code never checked the return value of\n`recv()`\n\nReviewed By: yfeldblum, siyengar\n\nDifferential Revision: D6735669\n\nfbshipit-source-id: 5f36106a08866aa8908e82263f83a606399cdf79"}, {"url": "https://api.github.com/repos/facebook/folly/commits/7da4ef82aee382777bb50aadd4af14a482739d10", "message": "suppress warnings in tests for deprecated functions\n\nSummary:\nUpdate ShellTest and PromiseTest to suppress warnings about using deprecated\nfunctions in the tests for those functions.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735670\n\nfbshipit-source-id: 89edcb49d1eff3132398aaef88f5a5cae82e3557"}, {"url": "https://api.github.com/repos/facebook/folly/commits/19db503e08e4ea46a8b4d9a272605006b6245f88", "message": "cmake: fix path to FindGLog.cmake\n\nSummary:\nThe cmake files refer to this package as \"FindGLog\", but the file name on disk\nincorrectly had the 'L' lower cased.  This worked on case-insensitive file\nsystems, but caused cmake to fail when used on a case-sensitive file system.\n\nThis diff fixes the file name to match the name used in the cmake files.  This\nis also more consistent with the existing \"FindGFlags\" and \"FindGMock\"\npackages.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6710439\n\nfbshipit-source-id: 19f6824ef6793e505b5a0080c0fefe0b145a41c3"}, {"url": "https://api.github.com/repos/facebook/folly/commits/337e897a2510b8f1291c6be95b3eb18f0c80cb68", "message": "cmake: remove DOS-style line endings\n\nSummary:\nA number of the files in CMake/ had inconsistent line-endings.  This updates\nfiles using DOS-style CRLF line endings to just use CR instead.  On Windows,\ngit is capable of automatically changing CR to CRLF when checking out the\nrepository working directory.\n\nReviewed By: meyering\n\nDifferential Revision: D6714717\n\nfbshipit-source-id: 82adccf4e522d38fd1cb420869f62e52dbd6c5f1"}, {"url": "https://api.github.com/repos/facebook/folly/commits/b22d1721ed9c062e22b33936e13b39ed1507391a", "message": "cmake: add checks to generate folly-config.h correctly\n\nSummary:\nAdd proper checks to detect and set the values in folly-config.h correctly.\nPreviously the code simply hard-coded values that were appropriate for Windows.\n\nThis does not yet define all of the settings produced by the autoconf build,\nbut it lets the CMake-based build largely succeed on Linux systems.\n\nReviewed By: meyering\n\nDifferential Revision: D6710437\n\nfbshipit-source-id: 80490080ee6322995b740ac2a15181d220c6874a"}, {"url": "https://api.github.com/repos/facebook/folly/commits/03957924ccf4e32d0fbc4dc3198da3249f57b890", "message": "cmake: set compiler flags for non-Windows platforms\n\nSummary:\nUpdate CMakeLists.txt to check the current platform, and to set compiler flags\ncorrectly.  It now uses flags for Microsoft Visual Studio on Windows, and flags\nfor gcc or clang on all other platforms.  Previously it unconditionally used\nMSVC flags.\n\nReviewed By: meyering\n\nDifferential Revision: D6710435\n\nfbshipit-source-id: dbae3097bcadf1ee4a25879dd7770603387c0e4d"}, {"url": "https://api.github.com/repos/facebook/folly/commits/3d9eb7ffc32c2f5f878bb4aee61d30cb8c62a146", "message": "cmake: support using a separate build directory\n\nSummary:\nFix rules in the CMakeLists.txt file that generate source files to first create\ntheir output directory if necessary.  This allows the build to succeed when\nbuilding with a separate build output directory, rather than placing build\nartifacts in the source tree itself.\n\nReviewed By: meyering\n\nDifferential Revision: D6710436\n\nfbshipit-source-id: 786a65a37a70833e7e4a5affe4df292626dbb591"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spalamarchuk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/4bfbe0a10e914c3626e16cfdb9e87508e63b065f", "message": "Add DCHECKs for checking that underlying IOBuf wasn't modified\n\nSummary: Appending/prepending to IOBuf while iterating over it with Cursor is unsafe. This diff adds DCHECKs to catch such cases.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735060\n\nfbshipit-source-id: 7799facc52c53fabd83756ecb26a18c4ebd69677"}, {"url": "https://api.github.com/repos/facebook/folly/commits/86cefd11d497791f00769e69fba550f710906527", "message": "Properly handle appending to the tail of the chain\n\nSummary: Currently appending to the tail of the chain would cause the cursor advancing to the beginning of the chain, which is not correct, instead we should advance to the tail.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6734999\n\nfbshipit-source-id: b8b2585e0475b656f7b6bf4ed39686e2ccb2e432"}, {"url": "https://api.github.com/repos/facebook/folly/commits/afde52ff7655ba79759eafdbee14b3fe47428fce", "message": "Track absolute position of the cursor\n\nSummary:\nStart tracking the position of the cursor from the head of IOBuf chain. This comes at almost no cost (one arithmetic operation on IOBuf advance).\n\nThe main use case for this cursor is Thrift deserialization code. It allows us to stop accumulating `xfer` on every single byte/field/element write and instead get it from Cursor in the end (when we're exiting Thrift code).\nThis allows achieving ~10% better performance of deserialization.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6646813\n\nfbshipit-source-id: 8f796854a24a411698e96afe037695e816813022"}, {"url": "https://api.github.com/repos/facebook/folly/commits/2c730d6fe79b5642133c55545c4ed7570ce2abb9", "message": "Improve fast path of Cursor\n\nSummary:\nThis change simplifies the fastpath by reducing it to bare minimum (i.e. check length, load data) and removes indirection to IOBuf.\nAdditionally it adds `skipNoAdvance` method to have 1-instruction skip.\n\nDisassembly of `read<signed char>` is over 35 instructions (just hot path). With this change it's doesn to 8.\nDisassembly after:\n  Dump of assembler code for function folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>():\n     0x000000000041f0f0 <+0>:     mov    0x18(%rdi),%rax\n     0x000000000041f0f4 <+4>:     lea    0x1(%rax),%rcx\n     0x000000000041f0f8 <+8>:     cmp    0x10(%rdi),%rcx\n     0x000000000041f0fc <+12>:    ja     0x41f105 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>()+21>\n     0x000000000041f0fe <+14>:    mov    (%rax),%al\n     0x000000000041f100 <+16>:    mov    %rcx,0x18(%rdi)\n     0x000000000041f104 <+20>:    retq\n     0x000000000041f105 <+21>:    jmpq   0x41f110 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::readSlow<unsigned char>()>\n\nWith this diff Thrift deserialization becomes ~20% faster (with prod workloads).\n\nThrift benchmark:\nBefore:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   12.98ns   77.03M\n  BinaryProtocol_read_SmallInt                                20.94ns   47.76M\n  BinaryProtocol_read_BigInt                                  20.86ns   47.93M\n  BinaryProtocol_read_SmallString                             34.64ns   28.86M\n  BinaryProtocol_read_BigString                              185.53ns    5.39M\n  BinaryProtocol_read_BigBinary                               67.34ns   14.85M\n  BinaryProtocol_read_LargeBinary                             62.23ns   16.07M\n  BinaryProtocol_read_Mixed                                   58.74ns   17.03M\n  BinaryProtocol_read_SmallListInt                            89.99ns   11.11M\n  BinaryProtocol_read_BigListInt                              39.92us   25.05K\n  BinaryProtocol_read_BigListMixed                           616.20us    1.62K\n  BinaryProtocol_read_LargeListMixed                          83.49ms    11.98\n  CompactProtocol_read_Empty                                  11.28ns   88.67M\n  CompactProtocol_read_SmallInt                               19.15ns   52.22M\n  CompactProtocol_read_BigInt                                 26.14ns   38.25M\n  CompactProtocol_read_SmallString                            31.04ns   32.22M\n  CompactProtocol_read_BigString                             184.55ns    5.42M\n  CompactProtocol_read_BigBinary                              69.73ns   14.34M\n  CompactProtocol_read_LargeBinary                            64.39ns   15.53M\n  CompactProtocol_read_Mixed                                  58.73ns   17.03M\n  CompactProtocol_read_SmallListInt                           76.50ns   13.07M\n  CompactProtocol_read_BigListInt                             25.93us   38.56K\n  CompactProtocol_read_BigListMixed                          623.15us    1.60K\n  CompactProtocol_read_LargeListMixed                         80.57ms    12.41\n  ============================================================================\n\nAfter:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   10.40ns   96.17M\n  BinaryProtocol_read_SmallInt                                15.14ns   66.03M\n  BinaryProtocol_read_BigInt                                  15.19ns   65.84M\n  BinaryProtocol_read_SmallString                             25.19ns   39.70M\n  BinaryProtocol_read_BigString                              172.85ns    5.79M\n  BinaryProtocol_read_BigBinary                               56.88ns   17.58M\n  BinaryProtocol_read_LargeBinary                             56.77ns   17.61M\n  BinaryProtocol_read_Mixed                                   43.98ns   22.74M\n  BinaryProtocol_read_SmallListInt                            58.19ns   17.19M\n  BinaryProtocol_read_BigListInt                              19.75us   50.63K\n  BinaryProtocol_read_BigListMixed                           440.20us    2.27K\n  BinaryProtocol_read_LargeListMixed                          56.94ms    17.56\n  CompactProtocol_read_Empty                                   9.35ns  106.93M\n  CompactProtocol_read_SmallInt                               13.07ns   76.49M\n  CompactProtocol_read_BigInt                                 18.23ns   54.87M\n  CompactProtocol_read_SmallString                            25.61ns   39.05M\n  CompactProtocol_read_BigString                             174.46ns    5.73M\n  CompactProtocol_read_BigBinary                              59.77ns   16.73M\n  CompactProtocol_read_LargeBinary                            60.81ns   16.44M\n  CompactProtocol_read_Mixed                                  42.70ns   23.42M\n  CompactProtocol_read_SmallListInt                           66.89ns   14.95M\n  CompactProtocol_read_BigListInt                             25.08us   39.87K\n  CompactProtocol_read_BigListMixed                          427.93us    2.34K\n  CompactProtocol_read_LargeListMixed                         56.11ms    17.82\n  ============================================================================\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6635325\n\nfbshipit-source-id: 393fc1005689042977c03f37f5a898ebe7814d44"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "djwatson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/a4306bcdf04c95f321a96ab9b0f29de1c1e678f1", "message": "Loop Time\n\nSummary:\nOnly do the exponential loop smoothing once every 10ms.\nIf we need it before then, do it linearly.\n\nAlso, remove one of the now()s by only calling it once.\n\nReviewed By: bmaurer, yfeldblum\n\nDifferential Revision: D6690047\n\nfbshipit-source-id: 8267c01064aabc17cb8e86eb888e6120c99a129f"}, {"url": "https://api.github.com/repos/facebook/folly/commits/8893b8bcd26b41471e77c6882d77404c9a617176", "message": "parkinglot benchmark\n\nSummary: Add benchmark vs. futex\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6639280\n\nfbshipit-source-id: 9735444a7f48011f31603159561675d472cc4411"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plapukhov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/9bf260657e140cace3cab8850d6a40fac3a5cd93", "message": "add tryCreateNetwork()\n\nSummary: Add non-throwing version of createNetwork(), and rework existing code to throw exceptions based on error codes returned by non-throwing version.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6705425\n\nfbshipit-source-id: 268ff64c36e7cceeea3463248d18b7b2cb81390e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yfeldblum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/61cdb3dc27700545a65062e174d1b7f1ac15f088", "message": "Fix Build: folly/synchronization/test/ParkingLotBenchmark.cpp (sign-compare, unused-variable)\n\nSummary: [Folly] Fix Build: `folly/synchronization/test/ParkingLotBenchmark.cpp` (`sign-compare`, `unused-variable`).\n\nReviewed By: djwatson\n\nDifferential Revision: D6733586\n\nfbshipit-source-id: 04b82110e8e0b655e6b3994dbca3bd0b4bd57eef"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cf930032da9b0796d96c14c3b4446a75477c1ef3", "message": "Revert D6725091: [Folly] Use thread-local in RequestContext::getStaticContext\n\nSummary:\nThis reverts commit 9979f39677284b1051cb109b461097495d77ca17\n\nbypass-lint\n\nAn infra SEV is better than not reverting this diff.\nIf you copy this password, see you in SEV Review!\ncause_a_sev_many_files\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: f1e3c80c869aa47684f5fbe79528e68174dee568"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6746259314362d89f3d1d1dbfdf00c9fe18de202", "message": "Use thread-local in RequestContext::getStaticContext\n\nSummary:\n[Folly] Use thread-local in `RequestContext::getStaticContext`.\n\n`folly::SingletonThreadLocal` uses `folly::ThreadLocal`. However, `static FOLLY_TLS` (`static __thread`) is always faster than `folly::ThreadLocal` for thread-local singletons for which iteration is not required.\n\nReviewed By: djwatson\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: 9979f39677284b1051cb109b461097495d77ca17"}, {"url": "https://api.github.com/repos/facebook/folly/commits/1aabda15e688be7a21874c1c8f5252b898bdb312", "message": "Fix missing WaitOptions symbol in autotools build\n\nSummary:\n[Folly] Fix missing `WaitOptions` symbol in autotools build.\n\nCloses #736.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6724950\n\nfbshipit-source-id: 54ac0d1a743aa38fe1a7a2bdce585fced18c5a44"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cd1bdc912603c0358ba733d379a74ae90ab3a437", "message": "Fix copyright lines\n\nSummary: [Folly] Fix copyright lines based on file histories.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6720312\n\nfbshipit-source-id: c70a667a1977e70e2d4451ea624f96163982f681"}, {"url": "https://api.github.com/repos/facebook/folly/commits/e092e957b750dbf24de247b0794cd4b0bb9bfdaf", "message": "Convert newlines in folly/portability/PThread.cpp\n\nSummary:\n[Folly] Convert newlines in `folly/portability/PThread.cpp`.\n\n```\ndos2unix folly/portability/PThread.cpp\n```\n\nReviewed By: meyering\n\nDifferential Revision: D6720343\n\nfbshipit-source-id: b92122b4a7012d7f8d73d293af51b4fcc868c582"}, {"url": "https://api.github.com/repos/facebook/folly/commits/47b2f8dfdc39b149accf9ae830551eee670d98d1", "message": "Promote aligned_malloc and aligned_free\n\nSummary:\n[Folly] Promote `aligned_malloc` and `aligned_free` from `namespace folly::detail` to `namespace folly`.\n\nAnd move them from `folly/portability/Memory.h` to `folly/Memory.h`.\n\nDifferential Revision: D6153394\n\nfbshipit-source-id: eef314d2bc171910ea3c8403da9e9e1d1858ce15"}, {"url": "https://api.github.com/repos/facebook/folly/commits/fd5eeb5f4bb9ad55172e9454f726667e3c325000", "message": "Unsafe pre-sorted construction for sorted-vector containers\n\nSummary:\n[Folly] Unsafe pre-sorted construction for sorted-vector containers.\n\nIf the backing container type can be constructed directly in sorted order or can be determined in advance to be in sorted order, then a special constructor can help code take advantage of this condition by avoiding an extra invocation of `std::sort`.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6708379\n\nfbshipit-source-id: 25d886b0814dc9230c6046ed1e7f199fac47754e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/12552372", "body": "@Orvid - Can you please check this against MSVC and let me know if this helps?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12552372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577338", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "meyering": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/492fad43a76506407008a5394511daf6bba5bccc", "message": "define SKIP_IF\n\nSummary:\nFinding ourselves writing too many identical \"if (expr) SKIP << ...\" statements,\nthis change factors out/encapsulates the functionality.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6727531\n\nfbshipit-source-id: 703abcd5d8c30a6ebab94327a12da4f2d1f7ff74"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleivag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/d7b6ad4972b288f90bf57d7597103c44c244decd", "message": "allow command to accept \"--\" separator\n\nSummary:\nCurrently NestedCommandLineApp does not support `--` to indicate that the following arguments should be parsed as arguments, not nested commands or options.\nThis diff fix that by whitelisting any argument given after \"--\"\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6721144\n\nfbshipit-source-id: 38a850b6ea803dc758c5fe65a21575e5faeac35b"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidtgoldblatt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/98d1077ce0603b0713353d638cb1436a28827af6", "message": "Add Tearable, for concurrently-modified non-atomic objects.\n\nSummary:\nThis adds the Tearable class template, which holds storage for an\narbitrarily-sized object that can be concurrently read or written without any\nexternal synchronization.\n\nReviewed By: yfeldblum, djwatson\n\nDifferential Revision: D6422334\n\nfbshipit-source-id: ee3853bbd393ac8e30dca6439c61606cc5495f92"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "flarnie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/719", "title": "Add `CONTRIBUTING` and `CODE_OF_CONDUCT`", "body": "Hi! I noticed this repo could use some documentation to help new contributors.\r\n\r\n\r\n\r\n**why make this change?:**\r\nRegarding the `CONTRIBUTING.md` -> Including instructions for new contributors to open source is a courtesy that will foster a welcoming and safe open source community at Facebook.\r\n\r\nRegarding the Code of Conduct ->\r\n\r\nFacebook Open Source provides a Code of Conduct statement for all\r\nprojects to follow, to promote a welcoming and safe open source community.\r\n\r\nExposing the COC via a separate markdown file is a standard being\r\npromoted by Github via the Community Profile in order to meet their Open\r\nSource Guide's recommended community standards.\r\n\r\nAs you can see, adding this file will improve [the folly community profile](https://github.com/facebook/folly/community)\r\nchecklist and increase the visibility of our COC.\r\n\r\n**test plan:**\r\nViewing it on my branch -\r\n<img width=\"1014\" alt=\"screen shot 2017-12-03 at 4 10 05 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531641-cd914672-d844-11e7-8e27-4368c85fb5cd.png\">\r\n<img width=\"1006\" alt=\"screen shot 2017-12-03 at 4 10 14 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531642-cda91450-d844-11e7-97fd-513961779e91.png\">\r\n\r\n**issue:**\r\ninternal task t23481323", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "badarihp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/710", "title": "Added addFuture function , which accepts function, expiry time, expir\u2026", "body": "Added new function addFuture which can accept a function, expiry time, and expiry callback function.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dryganets": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/653", "title": "Handle 4-byte unicode code points.", "body": "https://github.com/facebook/folly/pull/640\r\nreworked to have a surrogate check for the 4th symbol.\r\n\r\nWe need it for react-native to make sure that invalid symbols will be correctly skipped in case somebody passes a corrupted string to javascript core.\r\n\r\nNeeds to be backported to 2016.09.26.00 to fix the following issue in react-native:\r\n#10756\r\n```\r\nFatal Exception: java.lang.RuntimeException: Failed to create String from JSON\r\n       at com.facebook.react.bridge.queue.NativeRunnable.run(NativeRunnable.java)\r\n       at android.os.Handler.handleCallback(Handler.java:739)\r\n       at android.os.Handler.dispatchMessage(Handler.java:95)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:31)\r\n       at android.os.Looper.loop(Looper.java:234)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadImpl$3.run(MessageQueueThreadImpl.java:193)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "choeger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/640", "title": "Handle 4-byte unicode code points", "body": "fixes #632\r\n\r\nSigned-off-by: Christoph H\u00f6ger <christoph.hoeger@celeraone.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yeolar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/619", "title": "fixtypo", "body": "Miss putMessages test at folly/io/async/test/NotificationQueueTest.cpp", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petr-tik": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/618", "title": "Hyphen typos", "body": "Removed spaces after some hyphens inside compound words", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tedjp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/554", "title": "IOStreamBuf (istream/basic_streambuf adaptor for IOBuf)", "body": "Allows chained `IOBuf`s to be read via `std::istream` without having to coalesce them into a single contiguous buffer first.\r\n\r\nWorks with any single-byte type, eg. `char` or `uint8_t`. Not currently usable on multi-byte types like `wchar_t` due to the extra complexity involved in recomposing multi-byte characters that are split across `IOBuf` boundaries. (`static_assert` prevents use with multi-byte types.)\r\n\r\nCurrently read-only; cannot be used with a `std::ostream`.\r\n\r\nDepends the `io/test/Makefile.am` changes in #550. I've included the two necessary commits in this pull request. Happy to resubmit this after #550 completes review if that's preferred.\r\n\r\nThere are probably good performance reasons to avoid using this in general \u2014 and perhaps that should be noted in the header \u2014 but it could be useful in conjunction with APIs that can read from an `istream`. My use for this was with Proxygen: passing an incoming message body (chained `IOBuf`) to a 3rd party API.\r\n\r\nThe use of a `.tcc` file for the implementation of most of the templated functions is unusual for Folly but I wanted to keep them out of the general header. It could easily be renamed to `\u2026-impl.h` or whatever the preferred style is.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brunomorishita": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/425", "title": "Remove dependency from boost class noncopyable", "body": "With explicitly deleted member functions in C++11 the boost class noncopyable is not needed anymore\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fabbree": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/399", "title": "Fix for HHWheelTimer assert-fails when destroy() happens after cancel\u2026", "body": "\u2026All() #397\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rigtorp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/378", "title": "Add memory padding and alignment to prevent false sharing", "body": "Ensure no thirdparty thread writes to a cacheline shared by our ringbuffer, readIndex and writeIndex.\nEnsure readIndex and writeIndex are located on different cachelines.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmbeard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/351", "title": "Allow clients of FBVector to customize the growth strategy", "body": "As per the suggestion in the comments of `FBVector.h`, I've added the ability to customize the growth strategy using the `fbvector`'s allocator. If the allocator used implements a non-static member function of type `size_type calculate_capacity(size_type) const` then this will be called in every case where the `fbvector` instance needs to grow. E.g. to use an `N+1` strategy the allocator would look something like...\n\n``` c++\ntemplate<typename T>\nstruct growth_policy_allocator\n{\n  typedef T value_type;\n\n  T* allocate(size_t n)\n  {\n    ...\n  }\n\n  void deallocate(void *p, size_t n)\n  {\n    ...\n  }\n\n  size_t calculate_capacity(size_t current) const // const is required\n  {\n    return current + 1;\n  }\n};\n```\n\nIf the allocate doesn't implement `calculate_capacity` then `fbvector` falls back to its default growth strategy.\n\nI've also added a simple test case for this feature. Compiles and passes on Ubuntu 14.04\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hincoin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/326", "title": "Change memory_order_consume to relaxed in ProducerConsumerQueue", "body": "A few of the functions within ProducerConsumerQueue use `std::memory_order_consume` to load from shared variables, but the consume guarantees aren't used since there's no earlier data dependencies on these variables that need to be propagated. Changing these loads to `std::memory_order_relaxed` offers the same guarantees that are needed for these functions and, under current compiler support, avoids the promotion to `std::memory_order_acquire`. \n\nRelevant post on the [Google group](https://groups.google.com/d/msg/facebook-folly/eGb5gGudGtc/nmBNLFVaJQAJ).\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeanRBurton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/324", "title": "Check for overflow when growing Vectors.", "body": "I don't know if this works, but it is at least in the spirit of the right idea.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975", "body": "Read the files in the folly/docs directory. They are markdown text files, so it's probably simpler to start reading them right here on github.\nThe sources files are also documented. And of course, the test files contain valuable info.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisaycock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471", "body": "I agree with @dribeas. \"Standard Library\" is the correct term.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902", "body": "@tudor Glad I could be of help!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436", "body": "Ok, Standart Library if good enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "avatasia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736", "body": "Why not use STL or Boost, so there is too much programmer in Facebook?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdelong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905", "body": "Merged upstream and pushed\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130", "body": "Thanks; f0ced414840d5c29e6ced3466004dc1a122b51c1\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190", "body": "Thanks; I merged it upstream (so it'll be pushed back out in the next push).\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250", "body": "Thanks for the suggestion.  For now I just added a link to the overview doc to the wiki page.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304", "body": "Just pushed a near-rewrite of FBVector.  Looks like the new assign() no longer has this bug; thanks for reporting it, though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336", "body": "Sorry for the delay asl.  I'm merging these into our local repo now (a couple of them have been fixed already).  They'll be back out in the next public push.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tudor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508", "body": "fixed in 050c1c3d52e4df860911235ac894291b2c089e59\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373", "body": "Merged manually, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390", "body": "The comment is correct. \"iff\" means \"if and only if\", see http://en.wikipedia.org/wiki/If_and_only_if\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835", "body": "Thanks for the comment. I'll be closing this issue because the issue tracker is meant for specific problems with the code.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271", "body": "Yes it does.  Making folly portable outside of gcc 4.6+, Linux x86_64 has never been an explicit goal.  We would welcome patches, though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520", "body": "@asl Before we can accept your changes, you'll have to sign the Facebook Contributor License Agreement: https://developers.facebook.com/opensource/cla\n\nThanks!\n-Tudor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169", "body": "We'll take a look, thanks for letting us know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903", "body": "Did u even took a read on readme files or code itself before saying that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewjcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592", "body": "Thanks for reporting this!  Fixed in 9c2924258bee193d267f85e598ea5abf72cb267f.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641", "body": "We currently don't test/build on OpenSuse, so its not surprising that there are some issues.  I'll look to get an install of this working shortly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "syntheticpp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611", "body": "obsolete\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "asl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398", "body": "Fix for Portability.h is simple:\n\n```\ndiff --git a/folly/Portability.h b/folly/Portability.h\nindex 6d373a2..a9e8d32 100644\n--- a/folly/Portability.h\n+++ b/folly/Portability.h\n@@ -33,7 +33,11 @@\n #undef FOLLY_FINAL\n #undef FOLLY_OVERRIDE\n\n-#ifdef __GNUC__\n+#if defined(__clang__)\n+#  define FOLLY_FINAL final\n+#  define FOLLY_OVERRIDE override\n+#elif defined(__GNUC__)\n+# include <features.h>\n # if __GNUC_PREREQ(4,7)\n #  define FOLLY_FINAL final\n #  define FOLLY_OVERRIDE override\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443", "body": "(sorry, no pull request, I have heavily hacked tree around)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498", "body": "But will provide some fixes soon :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andralex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038", "body": "Thanks! We'll look into this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055", "body": "... and good to see you again, Christian :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412912", "body": "Hi Dave -- this is the initial commit. Some of the files have a long history that is mostly internal to Facebook and peppered with commit information that has sensitive tidbits, so we decided to make the initial commit without a history. Going forward we're looking at ways to make fine-grained commit information available.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dabrahams": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412776", "body": "Inscrutable huge changesets like this one tend to undermine the \"open-source-ness\" of this effort.  Would it be possible to get the actual change history in here?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/comments/1412977", "body": "Oh!  The other commit was marked \"initial.\"  Sorry for the noise.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "BenPope": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/2823909", "body": "I think there is a missing file:\nhttps://github.com/facebook/folly/issues/23\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/2823909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "capitalaslash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4949410", "body": "just to let you know, it was enough for me to move `FOLLY_NORETURN` at beginning of line to make it compile, there is no need to remove it completely with gcc 4.8\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4949410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "denji": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4968026", "body": "@pgriess https://github.com/facebook/folly/issues/42\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4968026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "anatol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/6495310", "body": "This is duplicated file. Exception.h is already present below. This causes build time failure on Linux Arch:\n\n```\n==> Starting package()...\nMaking install in .\nmake[1]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\nmake[2]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /bin/sh ./libtool   --mode=install /usr/bin/install -c   libfolly.la libfollybenchmark.la libfollytimeout_queue.la libfollyfingerprint.la '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly'\nlibtool: install: /usr/bin/install -c .libs/libfolly.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.la\n /usr/bin/install -c -m 644  ApplyTuple.h Arena.h Arena-inl.h AtomicBitSet.h AtomicHashArray.h AtomicHashArray-inl.h AtomicHashMap.h AtomicHashMap-inl.h AtomicStruct.h Baton.h Benchmark.h Bits.h Checksum.h Chrono.h ConcurrentSkipList.h ConcurrentSkipList-inl.h Conv.h CpuId.h CPortability.h Demangle.h DiscriminatedPtr.h DynamicConverter.h dynamic.h dynamic-inl.h Exception.h FBString.h FBVector.h File.h FileUtil.h Fingerprint.h folly-config.h Exception.h ExceptionWrapper.h Foreach.h FormatArg.h Format.h Format-inl.h GroupVarint.h Hash.h IPAddress.h '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/.'\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.la\nlibtool: install: /usr/bin/install -c .libs/libfollytimeout_queue.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollytimeout_queue.la\nlibtool: install: /usr/bin/install -c .libs/libfollyfingerprint.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollyfingerprint.la\nlibtool: install: /usr/bin/install -c .libs/libfolly.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\n/usr/bin/install: will not overwrite just-created \u2018/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/./Exception.h\u2019 with \u2018Exception.h\u2019\nlibtool: install: chmod 644 /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nlibtool: install: ranlib /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nMakefile:922: recipe for target 'install-nobase_follyincludeHEADERS' failed\nmake[2]: *** [install-nobase_follyincludeHEADERS] Error 1\nmake[2]: *** Waiting for unfinished jobs....\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.a\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/6495310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "samveen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10027494", "body": "Would you tag a release with this revision?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10027494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "andrewcox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10043097", "body": "I did this\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10043097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Gownta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10766197", "body": "Long story short, this change should be attributed to @mtodat. See https://github.com/facebook/folly/pull/132 for details.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10766197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954384", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954389", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954416", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @SiebelsTim\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954445", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @gustavotemple\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954458", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @loverszhaokai\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954484", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @cppfool \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370", "body": "If you change ALL such functions in folly, that would be an impactful change.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gustavotemple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10961983", "body": "Thank you very much, @Gownta !\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10961983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Orvid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/11849195", "body": "While doing my port to Windows I've realized that this misses the use of pause in [detail/AtomicHashUtils.h](https://github.com/facebook/folly/blob/master/folly/detail/AtomicHashUtils.h#L33), which, although it does fall back to not using a pause, should be calling the functions added in this instead.\n\nAlso, is there an actual difference between `asm(\"pause\")` and `asm volatile(\"pause\")`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/11849195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12576669", "body": "MSVC is fine with this way of doing it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12576669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577942", "body": "At least, I thought that was the case, apparently I forgot where this was actually used when I tested it, as MSVC is giving me errors about this now :(\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12578031", "body": "I guess an `#ifdef` for MSVC is needed after all.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12578031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13505592", "body": "With the PRs I have open currently, MSVC 2015 can be used for the pieces of Folly that HHVM uses. There is no build system in place for MSVC in the main Folly repo.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13505592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506496", "body": "As long as it's not one of the files removed in [HHVM's CMake file](https://github.com/hhvm/hhvm-third-party/blob/master/folly/CMakeLists.txt#L47) for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as `Subprocess.cpp` is not supported under MSVC) \n\nFor template matching with Format.h under MSVC, there is a fix in [Folly #305](https://github.com/facebook/folly/pull/305/files#diff-9cf63f8fda0a99aa4270be1c2b36f425R777) to help with that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507610", "body": "For everything to compile, you need more than just that PR. HHVM builds Folly via CMake, which generates the project file, so the project file I pass along would be of limited use.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356", "body": "This doesn't quite seem right. Shouldn't it be the other way around?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413", "body": "This should be `#if defined(FOLLY_X64)`, which is what normally wraps the pause calls.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254", "body": "If this weren't in the C portability header, that would be true, but, as it is in the C portability header, I have kept the file compilable as C. I could do an `#ifdef` for C++ for that though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884", "body": "`FindClose` is indeed what I want, as this is closing the find handle, not a normal handle.\n\nThis returns an int because the standard `closedir` API returns an int. I've added a check for errors on the `FindClose` call, but I won't be marking the function for analysis, as this is intended as a functional portability mechanism, not an extensive API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726", "body": "I can certainly do that. My goal with the port was to make as few changes as possible to the code that effects more than just MSVC, which is why I only enabled it for MSVC at the moment.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701", "body": "Yes, it is. Looks like it happened when I was extracting the changes into separate PRs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429", "body": "This is the most permissive license of a proper implementation of this that I could find. It should be the same as the rest of the file, unless I missed something? Re-implementing it is possible, as trying to work around not having it will be more of a pain, as it's used in a few spots in HHVM.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264", "body": "RTM is the release version, it isn't  a prerelease, but there is a good chance that these will be fixed in an update, which is why these are set to go away when the update is released. This is basically future-proofing, as the eventual goal is to remove them completely. \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "korovkin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/13481209", "body": "hey there, what is the status for supporting MSVC ? \nwe would like to use it with MSVC 2015 ? \n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13481209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506060", "body": "thank you very much for the response, thats awesome!\nwhich parts are actually used? Format.h? \nwe are seeing a few issues with MSVC 2015 and template matching with MSVC... \n\nCC @DEGoodmanWilson\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507373", "body": "That's great! \n\nJust to confirm - \nIs PR 305 all is needed to compile it for MSVC 2015? \n\n> On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> \n> As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> \n> For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507387", "body": "One more question - could you please share the SLN file that compiles it? \n\nThanks \n\n> On Sep 29, 2015, at 18:21, H Grosman korovkin@gmail.com wrote:\n> \n> That's great! \n> \n> Just to confirm - \n> Is PR 305 all is needed to compile it for MSVC 2015? \n> \n> > On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> > \n> > As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> > \n> > For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jwatzman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160", "body": "Why not\n\n``` cpp\n    int64_t timeSinceLastAccept = std::max<int64_t>(\n       0,\n       nowMs.time_since_epoch().count() -\n       lastAccepTimestamp_.time_since_epoch().count());\n```\n\nEspecially since we're already assigning this to an `int64_t` result? It seems a lot shorter and cleaner than this large `decltype`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sgolemon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382", "body": "Comment from internal reviewer:\n\nnot every Container supports emplace_back, this change broke a project build (Container == folly::TypedIOBuf<>)\n\ncode using Container = strings::TypedBuffer is also affected\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193", "body": "This broke folly builds on our internal CI, but I think I came up with something suitable for both clang and us\n\n```\ntemplate <typename T> struct iterator_class_is_container {\n  typedef std::reverse_iterator<typename T::iterator> some_iterator;\n  enum { value = has_value_type<T>::value &&\n              std::is_constructible<T, some_iterator, some_iterator>::value };\n};\n\ntemplate <typename T> struct class_is_container\n  : std::conditional<\n      has_iterator<T>::value,\n      iterator_class_is_container<T>,\n      std::false_type\n    >::type {};\n```\n\nA diff containing this is currently up for review as D2170803\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805", "body": "Why not just always use the constexpr values and avoid the #ifdefs?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935", "body": "Maybe reduce this assertion to just:\n\n```\n  ~AtomicLinkedList() {\n    assert(empty());\n  }\n```\n\nAnd avoid duplicating the logic and the ifdefs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508", "body": "Unfortunately, we can't take this.  Could you come up with another approach, or an implementation from a more permissive license?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207", "body": "Shouldn't this be `!defined(_MSC_VER)` ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422", "body": "`uint16_6` looks like a typo, can you confirm that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544", "body": "' provides thousands separation.  So I would say the very least would be something along the lines of:\n\n```\n#ifdef FOLLY_NO_PRINTF_GROUPING\n  \"%ju\",\n#else\n  \"%'ju\",\n#endif\n  static_cast<uintmax_t>(uval));\n```\n\nAnd add a configure check to conditionally set that define.\n\nBetter would be to implement a thousands separating output for non-gnu platforms, but that's a bit more work.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443", "body": "How concerned do we need to be about checking for which pre-relesae we're working with?\nSeems like we can just assume \"MSVC 2015 Latest\" until final comes out.\n\nCan we kill this check and assume the two defines below are just not set?\nMakes the code a lot simpler if so.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ariccio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469", "body": "Since this is for Windows, you might as well annotate `s` with `_Pre_writable_size_(n)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081", "body": "Actually, you might as well go ahead and declare it like this for maximum static analysis effectiveness:\n\n```\n_At_buffer_(s, _Iter_, n, _Post_satisfies_(s[_Iter_] == 0))\nInline void bzero(  _Pre_writable_size_(n) _Out_ void* s, size_t n )\n\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236", "body": "You shouldn't need to explicitly specify the buffer size,  because [Secure Template Overloads](https://msdn.microsoft.com/en-us/library/ms175759.aspx) allow for [template parameter inference](https://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/), which is pretty cool.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309", "body": "`buf` should be `_Out_writes_z_(64)`, and the return value should be `_Ret_writes_maybenull_z_(64)`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824", "body": "Should be `_Field_range_(DT_UNKNOWN, DT_LNK)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904", "body": "`_Field_z_`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281", "body": "Protip : Mark it `_Post_ptr_invalid_` and you'll be able to detect use-after-free and double free bugs.\n\nMarking the function `_At_(dir->hand, _Post_ptr_invalid_)` will do the same for double handle closes.\n\nIs `FindClose` what you wanted to use here, or is it `CloseHandle`?\n\nAlso, why does this return an `int`, if it doesn't check any return values?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513", "body": "Mark `fmt` as `_Printf_format_string_` for format string error detection!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827", "body": "Mark the function as `_Success_( return == 0 )` and `dst` as `_Out_` to detect uninit memory usage.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663", "body": "Fair enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "3": {"JohnSmithyy": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/738", "title": "make check failed", "body": "```\r\nMakefile:1797: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2950: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2163: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2316: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n\r\nAnyone have a solution to this?\r\n\r\nI'm running Ubuntu 16.04. ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maikel": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/737", "title": "Poly does not work with noexcept methods", "body": "The `folly/Poly.md` document does not mention `noexcept` at all. Consider this example\r\n\r\n```\r\n#include <folly/Poly.h>\r\n#include <iostream>\r\n\r\nstruct IDrawable {\r\n  template <typename Base> struct Interface : Base {\r\n    void draw(std::ostream& out) const /* noexcept */ {\r\n      folly::poly_call<0>(*this, out);\r\n    }\r\n  };\r\n\r\n  template <typename T> using Members = folly::PolyMembers<&T::draw>;\r\n};\r\n\r\nstruct Circle {\r\n  void draw(std::ostream& out) const /* noexcept */ { out << \"Cirlce.\\n\"; }\r\n};\r\n\r\nusing Drawable = folly::Poly<IDrawable>;\r\n\r\nint main() {\r\n  Drawable obj = Circle{};\r\n  obj.draw(std::cout);\r\n}\r\n```\r\n\r\nUncommenting any `noexcept` breaks on my machine (using clang from 2017-11-25 and folly from 2017-12-25)\r\n\r\nI attached the error message for uncommenting `Circle::draw`'s  `noexcept` specifier.\r\n\r\n[error.log](https://github.com/facebook/folly/files/1639659/error.log)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomGarden": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/735", "title": "folly/folly/experimental/logging/example/main.cpp", "body": "#  log moudle don't work\r\nResently I want use folly's logging moudle.\r\nBut it don't work well.\r\nCompile no problem\u3002\r\n## compile cmd\r\nsources path : https://github.com/facebook/folly/blob/master/folly/experimental/logging/example/main.cpp\r\n```\r\n$ g++ main.c lib.cpp -std=c++14 -o testMain -lfollylogging -lfolly -ldouble-conversion -lglog -lgflags\r\n```\r\n\r\nI don't find any log from function `XLOG()`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZaMaZaN4iK": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/734", "title": "Conan package for Folly", "body": "Hello,\r\nDo you know about [Conan](https://github.com/conan-io/conan)?\r\n[Conan](http://docs.conan.io/en/latest/) is modern dependency manager for C++. And will be great if your library will be available via package manager for other developers.\r\n\r\n[Here](https://github.com/bincrafters/conan-templates) you can find example, how you can create package for the library. \r\n\r\nIf you have any questions, just ask :-)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkudrnac": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/732", "title": "One little goto \ud83e\udd96", "body": "https://github.com/facebook/folly/blob/e7f26d60480810d6c2b724130e35761d75af33fc/folly/String.cpp#L47\r\n\r\n![main-qimg-ed4254c72d3c84c43bef0d32b7ff4172](https://user-images.githubusercontent.com/12230741/34783624-5d2f7bfa-f62c-11e7-9691-5afb55ce78c3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MacroKnow": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/730", "title": "My system time is wrong ,when I make it,it endless loop.", "body": "eg:my system time is  Thurs Jan  5 20:36:04 CST 2017 ,and I preparing install version is v2018.01.01.00 .\r\nautoreconf -ivf \r\n./configure\r\nmake \r\n\r\nthen endless loop\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suspend0": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/728", "title": "Thanks & Happy New Year!", "body": "All folly committers:\r\n\r\nThank you for releasing and maintaining this library. We use a ton of this code. Personally, I have learned a lot by reading it. The effort that goes into the code itself, as well as the management of this OSS project, communication, and issue handling is all top notch and very much appreciated.\r\n\r\nThanks!\r\nDarren.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shadowwalker2718": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/725", "title": "`make check` failed", "body": "```\r\nmake[3]: Entering directory '/opt/share/folly/folly/test'\r\nmake[3]: 'libfollytestmain.la' is up to date.\r\nmake[3]: 'libgtest.la' is up to date.\r\nmake[3]: 'foreach_benchmark' is up to date.\r\nmake[3]: 'benchmark_test' is up to date.\r\nmake[3]: 'concurrent_skiplist_benchmark' is up to date.\r\nmake[3]: 'conv_benchmark' is up to date.\r\nmake[3]: 'sorted_vector_types_test' is up to date.\r\nmake[3]: 'foreach_test' is up to date.\r\nmake[3]: 'hash_test' is up to date.\r\nmake[3]: 'timeout_queue_test' is up to date.\r\nmake[3]: 'conv_test' is up to date.\r\nmake[3]: 'expected_test' is up to date.\r\n/bin/bash ../libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o range_test RangeTest.o libfollytestmain.la -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags \r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o .libs/range_test RangeTest.o  ./.libs/libfollytestmain.a /opt/share/folly/folly/init/.libs/libfollyinit.so /opt/share/folly/folly/.libs/libfolly.so -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags\r\nRangeTest.o: In function `testing::IsEmptyMatcher::gmock_Impl<folly::Range<int const*> const&>::FormatDescription[abi:cxx11](bool) const':\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1770: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2911: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2131: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2302: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vxider": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/711", "title": "Disable test", "body": "Hi,\r\n    I'am trying to cross compile folly to other platform, how can I disable test in `configure`?\r\nHere is my error:\r\n```\r\n./configure --enable-static --disable-shared --with-PACKAGE=MPMCQueue --with-boost=/home/vxider/local/boost --host=x86_64 \r\n\r\n...\r\nconfigure: error: cannot run test program while cross compiling\r\nSee `config.log' for more details\r\n...\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RcRonco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/700", "title": "Compression namespace", "body": "Hi,\r\nWhen compression moved from ```io``` to its own folder the namespace still stayed ```folly::io```, which is quite confusing.\r\nMaybe it should be in its own namespace or in the ```folly``` namespace, or even return the ```compression``` into ```io``` folder.\r\n\r\nIn compression [Utils.h](https://github.com/facebook/folly/blob/master/folly/compression/Utils.h#L30) the namespace ```folly::io::compression``` exists, refactoring the namespaces of the compression folder will make it more consistent, I don`t mind to do it.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tlanwairen123": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/699", "title": "folly configure checking whether the Boost::Context library is available... no", "body": "i try build the folly. there have an error for configure for checking whether the Boost::Context library is available... no\r\nI have install boost and boost_context\uff0chow can i Solve the problem\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yangxingpping": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/698", "title": "win ProducerConsumerQueue", "body": "Installing from vcpkg. Compiling failed when I am try to run ProducerConsumerQueue,with error C2327,C2065. folly::ProducerConsumerQueue<int>::writeIndex is not type name, nor enum.\r\nwriteIndex_ is not declared. It seems like vc++ does not support assign array size with sizeof(writeIndex_).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "newpoo": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/696", "title": "Can we add a callback parameter to IOBuf::wrapBuffer()?", "body": "IOBuf can inform clients when there is no any IOBuf objects refer to the buffer?\r\nSo clients know that it's safe to release the buffer now.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/694", "title": "Streaming Promise", "body": "Would it make sense to create a construct StreamingPromise that can `setValue` multiple times? The use case is that when the call site is something like:\r\n\r\n`\r\nserviceProxy.getResponse().then([](const ResponsePart&  response)\r\n{\r\n    //  Do something with partial response\r\n});\r\n\r\n`\r\n\r\nIt would be great to have the `ServiceProxy::getResponse` return a `Future` that can be set multiple times by the `Promise` that was created the first time it was called.\r\n\r\nIs this the limitation of the Future/Promise paradigm or would it be a good idea to support something like 'StreamingPromise' ?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kelu27": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/690", "title": "Undefined reference", "body": "I'm building folly for mcrouter on ubuntu:16.04:\r\nHere is my error with your last commit https://github.com/facebook/folly/commit/69d97159209c5a77fdf7805155738604233d0b8a:\r\n\r\n`folly/folly/.libs/libfolly.so: undefined reference to folly::AsyncSocketException::getMessage(folly::AsyncSocketException::AsyncSocketExceptionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guodongxiaren": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/687", "title": "dyld: Library not loaded: libboost_context.dylib", "body": "./generate_fingerprint_tables\r\ndyld: Library not loaded: libboost_context.dylib\r\n  Referenced from: /Users/jelly/Documents/Source/folly/folly/./generate_fingerprint_tables\r\n  Reason: image not found\r\nmake[2]: *** [FingerprintTables.cpp] Trace/BPT trap: 5\r\nmake[1]: *** [all-recursive] Error 1\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samdasnake": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/684", "title": "Error with 'libfollybenchmark.la' during make", "body": "I am receiving the following error when I run `make install` to install folly.  I am running Ubuntu 16.04.  Here are the error messages I receive.\r\n`/usr/bin/ld: /usr/local/lib/libdouble-conversion.a(double-conversion.cc.o): relocation R_X86_64_32 against '.bss' can not be used when making a shared object; recompile with -fPIC\r\n/usr/local/lib/libdouble-conversion.a: error adding symbols: Bad value\r\ncollect2: error: ld returned 1 exit status\r\nlibtool:   **_error: error: relink 'libfollybenchmark.la' with the above command before installing it_**\r\nMakefile:1316: recipe for target 'install-libLTLIBRARIES' failed\r\nmake[2]: *** [install-libLTLIBRARIES] Error 1`\r\n\r\nI have tried to install folly directly as well as with the fblualib install_all.sh script.  In both cases I received this same error message.  Does anyone know how I can resolve this issue?  Thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/684/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrch2k10": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/682", "title": "MPMCQueue.h is broken on Xcode 9 and Archlinux GCC 7/Clang 6 and maybe other", "body": "Hi, guys\r\n\r\nI've been trying to use folly and wangle  but MPMCQueue.h fail to compile on any compiler I've tried so far.\r\n\r\nArchLinux Gcc 7 and Clang 5/6\r\nMacOS 10.13 + Xcode 9\r\n\r\nI'm missing something or is a known issue?\r\n\r\nBtw there is no code in that file just the basic includes from one of the examples\r\n\r\nTyVM for your time\r\n```\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/src/asyncserver.cpp:1:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncserver.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncsocketclient.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/Threadpool.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/libpentaprotocol_global.hpp:100:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/ExecutorFilter.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/Service.h:22:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap-inl.h:27:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/concurrent/IOThreadPoolExecutor.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/IOThreadPoolExecutor.h:20:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/ThreadPoolExecutor.h:23:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/LifoSemMPMCQueue.h:20:\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:269:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:275:58: error: expected expression\r\n      while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                         ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:278:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:279:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:286:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:299:53: error: expected expression\r\n    this->enqueueWithTicketBase(ticket-offset, slots, cap, stride,\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:305:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:310:56: error: expected expression\r\n    while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                       ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:315:55: error: expected expression\r\n    maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:316:53: error: expected expression\r\n    this->dequeueWithTicketBase(ticket-offset, slots, cap, stride, elem);\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:352:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:359:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:360:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:390:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:418:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:425:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:449:47: error: expected expression\r\n        if (trySeqlockReadSection(state, slots, cap, stride)) {\r\n                                              ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:454:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:466:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n2 warnings and 20 errors generated.\r\nmake[2]: *** [CMakeFiles/PentaProtocolServer.dir/PentaProto/src/asyncserver.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/PentaProtocolServer.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "capsocrates": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/679", "title": "asm command does not compile in MSVC", "body": "This code\r\n[`    asm volatile(\"\" ::\"m\"(ptr) : \"memory\");`](https://github.com/facebook/folly/blob/94b8816bbdca38914030842554cc955caee59063/folly/Malloc.h#L193)\r\nIntroduced in [this commit](https://github.com/facebook/folly/commit/610c11630a3cbccdc2be0a91b5a6c2f934af3f55) does not compile in MSVC.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArntWork": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/678", "title": "Readme.md wrong for Linking non-default boost libraries?", "body": "The instructions say ./configure --with-boost=$BOOST_ROOT/lib but while trying it on ubuntu 16.04 with latest boost,  we needed ./configure --with-boost=$BOOST_ROOT  (so without the /lib at the end). With /lib it says it cannot find a version of boost context.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KindDragon": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/677", "title": "Issues with Visual C++ compiler", "body": "- [x] [folly/Malloc.h(193)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/Malloc.h#L193): error C2059: syntax error: 'volatile'  PR #688\r\n- [x] [folly/detail/Crc32cDetail.cpp(208)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/detail/Crc32cDetail.cpp#L208): [fatal error C1009: compiler limit: macros nested too deeply](https://github.com/facebook/folly/commit/74102328f60e450de7d1dab40d1772f82549fd96#commitcomment-23423375)\r\n- [x] [folly/executors/NamedThreadFactory.h(38)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/executors/NamedThreadFactory.h#L37-L38): error C2665: 'folly::setThreadName': none of the 2 overloads could convert all the argument types\r\n- [x] folly can't link with static libraries https://gist.github.com/KindDragon/c4e6414bd60242d317bb0387a82dce61#file-package-x64-windows-static-rel-out-log-L2291 PR #693\r\n- [x] [folly/futures/Future-inl.h(242)](https://github.com/facebook/folly/blob/fbc4c23895b0ee3874d9a36401d580a2a8957ba9/folly/futures/Future-inl.h#L242): error C2244: 'folly::SemiFuture<T>::SemiFuture': unable to match function definition to an existing declaration\r\n- [x] [folly/io/async/AsyncSocket.cpp(1589)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/io/async/AsyncSocket.cpp#L1589): error C2039: 'Control': is not a member of 'msghdr'. Win10 SDK define MSG_ERRQUEUE too https://naughter.wordpress.com/2017/07/16/changes-in-the-windows-v10-0-16232-sdk-compared-to-windows-v10-0-15063-sdk-part-one/ PR #689\r\n- [x] [folly/io/async/AsyncSocket.cpp(939)](https://github.com/facebook/folly/blob/master/folly/io/async/AsyncSocket.cpp#L937-L946): error C2065: 'SOL_IP': undeclared identifier\r\n- [x] [folly/stats/Histogram.cpp(43)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/stats/Histogram.cpp#L38-L43): error C5037: 'folly::detail::HistogramBuckets<__int64,folly::detail::Bucket<T>>::getPercentileBucketIdx': an out-of-line definition of a member of a class template cannot have default arguments with [T=int64_t] MSVC 2017U4 PR #691\r\n- [x] [folly/synchronization/CallOnce.h(86)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/synchronization/CallOnce.h#L86): error C2988: unrecognizable template declaration/definition. CallOnce.h(98): note: see reference to class template instantiation 'folly::detail::once_flag<Mutex>' being compiled https://github.com/facebook/folly/commit/b529367b595dd4da7e70569cbea36d30ace4fa39#commitcomment-25665382\r\n- [x] [folly\\Random.cpp(43)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/Random.cpp#L43): error C2672: 'folly::detail::once_flag<folly::SharedMutex>::{dtor}': no matching overloaded function found\r\n\r\n/cc @Orvid ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smellyfis": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/671", "title": "folly v2017.09.11.00 does not pick up libunwind reference", "body": "I am using Gentoo and am trying to build an updated folly ebuild (installation stuff) and autotools did not put in the -lunwind for the linker and I got several unrecognized symbols related. when I added \"-lunwind\" to every libfolly*_LDFLAGS I was able to link properly. I do not generally use autotools so I don't know where it is needed to be placed to pick up that flag dynamically, but i see there is something checking for it in configure.ac.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "navidR": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/669", "title": "Change default build system to CMake", "body": "Considering how it is easy to build applications and libraries using CMake, I created this issue to track this problem of \"when CMake will be available for *nix (and all other) platforms?\"\r\n\r\nRight now CMake support is only available on Windows platform.\r\n\r\nLet me give you an instance, I am building a complex Android application. Most of the networking and file system (while being multi threaded) logic is in NDK and I am using 8,9 different library. Compiling those libraries with Autotools is just like hell (therefore it is totally okay to call it Autohell). But just look at this link and see how it is easy to compile C++ project for NDK : \r\nhttps://developer.android.com/ndk/guides/standalone_toolchain.html\r\n\r\nIf you are not familiar with programming in NDK, I have to say compiling and setting up toolchain and required stuff is way complicated than your actual project (figure of speech), while with CMake and CMake support from Google, it is just adding two or three flags and then compiling your library to whatever arch and API level you are targeting. Folly and Wangle are very useful libraries. The only barrier for me to migrate our company C++/NDK to Folly is Autotools (consider how difficult it is to set up continuous integration for NDK and Autotools).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/669/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D-PorcoRosso": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/667", "title": "Fatal signal 6 (SIGABRT)", "body": "Hi:\r\n\r\nI wrote my jni library and integrated prebuild OpenSSL 1.0.2j to verify files signature correctness.\r\n\r\n\bAnd I exploded my jni library (as an aar file) into application project which used react-native, and run application, the native crash happened.\r\n\r\nCrash log as following text, do you have any idea about this crash?\r\n\r\nA/ReactNativeJNI: Check failed: 0 \r\n                                                                      \r\n--------- beginning of crash\r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13774 (FinalizerDaemon)\r\n                                                            \r\n                                                            [ 08-29 16:23:49.846   571:  571 W/         ]\r\n                                                            debuggerd: handling request: pid=13763 uid=10288 gid=10288 tid=13774\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Build fingerprint: 'google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys'\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Revision: '0'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: ABI: 'arm'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: pid: 13763, tid: 13774, name: FinalizerDaemon  >>> com.xxxxxxxxx.xxxxxxxxx <<<\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG: Abort message: 'Check failed: 0 '\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r0 00000000  r1 000035ce  r2 00000006  r3 00000008\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r4 eb31f978  r5 00000006  r6 eb31f920  r7 0000010c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r8 d1840e18  r9 d183e17e  sl 59a52495  fp d184ff7c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     ip 0000000b  sp eb31f250  lr edfa05c7  pc edfa2e30  cpsr 600f0010\r\n08-29 16:23:50.061 14901-14901/? A/DEBUG: backtrace:\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #00 pc 00049e30  /system/lib/libc.so (tgkill+12)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #01 pc 000475c3  /system/lib/libc.so (pthread_kill+34)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #02 pc 0001d635  /system/lib/libc.so (raise+10)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #03 pc 00019181  /system/lib/libc.so (__libc_android_abort+34)\r\n08-29 16:23:50.063 14901-14901/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #05 pc 0000864b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #06 pc 00009a63  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage4FailEv+10)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #07 pc 0000bd47  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage9SendToLogEv+246)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #08 pc 00009897  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage5FlushEv+102)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #09 pc 0000bf7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google15LogMessageFatalD2Ev+2)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #10 pc 000108dd  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+88)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #11 pc 00010863  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt12_Destroy_auxILb0EE9__destroyIPN5folly7dynamicEEEvT_S5_+16)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #12 pc 00010873  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt6vectorIN5folly7dynamicESaIS1_EED2Ev+8)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #13 pc 000108a3  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+30)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #14 pc 0003256f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #15 pc 00032907  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #16 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #17 pc 00032981  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #18 pc 00032a99  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #19 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #20 pc 0001e009  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #21 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #22 pc 0001df7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #23 pc 0001df9d  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #24 pc 0000afed  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so (_ZN8facebook3jni6detail10HybridData16setNativePointerESt10unique_ptrINS1_15BaseHybridClassESt14default_deleteIS4_EE+112)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #25 pc 0000b05b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #26 pc 00a9a657  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/oat/arm/base.odex (offset 0xa30000)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "4a616d6573205265696c6c79": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/666", "title": "Folly fails to compile with redefinition error", "body": "Configure/Make output:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ autoreconf -ivf && ./configure\r\nautoreconf: Entering directory `.'\r\nautoreconf: configure.ac: not using Gettext\r\nautoreconf: running: aclocal --force -I m4\r\nautoreconf: configure.ac: tracing\r\nautoreconf: running: libtoolize --copy --force\r\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\r\nlibtoolize: copying file 'build-aux/ltmain.sh'\r\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\r\nlibtoolize: copying file 'm4/libtool.m4'\r\nlibtoolize: copying file 'm4/ltoptions.m4'\r\nlibtoolize: copying file 'm4/ltsugar.m4'\r\nlibtoolize: copying file 'm4/ltversion.m4'\r\nlibtoolize: copying file 'm4/lt~obsolete.m4'\r\nautoreconf: running: /usr/bin/autoconf --force\r\nautoreconf: running: /usr/bin/autoheader --force\r\nautoreconf: running: automake --add-missing --copy --force-missing\r\nconfigure.ac:32: installing 'build-aux/compile'\r\nconfigure.ac:27: installing 'build-aux/missing'\r\nMakefile.am: installing 'build-aux/depcomp'\r\nautoreconf: Leaving directory `.'\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\r\nchecking for gawk... no\r\nchecking for mawk... mawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking how to print strings... printf\r\nchecking for style of include used by make... GNU\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for fgrep... /bin/grep -F\r\nchecking for ld used by gcc... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 1572864\r\nchecking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\r\nchecking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... @\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... mt\r\nchecking if mt is a manifest tool... no\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... no\r\nchecking for gcc option to produce PIC... -fPIC -DPIC\r\nchecking if gcc PIC flag -fPIC -DPIC works... yes\r\nchecking if gcc static flag -static works... yes\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking dependency style of g++... gcc3\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for ld used by g++... /usr/bin/ld -m elf_x86_64\r\nchecking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking for g++ option to produce PIC... -fPIC -DPIC\r\nchecking if g++ PIC flag -fPIC -DPIC works... yes\r\nchecking if g++ static flag -static works... yes\r\nchecking if g++ supports -c -o file.o... yes\r\nchecking if g++ supports -c -o file.o... (cached) yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking dynamic linker characteristics... (cached) GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking for gcc... (cached) gcc\r\nchecking whether we are using the GNU C compiler... (cached) yes\r\nchecking whether gcc accepts -g... (cached) yes\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking whether gcc understands -c and -o together... (cached) yes\r\nchecking dependency style of gcc... (cached) gcc3\r\nchecking if g++ supports C++1y features without additional flags... yes\r\nchecking if g++ supports C++1y features with -std=c++1y... yes\r\nchecking if g++ supports C++1y features with -std=gnu++1y... yes\r\nchecking whether -Wshadow-local and -Wshadow-compatible-local are supported... no\r\nchecking for main in -lgflags... yes\r\nchecking for gflags viability... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for GFLAGS... no\r\nconfigure: gflags.pc not found, treating as legacy dependency\r\nchecking for main in -lglog... yes\r\nchecking for glog viability... yes\r\nchecking for GLOG... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking whether compiling and linking against OpenSSL works... yes\r\nchecking for OPENSSL... yes\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking whether the Boost::Context library is available... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking whether the Boost::Program_Options library is available... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking whether the Boost::Thread library is available... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking whether the Boost::Regex library is available... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking whether the Boost::System library is available... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking whether the Boost::Filesystem library is available... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking whether the Boost::Chrono library is available... yes\r\nchecking for exit in -lboost_chrono... yes\r\nchecking for python... /usr/bin/python\r\nchecking for python version... 2.7\r\nchecking for python platform... linux2\r\nchecking for python script directory... ${prefix}/lib/python2.7/dist-packages\r\nchecking for python extension module directory... ${exec_prefix}/lib/python2.7/dist-packages\r\nchecking for ANSI C header files... (cached) yes\r\nchecking features.h usability... yes\r\nchecking features.h presence... yes\r\nchecking for features.h... yes\r\nchecking malloc.h usability... yes\r\nchecking malloc.h presence... yes\r\nchecking for malloc.h... yes\r\nchecking bits/functexcept.h usability... yes\r\nchecking bits/functexcept.h presence... yes\r\nchecking for bits/functexcept.h... yes\r\nchecking bits/c++config.h usability... yes\r\nchecking bits/c++config.h presence... yes\r\nchecking for bits/c++config.h... yes\r\nchecking double-conversion/double-conversion.h usability... yes\r\nchecking double-conversion/double-conversion.h presence... yes\r\nchecking for double-conversion/double-conversion.h... yes\r\nchecking for ceil in -ldouble-conversion... yes\r\nchecking for event_set in -levent... yes\r\nchecking for EVENT... yes\r\nchecking for an ANSI C-conforming const... yes\r\nchecking for inline... inline\r\nchecking for size_t... yes\r\nchecking whether time.h and sys/time.h may both be included... yes\r\nchecking for working volatile... yes\r\nchecking for __int128... yes\r\nchecking for __int128 type traits... yes\r\nchecking for pthread_spinlock_t... yes\r\nchecking for ifunc support... yes\r\nchecking for final and override support... yes\r\nchecking for libc++... no\r\nchecking for c++11 atomic support without GNU Atomic library... yes\r\nchecking for main in -ldl... yes\r\nchecking for liblinux-vdso support... yes\r\nchecking for usable std::is_trivially_copyable... yes\r\nchecking gflags namespace... gflags\r\nchecking for weak symbol support... yes\r\nchecking for wchar support... yes\r\nchecking for unaligned access support... yes\r\nchecking for vsnprintf reporting bad format strings... no\r\nchecking for library containing cplus_demangle_v3_callback... -liberty\r\nchecking for library containing clock_gettime... none required\r\nchecking for pthread_atfork support... yes\r\nchecking for XSI style strerror_r support... no\r\nchecking for ext/random and __gnu_cxx::sfmt19937... yes\r\nchecking for VLA (variable-length array) support... yes\r\nchecking for malloc_size... no\r\nchecking for malloc_usable_size... yes\r\nchecking for memrchr... yes\r\nchecking for pipe2... yes\r\nchecking for preadv... yes\r\nchecking for pwritev... yes\r\nchecking lz4.h usability... yes\r\nchecking lz4.h presence... yes\r\nchecking for lz4.h... yes\r\nchecking for LZ4_decompress_safe in -llz4... yes\r\nchecking snappy.h usability... yes\r\nchecking snappy.h presence... yes\r\nchecking for snappy.h... yes\r\nchecking for main in -lsnappy... yes\r\nchecking zlib.h usability... yes\r\nchecking zlib.h presence... yes\r\nchecking for zlib.h... yes\r\nchecking for main in -lz... yes\r\nchecking lzma.h usability... yes\r\nchecking lzma.h presence... yes\r\nchecking for lzma.h... yes\r\nchecking for main in -llzma... yes\r\nchecking zstd.h usability... no\r\nchecking zstd.h presence... no\r\nchecking for zstd.h... no\r\nchecking bzlib.h usability... no\r\nchecking bzlib.h presence... no\r\nchecking for bzlib.h... no\r\nchecking linux/membarrier.h usability... yes\r\nchecking linux/membarrier.h presence... yes\r\nchecking for linux/membarrier.h... yes\r\nchecking libdwarf/dwarf.h usability... no\r\nchecking libdwarf/dwarf.h presence... no\r\nchecking for libdwarf/dwarf.h... no\r\nchecking dwarf.h usability... no\r\nchecking dwarf.h presence... no\r\nchecking for dwarf.h... no\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating io/test/Makefile\r\nconfig.status: creating libfolly.pc\r\nconfig.status: creating test/Makefile\r\nconfig.status: creating test/function_benchmark/Makefile\r\nconfig.status: creating experimental/Makefile\r\nconfig.status: creating experimental/io/test/Makefile\r\nconfig.status: creating experimental/logging/Makefile\r\nconfig.status: creating experimental/logging/example/Makefile\r\nconfig.status: creating experimental/symbolizer/Makefile\r\nconfig.status: creating init/Makefile\r\nconfig.status: creating stats/test/Makefile\r\nconfig.status: creating config.h\r\nconfig.status: config.h is unchanged\r\nconfig.status: executing folly-config.h commands\r\nconfig.status: creating folly-config.h - prefix FOLLY for config.h defines\r\nconfig.status: folly-config.h is unchanged\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/fun/fboss/external/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/fun/fboss/external/folly/folly'\r\ndepbase=`echo Assume.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF $depbase.Tpo -c -o Assume.lo Assume.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp  -fPIC -DPIC -o .libs/Assume.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp -o Assume.o >/dev/null 2>&1\r\ndepbase=`echo Checksum.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF $depbase.Tpo -c -o Checksum.lo Checksum.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp  -fPIC -DPIC -o .libs/Checksum.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp -o Checksum.o >/dev/null 2>&1\r\ndepbase=`echo ClockGettimeWrappers.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF $depbase.Tpo -c -o ClockGettimeWrappers.lo ClockGettimeWrappers.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp  -fPIC -DPIC -o .libs/ClockGettimeWrappers.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp -o ClockGettimeWrappers.o >/dev/null 2>&1\r\ndepbase=`echo concurrency/CacheLocality.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF $depbase.Tpo -c -o concurrency/CacheLocality.lo concurrency/CacheLocality.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp  -fPIC -DPIC -o concurrency/.libs/CacheLocality.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp -o concurrency/CacheLocality.o >/dev/null 2>&1\r\ndepbase=`echo detail/Futex.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF $depbase.Tpo -c -o detail/Futex.lo detail/Futex.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp  -fPIC -DPIC -o detail/.libs/Futex.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp -o detail/Futex.o >/dev/null 2>&1\r\ndepbase=`echo detail/IPAddress.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF $depbase.Tpo -c -o detail/IPAddress.lo detail/IPAddress.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp  -fPIC -DPIC -o detail/.libs/IPAddress.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp -o detail/IPAddress.o >/dev/null 2>&1\r\ndepbase=`echo detail/StaticSingletonManager.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF $depbase.Tpo -c -o detail/StaticSingletonManager.lo detail/StaticSingletonManager.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp  -fPIC -DPIC -o detail/.libs/StaticSingletonManager.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp -o detail/StaticSingletonManager.o >/dev/null 2>&1\r\ndepbase=`echo detail/ThreadLocalDetail.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF $depbase.Tpo -c -o detail/ThreadLocalDetail.lo detail/ThreadLocalDetail.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF detail/.deps/ThreadLocalDetail.Tpo -c detail/ThreadLocalDetail.cpp  -fPIC -DPIC -o detail/.libs/ThreadLocalDetail.o\r\nIn file included from ./../folly/Foreach.h:320:0,\r\n                 from ./../folly/detail/ThreadLocalDetail.h:30,\r\n                 from detail/ThreadLocalDetail.cpp:16:\r\n./../folly/Foreach-inl.h:222:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:236:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:315:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)'\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:303:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\nMakefile:1902: recipe for target 'detail/ThreadLocalDetail.lo' failed\r\nmake[2]: *** [detail/ThreadLocalDetail.lo] Error 1\r\nmake[2]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:2013: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:1195: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\nfun@woodhouse:\\~/fboss/external/folly/folly$\r\n```\r\n\r\nG++ version info:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ g++ --version\r\ng++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bilosikia": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/665", "title": "ubuntu 17.04 make error", "body": "i have installed all the packages.how can i deal with this?\r\ndetail/Crc32cDetail.cpp: In function \u2018uint64_t folly::crc32_detail::CombineCRC(long unsigned int, uint64_t, uint64_t, uint64_t, const uint64_t*)\u2019:\r\ndetail/Crc32cDetail.cpp:153:31: error: \u2018_mm_cvtsi128_si64\u2019 was not declared in this scope\r\n   crc0 = _mm_cvtsi128_si64(res);\r\n                               ^\r\ndetail/Crc32cDetail.cpp:155:34: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc2 = _mm_crc32_u64(crc2, crc0);\r\n                                  ^\r\ndetail/Crc32cDetail.cpp: In function \u2018void folly::crc32_detail::triplet_loop(long unsigned int, uint64_t&, const unsigned char*&, long unsigned int)\u2019:\r\ndetail/Crc32cDetail.cpp:48:52: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc##0 = _mm_crc32_u64(crc##0, *(buf##0 + offset)); \\\r\n                                                    ^\r\ndetail/Crc32cDetail.cpp:201:9: note: in expansion of macro \u2018CRCtriplet\u2019\r\n         CRCtriplet(crc, next, -128);\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shaneknapp": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/662", "title": "unable to compile folly on ubuntu 16.04 LTS", "body": "i've gone through the installation instructions, installed all of the recommended packages, but building folly fails on the first make.\r\n\r\ni have a hand-rolled boost installation (1.6.2) installed in my homedir, which i compiled w/C++14 support.\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ uname -a\r\nLinux amp-jenkins-staging-master 4.4.0-91-generic #114-Ubuntu SMP Tue Aug 8 11:56:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ ./configure --with-boost=$HOME/boost --prefix=/home/eecs/sknapp/thrift &> configure.out\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ grep boost configure.out\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking for exit in -lboost_chrono... yes\r\n```\r\n\r\nlooks cromulent, right?  well...\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\n/bin/bash ./libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o generate_fingerprint_tables build/GenerateFingerprintTables.o libfollybase.la -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o generate_fingerprint_tables build/GenerateFingerprintTables.o  ./.libs/libfollybase.a -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\n/usr/bin/ld: cannot find -lboost_context\r\n/usr/bin/ld: cannot find -lboost_program_options\r\n/usr/bin/ld: cannot find -lboost_thread\r\n/usr/bin/ld: cannot find -lboost_filesystem\r\n/usr/bin/ld: cannot find -lboost_system\r\n/usr/bin/ld: cannot find -lboost_regex\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1662: recipe for target 'generate_fingerprint_tables' failed\r\nmake[2]: *** [generate_fingerprint_tables] Error 1\r\nmake[2]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1997: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1191: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n\r\n(everything up until this point seems to compile normally)\r\n\r\ni've tried manually setting --with-boost-libdir, updating LD_LIBRARY_PATH, etc etc but i always get the same failure.\r\n\r\nany ideas?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hrjaco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/655", "title": "FutureTimekeepr threads runs forever", "body": "We have a thrift server built on top of fbthrift. We uses future's delayed() function to implement speculative request failover. But after we enable speculative request failover, we noticed that our server cannot be stopped correctly.\r\n\r\nAfter we stop the server, we noticed that our server's main function reaches the end, but the `FutureTimekeepr` still runs, which causes the process not stopped. If we do not enable speculative failover(FutureTimekeepr won't exist), our server can be stopped correctly.\r\n\r\nI noticed the FutureTimekeepr thread is used as a singleton inside ThreadWheelTimekeeper. Any idea why its destructor is not called even after main function reaches the end? thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simpkins": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/e96129da65d3ad2b20aae5a2bf2d22d2d72b8feb", "message": "cmake: fix the test builds\n\nSummary:\n- Fix the locations of some tests that have been moved.\n- Remove some tests that have been deleted.\n- Comment out some tests that depend on parts of folly that are not currently\n  built by the CMake build scripts.\n- Fix a build error in CompressionTest.cpp if FOLLY_HAVE_LIBZ is not defined.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735700\n\nfbshipit-source-id: 89f60751fa7079b2c609d23d85fbed2a0f317b55"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6c511999f92066ed84778bca4491c8d139a3195d", "message": "fix a multiline comment warning\n\nSummary:\nDeterministicScheduleTest.cpp contained several single-line C++ comments that\nended in a trailing backslash.  This makes the preprocessor treat the following\nline as a comment as well, even if it does not start with `//`.  Newer versions\nof gcc emit warnings about this.\n\nThis changes the comment in DeterministicScheduleTest.cpp to use `/* */` to\navoid this issue.\n\nReviewed By: siyengar\n\nDifferential Revision: D6735672\n\nfbshipit-source-id: 162c735507a643ce0dbee58f1f054865237e1eba"}, {"url": "https://api.github.com/repos/facebook/folly/commits/bdd9360c598d80d524de6780cd5be65af56d98fd", "message": "fix some bugs in AsyncSSLSocketTest\n\nSummary:\nA couple of the test functions in AsyncSSLSocketTest maintained two EventBase\nobjects and alternated looping between them.  In some cases it would call\nEventBase::loopOnce() even when there was no work to do.  This call normally\nblocks until an event is ready.  This happened to work when using libevent1,\nbut this appears mostly accidental: with libevent1 EVLOOP_ONCE causes the loop\nto break out even after an \"internal\" I/O event; in libevent2 EVLOOP_ONCE only\nbreaks out after a non-internal event has occurred:\nhttps://github.com/libevent/libevent/commit/0617a818204397790e5e4c9bcb9e91ae5ea7817a\n\nIn these tests it turns out that the internal EventBase NotificationQueue\nalways gets triggered the very first time loopOnce() is called, preventing\nthese tests from hanging when using libevent1.\n\nThis fixes the hang when using libevent2 by removing the initial loopOnce()\ncalls that potentially have nothing to do.  This also consolidates the 2\nEventBase objects into one to avoid having to alternate loopOnce() calls\nbetween them without knowing which one actually has work to do.\n\nThis also fixes an issue where the code never checked the return value of\n`recv()`\n\nReviewed By: yfeldblum, siyengar\n\nDifferential Revision: D6735669\n\nfbshipit-source-id: 5f36106a08866aa8908e82263f83a606399cdf79"}, {"url": "https://api.github.com/repos/facebook/folly/commits/7da4ef82aee382777bb50aadd4af14a482739d10", "message": "suppress warnings in tests for deprecated functions\n\nSummary:\nUpdate ShellTest and PromiseTest to suppress warnings about using deprecated\nfunctions in the tests for those functions.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735670\n\nfbshipit-source-id: 89edcb49d1eff3132398aaef88f5a5cae82e3557"}, {"url": "https://api.github.com/repos/facebook/folly/commits/19db503e08e4ea46a8b4d9a272605006b6245f88", "message": "cmake: fix path to FindGLog.cmake\n\nSummary:\nThe cmake files refer to this package as \"FindGLog\", but the file name on disk\nincorrectly had the 'L' lower cased.  This worked on case-insensitive file\nsystems, but caused cmake to fail when used on a case-sensitive file system.\n\nThis diff fixes the file name to match the name used in the cmake files.  This\nis also more consistent with the existing \"FindGFlags\" and \"FindGMock\"\npackages.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6710439\n\nfbshipit-source-id: 19f6824ef6793e505b5a0080c0fefe0b145a41c3"}, {"url": "https://api.github.com/repos/facebook/folly/commits/337e897a2510b8f1291c6be95b3eb18f0c80cb68", "message": "cmake: remove DOS-style line endings\n\nSummary:\nA number of the files in CMake/ had inconsistent line-endings.  This updates\nfiles using DOS-style CRLF line endings to just use CR instead.  On Windows,\ngit is capable of automatically changing CR to CRLF when checking out the\nrepository working directory.\n\nReviewed By: meyering\n\nDifferential Revision: D6714717\n\nfbshipit-source-id: 82adccf4e522d38fd1cb420869f62e52dbd6c5f1"}, {"url": "https://api.github.com/repos/facebook/folly/commits/b22d1721ed9c062e22b33936e13b39ed1507391a", "message": "cmake: add checks to generate folly-config.h correctly\n\nSummary:\nAdd proper checks to detect and set the values in folly-config.h correctly.\nPreviously the code simply hard-coded values that were appropriate for Windows.\n\nThis does not yet define all of the settings produced by the autoconf build,\nbut it lets the CMake-based build largely succeed on Linux systems.\n\nReviewed By: meyering\n\nDifferential Revision: D6710437\n\nfbshipit-source-id: 80490080ee6322995b740ac2a15181d220c6874a"}, {"url": "https://api.github.com/repos/facebook/folly/commits/03957924ccf4e32d0fbc4dc3198da3249f57b890", "message": "cmake: set compiler flags for non-Windows platforms\n\nSummary:\nUpdate CMakeLists.txt to check the current platform, and to set compiler flags\ncorrectly.  It now uses flags for Microsoft Visual Studio on Windows, and flags\nfor gcc or clang on all other platforms.  Previously it unconditionally used\nMSVC flags.\n\nReviewed By: meyering\n\nDifferential Revision: D6710435\n\nfbshipit-source-id: dbae3097bcadf1ee4a25879dd7770603387c0e4d"}, {"url": "https://api.github.com/repos/facebook/folly/commits/3d9eb7ffc32c2f5f878bb4aee61d30cb8c62a146", "message": "cmake: support using a separate build directory\n\nSummary:\nFix rules in the CMakeLists.txt file that generate source files to first create\ntheir output directory if necessary.  This allows the build to succeed when\nbuilding with a separate build output directory, rather than placing build\nartifacts in the source tree itself.\n\nReviewed By: meyering\n\nDifferential Revision: D6710436\n\nfbshipit-source-id: 786a65a37a70833e7e4a5affe4df292626dbb591"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spalamarchuk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/4bfbe0a10e914c3626e16cfdb9e87508e63b065f", "message": "Add DCHECKs for checking that underlying IOBuf wasn't modified\n\nSummary: Appending/prepending to IOBuf while iterating over it with Cursor is unsafe. This diff adds DCHECKs to catch such cases.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735060\n\nfbshipit-source-id: 7799facc52c53fabd83756ecb26a18c4ebd69677"}, {"url": "https://api.github.com/repos/facebook/folly/commits/86cefd11d497791f00769e69fba550f710906527", "message": "Properly handle appending to the tail of the chain\n\nSummary: Currently appending to the tail of the chain would cause the cursor advancing to the beginning of the chain, which is not correct, instead we should advance to the tail.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6734999\n\nfbshipit-source-id: b8b2585e0475b656f7b6bf4ed39686e2ccb2e432"}, {"url": "https://api.github.com/repos/facebook/folly/commits/afde52ff7655ba79759eafdbee14b3fe47428fce", "message": "Track absolute position of the cursor\n\nSummary:\nStart tracking the position of the cursor from the head of IOBuf chain. This comes at almost no cost (one arithmetic operation on IOBuf advance).\n\nThe main use case for this cursor is Thrift deserialization code. It allows us to stop accumulating `xfer` on every single byte/field/element write and instead get it from Cursor in the end (when we're exiting Thrift code).\nThis allows achieving ~10% better performance of deserialization.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6646813\n\nfbshipit-source-id: 8f796854a24a411698e96afe037695e816813022"}, {"url": "https://api.github.com/repos/facebook/folly/commits/2c730d6fe79b5642133c55545c4ed7570ce2abb9", "message": "Improve fast path of Cursor\n\nSummary:\nThis change simplifies the fastpath by reducing it to bare minimum (i.e. check length, load data) and removes indirection to IOBuf.\nAdditionally it adds `skipNoAdvance` method to have 1-instruction skip.\n\nDisassembly of `read<signed char>` is over 35 instructions (just hot path). With this change it's doesn to 8.\nDisassembly after:\n  Dump of assembler code for function folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>():\n     0x000000000041f0f0 <+0>:     mov    0x18(%rdi),%rax\n     0x000000000041f0f4 <+4>:     lea    0x1(%rax),%rcx\n     0x000000000041f0f8 <+8>:     cmp    0x10(%rdi),%rcx\n     0x000000000041f0fc <+12>:    ja     0x41f105 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>()+21>\n     0x000000000041f0fe <+14>:    mov    (%rax),%al\n     0x000000000041f100 <+16>:    mov    %rcx,0x18(%rdi)\n     0x000000000041f104 <+20>:    retq\n     0x000000000041f105 <+21>:    jmpq   0x41f110 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::readSlow<unsigned char>()>\n\nWith this diff Thrift deserialization becomes ~20% faster (with prod workloads).\n\nThrift benchmark:\nBefore:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   12.98ns   77.03M\n  BinaryProtocol_read_SmallInt                                20.94ns   47.76M\n  BinaryProtocol_read_BigInt                                  20.86ns   47.93M\n  BinaryProtocol_read_SmallString                             34.64ns   28.86M\n  BinaryProtocol_read_BigString                              185.53ns    5.39M\n  BinaryProtocol_read_BigBinary                               67.34ns   14.85M\n  BinaryProtocol_read_LargeBinary                             62.23ns   16.07M\n  BinaryProtocol_read_Mixed                                   58.74ns   17.03M\n  BinaryProtocol_read_SmallListInt                            89.99ns   11.11M\n  BinaryProtocol_read_BigListInt                              39.92us   25.05K\n  BinaryProtocol_read_BigListMixed                           616.20us    1.62K\n  BinaryProtocol_read_LargeListMixed                          83.49ms    11.98\n  CompactProtocol_read_Empty                                  11.28ns   88.67M\n  CompactProtocol_read_SmallInt                               19.15ns   52.22M\n  CompactProtocol_read_BigInt                                 26.14ns   38.25M\n  CompactProtocol_read_SmallString                            31.04ns   32.22M\n  CompactProtocol_read_BigString                             184.55ns    5.42M\n  CompactProtocol_read_BigBinary                              69.73ns   14.34M\n  CompactProtocol_read_LargeBinary                            64.39ns   15.53M\n  CompactProtocol_read_Mixed                                  58.73ns   17.03M\n  CompactProtocol_read_SmallListInt                           76.50ns   13.07M\n  CompactProtocol_read_BigListInt                             25.93us   38.56K\n  CompactProtocol_read_BigListMixed                          623.15us    1.60K\n  CompactProtocol_read_LargeListMixed                         80.57ms    12.41\n  ============================================================================\n\nAfter:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   10.40ns   96.17M\n  BinaryProtocol_read_SmallInt                                15.14ns   66.03M\n  BinaryProtocol_read_BigInt                                  15.19ns   65.84M\n  BinaryProtocol_read_SmallString                             25.19ns   39.70M\n  BinaryProtocol_read_BigString                              172.85ns    5.79M\n  BinaryProtocol_read_BigBinary                               56.88ns   17.58M\n  BinaryProtocol_read_LargeBinary                             56.77ns   17.61M\n  BinaryProtocol_read_Mixed                                   43.98ns   22.74M\n  BinaryProtocol_read_SmallListInt                            58.19ns   17.19M\n  BinaryProtocol_read_BigListInt                              19.75us   50.63K\n  BinaryProtocol_read_BigListMixed                           440.20us    2.27K\n  BinaryProtocol_read_LargeListMixed                          56.94ms    17.56\n  CompactProtocol_read_Empty                                   9.35ns  106.93M\n  CompactProtocol_read_SmallInt                               13.07ns   76.49M\n  CompactProtocol_read_BigInt                                 18.23ns   54.87M\n  CompactProtocol_read_SmallString                            25.61ns   39.05M\n  CompactProtocol_read_BigString                             174.46ns    5.73M\n  CompactProtocol_read_BigBinary                              59.77ns   16.73M\n  CompactProtocol_read_LargeBinary                            60.81ns   16.44M\n  CompactProtocol_read_Mixed                                  42.70ns   23.42M\n  CompactProtocol_read_SmallListInt                           66.89ns   14.95M\n  CompactProtocol_read_BigListInt                             25.08us   39.87K\n  CompactProtocol_read_BigListMixed                          427.93us    2.34K\n  CompactProtocol_read_LargeListMixed                         56.11ms    17.82\n  ============================================================================\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6635325\n\nfbshipit-source-id: 393fc1005689042977c03f37f5a898ebe7814d44"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "djwatson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/a4306bcdf04c95f321a96ab9b0f29de1c1e678f1", "message": "Loop Time\n\nSummary:\nOnly do the exponential loop smoothing once every 10ms.\nIf we need it before then, do it linearly.\n\nAlso, remove one of the now()s by only calling it once.\n\nReviewed By: bmaurer, yfeldblum\n\nDifferential Revision: D6690047\n\nfbshipit-source-id: 8267c01064aabc17cb8e86eb888e6120c99a129f"}, {"url": "https://api.github.com/repos/facebook/folly/commits/8893b8bcd26b41471e77c6882d77404c9a617176", "message": "parkinglot benchmark\n\nSummary: Add benchmark vs. futex\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6639280\n\nfbshipit-source-id: 9735444a7f48011f31603159561675d472cc4411"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plapukhov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/9bf260657e140cace3cab8850d6a40fac3a5cd93", "message": "add tryCreateNetwork()\n\nSummary: Add non-throwing version of createNetwork(), and rework existing code to throw exceptions based on error codes returned by non-throwing version.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6705425\n\nfbshipit-source-id: 268ff64c36e7cceeea3463248d18b7b2cb81390e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yfeldblum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/61cdb3dc27700545a65062e174d1b7f1ac15f088", "message": "Fix Build: folly/synchronization/test/ParkingLotBenchmark.cpp (sign-compare, unused-variable)\n\nSummary: [Folly] Fix Build: `folly/synchronization/test/ParkingLotBenchmark.cpp` (`sign-compare`, `unused-variable`).\n\nReviewed By: djwatson\n\nDifferential Revision: D6733586\n\nfbshipit-source-id: 04b82110e8e0b655e6b3994dbca3bd0b4bd57eef"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cf930032da9b0796d96c14c3b4446a75477c1ef3", "message": "Revert D6725091: [Folly] Use thread-local in RequestContext::getStaticContext\n\nSummary:\nThis reverts commit 9979f39677284b1051cb109b461097495d77ca17\n\nbypass-lint\n\nAn infra SEV is better than not reverting this diff.\nIf you copy this password, see you in SEV Review!\ncause_a_sev_many_files\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: f1e3c80c869aa47684f5fbe79528e68174dee568"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6746259314362d89f3d1d1dbfdf00c9fe18de202", "message": "Use thread-local in RequestContext::getStaticContext\n\nSummary:\n[Folly] Use thread-local in `RequestContext::getStaticContext`.\n\n`folly::SingletonThreadLocal` uses `folly::ThreadLocal`. However, `static FOLLY_TLS` (`static __thread`) is always faster than `folly::ThreadLocal` for thread-local singletons for which iteration is not required.\n\nReviewed By: djwatson\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: 9979f39677284b1051cb109b461097495d77ca17"}, {"url": "https://api.github.com/repos/facebook/folly/commits/1aabda15e688be7a21874c1c8f5252b898bdb312", "message": "Fix missing WaitOptions symbol in autotools build\n\nSummary:\n[Folly] Fix missing `WaitOptions` symbol in autotools build.\n\nCloses #736.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6724950\n\nfbshipit-source-id: 54ac0d1a743aa38fe1a7a2bdce585fced18c5a44"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cd1bdc912603c0358ba733d379a74ae90ab3a437", "message": "Fix copyright lines\n\nSummary: [Folly] Fix copyright lines based on file histories.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6720312\n\nfbshipit-source-id: c70a667a1977e70e2d4451ea624f96163982f681"}, {"url": "https://api.github.com/repos/facebook/folly/commits/e092e957b750dbf24de247b0794cd4b0bb9bfdaf", "message": "Convert newlines in folly/portability/PThread.cpp\n\nSummary:\n[Folly] Convert newlines in `folly/portability/PThread.cpp`.\n\n```\ndos2unix folly/portability/PThread.cpp\n```\n\nReviewed By: meyering\n\nDifferential Revision: D6720343\n\nfbshipit-source-id: b92122b4a7012d7f8d73d293af51b4fcc868c582"}, {"url": "https://api.github.com/repos/facebook/folly/commits/47b2f8dfdc39b149accf9ae830551eee670d98d1", "message": "Promote aligned_malloc and aligned_free\n\nSummary:\n[Folly] Promote `aligned_malloc` and `aligned_free` from `namespace folly::detail` to `namespace folly`.\n\nAnd move them from `folly/portability/Memory.h` to `folly/Memory.h`.\n\nDifferential Revision: D6153394\n\nfbshipit-source-id: eef314d2bc171910ea3c8403da9e9e1d1858ce15"}, {"url": "https://api.github.com/repos/facebook/folly/commits/fd5eeb5f4bb9ad55172e9454f726667e3c325000", "message": "Unsafe pre-sorted construction for sorted-vector containers\n\nSummary:\n[Folly] Unsafe pre-sorted construction for sorted-vector containers.\n\nIf the backing container type can be constructed directly in sorted order or can be determined in advance to be in sorted order, then a special constructor can help code take advantage of this condition by avoiding an extra invocation of `std::sort`.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6708379\n\nfbshipit-source-id: 25d886b0814dc9230c6046ed1e7f199fac47754e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "meyering": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/492fad43a76506407008a5394511daf6bba5bccc", "message": "define SKIP_IF\n\nSummary:\nFinding ourselves writing too many identical \"if (expr) SKIP << ...\" statements,\nthis change factors out/encapsulates the functionality.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6727531\n\nfbshipit-source-id: 703abcd5d8c30a6ebab94327a12da4f2d1f7ff74"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleivag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/d7b6ad4972b288f90bf57d7597103c44c244decd", "message": "allow command to accept \"--\" separator\n\nSummary:\nCurrently NestedCommandLineApp does not support `--` to indicate that the following arguments should be parsed as arguments, not nested commands or options.\nThis diff fix that by whitelisting any argument given after \"--\"\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6721144\n\nfbshipit-source-id: 38a850b6ea803dc758c5fe65a21575e5faeac35b"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidtgoldblatt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/98d1077ce0603b0713353d638cb1436a28827af6", "message": "Add Tearable, for concurrently-modified non-atomic objects.\n\nSummary:\nThis adds the Tearable class template, which holds storage for an\narbitrarily-sized object that can be concurrently read or written without any\nexternal synchronization.\n\nReviewed By: yfeldblum, djwatson\n\nDifferential Revision: D6422334\n\nfbshipit-source-id: ee3853bbd393ac8e30dca6439c61606cc5495f92"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "flarnie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/719", "title": "Add `CONTRIBUTING` and `CODE_OF_CONDUCT`", "body": "Hi! I noticed this repo could use some documentation to help new contributors.\r\n\r\n\r\n\r\n**why make this change?:**\r\nRegarding the `CONTRIBUTING.md` -> Including instructions for new contributors to open source is a courtesy that will foster a welcoming and safe open source community at Facebook.\r\n\r\nRegarding the Code of Conduct ->\r\n\r\nFacebook Open Source provides a Code of Conduct statement for all\r\nprojects to follow, to promote a welcoming and safe open source community.\r\n\r\nExposing the COC via a separate markdown file is a standard being\r\npromoted by Github via the Community Profile in order to meet their Open\r\nSource Guide's recommended community standards.\r\n\r\nAs you can see, adding this file will improve [the folly community profile](https://github.com/facebook/folly/community)\r\nchecklist and increase the visibility of our COC.\r\n\r\n**test plan:**\r\nViewing it on my branch -\r\n<img width=\"1014\" alt=\"screen shot 2017-12-03 at 4 10 05 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531641-cd914672-d844-11e7-8e27-4368c85fb5cd.png\">\r\n<img width=\"1006\" alt=\"screen shot 2017-12-03 at 4 10 14 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531642-cda91450-d844-11e7-97fd-513961779e91.png\">\r\n\r\n**issue:**\r\ninternal task t23481323", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "badarihp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/710", "title": "Added addFuture function , which accepts function, expiry time, expir\u2026", "body": "Added new function addFuture which can accept a function, expiry time, and expiry callback function.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dryganets": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/653", "title": "Handle 4-byte unicode code points.", "body": "https://github.com/facebook/folly/pull/640\r\nreworked to have a surrogate check for the 4th symbol.\r\n\r\nWe need it for react-native to make sure that invalid symbols will be correctly skipped in case somebody passes a corrupted string to javascript core.\r\n\r\nNeeds to be backported to 2016.09.26.00 to fix the following issue in react-native:\r\n#10756\r\n```\r\nFatal Exception: java.lang.RuntimeException: Failed to create String from JSON\r\n       at com.facebook.react.bridge.queue.NativeRunnable.run(NativeRunnable.java)\r\n       at android.os.Handler.handleCallback(Handler.java:739)\r\n       at android.os.Handler.dispatchMessage(Handler.java:95)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:31)\r\n       at android.os.Looper.loop(Looper.java:234)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadImpl$3.run(MessageQueueThreadImpl.java:193)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "choeger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/640", "title": "Handle 4-byte unicode code points", "body": "fixes #632\r\n\r\nSigned-off-by: Christoph H\u00f6ger <christoph.hoeger@celeraone.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yeolar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/619", "title": "fixtypo", "body": "Miss putMessages test at folly/io/async/test/NotificationQueueTest.cpp", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petr-tik": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/618", "title": "Hyphen typos", "body": "Removed spaces after some hyphens inside compound words", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tedjp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/554", "title": "IOStreamBuf (istream/basic_streambuf adaptor for IOBuf)", "body": "Allows chained `IOBuf`s to be read via `std::istream` without having to coalesce them into a single contiguous buffer first.\r\n\r\nWorks with any single-byte type, eg. `char` or `uint8_t`. Not currently usable on multi-byte types like `wchar_t` due to the extra complexity involved in recomposing multi-byte characters that are split across `IOBuf` boundaries. (`static_assert` prevents use with multi-byte types.)\r\n\r\nCurrently read-only; cannot be used with a `std::ostream`.\r\n\r\nDepends the `io/test/Makefile.am` changes in #550. I've included the two necessary commits in this pull request. Happy to resubmit this after #550 completes review if that's preferred.\r\n\r\nThere are probably good performance reasons to avoid using this in general \u2014 and perhaps that should be noted in the header \u2014 but it could be useful in conjunction with APIs that can read from an `istream`. My use for this was with Proxygen: passing an incoming message body (chained `IOBuf`) to a 3rd party API.\r\n\r\nThe use of a `.tcc` file for the implementation of most of the templated functions is unusual for Folly but I wanted to keep them out of the general header. It could easily be renamed to `\u2026-impl.h` or whatever the preferred style is.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brunomorishita": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/425", "title": "Remove dependency from boost class noncopyable", "body": "With explicitly deleted member functions in C++11 the boost class noncopyable is not needed anymore\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fabbree": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/399", "title": "Fix for HHWheelTimer assert-fails when destroy() happens after cancel\u2026", "body": "\u2026All() #397\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rigtorp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/378", "title": "Add memory padding and alignment to prevent false sharing", "body": "Ensure no thirdparty thread writes to a cacheline shared by our ringbuffer, readIndex and writeIndex.\nEnsure readIndex and writeIndex are located on different cachelines.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmbeard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/351", "title": "Allow clients of FBVector to customize the growth strategy", "body": "As per the suggestion in the comments of `FBVector.h`, I've added the ability to customize the growth strategy using the `fbvector`'s allocator. If the allocator used implements a non-static member function of type `size_type calculate_capacity(size_type) const` then this will be called in every case where the `fbvector` instance needs to grow. E.g. to use an `N+1` strategy the allocator would look something like...\n\n``` c++\ntemplate<typename T>\nstruct growth_policy_allocator\n{\n  typedef T value_type;\n\n  T* allocate(size_t n)\n  {\n    ...\n  }\n\n  void deallocate(void *p, size_t n)\n  {\n    ...\n  }\n\n  size_t calculate_capacity(size_t current) const // const is required\n  {\n    return current + 1;\n  }\n};\n```\n\nIf the allocate doesn't implement `calculate_capacity` then `fbvector` falls back to its default growth strategy.\n\nI've also added a simple test case for this feature. Compiles and passes on Ubuntu 14.04\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hincoin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/326", "title": "Change memory_order_consume to relaxed in ProducerConsumerQueue", "body": "A few of the functions within ProducerConsumerQueue use `std::memory_order_consume` to load from shared variables, but the consume guarantees aren't used since there's no earlier data dependencies on these variables that need to be propagated. Changing these loads to `std::memory_order_relaxed` offers the same guarantees that are needed for these functions and, under current compiler support, avoids the promotion to `std::memory_order_acquire`. \n\nRelevant post on the [Google group](https://groups.google.com/d/msg/facebook-folly/eGb5gGudGtc/nmBNLFVaJQAJ).\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeanRBurton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/324", "title": "Check for overflow when growing Vectors.", "body": "I don't know if this works, but it is at least in the spirit of the right idea.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975", "body": "Read the files in the folly/docs directory. They are markdown text files, so it's probably simpler to start reading them right here on github.\nThe sources files are also documented. And of course, the test files contain valuable info.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisaycock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471", "body": "I agree with @dribeas. \"Standard Library\" is the correct term.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902", "body": "@tudor Glad I could be of help!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436", "body": "Ok, Standart Library if good enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "avatasia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736", "body": "Why not use STL or Boost, so there is too much programmer in Facebook?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdelong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905", "body": "Merged upstream and pushed\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130", "body": "Thanks; f0ced414840d5c29e6ced3466004dc1a122b51c1\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190", "body": "Thanks; I merged it upstream (so it'll be pushed back out in the next push).\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250", "body": "Thanks for the suggestion.  For now I just added a link to the overview doc to the wiki page.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304", "body": "Just pushed a near-rewrite of FBVector.  Looks like the new assign() no longer has this bug; thanks for reporting it, though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336", "body": "Sorry for the delay asl.  I'm merging these into our local repo now (a couple of them have been fixed already).  They'll be back out in the next public push.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tudor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508", "body": "fixed in 050c1c3d52e4df860911235ac894291b2c089e59\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373", "body": "Merged manually, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390", "body": "The comment is correct. \"iff\" means \"if and only if\", see http://en.wikipedia.org/wiki/If_and_only_if\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835", "body": "Thanks for the comment. I'll be closing this issue because the issue tracker is meant for specific problems with the code.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271", "body": "Yes it does.  Making folly portable outside of gcc 4.6+, Linux x86_64 has never been an explicit goal.  We would welcome patches, though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520", "body": "@asl Before we can accept your changes, you'll have to sign the Facebook Contributor License Agreement: https://developers.facebook.com/opensource/cla\n\nThanks!\n-Tudor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169", "body": "We'll take a look, thanks for letting us know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903", "body": "Did u even took a read on readme files or code itself before saying that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewjcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592", "body": "Thanks for reporting this!  Fixed in 9c2924258bee193d267f85e598ea5abf72cb267f.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641", "body": "We currently don't test/build on OpenSuse, so its not surprising that there are some issues.  I'll look to get an install of this working shortly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "syntheticpp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611", "body": "obsolete\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "asl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398", "body": "Fix for Portability.h is simple:\n\n```\ndiff --git a/folly/Portability.h b/folly/Portability.h\nindex 6d373a2..a9e8d32 100644\n--- a/folly/Portability.h\n+++ b/folly/Portability.h\n@@ -33,7 +33,11 @@\n #undef FOLLY_FINAL\n #undef FOLLY_OVERRIDE\n\n-#ifdef __GNUC__\n+#if defined(__clang__)\n+#  define FOLLY_FINAL final\n+#  define FOLLY_OVERRIDE override\n+#elif defined(__GNUC__)\n+# include <features.h>\n # if __GNUC_PREREQ(4,7)\n #  define FOLLY_FINAL final\n #  define FOLLY_OVERRIDE override\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443", "body": "(sorry, no pull request, I have heavily hacked tree around)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498", "body": "But will provide some fixes soon :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andralex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038", "body": "Thanks! We'll look into this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055", "body": "... and good to see you again, Christian :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Gownta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370", "body": "If you change ALL such functions in folly, that would be an impactful change.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Orvid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356", "body": "This doesn't quite seem right. Shouldn't it be the other way around?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413", "body": "This should be `#if defined(FOLLY_X64)`, which is what normally wraps the pause calls.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254", "body": "If this weren't in the C portability header, that would be true, but, as it is in the C portability header, I have kept the file compilable as C. I could do an `#ifdef` for C++ for that though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884", "body": "`FindClose` is indeed what I want, as this is closing the find handle, not a normal handle.\n\nThis returns an int because the standard `closedir` API returns an int. I've added a check for errors on the `FindClose` call, but I won't be marking the function for analysis, as this is intended as a functional portability mechanism, not an extensive API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726", "body": "I can certainly do that. My goal with the port was to make as few changes as possible to the code that effects more than just MSVC, which is why I only enabled it for MSVC at the moment.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701", "body": "Yes, it is. Looks like it happened when I was extracting the changes into separate PRs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429", "body": "This is the most permissive license of a proper implementation of this that I could find. It should be the same as the rest of the file, unless I missed something? Re-implementing it is possible, as trying to work around not having it will be more of a pain, as it's used in a few spots in HHVM.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264", "body": "RTM is the release version, it isn't  a prerelease, but there is a good chance that these will be fixed in an update, which is why these are set to go away when the update is released. This is basically future-proofing, as the eventual goal is to remove them completely. \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jwatzman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160", "body": "Why not\n\n``` cpp\n    int64_t timeSinceLastAccept = std::max<int64_t>(\n       0,\n       nowMs.time_since_epoch().count() -\n       lastAccepTimestamp_.time_since_epoch().count());\n```\n\nEspecially since we're already assigning this to an `int64_t` result? It seems a lot shorter and cleaner than this large `decltype`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sgolemon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382", "body": "Comment from internal reviewer:\n\nnot every Container supports emplace_back, this change broke a project build (Container == folly::TypedIOBuf<>)\n\ncode using Container = strings::TypedBuffer is also affected\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193", "body": "This broke folly builds on our internal CI, but I think I came up with something suitable for both clang and us\n\n```\ntemplate <typename T> struct iterator_class_is_container {\n  typedef std::reverse_iterator<typename T::iterator> some_iterator;\n  enum { value = has_value_type<T>::value &&\n              std::is_constructible<T, some_iterator, some_iterator>::value };\n};\n\ntemplate <typename T> struct class_is_container\n  : std::conditional<\n      has_iterator<T>::value,\n      iterator_class_is_container<T>,\n      std::false_type\n    >::type {};\n```\n\nA diff containing this is currently up for review as D2170803\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805", "body": "Why not just always use the constexpr values and avoid the #ifdefs?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935", "body": "Maybe reduce this assertion to just:\n\n```\n  ~AtomicLinkedList() {\n    assert(empty());\n  }\n```\n\nAnd avoid duplicating the logic and the ifdefs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508", "body": "Unfortunately, we can't take this.  Could you come up with another approach, or an implementation from a more permissive license?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207", "body": "Shouldn't this be `!defined(_MSC_VER)` ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422", "body": "`uint16_6` looks like a typo, can you confirm that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544", "body": "' provides thousands separation.  So I would say the very least would be something along the lines of:\n\n```\n#ifdef FOLLY_NO_PRINTF_GROUPING\n  \"%ju\",\n#else\n  \"%'ju\",\n#endif\n  static_cast<uintmax_t>(uval));\n```\n\nAnd add a configure check to conditionally set that define.\n\nBetter would be to implement a thousands separating output for non-gnu platforms, but that's a bit more work.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443", "body": "How concerned do we need to be about checking for which pre-relesae we're working with?\nSeems like we can just assume \"MSVC 2015 Latest\" until final comes out.\n\nCan we kill this check and assume the two defines below are just not set?\nMakes the code a lot simpler if so.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ariccio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469", "body": "Since this is for Windows, you might as well annotate `s` with `_Pre_writable_size_(n)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081", "body": "Actually, you might as well go ahead and declare it like this for maximum static analysis effectiveness:\n\n```\n_At_buffer_(s, _Iter_, n, _Post_satisfies_(s[_Iter_] == 0))\nInline void bzero(  _Pre_writable_size_(n) _Out_ void* s, size_t n )\n\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236", "body": "You shouldn't need to explicitly specify the buffer size,  because [Secure Template Overloads](https://msdn.microsoft.com/en-us/library/ms175759.aspx) allow for [template parameter inference](https://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/), which is pretty cool.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309", "body": "`buf` should be `_Out_writes_z_(64)`, and the return value should be `_Ret_writes_maybenull_z_(64)`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824", "body": "Should be `_Field_range_(DT_UNKNOWN, DT_LNK)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904", "body": "`_Field_z_`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281", "body": "Protip : Mark it `_Post_ptr_invalid_` and you'll be able to detect use-after-free and double free bugs.\n\nMarking the function `_At_(dir->hand, _Post_ptr_invalid_)` will do the same for double handle closes.\n\nIs `FindClose` what you wanted to use here, or is it `CloseHandle`?\n\nAlso, why does this return an `int`, if it doesn't check any return values?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513", "body": "Mark `fmt` as `_Printf_format_string_` for format string error detection!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827", "body": "Mark the function as `_Success_( return == 0 )` and `dst` as `_Out_` to detect uninit memory usage.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663", "body": "Fair enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}, "4": {"JohnSmithyy": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/738", "title": "make check failed", "body": "```\r\nMakefile:1797: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2950: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2163: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/home/ashazar/folly/folly/test'\r\nMakefile:2316: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n\r\nAnyone have a solution to this?\r\n\r\nI'm running Ubuntu 16.04. ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maikel": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/737", "title": "Poly does not work with noexcept methods", "body": "The `folly/Poly.md` document does not mention `noexcept` at all. Consider this example\r\n\r\n```\r\n#include <folly/Poly.h>\r\n#include <iostream>\r\n\r\nstruct IDrawable {\r\n  template <typename Base> struct Interface : Base {\r\n    void draw(std::ostream& out) const /* noexcept */ {\r\n      folly::poly_call<0>(*this, out);\r\n    }\r\n  };\r\n\r\n  template <typename T> using Members = folly::PolyMembers<&T::draw>;\r\n};\r\n\r\nstruct Circle {\r\n  void draw(std::ostream& out) const /* noexcept */ { out << \"Cirlce.\\n\"; }\r\n};\r\n\r\nusing Drawable = folly::Poly<IDrawable>;\r\n\r\nint main() {\r\n  Drawable obj = Circle{};\r\n  obj.draw(std::cout);\r\n}\r\n```\r\n\r\nUncommenting any `noexcept` breaks on my machine (using clang from 2017-11-25 and folly from 2017-12-25)\r\n\r\nI attached the error message for uncommenting `Circle::draw`'s  `noexcept` specifier.\r\n\r\n[error.log](https://github.com/facebook/folly/files/1639659/error.log)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TomGarden": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/735", "title": "folly/folly/experimental/logging/example/main.cpp", "body": "#  log moudle don't work\r\nResently I want use folly's logging moudle.\r\nBut it don't work well.\r\nCompile no problem\u3002\r\n## compile cmd\r\nsources path : https://github.com/facebook/folly/blob/master/folly/experimental/logging/example/main.cpp\r\n```\r\n$ g++ main.c lib.cpp -std=c++14 -o testMain -lfollylogging -lfolly -ldouble-conversion -lglog -lgflags\r\n```\r\n\r\nI don't find any log from function `XLOG()`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZaMaZaN4iK": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/734", "title": "Conan package for Folly", "body": "Hello,\r\nDo you know about [Conan](https://github.com/conan-io/conan)?\r\n[Conan](http://docs.conan.io/en/latest/) is modern dependency manager for C++. And will be great if your library will be available via package manager for other developers.\r\n\r\n[Here](https://github.com/bincrafters/conan-templates) you can find example, how you can create package for the library. \r\n\r\nIf you have any questions, just ask :-)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mkudrnac": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/732", "title": "One little goto \ud83e\udd96", "body": "https://github.com/facebook/folly/blob/e7f26d60480810d6c2b724130e35761d75af33fc/folly/String.cpp#L47\r\n\r\n![main-qimg-ed4254c72d3c84c43bef0d32b7ff4172](https://user-images.githubusercontent.com/12230741/34783624-5d2f7bfa-f62c-11e7-9691-5afb55ce78c3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MacroKnow": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/730", "title": "My system time is wrong ,when I make it,it endless loop.", "body": "eg:my system time is  Thurs Jan  5 20:36:04 CST 2017 ,and I preparing install version is v2018.01.01.00 .\r\nautoreconf -ivf \r\n./configure\r\nmake \r\n\r\nthen endless loop\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suspend0": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/728", "title": "Thanks & Happy New Year!", "body": "All folly committers:\r\n\r\nThank you for releasing and maintaining this library. We use a ton of this code. Personally, I have learned a lot by reading it. The effort that goes into the code itself, as well as the management of this OSS project, communication, and issue handling is all top notch and very much appreciated.\r\n\r\nThanks!\r\nDarren.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shadowwalker2718": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/725", "title": "`make check` failed", "body": "```\r\nmake[3]: Entering directory '/opt/share/folly/folly/test'\r\nmake[3]: 'libfollytestmain.la' is up to date.\r\nmake[3]: 'libgtest.la' is up to date.\r\nmake[3]: 'foreach_benchmark' is up to date.\r\nmake[3]: 'benchmark_test' is up to date.\r\nmake[3]: 'concurrent_skiplist_benchmark' is up to date.\r\nmake[3]: 'conv_benchmark' is up to date.\r\nmake[3]: 'sorted_vector_types_test' is up to date.\r\nmake[3]: 'foreach_test' is up to date.\r\nmake[3]: 'hash_test' is up to date.\r\nmake[3]: 'timeout_queue_test' is up to date.\r\nmake[3]: 'conv_test' is up to date.\r\nmake[3]: 'expected_test' is up to date.\r\n/bin/bash ../libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o range_test RangeTest.o libfollytestmain.la -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags \r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o .libs/range_test RangeTest.o  ./.libs/libfollytestmain.a /opt/share/folly/folly/init/.libs/libfollyinit.so /opt/share/folly/folly/.libs/libfolly.so -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -lbz2 -llzma -lz -lsnappy -llz4 -ldl -levent -ldouble-conversion -lglog -lgflags\r\nRangeTest.o: In function `testing::IsEmptyMatcher::gmock_Impl<folly::Range<int const*> const&>::FormatDescription[abi:cxx11](bool) const':\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\n/opt/share/folly/folly/test/gtest/googlemock/include/gmock/gmock-more-matchers.h:48: undefined reference to `testing::internal::FormatMatcherDescription(bool, char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1770: recipe for target 'range_test' failed\r\nmake[3]: *** [range_test] Error 1\r\nmake[3]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2911: recipe for target 'check-am' failed\r\nmake[2]: *** [check-am] Error 2\r\nmake[2]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2131: recipe for target 'check-recursive' failed\r\nmake[1]: *** [check-recursive] Error 1\r\nmake[1]: Leaving directory '/opt/share/folly/folly/test'\r\nMakefile:2302: recipe for target 'check-recursive' failed\r\nmake: *** [check-recursive] Error 1\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vxider": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/711", "title": "Disable test", "body": "Hi,\r\n    I'am trying to cross compile folly to other platform, how can I disable test in `configure`?\r\nHere is my error:\r\n```\r\n./configure --enable-static --disable-shared --with-PACKAGE=MPMCQueue --with-boost=/home/vxider/local/boost --host=x86_64 \r\n\r\n...\r\nconfigure: error: cannot run test program while cross compiling\r\nSee `config.log' for more details\r\n...\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RcRonco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/700", "title": "Compression namespace", "body": "Hi,\r\nWhen compression moved from ```io``` to its own folder the namespace still stayed ```folly::io```, which is quite confusing.\r\nMaybe it should be in its own namespace or in the ```folly``` namespace, or even return the ```compression``` into ```io``` folder.\r\n\r\nIn compression [Utils.h](https://github.com/facebook/folly/blob/master/folly/compression/Utils.h#L30) the namespace ```folly::io::compression``` exists, refactoring the namespaces of the compression folder will make it more consistent, I don`t mind to do it.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tlanwairen123": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/699", "title": "folly configure checking whether the Boost::Context library is available... no", "body": "i try build the folly. there have an error for configure for checking whether the Boost::Context library is available... no\r\nI have install boost and boost_context\uff0chow can i Solve the problem\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yangxingpping": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/698", "title": "win ProducerConsumerQueue", "body": "Installing from vcpkg. Compiling failed when I am try to run ProducerConsumerQueue,with error C2327,C2065. folly::ProducerConsumerQueue<int>::writeIndex is not type name, nor enum.\r\nwriteIndex_ is not declared. It seems like vc++ does not support assign array size with sizeof(writeIndex_).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "newpoo": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/696", "title": "Can we add a callback parameter to IOBuf::wrapBuffer()?", "body": "IOBuf can inform clients when there is no any IOBuf objects refer to the buffer?\r\nSo clients know that it's safe to release the buffer now.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "conqer": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/694", "title": "Streaming Promise", "body": "Would it make sense to create a construct StreamingPromise that can `setValue` multiple times? The use case is that when the call site is something like:\r\n\r\n`\r\nserviceProxy.getResponse().then([](const ResponsePart&  response)\r\n{\r\n    //  Do something with partial response\r\n});\r\n\r\n`\r\n\r\nIt would be great to have the `ServiceProxy::getResponse` return a `Future` that can be set multiple times by the `Promise` that was created the first time it was called.\r\n\r\nIs this the limitation of the Future/Promise paradigm or would it be a good idea to support something like 'StreamingPromise' ?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kelu27": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/690", "title": "Undefined reference", "body": "I'm building folly for mcrouter on ubuntu:16.04:\r\nHere is my error with your last commit https://github.com/facebook/folly/commit/69d97159209c5a77fdf7805155738604233d0b8a:\r\n\r\n`folly/folly/.libs/libfolly.so: undefined reference to folly::AsyncSocketException::getMessage(folly::AsyncSocketException::AsyncSocketExceptionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'`", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guodongxiaren": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/687", "title": "dyld: Library not loaded: libboost_context.dylib", "body": "./generate_fingerprint_tables\r\ndyld: Library not loaded: libboost_context.dylib\r\n  Referenced from: /Users/jelly/Documents/Source/folly/folly/./generate_fingerprint_tables\r\n  Reason: image not found\r\nmake[2]: *** [FingerprintTables.cpp] Trace/BPT trap: 5\r\nmake[1]: *** [all-recursive] Error 1\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samdasnake": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/684", "title": "Error with 'libfollybenchmark.la' during make", "body": "I am receiving the following error when I run `make install` to install folly.  I am running Ubuntu 16.04.  Here are the error messages I receive.\r\n`/usr/bin/ld: /usr/local/lib/libdouble-conversion.a(double-conversion.cc.o): relocation R_X86_64_32 against '.bss' can not be used when making a shared object; recompile with -fPIC\r\n/usr/local/lib/libdouble-conversion.a: error adding symbols: Bad value\r\ncollect2: error: ld returned 1 exit status\r\nlibtool:   **_error: error: relink 'libfollybenchmark.la' with the above command before installing it_**\r\nMakefile:1316: recipe for target 'install-libLTLIBRARIES' failed\r\nmake[2]: *** [install-libLTLIBRARIES] Error 1`\r\n\r\nI have tried to install folly directly as well as with the fblualib install_all.sh script.  In both cases I received this same error message.  Does anyone know how I can resolve this issue?  Thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/684/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrch2k10": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/682", "title": "MPMCQueue.h is broken on Xcode 9 and Archlinux GCC 7/Clang 6 and maybe other", "body": "Hi, guys\r\n\r\nI've been trying to use folly and wangle  but MPMCQueue.h fail to compile on any compiler I've tried so far.\r\n\r\nArchLinux Gcc 7 and Clang 5/6\r\nMacOS 10.13 + Xcode 9\r\n\r\nI'm missing something or is a known issue?\r\n\r\nBtw there is no code in that file just the basic includes from one of the examples\r\n\r\nTyVM for your time\r\n```\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/src/asyncserver.cpp:1:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncserver.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/asyncsocketclient.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/Threadpool.hpp:4:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/PentaProto/include/libpentaprotocol_global.hpp:100:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/ExecutorFilter.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/service/Service.h:22:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/bootstrap/ServerBootstrap-inl.h:27:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/wangle/concurrent/IOThreadPoolExecutor.h:19:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/IOThreadPoolExecutor.h:20:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/ThreadPoolExecutor.h:23:\r\nIn file included from /Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/executors/LifoSemMPMCQueue.h:20:\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:269:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:275:58: error: expected expression\r\n      while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                         ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:278:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:279:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:286:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:299:53: error: expected expression\r\n    this->enqueueWithTicketBase(ticket-offset, slots, cap, stride,\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:305:16: error: expected unqualified-id\r\n    Slot* slots;\r\n               ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:310:56: error: expected expression\r\n    while (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                       ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:315:55: error: expected expression\r\n    maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:316:53: error: expected expression\r\n    this->dequeueWithTicketBase(ticket-offset, slots, cap, stride, elem);\r\n                                                    ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:352:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:359:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:360:28: error: expected ',' or ']' in lambda capture list\r\n      if (LIKELY(slots[this->idx((ticket - offset), cap, stride)].mayEnqueue(\r\n                           ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:390:29: error: use of undeclared identifier 'head'\r\n      auto avail = std::max(head, offset) + cap;\r\n                            ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:418:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:425:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:449:47: error: expected expression\r\n        if (trySeqlockReadSection(state, slots, cap, stride)) {\r\n                                              ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:454:57: error: expected expression\r\n      maybeUpdateFromClosed(state, ticket, offset, slots, cap, stride);\r\n                                                        ^\r\n/Users/junior/Desarrollo/PentaSoftAdvancedCommPlatform/Apple/include/folly/MPMCQueue.h:466:55: error: expected expression\r\n      if (UNLIKELY(!trySeqlockReadSection(state, slots, cap, stride))) {\r\n                                                      ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n2 warnings and 20 errors generated.\r\nmake[2]: *** [CMakeFiles/PentaProtocolServer.dir/PentaProto/src/asyncserver.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/PentaProtocolServer.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "capsocrates": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/679", "title": "asm command does not compile in MSVC", "body": "This code\r\n[`    asm volatile(\"\" ::\"m\"(ptr) : \"memory\");`](https://github.com/facebook/folly/blob/94b8816bbdca38914030842554cc955caee59063/folly/Malloc.h#L193)\r\nIntroduced in [this commit](https://github.com/facebook/folly/commit/610c11630a3cbccdc2be0a91b5a6c2f934af3f55) does not compile in MSVC.\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArntWork": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/678", "title": "Readme.md wrong for Linking non-default boost libraries?", "body": "The instructions say ./configure --with-boost=$BOOST_ROOT/lib but while trying it on ubuntu 16.04 with latest boost,  we needed ./configure --with-boost=$BOOST_ROOT  (so without the /lib at the end). With /lib it says it cannot find a version of boost context.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KindDragon": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/677", "title": "Issues with Visual C++ compiler", "body": "- [x] [folly/Malloc.h(193)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/Malloc.h#L193): error C2059: syntax error: 'volatile'  PR #688\r\n- [x] [folly/detail/Crc32cDetail.cpp(208)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/detail/Crc32cDetail.cpp#L208): [fatal error C1009: compiler limit: macros nested too deeply](https://github.com/facebook/folly/commit/74102328f60e450de7d1dab40d1772f82549fd96#commitcomment-23423375)\r\n- [x] [folly/executors/NamedThreadFactory.h(38)](https://github.com/facebook/folly/blob/271977282fe30d3c351b5e8a6f1692d743996ed1/folly/executors/NamedThreadFactory.h#L37-L38): error C2665: 'folly::setThreadName': none of the 2 overloads could convert all the argument types\r\n- [x] folly can't link with static libraries https://gist.github.com/KindDragon/c4e6414bd60242d317bb0387a82dce61#file-package-x64-windows-static-rel-out-log-L2291 PR #693\r\n- [x] [folly/futures/Future-inl.h(242)](https://github.com/facebook/folly/blob/fbc4c23895b0ee3874d9a36401d580a2a8957ba9/folly/futures/Future-inl.h#L242): error C2244: 'folly::SemiFuture<T>::SemiFuture': unable to match function definition to an existing declaration\r\n- [x] [folly/io/async/AsyncSocket.cpp(1589)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/io/async/AsyncSocket.cpp#L1589): error C2039: 'Control': is not a member of 'msghdr'. Win10 SDK define MSG_ERRQUEUE too https://naughter.wordpress.com/2017/07/16/changes-in-the-windows-v10-0-16232-sdk-compared-to-windows-v10-0-15063-sdk-part-one/ PR #689\r\n- [x] [folly/io/async/AsyncSocket.cpp(939)](https://github.com/facebook/folly/blob/master/folly/io/async/AsyncSocket.cpp#L937-L946): error C2065: 'SOL_IP': undeclared identifier\r\n- [x] [folly/stats/Histogram.cpp(43)](https://github.com/facebook/folly/blob/1b0dfd663244c1d743052072a507f1b9e1f88d05/folly/stats/Histogram.cpp#L38-L43): error C5037: 'folly::detail::HistogramBuckets<__int64,folly::detail::Bucket<T>>::getPercentileBucketIdx': an out-of-line definition of a member of a class template cannot have default arguments with [T=int64_t] MSVC 2017U4 PR #691\r\n- [x] [folly/synchronization/CallOnce.h(86)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/synchronization/CallOnce.h#L86): error C2988: unrecognizable template declaration/definition. CallOnce.h(98): note: see reference to class template instantiation 'folly::detail::once_flag<Mutex>' being compiled https://github.com/facebook/folly/commit/b529367b595dd4da7e70569cbea36d30ace4fa39#commitcomment-25665382\r\n- [x] [folly\\Random.cpp(43)](https://github.com/facebook/folly/blob/a447cb9ebc32100b18c0e3fc75bf5882db4857e3/folly/Random.cpp#L43): error C2672: 'folly::detail::once_flag<folly::SharedMutex>::{dtor}': no matching overloaded function found\r\n\r\n/cc @Orvid ", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "smellyfis": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/671", "title": "folly v2017.09.11.00 does not pick up libunwind reference", "body": "I am using Gentoo and am trying to build an updated folly ebuild (installation stuff) and autotools did not put in the -lunwind for the linker and I got several unrecognized symbols related. when I added \"-lunwind\" to every libfolly*_LDFLAGS I was able to link properly. I do not generally use autotools so I don't know where it is needed to be placed to pick up that flag dynamically, but i see there is something checking for it in configure.ac.", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "navidR": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/669", "title": "Change default build system to CMake", "body": "Considering how it is easy to build applications and libraries using CMake, I created this issue to track this problem of \"when CMake will be available for *nix (and all other) platforms?\"\r\n\r\nRight now CMake support is only available on Windows platform.\r\n\r\nLet me give you an instance, I am building a complex Android application. Most of the networking and file system (while being multi threaded) logic is in NDK and I am using 8,9 different library. Compiling those libraries with Autotools is just like hell (therefore it is totally okay to call it Autohell). But just look at this link and see how it is easy to compile C++ project for NDK : \r\nhttps://developer.android.com/ndk/guides/standalone_toolchain.html\r\n\r\nIf you are not familiar with programming in NDK, I have to say compiling and setting up toolchain and required stuff is way complicated than your actual project (figure of speech), while with CMake and CMake support from Google, it is just adding two or three flags and then compiling your library to whatever arch and API level you are targeting. Folly and Wangle are very useful libraries. The only barrier for me to migrate our company C++/NDK to Folly is Autotools (consider how difficult it is to set up continuous integration for NDK and Autotools).", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/669/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D-PorcoRosso": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/667", "title": "Fatal signal 6 (SIGABRT)", "body": "Hi:\r\n\r\nI wrote my jni library and integrated prebuild OpenSSL 1.0.2j to verify files signature correctness.\r\n\r\n\bAnd I exploded my jni library (as an aar file) into application project which used react-native, and run application, the native crash happened.\r\n\r\nCrash log as following text, do you have any idea about this crash?\r\n\r\nA/ReactNativeJNI: Check failed: 0 \r\n                                                                      \r\n--------- beginning of crash\r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13774 (FinalizerDaemon)\r\n                                                            \r\n                                                            [ 08-29 16:23:49.846   571:  571 W/         ]\r\n                                                            debuggerd: handling request: pid=13763 uid=10288 gid=10288 tid=13774\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Build fingerprint: 'google/sailfish/sailfish:7.1.2/NJH47F/4146041:user/release-keys'\r\n08-29 16:23:50.000 14901-14901/? A/DEBUG: Revision: '0'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: ABI: 'arm'\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: pid: 13763, tid: 13774, name: FinalizerDaemon  >>> com.xxxxxxxxx.xxxxxxxxx <<<\r\n08-29 16:23:50.001 14901-14901/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG: Abort message: 'Check failed: 0 '\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r0 00000000  r1 000035ce  r2 00000006  r3 00000008\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r4 eb31f978  r5 00000006  r6 eb31f920  r7 0000010c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     r8 d1840e18  r9 d183e17e  sl 59a52495  fp d184ff7c\r\n08-29 16:23:50.039 14901-14901/? A/DEBUG:     ip 0000000b  sp eb31f250  lr edfa05c7  pc edfa2e30  cpsr 600f0010\r\n08-29 16:23:50.061 14901-14901/? A/DEBUG: backtrace:\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #00 pc 00049e30  /system/lib/libc.so (tgkill+12)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #01 pc 000475c3  /system/lib/libc.so (pthread_kill+34)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #02 pc 0001d635  /system/lib/libc.so (raise+10)\r\n08-29 16:23:50.062 14901-14901/? A/DEBUG:     #03 pc 00019181  /system/lib/libc.so (__libc_android_abort+34)\r\n08-29 16:23:50.063 14901-14901/? A/DEBUG:     #04 pc 00017048  /system/lib/libc.so (abort+4)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #05 pc 0000864b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #06 pc 00009a63  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage4FailEv+10)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #07 pc 0000bd47  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage9SendToLogEv+246)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #08 pc 00009897  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google10LogMessage5FlushEv+102)\r\n08-29 16:23:50.064 14901-14901/? A/DEBUG:     #09 pc 0000bf7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libglog.so (_ZN6google15LogMessageFatalD2Ev+2)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #10 pc 000108dd  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+88)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #11 pc 00010863  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt12_Destroy_auxILb0EE9__destroyIPN5folly7dynamicEEEvT_S5_+16)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #12 pc 00010873  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZNSt6vectorIN5folly7dynamicESaIS1_EED2Ev+8)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #13 pc 000108a3  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfolly_json.so (_ZN5folly7dynamic7destroyEv+30)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #14 pc 0003256f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #15 pc 00032907  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #16 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #17 pc 00032981  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #18 pc 00032a99  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #19 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #20 pc 0001e009  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #21 pc 0001df6b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so (_ZNSt14_Function_baseD2Ev+12)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #22 pc 0001df7f  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #23 pc 0001df9d  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libreactnativejnifb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #24 pc 0000afed  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so (_ZN8facebook3jni6detail10HybridData16setNativePointerESt10unique_ptrINS1_15BaseHybridClassESt14default_deleteIS4_EE+112)\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #25 pc 0000b05b  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/lib/arm/libfb.so\r\n08-29 16:23:50.065 14901-14901/? A/DEBUG:     #26 pc 00a9a657  /data/app/com.xxxxxxxxx.xxxxxxxxx-1/oat/arm/base.odex (offset 0xa30000)", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "4a616d6573205265696c6c79": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/666", "title": "Folly fails to compile with redefinition error", "body": "Configure/Make output:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ autoreconf -ivf && ./configure\r\nautoreconf: Entering directory `.'\r\nautoreconf: configure.ac: not using Gettext\r\nautoreconf: running: aclocal --force -I m4\r\nautoreconf: configure.ac: tracing\r\nautoreconf: running: libtoolize --copy --force\r\nlibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\r\nlibtoolize: copying file 'build-aux/ltmain.sh'\r\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\r\nlibtoolize: copying file 'm4/libtool.m4'\r\nlibtoolize: copying file 'm4/ltoptions.m4'\r\nlibtoolize: copying file 'm4/ltsugar.m4'\r\nlibtoolize: copying file 'm4/ltversion.m4'\r\nlibtoolize: copying file 'm4/lt~obsolete.m4'\r\nautoreconf: running: /usr/bin/autoconf --force\r\nautoreconf: running: /usr/bin/autoheader --force\r\nautoreconf: running: automake --add-missing --copy --force-missing\r\nconfigure.ac:32: installing 'build-aux/compile'\r\nconfigure.ac:27: installing 'build-aux/missing'\r\nMakefile.am: installing 'build-aux/depcomp'\r\nautoreconf: Leaving directory `.'\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\r\nchecking for gawk... no\r\nchecking for mawk... mawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking how to print strings... printf\r\nchecking for style of include used by make... GNU\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for fgrep... /bin/grep -F\r\nchecking for ld used by gcc... /usr/bin/ld\r\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 1572864\r\nchecking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop\r\nchecking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop\r\nchecking for /usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for ar... ar\r\nchecking for archiver @FILE support... @\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... mt\r\nchecking if mt is a manifest tool... no\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if gcc supports -fno-rtti -fno-exceptions... no\r\nchecking for gcc option to produce PIC... -fPIC -DPIC\r\nchecking if gcc PIC flag -fPIC -DPIC works... yes\r\nchecking if gcc static flag -static works... yes\r\nchecking if gcc supports -c -o file.o... yes\r\nchecking if gcc supports -c -o file.o... (cached) yes\r\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking whether -lc should be explicitly linked in... no\r\nchecking dynamic linker characteristics... GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... yes\r\nchecking whether to build static libraries... yes\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking dependency style of g++... gcc3\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for ld used by g++... /usr/bin/ld -m elf_x86_64\r\nchecking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking for g++ option to produce PIC... -fPIC -DPIC\r\nchecking if g++ PIC flag -fPIC -DPIC works... yes\r\nchecking if g++ static flag -static works... yes\r\nchecking if g++ supports -c -o file.o... yes\r\nchecking if g++ supports -c -o file.o... (cached) yes\r\nchecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\r\nchecking dynamic linker characteristics... (cached) GNU/Linux ld.so\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking for gcc... (cached) gcc\r\nchecking whether we are using the GNU C compiler... (cached) yes\r\nchecking whether gcc accepts -g... (cached) yes\r\nchecking for gcc option to accept ISO C89... (cached) none needed\r\nchecking whether gcc understands -c and -o together... (cached) yes\r\nchecking dependency style of gcc... (cached) gcc3\r\nchecking if g++ supports C++1y features without additional flags... yes\r\nchecking if g++ supports C++1y features with -std=c++1y... yes\r\nchecking if g++ supports C++1y features with -std=gnu++1y... yes\r\nchecking whether -Wshadow-local and -Wshadow-compatible-local are supported... no\r\nchecking for main in -lgflags... yes\r\nchecking for gflags viability... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for GFLAGS... no\r\nconfigure: gflags.pc not found, treating as legacy dependency\r\nchecking for main in -lglog... yes\r\nchecking for glog viability... yes\r\nchecking for GLOG... yes\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking whether compiling and linking against OpenSSL works... yes\r\nchecking for OPENSSL... yes\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking whether the Boost::Context library is available... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking whether the Boost::Program_Options library is available... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking whether the Boost::Thread library is available... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking whether the Boost::Regex library is available... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking whether the Boost::System library is available... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking whether the Boost::Filesystem library is available... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking whether the Boost::Chrono library is available... yes\r\nchecking for exit in -lboost_chrono... yes\r\nchecking for python... /usr/bin/python\r\nchecking for python version... 2.7\r\nchecking for python platform... linux2\r\nchecking for python script directory... ${prefix}/lib/python2.7/dist-packages\r\nchecking for python extension module directory... ${exec_prefix}/lib/python2.7/dist-packages\r\nchecking for ANSI C header files... (cached) yes\r\nchecking features.h usability... yes\r\nchecking features.h presence... yes\r\nchecking for features.h... yes\r\nchecking malloc.h usability... yes\r\nchecking malloc.h presence... yes\r\nchecking for malloc.h... yes\r\nchecking bits/functexcept.h usability... yes\r\nchecking bits/functexcept.h presence... yes\r\nchecking for bits/functexcept.h... yes\r\nchecking bits/c++config.h usability... yes\r\nchecking bits/c++config.h presence... yes\r\nchecking for bits/c++config.h... yes\r\nchecking double-conversion/double-conversion.h usability... yes\r\nchecking double-conversion/double-conversion.h presence... yes\r\nchecking for double-conversion/double-conversion.h... yes\r\nchecking for ceil in -ldouble-conversion... yes\r\nchecking for event_set in -levent... yes\r\nchecking for EVENT... yes\r\nchecking for an ANSI C-conforming const... yes\r\nchecking for inline... inline\r\nchecking for size_t... yes\r\nchecking whether time.h and sys/time.h may both be included... yes\r\nchecking for working volatile... yes\r\nchecking for __int128... yes\r\nchecking for __int128 type traits... yes\r\nchecking for pthread_spinlock_t... yes\r\nchecking for ifunc support... yes\r\nchecking for final and override support... yes\r\nchecking for libc++... no\r\nchecking for c++11 atomic support without GNU Atomic library... yes\r\nchecking for main in -ldl... yes\r\nchecking for liblinux-vdso support... yes\r\nchecking for usable std::is_trivially_copyable... yes\r\nchecking gflags namespace... gflags\r\nchecking for weak symbol support... yes\r\nchecking for wchar support... yes\r\nchecking for unaligned access support... yes\r\nchecking for vsnprintf reporting bad format strings... no\r\nchecking for library containing cplus_demangle_v3_callback... -liberty\r\nchecking for library containing clock_gettime... none required\r\nchecking for pthread_atfork support... yes\r\nchecking for XSI style strerror_r support... no\r\nchecking for ext/random and __gnu_cxx::sfmt19937... yes\r\nchecking for VLA (variable-length array) support... yes\r\nchecking for malloc_size... no\r\nchecking for malloc_usable_size... yes\r\nchecking for memrchr... yes\r\nchecking for pipe2... yes\r\nchecking for preadv... yes\r\nchecking for pwritev... yes\r\nchecking lz4.h usability... yes\r\nchecking lz4.h presence... yes\r\nchecking for lz4.h... yes\r\nchecking for LZ4_decompress_safe in -llz4... yes\r\nchecking snappy.h usability... yes\r\nchecking snappy.h presence... yes\r\nchecking for snappy.h... yes\r\nchecking for main in -lsnappy... yes\r\nchecking zlib.h usability... yes\r\nchecking zlib.h presence... yes\r\nchecking for zlib.h... yes\r\nchecking for main in -lz... yes\r\nchecking lzma.h usability... yes\r\nchecking lzma.h presence... yes\r\nchecking for lzma.h... yes\r\nchecking for main in -llzma... yes\r\nchecking zstd.h usability... no\r\nchecking zstd.h presence... no\r\nchecking for zstd.h... no\r\nchecking bzlib.h usability... no\r\nchecking bzlib.h presence... no\r\nchecking for bzlib.h... no\r\nchecking linux/membarrier.h usability... yes\r\nchecking linux/membarrier.h presence... yes\r\nchecking for linux/membarrier.h... yes\r\nchecking libdwarf/dwarf.h usability... no\r\nchecking libdwarf/dwarf.h presence... no\r\nchecking for libdwarf/dwarf.h... no\r\nchecking dwarf.h usability... no\r\nchecking dwarf.h presence... no\r\nchecking for dwarf.h... no\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating io/test/Makefile\r\nconfig.status: creating libfolly.pc\r\nconfig.status: creating test/Makefile\r\nconfig.status: creating test/function_benchmark/Makefile\r\nconfig.status: creating experimental/Makefile\r\nconfig.status: creating experimental/io/test/Makefile\r\nconfig.status: creating experimental/logging/Makefile\r\nconfig.status: creating experimental/logging/example/Makefile\r\nconfig.status: creating experimental/symbolizer/Makefile\r\nconfig.status: creating init/Makefile\r\nconfig.status: creating stats/test/Makefile\r\nconfig.status: creating config.h\r\nconfig.status: config.h is unchanged\r\nconfig.status: executing folly-config.h commands\r\nconfig.status: creating folly-config.h - prefix FOLLY for config.h defines\r\nconfig.status: folly-config.h is unchanged\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/fun/fboss/external/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/fun/fboss/external/folly/folly'\r\ndepbase=`echo Assume.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF $depbase.Tpo -c -o Assume.lo Assume.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp  -fPIC -DPIC -o .libs/Assume.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Assume.lo -MD -MP -MF .deps/Assume.Tpo -c Assume.cpp -o Assume.o >/dev/null 2>&1\r\ndepbase=`echo Checksum.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF $depbase.Tpo -c -o Checksum.lo Checksum.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp  -fPIC -DPIC -o .libs/Checksum.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT Checksum.lo -MD -MP -MF .deps/Checksum.Tpo -c Checksum.cpp -o Checksum.o >/dev/null 2>&1\r\ndepbase=`echo ClockGettimeWrappers.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF $depbase.Tpo -c -o ClockGettimeWrappers.lo ClockGettimeWrappers.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp  -fPIC -DPIC -o .libs/ClockGettimeWrappers.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT ClockGettimeWrappers.lo -MD -MP -MF .deps/ClockGettimeWrappers.Tpo -c ClockGettimeWrappers.cpp -o ClockGettimeWrappers.o >/dev/null 2>&1\r\ndepbase=`echo concurrency/CacheLocality.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF $depbase.Tpo -c -o concurrency/CacheLocality.lo concurrency/CacheLocality.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp  -fPIC -DPIC -o concurrency/.libs/CacheLocality.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT concurrency/CacheLocality.lo -MD -MP -MF concurrency/.deps/CacheLocality.Tpo -c concurrency/CacheLocality.cpp -o concurrency/CacheLocality.o >/dev/null 2>&1\r\ndepbase=`echo detail/Futex.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF $depbase.Tpo -c -o detail/Futex.lo detail/Futex.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp  -fPIC -DPIC -o detail/.libs/Futex.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/Futex.lo -MD -MP -MF detail/.deps/Futex.Tpo -c detail/Futex.cpp -o detail/Futex.o >/dev/null 2>&1\r\ndepbase=`echo detail/IPAddress.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF $depbase.Tpo -c -o detail/IPAddress.lo detail/IPAddress.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp  -fPIC -DPIC -o detail/.libs/IPAddress.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/IPAddress.lo -MD -MP -MF detail/.deps/IPAddress.Tpo -c detail/IPAddress.cpp -o detail/IPAddress.o >/dev/null 2>&1\r\ndepbase=`echo detail/StaticSingletonManager.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF $depbase.Tpo -c -o detail/StaticSingletonManager.lo detail/StaticSingletonManager.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp  -fPIC -DPIC -o detail/.libs/StaticSingletonManager.o\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/StaticSingletonManager.lo -MD -MP -MF detail/.deps/StaticSingletonManager.Tpo -c detail/StaticSingletonManager.cpp -o detail/StaticSingletonManager.o >/dev/null 2>&1\r\ndepbase=`echo detail/ThreadLocalDetail.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\r\n/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H   -I./.. -pthread -I/usr/include    -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF $depbase.Tpo -c -o detail/ThreadLocalDetail.lo detail/ThreadLocalDetail.cpp &&\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  g++ -DHAVE_CONFIG_H -I./.. -pthread -I/usr/include -std=gnu++1y -g -O2 -MT detail/ThreadLocalDetail.lo -MD -MP -MF detail/.deps/ThreadLocalDetail.Tpo -c detail/ThreadLocalDetail.cpp  -fPIC -DPIC -o detail/.libs/ThreadLocalDetail.o\r\nIn file included from ./../folly/Foreach.h:320:0,\r\n                 from ./../folly/detail/ThreadLocalDetail.h:30,\r\n                 from detail/ThreadLocalDetail.cpp:16:\r\n./../folly/Foreach-inl.h:222:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:236:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)'\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:215:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsThreeArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_range_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_range_impl(Sequence&& range, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:315:6: error: redefinition of 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsOneArgument<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)'\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\n./../folly/Foreach-inl.h:303:6: note: 'template<class Sequence, class Func, folly::for_each_detail::EnableIfAcceptsTwoArguments<Sequence, Func>* <anonymous> > void folly::for_each_detail::for_each_tuple_impl(Sequence&&, Func&)' previously declared here\r\n void for_each_tuple_impl(Sequence&& seq, Func& func) {\r\n      ^~~~~~~~~~~~~~~~~~~\r\nMakefile:1902: recipe for target 'detail/ThreadLocalDetail.lo' failed\r\nmake[2]: *** [detail/ThreadLocalDetail.lo] Error 1\r\nmake[2]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:2013: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/fun/fboss/external/folly/folly'\r\nMakefile:1195: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\nfun@woodhouse:\\~/fboss/external/folly/folly$\r\n```\r\n\r\nG++ version info:\r\n```\r\nfun@woodhouse:\\~/fboss/external/folly/folly$ g++ --version\r\ng++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bilosikia": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/665", "title": "ubuntu 17.04 make error", "body": "i have installed all the packages.how can i deal with this?\r\ndetail/Crc32cDetail.cpp: In function \u2018uint64_t folly::crc32_detail::CombineCRC(long unsigned int, uint64_t, uint64_t, uint64_t, const uint64_t*)\u2019:\r\ndetail/Crc32cDetail.cpp:153:31: error: \u2018_mm_cvtsi128_si64\u2019 was not declared in this scope\r\n   crc0 = _mm_cvtsi128_si64(res);\r\n                               ^\r\ndetail/Crc32cDetail.cpp:155:34: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc2 = _mm_crc32_u64(crc2, crc0);\r\n                                  ^\r\ndetail/Crc32cDetail.cpp: In function \u2018void folly::crc32_detail::triplet_loop(long unsigned int, uint64_t&, const unsigned char*&, long unsigned int)\u2019:\r\ndetail/Crc32cDetail.cpp:48:52: error: \u2018_mm_crc32_u64\u2019 was not declared in this scope\r\n   crc##0 = _mm_crc32_u64(crc##0, *(buf##0 + offset)); \\\r\n                                                    ^\r\ndetail/Crc32cDetail.cpp:201:9: note: in expansion of macro \u2018CRCtriplet\u2019\r\n         CRCtriplet(crc, next, -128);\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shaneknapp": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/662", "title": "unable to compile folly on ubuntu 16.04 LTS", "body": "i've gone through the installation instructions, installed all of the recommended packages, but building folly fails on the first make.\r\n\r\ni have a hand-rolled boost installation (1.6.2) installed in my homedir, which i compiled w/C++14 support.\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ uname -a\r\nLinux amp-jenkins-staging-master 4.4.0-91-generic #114-Ubuntu SMP Tue Aug 8 11:56:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ ./configure --with-boost=$HOME/boost --prefix=/home/eecs/sknapp/thrift &> configure.out\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ grep boost configure.out\r\nchecking for boostlib >= 1.51.0... yes\r\nchecking for exit in -lboost_context... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking for exit in -lboost_regex... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking for exit in -lboost_chrono... yes\r\n```\r\n\r\nlooks cromulent, right?  well...\r\n\r\n```\r\nsknapp@amp-jenkins-staging-master:~/incoming/folly/folly$ make\r\nmake  all-recursive\r\nmake[1]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMaking all in .\r\nmake[2]: Entering directory '/home/eecs/sknapp/incoming/folly/folly'\r\n/bin/bash ./libtool  --tag=CXX   --mode=link g++  -std=gnu++1y -g -O2 -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono  -lssl -lcrypto  -o generate_fingerprint_tables build/GenerateFingerprintTables.o libfollybase.la -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\nlibtool: link: g++ -std=gnu++1y -g -O2 -o generate_fingerprint_tables build/GenerateFingerprintTables.o  ./.libs/libfollybase.a -lboost_context -lboost_program_options -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread -lboost_chrono -lssl -lcrypto -llzma -lz -lsnappy -llz4 -liberty -ldl -levent -ldouble-conversion -lglog -lgflags\r\n/usr/bin/ld: cannot find -lboost_context\r\n/usr/bin/ld: cannot find -lboost_program_options\r\n/usr/bin/ld: cannot find -lboost_thread\r\n/usr/bin/ld: cannot find -lboost_filesystem\r\n/usr/bin/ld: cannot find -lboost_system\r\n/usr/bin/ld: cannot find -lboost_regex\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:1662: recipe for target 'generate_fingerprint_tables' failed\r\nmake[2]: *** [generate_fingerprint_tables] Error 1\r\nmake[2]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1997: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/eecs/sknapp/incoming/folly/folly'\r\nMakefile:1191: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n\r\n(everything up until this point seems to compile normally)\r\n\r\ni've tried manually setting --with-boost-libdir, updating LD_LIBRARY_PATH, etc etc but i always get the same failure.\r\n\r\nany ideas?", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hrjaco": {"issues": [{"url": "https://api.github.com/repos/facebook/folly/issues/655", "title": "FutureTimekeepr threads runs forever", "body": "We have a thrift server built on top of fbthrift. We uses future's delayed() function to implement speculative request failover. But after we enable speculative request failover, we noticed that our server cannot be stopped correctly.\r\n\r\nAfter we stop the server, we noticed that our server's main function reaches the end, but the `FutureTimekeepr` still runs, which causes the process not stopped. If we do not enable speculative failover(FutureTimekeepr won't exist), our server can be stopped correctly.\r\n\r\nI noticed the FutureTimekeepr thread is used as a singleton inside ThreadWheelTimekeeper. Any idea why its destructor is not called even after main function reaches the end? thanks!", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simpkins": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/e96129da65d3ad2b20aae5a2bf2d22d2d72b8feb", "message": "cmake: fix the test builds\n\nSummary:\n- Fix the locations of some tests that have been moved.\n- Remove some tests that have been deleted.\n- Comment out some tests that depend on parts of folly that are not currently\n  built by the CMake build scripts.\n- Fix a build error in CompressionTest.cpp if FOLLY_HAVE_LIBZ is not defined.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735700\n\nfbshipit-source-id: 89f60751fa7079b2c609d23d85fbed2a0f317b55"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6c511999f92066ed84778bca4491c8d139a3195d", "message": "fix a multiline comment warning\n\nSummary:\nDeterministicScheduleTest.cpp contained several single-line C++ comments that\nended in a trailing backslash.  This makes the preprocessor treat the following\nline as a comment as well, even if it does not start with `//`.  Newer versions\nof gcc emit warnings about this.\n\nThis changes the comment in DeterministicScheduleTest.cpp to use `/* */` to\navoid this issue.\n\nReviewed By: siyengar\n\nDifferential Revision: D6735672\n\nfbshipit-source-id: 162c735507a643ce0dbee58f1f054865237e1eba"}, {"url": "https://api.github.com/repos/facebook/folly/commits/bdd9360c598d80d524de6780cd5be65af56d98fd", "message": "fix some bugs in AsyncSSLSocketTest\n\nSummary:\nA couple of the test functions in AsyncSSLSocketTest maintained two EventBase\nobjects and alternated looping between them.  In some cases it would call\nEventBase::loopOnce() even when there was no work to do.  This call normally\nblocks until an event is ready.  This happened to work when using libevent1,\nbut this appears mostly accidental: with libevent1 EVLOOP_ONCE causes the loop\nto break out even after an \"internal\" I/O event; in libevent2 EVLOOP_ONCE only\nbreaks out after a non-internal event has occurred:\nhttps://github.com/libevent/libevent/commit/0617a818204397790e5e4c9bcb9e91ae5ea7817a\n\nIn these tests it turns out that the internal EventBase NotificationQueue\nalways gets triggered the very first time loopOnce() is called, preventing\nthese tests from hanging when using libevent1.\n\nThis fixes the hang when using libevent2 by removing the initial loopOnce()\ncalls that potentially have nothing to do.  This also consolidates the 2\nEventBase objects into one to avoid having to alternate loopOnce() calls\nbetween them without knowing which one actually has work to do.\n\nThis also fixes an issue where the code never checked the return value of\n`recv()`\n\nReviewed By: yfeldblum, siyengar\n\nDifferential Revision: D6735669\n\nfbshipit-source-id: 5f36106a08866aa8908e82263f83a606399cdf79"}, {"url": "https://api.github.com/repos/facebook/folly/commits/7da4ef82aee382777bb50aadd4af14a482739d10", "message": "suppress warnings in tests for deprecated functions\n\nSummary:\nUpdate ShellTest and PromiseTest to suppress warnings about using deprecated\nfunctions in the tests for those functions.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735670\n\nfbshipit-source-id: 89edcb49d1eff3132398aaef88f5a5cae82e3557"}, {"url": "https://api.github.com/repos/facebook/folly/commits/19db503e08e4ea46a8b4d9a272605006b6245f88", "message": "cmake: fix path to FindGLog.cmake\n\nSummary:\nThe cmake files refer to this package as \"FindGLog\", but the file name on disk\nincorrectly had the 'L' lower cased.  This worked on case-insensitive file\nsystems, but caused cmake to fail when used on a case-sensitive file system.\n\nThis diff fixes the file name to match the name used in the cmake files.  This\nis also more consistent with the existing \"FindGFlags\" and \"FindGMock\"\npackages.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6710439\n\nfbshipit-source-id: 19f6824ef6793e505b5a0080c0fefe0b145a41c3"}, {"url": "https://api.github.com/repos/facebook/folly/commits/337e897a2510b8f1291c6be95b3eb18f0c80cb68", "message": "cmake: remove DOS-style line endings\n\nSummary:\nA number of the files in CMake/ had inconsistent line-endings.  This updates\nfiles using DOS-style CRLF line endings to just use CR instead.  On Windows,\ngit is capable of automatically changing CR to CRLF when checking out the\nrepository working directory.\n\nReviewed By: meyering\n\nDifferential Revision: D6714717\n\nfbshipit-source-id: 82adccf4e522d38fd1cb420869f62e52dbd6c5f1"}, {"url": "https://api.github.com/repos/facebook/folly/commits/b22d1721ed9c062e22b33936e13b39ed1507391a", "message": "cmake: add checks to generate folly-config.h correctly\n\nSummary:\nAdd proper checks to detect and set the values in folly-config.h correctly.\nPreviously the code simply hard-coded values that were appropriate for Windows.\n\nThis does not yet define all of the settings produced by the autoconf build,\nbut it lets the CMake-based build largely succeed on Linux systems.\n\nReviewed By: meyering\n\nDifferential Revision: D6710437\n\nfbshipit-source-id: 80490080ee6322995b740ac2a15181d220c6874a"}, {"url": "https://api.github.com/repos/facebook/folly/commits/03957924ccf4e32d0fbc4dc3198da3249f57b890", "message": "cmake: set compiler flags for non-Windows platforms\n\nSummary:\nUpdate CMakeLists.txt to check the current platform, and to set compiler flags\ncorrectly.  It now uses flags for Microsoft Visual Studio on Windows, and flags\nfor gcc or clang on all other platforms.  Previously it unconditionally used\nMSVC flags.\n\nReviewed By: meyering\n\nDifferential Revision: D6710435\n\nfbshipit-source-id: dbae3097bcadf1ee4a25879dd7770603387c0e4d"}, {"url": "https://api.github.com/repos/facebook/folly/commits/3d9eb7ffc32c2f5f878bb4aee61d30cb8c62a146", "message": "cmake: support using a separate build directory\n\nSummary:\nFix rules in the CMakeLists.txt file that generate source files to first create\ntheir output directory if necessary.  This allows the build to succeed when\nbuilding with a separate build output directory, rather than placing build\nartifacts in the source tree itself.\n\nReviewed By: meyering\n\nDifferential Revision: D6710436\n\nfbshipit-source-id: 786a65a37a70833e7e4a5affe4df292626dbb591"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spalamarchuk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/4bfbe0a10e914c3626e16cfdb9e87508e63b065f", "message": "Add DCHECKs for checking that underlying IOBuf wasn't modified\n\nSummary: Appending/prepending to IOBuf while iterating over it with Cursor is unsafe. This diff adds DCHECKs to catch such cases.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6735060\n\nfbshipit-source-id: 7799facc52c53fabd83756ecb26a18c4ebd69677"}, {"url": "https://api.github.com/repos/facebook/folly/commits/86cefd11d497791f00769e69fba550f710906527", "message": "Properly handle appending to the tail of the chain\n\nSummary: Currently appending to the tail of the chain would cause the cursor advancing to the beginning of the chain, which is not correct, instead we should advance to the tail.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6734999\n\nfbshipit-source-id: b8b2585e0475b656f7b6bf4ed39686e2ccb2e432"}, {"url": "https://api.github.com/repos/facebook/folly/commits/afde52ff7655ba79759eafdbee14b3fe47428fce", "message": "Track absolute position of the cursor\n\nSummary:\nStart tracking the position of the cursor from the head of IOBuf chain. This comes at almost no cost (one arithmetic operation on IOBuf advance).\n\nThe main use case for this cursor is Thrift deserialization code. It allows us to stop accumulating `xfer` on every single byte/field/element write and instead get it from Cursor in the end (when we're exiting Thrift code).\nThis allows achieving ~10% better performance of deserialization.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6646813\n\nfbshipit-source-id: 8f796854a24a411698e96afe037695e816813022"}, {"url": "https://api.github.com/repos/facebook/folly/commits/2c730d6fe79b5642133c55545c4ed7570ce2abb9", "message": "Improve fast path of Cursor\n\nSummary:\nThis change simplifies the fastpath by reducing it to bare minimum (i.e. check length, load data) and removes indirection to IOBuf.\nAdditionally it adds `skipNoAdvance` method to have 1-instruction skip.\n\nDisassembly of `read<signed char>` is over 35 instructions (just hot path). With this change it's doesn to 8.\nDisassembly after:\n  Dump of assembler code for function folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>():\n     0x000000000041f0f0 <+0>:     mov    0x18(%rdi),%rax\n     0x000000000041f0f4 <+4>:     lea    0x1(%rax),%rcx\n     0x000000000041f0f8 <+8>:     cmp    0x10(%rdi),%rcx\n     0x000000000041f0fc <+12>:    ja     0x41f105 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::read<unsigned char>()+21>\n     0x000000000041f0fe <+14>:    mov    (%rax),%al\n     0x000000000041f100 <+16>:    mov    %rcx,0x18(%rdi)\n     0x000000000041f104 <+20>:    retq\n     0x000000000041f105 <+21>:    jmpq   0x41f110 <folly::io::detail::CursorBase<folly::io::Cursor, folly::IOBuf const>::readSlow<unsigned char>()>\n\nWith this diff Thrift deserialization becomes ~20% faster (with prod workloads).\n\nThrift benchmark:\nBefore:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   12.98ns   77.03M\n  BinaryProtocol_read_SmallInt                                20.94ns   47.76M\n  BinaryProtocol_read_BigInt                                  20.86ns   47.93M\n  BinaryProtocol_read_SmallString                             34.64ns   28.86M\n  BinaryProtocol_read_BigString                              185.53ns    5.39M\n  BinaryProtocol_read_BigBinary                               67.34ns   14.85M\n  BinaryProtocol_read_LargeBinary                             62.23ns   16.07M\n  BinaryProtocol_read_Mixed                                   58.74ns   17.03M\n  BinaryProtocol_read_SmallListInt                            89.99ns   11.11M\n  BinaryProtocol_read_BigListInt                              39.92us   25.05K\n  BinaryProtocol_read_BigListMixed                           616.20us    1.62K\n  BinaryProtocol_read_LargeListMixed                          83.49ms    11.98\n  CompactProtocol_read_Empty                                  11.28ns   88.67M\n  CompactProtocol_read_SmallInt                               19.15ns   52.22M\n  CompactProtocol_read_BigInt                                 26.14ns   38.25M\n  CompactProtocol_read_SmallString                            31.04ns   32.22M\n  CompactProtocol_read_BigString                             184.55ns    5.42M\n  CompactProtocol_read_BigBinary                              69.73ns   14.34M\n  CompactProtocol_read_LargeBinary                            64.39ns   15.53M\n  CompactProtocol_read_Mixed                                  58.73ns   17.03M\n  CompactProtocol_read_SmallListInt                           76.50ns   13.07M\n  CompactProtocol_read_BigListInt                             25.93us   38.56K\n  CompactProtocol_read_BigListMixed                          623.15us    1.60K\n  CompactProtocol_read_LargeListMixed                         80.57ms    12.41\n  ============================================================================\n\nAfter:\n  ============================================================================\n  thrift/lib/cpp2/test/ProtocolBench.cpp          relative  time/iter  iters/s\n  ============================================================================\n  BinaryProtocol_read_Empty                                   10.40ns   96.17M\n  BinaryProtocol_read_SmallInt                                15.14ns   66.03M\n  BinaryProtocol_read_BigInt                                  15.19ns   65.84M\n  BinaryProtocol_read_SmallString                             25.19ns   39.70M\n  BinaryProtocol_read_BigString                              172.85ns    5.79M\n  BinaryProtocol_read_BigBinary                               56.88ns   17.58M\n  BinaryProtocol_read_LargeBinary                             56.77ns   17.61M\n  BinaryProtocol_read_Mixed                                   43.98ns   22.74M\n  BinaryProtocol_read_SmallListInt                            58.19ns   17.19M\n  BinaryProtocol_read_BigListInt                              19.75us   50.63K\n  BinaryProtocol_read_BigListMixed                           440.20us    2.27K\n  BinaryProtocol_read_LargeListMixed                          56.94ms    17.56\n  CompactProtocol_read_Empty                                   9.35ns  106.93M\n  CompactProtocol_read_SmallInt                               13.07ns   76.49M\n  CompactProtocol_read_BigInt                                 18.23ns   54.87M\n  CompactProtocol_read_SmallString                            25.61ns   39.05M\n  CompactProtocol_read_BigString                             174.46ns    5.73M\n  CompactProtocol_read_BigBinary                              59.77ns   16.73M\n  CompactProtocol_read_LargeBinary                            60.81ns   16.44M\n  CompactProtocol_read_Mixed                                  42.70ns   23.42M\n  CompactProtocol_read_SmallListInt                           66.89ns   14.95M\n  CompactProtocol_read_BigListInt                             25.08us   39.87K\n  CompactProtocol_read_BigListMixed                          427.93us    2.34K\n  CompactProtocol_read_LargeListMixed                         56.11ms    17.82\n  ============================================================================\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6635325\n\nfbshipit-source-id: 393fc1005689042977c03f37f5a898ebe7814d44"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "djwatson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/a4306bcdf04c95f321a96ab9b0f29de1c1e678f1", "message": "Loop Time\n\nSummary:\nOnly do the exponential loop smoothing once every 10ms.\nIf we need it before then, do it linearly.\n\nAlso, remove one of the now()s by only calling it once.\n\nReviewed By: bmaurer, yfeldblum\n\nDifferential Revision: D6690047\n\nfbshipit-source-id: 8267c01064aabc17cb8e86eb888e6120c99a129f"}, {"url": "https://api.github.com/repos/facebook/folly/commits/8893b8bcd26b41471e77c6882d77404c9a617176", "message": "parkinglot benchmark\n\nSummary: Add benchmark vs. futex\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6639280\n\nfbshipit-source-id: 9735444a7f48011f31603159561675d472cc4411"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "plapukhov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/9bf260657e140cace3cab8850d6a40fac3a5cd93", "message": "add tryCreateNetwork()\n\nSummary: Add non-throwing version of createNetwork(), and rework existing code to throw exceptions based on error codes returned by non-throwing version.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6705425\n\nfbshipit-source-id: 268ff64c36e7cceeea3463248d18b7b2cb81390e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yfeldblum": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/61cdb3dc27700545a65062e174d1b7f1ac15f088", "message": "Fix Build: folly/synchronization/test/ParkingLotBenchmark.cpp (sign-compare, unused-variable)\n\nSummary: [Folly] Fix Build: `folly/synchronization/test/ParkingLotBenchmark.cpp` (`sign-compare`, `unused-variable`).\n\nReviewed By: djwatson\n\nDifferential Revision: D6733586\n\nfbshipit-source-id: 04b82110e8e0b655e6b3994dbca3bd0b4bd57eef"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cf930032da9b0796d96c14c3b4446a75477c1ef3", "message": "Revert D6725091: [Folly] Use thread-local in RequestContext::getStaticContext\n\nSummary:\nThis reverts commit 9979f39677284b1051cb109b461097495d77ca17\n\nbypass-lint\n\nAn infra SEV is better than not reverting this diff.\nIf you copy this password, see you in SEV Review!\ncause_a_sev_many_files\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: f1e3c80c869aa47684f5fbe79528e68174dee568"}, {"url": "https://api.github.com/repos/facebook/folly/commits/6746259314362d89f3d1d1dbfdf00c9fe18de202", "message": "Use thread-local in RequestContext::getStaticContext\n\nSummary:\n[Folly] Use thread-local in `RequestContext::getStaticContext`.\n\n`folly::SingletonThreadLocal` uses `folly::ThreadLocal`. However, `static FOLLY_TLS` (`static __thread`) is always faster than `folly::ThreadLocal` for thread-local singletons for which iteration is not required.\n\nReviewed By: djwatson\n\nDifferential Revision: D6725091\n\nfbshipit-source-id: 9979f39677284b1051cb109b461097495d77ca17"}, {"url": "https://api.github.com/repos/facebook/folly/commits/1aabda15e688be7a21874c1c8f5252b898bdb312", "message": "Fix missing WaitOptions symbol in autotools build\n\nSummary:\n[Folly] Fix missing `WaitOptions` symbol in autotools build.\n\nCloses #736.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6724950\n\nfbshipit-source-id: 54ac0d1a743aa38fe1a7a2bdce585fced18c5a44"}, {"url": "https://api.github.com/repos/facebook/folly/commits/cd1bdc912603c0358ba733d379a74ae90ab3a437", "message": "Fix copyright lines\n\nSummary: [Folly] Fix copyright lines based on file histories.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6720312\n\nfbshipit-source-id: c70a667a1977e70e2d4451ea624f96163982f681"}, {"url": "https://api.github.com/repos/facebook/folly/commits/e092e957b750dbf24de247b0794cd4b0bb9bfdaf", "message": "Convert newlines in folly/portability/PThread.cpp\n\nSummary:\n[Folly] Convert newlines in `folly/portability/PThread.cpp`.\n\n```\ndos2unix folly/portability/PThread.cpp\n```\n\nReviewed By: meyering\n\nDifferential Revision: D6720343\n\nfbshipit-source-id: b92122b4a7012d7f8d73d293af51b4fcc868c582"}, {"url": "https://api.github.com/repos/facebook/folly/commits/47b2f8dfdc39b149accf9ae830551eee670d98d1", "message": "Promote aligned_malloc and aligned_free\n\nSummary:\n[Folly] Promote `aligned_malloc` and `aligned_free` from `namespace folly::detail` to `namespace folly`.\n\nAnd move them from `folly/portability/Memory.h` to `folly/Memory.h`.\n\nDifferential Revision: D6153394\n\nfbshipit-source-id: eef314d2bc171910ea3c8403da9e9e1d1858ce15"}, {"url": "https://api.github.com/repos/facebook/folly/commits/fd5eeb5f4bb9ad55172e9454f726667e3c325000", "message": "Unsafe pre-sorted construction for sorted-vector containers\n\nSummary:\n[Folly] Unsafe pre-sorted construction for sorted-vector containers.\n\nIf the backing container type can be constructed directly in sorted order or can be determined in advance to be in sorted order, then a special constructor can help code take advantage of this condition by avoiding an extra invocation of `std::sort`.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D6708379\n\nfbshipit-source-id: 25d886b0814dc9230c6046ed1e7f199fac47754e"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/12552372", "body": "@Orvid - Can you please check this against MSVC and let me know if this helps?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12552372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577338", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "meyering": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/492fad43a76506407008a5394511daf6bba5bccc", "message": "define SKIP_IF\n\nSummary:\nFinding ourselves writing too many identical \"if (expr) SKIP << ...\" statements,\nthis change factors out/encapsulates the functionality.\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6727531\n\nfbshipit-source-id: 703abcd5d8c30a6ebab94327a12da4f2d1f7ff74"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleivag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/d7b6ad4972b288f90bf57d7597103c44c244decd", "message": "allow command to accept \"--\" separator\n\nSummary:\nCurrently NestedCommandLineApp does not support `--` to indicate that the following arguments should be parsed as arguments, not nested commands or options.\nThis diff fix that by whitelisting any argument given after \"--\"\n\nReviewed By: yfeldblum\n\nDifferential Revision: D6721144\n\nfbshipit-source-id: 38a850b6ea803dc758c5fe65a21575e5faeac35b"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidtgoldblatt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/folly/commits/98d1077ce0603b0713353d638cb1436a28827af6", "message": "Add Tearable, for concurrently-modified non-atomic objects.\n\nSummary:\nThis adds the Tearable class template, which holds storage for an\narbitrarily-sized object that can be concurrently read or written without any\nexternal synchronization.\n\nReviewed By: yfeldblum, djwatson\n\nDifferential Revision: D6422334\n\nfbshipit-source-id: ee3853bbd393ac8e30dca6439c61606cc5495f92"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "flarnie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/719", "title": "Add `CONTRIBUTING` and `CODE_OF_CONDUCT`", "body": "Hi! I noticed this repo could use some documentation to help new contributors.\r\n\r\n\r\n\r\n**why make this change?:**\r\nRegarding the `CONTRIBUTING.md` -> Including instructions for new contributors to open source is a courtesy that will foster a welcoming and safe open source community at Facebook.\r\n\r\nRegarding the Code of Conduct ->\r\n\r\nFacebook Open Source provides a Code of Conduct statement for all\r\nprojects to follow, to promote a welcoming and safe open source community.\r\n\r\nExposing the COC via a separate markdown file is a standard being\r\npromoted by Github via the Community Profile in order to meet their Open\r\nSource Guide's recommended community standards.\r\n\r\nAs you can see, adding this file will improve [the folly community profile](https://github.com/facebook/folly/community)\r\nchecklist and increase the visibility of our COC.\r\n\r\n**test plan:**\r\nViewing it on my branch -\r\n<img width=\"1014\" alt=\"screen shot 2017-12-03 at 4 10 05 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531641-cd914672-d844-11e7-8e27-4368c85fb5cd.png\">\r\n<img width=\"1006\" alt=\"screen shot 2017-12-03 at 4 10 14 pm\" src=\"https://user-images.githubusercontent.com/1114467/33531642-cda91450-d844-11e7-97fd-513961779e91.png\">\r\n\r\n**issue:**\r\ninternal task t23481323", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "badarihp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/710", "title": "Added addFuture function , which accepts function, expiry time, expir\u2026", "body": "Added new function addFuture which can accept a function, expiry time, and expiry callback function.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dryganets": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/653", "title": "Handle 4-byte unicode code points.", "body": "https://github.com/facebook/folly/pull/640\r\nreworked to have a surrogate check for the 4th symbol.\r\n\r\nWe need it for react-native to make sure that invalid symbols will be correctly skipped in case somebody passes a corrupted string to javascript core.\r\n\r\nNeeds to be backported to 2016.09.26.00 to fix the following issue in react-native:\r\n#10756\r\n```\r\nFatal Exception: java.lang.RuntimeException: Failed to create String from JSON\r\n       at com.facebook.react.bridge.queue.NativeRunnable.run(NativeRunnable.java)\r\n       at android.os.Handler.handleCallback(Handler.java:739)\r\n       at android.os.Handler.dispatchMessage(Handler.java:95)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:31)\r\n       at android.os.Looper.loop(Looper.java:234)\r\n       at com.facebook.react.bridge.queue.MessageQueueThreadImpl$3.run(MessageQueueThreadImpl.java:193)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "choeger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/640", "title": "Handle 4-byte unicode code points", "body": "fixes #632\r\n\r\nSigned-off-by: Christoph H\u00f6ger <christoph.hoeger@celeraone.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yeolar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/619", "title": "fixtypo", "body": "Miss putMessages test at folly/io/async/test/NotificationQueueTest.cpp", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petr-tik": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/618", "title": "Hyphen typos", "body": "Removed spaces after some hyphens inside compound words", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tedjp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/554", "title": "IOStreamBuf (istream/basic_streambuf adaptor for IOBuf)", "body": "Allows chained `IOBuf`s to be read via `std::istream` without having to coalesce them into a single contiguous buffer first.\r\n\r\nWorks with any single-byte type, eg. `char` or `uint8_t`. Not currently usable on multi-byte types like `wchar_t` due to the extra complexity involved in recomposing multi-byte characters that are split across `IOBuf` boundaries. (`static_assert` prevents use with multi-byte types.)\r\n\r\nCurrently read-only; cannot be used with a `std::ostream`.\r\n\r\nDepends the `io/test/Makefile.am` changes in #550. I've included the two necessary commits in this pull request. Happy to resubmit this after #550 completes review if that's preferred.\r\n\r\nThere are probably good performance reasons to avoid using this in general \u2014 and perhaps that should be noted in the header \u2014 but it could be useful in conjunction with APIs that can read from an `istream`. My use for this was with Proxygen: passing an incoming message body (chained `IOBuf`) to a 3rd party API.\r\n\r\nThe use of a `.tcc` file for the implementation of most of the templated functions is unusual for Folly but I wanted to keep them out of the general header. It could easily be renamed to `\u2026-impl.h` or whatever the preferred style is.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brunomorishita": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/425", "title": "Remove dependency from boost class noncopyable", "body": "With explicitly deleted member functions in C++11 the boost class noncopyable is not needed anymore\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fabbree": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/399", "title": "Fix for HHWheelTimer assert-fails when destroy() happens after cancel\u2026", "body": "\u2026All() #397\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rigtorp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/378", "title": "Add memory padding and alignment to prevent false sharing", "body": "Ensure no thirdparty thread writes to a cacheline shared by our ringbuffer, readIndex and writeIndex.\nEnsure readIndex and writeIndex are located on different cachelines.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmbeard": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/351", "title": "Allow clients of FBVector to customize the growth strategy", "body": "As per the suggestion in the comments of `FBVector.h`, I've added the ability to customize the growth strategy using the `fbvector`'s allocator. If the allocator used implements a non-static member function of type `size_type calculate_capacity(size_type) const` then this will be called in every case where the `fbvector` instance needs to grow. E.g. to use an `N+1` strategy the allocator would look something like...\n\n``` c++\ntemplate<typename T>\nstruct growth_policy_allocator\n{\n  typedef T value_type;\n\n  T* allocate(size_t n)\n  {\n    ...\n  }\n\n  void deallocate(void *p, size_t n)\n  {\n    ...\n  }\n\n  size_t calculate_capacity(size_t current) const // const is required\n  {\n    return current + 1;\n  }\n};\n```\n\nIf the allocate doesn't implement `calculate_capacity` then `fbvector` falls back to its default growth strategy.\n\nI've also added a simple test case for this feature. Compiles and passes on Ubuntu 14.04\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Hincoin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/326", "title": "Change memory_order_consume to relaxed in ProducerConsumerQueue", "body": "A few of the functions within ProducerConsumerQueue use `std::memory_order_consume` to load from shared variables, but the consume guarantees aren't used since there's no earlier data dependencies on these variables that need to be propagated. Changing these loads to `std::memory_order_relaxed` offers the same guarantees that are needed for these functions and, under current compiler support, avoids the promotion to `std::memory_order_acquire`. \n\nRelevant post on the [Google group](https://groups.google.com/d/msg/facebook-folly/eGb5gGudGtc/nmBNLFVaJQAJ).\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeanRBurton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/folly/pulls/324", "title": "Check for overflow when growing Vectors.", "body": "I don't know if this works, but it is at least in the spirit of the right idea.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975", "body": "Read the files in the folly/docs directory. They are markdown text files, so it's probably simpler to start reading them right here on github.\nThe sources files are also documented. And of course, the test files contain valuable info.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6093975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "chrisaycock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471", "body": "I agree with @dribeas. \"Standard Library\" is the correct term.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6100471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902", "body": "@tudor Glad I could be of help!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6140902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436", "body": "Ok, Standart Library if good enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6104436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "avatasia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736", "body": "Why not use STL or Boost, so there is too much programmer in Facebook?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdelong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905", "body": "Merged upstream and pushed\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6117905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130", "body": "Thanks; f0ced414840d5c29e6ced3466004dc1a122b51c1\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190", "body": "Thanks; I merged it upstream (so it'll be pushed back out in the next push).\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250", "body": "Thanks for the suggestion.  For now I just added a link to the overview doc to the wiki page.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/8838250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304", "body": "Just pushed a near-rewrite of FBVector.  Looks like the new assign() no longer has this bug; thanks for reporting it, though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336", "body": "Sorry for the delay asl.  I'm merging these into our local repo now (a couple of them have been fixed already).  They'll be back out in the next public push.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11424336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tudor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508", "body": "fixed in 050c1c3d52e4df860911235ac894291b2c089e59\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6118508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373", "body": "Merged manually, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6138373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390", "body": "The comment is correct. \"iff\" means \"if and only if\", see http://en.wikipedia.org/wiki/If_and_only_if\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6204390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7600011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835", "body": "Thanks for the comment. I'll be closing this issue because the issue tracker is meant for specific problems with the code.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/7977835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271", "body": "Yes it does.  Making folly portable outside of gcc 4.6+, Linux x86_64 has never been an explicit goal.  We would welcome patches, though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520", "body": "@asl Before we can accept your changes, you'll have to sign the Facebook Contributor License Agreement: https://developers.facebook.com/opensource/cla\n\nThanks!\n-Tudor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9459520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169", "body": "We'll take a look, thanks for letting us know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9914169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903", "body": "Did u even took a read on readme files or code itself before saying that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6120903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewjcg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592", "body": "Thanks for reporting this!  Fixed in 9c2924258bee193d267f85e598ea5abf72cb267f.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641", "body": "We currently don't test/build on OpenSuse, so its not surprising that there are some issues.  I'll look to get an install of this working shortly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6139641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "syntheticpp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611", "body": "obsolete\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/6435611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "asl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398", "body": "Fix for Portability.h is simple:\n\n```\ndiff --git a/folly/Portability.h b/folly/Portability.h\nindex 6d373a2..a9e8d32 100644\n--- a/folly/Portability.h\n+++ b/folly/Portability.h\n@@ -33,7 +33,11 @@\n #undef FOLLY_FINAL\n #undef FOLLY_OVERRIDE\n\n-#ifdef __GNUC__\n+#if defined(__clang__)\n+#  define FOLLY_FINAL final\n+#  define FOLLY_OVERRIDE override\n+#elif defined(__GNUC__)\n+# include <features.h>\n # if __GNUC_PREREQ(4,7)\n #  define FOLLY_FINAL final\n #  define FOLLY_OVERRIDE override\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443", "body": "(sorry, no pull request, I have heavily hacked tree around)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498", "body": "But will provide some fixes soon :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9410498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/9462030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andralex": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038", "body": "Thanks! We'll look into this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055", "body": "... and good to see you again, Christian :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/issues/comments/11087055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412912", "body": "Hi Dave -- this is the initial commit. Some of the files have a long history that is mostly internal to Facebook and peppered with commit information that has sensitive tidbits, so we decided to make the initial commit without a history. Going forward we're looking at ways to make fine-grained commit information available.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dabrahams": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/1412776", "body": "Inscrutable huge changesets like this one tend to undermine the \"open-source-ness\" of this effort.  Would it be possible to get the actual change history in here?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/comments/1412977", "body": "Oh!  The other commit was marked \"initial.\"  Sorry for the noise.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/1412977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "BenPope": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/2823909", "body": "I think there is a missing file:\nhttps://github.com/facebook/folly/issues/23\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/2823909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "capitalaslash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4949410", "body": "just to let you know, it was enough for me to move `FOLLY_NORETURN` at beginning of line to make it compile, there is no need to remove it completely with gcc 4.8\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4949410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "denji": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/4968026", "body": "@pgriess https://github.com/facebook/folly/issues/42\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/4968026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "anatol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/6495310", "body": "This is duplicated file. Exception.h is already present below. This causes build time failure on Linux Arch:\n\n```\n==> Starting package()...\nMaking install in .\nmake[1]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\nmake[2]: Entering directory '/home/anatol/sources/archpackages/folly-git/src/folly/folly'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /bin/sh ./libtool   --mode=install /usr/bin/install -c   libfolly.la libfollybenchmark.la libfollytimeout_queue.la libfollyfingerprint.la '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib'\n /usr/bin/mkdir -p '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly'\nlibtool: install: /usr/bin/install -c .libs/libfolly.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.la\n /usr/bin/install -c -m 644  ApplyTuple.h Arena.h Arena-inl.h AtomicBitSet.h AtomicHashArray.h AtomicHashArray-inl.h AtomicHashMap.h AtomicHashMap-inl.h AtomicStruct.h Baton.h Benchmark.h Bits.h Checksum.h Chrono.h ConcurrentSkipList.h ConcurrentSkipList-inl.h Conv.h CpuId.h CPortability.h Demangle.h DiscriminatedPtr.h DynamicConverter.h dynamic.h dynamic-inl.h Exception.h FBString.h FBVector.h File.h FileUtil.h Fingerprint.h folly-config.h Exception.h ExceptionWrapper.h Foreach.h FormatArg.h Format.h Format-inl.h GroupVarint.h Hash.h IPAddress.h '/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/.'\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.la\nlibtool: install: /usr/bin/install -c .libs/libfollytimeout_queue.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollytimeout_queue.la\nlibtool: install: /usr/bin/install -c .libs/libfollyfingerprint.lai /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollyfingerprint.la\nlibtool: install: /usr/bin/install -c .libs/libfolly.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\n/usr/bin/install: will not overwrite just-created \u2018/home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/include/folly/./Exception.h\u2019 with \u2018Exception.h\u2019\nlibtool: install: chmod 644 /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nlibtool: install: ranlib /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfolly.a\nMakefile:922: recipe for target 'install-nobase_follyincludeHEADERS' failed\nmake[2]: *** [install-nobase_follyincludeHEADERS] Error 1\nmake[2]: *** Waiting for unfinished jobs....\nlibtool: install: /usr/bin/install -c .libs/libfollybenchmark.a /home/anatol/sources/archpackages/folly-git/pkg/folly-git/usr/lib/libfollybenchmark.a\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/6495310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "samveen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10027494", "body": "Would you tag a release with this revision?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10027494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "andrewcox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10043097", "body": "I did this\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10043097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Gownta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10766197", "body": "Long story short, this change should be attributed to @mtodat. See https://github.com/facebook/folly/pull/132 for details.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10766197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954384", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954389", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @sethkrasnianski\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954416", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @SiebelsTim\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954445", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @gustavotemple\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954458", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @loverszhaokai\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/10954484", "body": "Our internal landing system overwrote the original author's name with mine. This diff is attributed to @cppfool \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10954484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370", "body": "If you change ALL such functions in folly, that would be an impactful change.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/28529370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gustavotemple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/10961983", "body": "Thank you very much, @Gownta !\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/10961983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Orvid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/11849195", "body": "While doing my port to Windows I've realized that this misses the use of pause in [detail/AtomicHashUtils.h](https://github.com/facebook/folly/blob/master/folly/detail/AtomicHashUtils.h#L33), which, although it does fall back to not using a pause, should be calling the functions added in this instead.\n\nAlso, is there an actual difference between `asm(\"pause\")` and `asm volatile(\"pause\")`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/11849195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12576669", "body": "MSVC is fine with this way of doing it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12576669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12577942", "body": "At least, I thought that was the case, apparently I forgot where this was actually used when I tested it, as MSVC is giving me errors about this now :(\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12577942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/12578031", "body": "I guess an `#ifdef` for MSVC is needed after all.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/12578031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13505592", "body": "With the PRs I have open currently, MSVC 2015 can be used for the pieces of Folly that HHVM uses. There is no build system in place for MSVC in the main Folly repo.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13505592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506496", "body": "As long as it's not one of the files removed in [HHVM's CMake file](https://github.com/hhvm/hhvm-third-party/blob/master/folly/CMakeLists.txt#L47) for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as `Subprocess.cpp` is not supported under MSVC) \n\nFor template matching with Format.h under MSVC, there is a fix in [Folly #305](https://github.com/facebook/folly/pull/305/files#diff-9cf63f8fda0a99aa4270be1c2b36f425R777) to help with that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507610", "body": "For everything to compile, you need more than just that PR. HHVM builds Folly via CMake, which generates the project file, so the project file I pass along would be of limited use.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356", "body": "This doesn't quite seem right. Shouldn't it be the other way around?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413", "body": "This should be `#if defined(FOLLY_X64)`, which is what normally wraps the pause calls.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/31406413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254", "body": "If this weren't in the C portability header, that would be true, but, as it is in the C portability header, I have kept the file compilable as C. I could do an `#ifdef` for C++ for that though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34205254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884", "body": "`FindClose` is indeed what I want, as this is closing the find handle, not a normal handle.\n\nThis returns an int because the standard `closedir` API returns an int. I've added a check for errors on the `FindClose` call, but I won't be marking the function for analysis, as this is intended as a functional portability mechanism, not an extensive API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34208884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726", "body": "I can certainly do that. My goal with the port was to make as few changes as possible to the code that effects more than just MSVC, which is why I only enabled it for MSVC at the moment.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35586726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35595243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701", "body": "Yes, it is. Looks like it happened when I was extracting the changes into separate PRs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429", "body": "This is the most permissive license of a proper implementation of this that I could find. It should be the same as the rest of the file, unless I missed something? Re-implementing it is possible, as trying to work around not having it will be more of a pain, as it's used in a few spots in HHVM.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35611429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264", "body": "RTM is the release version, it isn't  a prerelease, but there is a good chance that these will be fixed in an update, which is why these are set to go away when the update is released. This is basically future-proofing, as the eventual goal is to remove them completely. \n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35709264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "korovkin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/folly/comments/13481209", "body": "hey there, what is the status for supporting MSVC ? \nwe would like to use it with MSVC 2015 ? \n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13481209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13506060", "body": "thank you very much for the response, thats awesome!\nwhich parts are actually used? Format.h? \nwe are seeing a few issues with MSVC 2015 and template matching with MSVC... \n\nCC @DEGoodmanWilson\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13506060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507373", "body": "That's great! \n\nJust to confirm - \nIs PR 305 all is needed to compile it for MSVC 2015? \n\n> On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> \n> As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> \n> For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/comments/13507387", "body": "One more question - could you please share the SLN file that compiles it? \n\nThanks \n\n> On Sep 29, 2015, at 18:21, H Grosman korovkin@gmail.com wrote:\n> \n> That's great! \n> \n> Just to confirm - \n> Is PR 305 all is needed to compile it for MSVC 2015? \n> \n> > On Sep 29, 2015, at 17:07, Orvid King notifications@github.com wrote:\n> > \n> > As long as it's not one of the files removed in HHVM's CMake file for Folly, then it should be supported. (I just realized I apparently have a PR for that that I haven't submitted, as Subprocess.cpp is not supported under MSVC)\n> > \n> > For template matching with Format.h under MSVC, there is a fix in Folly #305 to help with that.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/comments/13507387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jwatzman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160", "body": "Why not\n\n``` cpp\n    int64_t timeSinceLastAccept = std::max<int64_t>(\n       0,\n       nowMs.time_since_epoch().count() -\n       lastAccepTimestamp_.time_since_epoch().count());\n```\n\nEspecially since we're already assigning this to an `int64_t` result? It seems a lot shorter and cleaner than this large `decltype`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32161160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sgolemon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382", "body": "Comment from internal reviewer:\n\nnot every Container supports emplace_back, this change broke a project build (Container == folly::TypedIOBuf<>)\n\ncode using Container = strings::TypedBuffer is also affected\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32464382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193", "body": "This broke folly builds on our internal CI, but I think I came up with something suitable for both clang and us\n\n```\ntemplate <typename T> struct iterator_class_is_container {\n  typedef std::reverse_iterator<typename T::iterator> some_iterator;\n  enum { value = has_value_type<T>::value &&\n              std::is_constructible<T, some_iterator, some_iterator>::value };\n};\n\ntemplate <typename T> struct class_is_container\n  : std::conditional<\n      has_iterator<T>::value,\n      iterator_class_is_container<T>,\n      std::false_type\n    >::type {};\n```\n\nA diff containing this is currently up for review as D2170803\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/32786193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805", "body": "Why not just always use the constexpr values and avoid the #ifdefs?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935", "body": "Maybe reduce this assertion to just:\n\n```\n  ~AtomicLinkedList() {\n    assert(empty());\n  }\n```\n\nAnd avoid duplicating the logic and the ifdefs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35584935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508", "body": "Unfortunately, we can't take this.  Could you come up with another approach, or an implementation from a more permissive license?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35596508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207", "body": "Shouldn't this be `!defined(_MSC_VER)` ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35591207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422", "body": "`uint16_6` looks like a typo, can you confirm that?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35592422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544", "body": "' provides thousands separation.  So I would say the very least would be something along the lines of:\n\n```\n#ifdef FOLLY_NO_PRINTF_GROUPING\n  \"%ju\",\n#else\n  \"%'ju\",\n#endif\n  static_cast<uintmax_t>(uval));\n```\n\nAnd add a configure check to conditionally set that define.\n\nBetter would be to implement a thousands separating output for non-gnu platforms, but that's a bit more work.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35594544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443", "body": "How concerned do we need to be about checking for which pre-relesae we're working with?\nSeems like we can just assume \"MSVC 2015 Latest\" until final comes out.\n\nCan we kill this check and assume the two defines below are just not set?\nMakes the code a lot simpler if so.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/35706443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ariccio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469", "body": "Since this is for Windows, you might as well annotate `s` with `_Pre_writable_size_(n)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34187469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081", "body": "Actually, you might as well go ahead and declare it like this for maximum static analysis effectiveness:\n\n```\n_At_buffer_(s, _Iter_, n, _Post_satisfies_(s[_Iter_] == 0))\nInline void bzero(  _Pre_writable_size_(n) _Out_ void* s, size_t n )\n\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34188081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236", "body": "You shouldn't need to explicitly specify the buffer size,  because [Secure Template Overloads](https://msdn.microsoft.com/en-us/library/ms175759.aspx) allow for [template parameter inference](https://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/), which is pretty cool.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34189236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309", "body": "`buf` should be `_Out_writes_z_(64)`, and the return value should be `_Ret_writes_maybenull_z_(64)`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824", "body": "Should be `_Field_range_(DT_UNKNOWN, DT_LNK)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34190824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904", "body": "`_Field_z_`\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34191904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281", "body": "Protip : Mark it `_Post_ptr_invalid_` and you'll be able to detect use-after-free and double free bugs.\n\nMarking the function `_At_(dir->hand, _Post_ptr_invalid_)` will do the same for double handle closes.\n\nIs `FindClose` what you wanted to use here, or is it `CloseHandle`?\n\nAlso, why does this return an `int`, if it doesn't check any return values?\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513", "body": "Mark `fmt` as `_Printf_format_string_` for format string error detection!\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827", "body": "Mark the function as `_Success_( return == 0 )` and `dst` as `_Out_` to detect uninit memory usage.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34195827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663", "body": "Fair enough.\n", "reactions": {"url": "https://api.github.com/repos/facebook/folly/pulls/comments/34231663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}