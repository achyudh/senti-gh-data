{"_default": {"1": {"LouisCAD": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/581", "title": "OutOfMemory Exception when OkHttp request/response body has huge data(like a video for example)", "body": "Hi, I'm uploading video files with an app using OkHttp, and Stetho still tries to allocate the whole video (which was more than 100MB in my case, but could be bigger) in RAM instead of setting a reasonable threshold where it'd just print the size of the request, and maybe the beginning of the request up to the max RAM consumption threshold.\r\n```stacktrace\r\nHappened on thread: Thread[StethoWorker-main-730,5,main]\r\n                                                                              java.lang.OutOfMemoryError: Failed to allocate a 8208 byte allocation with 136 free bytes and 136B until OOM, max allowed footprint 201326592, growth limit 201326592\r\n                                                                                  at java.io.BufferedOutputStream.<init>(BufferedOutputStream.java:76)\r\n                                                                                  at java.io.BufferedOutputStream.<init>(BufferedOutputStream.java:59)\r\n                                                                                  at com.facebook.stetho.server.http.LightHttpServer.serve(LightHttpServer.java:46)\r\n                                                                                  at com.facebook.stetho.inspector.DevtoolsSocketHandler.onAccepted(DevtoolsSocketHandler.java:52)\r\n                                                                                  at com.facebook.stetho.server.ProtocolDetectingSocketHandler.onSecured(ProtocolDetectingSocketHandler.java:63)\r\n                                                                                  at com.facebook.stetho.server.SecureSocketHandler.onAccepted(SecureSocketHandler.java:33)\r\n                                                                                  at com.facebook.stetho.server.LazySocketHandler.onAccepted(LazySocketHandler.java:36)\r\n                                                                                  at com.facebook.stetho.server.LocalSocketServer$WorkerThread.run(LocalSocketServer.java:167)\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/568", "title": "Migrate BSD + patents license to MIT or Apache v2.0, as done for React", "body": "Hi Facebook,\r\n\r\nCould you consider migrating the license of this project too, as has been [announced](https://code.facebook.com/posts/300798627056246/relicensing-react-jest-flow-and-immutable-js/) and [done](https://github.com/facebook/react/commit/b765fb25ebc6e53bb8de2496d2828d9d01c2774b) to React?", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/568/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ninovanhooff": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/575", "title": "regression: width and height not displayed in box model (1.5.0)", "body": "After upgrading 1.4.2 -> 1.5.0, I did not see the width and height displayed in the blue shaded area of the box model anymore. Notice that in the screenshot, the value of width is 720\r\n\r\n\r\n![screen shot 2017-10-13 at 15 00 10](https://user-images.githubusercontent.com/10351007/31816793-f0feb82c-b591-11e7-9034-f394282bfee3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/552", "title": "[Feature-request] Allow more than 1 Descriptor for the same type", "body": "If I want to add my own View Descriptor, I have to remove the default one via reflection:\r\n\r\n```     \r\n Stetho.InitializerBuilder initializerBuilder = Stetho.newInitializerBuilder(application);\r\n\r\nDescriptorProvider descriptorProvider = descriptorRegistrar -> {\r\n    if (descriptorRegistrar instanceof DescriptorMap){\r\n        try{\r\n            DescriptorMap descriptorMap = (DescriptorMap) descriptorRegistrar;\r\n\r\n            //Remove previous View descriptor, because there can only be one per (View) type\r\n            Field fMap = DescriptorMap.class.getDeclaredField(\"mMap\");\r\n            fMap.setAccessible(true);\r\n            Map map = (Map) fMap.get(descriptorMap);\r\n            map.remove(View.class);\r\n        } catch (IllegalAccessException | NoSuchFieldException e){\r\n            System.err.println(e);\r\n        }\r\n        \r\n    }\r\n    descriptorRegistrar.registerDescriptor(View.class, new CustomViewDescriptor());\r\n};\r\n\r\n\r\n\r\nAndroidDocumentProviderFactory factory = new AndroidDocumentProviderFactory(application, Collections.singletonList(descriptorProvider));\r\n\r\nInspectorModulesProvider inspectorModulesProvider = () -> {\r\n    Stetho.DefaultInspectorModulesBuilder inspectorModulesBuilder = new Stetho.DefaultInspectorModulesBuilder(application);\r\n    inspectorModulesBuilder.documentProvider(factory);\r\n    return inspectorModulesBuilder.finish();\r\n};\r\n\r\ninitializerBuilder.enableWebKitInspector(inspectorModulesProvider);\r\n\r\n\r\nStetho.initialize(initializerBuilder.build());\r\n```\r\n\r\nIt would be nice if there would be a AndroidDocumentProviderFactory that allows to skip adding of specified classes. Another approach would be to allow multiple Descriptors for the same type", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paour": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/534", "title": "App crashes when Stetho is open during a screen rotation", "body": "This is running on a Genymotion 2.9.0 VM, Android N.\r\nStetho 1.5.0\r\nThe app is using AppCompat 25.3.1.\r\n\r\nStacktrace:\r\n\r\n```\r\njava.lang.IllegalStateException: Fragment has not been attached yet.\r\n    at android.support.v4.app.Fragment.instantiateChildFragmentManager(Fragment.java:2154)\r\n    at android.support.v4.app.Fragment.getChildFragmentManager(Fragment.java:704)\r\n    at com.facebook.stetho.common.android.FragmentCompatSupportLib$FragmentAccessorSupportLib.getChildFragmentManager(FragmentCompatSupportLib.java:101)\r\n    at com.facebook.stetho.common.android.FragmentCompatSupportLib$FragmentAccessorSupportLib.getChildFragmentManager(FragmentCompatSupportLib.java:68)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInFragment(FragmentCompatUtil.java:120)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInFragmentManager(FragmentCompatUtil.java:99)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInActivity(FragmentCompatUtil.java:83)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInActivity(FragmentCompatUtil.java:56)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForView(FragmentCompatUtil.java:46)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.getElementForView(ViewGroupDescriptor.java:76)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.onGetChildren(ViewGroupDescriptor.java:47)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.onGetChildren(ViewGroupDescriptor.java:27)\r\n    at com.facebook.stetho.inspector.elements.AbstractChainedDescriptor.getChildren(AbstractChainedDescriptor.java:118)\r\n    at com.facebook.stetho.inspector.elements.Document.createShadowDocumentUpdate(Document.java:307)\r\n    at com.facebook.stetho.inspector.elements.Document.updateTree(Document.java:341)\r\n    at com.facebook.stetho.inspector.elements.Document.access$1200(Document.java:31)\r\n    at com.facebook.stetho.inspector.elements.Document$ProviderListener.onPossiblyChanged(Document.java:720)\r\n    at com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider$1.run(AndroidDocumentProvider.java:71)\r\n    at android.os.Handler.handleCallback(Handler.java:751)\r\n    at android.os.Handler.dispatchMessage(Handler.java:95)\r\n    at android.os.Looper.loop(Looper.java:154)\r\n    at android.app.ActivityThread.main(ActivityThread.java:6077)\r\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mariotaku": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/508", "title": "Make dumpapp available in PyPI", "body": "It would be nice if you could publish `dumpapp` into PyPI, so we can install without cloning whole source tree.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickbrew": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/458", "title": "Improve performance of Document.applyDocumentUpdate", "body": "There's a TODO that I left behind:\r\n\r\n```\r\n    // TODO: it'd be nice if we could delegate our calls into mPeerManager.sendNotificationToPeers()\r\n    //       to a background thread so as to offload the UI from JSON serialization stuff\r\n```\r\n\r\nFrom what I remember, this is the biggest time cost of this whole system. The JSON serialization and transmission over-the-wire can really tie up the UI thread badly for applications with \"large\" View hierarchies.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/228", "title": "ShadowDocument and ElementInfo should include attributes", "body": "The shadow DOM used for tree diffing does not include an element's attributes in the `ElementInfo`. This means that something like Search has to pull data from both the shadow DOM and the node descriptor, which is bad because then we're mixing snapshot vs. realtime inside of one algorithm.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/210", "title": "AndroidDocumentProvider is overzealous with updates", "body": "`DocumentProvider` is obligated to tell its `Listener` that the tree changed by calling the `DocumentProvider.Listener.onPossiblyChanged()` method. `DOM` then picks this up and re-reads the entire tree and does some smart stuff and pushes the delta over to Chrome.\n\nHowever, `AndroidDocumentProvider` calls `onPossiblyChanged()` once per second. Every second. Even if nothing could possibly have changed! If we can hook into something like `ViewTreeObserver` correctly then we should be able to have a better idea of when we should call actually call this method.\n\nThe goal: if the app is idle, then `AndroidDocumentProvider` should not call `onPossiblyChanged()`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/208", "title": "View --> Fragment cache can be optimized", "body": "In `ViewGroupDescriptor`, we have a cache for the result of calling `FragmentCompatUtil.findFragmentForView()`. For any `View` that we haven't seen, this necessitates a lot of linear searching. It's fairly brute force.\n\nHowever, we can do better. Since we're doing tree diffing now, that gives us a good time to instead build a `Fragment` <--> `View` mapping. Or, rather, when `AndroidDOMProvider` calls `DOMProvider.Listener.onPossiblyChanged()`, that's a fantastic time for us to _clear_ a `Fragment` <--> `View` cache which we could store in `AndroidDOMProvider`. Then, in `ViewGroupDescriptor`, we would ask our host (via `getHost()`) (the host is the `AndroidDOMProvider`) if it knows whether a `View` is owned by a `Fragment`. The first time this happens, we can populate the cache by traversing all the fragments and building the `Fragment` <--> `View` map.\n\nThis means we don't have to do a weird linear search for every new View we see. It means we will only need 1 `Map.Entry` per `Fragment` instead of 1 per `View`. It should be nice wins all around.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/199", "title": "CheckBox doesn't list checked state as attribute", "body": "Would be nice to see something like:\n\n```\n<checkbox id=\"@android:id/checkbox\" checked=\"true\"></checkbox>\n```\n\nSince CheckBox only supports setting a single change listener, we may need to poll this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/6cdd9bf939ee220c1ca1acaa64375c4cc5df7eb9", "message": "Merge pull request #544 from naturalwarren/ws_connection_npe\n\nNull check Interceptor.Chain.connection()."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/20164047", "body": "Yeah I noticed this too just now! ... PR #470 ", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20164047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/20164067", "body": "Note: This commit was accidentally pushed straight into master. It is the fix for #381.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20164067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rohitsingh14101992": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/439", "title": "Chrome hangs it doesn't respond whenever there is multipart request", "body": "", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "longinoa": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/421", "title": "stetho-sample crashes on M/N when selecting content providers", "body": "We need to implement the new permissions API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72522183", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72522183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72545077", "body": "Are we planning on moving this to maven when it is public? \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72545077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72547297", "body": "You should add tests or at least an issue for adding tests. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72547297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72570674", "body": "LGTM Squash and merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72570674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73256287", "body": "Strongly prefer http://patorjk.com/software/taag/#p=display&f=Slant%20Relief&t=STETHO the e in your version is unreadable\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73256287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73267486", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73267486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73600611", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73600611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23943740", "body": "Since you throw if there is no connection later, may want to throw if there is a connection here\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23943740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962271", "body": "why use `+=` when you can just assign it\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962666", "body": "This is kind of interesting, in `StethoURLConnectionManager` you allow the caller to pass in their own `ResponseHandler` but here you do not. I wonder if we want to try and hook into this by providing a factory in the constructor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962868", "body": "could this be because you arent declaring a dependency on `com.squareup.okio:okio:1.1.0`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24248299", "body": "Why is this on  page and not network?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24248299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24252628", "body": "ahhh I wanted to make sure that the welcome message would be the first message, rather than after some log lines. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24252628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24041536", "body": "make this a static constant\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24041536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24042595", "body": "you should add a `close()` override, pre JDK-8 `close()` ignores any exception thrown on `flush()`. you should just call `#close()` on `out`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24042595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048424", "body": "Do we want to expose a generic interface for registering decompression (or other encoding) facilities? something that would take a factory object and do dictionary lookups?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24092779", "body": "the gzip header is actually parsed in the `DecompressionHelper`, this is not aware of headers\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24092779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094186", "body": "This feels like the wrong interface since you are explicitly ignoring `decodedBytesRead` It almost looks like you want to make this be `protected void reportDataReceived()` and add protected getters for `mBytesRead` and `mDecodedBytesRead` in `DefaultResponseHandler`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094438", "body": "you want to use `ContentLengthResponseHandler` when `contentEncoding` is null.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096189", "body": "why not make this a `Runnable` then you wouldnt need to do the `return Void`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096490", "body": "this should probably not change signatures\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24098840", "body": "Who handles this `IOException` it seems kind of dangerous to leak this out in a `close()` call. If we get an `IOException` that should be on decompression of the stream that we are writing to a the file (eventually) It should be reported to the console rather than causing an `IOException` to go to the caller who made the web request.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24098840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104320", "body": "By header here I mean Content-Encoding header.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "irbull": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/365", "title": "Runtime#getProperties returns empty array when ownProperties == false", "body": "According to the [protocol](https://raw.githubusercontent.com/facebook/stetho/master/build-tools/protocol.json), Runtime#getProperties contains a parameter `ownProperties` with the following documentation: `If true, returns properties belonging only to the element itself, not to its prototype chain.`. While it's not clear what happens if ownProperties is false, I assume it should return all properties (not just it's own properties). However, Stetho is currently returning an empty array. When I connected to ChromeDevTools, it passes `false` for this value, meaning nothing is showing up in Scope Variables view.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AAverin": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/361", "title": "View highlighting is not working on Android Emulator API 16", "body": "View highlighting is not working on Android Emulator\n\nAttempt to click on the image results in `ChromeDevtoolsServer: Method not implemented: Not implemented: Input.emulateTouchFromMouseEvent`\n\nAlso get:\n\n```\nMethod not implemented: Not implemented: DOM.getNodeForLocation\nMethod not implemented: Not implemented: DOM.getBoxModel\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sybarite": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/312", "title": "Extending and adding a interceptor to give an output similar to default chrome network request", "body": "![image](https://cloud.githubusercontent.com/assets/882442/11627253/17adf3a4-9d0f-11e5-9978-7fd0677a2c37.png)\n\nI am using the okhttp interceptor provided by stetho, but I am only getting latency and download times. How do I provision okhttp to get a network timeline output like above? It would be great if a library developer would point to right direction to develop such a functionality if its not present\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jasta": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/239", "title": "Implement checkstyle for travis-CI code style checks", "body": "Now that the number of PRs is starting to heat up, it's time to enforce some of the basic style rules of the project using CI.  checkstyle seems like a mature and reasonable way to do that, though I'm open to suggestions :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/92", "title": "Implement Profiles tab (heap profiling)", "body": "This may be possible using a private API that powers DDMS' lame Allocation Tracking UI: https://android.googlesource.com/platform/libcore/+/android-5.1.0_r1/dalvik/src/main/java/org/apache/harmony/dalvik/ddmc/DdmVmInternal.java\n\nThis API has been stable for a very long time AFAICT (I looked all the way back to Ice Cream Sandwich).  I believe it will continue to be stable as well.\n\nThe format of the `getRecentAllocations` method is defined by ddmlib: https://android.googlesource.com/platform/tools/base/+/android-5.1.0_r1/ddmlib/src/main/java/com/android/ddmlib/AllocationsParser.java\n\nThe major issue to overcome is the seemingly incomplete `heapsnapshot` file format that Chrome uses.  In particular, there's limited UI and file format support for allocation stack traces and the format exported/imported by DevTools appears to even lose the limited information that does currently exist.  Upstream discussion started at: https://code.google.com/p/chromium/issues/detail?id=277984#c34\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/58", "title": "Show application icon in chrome://inspect", "body": "There's a spot for the app icon to appear next to the process / app name in the `chrome://inspect` UI.  We should extract this from the manifest and display it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/0cbcea7715a939999a2a6999858487f5da92f091", "message": "Merge pull request #585 from jasta/fatjar-exclude-R\n\nFix fatjar compilation including android support library R.class files"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f868b8e35a8ce148bc61a9076f413c649c091f45", "message": "Merge pull request #529 from misakuo/bugfix-ws\n\nFix the missing notification on WebSocket handshake response received"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9512c7554e835f27360b9efc89e05da905604686", "message": "Merge pull request #543 from schrnz/patch-1\n\nFixed anchor formatting + issue link"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2a6d9fc79b3d3f8ddb018edb27a99c12e1a98973", "message": "Merge pull request #545 from zsmb13/patch-1\n\nFixed a typo in the websocket flow diagram"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/42f375f959e64e204b43983c7b1f582dc44e2ffc", "message": "Merge pull request #584 from jasta/interceptor-better-error\n\nImprove error message when addInterceptor is used instead of addNetworkInterceptor"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/37becae619944ea77c9e030012ca4256d9ece918", "message": "Merge pull request #551 from ozmium/patch-1\n\nFix issue #480 : Documentation to add MyApplication to AndroidManifest.xml"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/304c1cb7a9fc50a9addd0f52edff76afb9d60488", "message": "Merge pull request #574 from YongdongHe/master\n\nImprove README.md"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0afd55d31d1057f47251b08e206f19516150d54f", "message": "Merge pull request #578 from funny9527/master\n\nfix payloadData length error"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3a60ecb78082a227b11d608209f0b718283d4fd1", "message": "Merge pull request #576 from IgorGanapolsky/master\n\nRemove extra parenthesis."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e5b869911dd7d0dc429dc1e8a831815e01ed12d5", "message": "Merge pull request #525 from friederbluemle/update-project\n\nUpdate build dependencies"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4556718581bc5fe32bb21833f38f580b5b8b2782", "message": "Fix build break and test break"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d18432456512736dfdccb718caac6e9bdf43447a", "message": "Fix fatjar compilation including android support library R.class files\n\nThese files would conflict with any other version of the support\nlibrary the user tried to add and are not otherwise required or\nimportant for Stetho to function.\n\nCloses #566"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d9bdbfe7e00e82d67d12e59f811211a16074fa49", "message": "Improve error message when addInterceptor is used instead of addNetworkInterceptor\n\nPreviously this would yield a NullPointerException and was not very\ndiscoverable/actionable for users.\n\nCloses #580"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/05910cc9c7fe5de8a0b44231b06c98bd7e251088", "message": "Merge pull request #527 from jasta/snapshot-v1.5.1\n\nUpdate to 1.5.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f1c51afb77995142ff7b484477ad4e60a4107b43", "message": "Update to 1.5.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c15b5521f2793a32c9a03349e0680c0e37f73b7f", "message": "Merge pull request #526 from jasta/release-v1.5.0\n\nRelease v1.5.0"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/247", "title": "Allow exporting DOM elements to the Console", "body": "This assigns the special variable $0 to match the selection in the\nElements tab.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/241", "title": "Add checkstyle rules", "body": "This is intended to run on Travis-CI to fail builds which don't adhere\nto the style.\n\nCloses #239 \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72286522", "body": "Taking this in a little bit different of a direction.  Will re-open with a stetho-okhttp module that doesn't modify the sample app.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72286522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72549487", "body": "Yes, many other Facebook open source projects do this (including the Android SDK).  With that, you can deploy actual AAR files with dependency data.  Much more flexible and convenient.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72549487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72933119", "body": "I did some digging into okhttp and how it relates to HttpURLConnection on Android.  Turns out, okhttp has a documented way of bypassing transparent gzip support and letting you handle it yourself manually: https://github.com/square/okhttp/wiki/Calls (see Rewriting Requests) that works even when it is using HttpURLConnection.  I believe this is our perfect opportunity to just implement it ourselves, ahead of OkHttp, using the same logic.  I'm going to experiment with this to see if we can't get the support working.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72933119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73178664", "body": "![Screenshot](https://cloud.githubusercontent.com/assets/83791/6074273/8eecb878-ad6f-11e4-8e52-99f85e871c75.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73178664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73263286", "body": "I disagree the all caps version looks better, but yeah the lowercase \"e\" does look strange.  That said, it's not exactly about being legible, it's pretty clear given the context what it says :)\n\nI might try hand editing it tho.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73263286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345843", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74928662", "body": "Thanks! :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74928662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932971", "body": "Good to know.  Part way through development we started to realize the storied history in part and have some conflicts in the APIs/internals.  We'll be working to clean those up moving forward.  I'll leave this task open since its covering a major API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933581", "body": "Of course, but do note that we have a CLA process that you must complete before we can merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74936351", "body": "@paulirish, any chance you could take a look at #13?  We've been having trouble lately with Chrome 40 breaking things in seemingly undocumented ways which seems very much related to the fork you mentioned.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74936351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949651", "body": "Are you using the Maven/Gradle dependency or the JAR?  Things have been a little crazy on launch day and we might have made a mistake in one of the integration paths.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950900", "body": "Yes, we made a mistake bundling the commons-cli dependency.  To fix your problem quickly, add this JAR as well: http://central.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\n\nWe'll fix it for everyone else shortly by creating a fatjar.  Sorry about that!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950943", "body": "Oops, shouldn't have closed yet :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9855788", "body": "What do you mean?  I had to remove this due to Gradle's usage of a lock file in the .gradle dir which screws up caching performance.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9855788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10553286", "body": "Prefer using `containsKey`.  Reads more clearly IMO.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10553286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10553296", "body": "Looks good.  PR next time :P\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10553296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10570155", "body": "nit: prefer `HoneycombAndBeyond` to be clear.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10570155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10570157", "body": "Prefer `PreHoneycomb` and a separate class for clarity; but I'm fine how it is.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10570157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23951266", "body": "Resolved this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23951266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23963657", "body": "No, it's because okio itself contains code that Android's linter thinks is dangerous (`java.nio.File` does not exist in Android).  They are trying to warn you that you may be using a library with dependencies on \"standard\" Java features that Android doesn't provide and that things will likely go horribly awry at runtime.  In okio's case, these references are intentionally guarded so that okio can be used both on Android and in standard Java environments.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23963657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973177", "body": "I'm estimating that we'll want to enhance this with header sizes, at which point the `+=` usage will make more sense.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973288", "body": "The reason for this is that I intend to encapsulate all relevant details inside the interceptor.  I have much better access to low-level details here and can automatically do things like count the compressed and decompressed streams separately by reconstructing the `GZIPInputStream` myself.  This is possible because okhttp explicitly documents that it automatically gzip decompresses streams whereas `HttpURLConnection` does not.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24251307", "body": "The console feature is seemingly enabled by the invocation of `Runtime.executionContextCreated` so I placed it here knowing that it would work.  That said, maybe `Console#enable` would be more appropriate.  Not sure why you think we should put it in `Network` tho.  This doesn't have anything to do with the Network tab.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24251307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046532", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046696", "body": "Hmm?  JDK-8 doesn't mean anything to Android specifically, and according to Android the behaviour has been correct at least as far back as Jelly Bean (don't have gingerbread locally right now).  Also, I'm not sure why my filter output stream would need to solve a bug that other filter output streams don't solve?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048705", "body": "I'm not sure that would be useful given the current state of the `Content-Encoding` standard and convention.  The current available selections are: http://en.wikipedia.org/wiki/HTTP_compression#Content-Encoding_tokens\n\nAnd personally, I've never seen anything other than `deflate` and `gzip` in use on any web site.  Supporting \"identity\" (doing nothing) may be useful since it is publicly documented in Android's `HttpURLConnection`, though.  FWIW though, I've never seen that used and didn't even know about it until recently.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104176", "body": "Not sure what you mean.  The fundamental difference between `InflaterInputStream` and `GZIPInputStream` is that the former parses the GZIP-specific header, whereas the later parses the Inflate ZLIB header.  In this sense, `InflaterOutputStream` also expects a ZLIB header, but my `GunzippingOutputStream` instead knows to expect the gzip header.  `DecompressionHelper` is only there to select which `OutputStream` variety is appropriate given what format the server told us it used.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104520", "body": "I had that originally but it required making almost the entire class leaky so that the caller could access `mNetworkEventReporter`, `mRequestId`, etc and manually invoke the `dataReceived` hook.  This design made it less clear what the intended purpose of subclassing had (that is, to ignore events and/or values not extend them)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104765", "body": "Oops.  Note that in practice this unfortunately rarely makes a difference.  The way `HttpURLConnection` is implemented, I believe, is such that both `Content-Encoding` and `Content-Length` are stripped out to prevent the caller from making silly mistakes in handling the response.  A very common misuse is to do things like:\n\n``` java\nint length = conn.getContentLength();\nbyte[] buf = conn.getInputStream.readFully(length);\n```\n\nThis of course would break terribly if transparent gzip decompression was in use.  For this reason, they make `getContentLength` return `-1`, and `getContentEncoding` returns `null` always.  The reason I've coded things differently is because this behaviour is not documented, and therefore not reliable.  If it were to change, I'd like to handle it properly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105059", "body": "Then I would have to manually handle the exception instead of using `Future` and `Callable`'s built-in support for it.  This would look like:\n\n``` java\nfuture.get();\nmThrowingRunnable.rethrowIfApplicable();\n\n...\n\npublic void run() {\n  try {\n    doStuff();\n  } catch (IOException e) {\n    mFailure = e;\n  }\n}\n\npublic void rethrowIfApplicable() throws IOException {\n  if (mFailure != null) {\n    throw mFailure;\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105122", "body": "See above.  The alternative will leak a lot more about how the class works under the hood.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105245", "body": "The layer this is operating at is immediately adjacent the `FileOutputStream` itself.  Rethrowing in this manner is a way to propagate to higher levels (in particular to `ResponseHandlingInputStream`) so that it can be shown in the console.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lynfogeek": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/68", "title": "Display the DumperPlugin in the Developer Tools", "body": "The `DumperPlugin`s are great, but it would be even better to embed them into the DevTools.\nOne solution could be to create a new tab ([like this extension does](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utm_source=chrome-app-launcher-info-dialog)) , and list there all the enable plugins. Whenever the user click on one of them, it pulls the data and display it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/68/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "funny9527": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70", "message": "fix payloadData length error\n\nfix payloadData length error when it's length is more than 0xffff"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IgorGanapolsky": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/1983a5303592b33a2aed2d0e2408fa0b003742a5", "message": "Remove extra parentheses."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "YongdongHe": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/50ed10a51a5a1a9e3ee798492c98ee3566d4ee50", "message": "Improve code style\n\nImprove code style"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/98f1e6d04986281cbf7f3e862d63ad97a640f690", "message": "Improve README.md\n\nThe first use, the developer may not know what type jsRuntimeBuilder"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ozmium": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/653074ee1e7e8198c60089275ce1cc25f54d69a4", "message": "Fix issue #480 : Documentation to add MyApplication to AndroidManifest.xml\n\nThe MyApplication Java class must be added to the AndroidManifest.xml, otherwise there will be no \"Inspect\" button that appears in chrome://inspect/#devices\r\n\r\nAdd this explanation in the documentation of Readme.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "friederbluemle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/156575f948232fff053d2619f3348a9b897ddeee", "message": "Update Gradle wrapper to 4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c5accb83f024ae2c8d61c81067428d8d4d8a3a7a", "message": "Update Android Gradle plugin to 2.3.3"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naturalwarren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/d0afaad82235b5b5121dee1c08f0badf8033e5f8", "message": "Place nullable after private."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/68709f14486b26dfc0259fcaa44d199de2ed6000", "message": "Add @Nullable to constructor and field."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/59791f8f97f98afa106e63d6e9bc7e51a8211a61", "message": "Null check Interceptor.Chain.connection()."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zsmb13": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/bdc227f83e5672e115deb4a1e91a3f5a4fb03060", "message": "Fixed a typo in the websocket flow diagram\n\nObvious typo, a misspelled function name."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schrnz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/c569664ebcd20a896e6e2d10cb22567fa7541377", "message": "Fixed anchor formatting + issue link\n\nThe anchor formatting was broken, now fixed. \r\nThe syntax of the linked issue does not seem to work, hence replaced by actual link."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "misakuo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/140d95dfdd107bd4996048cc3ba5adfeca257e2e", "message": "fix the missing notification on ws handshake response"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thebehera": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/564", "title": "CheckCharset on PostData to prevent hanging or crashing", "body": "This should resolve the error around: https://github.com/facebook/stetho/issues/329\r\nUse CharsetDecoder to decode the byte[]. if it reports an error, bail out and report to the chrome inspector that `Charset in POST/PUT is not UTF-8. Data (length:X) cannot be represented as a string.`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dcolascione": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345783", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "facebook-github-bot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932264", "body": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941753", "body": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74942352", "body": "Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74942352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74945448", "body": "Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74945448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "paulirish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933177", "body": "In terms of vocabulary: \n- Chrome DevTools - name of the total product\n- (Chrome) DevTools frontend - the webapp that provides the UI\n- [Chrome Debugger Protocol](https://developer.chrome.com/devtools/docs/debugger-protocol) - well, you know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933247", "body": "> I'll leave this task open since its covering a major API. \n\nyeah seems good. Can I open a PR to update the readme?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952232", "body": "@jasta yeah i'll jump in over at #13. Technically this is unrelated to the fork. :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "JakeWharton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941902", "body": "@facebook-github-bot done brah\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "caoxuwen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949932", "body": "just using the JAR\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "utkindg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854362", "body": "Home\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mannyman1115": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854832", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/9854835", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cubanrob7": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854856", "body": "Tnks\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "potyl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/18395211", "body": "Can you tell us under which circumstances loading without `Packages.` would not be  what we want?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/18395211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/18395264", "body": "My guess is that if we try to preserve backwards compatibility with apps that might be using `Package.com.company.foo` is that we should check if `className` starts with `Package.`. If it doesn't we inject `Package.`.\n\n```\nString packageClassName = className.startsWith(\"Packages.\") ? className :  \"Packages.\" + className;\nString expression = String.format(\"importClass(%s)\", packageClassName);\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/18395264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "TWiStErRob": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/20163618", "body": "@rickbrew is `> 0` intentional? From [`binarySearch`](https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#binarySearch(java.util.List,%20T)):\r\n\r\n> Note that this guarantees that the return value will be >= 0 if and only if the key is found.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20163618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}